
balise_freeRTOS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015d48  08000140  08000140  00001140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002b88  08015e88  08015e88  00016e88  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08018a10  08018a10  00019a10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08018a18  08018a18  00019a18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08018a1c  08018a1c  00019a1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000002f4  20000008  08018a20  0001a008  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00005894  20000300  08018d14  0001a300  2**3
                  ALLOC
  8 ._user_heap_stack 00000604  20005b94  08018d14  0001ab94  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  0001a2fc  2**0
                  CONTENTS, READONLY
 10 .debug_info   0006453b  00000000  00000000  0001a32c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000b645  00000000  00000000  0007e867  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_loclists 0002ed8d  00000000  00000000  00089eac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_aranges 00002998  00000000  00000000  000b8c40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 00005cf2  00000000  00000000  000bb5d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  0003105a  00000000  00000000  000c12ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00060b4a  00000000  00000000  000f2324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0010d980  00000000  00000000  00152e6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  002607ee  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00009538  00000000  00000000  00260834  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 0000006b  00000000  00000000  00269d6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	@ (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	@ (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	@ (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000300 	.word	0x20000300
 800015c:	00000000 	.word	0x00000000
 8000160:	08015e70 	.word	0x08015e70

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	@ (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	@ (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	@ (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000304 	.word	0x20000304
 800017c:	08015e70 	.word	0x08015e70

08000180 <memchr>:
 8000180:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000184:	2a10      	cmp	r2, #16
 8000186:	db2b      	blt.n	80001e0 <memchr+0x60>
 8000188:	f010 0f07 	tst.w	r0, #7
 800018c:	d008      	beq.n	80001a0 <memchr+0x20>
 800018e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000192:	3a01      	subs	r2, #1
 8000194:	428b      	cmp	r3, r1
 8000196:	d02d      	beq.n	80001f4 <memchr+0x74>
 8000198:	f010 0f07 	tst.w	r0, #7
 800019c:	b342      	cbz	r2, 80001f0 <memchr+0x70>
 800019e:	d1f6      	bne.n	800018e <memchr+0xe>
 80001a0:	b4f0      	push	{r4, r5, r6, r7}
 80001a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001aa:	f022 0407 	bic.w	r4, r2, #7
 80001ae:	f07f 0700 	mvns.w	r7, #0
 80001b2:	2300      	movs	r3, #0
 80001b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001b8:	3c08      	subs	r4, #8
 80001ba:	ea85 0501 	eor.w	r5, r5, r1
 80001be:	ea86 0601 	eor.w	r6, r6, r1
 80001c2:	fa85 f547 	uadd8	r5, r5, r7
 80001c6:	faa3 f587 	sel	r5, r3, r7
 80001ca:	fa86 f647 	uadd8	r6, r6, r7
 80001ce:	faa5 f687 	sel	r6, r5, r7
 80001d2:	b98e      	cbnz	r6, 80001f8 <memchr+0x78>
 80001d4:	d1ee      	bne.n	80001b4 <memchr+0x34>
 80001d6:	bcf0      	pop	{r4, r5, r6, r7}
 80001d8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001dc:	f002 0207 	and.w	r2, r2, #7
 80001e0:	b132      	cbz	r2, 80001f0 <memchr+0x70>
 80001e2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e6:	3a01      	subs	r2, #1
 80001e8:	ea83 0301 	eor.w	r3, r3, r1
 80001ec:	b113      	cbz	r3, 80001f4 <memchr+0x74>
 80001ee:	d1f8      	bne.n	80001e2 <memchr+0x62>
 80001f0:	2000      	movs	r0, #0
 80001f2:	4770      	bx	lr
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr
 80001f8:	2d00      	cmp	r5, #0
 80001fa:	bf06      	itte	eq
 80001fc:	4635      	moveq	r5, r6
 80001fe:	3803      	subeq	r0, #3
 8000200:	3807      	subne	r0, #7
 8000202:	f015 0f01 	tst.w	r5, #1
 8000206:	d107      	bne.n	8000218 <memchr+0x98>
 8000208:	3001      	adds	r0, #1
 800020a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800020e:	bf02      	ittt	eq
 8000210:	3001      	addeq	r0, #1
 8000212:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000216:	3001      	addeq	r0, #1
 8000218:	bcf0      	pop	{r4, r5, r6, r7}
 800021a:	3801      	subs	r0, #1
 800021c:	4770      	bx	lr
 800021e:	bf00      	nop

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <__aeabi_drsub>:
 8000230:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000234:	e002      	b.n	800023c <__adddf3>
 8000236:	bf00      	nop

08000238 <__aeabi_dsub>:
 8000238:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800023c <__adddf3>:
 800023c:	b530      	push	{r4, r5, lr}
 800023e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000242:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000246:	ea94 0f05 	teq	r4, r5
 800024a:	bf08      	it	eq
 800024c:	ea90 0f02 	teqeq	r0, r2
 8000250:	bf1f      	itttt	ne
 8000252:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000256:	ea55 0c02 	orrsne.w	ip, r5, r2
 800025a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800025e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000262:	f000 80e2 	beq.w	800042a <__adddf3+0x1ee>
 8000266:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800026a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800026e:	bfb8      	it	lt
 8000270:	426d      	neglt	r5, r5
 8000272:	dd0c      	ble.n	800028e <__adddf3+0x52>
 8000274:	442c      	add	r4, r5
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	ea82 0000 	eor.w	r0, r2, r0
 8000282:	ea83 0101 	eor.w	r1, r3, r1
 8000286:	ea80 0202 	eor.w	r2, r0, r2
 800028a:	ea81 0303 	eor.w	r3, r1, r3
 800028e:	2d36      	cmp	r5, #54	@ 0x36
 8000290:	bf88      	it	hi
 8000292:	bd30      	pophi	{r4, r5, pc}
 8000294:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000298:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800029c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002a0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002a4:	d002      	beq.n	80002ac <__adddf3+0x70>
 80002a6:	4240      	negs	r0, r0
 80002a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002ac:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002b4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b8:	d002      	beq.n	80002c0 <__adddf3+0x84>
 80002ba:	4252      	negs	r2, r2
 80002bc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c0:	ea94 0f05 	teq	r4, r5
 80002c4:	f000 80a7 	beq.w	8000416 <__adddf3+0x1da>
 80002c8:	f1a4 0401 	sub.w	r4, r4, #1
 80002cc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d0:	db0d      	blt.n	80002ee <__adddf3+0xb2>
 80002d2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002d6:	fa22 f205 	lsr.w	r2, r2, r5
 80002da:	1880      	adds	r0, r0, r2
 80002dc:	f141 0100 	adc.w	r1, r1, #0
 80002e0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002e4:	1880      	adds	r0, r0, r2
 80002e6:	fa43 f305 	asr.w	r3, r3, r5
 80002ea:	4159      	adcs	r1, r3
 80002ec:	e00e      	b.n	800030c <__adddf3+0xd0>
 80002ee:	f1a5 0520 	sub.w	r5, r5, #32
 80002f2:	f10e 0e20 	add.w	lr, lr, #32
 80002f6:	2a01      	cmp	r2, #1
 80002f8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002fc:	bf28      	it	cs
 80002fe:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000302:	fa43 f305 	asr.w	r3, r3, r5
 8000306:	18c0      	adds	r0, r0, r3
 8000308:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800030c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000310:	d507      	bpl.n	8000322 <__adddf3+0xe6>
 8000312:	f04f 0e00 	mov.w	lr, #0
 8000316:	f1dc 0c00 	rsbs	ip, ip, #0
 800031a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800031e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000322:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000326:	d31b      	bcc.n	8000360 <__adddf3+0x124>
 8000328:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800032c:	d30c      	bcc.n	8000348 <__adddf3+0x10c>
 800032e:	0849      	lsrs	r1, r1, #1
 8000330:	ea5f 0030 	movs.w	r0, r0, rrx
 8000334:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000338:	f104 0401 	add.w	r4, r4, #1
 800033c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000340:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000344:	f080 809a 	bcs.w	800047c <__adddf3+0x240>
 8000348:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800034c:	bf08      	it	eq
 800034e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000352:	f150 0000 	adcs.w	r0, r0, #0
 8000356:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800035a:	ea41 0105 	orr.w	r1, r1, r5
 800035e:	bd30      	pop	{r4, r5, pc}
 8000360:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000364:	4140      	adcs	r0, r0
 8000366:	eb41 0101 	adc.w	r1, r1, r1
 800036a:	3c01      	subs	r4, #1
 800036c:	bf28      	it	cs
 800036e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000372:	d2e9      	bcs.n	8000348 <__adddf3+0x10c>
 8000374:	f091 0f00 	teq	r1, #0
 8000378:	bf04      	itt	eq
 800037a:	4601      	moveq	r1, r0
 800037c:	2000      	moveq	r0, #0
 800037e:	fab1 f381 	clz	r3, r1
 8000382:	bf08      	it	eq
 8000384:	3320      	addeq	r3, #32
 8000386:	f1a3 030b 	sub.w	r3, r3, #11
 800038a:	f1b3 0220 	subs.w	r2, r3, #32
 800038e:	da0c      	bge.n	80003aa <__adddf3+0x16e>
 8000390:	320c      	adds	r2, #12
 8000392:	dd08      	ble.n	80003a6 <__adddf3+0x16a>
 8000394:	f102 0c14 	add.w	ip, r2, #20
 8000398:	f1c2 020c 	rsb	r2, r2, #12
 800039c:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a0:	fa21 f102 	lsr.w	r1, r1, r2
 80003a4:	e00c      	b.n	80003c0 <__adddf3+0x184>
 80003a6:	f102 0214 	add.w	r2, r2, #20
 80003aa:	bfd8      	it	le
 80003ac:	f1c2 0c20 	rsble	ip, r2, #32
 80003b0:	fa01 f102 	lsl.w	r1, r1, r2
 80003b4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b8:	bfdc      	itt	le
 80003ba:	ea41 010c 	orrle.w	r1, r1, ip
 80003be:	4090      	lslle	r0, r2
 80003c0:	1ae4      	subs	r4, r4, r3
 80003c2:	bfa2      	ittt	ge
 80003c4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c8:	4329      	orrge	r1, r5
 80003ca:	bd30      	popge	{r4, r5, pc}
 80003cc:	ea6f 0404 	mvn.w	r4, r4
 80003d0:	3c1f      	subs	r4, #31
 80003d2:	da1c      	bge.n	800040e <__adddf3+0x1d2>
 80003d4:	340c      	adds	r4, #12
 80003d6:	dc0e      	bgt.n	80003f6 <__adddf3+0x1ba>
 80003d8:	f104 0414 	add.w	r4, r4, #20
 80003dc:	f1c4 0220 	rsb	r2, r4, #32
 80003e0:	fa20 f004 	lsr.w	r0, r0, r4
 80003e4:	fa01 f302 	lsl.w	r3, r1, r2
 80003e8:	ea40 0003 	orr.w	r0, r0, r3
 80003ec:	fa21 f304 	lsr.w	r3, r1, r4
 80003f0:	ea45 0103 	orr.w	r1, r5, r3
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	f1c4 040c 	rsb	r4, r4, #12
 80003fa:	f1c4 0220 	rsb	r2, r4, #32
 80003fe:	fa20 f002 	lsr.w	r0, r0, r2
 8000402:	fa01 f304 	lsl.w	r3, r1, r4
 8000406:	ea40 0003 	orr.w	r0, r0, r3
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	fa21 f004 	lsr.w	r0, r1, r4
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	f094 0f00 	teq	r4, #0
 800041a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800041e:	bf06      	itte	eq
 8000420:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000424:	3401      	addeq	r4, #1
 8000426:	3d01      	subne	r5, #1
 8000428:	e74e      	b.n	80002c8 <__adddf3+0x8c>
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf18      	it	ne
 8000430:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000434:	d029      	beq.n	800048a <__adddf3+0x24e>
 8000436:	ea94 0f05 	teq	r4, r5
 800043a:	bf08      	it	eq
 800043c:	ea90 0f02 	teqeq	r0, r2
 8000440:	d005      	beq.n	800044e <__adddf3+0x212>
 8000442:	ea54 0c00 	orrs.w	ip, r4, r0
 8000446:	bf04      	itt	eq
 8000448:	4619      	moveq	r1, r3
 800044a:	4610      	moveq	r0, r2
 800044c:	bd30      	pop	{r4, r5, pc}
 800044e:	ea91 0f03 	teq	r1, r3
 8000452:	bf1e      	ittt	ne
 8000454:	2100      	movne	r1, #0
 8000456:	2000      	movne	r0, #0
 8000458:	bd30      	popne	{r4, r5, pc}
 800045a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800045e:	d105      	bne.n	800046c <__adddf3+0x230>
 8000460:	0040      	lsls	r0, r0, #1
 8000462:	4149      	adcs	r1, r1
 8000464:	bf28      	it	cs
 8000466:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800046a:	bd30      	pop	{r4, r5, pc}
 800046c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000470:	bf3c      	itt	cc
 8000472:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000476:	bd30      	popcc	{r4, r5, pc}
 8000478:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800047c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000480:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000484:	f04f 0000 	mov.w	r0, #0
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf1a      	itte	ne
 8000490:	4619      	movne	r1, r3
 8000492:	4610      	movne	r0, r2
 8000494:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000498:	bf1c      	itt	ne
 800049a:	460b      	movne	r3, r1
 800049c:	4602      	movne	r2, r0
 800049e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004a2:	bf06      	itte	eq
 80004a4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a8:	ea91 0f03 	teqeq	r1, r3
 80004ac:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	bf00      	nop

080004b4 <__aeabi_ui2d>:
 80004b4:	f090 0f00 	teq	r0, #0
 80004b8:	bf04      	itt	eq
 80004ba:	2100      	moveq	r1, #0
 80004bc:	4770      	bxeq	lr
 80004be:	b530      	push	{r4, r5, lr}
 80004c0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004c4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c8:	f04f 0500 	mov.w	r5, #0
 80004cc:	f04f 0100 	mov.w	r1, #0
 80004d0:	e750      	b.n	8000374 <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_i2d>:
 80004d4:	f090 0f00 	teq	r0, #0
 80004d8:	bf04      	itt	eq
 80004da:	2100      	moveq	r1, #0
 80004dc:	4770      	bxeq	lr
 80004de:	b530      	push	{r4, r5, lr}
 80004e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004e4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004e8:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004ec:	bf48      	it	mi
 80004ee:	4240      	negmi	r0, r0
 80004f0:	f04f 0100 	mov.w	r1, #0
 80004f4:	e73e      	b.n	8000374 <__adddf3+0x138>
 80004f6:	bf00      	nop

080004f8 <__aeabi_f2d>:
 80004f8:	0042      	lsls	r2, r0, #1
 80004fa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004fe:	ea4f 0131 	mov.w	r1, r1, rrx
 8000502:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000506:	bf1f      	itttt	ne
 8000508:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800050c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000510:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000514:	4770      	bxne	lr
 8000516:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800051a:	bf08      	it	eq
 800051c:	4770      	bxeq	lr
 800051e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000522:	bf04      	itt	eq
 8000524:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000528:	4770      	bxeq	lr
 800052a:	b530      	push	{r4, r5, lr}
 800052c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000534:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000538:	e71c      	b.n	8000374 <__adddf3+0x138>
 800053a:	bf00      	nop

0800053c <__aeabi_ul2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f04f 0500 	mov.w	r5, #0
 800054a:	e00a      	b.n	8000562 <__aeabi_l2d+0x16>

0800054c <__aeabi_l2d>:
 800054c:	ea50 0201 	orrs.w	r2, r0, r1
 8000550:	bf08      	it	eq
 8000552:	4770      	bxeq	lr
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800055a:	d502      	bpl.n	8000562 <__aeabi_l2d+0x16>
 800055c:	4240      	negs	r0, r0
 800055e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000562:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000566:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800056a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800056e:	f43f aed8 	beq.w	8000322 <__adddf3+0xe6>
 8000572:	f04f 0203 	mov.w	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058a:	f1c2 0320 	rsb	r3, r2, #32
 800058e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000592:	fa20 f002 	lsr.w	r0, r0, r2
 8000596:	fa01 fe03 	lsl.w	lr, r1, r3
 800059a:	ea40 000e 	orr.w	r0, r0, lr
 800059e:	fa21 f102 	lsr.w	r1, r1, r2
 80005a2:	4414      	add	r4, r2
 80005a4:	e6bd      	b.n	8000322 <__adddf3+0xe6>
 80005a6:	bf00      	nop

080005a8 <__aeabi_dmul>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005ae:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005b6:	bf1d      	ittte	ne
 80005b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005bc:	ea94 0f0c 	teqne	r4, ip
 80005c0:	ea95 0f0c 	teqne	r5, ip
 80005c4:	f000 f8de 	bleq	8000784 <__aeabi_dmul+0x1dc>
 80005c8:	442c      	add	r4, r5
 80005ca:	ea81 0603 	eor.w	r6, r1, r3
 80005ce:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005d6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005da:	bf18      	it	ne
 80005dc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005e4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005e8:	d038      	beq.n	800065c <__aeabi_dmul+0xb4>
 80005ea:	fba0 ce02 	umull	ip, lr, r0, r2
 80005ee:	f04f 0500 	mov.w	r5, #0
 80005f2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005f6:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005fa:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005fe:	f04f 0600 	mov.w	r6, #0
 8000602:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000606:	f09c 0f00 	teq	ip, #0
 800060a:	bf18      	it	ne
 800060c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000610:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000614:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000618:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800061c:	d204      	bcs.n	8000628 <__aeabi_dmul+0x80>
 800061e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000622:	416d      	adcs	r5, r5
 8000624:	eb46 0606 	adc.w	r6, r6, r6
 8000628:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800062c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000630:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000634:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000638:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800063c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000640:	bf88      	it	hi
 8000642:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000646:	d81e      	bhi.n	8000686 <__aeabi_dmul+0xde>
 8000648:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800064c:	bf08      	it	eq
 800064e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000652:	f150 0000 	adcs.w	r0, r0, #0
 8000656:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000660:	ea46 0101 	orr.w	r1, r6, r1
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	ea81 0103 	eor.w	r1, r1, r3
 800066c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000670:	bfc2      	ittt	gt
 8000672:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000676:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067a:	bd70      	popgt	{r4, r5, r6, pc}
 800067c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000680:	f04f 0e00 	mov.w	lr, #0
 8000684:	3c01      	subs	r4, #1
 8000686:	f300 80ab 	bgt.w	80007e0 <__aeabi_dmul+0x238>
 800068a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800068e:	bfde      	ittt	le
 8000690:	2000      	movle	r0, #0
 8000692:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000696:	bd70      	pople	{r4, r5, r6, pc}
 8000698:	f1c4 0400 	rsb	r4, r4, #0
 800069c:	3c20      	subs	r4, #32
 800069e:	da35      	bge.n	800070c <__aeabi_dmul+0x164>
 80006a0:	340c      	adds	r4, #12
 80006a2:	dc1b      	bgt.n	80006dc <__aeabi_dmul+0x134>
 80006a4:	f104 0414 	add.w	r4, r4, #20
 80006a8:	f1c4 0520 	rsb	r5, r4, #32
 80006ac:	fa00 f305 	lsl.w	r3, r0, r5
 80006b0:	fa20 f004 	lsr.w	r0, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea40 0002 	orr.w	r0, r0, r2
 80006bc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006c0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c8:	fa21 f604 	lsr.w	r6, r1, r4
 80006cc:	eb42 0106 	adc.w	r1, r2, r6
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f1c4 040c 	rsb	r4, r4, #12
 80006e0:	f1c4 0520 	rsb	r5, r4, #32
 80006e4:	fa00 f304 	lsl.w	r3, r0, r4
 80006e8:	fa20 f005 	lsr.w	r0, r0, r5
 80006ec:	fa01 f204 	lsl.w	r2, r1, r4
 80006f0:	ea40 0002 	orr.w	r0, r0, r2
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006fc:	f141 0100 	adc.w	r1, r1, #0
 8000700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000704:	bf08      	it	eq
 8000706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070a:	bd70      	pop	{r4, r5, r6, pc}
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f205 	lsl.w	r2, r0, r5
 8000714:	ea4e 0e02 	orr.w	lr, lr, r2
 8000718:	fa20 f304 	lsr.w	r3, r0, r4
 800071c:	fa01 f205 	lsl.w	r2, r1, r5
 8000720:	ea43 0302 	orr.w	r3, r3, r2
 8000724:	fa21 f004 	lsr.w	r0, r1, r4
 8000728:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800072c:	fa21 f204 	lsr.w	r2, r1, r4
 8000730:	ea20 0002 	bic.w	r0, r0, r2
 8000734:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000738:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800073c:	bf08      	it	eq
 800073e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	f094 0f00 	teq	r4, #0
 8000748:	d10f      	bne.n	800076a <__aeabi_dmul+0x1c2>
 800074a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800074e:	0040      	lsls	r0, r0, #1
 8000750:	eb41 0101 	adc.w	r1, r1, r1
 8000754:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000758:	bf08      	it	eq
 800075a:	3c01      	subeq	r4, #1
 800075c:	d0f7      	beq.n	800074e <__aeabi_dmul+0x1a6>
 800075e:	ea41 0106 	orr.w	r1, r1, r6
 8000762:	f095 0f00 	teq	r5, #0
 8000766:	bf18      	it	ne
 8000768:	4770      	bxne	lr
 800076a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800076e:	0052      	lsls	r2, r2, #1
 8000770:	eb43 0303 	adc.w	r3, r3, r3
 8000774:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000778:	bf08      	it	eq
 800077a:	3d01      	subeq	r5, #1
 800077c:	d0f7      	beq.n	800076e <__aeabi_dmul+0x1c6>
 800077e:	ea43 0306 	orr.w	r3, r3, r6
 8000782:	4770      	bx	lr
 8000784:	ea94 0f0c 	teq	r4, ip
 8000788:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800078c:	bf18      	it	ne
 800078e:	ea95 0f0c 	teqne	r5, ip
 8000792:	d00c      	beq.n	80007ae <__aeabi_dmul+0x206>
 8000794:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000798:	bf18      	it	ne
 800079a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800079e:	d1d1      	bne.n	8000744 <__aeabi_dmul+0x19c>
 80007a0:	ea81 0103 	eor.w	r1, r1, r3
 80007a4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007a8:	f04f 0000 	mov.w	r0, #0
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b2:	bf06      	itte	eq
 80007b4:	4610      	moveq	r0, r2
 80007b6:	4619      	moveq	r1, r3
 80007b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007bc:	d019      	beq.n	80007f2 <__aeabi_dmul+0x24a>
 80007be:	ea94 0f0c 	teq	r4, ip
 80007c2:	d102      	bne.n	80007ca <__aeabi_dmul+0x222>
 80007c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c8:	d113      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007ca:	ea95 0f0c 	teq	r5, ip
 80007ce:	d105      	bne.n	80007dc <__aeabi_dmul+0x234>
 80007d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d4:	bf1c      	itt	ne
 80007d6:	4610      	movne	r0, r2
 80007d8:	4619      	movne	r1, r3
 80007da:	d10a      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007dc:	ea81 0103 	eor.w	r1, r1, r3
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007e4:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007e8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007ec:	f04f 0000 	mov.w	r0, #0
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007f6:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007fa:	bd70      	pop	{r4, r5, r6, pc}

080007fc <__aeabi_ddiv>:
 80007fc:	b570      	push	{r4, r5, r6, lr}
 80007fe:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000802:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000806:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080a:	bf1d      	ittte	ne
 800080c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000810:	ea94 0f0c 	teqne	r4, ip
 8000814:	ea95 0f0c 	teqne	r5, ip
 8000818:	f000 f8a7 	bleq	800096a <__aeabi_ddiv+0x16e>
 800081c:	eba4 0405 	sub.w	r4, r4, r5
 8000820:	ea81 0e03 	eor.w	lr, r1, r3
 8000824:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000828:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800082c:	f000 8088 	beq.w	8000940 <__aeabi_ddiv+0x144>
 8000830:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000834:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000838:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800083c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000840:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000844:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000848:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800084c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000850:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000854:	429d      	cmp	r5, r3
 8000856:	bf08      	it	eq
 8000858:	4296      	cmpeq	r6, r2
 800085a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800085e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000862:	d202      	bcs.n	800086a <__aeabi_ddiv+0x6e>
 8000864:	085b      	lsrs	r3, r3, #1
 8000866:	ea4f 0232 	mov.w	r2, r2, rrx
 800086a:	1ab6      	subs	r6, r6, r2
 800086c:	eb65 0503 	sbc.w	r5, r5, r3
 8000870:	085b      	lsrs	r3, r3, #1
 8000872:	ea4f 0232 	mov.w	r2, r2, rrx
 8000876:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800087a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008dc:	d018      	beq.n	8000910 <__aeabi_ddiv+0x114>
 80008de:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fa:	d1c0      	bne.n	800087e <__aeabi_ddiv+0x82>
 80008fc:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000900:	d10b      	bne.n	800091a <__aeabi_ddiv+0x11e>
 8000902:	ea41 0100 	orr.w	r1, r1, r0
 8000906:	f04f 0000 	mov.w	r0, #0
 800090a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800090e:	e7b6      	b.n	800087e <__aeabi_ddiv+0x82>
 8000910:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000914:	bf04      	itt	eq
 8000916:	4301      	orreq	r1, r0
 8000918:	2000      	moveq	r0, #0
 800091a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800091e:	bf88      	it	hi
 8000920:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000924:	f63f aeaf 	bhi.w	8000686 <__aeabi_dmul+0xde>
 8000928:	ebb5 0c03 	subs.w	ip, r5, r3
 800092c:	bf04      	itt	eq
 800092e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000936:	f150 0000 	adcs.w	r0, r0, #0
 800093a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000944:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000948:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800094c:	bfc2      	ittt	gt
 800094e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000952:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000956:	bd70      	popgt	{r4, r5, r6, pc}
 8000958:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800095c:	f04f 0e00 	mov.w	lr, #0
 8000960:	3c01      	subs	r4, #1
 8000962:	e690      	b.n	8000686 <__aeabi_dmul+0xde>
 8000964:	ea45 0e06 	orr.w	lr, r5, r6
 8000968:	e68d      	b.n	8000686 <__aeabi_dmul+0xde>
 800096a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800096e:	ea94 0f0c 	teq	r4, ip
 8000972:	bf08      	it	eq
 8000974:	ea95 0f0c 	teqeq	r5, ip
 8000978:	f43f af3b 	beq.w	80007f2 <__aeabi_dmul+0x24a>
 800097c:	ea94 0f0c 	teq	r4, ip
 8000980:	d10a      	bne.n	8000998 <__aeabi_ddiv+0x19c>
 8000982:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000986:	f47f af34 	bne.w	80007f2 <__aeabi_dmul+0x24a>
 800098a:	ea95 0f0c 	teq	r5, ip
 800098e:	f47f af25 	bne.w	80007dc <__aeabi_dmul+0x234>
 8000992:	4610      	mov	r0, r2
 8000994:	4619      	mov	r1, r3
 8000996:	e72c      	b.n	80007f2 <__aeabi_dmul+0x24a>
 8000998:	ea95 0f0c 	teq	r5, ip
 800099c:	d106      	bne.n	80009ac <__aeabi_ddiv+0x1b0>
 800099e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a2:	f43f aefd 	beq.w	80007a0 <__aeabi_dmul+0x1f8>
 80009a6:	4610      	mov	r0, r2
 80009a8:	4619      	mov	r1, r3
 80009aa:	e722      	b.n	80007f2 <__aeabi_dmul+0x24a>
 80009ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b0:	bf18      	it	ne
 80009b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009b6:	f47f aec5 	bne.w	8000744 <__aeabi_dmul+0x19c>
 80009ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009be:	f47f af0d 	bne.w	80007dc <__aeabi_dmul+0x234>
 80009c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009c6:	f47f aeeb 	bne.w	80007a0 <__aeabi_dmul+0x1f8>
 80009ca:	e712      	b.n	80007f2 <__aeabi_dmul+0x24a>

080009cc <__gedf2>:
 80009cc:	f04f 3cff 	mov.w	ip, #4294967295
 80009d0:	e006      	b.n	80009e0 <__cmpdf2+0x4>
 80009d2:	bf00      	nop

080009d4 <__ledf2>:
 80009d4:	f04f 0c01 	mov.w	ip, #1
 80009d8:	e002      	b.n	80009e0 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__cmpdf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f0:	bf18      	it	ne
 80009f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009f6:	d01b      	beq.n	8000a30 <__cmpdf2+0x54>
 80009f8:	b001      	add	sp, #4
 80009fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009fe:	bf0c      	ite	eq
 8000a00:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a04:	ea91 0f03 	teqne	r1, r3
 8000a08:	bf02      	ittt	eq
 8000a0a:	ea90 0f02 	teqeq	r0, r2
 8000a0e:	2000      	moveq	r0, #0
 8000a10:	4770      	bxeq	lr
 8000a12:	f110 0f00 	cmn.w	r0, #0
 8000a16:	ea91 0f03 	teq	r1, r3
 8000a1a:	bf58      	it	pl
 8000a1c:	4299      	cmppl	r1, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4290      	cmpeq	r0, r2
 8000a22:	bf2c      	ite	cs
 8000a24:	17d8      	asrcs	r0, r3, #31
 8000a26:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a2a:	f040 0001 	orr.w	r0, r0, #1
 8000a2e:	4770      	bx	lr
 8000a30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d102      	bne.n	8000a40 <__cmpdf2+0x64>
 8000a3a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3e:	d107      	bne.n	8000a50 <__cmpdf2+0x74>
 8000a40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a48:	d1d6      	bne.n	80009f8 <__cmpdf2+0x1c>
 8000a4a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4e:	d0d3      	beq.n	80009f8 <__cmpdf2+0x1c>
 8000a50:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a54:	4770      	bx	lr
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdrcmple>:
 8000a58:	4684      	mov	ip, r0
 8000a5a:	4610      	mov	r0, r2
 8000a5c:	4662      	mov	r2, ip
 8000a5e:	468c      	mov	ip, r1
 8000a60:	4619      	mov	r1, r3
 8000a62:	4663      	mov	r3, ip
 8000a64:	e000      	b.n	8000a68 <__aeabi_cdcmpeq>
 8000a66:	bf00      	nop

08000a68 <__aeabi_cdcmpeq>:
 8000a68:	b501      	push	{r0, lr}
 8000a6a:	f7ff ffb7 	bl	80009dc <__cmpdf2>
 8000a6e:	2800      	cmp	r0, #0
 8000a70:	bf48      	it	mi
 8000a72:	f110 0f00 	cmnmi.w	r0, #0
 8000a76:	bd01      	pop	{r0, pc}

08000a78 <__aeabi_dcmpeq>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff fff4 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a80:	bf0c      	ite	eq
 8000a82:	2001      	moveq	r0, #1
 8000a84:	2000      	movne	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmplt>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffea 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a94:	bf34      	ite	cc
 8000a96:	2001      	movcc	r0, #1
 8000a98:	2000      	movcs	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmple>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffe0 	bl	8000a68 <__aeabi_cdcmpeq>
 8000aa8:	bf94      	ite	ls
 8000aaa:	2001      	movls	r0, #1
 8000aac:	2000      	movhi	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpge>:
 8000ab4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab8:	f7ff ffce 	bl	8000a58 <__aeabi_cdrcmple>
 8000abc:	bf94      	ite	ls
 8000abe:	2001      	movls	r0, #1
 8000ac0:	2000      	movhi	r0, #0
 8000ac2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_dcmpgt>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff ffc4 	bl	8000a58 <__aeabi_cdrcmple>
 8000ad0:	bf34      	ite	cc
 8000ad2:	2001      	movcc	r0, #1
 8000ad4:	2000      	movcs	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmpun>:
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__aeabi_dcmpun+0x10>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d10a      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d102      	bne.n	8000afc <__aeabi_dcmpun+0x20>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d102      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	f04f 0001 	mov.w	r0, #1
 8000b06:	4770      	bx	lr

08000b08 <__aeabi_d2iz>:
 8000b08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b0c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b10:	d215      	bcs.n	8000b3e <__aeabi_d2iz+0x36>
 8000b12:	d511      	bpl.n	8000b38 <__aeabi_d2iz+0x30>
 8000b14:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b18:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b1c:	d912      	bls.n	8000b44 <__aeabi_d2iz+0x3c>
 8000b1e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b22:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b26:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b2a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b32:	bf18      	it	ne
 8000b34:	4240      	negne	r0, r0
 8000b36:	4770      	bx	lr
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	4770      	bx	lr
 8000b3e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b42:	d105      	bne.n	8000b50 <__aeabi_d2iz+0x48>
 8000b44:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b48:	bf08      	it	eq
 8000b4a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b4e:	4770      	bx	lr
 8000b50:	f04f 0000 	mov.w	r0, #0
 8000b54:	4770      	bx	lr
 8000b56:	bf00      	nop

08000b58 <__aeabi_d2uiz>:
 8000b58:	004a      	lsls	r2, r1, #1
 8000b5a:	d211      	bcs.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d211      	bcs.n	8000b86 <__aeabi_d2uiz+0x2e>
 8000b62:	d50d      	bpl.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d40e      	bmi.n	8000b8c <__aeabi_d2uiz+0x34>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	fa23 f002 	lsr.w	r0, r3, r2
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_d2uiz+0x3a>
 8000b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0000 	mov.w	r0, #0
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2f>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ba0:	bf24      	itt	cs
 8000ba2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ba6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000baa:	d90d      	bls.n	8000bc8 <__aeabi_d2f+0x30>
 8000bac:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bb0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bb4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bb8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bbc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc0:	bf08      	it	eq
 8000bc2:	f020 0001 	biceq.w	r0, r0, #1
 8000bc6:	4770      	bx	lr
 8000bc8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bcc:	d121      	bne.n	8000c12 <__aeabi_d2f+0x7a>
 8000bce:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bd2:	bfbc      	itt	lt
 8000bd4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	4770      	bxlt	lr
 8000bda:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bde:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000be2:	f1c2 0218 	rsb	r2, r2, #24
 8000be6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bea:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bee:	fa20 f002 	lsr.w	r0, r0, r2
 8000bf2:	bf18      	it	ne
 8000bf4:	f040 0001 	orrne.w	r0, r0, #1
 8000bf8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bfc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c00:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c04:	ea40 000c 	orr.w	r0, r0, ip
 8000c08:	fa23 f302 	lsr.w	r3, r3, r2
 8000c0c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c10:	e7cc      	b.n	8000bac <__aeabi_d2f+0x14>
 8000c12:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c16:	d107      	bne.n	8000c28 <__aeabi_d2f+0x90>
 8000c18:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c1c:	bf1e      	ittt	ne
 8000c1e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c22:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c26:	4770      	bxne	lr
 8000c28:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c2c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c30:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c34:	4770      	bx	lr
 8000c36:	bf00      	nop

08000c38 <__aeabi_uldivmod>:
 8000c38:	b953      	cbnz	r3, 8000c50 <__aeabi_uldivmod+0x18>
 8000c3a:	b94a      	cbnz	r2, 8000c50 <__aeabi_uldivmod+0x18>
 8000c3c:	2900      	cmp	r1, #0
 8000c3e:	bf08      	it	eq
 8000c40:	2800      	cmpeq	r0, #0
 8000c42:	bf1c      	itt	ne
 8000c44:	f04f 31ff 	movne.w	r1, #4294967295
 8000c48:	f04f 30ff 	movne.w	r0, #4294967295
 8000c4c:	f000 b9be 	b.w	8000fcc <__aeabi_idiv0>
 8000c50:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c54:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c58:	f000 f83c 	bl	8000cd4 <__udivmoddi4>
 8000c5c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c60:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c64:	b004      	add	sp, #16
 8000c66:	4770      	bx	lr

08000c68 <__aeabi_d2lz>:
 8000c68:	b538      	push	{r3, r4, r5, lr}
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4604      	mov	r4, r0
 8000c70:	460d      	mov	r5, r1
 8000c72:	f7ff ff0b 	bl	8000a8c <__aeabi_dcmplt>
 8000c76:	b928      	cbnz	r0, 8000c84 <__aeabi_d2lz+0x1c>
 8000c78:	4620      	mov	r0, r4
 8000c7a:	4629      	mov	r1, r5
 8000c7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c80:	f000 b80a 	b.w	8000c98 <__aeabi_d2ulz>
 8000c84:	4620      	mov	r0, r4
 8000c86:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000c8a:	f000 f805 	bl	8000c98 <__aeabi_d2ulz>
 8000c8e:	4240      	negs	r0, r0
 8000c90:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c94:	bd38      	pop	{r3, r4, r5, pc}
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2ulz>:
 8000c98:	b5d0      	push	{r4, r6, r7, lr}
 8000c9a:	4b0c      	ldr	r3, [pc, #48]	@ (8000ccc <__aeabi_d2ulz+0x34>)
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	4606      	mov	r6, r0
 8000ca0:	460f      	mov	r7, r1
 8000ca2:	f7ff fc81 	bl	80005a8 <__aeabi_dmul>
 8000ca6:	f7ff ff57 	bl	8000b58 <__aeabi_d2uiz>
 8000caa:	4604      	mov	r4, r0
 8000cac:	f7ff fc02 	bl	80004b4 <__aeabi_ui2d>
 8000cb0:	4b07      	ldr	r3, [pc, #28]	@ (8000cd0 <__aeabi_d2ulz+0x38>)
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	f7ff fc78 	bl	80005a8 <__aeabi_dmul>
 8000cb8:	4602      	mov	r2, r0
 8000cba:	460b      	mov	r3, r1
 8000cbc:	4630      	mov	r0, r6
 8000cbe:	4639      	mov	r1, r7
 8000cc0:	f7ff faba 	bl	8000238 <__aeabi_dsub>
 8000cc4:	f7ff ff48 	bl	8000b58 <__aeabi_d2uiz>
 8000cc8:	4621      	mov	r1, r4
 8000cca:	bdd0      	pop	{r4, r6, r7, pc}
 8000ccc:	3df00000 	.word	0x3df00000
 8000cd0:	41f00000 	.word	0x41f00000

08000cd4 <__udivmoddi4>:
 8000cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cd8:	9d08      	ldr	r5, [sp, #32]
 8000cda:	468e      	mov	lr, r1
 8000cdc:	4604      	mov	r4, r0
 8000cde:	4688      	mov	r8, r1
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	d14a      	bne.n	8000d7a <__udivmoddi4+0xa6>
 8000ce4:	428a      	cmp	r2, r1
 8000ce6:	4617      	mov	r7, r2
 8000ce8:	d962      	bls.n	8000db0 <__udivmoddi4+0xdc>
 8000cea:	fab2 f682 	clz	r6, r2
 8000cee:	b14e      	cbz	r6, 8000d04 <__udivmoddi4+0x30>
 8000cf0:	f1c6 0320 	rsb	r3, r6, #32
 8000cf4:	fa01 f806 	lsl.w	r8, r1, r6
 8000cf8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cfc:	40b7      	lsls	r7, r6
 8000cfe:	ea43 0808 	orr.w	r8, r3, r8
 8000d02:	40b4      	lsls	r4, r6
 8000d04:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d08:	fa1f fc87 	uxth.w	ip, r7
 8000d0c:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d10:	0c23      	lsrs	r3, r4, #16
 8000d12:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d16:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d1a:	fb01 f20c 	mul.w	r2, r1, ip
 8000d1e:	429a      	cmp	r2, r3
 8000d20:	d909      	bls.n	8000d36 <__udivmoddi4+0x62>
 8000d22:	18fb      	adds	r3, r7, r3
 8000d24:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d28:	f080 80ea 	bcs.w	8000f00 <__udivmoddi4+0x22c>
 8000d2c:	429a      	cmp	r2, r3
 8000d2e:	f240 80e7 	bls.w	8000f00 <__udivmoddi4+0x22c>
 8000d32:	3902      	subs	r1, #2
 8000d34:	443b      	add	r3, r7
 8000d36:	1a9a      	subs	r2, r3, r2
 8000d38:	b2a3      	uxth	r3, r4
 8000d3a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d3e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d42:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d46:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d4a:	459c      	cmp	ip, r3
 8000d4c:	d909      	bls.n	8000d62 <__udivmoddi4+0x8e>
 8000d4e:	18fb      	adds	r3, r7, r3
 8000d50:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d54:	f080 80d6 	bcs.w	8000f04 <__udivmoddi4+0x230>
 8000d58:	459c      	cmp	ip, r3
 8000d5a:	f240 80d3 	bls.w	8000f04 <__udivmoddi4+0x230>
 8000d5e:	443b      	add	r3, r7
 8000d60:	3802      	subs	r0, #2
 8000d62:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d66:	eba3 030c 	sub.w	r3, r3, ip
 8000d6a:	2100      	movs	r1, #0
 8000d6c:	b11d      	cbz	r5, 8000d76 <__udivmoddi4+0xa2>
 8000d6e:	40f3      	lsrs	r3, r6
 8000d70:	2200      	movs	r2, #0
 8000d72:	e9c5 3200 	strd	r3, r2, [r5]
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	428b      	cmp	r3, r1
 8000d7c:	d905      	bls.n	8000d8a <__udivmoddi4+0xb6>
 8000d7e:	b10d      	cbz	r5, 8000d84 <__udivmoddi4+0xb0>
 8000d80:	e9c5 0100 	strd	r0, r1, [r5]
 8000d84:	2100      	movs	r1, #0
 8000d86:	4608      	mov	r0, r1
 8000d88:	e7f5      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000d8a:	fab3 f183 	clz	r1, r3
 8000d8e:	2900      	cmp	r1, #0
 8000d90:	d146      	bne.n	8000e20 <__udivmoddi4+0x14c>
 8000d92:	4573      	cmp	r3, lr
 8000d94:	d302      	bcc.n	8000d9c <__udivmoddi4+0xc8>
 8000d96:	4282      	cmp	r2, r0
 8000d98:	f200 8105 	bhi.w	8000fa6 <__udivmoddi4+0x2d2>
 8000d9c:	1a84      	subs	r4, r0, r2
 8000d9e:	eb6e 0203 	sbc.w	r2, lr, r3
 8000da2:	2001      	movs	r0, #1
 8000da4:	4690      	mov	r8, r2
 8000da6:	2d00      	cmp	r5, #0
 8000da8:	d0e5      	beq.n	8000d76 <__udivmoddi4+0xa2>
 8000daa:	e9c5 4800 	strd	r4, r8, [r5]
 8000dae:	e7e2      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000db0:	2a00      	cmp	r2, #0
 8000db2:	f000 8090 	beq.w	8000ed6 <__udivmoddi4+0x202>
 8000db6:	fab2 f682 	clz	r6, r2
 8000dba:	2e00      	cmp	r6, #0
 8000dbc:	f040 80a4 	bne.w	8000f08 <__udivmoddi4+0x234>
 8000dc0:	1a8a      	subs	r2, r1, r2
 8000dc2:	0c03      	lsrs	r3, r0, #16
 8000dc4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dc8:	b280      	uxth	r0, r0
 8000dca:	b2bc      	uxth	r4, r7
 8000dcc:	2101      	movs	r1, #1
 8000dce:	fbb2 fcfe 	udiv	ip, r2, lr
 8000dd2:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dd6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dda:	fb04 f20c 	mul.w	r2, r4, ip
 8000dde:	429a      	cmp	r2, r3
 8000de0:	d907      	bls.n	8000df2 <__udivmoddi4+0x11e>
 8000de2:	18fb      	adds	r3, r7, r3
 8000de4:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000de8:	d202      	bcs.n	8000df0 <__udivmoddi4+0x11c>
 8000dea:	429a      	cmp	r2, r3
 8000dec:	f200 80e0 	bhi.w	8000fb0 <__udivmoddi4+0x2dc>
 8000df0:	46c4      	mov	ip, r8
 8000df2:	1a9b      	subs	r3, r3, r2
 8000df4:	fbb3 f2fe 	udiv	r2, r3, lr
 8000df8:	fb0e 3312 	mls	r3, lr, r2, r3
 8000dfc:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e00:	fb02 f404 	mul.w	r4, r2, r4
 8000e04:	429c      	cmp	r4, r3
 8000e06:	d907      	bls.n	8000e18 <__udivmoddi4+0x144>
 8000e08:	18fb      	adds	r3, r7, r3
 8000e0a:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e0e:	d202      	bcs.n	8000e16 <__udivmoddi4+0x142>
 8000e10:	429c      	cmp	r4, r3
 8000e12:	f200 80ca 	bhi.w	8000faa <__udivmoddi4+0x2d6>
 8000e16:	4602      	mov	r2, r0
 8000e18:	1b1b      	subs	r3, r3, r4
 8000e1a:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e1e:	e7a5      	b.n	8000d6c <__udivmoddi4+0x98>
 8000e20:	f1c1 0620 	rsb	r6, r1, #32
 8000e24:	408b      	lsls	r3, r1
 8000e26:	fa22 f706 	lsr.w	r7, r2, r6
 8000e2a:	431f      	orrs	r7, r3
 8000e2c:	fa0e f401 	lsl.w	r4, lr, r1
 8000e30:	fa20 f306 	lsr.w	r3, r0, r6
 8000e34:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e38:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e3c:	4323      	orrs	r3, r4
 8000e3e:	fa00 f801 	lsl.w	r8, r0, r1
 8000e42:	fa1f fc87 	uxth.w	ip, r7
 8000e46:	fbbe f0f9 	udiv	r0, lr, r9
 8000e4a:	0c1c      	lsrs	r4, r3, #16
 8000e4c:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e50:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e54:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e58:	45a6      	cmp	lr, r4
 8000e5a:	fa02 f201 	lsl.w	r2, r2, r1
 8000e5e:	d909      	bls.n	8000e74 <__udivmoddi4+0x1a0>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e66:	f080 809c 	bcs.w	8000fa2 <__udivmoddi4+0x2ce>
 8000e6a:	45a6      	cmp	lr, r4
 8000e6c:	f240 8099 	bls.w	8000fa2 <__udivmoddi4+0x2ce>
 8000e70:	3802      	subs	r0, #2
 8000e72:	443c      	add	r4, r7
 8000e74:	eba4 040e 	sub.w	r4, r4, lr
 8000e78:	fa1f fe83 	uxth.w	lr, r3
 8000e7c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e80:	fb09 4413 	mls	r4, r9, r3, r4
 8000e84:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e88:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e8c:	45a4      	cmp	ip, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x1ce>
 8000e90:	193c      	adds	r4, r7, r4
 8000e92:	f103 3eff 	add.w	lr, r3, #4294967295
 8000e96:	f080 8082 	bcs.w	8000f9e <__udivmoddi4+0x2ca>
 8000e9a:	45a4      	cmp	ip, r4
 8000e9c:	d97f      	bls.n	8000f9e <__udivmoddi4+0x2ca>
 8000e9e:	3b02      	subs	r3, #2
 8000ea0:	443c      	add	r4, r7
 8000ea2:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ea6:	eba4 040c 	sub.w	r4, r4, ip
 8000eaa:	fba0 ec02 	umull	lr, ip, r0, r2
 8000eae:	4564      	cmp	r4, ip
 8000eb0:	4673      	mov	r3, lr
 8000eb2:	46e1      	mov	r9, ip
 8000eb4:	d362      	bcc.n	8000f7c <__udivmoddi4+0x2a8>
 8000eb6:	d05f      	beq.n	8000f78 <__udivmoddi4+0x2a4>
 8000eb8:	b15d      	cbz	r5, 8000ed2 <__udivmoddi4+0x1fe>
 8000eba:	ebb8 0203 	subs.w	r2, r8, r3
 8000ebe:	eb64 0409 	sbc.w	r4, r4, r9
 8000ec2:	fa04 f606 	lsl.w	r6, r4, r6
 8000ec6:	fa22 f301 	lsr.w	r3, r2, r1
 8000eca:	431e      	orrs	r6, r3
 8000ecc:	40cc      	lsrs	r4, r1
 8000ece:	e9c5 6400 	strd	r6, r4, [r5]
 8000ed2:	2100      	movs	r1, #0
 8000ed4:	e74f      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000ed6:	fbb1 fcf2 	udiv	ip, r1, r2
 8000eda:	0c01      	lsrs	r1, r0, #16
 8000edc:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ee0:	b280      	uxth	r0, r0
 8000ee2:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000ee6:	463b      	mov	r3, r7
 8000ee8:	4638      	mov	r0, r7
 8000eea:	463c      	mov	r4, r7
 8000eec:	46b8      	mov	r8, r7
 8000eee:	46be      	mov	lr, r7
 8000ef0:	2620      	movs	r6, #32
 8000ef2:	fbb1 f1f7 	udiv	r1, r1, r7
 8000ef6:	eba2 0208 	sub.w	r2, r2, r8
 8000efa:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000efe:	e766      	b.n	8000dce <__udivmoddi4+0xfa>
 8000f00:	4601      	mov	r1, r0
 8000f02:	e718      	b.n	8000d36 <__udivmoddi4+0x62>
 8000f04:	4610      	mov	r0, r2
 8000f06:	e72c      	b.n	8000d62 <__udivmoddi4+0x8e>
 8000f08:	f1c6 0220 	rsb	r2, r6, #32
 8000f0c:	fa2e f302 	lsr.w	r3, lr, r2
 8000f10:	40b7      	lsls	r7, r6
 8000f12:	40b1      	lsls	r1, r6
 8000f14:	fa20 f202 	lsr.w	r2, r0, r2
 8000f18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f1c:	430a      	orrs	r2, r1
 8000f1e:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f22:	b2bc      	uxth	r4, r7
 8000f24:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f28:	0c11      	lsrs	r1, r2, #16
 8000f2a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f2e:	fb08 f904 	mul.w	r9, r8, r4
 8000f32:	40b0      	lsls	r0, r6
 8000f34:	4589      	cmp	r9, r1
 8000f36:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f3a:	b280      	uxth	r0, r0
 8000f3c:	d93e      	bls.n	8000fbc <__udivmoddi4+0x2e8>
 8000f3e:	1879      	adds	r1, r7, r1
 8000f40:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f44:	d201      	bcs.n	8000f4a <__udivmoddi4+0x276>
 8000f46:	4589      	cmp	r9, r1
 8000f48:	d81f      	bhi.n	8000f8a <__udivmoddi4+0x2b6>
 8000f4a:	eba1 0109 	sub.w	r1, r1, r9
 8000f4e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f52:	fb09 f804 	mul.w	r8, r9, r4
 8000f56:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5a:	b292      	uxth	r2, r2
 8000f5c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f60:	4542      	cmp	r2, r8
 8000f62:	d229      	bcs.n	8000fb8 <__udivmoddi4+0x2e4>
 8000f64:	18ba      	adds	r2, r7, r2
 8000f66:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f6a:	d2c4      	bcs.n	8000ef6 <__udivmoddi4+0x222>
 8000f6c:	4542      	cmp	r2, r8
 8000f6e:	d2c2      	bcs.n	8000ef6 <__udivmoddi4+0x222>
 8000f70:	f1a9 0102 	sub.w	r1, r9, #2
 8000f74:	443a      	add	r2, r7
 8000f76:	e7be      	b.n	8000ef6 <__udivmoddi4+0x222>
 8000f78:	45f0      	cmp	r8, lr
 8000f7a:	d29d      	bcs.n	8000eb8 <__udivmoddi4+0x1e4>
 8000f7c:	ebbe 0302 	subs.w	r3, lr, r2
 8000f80:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f84:	3801      	subs	r0, #1
 8000f86:	46e1      	mov	r9, ip
 8000f88:	e796      	b.n	8000eb8 <__udivmoddi4+0x1e4>
 8000f8a:	eba7 0909 	sub.w	r9, r7, r9
 8000f8e:	4449      	add	r1, r9
 8000f90:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f94:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f98:	fb09 f804 	mul.w	r8, r9, r4
 8000f9c:	e7db      	b.n	8000f56 <__udivmoddi4+0x282>
 8000f9e:	4673      	mov	r3, lr
 8000fa0:	e77f      	b.n	8000ea2 <__udivmoddi4+0x1ce>
 8000fa2:	4650      	mov	r0, sl
 8000fa4:	e766      	b.n	8000e74 <__udivmoddi4+0x1a0>
 8000fa6:	4608      	mov	r0, r1
 8000fa8:	e6fd      	b.n	8000da6 <__udivmoddi4+0xd2>
 8000faa:	443b      	add	r3, r7
 8000fac:	3a02      	subs	r2, #2
 8000fae:	e733      	b.n	8000e18 <__udivmoddi4+0x144>
 8000fb0:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fb4:	443b      	add	r3, r7
 8000fb6:	e71c      	b.n	8000df2 <__udivmoddi4+0x11e>
 8000fb8:	4649      	mov	r1, r9
 8000fba:	e79c      	b.n	8000ef6 <__udivmoddi4+0x222>
 8000fbc:	eba1 0109 	sub.w	r1, r1, r9
 8000fc0:	46c4      	mov	ip, r8
 8000fc2:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fc6:	fb09 f804 	mul.w	r8, r9, r4
 8000fca:	e7c4      	b.n	8000f56 <__udivmoddi4+0x282>

08000fcc <__aeabi_idiv0>:
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop

08000fd0 <GNSS_Init>:
/*!
 * Structure initialization.
 * @param GNSS Pointer to main GNSS structure.
 * @param huart Pointer to uart handle.
 */
void GNSS_Init(GNSS_StateHandle *GNSS, UART_HandleTypeDef *huart) {
 8000fd0:	b500      	push	{lr}
 8000fd2:	b083      	sub	sp, #12
	GNSS->huart = huart;
	GNSS->year = 0;
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	f8a0 306e 	strh.w	r3, [r0, #110]	@ 0x6e
	GNSS->month = 0;
 8000fda:	f8c0 3072 	str.w	r3, [r0, #114]	@ 0x72
 8000fde:	f8c0 3076 	str.w	r3, [r0, #118]	@ 0x76
	GNSS->min = 0;
	GNSS->sec = 0;
	GNSS->fixType = 0;
	GNSS->numSV = 0;
	GNSS->satCount = 0;
	GNSS->lon = 0;
 8000fe2:	67c3      	str	r3, [r0, #124]	@ 0x7c
	GNSS->lat = 0;
 8000fe4:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
	GNSS->height = 0;
 8000fe8:	f8c0 3094 	str.w	r3, [r0, #148]	@ 0x94
	GNSS->hMSL = 0;
 8000fec:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
	GNSS->hAcc = 0;
 8000ff0:	f8c0 30a8 	str.w	r3, [r0, #168]	@ 0xa8
	GNSS->vAcc = 0;
 8000ff4:	f8c0 30b0 	str.w	r3, [r0, #176]	@ 0xb0
	GNSS->gSpeed = 0;
 8000ff8:	f8c0 30b8 	str.w	r3, [r0, #184]	@ 0xb8
	GNSS->headMot = 0;
 8000ffc:	f8c0 30c4 	str.w	r3, [r0, #196]	@ 0xc4
void GNSS_Init(GNSS_StateHandle *GNSS, UART_HandleTypeDef *huart) {
 8001000:	9101      	str	r1, [sp, #4]
	GNSS->huart = huart;
 8001002:	6001      	str	r1, [r0, #0]

	HAL_UART_Transmit_DMA(&huart,uart1outprotnmeadisable,sizeof(uart1outprotnmeadisable)/(sizeof(uint8_t)));
 8001004:	2211      	movs	r2, #17
 8001006:	4915      	ldr	r1, [pc, #84]	@ (800105c <GNSS_Init+0x8c>)
 8001008:	a801      	add	r0, sp, #4
 800100a:	f009 fe2d 	bl	800ac68 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800100e:	201e      	movs	r0, #30
 8001010:	f004 fba4 	bl	800575c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,uart1outprotubxenable,sizeof(uart1outprotubxenable)/(sizeof(uint8_t)));
 8001014:	4912      	ldr	r1, [pc, #72]	@ (8001060 <GNSS_Init+0x90>)
 8001016:	2211      	movs	r2, #17
 8001018:	a801      	add	r0, sp, #4
 800101a:	f009 fe25 	bl	800ac68 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800101e:	201e      	movs	r0, #30
 8001020:	f004 fb9c 	bl	800575c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,setGPS_GAL_GLONASS,sizeof(setGPS_GAL_BEIDOU_GLONASS)/(sizeof(uint8_t)));
 8001024:	490f      	ldr	r1, [pc, #60]	@ (8001064 <GNSS_Init+0x94>)
 8001026:	2234      	movs	r2, #52	@ 0x34
 8001028:	a801      	add	r0, sp, #4
 800102a:	f009 fe1d 	bl	800ac68 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800102e:	201e      	movs	r0, #30
 8001030:	f004 fb94 	bl	800575c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,meas_rate_5hz,sizeof(meas_rate_10hz)/(sizeof(uint8_t)));
 8001034:	490c      	ldr	r1, [pc, #48]	@ (8001068 <GNSS_Init+0x98>)
 8001036:	2212      	movs	r2, #18
 8001038:	a801      	add	r0, sp, #4
 800103a:	f009 fe15 	bl	800ac68 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800103e:	201e      	movs	r0, #30
 8001040:	f004 fb8c 	bl	800575c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,ubx_pvt_every_1meas,sizeof(ubx_pvt_every_1meas)/(sizeof(uint8_t)));
 8001044:	4909      	ldr	r1, [pc, #36]	@ (800106c <GNSS_Init+0x9c>)
 8001046:	2211      	movs	r2, #17
 8001048:	a801      	add	r0, sp, #4
 800104a:	f009 fe0d 	bl	800ac68 <HAL_UART_Transmit_DMA>

	HAL_Delay(100);
 800104e:	2064      	movs	r0, #100	@ 0x64
 8001050:	f004 fb84 	bl	800575c <HAL_Delay>
}
 8001054:	b003      	add	sp, #12
 8001056:	f85d fb04 	ldr.w	pc, [sp], #4
 800105a:	bf00      	nop
 800105c:	08015f50 	.word	0x08015f50
 8001060:	08015f64 	.word	0x08015f64
 8001064:	08015efc 	.word	0x08015efc
 8001068:	08015f3c 	.word	0x08015f3c
 800106c:	08015f28 	.word	0x08015f28

08001070 <GNSS_ParsePVTData>:
/*!
 * Parse data to navigation position velocity time solution standard.
 * Look at: 32.17.15.1 u-blox 8 Receiver description.
 * @param GNSS Pointer to main GNSS structure.
 */
void GNSS_ParsePVTData(GNSS_StateHandle *GNSS) {
 8001070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001072:	4604      	mov	r4, r0
	uShort.bytes[0] = GNSS->uartWorkingBuffer[10];
 8001074:	4d70      	ldr	r5, [pc, #448]	@ (8001238 <GNSS_ParsePVTData+0x1c8>)
 8001076:	7d82      	ldrb	r2, [r0, #22]
 8001078:	8a63      	ldrh	r3, [r4, #18]
 800107a:	7c81      	ldrb	r1, [r0, #18]
 800107c:	802b      	strh	r3, [r5, #0]
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
	uShort.bytes[1] = GNSS->uartWorkingBuffer[11];
 800107e:	7cc0      	ldrb	r0, [r0, #19]
	GNSS->yearBytes[1]=GNSS->uartWorkingBuffer[11];
	GNSS->year = uShort.uShort;
 8001080:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
	GNSS->month = GNSS->uartWorkingBuffer[12];
	GNSS->day = GNSS->uartWorkingBuffer[13];
	GNSS->hour = GNSS->uartWorkingBuffer[14];
	GNSS->min = GNSS->uartWorkingBuffer[15];
	GNSS->sec = GNSS->uartWorkingBuffer[16];
	GNSS->fixType = GNSS->uartWorkingBuffer[26];
 8001084:	2300      	movs	r3, #0
 8001086:	f362 0307 	bfi	r3, r2, #0, #8
 800108a:	7de2      	ldrb	r2, [r4, #23]
 800108c:	4e6b      	ldr	r6, [pc, #428]	@ (800123c <GNSS_ParsePVTData+0x1cc>)
	}
	GNSS->hMSL = iLong.iLong;
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;

	for (int var = 0; var < 4; ++var) {
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 46];
 800108e:	4f6c      	ldr	r7, [pc, #432]	@ (8001240 <GNSS_ParsePVTData+0x1d0>)
 8001090:	f362 230f 	bfi	r3, r2, #8, #8
 8001094:	7e22      	ldrb	r2, [r4, #24]
 8001096:	f362 4317 	bfi	r3, r2, #16, #8
 800109a:	f894 2022 	ldrb.w	r2, [r4, #34]	@ 0x22
 800109e:	f362 631f 	bfi	r3, r2, #24, #8
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
 80010a2:	2200      	movs	r2, #0
 80010a4:	f361 0207 	bfi	r2, r1, #0, #8
 80010a8:	7d21      	ldrb	r1, [r4, #20]
 80010aa:	f360 220f 	bfi	r2, r0, #8, #8
 80010ae:	f361 4217 	bfi	r2, r1, #16, #8
 80010b2:	7d61      	ldrb	r1, [r4, #21]
	GNSS->numSV = GNSS->uartWorkingBuffer[29];
 80010b4:	f894 0025 	ldrb.w	r0, [r4, #37]	@ 0x25
 80010b8:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
 80010bc:	f361 621f 	bfi	r2, r1, #24, #8
 80010c0:	e9c4 231c 	strd	r2, r3, [r4, #112]	@ 0x70
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 30];
 80010c4:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 80010c8:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010cc:	ee07 3a90 	vmov	s15, r3
 80010d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->lon = iLong.iLong;
 80010d4:	e9c4 331f 	strd	r3, r3, [r4, #124]	@ 0x7c
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010d8:	ee17 0a90 	vmov	r0, s15
 80010dc:	f7ff fa0c 	bl	80004f8 <__aeabi_f2d>
 80010e0:	a34f      	add	r3, pc, #316	@ (adr r3, 8001220 <GNSS_ParsePVTData+0x1b0>)
 80010e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010e6:	f7ff fa5f 	bl	80005a8 <__aeabi_dmul>
 80010ea:	f7ff fd55 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 34];
 80010ee:	f8d4 302a 	ldr.w	r3, [r4, #42]	@ 0x2a
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010f2:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 80010f6:	ee07 3a90 	vmov	s15, r3
 80010fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->lat = iLong.iLong;
 80010fe:	e9c4 3321 	strd	r3, r3, [r4, #132]	@ 0x84
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 8001102:	ee17 0a90 	vmov	r0, s15
 8001106:	f7ff f9f7 	bl	80004f8 <__aeabi_f2d>
 800110a:	a345      	add	r3, pc, #276	@ (adr r3, 8001220 <GNSS_ParsePVTData+0x1b0>)
 800110c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001110:	f7ff fa4a 	bl	80005a8 <__aeabi_dmul>
 8001114:	f7ff fd40 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 38];
 8001118:	f8d4 302e 	ldr.w	r3, [r4, #46]	@ 0x2e
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 800111c:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
	GNSS->fheight=(float)GNSS->height/1000.0;
 8001120:	ee07 3a90 	vmov	s15, r3
 8001124:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->height = iLong.iLong;
 8001128:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
	GNSS->fheight=(float)GNSS->height/1000.0;
 800112c:	ee17 0a90 	vmov	r0, s15
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 38];
 8001130:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fheight=(float)GNSS->height/1000.0;
 8001134:	f7ff f9e0 	bl	80004f8 <__aeabi_f2d>
 8001138:	a33b      	add	r3, pc, #236	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 800113a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800113e:	f7ff fa33 	bl	80005a8 <__aeabi_dmul>
 8001142:	f7ff fd29 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 42];
 8001146:	f8d4 3032 	ldr.w	r3, [r4, #50]	@ 0x32
	GNSS->fheight=(float)GNSS->height/1000.0;
 800114a:	f8c4 0098 	str.w	r0, [r4, #152]	@ 0x98
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 800114e:	ee07 3a90 	vmov	s15, r3
 8001152:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->hMSL = iLong.iLong;
 8001156:	e9c4 3327 	strd	r3, r3, [r4, #156]	@ 0x9c
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 800115a:	ee17 0a90 	vmov	r0, s15
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 42];
 800115e:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 8001162:	f7ff f9c9 	bl	80004f8 <__aeabi_f2d>
 8001166:	a330      	add	r3, pc, #192	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 8001168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800116c:	f7ff fa1c 	bl	80005a8 <__aeabi_dmul>
 8001170:	f7ff fd12 	bl	8000b98 <__aeabi_d2f>
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 46];
 8001174:	f8d4 3036 	ldr.w	r3, [r4, #54]	@ 0x36
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 8001178:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
	}
	GNSS->hAcc = uLong.uLong;
	GNSS->fhACC=(float)GNSS->hAcc/1000.0;
 800117c:	ee07 3a90 	vmov	s15, r3
 8001180:	eef8 7a67 	vcvt.f32.u32	s15, s15
	GNSS->hAcc = uLong.uLong;
 8001184:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
	GNSS->fhACC=(float)GNSS->hAcc/1000.0;
 8001188:	ee17 0a90 	vmov	r0, s15
 800118c:	f7ff f9b4 	bl	80004f8 <__aeabi_f2d>
 8001190:	a325      	add	r3, pc, #148	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 8001192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001196:	f7ff fa07 	bl	80005a8 <__aeabi_dmul>
 800119a:	f7ff fcfd 	bl	8000b98 <__aeabi_d2f>
 800119e:	f8c4 00ac 	str.w	r0, [r4, #172]	@ 0xac

	for (int var = 0; var < 4; ++var) {
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 50];
 80011a2:	f8d4 003a 	ldr.w	r0, [r4, #58]	@ 0x3a
	}
	GNSS->vAcc = uLong.uLong;
 80011a6:	f8c4 00b0 	str.w	r0, [r4, #176]	@ 0xb0
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011aa:	ee07 0a90 	vmov	s15, r0
 80011ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 50];
 80011b2:	6038      	str	r0, [r7, #0]
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011b4:	ee17 0a90 	vmov	r0, s15
 80011b8:	f7ff f99e 	bl	80004f8 <__aeabi_f2d>
 80011bc:	a31a      	add	r3, pc, #104	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 80011be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c2:	f7ff f9f1 	bl	80005a8 <__aeabi_dmul>
 80011c6:	f7ff fce7 	bl	8000b98 <__aeabi_d2f>

	for (int var = 0; var < 4; ++var) {
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 66];
 80011ca:	f8d4 304a 	ldr.w	r3, [r4, #74]	@ 0x4a
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011ce:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
		GNSS->gSpeedBytes[var] = GNSS->uartWorkingBuffer[var + 66];
	}
	GNSS->gSpeed = iLong.iLong;
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011d2:	ee07 3a90 	vmov	s15, r3
 80011d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->gSpeed = iLong.iLong;
 80011da:	e9c4 332e 	strd	r3, r3, [r4, #184]	@ 0xb8
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011de:	ee17 0a90 	vmov	r0, s15
 80011e2:	f7ff f989 	bl	80004f8 <__aeabi_f2d>
 80011e6:	a310      	add	r3, pc, #64	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 80011e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011ec:	f7ff f9dc 	bl	80005a8 <__aeabi_dmul>
 80011f0:	f7ff fcd2 	bl	8000b98 <__aeabi_d2f>

	for (int var = 0; var < 4; ++var) {
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 70];
 80011f4:	f8d4 304e 	ldr.w	r3, [r4, #78]	@ 0x4e
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011f8:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 70];
 80011fc:	f846 3c04 	str.w	r3, [r6, #-4]
	}
	GNSS->headMot = iLong.iLong * 1e-5;
 8001200:	4618      	mov	r0, r3
 8001202:	f7ff f967 	bl	80004d4 <__aeabi_i2d>
 8001206:	a30a      	add	r3, pc, #40	@ (adr r3, 8001230 <GNSS_ParsePVTData+0x1c0>)
 8001208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800120c:	f7ff f9cc 	bl	80005a8 <__aeabi_dmul>
 8001210:	f7ff fc7a 	bl	8000b08 <__aeabi_d2iz>
 8001214:	1f35      	subs	r5, r6, #4
 8001216:	f8c4 00c4 	str.w	r0, [r4, #196]	@ 0xc4
}
 800121a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800121c:	f3af 8000 	nop.w
 8001220:	9abcaf48 	.word	0x9abcaf48
 8001224:	3e7ad7f2 	.word	0x3e7ad7f2
 8001228:	d2f1a9fc 	.word	0xd2f1a9fc
 800122c:	3f50624d 	.word	0x3f50624d
 8001230:	88e368f1 	.word	0x88e368f1
 8001234:	3ee4f8b5 	.word	0x3ee4f8b5
 8001238:	20000324 	.word	0x20000324
 800123c:	20000320 	.word	0x20000320
 8001240:	20000320 	.word	0x20000320
 8001244:	00000000 	.word	0x00000000

08001248 <distancecalc>:
}




double distancecalc(double lat1, double lat2, double long1, double long2){
 8001248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800124c:	ed2d 8b04 	vpush	{d8-d9}
	double distance=0;
	distance=(double) 6371000*acosl(fmin(1,sinl(lat1*(M_PI/180))*sinl(lat2*(M_PI/180))+cosl(lat1*(M_PI/180))*cosl(lat2*(M_PI/180))*cosl((long2-long1)*(M_PI/180))));
 8001250:	a34a      	add	r3, pc, #296	@ (adr r3, 800137c <distancecalc+0x134>)
 8001252:	e9d3 2300 	ldrd	r2, r3, [r3]
double distancecalc(double lat1, double lat2, double long1, double long2){
 8001256:	b083      	sub	sp, #12
 8001258:	ec51 0b10 	vmov	r0, r1, d0
 800125c:	ec55 4b11 	vmov	r4, r5, d1
 8001260:	ec57 6b13 	vmov	r6, r7, d3
 8001264:	ec59 8b12 	vmov	r8, r9, d2
	distance=(double) 6371000*acosl(fmin(1,sinl(lat1*(M_PI/180))*sinl(lat2*(M_PI/180))+cosl(lat1*(M_PI/180))*cosl(lat2*(M_PI/180))*cosl((long2-long1)*(M_PI/180))));
 8001268:	f7ff f99e 	bl	80005a8 <__aeabi_dmul>
 800126c:	ec41 0b19 	vmov	d9, r0, r1
 8001270:	eeb0 0a49 	vmov.f32	s0, s18
 8001274:	eef0 0a69 	vmov.f32	s1, s19
 8001278:	f012 fda1 	bl	8013dbe <sinl>
 800127c:	a33f      	add	r3, pc, #252	@ (adr r3, 800137c <distancecalc+0x134>)
 800127e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001282:	4620      	mov	r0, r4
 8001284:	4629      	mov	r1, r5
 8001286:	ed8d 0b00 	vstr	d0, [sp]
 800128a:	f7ff f98d 	bl	80005a8 <__aeabi_dmul>
 800128e:	ec41 0b18 	vmov	d8, r0, r1
 8001292:	eeb0 0a48 	vmov.f32	s0, s16
 8001296:	eef0 0a68 	vmov.f32	s1, s17
 800129a:	f012 fd90 	bl	8013dbe <sinl>
 800129e:	eeb0 7a40 	vmov.f32	s14, s0
 80012a2:	eef0 7a60 	vmov.f32	s15, s1
 80012a6:	eeb0 0a49 	vmov.f32	s0, s18
 80012aa:	eef0 0a69 	vmov.f32	s1, s19
 80012ae:	ec5b ab17 	vmov	sl, fp, d7
 80012b2:	f012 fd82 	bl	8013dba <cosl>
 80012b6:	eeb0 7a40 	vmov.f32	s14, s0
 80012ba:	eef0 7a60 	vmov.f32	s15, s1
 80012be:	eeb0 0a48 	vmov.f32	s0, s16
 80012c2:	eef0 0a68 	vmov.f32	s1, s17
 80012c6:	ec55 4b17 	vmov	r4, r5, d7
 80012ca:	f012 fd76 	bl	8013dba <cosl>
 80012ce:	4642      	mov	r2, r8
 80012d0:	464b      	mov	r3, r9
 80012d2:	4630      	mov	r0, r6
 80012d4:	4639      	mov	r1, r7
 80012d6:	ec57 6b10 	vmov	r6, r7, d0
 80012da:	f7fe ffad 	bl	8000238 <__aeabi_dsub>
 80012de:	a327      	add	r3, pc, #156	@ (adr r3, 800137c <distancecalc+0x134>)
 80012e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012e4:	f7ff f960 	bl	80005a8 <__aeabi_dmul>
 80012e8:	ec41 0b10 	vmov	d0, r0, r1
 80012ec:	f012 fd65 	bl	8013dba <cosl>
 80012f0:	4620      	mov	r0, r4
 80012f2:	4629      	mov	r1, r5
 80012f4:	ec55 4b10 	vmov	r4, r5, d0
 80012f8:	4632      	mov	r2, r6
 80012fa:	463b      	mov	r3, r7
 80012fc:	f7ff f954 	bl	80005a8 <__aeabi_dmul>
 8001300:	4622      	mov	r2, r4
 8001302:	462b      	mov	r3, r5
 8001304:	f7ff f950 	bl	80005a8 <__aeabi_dmul>
 8001308:	4652      	mov	r2, sl
 800130a:	4604      	mov	r4, r0
 800130c:	460d      	mov	r5, r1
 800130e:	465b      	mov	r3, fp
 8001310:	e9dd 0100 	ldrd	r0, r1, [sp]
 8001314:	f7ff f948 	bl	80005a8 <__aeabi_dmul>
 8001318:	4602      	mov	r2, r0
 800131a:	460b      	mov	r3, r1
 800131c:	4620      	mov	r0, r4
 800131e:	4629      	mov	r1, r5
 8001320:	f7fe ff8c 	bl	800023c <__adddf3>
 8001324:	4602      	mov	r2, r0
 8001326:	460b      	mov	r3, r1
 8001328:	ec43 2b18 	vmov	d8, r2, r3
 800132c:	4b12      	ldr	r3, [pc, #72]	@ (8001378 <distancecalc+0x130>)
 800132e:	2200      	movs	r2, #0
 8001330:	f7ff fbb6 	bl	8000aa0 <__aeabi_dcmple>
 8001334:	b908      	cbnz	r0, 800133a <distancecalc+0xf2>
 8001336:	ed9f 8b0c 	vldr	d8, [pc, #48]	@ 8001368 <distancecalc+0x120>
 800133a:	eeb0 0a48 	vmov.f32	s0, s16
 800133e:	eef0 0a68 	vmov.f32	s1, s17
 8001342:	f012 fd3e 	bl	8013dc2 <acosl>
 8001346:	a30a      	add	r3, pc, #40	@ (adr r3, 8001370 <distancecalc+0x128>)
 8001348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800134c:	ec51 0b10 	vmov	r0, r1, d0
 8001350:	f7ff f92a 	bl	80005a8 <__aeabi_dmul>

	return distance;
}
 8001354:	ec41 0b10 	vmov	d0, r0, r1
 8001358:	b003      	add	sp, #12
 800135a:	ecbd 8b04 	vpop	{d8-d9}
 800135e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001362:	bf00      	nop
 8001364:	f3af 8000 	nop.w
 8001368:	00000000 	.word	0x00000000
 800136c:	3ff00000 	.word	0x3ff00000
 8001370:	00000000 	.word	0x00000000
 8001374:	41584dae 	.word	0x41584dae
 8001378:	3ff00000 	.word	0x3ff00000
 800137c:	a2529d39 	.word	0xa2529d39
 8001380:	3f91df46 	.word	0x3f91df46

08001384 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8001384:	b500      	push	{lr}

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001386:	482d      	ldr	r0, [pc, #180]	@ (800143c <MX_ADC1_Init+0xb8>)
 8001388:	492d      	ldr	r1, [pc, #180]	@ (8001440 <MX_ADC1_Init+0xbc>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800138a:	2201      	movs	r2, #1
{
 800138c:	b087      	sub	sp, #28
  ADC_ChannelConfTypeDef sConfig = {0};
 800138e:	2300      	movs	r3, #0
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8001390:	6102      	str	r2, [r0, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001392:	f44f 7280 	mov.w	r2, #256	@ 0x100
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8001396:	e9c0 1300 	strd	r1, r3, [r0]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 800139a:	8302      	strh	r2, [r0, #24]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800139c:	2104      	movs	r1, #4
  hadc1.Init.ContinuousConvMode = ENABLE;
  hadc1.Init.NbrOfConversion = 3;
  hadc1.Init.DiscontinuousConvMode = DISABLE;
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;
 800139e:	f44f 62d8 	mov.w	r2, #1728	@ 0x6c0
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80013a2:	6141      	str	r1, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;
 80013a4:	6282      	str	r2, [r0, #40]	@ 0x28
  hadc1.Init.NbrOfConversion = 3;
 80013a6:	2103      	movs	r1, #3
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013a8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  ADC_ChannelConfTypeDef sConfig = {0};
 80013ac:	e9cd 3300 	strd	r3, r3, [sp]
 80013b0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80013b4:	e9cd 3304 	strd	r3, r3, [sp, #16]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80013b8:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hadc1.Init.NbrOfConversion = 3;
 80013bc:	61c1      	str	r1, [r0, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80013be:	f880 3020 	strb.w	r3, [r0, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013c2:	62c2      	str	r2, [r0, #44]	@ 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80013c4:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80013c8:	6343      	str	r3, [r0, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 80013ca:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80013ce:	f004 f9d7 	bl	8005780 <HAL_ADC_Init>
 80013d2:	bb28      	cbnz	r0, 8001420 <MX_ADC1_Init+0x9c>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 80013d4:	4a1b      	ldr	r2, [pc, #108]	@ (8001444 <MX_ADC1_Init+0xc0>)
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80013d6:	2306      	movs	r3, #6
  sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 80013d8:	2007      	movs	r0, #7
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80013da:	217f      	movs	r1, #127	@ 0x7f
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80013dc:	e9cd 2300 	strd	r2, r3, [sp]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80013e0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80013e4:	2204      	movs	r2, #4
  sConfig.Offset = 0;
 80013e6:	2300      	movs	r3, #0
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013e8:	4814      	ldr	r0, [pc, #80]	@ (800143c <MX_ADC1_Init+0xb8>)
 80013ea:	4669      	mov	r1, sp
  sConfig.Offset = 0;
 80013ec:	e9cd 2304 	strd	r2, r3, [sp, #16]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013f0:	f004 faea 	bl	80059c8 <HAL_ADC_ConfigChannel>
 80013f4:	b9f8      	cbnz	r0, 8001436 <MX_ADC1_Init+0xb2>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 80013f6:	4a14      	ldr	r2, [pc, #80]	@ (8001448 <MX_ADC1_Init+0xc4>)
  sConfig.Rank = ADC_REGULAR_RANK_2;
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013f8:	4810      	ldr	r0, [pc, #64]	@ (800143c <MX_ADC1_Init+0xb8>)
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80013fa:	230c      	movs	r3, #12
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013fc:	4669      	mov	r1, sp
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80013fe:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001402:	f004 fae1 	bl	80059c8 <HAL_ADC_ConfigChannel>
 8001406:	b998      	cbnz	r0, 8001430 <MX_ADC1_Init+0xac>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8001408:	4a10      	ldr	r2, [pc, #64]	@ (800144c <MX_ADC1_Init+0xc8>)
  sConfig.Rank = ADC_REGULAR_RANK_3;
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800140a:	480c      	ldr	r0, [pc, #48]	@ (800143c <MX_ADC1_Init+0xb8>)
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800140c:	2312      	movs	r3, #18
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800140e:	4669      	mov	r1, sp
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8001410:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001414:	f004 fad8 	bl	80059c8 <HAL_ADC_ConfigChannel>
 8001418:	b928      	cbnz	r0, 8001426 <MX_ADC1_Init+0xa2>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800141a:	b007      	add	sp, #28
 800141c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001420:	f000 ff22 	bl	8002268 <Error_Handler>
 8001424:	e7d6      	b.n	80013d4 <MX_ADC1_Init+0x50>
    Error_Handler();
 8001426:	f000 ff1f 	bl	8002268 <Error_Handler>
}
 800142a:	b007      	add	sp, #28
 800142c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001430:	f000 ff1a 	bl	8002268 <Error_Handler>
 8001434:	e7e8      	b.n	8001408 <MX_ADC1_Init+0x84>
    Error_Handler();
 8001436:	f000 ff17 	bl	8002268 <Error_Handler>
 800143a:	e7dc      	b.n	80013f6 <MX_ADC1_Init+0x72>
 800143c:	20000388 	.word	0x20000388
 8001440:	50040000 	.word	0x50040000
 8001444:	80000001 	.word	0x80000001
 8001448:	c7520000 	.word	0xc7520000
 800144c:	25b00200 	.word	0x25b00200

08001450 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001450:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(adcHandle->Instance==ADC1)
 8001452:	4b24      	ldr	r3, [pc, #144]	@ (80014e4 <HAL_ADC_MspInit+0x94>)
 8001454:	6802      	ldr	r2, [r0, #0]
{
 8001456:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001458:	2400      	movs	r4, #0
  if(adcHandle->Instance==ADC1)
 800145a:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800145c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8001460:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001464:	9406      	str	r4, [sp, #24]
  if(adcHandle->Instance==ADC1)
 8001466:	d001      	beq.n	800146c <HAL_ADC_MspInit+0x1c>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8001468:	b008      	add	sp, #32
 800146a:	bd70      	pop	{r4, r5, r6, pc}
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 800146c:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001470:	4605      	mov	r5, r0
 8001472:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
    hdma_adc1.Instance = DMA1_Channel1;
 8001474:	4e1c      	ldr	r6, [pc, #112]	@ (80014e8 <HAL_ADC_MspInit+0x98>)
 8001476:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800147a:	64da      	str	r2, [r3, #76]	@ 0x4c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800147c:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800147e:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 8001482:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 8001484:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001486:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8001488:	f042 0201 	orr.w	r2, r2, #1
 800148c:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800148e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001490:	f003 0301 	and.w	r3, r3, #1
 8001494:	9300      	str	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001496:	2210      	movs	r2, #16
 8001498:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800149a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800149e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80014a0:	e9cd 2302 	strd	r2, r3, [sp, #8]
  (void)tmpreg;
 80014a4:	9b00      	ldr	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014a6:	f004 ff81 	bl	80063ac <HAL_GPIO_Init>
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 80014aa:	4a10      	ldr	r2, [pc, #64]	@ (80014ec <HAL_ADC_MspInit+0x9c>)
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 80014ac:	6234      	str	r4, [r6, #32]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 80014ae:	2305      	movs	r3, #5
 80014b0:	e9c6 2300 	strd	r2, r3, [r6]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 80014b4:	2280      	movs	r2, #128	@ 0x80
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80014b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80014ba:	e9c6 2304 	strd	r2, r3, [r6, #16]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80014be:	4630      	mov	r0, r6
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80014c0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80014c4:	2320      	movs	r3, #32
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 80014c6:	e9c6 4402 	strd	r4, r4, [r6, #8]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80014ca:	e9c6 2306 	strd	r2, r3, [r6, #24]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80014ce:	f004 fdc5 	bl	800605c <HAL_DMA_Init>
 80014d2:	b918      	cbnz	r0, 80014dc <HAL_ADC_MspInit+0x8c>
    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 80014d4:	64ee      	str	r6, [r5, #76]	@ 0x4c
 80014d6:	62b5      	str	r5, [r6, #40]	@ 0x28
}
 80014d8:	b008      	add	sp, #32
 80014da:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 80014dc:	f000 fec4 	bl	8002268 <Error_Handler>
 80014e0:	e7f8      	b.n	80014d4 <HAL_ADC_MspInit+0x84>
 80014e2:	bf00      	nop
 80014e4:	50040000 	.word	0x50040000
 80014e8:	20000328 	.word	0x20000328
 80014ec:	40020008 	.word	0x40020008

080014f0 <HAL_ADC_ConvCpltCallback>:
  /* USER CODE END ADC1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 80014f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	if(hadc->Instance==ADC1){
 80014f4:	6802      	ldr	r2, [r0, #0]
 80014f6:	4b3e      	ldr	r3, [pc, #248]	@ (80015f0 <HAL_ADC_ConvCpltCallback+0x100>)
 80014f8:	429a      	cmp	r2, r3
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 80014fa:	ed2d 8b02 	vpush	{d8}
	if(hadc->Instance==ADC1){
 80014fe:	d008      	beq.n	8001512 <HAL_ADC_ConvCpltCallback+0x22>
	}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);



}
 8001500:	ecbd 8b02 	vpop	{d8}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 8001504:	493b      	ldr	r1, [pc, #236]	@ (80015f4 <HAL_ADC_ConvCpltCallback+0x104>)
 8001506:	483c      	ldr	r0, [pc, #240]	@ (80015f8 <HAL_ADC_ConvCpltCallback+0x108>)
}
 8001508:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 800150c:	2203      	movs	r2, #3
 800150e:	f004 bcf5 	b.w	8005efc <HAL_ADC_Start_DMA>
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001512:	4e38      	ldr	r6, [pc, #224]	@ (80015f4 <HAL_ADC_ConvCpltCallback+0x104>)
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001514:	4f39      	ldr	r7, [pc, #228]	@ (80015fc <HAL_ADC_ConvCpltCallback+0x10c>)
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001516:	8830      	ldrh	r0, [r6, #0]
 8001518:	f7fe ffdc 	bl	80004d4 <__aeabi_i2d>
 800151c:	4602      	mov	r2, r0
 800151e:	460b      	mov	r3, r1
 8001520:	a12d      	add	r1, pc, #180	@ (adr r1, 80015d8 <HAL_ADC_ConvCpltCallback+0xe8>)
 8001522:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001526:	f7ff f969 	bl	80007fc <__aeabi_ddiv>
 800152a:	f7ff fb35 	bl	8000b98 <__aeabi_d2f>
 800152e:	4a34      	ldr	r2, [pc, #208]	@ (8001600 <HAL_ADC_ConvCpltCallback+0x110>)
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001530:	4b34      	ldr	r3, [pc, #208]	@ (8001604 <HAL_ADC_ConvCpltCallback+0x114>)
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001532:	6010      	str	r0, [r2, #0]
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001534:	ed93 8a00 	vldr	s16, [r3]
 8001538:	f7fe ffde 	bl	80004f8 <__aeabi_f2d>
 800153c:	4604      	mov	r4, r0
 800153e:	8870      	ldrh	r0, [r6, #2]
 8001540:	460d      	mov	r5, r1
 8001542:	f7fe ffc7 	bl	80004d4 <__aeabi_i2d>
 8001546:	a326      	add	r3, pc, #152	@ (adr r3, 80015e0 <HAL_ADC_ConvCpltCallback+0xf0>)
 8001548:	e9d3 2300 	ldrd	r2, r3, [r3]
 800154c:	f7ff f82c 	bl	80005a8 <__aeabi_dmul>
 8001550:	4622      	mov	r2, r4
 8001552:	462b      	mov	r3, r5
 8001554:	f7ff f828 	bl	80005a8 <__aeabi_dmul>
 8001558:	4680      	mov	r8, r0
 800155a:	ee18 0a10 	vmov	r0, s16
 800155e:	4689      	mov	r9, r1
 8001560:	f7fe ffca 	bl	80004f8 <__aeabi_f2d>
 8001564:	4602      	mov	r2, r0
 8001566:	460b      	mov	r3, r1
 8001568:	4640      	mov	r0, r8
 800156a:	4649      	mov	r1, r9
 800156c:	f7fe fe64 	bl	8000238 <__aeabi_dsub>
 8001570:	4b25      	ldr	r3, [pc, #148]	@ (8001608 <HAL_ADC_ConvCpltCallback+0x118>)
 8001572:	edd3 7a00 	vldr	s15, [r3]
 8001576:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800157a:	4680      	mov	r8, r0
 800157c:	ee17 0a90 	vmov	r0, s15
 8001580:	4689      	mov	r9, r1
 8001582:	f7fe ffb9 	bl	80004f8 <__aeabi_f2d>
 8001586:	4602      	mov	r2, r0
 8001588:	460b      	mov	r3, r1
 800158a:	2000      	movs	r0, #0
 800158c:	491f      	ldr	r1, [pc, #124]	@ (800160c <HAL_ADC_ConvCpltCallback+0x11c>)
 800158e:	f7ff f935 	bl	80007fc <__aeabi_ddiv>
 8001592:	4602      	mov	r2, r0
 8001594:	460b      	mov	r3, r1
 8001596:	4640      	mov	r0, r8
 8001598:	4649      	mov	r1, r9
 800159a:	f7ff f805 	bl	80005a8 <__aeabi_dmul>
 800159e:	f7ff fafb 	bl	8000b98 <__aeabi_d2f>
 80015a2:	ee07 0a90 	vmov	s15, r0
 80015a6:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 80015aa:	ee77 7a87 	vadd.f32	s15, s15, s14
		vbat=(float) 2*(rawdata[2]/4095.0)*vrefint;
 80015ae:	88b0      	ldrh	r0, [r6, #4]
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 80015b0:	edc7 7a00 	vstr	s15, [r7]
		vbat=(float) 2*(rawdata[2]/4095.0)*vrefint;
 80015b4:	f7fe ff8e 	bl	80004d4 <__aeabi_i2d>
 80015b8:	a30b      	add	r3, pc, #44	@ (adr r3, 80015e8 <HAL_ADC_ConvCpltCallback+0xf8>)
 80015ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015be:	f7fe fff3 	bl	80005a8 <__aeabi_dmul>
 80015c2:	4622      	mov	r2, r4
 80015c4:	462b      	mov	r3, r5
 80015c6:	f7fe ffef 	bl	80005a8 <__aeabi_dmul>
 80015ca:	f7ff fae5 	bl	8000b98 <__aeabi_d2f>
 80015ce:	4e10      	ldr	r6, [pc, #64]	@ (8001610 <HAL_ADC_ConvCpltCallback+0x120>)
 80015d0:	6030      	str	r0, [r6, #0]
 80015d2:	e795      	b.n	8001500 <HAL_ADC_ConvCpltCallback+0x10>
 80015d4:	f3af 8000 	nop.w
 80015d8:	d70a3d70 	.word	0xd70a3d70
 80015dc:	40b36323 	.word	0x40b36323
 80015e0:	55555555 	.word	0x55555555
 80015e4:	3fd55555 	.word	0x3fd55555
 80015e8:	10010010 	.word	0x10010010
 80015ec:	3f400100 	.word	0x3f400100
 80015f0:	50040000 	.word	0x50040000
 80015f4:	20000fcc 	.word	0x20000fcc
 80015f8:	20000388 	.word	0x20000388
 80015fc:	20000fc8 	.word	0x20000fc8
 8001600:	20000fc4 	.word	0x20000fc4
 8001604:	20000008 	.word	0x20000008
 8001608:	2000000c 	.word	0x2000000c
 800160c:	40590000 	.word	0x40590000
 8001610:	20000fc0 	.word	0x20000fc0

08001614 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8001614:	b508      	push	{r3, lr}
  /* init code for USB_Device */
  MX_USB_Device_Init();
 8001616:	f00d fbed 	bl	800edf4 <MX_USB_Device_Init>
  /* USER CODE BEGIN StartDefaultTask */
  /* Infinite loop */
  for(;;)
  {
	statemachine();
 800161a:	f001 ffad 	bl	8003578 <statemachine>
	ssd1306_UpdateScreen();
 800161e:	f001 f9d3 	bl	80029c8 <ssd1306_UpdateScreen>
    osDelay(50);
 8001622:	2032      	movs	r0, #50	@ 0x32
 8001624:	f00b ff88 	bl	800d538 <osDelay>
  for(;;)
 8001628:	e7f7      	b.n	800161a <StartDefaultTask+0x6>
 800162a:	bf00      	nop

0800162c <StartTask02>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void const * argument)
{
 800162c:	4c09      	ldr	r4, [pc, #36]	@ (8001654 <StartTask02+0x28>)
  {


	  if(received_flag==1){

	  		  GNSS_ParsePVTData(&GNSSData);
 800162e:	4e0a      	ldr	r6, [pc, #40]	@ (8001658 <StartTask02+0x2c>)
	  		  received_flag=0;


	  	  }
	HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 8001630:	4d0a      	ldr	r5, [pc, #40]	@ (800165c <StartTask02+0x30>)
{
 8001632:	b580      	push	{r7, lr}
	  		  received_flag=0;
 8001634:	2700      	movs	r7, #0
	  if(received_flag==1){
 8001636:	6823      	ldr	r3, [r4, #0]
 8001638:	2b01      	cmp	r3, #1
	  		  GNSS_ParsePVTData(&GNSSData);
 800163a:	4630      	mov	r0, r6
	  if(received_flag==1){
 800163c:	d102      	bne.n	8001644 <StartTask02+0x18>
	  		  GNSS_ParsePVTData(&GNSSData);
 800163e:	f7ff fd17 	bl	8001070 <GNSS_ParsePVTData>
	  		  received_flag=0;
 8001642:	6027      	str	r7, [r4, #0]
	HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 8001644:	4628      	mov	r0, r5
 8001646:	2101      	movs	r1, #1
 8001648:	f005 f858 	bl	80066fc <HAL_GPIO_TogglePin>
    osDelay(100);
 800164c:	2064      	movs	r0, #100	@ 0x64
 800164e:	f00b ff73 	bl	800d538 <osDelay>
	  if(received_flag==1){
 8001652:	e7f0      	b.n	8001636 <StartTask02+0xa>
 8001654:	2000050c 	.word	0x2000050c
 8001658:	20000510 	.word	0x20000510
 800165c:	48000400 	.word	0x48000400

08001660 <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void const * argument)
{
 8001660:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001664:	4c42      	ldr	r4, [pc, #264]	@ (8001770 <StartTask03+0x110>)
 8001666:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 80017a0 <StartTask03+0x140>
 800166a:	f8df b138 	ldr.w	fp, [pc, #312]	@ 80017a4 <StartTask03+0x144>
 800166e:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 80017a8 <StartTask03+0x148>
 8001672:	4f40      	ldr	r7, [pc, #256]	@ (8001774 <StartTask03+0x114>)
 8001674:	4e40      	ldr	r6, [pc, #256]	@ (8001778 <StartTask03+0x118>)
							  }


								bmp581_read_precise_normal(&bmp581);
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 8001676:	4d41      	ldr	r5, [pc, #260]	@ (800177c <StartTask03+0x11c>)
{
 8001678:	b0b1      	sub	sp, #196	@ 0xc4
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 800167a:	4841      	ldr	r0, [pc, #260]	@ (8001780 <StartTask03+0x120>)
 800167c:	2102      	movs	r1, #2
 800167e:	f005 f83d 	bl	80066fc <HAL_GPIO_TogglePin>
	  if(GNSSData.fgSpeed>=vitmax){
 8001682:	edd4 7a30 	vldr	s15, [r4, #192]	@ 0xc0
 8001686:	ed99 7a00 	vldr	s14, [r9]
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 800168a:	f8db 2000 	ldr.w	r2, [fp]
	  if(GNSSData.fgSpeed>=vitmax){
 800168e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 8001696:	f246 33fd 	movw	r3, #25597	@ 0x63fd
							  									 vitmax=GNSSData.fgSpeed;
 800169a:	bfa8      	it	ge
 800169c:	edc9 7a00 	vstrge	s15, [r9]
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 80016a0:	429a      	cmp	r2, r3
								  osThreadSuspend(NULL);
 80016a2:	f04f 0000 	mov.w	r0, #0
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 80016a6:	dd04      	ble.n	80016b2 <StartTask03+0x52>
								  osThreadSuspend(NULL);
 80016a8:	f00b ff4e 	bl	800d548 <osThreadSuspend>
								  balisestate=2;
 80016ac:	4a35      	ldr	r2, [pc, #212]	@ (8001784 <StartTask03+0x124>)
 80016ae:	2302      	movs	r3, #2
 80016b0:	7013      	strb	r3, [r2, #0]
								bmp581_read_precise_normal(&bmp581);
 80016b2:	4835      	ldr	r0, [pc, #212]	@ (8001788 <StartTask03+0x128>)
 80016b4:	f000 f99c 	bl	80019f0 <bmp581_read_precise_normal>
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
 80016b8:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 80016bc:	f7fe ff1c 	bl	80004f8 <__aeabi_f2d>
 80016c0:	ec41 0b18 	vmov	d8, r0, r1
 80016c4:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 80016c8:	f7fe ff16 	bl	80004f8 <__aeabi_f2d>
 80016cc:	eeb0 3a48 	vmov.f32	s6, s16
 80016d0:	eef0 3a68 	vmov.f32	s7, s17
 80016d4:	ed98 ab00 	vldr	d10, [r8]
 80016d8:	ec41 0b11 	vmov	d1, r0, r1
 80016dc:	eeb0 2a4a 	vmov.f32	s4, s20
 80016e0:	eef0 2a6a 	vmov.f32	s5, s21
 80016e4:	ed97 0b00 	vldr	d0, [r7]
 80016e8:	f7ff fdae 	bl	8001248 <distancecalc>
 80016ec:	e9d6 0100 	ldrd	r0, r1, [r6]
 80016f0:	ec53 2b10 	vmov	r2, r3, d0
 80016f4:	f7fe fda2 	bl	800023c <__adddf3>
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 80016f8:	4b24      	ldr	r3, [pc, #144]	@ (800178c <StartTask03+0x12c>)
 80016fa:	ed94 9a2b 	vldr	s18, [r4, #172]	@ 0xac
 80016fe:	ed93 ab00 	vldr	d10, [r3]
 8001702:	4b23      	ldr	r3, [pc, #140]	@ (8001790 <StartTask03+0x130>)
 8001704:	edd3 8a00 	vldr	s17, [r3]
 8001708:	4b22      	ldr	r3, [pc, #136]	@ (8001794 <StartTask03+0x134>)
 800170a:	ed93 8a00 	vldr	s16, [r3]
 800170e:	f894 3078 	ldrb.w	r3, [r4, #120]	@ 0x78
 8001712:	932f      	str	r3, [sp, #188]	@ 0xbc
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
 8001714:	e9c6 0100 	strd	r0, r1, [r6]
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 8001718:	22bc      	movs	r2, #188	@ 0xbc
 800171a:	491f      	ldr	r1, [pc, #124]	@ (8001798 <StartTask03+0x138>)
 800171c:	4668      	mov	r0, sp
 800171e:	f00e ff22 	bl	8010566 <memcpy>
 8001722:	eeb0 2a4a 	vmov.f32	s4, s20
 8001726:	eef0 2a6a 	vmov.f32	s5, s21
 800172a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800172e:	eeb0 1a49 	vmov.f32	s2, s18
 8001732:	eef0 0a68 	vmov.f32	s1, s17
 8001736:	eeb0 0a48 	vmov.f32	s0, s16
 800173a:	4628      	mov	r0, r5
 800173c:	f000 fef8 	bl	8002530 <csvframe>
 8001740:	4b16      	ldr	r3, [pc, #88]	@ (800179c <StartTask03+0x13c>)
 8001742:	4682      	mov	sl, r0
 8001744:	6018      	str	r0, [r3, #0]
								  oldlat=GNSSData.fLat;
 8001746:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800174a:	f7fe fed5 	bl	80004f8 <__aeabi_f2d>
 800174e:	e9c7 0100 	strd	r0, r1, [r7]
								  oldlong=GNSSData.fLon;
 8001752:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 8001756:	f7fe fecf 	bl	80004f8 <__aeabi_f2d>
 800175a:	e9c8 0100 	strd	r0, r1, [r8]
								  writebuffertoflash((uint8_t*)flashwrite,flashbufferlen);
 800175e:	4628      	mov	r0, r5
 8001760:	4651      	mov	r1, sl
 8001762:	f000 ffc7 	bl	80026f4 <writebuffertoflash>


    osDelay(200);
 8001766:	20c8      	movs	r0, #200	@ 0xc8
 8001768:	f00b fee6 	bl	800d538 <osDelay>
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 800176c:	e785      	b.n	800167a <StartTask03+0x1a>
 800176e:	bf00      	nop
 8001770:	20000510 	.word	0x20000510
 8001774:	20000608 	.word	0x20000608
 8001778:	20000610 	.word	0x20000610
 800177c:	20000ec0 	.word	0x20000ec0
 8001780:	48000400 	.word	0x48000400
 8001784:	2000106b 	.word	0x2000106b
 8001788:	200005d8 	.word	0x200005d8
 800178c:	20000408 	.word	0x20000408
 8001790:	20000fc0 	.word	0x20000fc0
 8001794:	20000fc8 	.word	0x20000fc8
 8001798:	2000051c 	.word	0x2000051c
 800179c:	20000624 	.word	0x20000624
 80017a0:	2000063c 	.word	0x2000063c
 80017a4:	200006b8 	.word	0x200006b8
 80017a8:	20000600 	.word	0x20000600

080017ac <StartTask04>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask04 */
void StartTask04(void const * argument)
{
 80017ac:	b508      	push	{r3, lr}
  for(;;)
  {

	  usbtransmit();
	  ssd1306_UpdateScreen();
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 80017ae:	4c06      	ldr	r4, [pc, #24]	@ (80017c8 <StartTask04+0x1c>)
	  usbtransmit();
 80017b0:	f003 fe18 	bl	80053e4 <usbtransmit>
	  ssd1306_UpdateScreen();
 80017b4:	f001 f908 	bl	80029c8 <ssd1306_UpdateScreen>
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 80017b8:	4620      	mov	r0, r4
 80017ba:	2102      	movs	r1, #2
 80017bc:	f004 ff9e 	bl	80066fc <HAL_GPIO_TogglePin>
	  osDelay(100);
 80017c0:	2064      	movs	r0, #100	@ 0x64
 80017c2:	f00b feb9 	bl	800d538 <osDelay>
  for(;;)
 80017c6:	e7f3      	b.n	80017b0 <StartTask04+0x4>
 80017c8:	48000400 	.word	0x48000400

080017cc <StartTask05>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask05 */
void StartTask05(void const * argument)
{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	4c17      	ldr	r4, [pc, #92]	@ (800182c <StartTask05+0x60>)
 80017d0:	f8df 9068 	ldr.w	r9, [pc, #104]	@ 800183c <StartTask05+0x70>
 80017d4:	f8df 8068 	ldr.w	r8, [pc, #104]	@ 8001840 <StartTask05+0x74>
  /* Infinite loop */
  for(;;)
  {

	  if(GNSSData.fixType>=3){
		  bmp581_read_precise_normal(&bmp581);
 80017d8:	4d15      	ldr	r5, [pc, #84]	@ (8001830 <StartTask05+0x64>)
		  P0 =(double) bmppress / powf((1 - (GNSSData.fhMSL / 44330.0f)), 5.255f);
 80017da:	eddf 8a16 	vldr	s17, [pc, #88]	@ 8001834 <StartTask05+0x68>
 80017de:	ed9f 8a16 	vldr	s16, [pc, #88]	@ 8001838 <StartTask05+0x6c>
	  if(GNSSData.fixType>=3){
 80017e2:	f894 3077 	ldrb.w	r3, [r4, #119]	@ 0x77
 80017e6:	2b02      	cmp	r3, #2
		  bmp581_read_precise_normal(&bmp581);
 80017e8:	4628      	mov	r0, r5
	  if(GNSSData.fixType>=3){
 80017ea:	d919      	bls.n	8001820 <StartTask05+0x54>
		  bmp581_read_precise_normal(&bmp581);
 80017ec:	f000 f900 	bl	80019f0 <bmp581_read_precise_normal>
		  P0 =(double) bmppress / powf((1 - (GNSSData.fhMSL / 44330.0f)), 5.255f);
 80017f0:	edd4 7a29 	vldr	s15, [r4, #164]	@ 0xa4
 80017f4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80017f8:	eea7 0ae8 	vfms.f32	s0, s15, s17
 80017fc:	e9d9 6700 	ldrd	r6, r7, [r9]
 8001800:	eef0 0a48 	vmov.f32	s1, s16
 8001804:	f012 fa78 	bl	8013cf8 <powf>
 8001808:	ee10 0a10 	vmov	r0, s0
 800180c:	f7fe fe74 	bl	80004f8 <__aeabi_f2d>
 8001810:	4602      	mov	r2, r0
 8001812:	460b      	mov	r3, r1
 8001814:	4630      	mov	r0, r6
 8001816:	4639      	mov	r1, r7
 8001818:	f7fe fff0 	bl	80007fc <__aeabi_ddiv>
 800181c:	e9c8 0100 	strd	r0, r1, [r8]

	  }
    osDelay(20000);
 8001820:	f644 6020 	movw	r0, #20000	@ 0x4e20
 8001824:	f00b fe88 	bl	800d538 <osDelay>
	  if(GNSSData.fixType>=3){
 8001828:	e7db      	b.n	80017e2 <StartTask05+0x16>
 800182a:	bf00      	nop
 800182c:	20000510 	.word	0x20000510
 8001830:	200005d8 	.word	0x200005d8
 8001834:	37bd3b20 	.word	0x37bd3b20
 8001838:	40a828f6 	.word	0x40a828f6
 800183c:	20000410 	.word	0x20000410
 8001840:	20000010 	.word	0x20000010

08001844 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 8001844:	b570      	push	{r4, r5, r6, lr}
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 8001846:	4c32      	ldr	r4, [pc, #200]	@ (8001910 <MX_FREERTOS_Init+0xcc>)
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 8001848:	4e32      	ldr	r6, [pc, #200]	@ (8001914 <MX_FREERTOS_Init+0xd0>)
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 800184a:	4d33      	ldr	r5, [pc, #204]	@ (8001918 <MX_FREERTOS_Init+0xd4>)
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 800184c:	46a6      	mov	lr, r4
 800184e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
void MX_FREERTOS_Init(void) {
 8001852:	b09a      	sub	sp, #104	@ 0x68
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 8001854:	f10d 0c04 	add.w	ip, sp, #4
 8001858:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800185c:	f8de 3000 	ldr.w	r3, [lr]
 8001860:	f8cc 3000 	str.w	r3, [ip]
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001864:	2100      	movs	r1, #0
 8001866:	a801      	add	r0, sp, #4
 8001868:	f00b fe40 	bl	800d4ec <osThreadCreate>
 800186c:	4b2b      	ldr	r3, [pc, #172]	@ (800191c <MX_FREERTOS_Init+0xd8>)
  osThreadDef(GNSSPARSE, StartTask02, osPriorityAboveNormal, 0, 256);
 800186e:	f104 0e14 	add.w	lr, r4, #20
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001872:	6018      	str	r0, [r3, #0]
  osThreadDef(GNSSPARSE, StartTask02, osPriorityAboveNormal, 0, 256);
 8001874:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8001878:	f10d 0c18 	add.w	ip, sp, #24
 800187c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001880:	f8de 3000 	ldr.w	r3, [lr]
 8001884:	f8cc 3000 	str.w	r3, [ip]
  GNSSPARSEHandle = osThreadCreate(osThread(GNSSPARSE), NULL);
 8001888:	2100      	movs	r1, #0
 800188a:	a806      	add	r0, sp, #24
 800188c:	f00b fe2e 	bl	800d4ec <osThreadCreate>
 8001890:	4b23      	ldr	r3, [pc, #140]	@ (8001920 <MX_FREERTOS_Init+0xdc>)
  osThreadDef(BALISE, StartTask03, osPriorityRealtime, 0, 256);
 8001892:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
  GNSSPARSEHandle = osThreadCreate(osThread(GNSSPARSE), NULL);
 8001896:	6018      	str	r0, [r3, #0]
  osThreadDef(BALISE, StartTask03, osPriorityRealtime, 0, 256);
 8001898:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800189c:	f10d 0c2c 	add.w	ip, sp, #44	@ 0x2c
 80018a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80018a4:	f8de 3000 	ldr.w	r3, [lr]
 80018a8:	f8cc 3000 	str.w	r3, [ip]
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 80018ac:	2100      	movs	r1, #0
 80018ae:	a80b      	add	r0, sp, #44	@ 0x2c
 80018b0:	f00b fe1c 	bl	800d4ec <osThreadCreate>
  osThreadDef(USBTRANSMIT, StartTask04, osPriorityHigh, 0, 256);
 80018b4:	f104 0e3c 	add.w	lr, r4, #60	@ 0x3c
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 80018b8:	6030      	str	r0, [r6, #0]
  osThreadDef(USBTRANSMIT, StartTask04, osPriorityHigh, 0, 256);
 80018ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80018be:	f10d 0c40 	add.w	ip, sp, #64	@ 0x40
 80018c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80018c6:	f8de 3000 	ldr.w	r3, [lr]
 80018ca:	f8cc 3000 	str.w	r3, [ip]
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 80018ce:	2100      	movs	r1, #0
 80018d0:	a810      	add	r0, sp, #64	@ 0x40
 80018d2:	f00b fe0b 	bl	800d4ec <osThreadCreate>
  osThreadDef(BAROCALIB, StartTask05, osPriorityBelowNormal, 0, 256);
 80018d6:	f104 0c50 	add.w	ip, r4, #80	@ 0x50
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 80018da:	6028      	str	r0, [r5, #0]
  osThreadDef(BAROCALIB, StartTask05, osPriorityBelowNormal, 0, 256);
 80018dc:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80018e0:	ac15      	add	r4, sp, #84	@ 0x54
 80018e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80018e4:	f8dc 3000 	ldr.w	r3, [ip]
 80018e8:	6023      	str	r3, [r4, #0]
  BAROCALIBHandle = osThreadCreate(osThread(BAROCALIB), NULL);
 80018ea:	2100      	movs	r1, #0
 80018ec:	a815      	add	r0, sp, #84	@ 0x54
 80018ee:	f00b fdfd 	bl	800d4ec <osThreadCreate>
 80018f2:	4b0c      	ldr	r3, [pc, #48]	@ (8001924 <MX_FREERTOS_Init+0xe0>)
 80018f4:	4602      	mov	r2, r0
  osThreadSuspend(BALISEHandle);
 80018f6:	6830      	ldr	r0, [r6, #0]
  BAROCALIBHandle = osThreadCreate(osThread(BAROCALIB), NULL);
 80018f8:	601a      	str	r2, [r3, #0]
  osThreadSuspend(BALISEHandle);
 80018fa:	f00b fe25 	bl	800d548 <osThreadSuspend>
  osThreadSuspend(USBTRANSMITHandle);
 80018fe:	6828      	ldr	r0, [r5, #0]
 8001900:	f00b fe22 	bl	800d548 <osThreadSuspend>
  osThreadSetPriority(USBTRANSMITHandle, osPriorityRealtime);
 8001904:	6828      	ldr	r0, [r5, #0]
 8001906:	2103      	movs	r1, #3
 8001908:	f00b fe0c 	bl	800d524 <osThreadSetPriority>
}
 800190c:	b01a      	add	sp, #104	@ 0x68
 800190e:	bd70      	pop	{r4, r5, r6, pc}
 8001910:	08015e88 	.word	0x08015e88
 8001914:	200003f4 	.word	0x200003f4
 8001918:	200003f0 	.word	0x200003f0
 800191c:	200003fc 	.word	0x200003fc
 8001920:	200003f8 	.word	0x200003f8
 8001924:	200003ec 	.word	0x200003ec

08001928 <bmp581_init_precise_normal>:
uint8_t odrcheck=0;
double P0=101325.0;

//Ox18 donc 11000 pour ODR donc 5hz en mode normal avec oversampling a 128 pour la pression et 8 pour la temperature

uint8_t bmp581_init_precise_normal(BMP_t * bmp581){
 8001928:	b570      	push	{r4, r5, r6, lr}
 800192a:	b086      	sub	sp, #24

//	uint8_t OSR_tmask = 0b01111111;
//	uint8_t ODR_tmask = 0b01100001;

	uint8_t OSR_tmask = 0b01111011;
 800192c:	217b      	movs	r1, #123	@ 0x7b
	uint8_t ODR_tmask = 0b01101001;
 800192e:	2269      	movs	r2, #105	@ 0x69
	uint8_t DSP_conf_mask = 0b00101011;
	uint8_t DSP_conf_mask2 = 0b00010010;
	int check=0;

	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001930:	2501      	movs	r5, #1
 8001932:	2664      	movs	r6, #100	@ 0x64
 8001934:	ab05      	add	r3, sp, #20
	uint8_t OSR_tmask = 0b01111011;
 8001936:	f88d 1014 	strb.w	r1, [sp, #20]
	uint8_t ODR_tmask = 0b01101001;
 800193a:	f88d 2015 	strb.w	r2, [sp, #21]
	uint8_t DSP_conf_mask = 0b00101011;
 800193e:	212b      	movs	r1, #43	@ 0x2b
	uint8_t DSP_conf_mask2 = 0b00010010;
 8001940:	2212      	movs	r2, #18
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001942:	9300      	str	r3, [sp, #0]
	uint8_t DSP_conf_mask = 0b00101011;
 8001944:	f88d 1016 	strb.w	r1, [sp, #22]
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001948:	462b      	mov	r3, r5
	uint8_t DSP_conf_mask2 = 0b00010010;
 800194a:	f88d 2017 	strb.w	r2, [sp, #23]
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 800194e:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001952:	2236      	movs	r2, #54	@ 0x36
 8001954:	218e      	movs	r1, #142	@ 0x8e
 8001956:	4823      	ldr	r0, [pc, #140]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
 8001958:	f005 fa14 	bl	8006d84 <HAL_I2C_Mem_Write>
			check=1;
		}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800195c:	f10d 0315 	add.w	r3, sp, #21
 8001960:	9300      	str	r3, [sp, #0]
 8001962:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001966:	462b      	mov	r3, r5
 8001968:	2237      	movs	r2, #55	@ 0x37
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 800196a:	4604      	mov	r4, r0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800196c:	218e      	movs	r1, #142	@ 0x8e
 800196e:	481d      	ldr	r0, [pc, #116]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
 8001970:	f005 fa08 	bl	8006d84 <HAL_I2C_Mem_Write>
 8001974:	4304      	orrs	r4, r0
					check=1;
				}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 8001976:	f10d 0316 	add.w	r3, sp, #22
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800197a:	b2e4      	uxtb	r4, r4
 800197c:	3c00      	subs	r4, #0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 800197e:	9300      	str	r3, [sp, #0]
 8001980:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001984:	462b      	mov	r3, r5
 8001986:	f04f 0230 	mov.w	r2, #48	@ 0x30
 800198a:	f04f 018e 	mov.w	r1, #142	@ 0x8e
 800198e:	4815      	ldr	r0, [pc, #84]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 8001990:	bf18      	it	ne
 8001992:	2401      	movne	r4, #1
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 8001994:	f005 f9f6 	bl	8006d84 <HAL_I2C_Mem_Write>
				check=1;
			}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 8001998:	f10d 0317 	add.w	r3, sp, #23
				check=1;
 800199c:	2800      	cmp	r0, #0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 800199e:	9300      	str	r3, [sp, #0]
 80019a0:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80019a4:	462b      	mov	r3, r5
 80019a6:	f04f 0230 	mov.w	r2, #48	@ 0x30
 80019aa:	f04f 018e 	mov.w	r1, #142	@ 0x8e
 80019ae:	480d      	ldr	r0, [pc, #52]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
				check=1;
 80019b0:	bf18      	it	ne
 80019b2:	462c      	movne	r4, r5
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 80019b4:	f005 f9e6 	bl	8006d84 <HAL_I2C_Mem_Write>
					check=1;
				}
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019b8:	4b0b      	ldr	r3, [pc, #44]	@ (80019e8 <bmp581_init_precise_normal+0xc0>)
 80019ba:	9300      	str	r3, [sp, #0]
					check=1;
 80019bc:	2800      	cmp	r0, #0
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019be:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80019c2:	462b      	mov	r3, r5
 80019c4:	f04f 0238 	mov.w	r2, #56	@ 0x38
 80019c8:	f04f 018f 	mov.w	r1, #143	@ 0x8f
 80019cc:	4805      	ldr	r0, [pc, #20]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
					check=1;
 80019ce:	bf18      	it	ne
 80019d0:	462c      	movne	r4, r5
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019d2:	f005 fad3 	bl	8006f7c <HAL_I2C_Mem_Read>
 80019d6:	2800      	cmp	r0, #0
				}


	return check;

}
 80019d8:	bf0c      	ite	eq
 80019da:	4620      	moveq	r0, r4
 80019dc:	4628      	movne	r0, r5
 80019de:	b006      	add	sp, #24
 80019e0:	bd70      	pop	{r4, r5, r6, pc}
 80019e2:	bf00      	nop
 80019e4:	20000478 	.word	0x20000478
 80019e8:	20000400 	.word	0x20000400
 80019ec:	00000000 	.word	0x00000000

080019f0 <bmp581_read_precise_normal>:




uint8_t bmp581_read_precise_normal(BMP_t * bmp581){
 80019f0:	b570      	push	{r4, r5, r6, lr}
 80019f2:	b086      	sub	sp, #24
//			check=1;
//		}
//		if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_PRESS_DATA_MSB, 1, &recarray[5], 1, 100)!=HAL_OK){
//			check=1;
//		}
		if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_TEMP_DATA_XLSB, 1, &recarray, 6, 100)!=HAL_OK){
 80019f4:	2164      	movs	r1, #100	@ 0x64
 80019f6:	2206      	movs	r2, #6
 80019f8:	ab04      	add	r3, sp, #16
 80019fa:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80019fe:	9300      	str	r3, [sp, #0]
 8001a00:	4829      	ldr	r0, [pc, #164]	@ (8001aa8 <bmp581_read_precise_normal+0xb8>)
 8001a02:	2301      	movs	r3, #1
 8001a04:	221d      	movs	r2, #29
 8001a06:	218f      	movs	r1, #143	@ 0x8f
 8001a08:	f005 fab8 	bl	8006f7c <HAL_I2C_Mem_Read>
 8001a0c:	2800      	cmp	r0, #0
 8001a0e:	d141      	bne.n	8001a94 <bmp581_read_precise_normal+0xa4>
				}


		if(check==0){

		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a10:	f89d 3011 	ldrb.w	r3, [sp, #17]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a14:	f89d 5014 	ldrb.w	r5, [sp, #20]
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a18:	f89d 1012 	ldrb.w	r1, [sp, #18]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a1c:	f89d 2015 	ldrb.w	r2, [sp, #21]
		bmptemp=(double)intbuffertemp/65536.0;
 8001a20:	4e22      	ldr	r6, [pc, #136]	@ (8001aac <bmp581_read_precise_normal+0xbc>)
 8001a22:	4604      	mov	r4, r0
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a24:	021b      	lsls	r3, r3, #8
 8001a26:	f89d 0010 	ldrb.w	r0, [sp, #16]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a2a:	022d      	lsls	r5, r5, #8
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a2c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a30:	ea45 4502 	orr.w	r5, r5, r2, lsl #16
 8001a34:	f89d 2013 	ldrb.w	r2, [sp, #19]
		bmptemp=(double)intbuffertemp/65536.0;
 8001a38:	4318      	orrs	r0, r3
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a3a:	4315      	orrs	r5, r2
		bmptemp=(double)intbuffertemp/65536.0;
 8001a3c:	f7fe fd4a 	bl	80004d4 <__aeabi_i2d>
 8001a40:	4b1b      	ldr	r3, [pc, #108]	@ (8001ab0 <bmp581_read_precise_normal+0xc0>)
 8001a42:	2200      	movs	r2, #0
 8001a44:	f7fe fdb0 	bl	80005a8 <__aeabi_dmul>
 8001a48:	4602      	mov	r2, r0
 8001a4a:	460b      	mov	r3, r1
 8001a4c:	e9c6 2300 	strd	r2, r3, [r6]
		bmppress=(double) intbufferpres/64.0;
 8001a50:	4628      	mov	r0, r5
 8001a52:	f7fe fd3f 	bl	80004d4 <__aeabi_i2d>
 8001a56:	4b17      	ldr	r3, [pc, #92]	@ (8001ab4 <bmp581_read_precise_normal+0xc4>)
		bmpalt=(double) ((8.314*298.15)/(9.80665*0.028964))*log(P0/(bmppress));
 8001a58:	4d17      	ldr	r5, [pc, #92]	@ (8001ab8 <bmp581_read_precise_normal+0xc8>)
		bmppress=(double) intbufferpres/64.0;
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	f7fe fda4 	bl	80005a8 <__aeabi_dmul>
 8001a60:	460b      	mov	r3, r1
 8001a62:	4916      	ldr	r1, [pc, #88]	@ (8001abc <bmp581_read_precise_normal+0xcc>)
 8001a64:	4602      	mov	r2, r0
 8001a66:	e9c1 2300 	strd	r2, r3, [r1]
		bmpalt=(double) ((8.314*298.15)/(9.80665*0.028964))*log(P0/(bmppress));
 8001a6a:	e9d5 0100 	ldrd	r0, r1, [r5]
 8001a6e:	f7fe fec5 	bl	80007fc <__aeabi_ddiv>
 8001a72:	ec41 0b10 	vmov	d0, r0, r1
 8001a76:	f012 f857 	bl	8013b28 <log>
 8001a7a:	a309      	add	r3, pc, #36	@ (adr r3, 8001aa0 <bmp581_read_precise_normal+0xb0>)
 8001a7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a80:	ec51 0b10 	vmov	r0, r1, d0
 8001a84:	f7fe fd90 	bl	80005a8 <__aeabi_dmul>
 8001a88:	4d0d      	ldr	r5, [pc, #52]	@ (8001ac0 <bmp581_read_precise_normal+0xd0>)
 8001a8a:	e9c5 0100 	strd	r0, r1, [r5]

		}

		return check;
}
 8001a8e:	4620      	mov	r0, r4
 8001a90:	b006      	add	sp, #24
 8001a92:	bd70      	pop	{r4, r5, r6, pc}
 8001a94:	2401      	movs	r4, #1
 8001a96:	4620      	mov	r0, r4
 8001a98:	b006      	add	sp, #24
 8001a9a:	bd70      	pop	{r4, r5, r6, pc}
 8001a9c:	f3af 8000 	nop.w
 8001aa0:	a7b85a1b 	.word	0xa7b85a1b
 8001aa4:	40c10b81 	.word	0x40c10b81
 8001aa8:	20000478 	.word	0x20000478
 8001aac:	20000418 	.word	0x20000418
 8001ab0:	3ef00000 	.word	0x3ef00000
 8001ab4:	3f900000 	.word	0x3f900000
 8001ab8:	20000010 	.word	0x20000010
 8001abc:	20000410 	.word	0x20000410
 8001ac0:	20000408 	.word	0x20000408

08001ac4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001ac4:	b510      	push	{r4, lr}
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001ac6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001aca:	b082      	sub	sp, #8
 8001acc:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8001ace:	f040 0004 	orr.w	r0, r0, #4
 8001ad2:	6498      	str	r0, [r3, #72]	@ 0x48
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001ad4:	6c9c      	ldr	r4, [r3, #72]	@ 0x48
 8001ad6:	f004 0404 	and.w	r4, r4, #4
 8001ada:	9401      	str	r4, [sp, #4]
  (void)tmpreg;
 8001adc:	9c01      	ldr	r4, [sp, #4]
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001ade:	6c9c      	ldr	r4, [r3, #72]	@ 0x48
 8001ae0:	f044 0401 	orr.w	r4, r4, #1
 8001ae4:	649c      	str	r4, [r3, #72]	@ 0x48
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001ae6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ae8:	f003 0301 	and.w	r3, r3, #1
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
  __HAL_RCC_DMA1_CLK_ENABLE();

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 5, 0);
 8001aec:	2200      	movs	r2, #0
 8001aee:	2105      	movs	r1, #5
 8001af0:	9300      	str	r3, [sp, #0]
 8001af2:	200b      	movs	r0, #11
  (void)tmpreg;
 8001af4:	9b00      	ldr	r3, [sp, #0]
 8001af6:	f004 fa67 	bl	8005fc8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001afa:	200b      	movs	r0, #11
 8001afc:	f004 faa0 	bl	8006040 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 6, 0);
 8001b00:	2200      	movs	r2, #0
 8001b02:	2106      	movs	r1, #6
 8001b04:	200c      	movs	r0, #12
 8001b06:	f004 fa5f 	bl	8005fc8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 8001b0a:	200c      	movs	r0, #12
 8001b0c:	f004 fa98 	bl	8006040 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 5, 0);
 8001b10:	2200      	movs	r2, #0
 8001b12:	2105      	movs	r1, #5
 8001b14:	200d      	movs	r0, #13
 8001b16:	f004 fa57 	bl	8005fc8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b1a:	200d      	movs	r0, #13

}
 8001b1c:	b002      	add	sp, #8
 8001b1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b22:	f004 ba8d 	b.w	8006040 <HAL_NVIC_EnableIRQ>
 8001b26:	bf00      	nop

08001b28 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001b28:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2a:	2400      	movs	r4, #0
{
 8001b2c:	b08a      	sub	sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001b32:	e9cd 4406 	strd	r4, r4, [sp, #24]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b36:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001b3a:	9408      	str	r4, [sp, #32]
 8001b3c:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|SPI_CS_Pin, GPIO_PIN_RESET);
 8001b3e:	4e27      	ldr	r6, [pc, #156]	@ (8001bdc <MX_GPIO_Init+0xb4>)
 8001b40:	f041 0104 	orr.w	r1, r1, #4
 8001b44:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b46:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b48:	f001 0104 	and.w	r1, r1, #4
 8001b4c:	9103      	str	r1, [sp, #12]
  (void)tmpreg;
 8001b4e:	9903      	ldr	r1, [sp, #12]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b50:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b52:	f041 0102 	orr.w	r1, r1, #2
 8001b56:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b58:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b5a:	f001 0102 	and.w	r1, r1, #2
 8001b5e:	9102      	str	r1, [sp, #8]
  (void)tmpreg;
 8001b60:	9902      	ldr	r1, [sp, #8]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b62:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b64:	f041 0101 	orr.w	r1, r1, #1
 8001b68:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b6a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b6c:	f003 0301 	and.w	r3, r3, #1
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 8001b70:	4622      	mov	r2, r4
 8001b72:	9301      	str	r3, [sp, #4]
 8001b74:	2101      	movs	r1, #1
 8001b76:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8001b7a:	9b01      	ldr	r3, [sp, #4]
 8001b7c:	f004 fdb8 	bl	80066f0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|SPI_CS_Pin, GPIO_PIN_RESET);
 8001b80:	4622      	mov	r2, r4
 8001b82:	4630      	mov	r0, r6
 8001b84:	2183      	movs	r1, #131	@ 0x83
 8001b86:	f004 fdb3 	bl	80066f0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC14 PC15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001b8a:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001b8e:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b92:	a904      	add	r1, sp, #16
 8001b94:	4812      	ldr	r0, [pc, #72]	@ (8001be0 <MX_GPIO_Init+0xb8>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b96:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001b98:	e9cd 2304 	strd	r2, r3, [sp, #16]

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001b9c:	2501      	movs	r5, #1
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b9e:	f004 fc05 	bl	80063ac <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba2:	a904      	add	r1, sp, #16
 8001ba4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ba8:	e9cd 5504 	strd	r5, r5, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bac:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb0:	f004 fbfc 	bl	80063ac <HAL_GPIO_Init>

  /*Configure GPIO pins : LED0_Pin LED1_Pin SPI_CS_Pin */
  GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin|SPI_CS_Pin;
 8001bb4:	2383      	movs	r3, #131	@ 0x83
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb6:	a904      	add	r1, sp, #16
 8001bb8:	4630      	mov	r0, r6
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	e9cd 3504 	strd	r3, r5, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bbe:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc2:	f004 fbf3 	bl	80063ac <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001bc6:	4622      	mov	r2, r4
 8001bc8:	2105      	movs	r1, #5
 8001bca:	2028      	movs	r0, #40	@ 0x28
 8001bcc:	f004 f9fc 	bl	8005fc8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001bd0:	2028      	movs	r0, #40	@ 0x28
 8001bd2:	f004 fa35 	bl	8006040 <HAL_NVIC_EnableIRQ>

}
 8001bd6:	b00a      	add	sp, #40	@ 0x28
 8001bd8:	bd70      	pop	{r4, r5, r6, pc}
 8001bda:	bf00      	nop
 8001bdc:	48000400 	.word	0x48000400
 8001be0:	48000800 	.word	0x48000800

08001be4 <MX_I2C1_Init>:
I2C_HandleTypeDef hi2c1;
I2C_HandleTypeDef hi2c3;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8001be4:	b510      	push	{r4, lr}
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001be6:	4818      	ldr	r0, [pc, #96]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001be8:	4c18      	ldr	r4, [pc, #96]	@ (8001c4c <MX_I2C1_Init+0x68>)
  hi2c1.Init.Timing = 0x10B17DB5;
 8001bea:	4919      	ldr	r1, [pc, #100]	@ (8001c50 <MX_I2C1_Init+0x6c>)
 8001bec:	2300      	movs	r3, #0
 8001bee:	2201      	movs	r2, #1
 8001bf0:	e9c0 4100 	strd	r4, r1, [r0]
 8001bf4:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8001bf8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001bfc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8001c00:	6203      	str	r3, [r0, #32]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001c02:	f005 f865 	bl	8006cd0 <HAL_I2C_Init>
 8001c06:	b950      	cbnz	r0, 8001c1e <MX_I2C1_Init+0x3a>
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c08:	480f      	ldr	r0, [pc, #60]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	f005 fab4 	bl	8007178 <HAL_I2CEx_ConfigAnalogFilter>
 8001c10:	b968      	cbnz	r0, 8001c2e <MX_I2C1_Init+0x4a>
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001c12:	480d      	ldr	r0, [pc, #52]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c14:	2100      	movs	r1, #0
 8001c16:	f005 fad9 	bl	80071cc <HAL_I2CEx_ConfigDigitalFilter>
 8001c1a:	b980      	cbnz	r0, 8001c3e <MX_I2C1_Init+0x5a>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001c1c:	bd10      	pop	{r4, pc}
    Error_Handler();
 8001c1e:	f000 fb23 	bl	8002268 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c22:	4809      	ldr	r0, [pc, #36]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c24:	2100      	movs	r1, #0
 8001c26:	f005 faa7 	bl	8007178 <HAL_I2CEx_ConfigAnalogFilter>
 8001c2a:	2800      	cmp	r0, #0
 8001c2c:	d0f1      	beq.n	8001c12 <MX_I2C1_Init+0x2e>
    Error_Handler();
 8001c2e:	f000 fb1b 	bl	8002268 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001c32:	4805      	ldr	r0, [pc, #20]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c34:	2100      	movs	r1, #0
 8001c36:	f005 fac9 	bl	80071cc <HAL_I2CEx_ConfigDigitalFilter>
 8001c3a:	2800      	cmp	r0, #0
 8001c3c:	d0ee      	beq.n	8001c1c <MX_I2C1_Init+0x38>
}
 8001c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8001c42:	f000 bb11 	b.w	8002268 <Error_Handler>
 8001c46:	bf00      	nop
 8001c48:	20000478 	.word	0x20000478
 8001c4c:	40005400 	.word	0x40005400
 8001c50:	10b17db5 	.word	0x10b17db5

08001c54 <MX_I2C3_Init>:
/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8001c54:	b510      	push	{r4, lr}
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8001c56:	481c      	ldr	r0, [pc, #112]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c58:	4c1c      	ldr	r4, [pc, #112]	@ (8001ccc <MX_I2C3_Init+0x78>)
  hi2c3.Init.Timing = 0x00910B1C;
 8001c5a:	491d      	ldr	r1, [pc, #116]	@ (8001cd0 <MX_I2C3_Init+0x7c>)
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	2201      	movs	r2, #1
 8001c60:	e9c0 4100 	strd	r4, r1, [r0]
 8001c64:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8001c68:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001c6c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8001c70:	6203      	str	r3, [r0, #32]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c3.Init.OwnAddress2 = 0;
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c72:	f005 f82d 	bl	8006cd0 <HAL_I2C_Init>
 8001c76:	b978      	cbnz	r0, 8001c98 <MX_I2C3_Init+0x44>
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c78:	4813      	ldr	r0, [pc, #76]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c7a:	2100      	movs	r1, #0
 8001c7c:	f005 fa7c 	bl	8007178 <HAL_I2CEx_ConfigAnalogFilter>
 8001c80:	b990      	cbnz	r0, 8001ca8 <MX_I2C3_Init+0x54>
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c82:	4811      	ldr	r0, [pc, #68]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c84:	2100      	movs	r1, #0
 8001c86:	f005 faa1 	bl	80071cc <HAL_I2CEx_ConfigDigitalFilter>
 8001c8a:	b9a8      	cbnz	r0, 8001cb8 <MX_I2C3_Init+0x64>
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
 8001c90:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8001c94:	f005 bac6 	b.w	8007224 <HAL_I2CEx_EnableFastModePlus>
    Error_Handler();
 8001c98:	f000 fae6 	bl	8002268 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c9c:	480a      	ldr	r0, [pc, #40]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c9e:	2100      	movs	r1, #0
 8001ca0:	f005 fa6a 	bl	8007178 <HAL_I2CEx_ConfigAnalogFilter>
 8001ca4:	2800      	cmp	r0, #0
 8001ca6:	d0ec      	beq.n	8001c82 <MX_I2C3_Init+0x2e>
    Error_Handler();
 8001ca8:	f000 fade 	bl	8002268 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001cac:	4806      	ldr	r0, [pc, #24]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001cae:	2100      	movs	r1, #0
 8001cb0:	f005 fa8c 	bl	80071cc <HAL_I2CEx_ConfigDigitalFilter>
 8001cb4:	2800      	cmp	r0, #0
 8001cb6:	d0e9      	beq.n	8001c8c <MX_I2C3_Init+0x38>
    Error_Handler();
 8001cb8:	f000 fad6 	bl	8002268 <Error_Handler>
}
 8001cbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
 8001cc0:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8001cc4:	f005 baae 	b.w	8007224 <HAL_I2CEx_EnableFastModePlus>
 8001cc8:	20000420 	.word	0x20000420
 8001ccc:	40005c00 	.word	0x40005c00
 8001cd0:	00910b1c 	.word	0x00910b1c

08001cd4 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cd6:	4604      	mov	r4, r0
 8001cd8:	b0a1      	sub	sp, #132	@ 0x84

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cda:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cdc:	2250      	movs	r2, #80	@ 0x50
 8001cde:	a80c      	add	r0, sp, #48	@ 0x30
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ce0:	e9cd 1106 	strd	r1, r1, [sp, #24]
 8001ce4:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001ce8:	910a      	str	r1, [sp, #40]	@ 0x28
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cea:	f00e fbbc 	bl	8010466 <memset>
  if(i2cHandle->Instance==I2C1)
 8001cee:	4a40      	ldr	r2, [pc, #256]	@ (8001df0 <HAL_I2C_MspInit+0x11c>)
 8001cf0:	6823      	ldr	r3, [r4, #0]
 8001cf2:	4293      	cmp	r3, r2
 8001cf4:	d004      	beq.n	8001d00 <HAL_I2C_MspInit+0x2c>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
  else if(i2cHandle->Instance==I2C3)
 8001cf6:	4a3f      	ldr	r2, [pc, #252]	@ (8001df4 <HAL_I2C_MspInit+0x120>)
 8001cf8:	4293      	cmp	r3, r2
 8001cfa:	d030      	beq.n	8001d5e <HAL_I2C_MspInit+0x8a>
    __HAL_RCC_I2C3_CLK_ENABLE();
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8001cfc:	b021      	add	sp, #132	@ 0x84
 8001cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001d00:	2204      	movs	r2, #4
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001d02:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d06:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001d08:	920c      	str	r2, [sp, #48]	@ 0x30
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001d0a:	9314      	str	r3, [sp, #80]	@ 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d0c:	f007 f972 	bl	8008ff4 <HAL_RCCEx_PeriphCLKConfig>
 8001d10:	2800      	cmp	r0, #0
 8001d12:	d167      	bne.n	8001de4 <HAL_I2C_MspInit+0x110>
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d14:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d18:	4837      	ldr	r0, [pc, #220]	@ (8001df8 <HAL_I2C_MspInit+0x124>)
 8001d1a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d1c:	f043 0302 	orr.w	r3, r3, #2
 8001d20:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d22:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d24:	f003 0302 	and.w	r3, r3, #2
 8001d28:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001d2a:	2304      	movs	r3, #4
  (void)tmpreg;
 8001d2c:	9a02      	ldr	r2, [sp, #8]
 8001d2e:	930a      	str	r3, [sp, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001d30:	2200      	movs	r2, #0
 8001d32:	2300      	movs	r3, #0
 8001d34:	f44f 7640 	mov.w	r6, #768	@ 0x300
 8001d38:	2712      	movs	r7, #18
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d3a:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001d3c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001d40:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d44:	f004 fb32 	bl	80063ac <HAL_GPIO_Init>
  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR1, Periphs);
 8001d48:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d4a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001d4e:	65a3      	str	r3, [r4, #88]	@ 0x58
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8001d50:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d52:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001d56:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8001d58:	9b01      	ldr	r3, [sp, #4]
}
 8001d5a:	b021      	add	sp, #132	@ 0x84
 8001d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001d5e:	2208      	movs	r2, #8
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8001d60:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d64:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001d66:	920c      	str	r2, [sp, #48]	@ 0x30
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8001d68:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d6a:	f007 f943 	bl	8008ff4 <HAL_RCCEx_PeriphCLKConfig>
 8001d6e:	2800      	cmp	r0, #0
 8001d70:	d13b      	bne.n	8001dea <HAL_I2C_MspInit+0x116>
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d72:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001d76:	2080      	movs	r0, #128	@ 0x80
 8001d78:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d7a:	f043 0301 	orr.w	r3, r3, #1
 8001d7e:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d80:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d82:	f003 0301 	and.w	r3, r3, #1
 8001d86:	9305      	str	r3, [sp, #20]
  (void)tmpreg;
 8001d88:	9b05      	ldr	r3, [sp, #20]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d8a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d8c:	f043 0302 	orr.w	r3, r3, #2
 8001d90:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d92:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d94:	2112      	movs	r1, #18
 8001d96:	f003 0302 	and.w	r3, r3, #2
 8001d9a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8001d9e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001da0:	2504      	movs	r5, #4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da2:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001da4:	2600      	movs	r6, #0
 8001da6:	2700      	movs	r7, #0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8001dac:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dae:	950a      	str	r5, [sp, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001db0:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001db4:	f004 fafa 	bl	80063ac <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001db8:	2210      	movs	r2, #16
 8001dba:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dbc:	480e      	ldr	r0, [pc, #56]	@ (8001df8 <HAL_I2C_MspInit+0x124>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dbe:	950a      	str	r5, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dc0:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001dc2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001dc6:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dca:	f004 faef 	bl	80063ac <HAL_GPIO_Init>
  SET_BIT(RCC->APB1ENR1, Periphs);
 8001dce:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001dd0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001dd4:	65a3      	str	r3, [r4, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8001dd6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001dd8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001ddc:	9303      	str	r3, [sp, #12]
  (void)tmpreg;
 8001dde:	9b03      	ldr	r3, [sp, #12]
}
 8001de0:	b021      	add	sp, #132	@ 0x84
 8001de2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      Error_Handler();
 8001de4:	f000 fa40 	bl	8002268 <Error_Handler>
 8001de8:	e794      	b.n	8001d14 <HAL_I2C_MspInit+0x40>
      Error_Handler();
 8001dea:	f000 fa3d 	bl	8002268 <Error_Handler>
 8001dee:	e7c0      	b.n	8001d72 <HAL_I2C_MspInit+0x9e>
 8001df0:	40005400 	.word	0x40005400
 8001df4:	40005c00 	.word	0x40005c00
 8001df8:	48000400 	.word	0x48000400

08001dfc <MX_IPCC_Init>:
  /* USER CODE END IPCC_Init 0 */

  /* USER CODE BEGIN IPCC_Init 1 */

  /* USER CODE END IPCC_Init 1 */
  hipcc.Instance = IPCC;
 8001dfc:	4805      	ldr	r0, [pc, #20]	@ (8001e14 <MX_IPCC_Init+0x18>)
{
 8001dfe:	b508      	push	{r3, lr}
  hipcc.Instance = IPCC;
 8001e00:	4b05      	ldr	r3, [pc, #20]	@ (8001e18 <MX_IPCC_Init+0x1c>)
 8001e02:	6003      	str	r3, [r0, #0]
  if (HAL_IPCC_Init(&hipcc) != HAL_OK)
 8001e04:	f005 fa1a 	bl	800723c <HAL_IPCC_Init>
 8001e08:	b900      	cbnz	r0, 8001e0c <MX_IPCC_Init+0x10>
  }
  /* USER CODE BEGIN IPCC_Init 2 */

  /* USER CODE END IPCC_Init 2 */

}
 8001e0a:	bd08      	pop	{r3, pc}
 8001e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8001e10:	f000 ba2a 	b.w	8002268 <Error_Handler>
 8001e14:	200004cc 	.word	0x200004cc
 8001e18:	58000c00 	.word	0x58000c00

08001e1c <HAL_IPCC_MspInit>:

void HAL_IPCC_MspInit(IPCC_HandleTypeDef* ipccHandle)
{

  if(ipccHandle->Instance==IPCC)
 8001e1c:	4b12      	ldr	r3, [pc, #72]	@ (8001e68 <HAL_IPCC_MspInit+0x4c>)
 8001e1e:	6802      	ldr	r2, [r0, #0]
 8001e20:	429a      	cmp	r2, r3
 8001e22:	d000      	beq.n	8001e26 <HAL_IPCC_MspInit+0xa>
 8001e24:	4770      	bx	lr
{
 8001e26:	b500      	push	{lr}
  SET_BIT(RCC->AHB3ENR, Periphs);
 8001e28:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001e2c:	b083      	sub	sp, #12
 8001e2e:	6d18      	ldr	r0, [r3, #80]	@ 0x50
 8001e30:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 8001e34:	6518      	str	r0, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 8001e36:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001e38:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
  /* USER CODE END IPCC_MspInit 0 */
    /* IPCC clock enable */
    __HAL_RCC_IPCC_CLK_ENABLE();

    /* IPCC interrupt Init */
    HAL_NVIC_SetPriority(IPCC_C1_RX_IRQn, 5, 0);
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	2105      	movs	r1, #5
 8001e40:	9301      	str	r3, [sp, #4]
 8001e42:	202c      	movs	r0, #44	@ 0x2c
  (void)tmpreg;
 8001e44:	9b01      	ldr	r3, [sp, #4]
 8001e46:	f004 f8bf 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(IPCC_C1_RX_IRQn);
 8001e4a:	202c      	movs	r0, #44	@ 0x2c
 8001e4c:	f004 f8f8 	bl	8006040 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(IPCC_C1_TX_IRQn, 5, 0);
 8001e50:	2200      	movs	r2, #0
 8001e52:	2105      	movs	r1, #5
 8001e54:	202d      	movs	r0, #45	@ 0x2d
 8001e56:	f004 f8b7 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(IPCC_C1_TX_IRQn);
 8001e5a:	202d      	movs	r0, #45	@ 0x2d
  /* USER CODE BEGIN IPCC_MspInit 1 */

  /* USER CODE END IPCC_MspInit 1 */
  }
}
 8001e5c:	b003      	add	sp, #12
 8001e5e:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(IPCC_C1_TX_IRQn);
 8001e62:	f004 b8ed 	b.w	8006040 <HAL_NVIC_EnableIRQ>
 8001e66:	bf00      	nop
 8001e68:	58000c00 	.word	0x58000c00

08001e6c <HAL_GPIO_EXTI_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)//lors d'un appuie sur un bouton, le systeme s'interrompt afin d'arriver dans cette fonction redefinie avec en parametre d'entre , le bouton sur lequel l'on a appuiyé
{
	if(GPIO_Pin==GPIO_PIN_14){
 8001e6c:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
{
 8001e70:	b510      	push	{r4, lr}
 8001e72:	4601      	mov	r1, r0
	if(GPIO_Pin==GPIO_PIN_14){
 8001e74:	d01b      	beq.n	8001eae <HAL_GPIO_EXTI_Callback+0x42>
					BTN_A_LONG++;
					BTN_A=0;
				}

	}
	if(GPIO_Pin==GPIO_PIN_15){
 8001e76:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8001e7a:	d000      	beq.n	8001e7e <HAL_GPIO_EXTI_Callback+0x12>
		}



	}
}
 8001e7c:	bd10      	pop	{r4, pc}
		if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_15)== GPIO_PIN_RESET){
 8001e7e:	4822      	ldr	r0, [pc, #136]	@ (8001f08 <HAL_GPIO_EXTI_Callback+0x9c>)
 8001e80:	f004 fc30 	bl	80066e4 <HAL_GPIO_ReadPin>
 8001e84:	2800      	cmp	r0, #0
 8001e86:	d036      	beq.n	8001ef6 <HAL_GPIO_EXTI_Callback+0x8a>
			BTN_B++;
 8001e88:	4a20      	ldr	r2, [pc, #128]	@ (8001f0c <HAL_GPIO_EXTI_Callback+0xa0>)
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e8a:	4c21      	ldr	r4, [pc, #132]	@ (8001f10 <HAL_GPIO_EXTI_Callback+0xa4>)
			BTN_B++;
 8001e8c:	6813      	ldr	r3, [r2, #0]
 8001e8e:	3301      	adds	r3, #1
 8001e90:	6013      	str	r3, [r2, #0]
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e92:	f003 fc57 	bl	8005744 <HAL_GetTick>
 8001e96:	4a1f      	ldr	r2, [pc, #124]	@ (8001f14 <HAL_GPIO_EXTI_Callback+0xa8>)
 8001e98:	6813      	ldr	r3, [r2, #0]
			tbtn2=0;
 8001e9a:	2100      	movs	r1, #0
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e9c:	1ac3      	subs	r3, r0, r3
 8001e9e:	6023      	str	r3, [r4, #0]
			tbtn2=0;
 8001ea0:	6011      	str	r1, [r2, #0]
		if(boutonBtime>=400){
 8001ea2:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 8001ea6:	dbe9      	blt.n	8001e7c <HAL_GPIO_EXTI_Callback+0x10>
			BTN_B_LONG++;
 8001ea8:	4a1b      	ldr	r2, [pc, #108]	@ (8001f18 <HAL_GPIO_EXTI_Callback+0xac>)
			BTN_B=0;
 8001eaa:	4918      	ldr	r1, [pc, #96]	@ (8001f0c <HAL_GPIO_EXTI_Callback+0xa0>)
 8001eac:	e015      	b.n	8001eda <HAL_GPIO_EXTI_Callback+0x6e>
		if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)== GPIO_PIN_RESET){
 8001eae:	4816      	ldr	r0, [pc, #88]	@ (8001f08 <HAL_GPIO_EXTI_Callback+0x9c>)
 8001eb0:	f004 fc18 	bl	80066e4 <HAL_GPIO_ReadPin>
 8001eb4:	b1b8      	cbz	r0, 8001ee6 <HAL_GPIO_EXTI_Callback+0x7a>
					BTN_A++;
 8001eb6:	4a19      	ldr	r2, [pc, #100]	@ (8001f1c <HAL_GPIO_EXTI_Callback+0xb0>)
					boutonAtime=HAL_GetTick()-tbtn1;
 8001eb8:	4c19      	ldr	r4, [pc, #100]	@ (8001f20 <HAL_GPIO_EXTI_Callback+0xb4>)
					BTN_A++;
 8001eba:	6813      	ldr	r3, [r2, #0]
 8001ebc:	3301      	adds	r3, #1
 8001ebe:	6013      	str	r3, [r2, #0]
					boutonAtime=HAL_GetTick()-tbtn1;
 8001ec0:	f003 fc40 	bl	8005744 <HAL_GetTick>
 8001ec4:	4a17      	ldr	r2, [pc, #92]	@ (8001f24 <HAL_GPIO_EXTI_Callback+0xb8>)
 8001ec6:	6813      	ldr	r3, [r2, #0]
					tbtn1=0;
 8001ec8:	2100      	movs	r1, #0
					boutonAtime=HAL_GetTick()-tbtn1;
 8001eca:	1ac3      	subs	r3, r0, r3
 8001ecc:	6023      	str	r3, [r4, #0]
					tbtn1=0;
 8001ece:	6011      	str	r1, [r2, #0]
				if(boutonAtime>=400){
 8001ed0:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 8001ed4:	dbd2      	blt.n	8001e7c <HAL_GPIO_EXTI_Callback+0x10>
					BTN_A_LONG++;
 8001ed6:	4a14      	ldr	r2, [pc, #80]	@ (8001f28 <HAL_GPIO_EXTI_Callback+0xbc>)
					BTN_A=0;
 8001ed8:	4910      	ldr	r1, [pc, #64]	@ (8001f1c <HAL_GPIO_EXTI_Callback+0xb0>)
			BTN_B_LONG++;
 8001eda:	6813      	ldr	r3, [r2, #0]
			BTN_B=0;
 8001edc:	2000      	movs	r0, #0
			BTN_B_LONG++;
 8001ede:	3301      	adds	r3, #1
 8001ee0:	6013      	str	r3, [r2, #0]
			BTN_B=0;
 8001ee2:	6008      	str	r0, [r1, #0]
}
 8001ee4:	bd10      	pop	{r4, pc}
					boutonAtime=0;
 8001ee6:	4c0e      	ldr	r4, [pc, #56]	@ (8001f20 <HAL_GPIO_EXTI_Callback+0xb4>)
 8001ee8:	6020      	str	r0, [r4, #0]
					tbtn1=HAL_GetTick();
 8001eea:	f003 fc2b 	bl	8005744 <HAL_GetTick>
 8001eee:	4a0d      	ldr	r2, [pc, #52]	@ (8001f24 <HAL_GPIO_EXTI_Callback+0xb8>)
				if(boutonAtime>=400){
 8001ef0:	6823      	ldr	r3, [r4, #0]
					tbtn1=HAL_GetTick();
 8001ef2:	6010      	str	r0, [r2, #0]
 8001ef4:	e7ec      	b.n	8001ed0 <HAL_GPIO_EXTI_Callback+0x64>
			boutonBtime=0;
 8001ef6:	4c06      	ldr	r4, [pc, #24]	@ (8001f10 <HAL_GPIO_EXTI_Callback+0xa4>)
 8001ef8:	6020      	str	r0, [r4, #0]
			tbtn2=HAL_GetTick();
 8001efa:	f003 fc23 	bl	8005744 <HAL_GetTick>
 8001efe:	4a05      	ldr	r2, [pc, #20]	@ (8001f14 <HAL_GPIO_EXTI_Callback+0xa8>)
		if(boutonBtime>=400){
 8001f00:	6823      	ldr	r3, [r4, #0]
			tbtn2=HAL_GetTick();
 8001f02:	6010      	str	r0, [r2, #0]
 8001f04:	e7cd      	b.n	8001ea2 <HAL_GPIO_EXTI_Callback+0x36>
 8001f06:	bf00      	nop
 8001f08:	48000800 	.word	0x48000800
 8001f0c:	20000ff4 	.word	0x20000ff4
 8001f10:	200005f0 	.word	0x200005f0
 8001f14:	200005e8 	.word	0x200005e8
 8001f18:	200005e4 	.word	0x200005e4
 8001f1c:	20000ff8 	.word	0x20000ff8
 8001f20:	200005f4 	.word	0x200005f4
 8001f24:	200005ec 	.word	0x200005ec
 8001f28:	200005e0 	.word	0x200005e0
 8001f2c:	00000000 	.word	0x00000000

08001f30 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001f30:	b510      	push	{r4, lr}
 8001f32:	b09c      	sub	sp, #112	@ 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f34:	2224      	movs	r2, #36	@ 0x24
 8001f36:	2100      	movs	r1, #0
 8001f38:	a80c      	add	r0, sp, #48	@ 0x30
 8001f3a:	f00e fa94 	bl	8010466 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f3e:	2300      	movs	r3, #0
 8001f40:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001f44:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001f48:	e9cd 3306 	strd	r3, r3, [sp, #24]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f4c:	4a24      	ldr	r2, [pc, #144]	@ (8001fe0 <SystemClock_Config+0xb0>)
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f4e:	9308      	str	r3, [sp, #32]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f50:	6813      	ldr	r3, [r2, #0]
 8001f52:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001f56:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001f5a:	6013      	str	r3, [r2, #0]
 8001f5c:	6813      	ldr	r3, [r2, #0]
 8001f5e:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001f62:	f44f 7180 	mov.w	r1, #256	@ 0x100
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f66:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001f68:	2340      	movs	r3, #64	@ 0x40
 8001f6a:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8001f6e:	ed9f 7b18 	vldr	d7, [pc, #96]	@ 8001fd0 <SystemClock_Config+0xa0>
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 8001f72:	2310      	movs	r3, #16
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001f74:	2202      	movs	r2, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001f76:	2403      	movs	r4, #3
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 8001f78:	9317      	str	r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLN = 8;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001f7a:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001f7e:	e9cd 2415 	strd	r2, r4, [sp, #84]	@ 0x54
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f82:	9801      	ldr	r0, [sp, #4]
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001f84:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001f86:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001f88:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001f8c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001f90:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8001f92:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001f96:	e9cd 2319 	strd	r2, r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001f9a:	9118      	str	r1, [sp, #96]	@ 0x60
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001f9c:	f006 fab2 	bl	8008504 <HAL_RCC_OscConfig>
 8001fa0:	b108      	cbz	r0, 8001fa6 <SystemClock_Config+0x76>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001fa2:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001fa4:	e7fe      	b.n	8001fa4 <SystemClock_Config+0x74>
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fa6:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 8001fd8 <SystemClock_Config+0xa8>
 8001faa:	4603      	mov	r3, r0
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 8001fac:	226f      	movs	r2, #111	@ 0x6f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001fae:	a802      	add	r0, sp, #8
 8001fb0:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fb2:	ed8d 7b06 	vstr	d7, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001fb6:	e9cd 4303 	strd	r4, r3, [sp, #12]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 8001fba:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001fbc:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 8001fbe:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001fc0:	f006 fdf6 	bl	8008bb0 <HAL_RCC_ClockConfig>
 8001fc4:	b108      	cbz	r0, 8001fca <SystemClock_Config+0x9a>
 8001fc6:	b672      	cpsid	i
  while (1)
 8001fc8:	e7fe      	b.n	8001fc8 <SystemClock_Config+0x98>
}
 8001fca:	b01c      	add	sp, #112	@ 0x70
 8001fcc:	bd10      	pop	{r4, pc}
 8001fce:	bf00      	nop
 8001fd0:	00000003 	.word	0x00000003
 8001fd4:	00010000 	.word	0x00010000
 8001fd8:	00000000 	.word	0x00000000
 8001fdc:	00000080 	.word	0x00000080
 8001fe0:	58000400 	.word	0x58000400
 8001fe4:	00000000 	.word	0x00000000

08001fe8 <PeriphCommonClock_Config>:
{
 8001fe8:	b510      	push	{r4, lr}
 8001fea:	b094      	sub	sp, #80	@ 0x50
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001fec:	2238      	movs	r2, #56	@ 0x38
 8001fee:	2100      	movs	r1, #0
 8001ff0:	a806      	add	r0, sp, #24
 8001ff2:	f00e fa38 	bl	8010466 <memset>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS|RCC_PERIPHCLK_RFWAKEUP
 8001ff6:	f44f 5254 	mov.w	r2, #13568	@ 0x3500
  PeriphClkInitStruct.PLLSAI1.PLLN = 6;
 8001ffa:	2306      	movs	r3, #6
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 8001ffc:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 8002040 <PeriphCommonClock_Config+0x58>
  PeriphClkInitStruct.PLLSAI1.PLLN = 6;
 8002000:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 8002004:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 8002008:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  PeriphClkInitStruct.PLLSAI1.PLLP = RCC_PLLP_DIV2;
 800200c:	f44f 3400 	mov.w	r4, #131072	@ 0x20000
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 8002010:	e9cd 4002 	strd	r4, r0, [sp, #8]
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 8002014:	f04f 5180 	mov.w	r1, #268435456	@ 0x10000000
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002018:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 800201c:	930d      	str	r3, [sp, #52]	@ 0x34
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800201e:	4668      	mov	r0, sp
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002020:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 8002022:	ed8d 7b04 	vstr	d7, [sp, #16]
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002026:	e9cd 2311 	strd	r2, r3, [sp, #68]	@ 0x44
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 800202a:	910f      	str	r1, [sp, #60]	@ 0x3c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800202c:	f006 ffe2 	bl	8008ff4 <HAL_RCCEx_PeriphCLKConfig>
 8002030:	b108      	cbz	r0, 8002036 <PeriphCommonClock_Config+0x4e>
 8002032:	b672      	cpsid	i
  while (1)
 8002034:	e7fe      	b.n	8002034 <PeriphCommonClock_Config+0x4c>
}
 8002036:	b014      	add	sp, #80	@ 0x50
 8002038:	bd10      	pop	{r4, pc}
 800203a:	bf00      	nop
 800203c:	f3af 8000 	nop.w
 8002040:	20000000 	.word	0x20000000
 8002044:	11000000 	.word	0x11000000

08002048 <main>:
{
 8002048:	b530      	push	{r4, r5, lr}
 800204a:	b089      	sub	sp, #36	@ 0x24
  HAL_Init();
 800204c:	f003 fb56 	bl	80056fc <HAL_Init>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002050:	2300      	movs	r3, #0
 8002052:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002056:	e9cd 3306 	strd	r3, r3, [sp, #24]
  SET_BIT(RCC->AHB2ENR, Periphs);
 800205a:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800205e:	4866      	ldr	r0, [pc, #408]	@ (80021f8 <main+0x1b0>)
 8002060:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 8002062:	f043 0304 	orr.w	r3, r3, #4
 8002066:	64d3      	str	r3, [r2, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8002068:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 800206a:	f003 0304 	and.w	r3, r3, #4
 800206e:	9302      	str	r3, [sp, #8]
 8002070:	a903      	add	r1, sp, #12
   GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14;
 8002072:	f44f 4440 	mov.w	r4, #49152	@ 0xc000
  (void)tmpreg;
 8002076:	9b02      	ldr	r3, [sp, #8]
 8002078:	9403      	str	r4, [sp, #12]
   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207a:	f004 f997 	bl	80063ac <HAL_GPIO_Init>
   if ((HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_RESET) &&
 800207e:	485e      	ldr	r0, [pc, #376]	@ (80021f8 <main+0x1b0>)
 8002080:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002084:	f004 fb2e 	bl	80066e4 <HAL_GPIO_ReadPin>
 8002088:	2800      	cmp	r0, #0
 800208a:	f000 808f 	beq.w	80021ac <main+0x164>
   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)==GPIO_PIN_RESET){
 800208e:	485a      	ldr	r0, [pc, #360]	@ (80021f8 <main+0x1b0>)
	   modesansechec=1;
 8002090:	4d5a      	ldr	r5, [pc, #360]	@ (80021fc <main+0x1b4>)
   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)==GPIO_PIN_RESET){
 8002092:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002096:	f004 fb25 	bl	80066e4 <HAL_GPIO_ReadPin>
 800209a:	b908      	cbnz	r0, 80020a0 <main+0x58>
	   modesansechec=1;
 800209c:	2301      	movs	r3, #1
 800209e:	602b      	str	r3, [r5, #0]
  SystemClock_Config();
 80020a0:	f7ff ff46 	bl	8001f30 <SystemClock_Config>
  PeriphCommonClock_Config();
 80020a4:	f7ff ffa0 	bl	8001fe8 <PeriphCommonClock_Config>
  MX_IPCC_Init();
 80020a8:	f7ff fea8 	bl	8001dfc <MX_IPCC_Init>
  MX_GPIO_Init();
 80020ac:	f7ff fd3c 	bl	8001b28 <MX_GPIO_Init>
  MX_DMA_Init();
 80020b0:	f7ff fd08 	bl	8001ac4 <MX_DMA_Init>
  MX_ADC1_Init();
 80020b4:	f7ff f966 	bl	8001384 <MX_ADC1_Init>
  MX_I2C1_Init();
 80020b8:	f7ff fd94 	bl	8001be4 <MX_I2C1_Init>
  MX_I2C3_Init();
 80020bc:	f7ff fdca 	bl	8001c54 <MX_I2C3_Init>
  MX_LPUART1_UART_Init();
 80020c0:	f003 f86e 	bl	80051a0 <MX_LPUART1_UART_Init>
  MX_TIM2_Init();
 80020c4:	f002 ffac 	bl	8005020 <MX_TIM2_Init>
  MX_TIM17_Init();
 80020c8:	f003 f802 	bl	80050d0 <MX_TIM17_Init>
  MX_SPI1_Init();
 80020cc:	f000 f9b6 	bl	800243c <MX_SPI1_Init>
  MX_RTC_Init();
 80020d0:	f000 f8ce 	bl	8002270 <MX_RTC_Init>
  MX_TIM16_Init();
 80020d4:	f002 ffe0 	bl	8005098 <MX_TIM16_Init>
  MX_RF_Init();
 80020d8:	f000 f8c8 	bl	800226c <MX_RF_Init>
  	ssd1306_Init();
 80020dc:	f000 fcc0 	bl	8002a60 <ssd1306_Init>
  	HAL_Delay(10);
 80020e0:	200a      	movs	r0, #10
 80020e2:	f003 fb3b 	bl	800575c <HAL_Delay>
  	ssd1306_Fill(Black);
 80020e6:	2000      	movs	r0, #0
 80020e8:	f000 fc62 	bl	80029b0 <ssd1306_Fill>
  	ssd1306_DrawBitmap(32, 32, startimg, 64, 32, White);
 80020ec:	2401      	movs	r4, #1
 80020ee:	2120      	movs	r1, #32
 80020f0:	2340      	movs	r3, #64	@ 0x40
 80020f2:	4608      	mov	r0, r1
 80020f4:	e9cd 1400 	strd	r1, r4, [sp]
 80020f8:	4a41      	ldr	r2, [pc, #260]	@ (8002200 <main+0x1b8>)
 80020fa:	f000 ff23 	bl	8002f44 <ssd1306_DrawBitmap>
  	ssd1306_UpdateScreen();
 80020fe:	f000 fc63 	bl	80029c8 <ssd1306_UpdateScreen>
  	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 8002102:	4940      	ldr	r1, [pc, #256]	@ (8002204 <main+0x1bc>)
 8002104:	4840      	ldr	r0, [pc, #256]	@ (8002208 <main+0x1c0>)
 8002106:	2203      	movs	r2, #3
 8002108:	f003 fef8 	bl	8005efc <HAL_ADC_Start_DMA>
  	HAL_TIM_Base_Start(&htim2);
 800210c:	483f      	ldr	r0, [pc, #252]	@ (800220c <main+0x1c4>)
 800210e:	f008 fbad 	bl	800a86c <HAL_TIM_Base_Start>
  	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_0,GPIO_PIN_SET);
 8002112:	4622      	mov	r2, r4
 8002114:	4621      	mov	r1, r4
 8002116:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800211a:	f004 fae9 	bl	80066f0 <HAL_GPIO_WritePin>
  	HAL_Delay(100);
 800211e:	2064      	movs	r0, #100	@ 0x64
 8002120:	f003 fb1c 	bl	800575c <HAL_Delay>
  	GNSS_Init(&GNSSData, &hlpuart1);
 8002124:	493a      	ldr	r1, [pc, #232]	@ (8002210 <main+0x1c8>)
 8002126:	483b      	ldr	r0, [pc, #236]	@ (8002214 <main+0x1cc>)
 8002128:	f7fe ff52 	bl	8000fd0 <GNSS_Init>
  	HAL_UART_Abort(&hlpuart1);
 800212c:	4838      	ldr	r0, [pc, #224]	@ (8002210 <main+0x1c8>)
 800212e:	f008 fddf 	bl	800acf0 <HAL_UART_Abort>
  	HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8002132:	4939      	ldr	r1, [pc, #228]	@ (8002218 <main+0x1d0>)
 8002134:	4836      	ldr	r0, [pc, #216]	@ (8002210 <main+0x1c8>)
 8002136:	2264      	movs	r2, #100	@ 0x64
 8002138:	f009 fc62 	bl	800ba00 <HAL_UART_Receive_DMA>
  	memset(flashread,'1',256);
 800213c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002140:	2131      	movs	r1, #49	@ 0x31
 8002142:	4836      	ldr	r0, [pc, #216]	@ (800221c <main+0x1d4>)
 8002144:	f00e f98f 	bl	8010466 <memset>
  	memset(flashwrite,'\0',256);
 8002148:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800214c:	2100      	movs	r1, #0
 800214e:	4834      	ldr	r0, [pc, #208]	@ (8002220 <main+0x1d8>)
 8002150:	f00e f989 	bl	8010466 <memset>
  	memset((uint8_t *)bufferscreen ,'\0',50);
 8002154:	2232      	movs	r2, #50	@ 0x32
 8002156:	2100      	movs	r1, #0
 8002158:	4832      	ldr	r0, [pc, #200]	@ (8002224 <main+0x1dc>)
 800215a:	f00e f984 	bl	8010466 <memset>
  	SPIF_Init(&hspif1, &hspi1, GPIOB, GPIO_PIN_7);
 800215e:	2380      	movs	r3, #128	@ 0x80
 8002160:	4a31      	ldr	r2, [pc, #196]	@ (8002228 <main+0x1e0>)
 8002162:	4932      	ldr	r1, [pc, #200]	@ (800222c <main+0x1e4>)
 8002164:	4832      	ldr	r0, [pc, #200]	@ (8002230 <main+0x1e8>)
 8002166:	f00c fd15 	bl	800eb94 <SPIF_Init>
  	HAL_Delay(100);
 800216a:	2064      	movs	r0, #100	@ 0x64
 800216c:	f003 faf6 	bl	800575c <HAL_Delay>
  	if(modesansechec==0){
 8002170:	682b      	ldr	r3, [r5, #0]
 8002172:	2b00      	cmp	r3, #0
 8002174:	d03d      	beq.n	80021f2 <main+0x1aa>
  	ssd1306_Fill(Black);
 8002176:	2000      	movs	r0, #0
 8002178:	f000 fc1a 	bl	80029b0 <ssd1306_Fill>
  	bmp581->i2c=&hi2c1;
 800217c:	482d      	ldr	r0, [pc, #180]	@ (8002234 <main+0x1ec>)
 800217e:	492e      	ldr	r1, [pc, #184]	@ (8002238 <main+0x1f0>)
 8002180:	6803      	ldr	r3, [r0, #0]
  	bmp581->addr=0x47;
 8002182:	2247      	movs	r2, #71	@ 0x47
  	bmp581->i2c=&hi2c1;
 8002184:	6019      	str	r1, [r3, #0]
  	bmp581->addr=0x47;
 8002186:	711a      	strb	r2, [r3, #4]
  	if(bmp581_init_precise_normal(&bmp581)!=0){
 8002188:	f7ff fbce 	bl	8001928 <bmp581_init_precise_normal>
 800218c:	b9f8      	cbnz	r0, 80021ce <main+0x186>
  	BTN_A=0;
 800218e:	492b      	ldr	r1, [pc, #172]	@ (800223c <main+0x1f4>)
  	BTN_A_LONG=0;
 8002190:	4a2b      	ldr	r2, [pc, #172]	@ (8002240 <main+0x1f8>)
  	state=STATE_SPEED;
 8002192:	4c2c      	ldr	r4, [pc, #176]	@ (8002244 <main+0x1fc>)
 8002194:	2300      	movs	r3, #0
  	HAL_Delay(200);
 8002196:	20c8      	movs	r0, #200	@ 0xc8
  	state=STATE_SPEED;
 8002198:	7023      	strb	r3, [r4, #0]
  	BTN_A=0;
 800219a:	600b      	str	r3, [r1, #0]
  	BTN_A_LONG=0;
 800219c:	6013      	str	r3, [r2, #0]
  	HAL_Delay(200);
 800219e:	f003 fadd 	bl	800575c <HAL_Delay>
  MX_FREERTOS_Init();
 80021a2:	f7ff fb4f 	bl	8001844 <MX_FREERTOS_Init>
  osKernelStart();
 80021a6:	f00b f99b 	bl	800d4e0 <osKernelStart>
  while (1)
 80021aa:	e7fe      	b.n	80021aa <main+0x162>
 	  (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) == GPIO_PIN_RESET))
 80021ac:	4812      	ldr	r0, [pc, #72]	@ (80021f8 <main+0x1b0>)
 80021ae:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021b2:	f004 fa97 	bl	80066e4 <HAL_GPIO_ReadPin>
   if ((HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_RESET) &&
 80021b6:	2800      	cmp	r0, #0
 80021b8:	f47f af69 	bne.w	800208e <main+0x46>
 	  HAL_DeInit();
 80021bc:	f003 fa78 	bl	80056b0 <HAL_DeInit>
 	  __set_MSP(*(__IO uint32_t*)SYS_MEM_START_ADDR);
 80021c0:	4b21      	ldr	r3, [pc, #132]	@ (8002248 <main+0x200>)
 80021c2:	681a      	ldr	r2, [r3, #0]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 80021c4:	f382 8808 	msr	MSP, r2
 	  boot_jump();
 80021c8:	685b      	ldr	r3, [r3, #4]
 80021ca:	4798      	blx	r3
 80021cc:	e75f      	b.n	800208e <main+0x46>
  		ssd1306_SetCursor(32,42);
 80021ce:	212a      	movs	r1, #42	@ 0x2a
 80021d0:	2020      	movs	r0, #32
 80021d2:	f000 feb1 	bl	8002f38 <ssd1306_SetCursor>
  		ssd1306_WriteString("bmp prbm", Font_7x10, White);
 80021d6:	4b1d      	ldr	r3, [pc, #116]	@ (800224c <main+0x204>)
 80021d8:	481d      	ldr	r0, [pc, #116]	@ (8002250 <main+0x208>)
 80021da:	e893 0006 	ldmia.w	r3, {r1, r2}
 80021de:	2301      	movs	r3, #1
 80021e0:	f000 fe8e 	bl	8002f00 <ssd1306_WriteString>
  		ssd1306_UpdateScreen();
 80021e4:	f000 fbf0 	bl	80029c8 <ssd1306_UpdateScreen>
  		HAL_Delay(1000);
 80021e8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80021ec:	f003 fab6 	bl	800575c <HAL_Delay>
 80021f0:	e7cd      	b.n	800218e <main+0x146>
  		getindex();
 80021f2:	f000 fa35 	bl	8002660 <getindex>
 80021f6:	e7be      	b.n	8002176 <main+0x12e>
 80021f8:	48000800 	.word	0x48000800
 80021fc:	20000508 	.word	0x20000508
 8002200:	080162f4 	.word	0x080162f4
 8002204:	20000fcc 	.word	0x20000fcc
 8002208:	20000388 	.word	0x20000388
 800220c:	20001648 	.word	0x20001648
 8002210:	20001758 	.word	0x20001758
 8002214:	20000510 	.word	0x20000510
 8002218:	20000ffc 	.word	0x20000ffc
 800221c:	200006c0 	.word	0x200006c0
 8002220:	20000ec0 	.word	0x20000ec0
 8002224:	20000680 	.word	0x20000680
 8002228:	48000400 	.word	0x48000400
 800222c:	20001098 	.word	0x20001098
 8002230:	20000fd4 	.word	0x20000fd4
 8002234:	200005d8 	.word	0x200005d8
 8002238:	20000478 	.word	0x20000478
 800223c:	20000ff8 	.word	0x20000ff8
 8002240:	200005e0 	.word	0x200005e0
 8002244:	20001070 	.word	0x20001070
 8002248:	1fff0000 	.word	0x1fff0000
 800224c:	20000024 	.word	0x20000024
 8002250:	08015fb0 	.word	0x08015fb0

08002254 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM1)
 8002254:	4b03      	ldr	r3, [pc, #12]	@ (8002264 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002256:	6802      	ldr	r2, [r0, #0]
 8002258:	429a      	cmp	r2, r3
 800225a:	d000      	beq.n	800225e <HAL_TIM_PeriodElapsedCallback+0xa>
}
 800225c:	4770      	bx	lr
    HAL_IncTick();
 800225e:	f003 ba65 	b.w	800572c <HAL_IncTick>
 8002262:	bf00      	nop
 8002264:	40012c00 	.word	0x40012c00

08002268 <Error_Handler>:
  __ASM volatile ("cpsid i" : : : "memory");
 8002268:	b672      	cpsid	i
  while (1)
 800226a:	e7fe      	b.n	800226a <Error_Handler+0x2>

0800226c <MX_RF_Init>:
  /* USER CODE END RF_Init 1 */
  /* USER CODE BEGIN RF_Init 2 */

  /* USER CODE END RF_Init 2 */

}
 800226c:	4770      	bx	lr
 800226e:	bf00      	nop

08002270 <MX_RTC_Init>:

RTC_HandleTypeDef hrtc;

/* RTC init function */
void MX_RTC_Init(void)
{
 8002270:	b500      	push	{lr}

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8002272:	4822      	ldr	r0, [pc, #136]	@ (80022fc <MX_RTC_Init+0x8c>)
 8002274:	4922      	ldr	r1, [pc, #136]	@ (8002300 <MX_RTC_Init+0x90>)
{
 8002276:	b087      	sub	sp, #28
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
  hrtc.Init.AsynchPrediv = 99;
 8002278:	2263      	movs	r2, #99	@ 0x63
  RTC_TimeTypeDef sTime = {0};
 800227a:	2300      	movs	r3, #0
  hrtc.Init.AsynchPrediv = 99;
 800227c:	6082      	str	r2, [r0, #8]
  hrtc.Init.SynchPrediv = 9999;
 800227e:	f242 720f 	movw	r2, #9999	@ 0x270f
  RTC_TimeTypeDef sTime = {0};
 8002282:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8002286:	e9cd 3303 	strd	r3, r3, [sp, #12]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 800228a:	e9c0 1300 	strd	r1, r3, [r0]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 800228e:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8002292:	e9c0 3306 	strd	r3, r3, [r0, #24]
  RTC_TimeTypeDef sTime = {0};
 8002296:	9305      	str	r3, [sp, #20]
  RTC_DateTypeDef sDate = {0};
 8002298:	9300      	str	r3, [sp, #0]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 800229a:	6143      	str	r3, [r0, #20]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 800229c:	f007 f896 	bl	80093cc <HAL_RTC_Init>
 80022a0:	b9f0      	cbnz	r0, 80022e0 <MX_RTC_Init+0x70>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 80022a2:	2300      	movs	r3, #0
  sTime.Minutes = 0x0;
  sTime.Seconds = 0x0;
  sTime.SubSeconds = 0x0;
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022a4:	4815      	ldr	r0, [pc, #84]	@ (80022fc <MX_RTC_Init+0x8c>)
  sTime.Hours = 0x0;
 80022a6:	f8ad 3004 	strh.w	r3, [sp, #4]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022aa:	2201      	movs	r2, #1
 80022ac:	a901      	add	r1, sp, #4
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80022ae:	e9cd 3304 	strd	r3, r3, [sp, #16]
  sTime.Seconds = 0x0;
 80022b2:	f88d 3006 	strb.w	r3, [sp, #6]
  sTime.SubSeconds = 0x0;
 80022b6:	9302      	str	r3, [sp, #8]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022b8:	f007 f908 	bl	80094cc <HAL_RTC_SetTime>
 80022bc:	b9d8      	cbnz	r0, 80022f6 <MX_RTC_Init+0x86>
  {
    Error_Handler();
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80022be:	4b11      	ldr	r3, [pc, #68]	@ (8002304 <MX_RTC_Init+0x94>)
  sDate.Month = RTC_MONTH_JANUARY;
  sDate.Date = 0x1;
  sDate.Year = 0x0;

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80022c0:	480e      	ldr	r0, [pc, #56]	@ (80022fc <MX_RTC_Init+0x8c>)
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80022c2:	9300      	str	r3, [sp, #0]
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80022c4:	2201      	movs	r2, #1
 80022c6:	4669      	mov	r1, sp
 80022c8:	f007 f9f0 	bl	80096ac <HAL_RTC_SetDate>
 80022cc:	b980      	cbnz	r0, 80022f0 <MX_RTC_Init+0x80>
    Error_Handler();
  }

  /** Enable the WakeUp
  */
  if (HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 0, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 80022ce:	480b      	ldr	r0, [pc, #44]	@ (80022fc <MX_RTC_Init+0x8c>)
 80022d0:	2204      	movs	r2, #4
 80022d2:	2100      	movs	r1, #0
 80022d4:	f007 facc 	bl	8009870 <HAL_RTCEx_SetWakeUpTimer_IT>
 80022d8:	b928      	cbnz	r0, 80022e6 <MX_RTC_Init+0x76>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 80022da:	b007      	add	sp, #28
 80022dc:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80022e0:	f7ff ffc2 	bl	8002268 <Error_Handler>
 80022e4:	e7dd      	b.n	80022a2 <MX_RTC_Init+0x32>
    Error_Handler();
 80022e6:	f7ff ffbf 	bl	8002268 <Error_Handler>
}
 80022ea:	b007      	add	sp, #28
 80022ec:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80022f0:	f7ff ffba 	bl	8002268 <Error_Handler>
 80022f4:	e7eb      	b.n	80022ce <MX_RTC_Init+0x5e>
    Error_Handler();
 80022f6:	f7ff ffb7 	bl	8002268 <Error_Handler>
 80022fa:	e7e0      	b.n	80022be <MX_RTC_Init+0x4e>
 80022fc:	20001074 	.word	0x20001074
 8002300:	40002800 	.word	0x40002800
 8002304:	00010101 	.word	0x00010101

08002308 <HAL_RTC_MspInit>:

void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
{
 8002308:	b510      	push	{r4, lr}
 800230a:	4604      	mov	r4, r0
 800230c:	b096      	sub	sp, #88	@ 0x58

  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800230e:	2250      	movs	r2, #80	@ 0x50
 8002310:	2100      	movs	r1, #0
 8002312:	a802      	add	r0, sp, #8
 8002314:	f00e f8a7 	bl	8010466 <memset>
  if(rtcHandle->Instance==RTC)
 8002318:	4b18      	ldr	r3, [pc, #96]	@ (800237c <HAL_RTC_MspInit+0x74>)
 800231a:	6822      	ldr	r2, [r4, #0]
 800231c:	429a      	cmp	r2, r3
 800231e:	d001      	beq.n	8002324 <HAL_RTC_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }
}
 8002320:	b016      	add	sp, #88	@ 0x58
 8002322:	bd10      	pop	{r4, pc}
	  HAL_PWR_EnableBkUpAccess();
 8002324:	f006 f826 	bl	8008374 <HAL_PWR_EnableBkUpAccess>
	  HAL_PWR_EnableBkUpAccess();
 8002328:	f006 f824 	bl	8008374 <HAL_PWR_EnableBkUpAccess>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 800232c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
 8002330:	f44f 7340 	mov.w	r3, #768	@ 0x300
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002334:	a802      	add	r0, sp, #8
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8002336:	9202      	str	r2, [sp, #8]
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
 8002338:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800233a:	f006 fe5b 	bl	8008ff4 <HAL_RCCEx_PeriphCLKConfig>
 800233e:	b9d0      	cbnz	r0, 8002376 <HAL_RTC_MspInit+0x6e>
  * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
  * @retval None
  */
__STATIC_INLINE void LL_RCC_EnableRTC(void)
{
  SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
 8002340:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(RTC_WKUP_IRQn, 5, 0);
 8002344:	2200      	movs	r2, #0
 8002346:	f8d3 0090 	ldr.w	r0, [r3, #144]	@ 0x90
 800234a:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 800234e:	f8c3 0090 	str.w	r0, [r3, #144]	@ 0x90
  SET_BIT(RCC->APB1ENR1, Periphs);
 8002352:	6d9c      	ldr	r4, [r3, #88]	@ 0x58
 8002354:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 8002358:	659c      	str	r4, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800235a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800235c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002360:	2105      	movs	r1, #5
 8002362:	9301      	str	r3, [sp, #4]
 8002364:	2003      	movs	r0, #3
  (void)tmpreg;
 8002366:	9b01      	ldr	r3, [sp, #4]
 8002368:	f003 fe2e 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 800236c:	2003      	movs	r0, #3
 800236e:	f003 fe67 	bl	8006040 <HAL_NVIC_EnableIRQ>
}
 8002372:	b016      	add	sp, #88	@ 0x58
 8002374:	bd10      	pop	{r4, pc}
      Error_Handler();
 8002376:	f7ff ff77 	bl	8002268 <Error_Handler>
 800237a:	e7e1      	b.n	8002340 <HAL_RTC_MspInit+0x38>
 800237c:	40002800 	.word	0x40002800

08002380 <set_time>:
}

/* USER CODE BEGIN 1 */

void set_time (uint8_t hr, uint8_t min, uint8_t sec)
{
 8002380:	b500      	push	{lr}
 8002382:	b087      	sub	sp, #28
	RTC_TimeTypeDef sTime = {0};
 8002384:	2300      	movs	r3, #0
{
 8002386:	4686      	mov	lr, r0
 8002388:	4694      	mov	ip, r2
	sTime.Hours = hr;
	sTime.Minutes = min;
 800238a:	f88d 1005 	strb.w	r1, [sp, #5]
	sTime.Seconds = sec;
	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
	sTime.StoreOperation = RTC_STOREOPERATION_RESET;
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 800238e:	480e      	ldr	r0, [pc, #56]	@ (80023c8 <set_time+0x48>)
	sTime.Hours = hr;
 8002390:	f88d e004 	strb.w	lr, [sp, #4]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 8002394:	461a      	mov	r2, r3
 8002396:	a901      	add	r1, sp, #4
	RTC_TimeTypeDef sTime = {0};
 8002398:	f88d 3017 	strb.w	r3, [sp, #23]
 800239c:	f8cd 3007 	str.w	r3, [sp, #7]
 80023a0:	f8cd 300b 	str.w	r3, [sp, #11]
 80023a4:	f8cd 300f 	str.w	r3, [sp, #15]
 80023a8:	f8cd 3013 	str.w	r3, [sp, #19]
	sTime.Seconds = sec;
 80023ac:	f88d c006 	strb.w	ip, [sp, #6]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 80023b0:	f007 f88c 	bl	80094cc <HAL_RTC_SetTime>
 80023b4:	b910      	cbnz	r0, 80023bc <set_time+0x3c>
	{
		Error_Handler();
	}
}
 80023b6:	b007      	add	sp, #28
 80023b8:	f85d fb04 	ldr.w	pc, [sp], #4
		Error_Handler();
 80023bc:	f7ff ff54 	bl	8002268 <Error_Handler>
}
 80023c0:	b007      	add	sp, #28
 80023c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80023c6:	bf00      	nop
 80023c8:	20001074 	.word	0x20001074

080023cc <get_time_date>:
	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x2345);  // backup register
}


void get_time_date()
{
 80023cc:	b510      	push	{r4, lr}
  RTC_DateTypeDef gDate;
  RTC_TimeTypeDef gTime;

  /* Get the RTC current Time */
  HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 80023ce:	4c14      	ldr	r4, [pc, #80]	@ (8002420 <get_time_date+0x54>)
{
 80023d0:	b086      	sub	sp, #24
  HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 80023d2:	a901      	add	r1, sp, #4
 80023d4:	2200      	movs	r2, #0
 80023d6:	4620      	mov	r0, r4
 80023d8:	f007 f92c 	bl	8009634 <HAL_RTC_GetTime>
  /* Get the RTC current Date */
  HAL_RTC_GetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 80023dc:	4669      	mov	r1, sp
 80023de:	2200      	movs	r2, #0
 80023e0:	4620      	mov	r0, r4
 80023e2:	f007 fa0f 	bl	8009804 <HAL_RTC_GetDate>

  SEC=gTime.Seconds;
  HR=gTime.Hours;
 80023e6:	4c0f      	ldr	r4, [pc, #60]	@ (8002424 <get_time_date+0x58>)
  SEC=gTime.Seconds;
 80023e8:	490f      	ldr	r1, [pc, #60]	@ (8002428 <get_time_date+0x5c>)
 80023ea:	f89d 0006 	ldrb.w	r0, [sp, #6]
  MINUTE=gTime.Minutes;
 80023ee:	4a0f      	ldr	r2, [pc, #60]	@ (800242c <get_time_date+0x60>)
  HR=gTime.Hours;
 80023f0:	f89d c004 	ldrb.w	ip, [sp, #4]
  SEC=gTime.Seconds;
 80023f4:	7008      	strb	r0, [r1, #0]
  HR=gTime.Hours;
 80023f6:	f884 c000 	strb.w	ip, [r4]
  JOURS=gDate.Date;
 80023fa:	480d      	ldr	r0, [pc, #52]	@ (8002430 <get_time_date+0x64>)
  MINUTE=gTime.Minutes;
 80023fc:	f89d 4005 	ldrb.w	r4, [sp, #5]
 8002400:	7014      	strb	r4, [r2, #0]
  MOIS=gDate.Month;
  ANNEE=gDate.Year+2000;
 8002402:	f89d 3003 	ldrb.w	r3, [sp, #3]
  JOURS=gDate.Date;
 8002406:	f89d 4002 	ldrb.w	r4, [sp, #2]
  MOIS=gDate.Month;
 800240a:	490a      	ldr	r1, [pc, #40]	@ (8002434 <get_time_date+0x68>)
  ANNEE=gDate.Year+2000;
 800240c:	4a0a      	ldr	r2, [pc, #40]	@ (8002438 <get_time_date+0x6c>)
  JOURS=gDate.Date;
 800240e:	7004      	strb	r4, [r0, #0]
  MOIS=gDate.Month;
 8002410:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8002414:	7008      	strb	r0, [r1, #0]
  ANNEE=gDate.Year+2000;
 8002416:	f503 63fa 	add.w	r3, r3, #2000	@ 0x7d0
 800241a:	8013      	strh	r3, [r2, #0]
  /* Display time Format: hh:mm:ss */
  //sprintf((char*)time,"%02d:%02d:%02d",gTime.Hours, gTime.Minutes, gTime.Seconds);

  /* Display date Format: dd-mm-yyyy */
  //sprintf((char*)date,"%02d-%02d-%2d",gDate.Date, gDate.Month, 2000 + gDate.Year);
}
 800241c:	b006      	add	sp, #24
 800241e:	bd10      	pop	{r4, pc}
 8002420:	20001074 	.word	0x20001074
 8002424:	200005fd 	.word	0x200005fd
 8002428:	200005fe 	.word	0x200005fe
 800242c:	200005fc 	.word	0x200005fc
 8002430:	2000001b 	.word	0x2000001b
 8002434:	2000001a 	.word	0x2000001a
 8002438:	20000018 	.word	0x20000018

0800243c <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 800243c:	b510      	push	{r4, lr}
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 800243e:	4811      	ldr	r0, [pc, #68]	@ (8002484 <MX_SPI1_Init+0x48>)
 8002440:	4c11      	ldr	r4, [pc, #68]	@ (8002488 <MX_SPI1_Init+0x4c>)
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002442:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002446:	2300      	movs	r3, #0
 8002448:	e9c0 4200 	strd	r4, r2, [r0]
 800244c:	f44f 61e0 	mov.w	r1, #1792	@ 0x700
 8002450:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002454:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8002458:	2410      	movs	r4, #16
 800245a:	6182      	str	r2, [r0, #24]
 800245c:	2107      	movs	r1, #7
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi1.Init.CRCPolynomial = 7;
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800245e:	2208      	movs	r2, #8
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002460:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002464:	e9c0 4307 	strd	r4, r3, [r0, #28]
 8002468:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 800246c:	e9c0 130b 	strd	r1, r3, [r0, #44]	@ 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8002470:	6342      	str	r2, [r0, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002472:	f007 fbb7 	bl	8009be4 <HAL_SPI_Init>
 8002476:	b900      	cbnz	r0, 800247a <MX_SPI1_Init+0x3e>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002478:	bd10      	pop	{r4, pc}
 800247a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 800247e:	f7ff bef3 	b.w	8002268 <Error_Handler>
 8002482:	bf00      	nop
 8002484:	20001098 	.word	0x20001098
 8002488:	40013000 	.word	0x40013000

0800248c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 800248c:	b530      	push	{r4, r5, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(spiHandle->Instance==SPI1)
 800248e:	4b25      	ldr	r3, [pc, #148]	@ (8002524 <HAL_SPI_MspInit+0x98>)
 8002490:	6802      	ldr	r2, [r0, #0]
{
 8002492:	b08b      	sub	sp, #44	@ 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002494:	2400      	movs	r4, #0
  if(spiHandle->Instance==SPI1)
 8002496:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002498:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800249c:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80024a0:	9408      	str	r4, [sp, #32]
  if(spiHandle->Instance==SPI1)
 80024a2:	d001      	beq.n	80024a8 <HAL_SPI_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 80024a4:	b00b      	add	sp, #44	@ 0x2c
 80024a6:	bd30      	pop	{r4, r5, pc}
  * @retval None
  */
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 80024a8:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80024ac:	2505      	movs	r5, #5
 80024ae:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80024b0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80024b4:	661a      	str	r2, [r3, #96]	@ 0x60
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 80024b6:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80024b8:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80024bc:	9203      	str	r2, [sp, #12]
  (void)tmpreg;
 80024be:	9a03      	ldr	r2, [sp, #12]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80024c0:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024c2:	f042 0201 	orr.w	r2, r2, #1
 80024c6:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80024c8:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024ca:	f002 0201 	and.w	r2, r2, #1
 80024ce:	9202      	str	r2, [sp, #8]
  (void)tmpreg;
 80024d0:	9a02      	ldr	r2, [sp, #8]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80024d2:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024d4:	f042 0202 	orr.w	r2, r2, #2
 80024d8:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80024da:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80024dc:	9508      	str	r5, [sp, #32]
 80024de:	f003 0302 	and.w	r3, r3, #2
 80024e2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80024e4:	2242      	movs	r2, #66	@ 0x42
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024e6:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80024e8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024ea:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80024ee:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)tmpreg;
 80024f2:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024f4:	f003 ff5a 	bl	80063ac <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024f8:	2302      	movs	r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 80024fa:	2220      	movs	r2, #32
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024fc:	a904      	add	r1, sp, #16
 80024fe:	480a      	ldr	r0, [pc, #40]	@ (8002528 <HAL_SPI_MspInit+0x9c>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8002500:	9508      	str	r5, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002502:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002506:	e9cd 4406 	strd	r4, r4, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800250a:	f003 ff4f 	bl	80063ac <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(SPI1_IRQn, 7, 0);
 800250e:	4622      	mov	r2, r4
 8002510:	2107      	movs	r1, #7
 8002512:	2022      	movs	r0, #34	@ 0x22
 8002514:	f003 fd58 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002518:	2022      	movs	r0, #34	@ 0x22
 800251a:	f003 fd91 	bl	8006040 <HAL_NVIC_EnableIRQ>
}
 800251e:	b00b      	add	sp, #44	@ 0x2c
 8002520:	bd30      	pop	{r4, r5, pc}
 8002522:	bf00      	nop
 8002524:	40013000 	.word	0x40013000
 8002528:	48000400 	.word	0x48000400
 800252c:	00000000 	.word	0x00000000

08002530 <csvframe>:
  /* USER CODE END SPI1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 8002530:	b084      	sub	sp, #16
 8002532:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	int framesize=0;
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 8002534:	ed8d 2b1a 	vstr	d2, [sp, #104]	@ 0x68
 8002538:	4e2b      	ldr	r6, [pc, #172]	@ (80025e8 <csvframe+0xb8>)
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 800253a:	9f39      	ldr	r7, [sp, #228]	@ 0xe4
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 800253c:	7836      	ldrb	r6, [r6, #0]
 800253e:	9621      	str	r6, [sp, #132]	@ 0x84
 8002540:	4e2a      	ldr	r6, [pc, #168]	@ (80025ec <csvframe+0xbc>)
 8002542:	7836      	ldrb	r6, [r6, #0]
 8002544:	9620      	str	r6, [sp, #128]	@ 0x80
 8002546:	4e2a      	ldr	r6, [pc, #168]	@ (80025f0 <csvframe+0xc0>)
 8002548:	7836      	ldrb	r6, [r6, #0]
 800254a:	961f      	str	r6, [sp, #124]	@ 0x7c
 800254c:	4e29      	ldr	r6, [pc, #164]	@ (80025f4 <csvframe+0xc4>)
 800254e:	7836      	ldrb	r6, [r6, #0]
 8002550:	961e      	str	r6, [sp, #120]	@ 0x78
 8002552:	4e29      	ldr	r6, [pc, #164]	@ (80025f8 <csvframe+0xc8>)
 8002554:	7836      	ldrb	r6, [r6, #0]
 8002556:	961d      	str	r6, [sp, #116]	@ 0x74
 8002558:	4e28      	ldr	r6, [pc, #160]	@ (80025fc <csvframe+0xcc>)
 800255a:	8836      	ldrh	r6, [r6, #0]
 800255c:	961c      	str	r6, [sp, #112]	@ 0x70
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 800255e:	ae07      	add	r6, sp, #28
 8002560:	e886 000e 	stmia.w	r6, {r1, r2, r3}
 8002564:	4604      	mov	r4, r0
 8002566:	ee11 0a10 	vmov	r0, s2
 800256a:	ee10 5a10 	vmov	r5, s0
 800256e:	ee10 6a90 	vmov	r6, s1
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 8002572:	f7fd ffc1 	bl	80004f8 <__aeabi_f2d>
 8002576:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
 800257a:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 800257c:	9716      	str	r7, [sp, #88]	@ 0x58
 800257e:	f7fd ffbb 	bl	80004f8 <__aeabi_f2d>
 8002582:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
 8002586:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8002588:	f7fd ffb6 	bl	80004f8 <__aeabi_f2d>
 800258c:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
 8002590:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8002592:	f7fd ffb1 	bl	80004f8 <__aeabi_f2d>
 8002596:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800259a:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 800259c:	f7fd ffac 	bl	80004f8 <__aeabi_f2d>
 80025a0:	a30f      	add	r3, pc, #60	@ (adr r3, 80025e0 <csvframe+0xb0>)
 80025a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025a6:	f7fd ffff 	bl	80005a8 <__aeabi_dmul>
 80025aa:	4602      	mov	r2, r0
 80025ac:	460b      	mov	r3, r1
 80025ae:	4630      	mov	r0, r6
 80025b0:	e9cd 230e 	strd	r2, r3, [sp, #56]	@ 0x38
 80025b4:	f7fd ffa0 	bl	80004f8 <__aeabi_f2d>
 80025b8:	4602      	mov	r2, r0
 80025ba:	460b      	mov	r3, r1
 80025bc:	4628      	mov	r0, r5
 80025be:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80025c2:	f7fd ff99 	bl	80004f8 <__aeabi_f2d>
 80025c6:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80025ca:	4620      	mov	r0, r4
	return framesize;
}
 80025cc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 80025d0:	4a0b      	ldr	r2, [pc, #44]	@ (8002600 <csvframe+0xd0>)
 80025d2:	f44f 7180 	mov.w	r1, #256	@ 0x100
}
 80025d6:	b004      	add	sp, #16
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 80025d8:	f00d beaa 	b.w	8010330 <sniprintf>
 80025dc:	f3af 8000 	nop.w
 80025e0:	cccccccd 	.word	0xcccccccd
 80025e4:	400ccccc 	.word	0x400ccccc
 80025e8:	200005fe 	.word	0x200005fe
 80025ec:	200005fc 	.word	0x200005fc
 80025f0:	200005fd 	.word	0x200005fd
 80025f4:	2000001b 	.word	0x2000001b
 80025f8:	2000001a 	.word	0x2000001a
 80025fc:	20000018 	.word	0x20000018
 8002600:	08015fbc 	.word	0x08015fbc

08002604 <storeindex>:


void storeindex(void){
 8002604:	b530      	push	{r4, r5, lr}
	int writepage=MAX_WRITE_PAGE+1;
	uint8_t writebuffer[10];
	memset((uint8_t*)writebuffer,'\0',10);
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002606:	4b13      	ldr	r3, [pc, #76]	@ (8002654 <storeindex+0x50>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
	writebuffer[1]=debut;
	writebuffer[2]=fin;
	writebuffer[3]=6;
	writebuffer[4]=6;
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002608:	4d13      	ldr	r5, [pc, #76]	@ (8002658 <storeindex+0x54>)
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800260a:	681b      	ldr	r3, [r3, #0]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800260c:	4a13      	ldr	r2, [pc, #76]	@ (800265c <storeindex+0x58>)
void storeindex(void){
 800260e:	b087      	sub	sp, #28
	memset((uint8_t*)writebuffer,'\0',10);
 8002610:	2400      	movs	r4, #0
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 8002612:	f88d 300e 	strb.w	r3, [sp, #14]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002616:	f3c3 2307 	ubfx	r3, r3, #8, #8
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800261a:	6812      	ldr	r2, [r2, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800261c:	f88d 300d 	strb.w	r3, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002620:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 8002624:	f240 6306 	movw	r3, #1542	@ 0x606
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002628:	4628      	mov	r0, r5
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800262a:	f88d 200c 	strb.w	r2, [sp, #12]
	writebuffer[3]=6;
 800262e:	f8ad 300f 	strh.w	r3, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 8002632:	f88d 4015 	strb.w	r4, [sp, #21]
 8002636:	f8cd 4011 	str.w	r4, [sp, #17]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800263a:	f00c faf5 	bl	800ec28 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 800263e:	2305      	movs	r3, #5
 8002640:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 8002644:	9400      	str	r4, [sp, #0]
 8002646:	aa03      	add	r2, sp, #12
 8002648:	4628      	mov	r0, r5
 800264a:	f00c fb71 	bl	800ed30 <SPIF_WritePage>

}
 800264e:	b007      	add	sp, #28
 8002650:	bd30      	pop	{r4, r5, pc}
 8002652:	bf00      	nop
 8002654:	200006b8 	.word	0x200006b8
 8002658:	20000fd4 	.word	0x20000fd4
 800265c:	200006bc 	.word	0x200006bc

08002660 <getindex>:

void getindex(void){
 8002660:	b510      	push	{r4, lr}
	int readpage=MAX_WRITE_PAGE+1;
	SPIF_ReadPage(&hspif1, readpage, (uint8_t *)indexbuffer, 5, 0);
 8002662:	4c20      	ldr	r4, [pc, #128]	@ (80026e4 <getindex+0x84>)
 8002664:	4820      	ldr	r0, [pc, #128]	@ (80026e8 <getindex+0x88>)
void getindex(void){
 8002666:	b086      	sub	sp, #24
	SPIF_ReadPage(&hspif1, readpage, (uint8_t *)indexbuffer, 5, 0);
 8002668:	2300      	movs	r3, #0
 800266a:	9300      	str	r3, [sp, #0]
 800266c:	4622      	mov	r2, r4
 800266e:	2305      	movs	r3, #5
 8002670:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 8002674:	f00c fb7a 	bl	800ed6c <SPIF_ReadPage>
	if((indexbuffer[3]==6)&&(indexbuffer[4]==6) ){
 8002678:	78e3      	ldrb	r3, [r4, #3]
 800267a:	2b06      	cmp	r3, #6
 800267c:	d102      	bne.n	8002684 <getindex+0x24>
 800267e:	7923      	ldrb	r3, [r4, #4]
 8002680:	2b06      	cmp	r3, #6
 8002682:	d023      	beq.n	80026cc <getindex+0x6c>
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002684:	4b19      	ldr	r3, [pc, #100]	@ (80026ec <getindex+0x8c>)
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 8002686:	4a1a      	ldr	r2, [pc, #104]	@ (80026f0 <getindex+0x90>)
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002688:	681b      	ldr	r3, [r3, #0]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800268a:	6811      	ldr	r1, [r2, #0]
 800268c:	f88d 100c 	strb.w	r1, [sp, #12]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002690:	f3c3 2207 	ubfx	r2, r3, #8, #8
	memset((uint8_t*)writebuffer,'\0',10);
 8002694:	2400      	movs	r4, #0
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002696:	f88d 200d 	strb.w	r2, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800269a:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 800269e:	f240 6206 	movw	r2, #1542	@ 0x606
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 80026a2:	4811      	ldr	r0, [pc, #68]	@ (80026e8 <getindex+0x88>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 80026a4:	f88d 300e 	strb.w	r3, [sp, #14]
	writebuffer[3]=6;
 80026a8:	f8ad 200f 	strh.w	r2, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 80026ac:	f88d 4015 	strb.w	r4, [sp, #21]
 80026b0:	f8cd 4011 	str.w	r4, [sp, #17]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 80026b4:	f00c fab8 	bl	800ec28 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 80026b8:	2305      	movs	r3, #5
 80026ba:	9400      	str	r4, [sp, #0]
 80026bc:	aa03      	add	r2, sp, #12
 80026be:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 80026c2:	4809      	ldr	r0, [pc, #36]	@ (80026e8 <getindex+0x88>)
 80026c4:	f00c fb34 	bl	800ed30 <SPIF_WritePage>
	}
	else{
		storeindex();
	}

}
 80026c8:	b006      	add	sp, #24
 80026ca:	bd10      	pop	{r4, pc}
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026cc:	f8b4 3001 	ldrh.w	r3, [r4, #1]
		pageoffset=(int)indexbuffer[0];
 80026d0:	4907      	ldr	r1, [pc, #28]	@ (80026f0 <getindex+0x90>)
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026d2:	4a06      	ldr	r2, [pc, #24]	@ (80026ec <getindex+0x8c>)
		pageoffset=(int)indexbuffer[0];
 80026d4:	7820      	ldrb	r0, [r4, #0]
 80026d6:	6008      	str	r0, [r1, #0]
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026d8:	ba5b      	rev16	r3, r3
 80026da:	b29b      	uxth	r3, r3
 80026dc:	6013      	str	r3, [r2, #0]
}
 80026de:	b006      	add	sp, #24
 80026e0:	bd10      	pop	{r4, pc}
 80026e2:	bf00      	nop
 80026e4:	200010fc 	.word	0x200010fc
 80026e8:	20000fd4 	.word	0x20000fd4
 80026ec:	200006b8 	.word	0x200006b8
 80026f0:	200006bc 	.word	0x200006bc

080026f4 <writebuffertoflash>:

void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 80026f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	if((pagenumber+1)%16==0){
 80026f8:	4f38      	ldr	r7, [pc, #224]	@ (80027dc <writebuffertoflash+0xe8>)
		if(sectoreraseen==0){
 80026fa:	f8df 80ec 	ldr.w	r8, [pc, #236]	@ 80027e8 <writebuffertoflash+0xf4>
	if((pagenumber+1)%16==0){
 80026fe:	f8d7 c000 	ldr.w	ip, [r7]
void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 8002702:	460c      	mov	r4, r1
	if((pagenumber+1)%16==0){
 8002704:	f10c 0201 	add.w	r2, ip, #1
		if(sectoreraseen==0){
 8002708:	f8d8 1000 	ldr.w	r1, [r8]
 800270c:	f002 030f 	and.w	r3, r2, #15
 8002710:	430b      	orrs	r3, r1
void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 8002712:	b087      	sub	sp, #28
 8002714:	4606      	mov	r6, r0
		if(sectoreraseen==0){
 8002716:	d053      	beq.n	80027c0 <writebuffertoflash+0xcc>
		SPIF_EraseSector(&hspif1, (int)floor((pagenumber+1)/16));
		sectoreraseen=1;
		}

		  }
	if(bufferlenght+pageoffset<256){
 8002718:	4d31      	ldr	r5, [pc, #196]	@ (80027e0 <writebuffertoflash+0xec>)
 800271a:	682b      	ldr	r3, [r5, #0]
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 800271c:	9300      	str	r3, [sp, #0]
	if(bufferlenght+pageoffset<256){
 800271e:	191a      	adds	r2, r3, r4
 8002720:	2aff      	cmp	r2, #255	@ 0xff
 8002722:	dc2a      	bgt.n	800277a <writebuffertoflash+0x86>
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 8002724:	4623      	mov	r3, r4
 8002726:	4632      	mov	r2, r6
 8002728:	482e      	ldr	r0, [pc, #184]	@ (80027e4 <writebuffertoflash+0xf0>)
 800272a:	4661      	mov	r1, ip
 800272c:	f00c fb00 	bl	800ed30 <SPIF_WritePage>
		pageoffset=pageoffset+bufferlenght;
 8002730:	682a      	ldr	r2, [r5, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002732:	683b      	ldr	r3, [r7, #0]
		pageoffset=pageoffset+bufferlenght;
 8002734:	4414      	add	r4, r2
 8002736:	602c      	str	r4, [r5, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002738:	f3c3 2107 	ubfx	r1, r3, #8, #8
	memset((uint8_t*)writebuffer,'\0',10);
 800273c:	2500      	movs	r5, #0
	writebuffer[3]=6;
 800273e:	f240 6206 	movw	r2, #1542	@ 0x606
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002742:	f88d 100d 	strb.w	r1, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002746:	4827      	ldr	r0, [pc, #156]	@ (80027e4 <writebuffertoflash+0xf0>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 8002748:	f88d 300e 	strb.w	r3, [sp, #14]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800274c:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 8002750:	f8ad 200f 	strh.w	r2, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 8002754:	f88d 5015 	strb.w	r5, [sp, #21]
 8002758:	f8cd 5011 	str.w	r5, [sp, #17]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800275c:	f88d 400c 	strb.w	r4, [sp, #12]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002760:	f00c fa62 	bl	800ec28 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 8002764:	2305      	movs	r3, #5
 8002766:	9500      	str	r5, [sp, #0]
 8002768:	aa03      	add	r2, sp, #12
 800276a:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 800276e:	481d      	ldr	r0, [pc, #116]	@ (80027e4 <writebuffertoflash+0xf0>)
 8002770:	f00c fade 	bl	800ed30 <SPIF_WritePage>
		sectoreraseen=0;
		pageoffset=(bufferlenght-(256-pageoffset));
	}
	storeindex();

}
 8002774:	b007      	add	sp, #28
 8002776:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, 256-pageoffset,pageoffset);
 800277a:	4661      	mov	r1, ip
 800277c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8002780:	4632      	mov	r2, r6
 8002782:	4818      	ldr	r0, [pc, #96]	@ (80027e4 <writebuffertoflash+0xf0>)
 8002784:	f00c fad4 	bl	800ed30 <SPIF_WritePage>
		SPIF_WritePage(&hspif1,pagenumber+1, (uint8_t *)buffer+(256-pageoffset), bufferlenght-(256-pageoffset),0);
 8002788:	f04f 0900 	mov.w	r9, #0
		HAL_Delay(100);
 800278c:	2064      	movs	r0, #100	@ 0x64
 800278e:	f002 ffe5 	bl	800575c <HAL_Delay>
		SPIF_WritePage(&hspif1,pagenumber+1, (uint8_t *)buffer+(256-pageoffset), bufferlenght-(256-pageoffset),0);
 8002792:	f8cd 9000 	str.w	r9, [sp]
 8002796:	682b      	ldr	r3, [r5, #0]
 8002798:	6839      	ldr	r1, [r7, #0]
 800279a:	4812      	ldr	r0, [pc, #72]	@ (80027e4 <writebuffertoflash+0xf0>)
 800279c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80027a0:	18f2      	adds	r2, r6, r3
 80027a2:	3101      	adds	r1, #1
 80027a4:	1ae3      	subs	r3, r4, r3
 80027a6:	f00c fac3 	bl	800ed30 <SPIF_WritePage>
		pageoffset=(bufferlenght-(256-pageoffset));
 80027aa:	682b      	ldr	r3, [r5, #0]
		sectoreraseen=0;
 80027ac:	f8c8 9000 	str.w	r9, [r8]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027b0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80027b4:	1ae4      	subs	r4, r4, r3
		pagenumber=pagenumber+1;
 80027b6:	683b      	ldr	r3, [r7, #0]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027b8:	602c      	str	r4, [r5, #0]
		pagenumber=pagenumber+1;
 80027ba:	3301      	adds	r3, #1
 80027bc:	603b      	str	r3, [r7, #0]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027be:	e7bb      	b.n	8002738 <writebuffertoflash+0x44>
		SPIF_EraseSector(&hspif1, (int)floor((pagenumber+1)/16));
 80027c0:	1e11      	subs	r1, r2, #0
 80027c2:	bfb8      	it	lt
 80027c4:	f10c 0110 	addlt.w	r1, ip, #16
 80027c8:	4806      	ldr	r0, [pc, #24]	@ (80027e4 <writebuffertoflash+0xf0>)
 80027ca:	1109      	asrs	r1, r1, #4
 80027cc:	f00c fa2c 	bl	800ec28 <SPIF_EraseSector>
		sectoreraseen=1;
 80027d0:	2301      	movs	r3, #1
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 80027d2:	f8d7 c000 	ldr.w	ip, [r7]
		sectoreraseen=1;
 80027d6:	f8c8 3000 	str.w	r3, [r8]
 80027da:	e79d      	b.n	8002718 <writebuffertoflash+0x24>
 80027dc:	200006b8 	.word	0x200006b8
 80027e0:	200006bc 	.word	0x200006bc
 80027e4:	20000fd4 	.word	0x20000fd4
 80027e8:	200006b4 	.word	0x200006b4

080027ec <ssd1306_Line.constprop.0>:
    SSD1306.CurrentX = x;
    SSD1306.CurrentY = y;
}

/* Draw line by Bresenhem's algorithm */
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 80027ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    int32_t deltaX = abs(x2 - x1);
 80027f0:	1a16      	subs	r6, r2, r0
    int32_t deltaY = abs(y2 - y1);
 80027f2:	eba3 0b01 	sub.w	fp, r3, r1
    int32_t deltaX = abs(x2 - x1);
 80027f6:	2e00      	cmp	r6, #0
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 80027f8:	b085      	sub	sp, #20
    int32_t deltaX = abs(x2 - x1);
 80027fa:	bfb8      	it	lt
 80027fc:	4276      	neglt	r6, r6
    int32_t deltaY = abs(y2 - y1);
 80027fe:	f1bb 0f00 	cmp.w	fp, #0
 8002802:	bfb8      	it	lt
 8002804:	f1cb 0b00 	rsblt	fp, fp, #0
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 8002808:	469a      	mov	sl, r3
    int32_t signX = ((x1 < x2) ? 1 : -1);
 800280a:	4282      	cmp	r2, r0
 800280c:	bf94      	ite	ls
 800280e:	f04f 33ff 	movls.w	r3, #4294967295
 8002812:	2301      	movhi	r3, #1
 8002814:	9301      	str	r3, [sp, #4]
    int32_t signY = ((y1 < y2) ? 1 : -1);
 8002816:	458a      	cmp	sl, r1
 8002818:	bf94      	ite	ls
 800281a:	f04f 33ff 	movls.w	r3, #4294967295
 800281e:	2301      	movhi	r3, #1
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002820:	0617      	lsls	r7, r2, #24
    int32_t signY = ((y1 < y2) ? 1 : -1);
 8002822:	9302      	str	r3, [sp, #8]
    int32_t error = deltaX - deltaY;
 8002824:	eba6 0e0b 	sub.w	lr, r6, fp
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002828:	d40f      	bmi.n	800284a <ssd1306_Line.constprop.0+0x5e>
 800282a:	f1ba 0f3f 	cmp.w	sl, #63	@ 0x3f
 800282e:	d80c      	bhi.n	800284a <ssd1306_Line.constprop.0+0x5e>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002830:	ea4f 04da 	mov.w	r4, sl, lsr #3
 8002834:	4d21      	ldr	r5, [pc, #132]	@ (80028bc <ssd1306_Line.constprop.0+0xd0>)
 8002836:	eb02 14c4 	add.w	r4, r2, r4, lsl #7
 800283a:	f00a 0c07 	and.w	ip, sl, #7
 800283e:	5d2f      	ldrb	r7, [r5, r4]
 8002840:	2301      	movs	r3, #1
 8002842:	fa03 f30c 	lsl.w	r3, r3, ip
 8002846:	433b      	orrs	r3, r7
 8002848:	552b      	strb	r3, [r5, r4]
 800284a:	4b1c      	ldr	r3, [pc, #112]	@ (80028bc <ssd1306_Line.constprop.0+0xd0>)
 800284c:	f8cd b00c 	str.w	fp, [sp, #12]
 8002850:	2780      	movs	r7, #128	@ 0x80
    ssd1306_DrawPixel(x2, y2, color);

    while((x1 != x2) || (y1 != y2)) {
        ssd1306_DrawPixel(x1, y1, color);
        error2 = error * 2;
        if(error2 > -deltaY) {
 8002852:	f1cb 0800 	rsb	r8, fp, #0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002856:	08cc      	lsrs	r4, r1, #3
    while((x1 != x2) || (y1 != y2)) {
 8002858:	4282      	cmp	r2, r0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800285a:	fb17 0404 	smlabb	r4, r7, r4, r0
        error2 = error * 2;
 800285e:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
    while((x1 != x2) || (y1 != y2)) {
 8002862:	d101      	bne.n	8002868 <ssd1306_Line.constprop.0+0x7c>
 8002864:	458a      	cmp	sl, r1
 8002866:	d026      	beq.n	80028b6 <ssd1306_Line.constprop.0+0xca>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002868:	0605      	lsls	r5, r0, #24
 800286a:	d40c      	bmi.n	8002886 <ssd1306_Line.constprop.0+0x9a>
 800286c:	293f      	cmp	r1, #63	@ 0x3f
 800286e:	d80a      	bhi.n	8002886 <ssd1306_Line.constprop.0+0x9a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002870:	f813 9004 	ldrb.w	r9, [r3, r4]
 8002874:	f001 0507 	and.w	r5, r1, #7
 8002878:	f04f 0b01 	mov.w	fp, #1
 800287c:	fa0b f505 	lsl.w	r5, fp, r5
 8002880:	ea45 0509 	orr.w	r5, r5, r9
 8002884:	551d      	strb	r5, [r3, r4]
        if(error2 > -deltaY) {
 8002886:	ebb8 0f4e 	cmp.w	r8, lr, lsl #1
 800288a:	da05      	bge.n	8002898 <ssd1306_Line.constprop.0+0xac>
            error -= deltaY;
            x1 += signX;
 800288c:	9c01      	ldr	r4, [sp, #4]
 800288e:	4420      	add	r0, r4
            error -= deltaY;
 8002890:	9c03      	ldr	r4, [sp, #12]
            x1 += signX;
 8002892:	b2c0      	uxtb	r0, r0
            error -= deltaY;
 8002894:	ebae 0e04 	sub.w	lr, lr, r4
        }
        
        if(error2 < deltaX) {
 8002898:	4566      	cmp	r6, ip
 800289a:	dddc      	ble.n	8002856 <ssd1306_Line.constprop.0+0x6a>
            error += deltaX;
            y1 += signY;
 800289c:	9c02      	ldr	r4, [sp, #8]
 800289e:	4421      	add	r1, r4
 80028a0:	b2c9      	uxtb	r1, r1
            error += deltaX;
 80028a2:	44b6      	add	lr, r6
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028a4:	08cc      	lsrs	r4, r1, #3
    while((x1 != x2) || (y1 != y2)) {
 80028a6:	4282      	cmp	r2, r0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028a8:	fb17 0404 	smlabb	r4, r7, r4, r0
        error2 = error * 2;
 80028ac:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
    while((x1 != x2) || (y1 != y2)) {
 80028b0:	d1da      	bne.n	8002868 <ssd1306_Line.constprop.0+0x7c>
 80028b2:	458a      	cmp	sl, r1
 80028b4:	d1d8      	bne.n	8002868 <ssd1306_Line.constprop.0+0x7c>
        }
    }
    return;
}
 80028b6:	b005      	add	sp, #20
 80028b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80028bc:	20001138 	.word	0x20001138

080028c0 <ssd1306_WriteChar.constprop.0.isra.0>:
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 80028c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (ch < 32 || ch > 126)
 80028c4:	f1a0 0520 	sub.w	r5, r0, #32
 80028c8:	b2ec      	uxtb	r4, r5
 80028ca:	2c5e      	cmp	r4, #94	@ 0x5e
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 80028cc:	b083      	sub	sp, #12
    if (ch < 32 || ch > 126)
 80028ce:	d866      	bhi.n	800299e <ssd1306_WriteChar.constprop.0.isra.0+0xde>
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 80028d0:	4f35      	ldr	r7, [pc, #212]	@ (80029a8 <ssd1306_WriteChar.constprop.0.isra.0+0xe8>)
 80028d2:	883e      	ldrh	r6, [r7, #0]
 80028d4:	1874      	adds	r4, r6, r1
 80028d6:	2c80      	cmp	r4, #128	@ 0x80
 80028d8:	dc61      	bgt.n	800299e <ssd1306_WriteChar.constprop.0.isra.0+0xde>
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 80028da:	887f      	ldrh	r7, [r7, #2]
 80028dc:	eb07 0c02 	add.w	ip, r7, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 80028e0:	f1bc 0f40 	cmp.w	ip, #64	@ 0x40
 80028e4:	dc5b      	bgt.n	800299e <ssd1306_WriteChar.constprop.0.isra.0+0xde>
    for(i = 0; i < Font.FontHeight; i++) {
 80028e6:	2a00      	cmp	r2, #0
 80028e8:	d054      	beq.n	8002994 <ssd1306_WriteChar.constprop.0.isra.0+0xd4>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 80028ea:	fb02 f505 	mul.w	r5, r2, r5
 80028ee:	2900      	cmp	r1, #0
 80028f0:	d050      	beq.n	8002994 <ssd1306_WriteChar.constprop.0.isra.0+0xd4>
 80028f2:	442a      	add	r2, r5
 80028f4:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 80028f8:	3d01      	subs	r5, #1
 80028fa:	eb03 0545 	add.w	r5, r3, r5, lsl #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028fe:	f8df 80ac 	ldr.w	r8, [pc, #172]	@ 80029ac <ssd1306_WriteChar.constprop.0.isra.0+0xec>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002902:	9001      	str	r0, [sp, #4]
 8002904:	3b02      	subs	r3, #2
 8002906:	eb03 0942 	add.w	r9, r3, r2, lsl #1
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 800290a:	fa5f fb86 	uxtb.w	fp, r6
 800290e:	b2fb      	uxtb	r3, r7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002910:	46a4      	mov	ip, r4
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002912:	2b3f      	cmp	r3, #63	@ 0x3f
 8002914:	f105 0502 	add.w	r5, r5, #2
        for(j = 0; j < Font.FontWidth; j++) {
 8002918:	d836      	bhi.n	8002988 <ssd1306_WriteChar.constprop.0.isra.0+0xc8>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800291a:	f003 0e07 	and.w	lr, r3, #7
 800291e:	2201      	movs	r2, #1
 8002920:	fa02 fe0e 	lsl.w	lr, r2, lr
 8002924:	ea6f 0a0e 	mvn.w	sl, lr
 8002928:	08dc      	lsrs	r4, r3, #3
 800292a:	fa5f fa8a 	uxtb.w	sl, sl
        for(j = 0; j < Font.FontWidth; j++) {
 800292e:	9300      	str	r3, [sp, #0]
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002930:	882e      	ldrh	r6, [r5, #0]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002932:	01e4      	lsls	r4, r4, #7
 8002934:	fa5f fe8e 	uxtb.w	lr, lr
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002938:	465a      	mov	r2, fp
        for(j = 0; j < Font.FontWidth; j++) {
 800293a:	2000      	movs	r0, #0
 800293c:	4653      	mov	r3, sl
 800293e:	e00d      	b.n	800295c <ssd1306_WriteChar.constprop.0.isra.0+0x9c>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002940:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002944:	d105      	bne.n	8002952 <ssd1306_WriteChar.constprop.0.isra.0+0x92>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002946:	f818 a007 	ldrb.w	sl, [r8, r7]
 800294a:	ea03 0a0a 	and.w	sl, r3, sl
 800294e:	f808 a007 	strb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 8002952:	3001      	adds	r0, #1
 8002954:	3201      	adds	r2, #1
 8002956:	4288      	cmp	r0, r1
 8002958:	b2d2      	uxtb	r2, r2
 800295a:	d014      	beq.n	8002986 <ssd1306_WriteChar.constprop.0.isra.0+0xc6>
            if((b << j) & 0x8000)  {
 800295c:	fa06 f700 	lsl.w	r7, r6, r0
 8002960:	f417 4f00 	tst.w	r7, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002964:	eb02 0704 	add.w	r7, r2, r4
            if((b << j) & 0x8000)  {
 8002968:	d0ea      	beq.n	8002940 <ssd1306_WriteChar.constprop.0.isra.0+0x80>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 800296a:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800296e:	d1f0      	bne.n	8002952 <ssd1306_WriteChar.constprop.0.isra.0+0x92>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002970:	f818 a007 	ldrb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 8002974:	3001      	adds	r0, #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002976:	ea4e 0a0a 	orr.w	sl, lr, sl
        for(j = 0; j < Font.FontWidth; j++) {
 800297a:	3201      	adds	r2, #1
 800297c:	4288      	cmp	r0, r1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800297e:	f808 a007 	strb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 8002982:	b2d2      	uxtb	r2, r2
 8002984:	d1ea      	bne.n	800295c <ssd1306_WriteChar.constprop.0.isra.0+0x9c>
 8002986:	9b00      	ldr	r3, [sp, #0]
    for(i = 0; i < Font.FontHeight; i++) {
 8002988:	3301      	adds	r3, #1
 800298a:	45a9      	cmp	r9, r5
 800298c:	b2db      	uxtb	r3, r3
 800298e:	d1c0      	bne.n	8002912 <ssd1306_WriteChar.constprop.0.isra.0+0x52>
 8002990:	9801      	ldr	r0, [sp, #4]
 8002992:	4664      	mov	r4, ip
    SSD1306.CurrentX += Font.FontWidth;
 8002994:	4b04      	ldr	r3, [pc, #16]	@ (80029a8 <ssd1306_WriteChar.constprop.0.isra.0+0xe8>)
 8002996:	801c      	strh	r4, [r3, #0]
}
 8002998:	b003      	add	sp, #12
 800299a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return 0;
 800299e:	2000      	movs	r0, #0
}
 80029a0:	b003      	add	sp, #12
 80029a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029a6:	bf00      	nop
 80029a8:	20001130 	.word	0x20001130
 80029ac:	20001138 	.word	0x20001138

080029b0 <ssd1306_Fill>:
    memset(SSD1306_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 80029b0:	2800      	cmp	r0, #0
 80029b2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80029b6:	4803      	ldr	r0, [pc, #12]	@ (80029c4 <ssd1306_Fill+0x14>)
 80029b8:	bf14      	ite	ne
 80029ba:	21ff      	movne	r1, #255	@ 0xff
 80029bc:	2100      	moveq	r1, #0
 80029be:	f00d bd52 	b.w	8010466 <memset>
 80029c2:	bf00      	nop
 80029c4:	20001138 	.word	0x20001138

080029c8 <ssd1306_UpdateScreen>:
void ssd1306_UpdateScreen(void) {
 80029c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029cc:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8002a5c <ssd1306_UpdateScreen+0x94>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80029d0:	4f21      	ldr	r7, [pc, #132]	@ (8002a58 <ssd1306_UpdateScreen+0x90>)
void ssd1306_UpdateScreen(void) {
 80029d2:	b086      	sub	sp, #24
 80029d4:	25b0      	movs	r5, #176	@ 0xb0
 80029d6:	f10d 0817 	add.w	r8, sp, #23
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80029da:	f04f 0a00 	mov.w	sl, #0
 80029de:	2401      	movs	r4, #1
 80029e0:	f04f 36ff 	mov.w	r6, #4294967295
 80029e4:	4623      	mov	r3, r4
 80029e6:	2200      	movs	r2, #0
 80029e8:	2178      	movs	r1, #120	@ 0x78
 80029ea:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80029ee:	f8cd 8000 	str.w	r8, [sp]
 80029f2:	4638      	mov	r0, r7
 80029f4:	f88d 5017 	strb.w	r5, [sp, #23]
 80029f8:	f004 f9c4 	bl	8006d84 <HAL_I2C_Mem_Write>
 80029fc:	2200      	movs	r2, #0
 80029fe:	2178      	movs	r1, #120	@ 0x78
 8002a00:	4623      	mov	r3, r4
 8002a02:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002a06:	f8cd 8000 	str.w	r8, [sp]
 8002a0a:	4638      	mov	r0, r7
 8002a0c:	f88d a017 	strb.w	sl, [sp, #23]
 8002a10:	f004 f9b8 	bl	8006d84 <HAL_I2C_Mem_Write>
        ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 8002a14:	f04f 0c10 	mov.w	ip, #16
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a18:	2200      	movs	r2, #0
 8002a1a:	4623      	mov	r3, r4
 8002a1c:	2178      	movs	r1, #120	@ 0x78
 8002a1e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002a22:	f8cd 8000 	str.w	r8, [sp]
 8002a26:	4638      	mov	r0, r7
 8002a28:	f88d c017 	strb.w	ip, [sp, #23]
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a2c:	4425      	add	r5, r4
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a2e:	f004 f9a9 	bl	8006d84 <HAL_I2C_Mem_Write>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8002a32:	2380      	movs	r3, #128	@ 0x80
 8002a34:	e9cd 3601 	strd	r3, r6, [sp, #4]
 8002a38:	f8cd 9000 	str.w	r9, [sp]
 8002a3c:	2240      	movs	r2, #64	@ 0x40
 8002a3e:	4623      	mov	r3, r4
 8002a40:	2178      	movs	r1, #120	@ 0x78
 8002a42:	4638      	mov	r0, r7
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a44:	b2ed      	uxtb	r5, r5
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8002a46:	f004 f99d 	bl	8006d84 <HAL_I2C_Mem_Write>
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a4a:	2db8      	cmp	r5, #184	@ 0xb8
 8002a4c:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 8002a50:	d1c5      	bne.n	80029de <ssd1306_UpdateScreen+0x16>
}
 8002a52:	b006      	add	sp, #24
 8002a54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a58:	20000420 	.word	0x20000420
 8002a5c:	20001138 	.word	0x20001138

08002a60 <ssd1306_Init>:
void ssd1306_Init(void) {
 8002a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    HAL_Delay(100);
 8002a64:	2064      	movs	r0, #100	@ 0x64
void ssd1306_Init(void) {
 8002a66:	b086      	sub	sp, #24
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a68:	4fc2      	ldr	r7, [pc, #776]	@ (8002d74 <ssd1306_Init+0x314>)
    if (on) {
        value = 0xAF;   // Display on
        SSD1306.DisplayOn = 1;
    } else {
        value = 0xAE;   // Display off
        SSD1306.DisplayOn = 0;
 8002a6a:	f8df 9310 	ldr.w	r9, [pc, #784]	@ 8002d7c <ssd1306_Init+0x31c>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a6e:	2401      	movs	r4, #1
        SSD1306.DisplayOn = 0;
 8002a70:	2500      	movs	r5, #0
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a72:	f04f 36ff 	mov.w	r6, #4294967295
 8002a76:	f10d 0817 	add.w	r8, sp, #23
    HAL_Delay(100);
 8002a7a:	f002 fe6f 	bl	800575c <HAL_Delay>
        SSD1306.DisplayOn = 0;
 8002a7e:	23ae      	movs	r3, #174	@ 0xae
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a80:	9401      	str	r4, [sp, #4]
 8002a82:	f88d 3017 	strb.w	r3, [sp, #23]
        SSD1306.DisplayOn = 0;
 8002a86:	f889 5005 	strb.w	r5, [r9, #5]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a8a:	4623      	mov	r3, r4
 8002a8c:	462a      	mov	r2, r5
 8002a8e:	9602      	str	r6, [sp, #8]
 8002a90:	f8cd 8000 	str.w	r8, [sp]
 8002a94:	2178      	movs	r1, #120	@ 0x78
 8002a96:	4638      	mov	r0, r7
 8002a98:	f004 f974 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 8002a9c:	f04f 0a20 	mov.w	sl, #32
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002aa0:	4623      	mov	r3, r4
 8002aa2:	462a      	mov	r2, r5
 8002aa4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002aa8:	f8cd 8000 	str.w	r8, [sp]
 8002aac:	2178      	movs	r1, #120	@ 0x78
 8002aae:	4638      	mov	r0, r7
 8002ab0:	f88d a017 	strb.w	sl, [sp, #23]
 8002ab4:	f004 f966 	bl	8006d84 <HAL_I2C_Mem_Write>
 8002ab8:	4623      	mov	r3, r4
 8002aba:	462a      	mov	r2, r5
 8002abc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ac0:	f8cd 8000 	str.w	r8, [sp]
 8002ac4:	2178      	movs	r1, #120	@ 0x78
 8002ac6:	4638      	mov	r0, r7
 8002ac8:	f88d 5017 	strb.w	r5, [sp, #23]
 8002acc:	f004 f95a 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8002ad0:	23b0      	movs	r3, #176	@ 0xb0
 8002ad2:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ad6:	462a      	mov	r2, r5
 8002ad8:	4623      	mov	r3, r4
 8002ada:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ade:	f8cd 8000 	str.w	r8, [sp]
 8002ae2:	2178      	movs	r1, #120	@ 0x78
 8002ae4:	4638      	mov	r0, r7
 8002ae6:	f004 f94d 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 8002aea:	23c8      	movs	r3, #200	@ 0xc8
 8002aec:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002af0:	462a      	mov	r2, r5
 8002af2:	4623      	mov	r3, r4
 8002af4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002af8:	f8cd 8000 	str.w	r8, [sp]
 8002afc:	2178      	movs	r1, #120	@ 0x78
 8002afe:	4638      	mov	r0, r7
 8002b00:	f004 f940 	bl	8006d84 <HAL_I2C_Mem_Write>
 8002b04:	4623      	mov	r3, r4
 8002b06:	462a      	mov	r2, r5
 8002b08:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b0c:	f8cd 8000 	str.w	r8, [sp]
 8002b10:	2178      	movs	r1, #120	@ 0x78
 8002b12:	4638      	mov	r0, r7
 8002b14:	f88d 5017 	strb.w	r5, [sp, #23]
 8002b18:	f004 f934 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x10); //---set high column address
 8002b1c:	2310      	movs	r3, #16
 8002b1e:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b22:	462a      	mov	r2, r5
 8002b24:	4623      	mov	r3, r4
 8002b26:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b2a:	f8cd 8000 	str.w	r8, [sp]
 8002b2e:	2178      	movs	r1, #120	@ 0x78
 8002b30:	4638      	mov	r0, r7
 8002b32:	f004 f927 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 8002b36:	2340      	movs	r3, #64	@ 0x40
 8002b38:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b3c:	462a      	mov	r2, r5
 8002b3e:	4623      	mov	r3, r4
 8002b40:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b44:	f8cd 8000 	str.w	r8, [sp]
 8002b48:	2178      	movs	r1, #120	@ 0x78
 8002b4a:	4638      	mov	r0, r7
 8002b4c:	f004 f91a 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(kSetContrastControlRegister);
 8002b50:	2381      	movs	r3, #129	@ 0x81
 8002b52:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b56:	462a      	mov	r2, r5
 8002b58:	4623      	mov	r3, r4
 8002b5a:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b5e:	f8cd 8000 	str.w	r8, [sp]
 8002b62:	2178      	movs	r1, #120	@ 0x78
 8002b64:	4638      	mov	r0, r7
 8002b66:	f004 f90d 	bl	8006d84 <HAL_I2C_Mem_Write>
 8002b6a:	4623      	mov	r3, r4
 8002b6c:	462a      	mov	r2, r5
 8002b6e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b72:	f8cd 8000 	str.w	r8, [sp]
 8002b76:	2178      	movs	r1, #120	@ 0x78
 8002b78:	4638      	mov	r0, r7
 8002b7a:	f88d 6017 	strb.w	r6, [sp, #23]
 8002b7e:	f004 f901 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 8002b82:	23a1      	movs	r3, #161	@ 0xa1
 8002b84:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b88:	462a      	mov	r2, r5
 8002b8a:	4623      	mov	r3, r4
 8002b8c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b90:	f8cd 8000 	str.w	r8, [sp]
 8002b94:	2178      	movs	r1, #120	@ 0x78
 8002b96:	4638      	mov	r0, r7
 8002b98:	f004 f8f4 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA6); //--set normal color
 8002b9c:	23a6      	movs	r3, #166	@ 0xa6
 8002b9e:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ba2:	462a      	mov	r2, r5
 8002ba4:	4623      	mov	r3, r4
 8002ba6:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002baa:	f8cd 8000 	str.w	r8, [sp]
 8002bae:	2178      	movs	r1, #120	@ 0x78
 8002bb0:	4638      	mov	r0, r7
 8002bb2:	f004 f8e7 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 8002bb6:	23a8      	movs	r3, #168	@ 0xa8
 8002bb8:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bbc:	462a      	mov	r2, r5
 8002bbe:	4623      	mov	r3, r4
 8002bc0:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bc4:	f8cd 8000 	str.w	r8, [sp]
 8002bc8:	2178      	movs	r1, #120	@ 0x78
 8002bca:	4638      	mov	r0, r7
 8002bcc:	f004 f8da 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x3F); //
 8002bd0:	233f      	movs	r3, #63	@ 0x3f
 8002bd2:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bd6:	462a      	mov	r2, r5
 8002bd8:	4623      	mov	r3, r4
 8002bda:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bde:	f8cd 8000 	str.w	r8, [sp]
 8002be2:	2178      	movs	r1, #120	@ 0x78
 8002be4:	4638      	mov	r0, r7
 8002be6:	f004 f8cd 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8002bea:	23a4      	movs	r3, #164	@ 0xa4
 8002bec:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bf0:	462a      	mov	r2, r5
 8002bf2:	4623      	mov	r3, r4
 8002bf4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bf8:	f8cd 8000 	str.w	r8, [sp]
 8002bfc:	2178      	movs	r1, #120	@ 0x78
 8002bfe:	4638      	mov	r0, r7
 8002c00:	f004 f8c0 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 8002c04:	23d3      	movs	r3, #211	@ 0xd3
 8002c06:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c0a:	462a      	mov	r2, r5
 8002c0c:	4623      	mov	r3, r4
 8002c0e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c12:	f8cd 8000 	str.w	r8, [sp]
 8002c16:	2178      	movs	r1, #120	@ 0x78
 8002c18:	4638      	mov	r0, r7
 8002c1a:	f004 f8b3 	bl	8006d84 <HAL_I2C_Mem_Write>
 8002c1e:	4623      	mov	r3, r4
 8002c20:	462a      	mov	r2, r5
 8002c22:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c26:	f8cd 8000 	str.w	r8, [sp]
 8002c2a:	2178      	movs	r1, #120	@ 0x78
 8002c2c:	4638      	mov	r0, r7
 8002c2e:	f88d 5017 	strb.w	r5, [sp, #23]
 8002c32:	f004 f8a7 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 8002c36:	23d5      	movs	r3, #213	@ 0xd5
 8002c38:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c3c:	462a      	mov	r2, r5
 8002c3e:	4623      	mov	r3, r4
 8002c40:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c44:	f8cd 8000 	str.w	r8, [sp]
 8002c48:	2178      	movs	r1, #120	@ 0x78
 8002c4a:	4638      	mov	r0, r7
 8002c4c:	f004 f89a 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xF0); //--set divide ratio
 8002c50:	23f0      	movs	r3, #240	@ 0xf0
 8002c52:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c56:	462a      	mov	r2, r5
 8002c58:	4623      	mov	r3, r4
 8002c5a:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c5e:	f8cd 8000 	str.w	r8, [sp]
 8002c62:	2178      	movs	r1, #120	@ 0x78
 8002c64:	4638      	mov	r0, r7
 8002c66:	f004 f88d 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD9); //--set pre-charge period
 8002c6a:	23d9      	movs	r3, #217	@ 0xd9
 8002c6c:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c70:	462a      	mov	r2, r5
 8002c72:	4623      	mov	r3, r4
 8002c74:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c78:	f8cd 8000 	str.w	r8, [sp]
 8002c7c:	2178      	movs	r1, #120	@ 0x78
 8002c7e:	4638      	mov	r0, r7
 8002c80:	f004 f880 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x22); //
 8002c84:	2322      	movs	r3, #34	@ 0x22
 8002c86:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c8a:	462a      	mov	r2, r5
 8002c8c:	4623      	mov	r3, r4
 8002c8e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c92:	f8cd 8000 	str.w	r8, [sp]
 8002c96:	2178      	movs	r1, #120	@ 0x78
 8002c98:	4638      	mov	r0, r7
 8002c9a:	f004 f873 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 8002c9e:	23da      	movs	r3, #218	@ 0xda
 8002ca0:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ca4:	462a      	mov	r2, r5
 8002ca6:	4623      	mov	r3, r4
 8002ca8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cac:	f8cd 8000 	str.w	r8, [sp]
 8002cb0:	2178      	movs	r1, #120	@ 0x78
 8002cb2:	4638      	mov	r0, r7
 8002cb4:	f004 f866 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x12);
 8002cb8:	2312      	movs	r3, #18
 8002cba:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cbe:	462a      	mov	r2, r5
 8002cc0:	4623      	mov	r3, r4
 8002cc2:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cc6:	f8cd 8000 	str.w	r8, [sp]
 8002cca:	2178      	movs	r1, #120	@ 0x78
 8002ccc:	4638      	mov	r0, r7
 8002cce:	f004 f859 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xDB); //--set vcomh
 8002cd2:	23db      	movs	r3, #219	@ 0xdb
 8002cd4:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cd8:	462a      	mov	r2, r5
 8002cda:	4623      	mov	r3, r4
 8002cdc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ce0:	f8cd 8000 	str.w	r8, [sp]
 8002ce4:	2178      	movs	r1, #120	@ 0x78
 8002ce6:	4638      	mov	r0, r7
 8002ce8:	f004 f84c 	bl	8006d84 <HAL_I2C_Mem_Write>
 8002cec:	4623      	mov	r3, r4
 8002cee:	462a      	mov	r2, r5
 8002cf0:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cf4:	f8cd 8000 	str.w	r8, [sp]
 8002cf8:	2178      	movs	r1, #120	@ 0x78
 8002cfa:	4638      	mov	r0, r7
 8002cfc:	f88d a017 	strb.w	sl, [sp, #23]
 8002d00:	f004 f840 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 8002d04:	238d      	movs	r3, #141	@ 0x8d
 8002d06:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d0a:	462a      	mov	r2, r5
 8002d0c:	4623      	mov	r3, r4
 8002d0e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d12:	f8cd 8000 	str.w	r8, [sp]
 8002d16:	2178      	movs	r1, #120	@ 0x78
 8002d18:	4638      	mov	r0, r7
 8002d1a:	f004 f833 	bl	8006d84 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x14); //
 8002d1e:	2314      	movs	r3, #20
 8002d20:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d24:	462a      	mov	r2, r5
 8002d26:	4623      	mov	r3, r4
 8002d28:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d2c:	f8cd 8000 	str.w	r8, [sp]
 8002d30:	2178      	movs	r1, #120	@ 0x78
 8002d32:	4638      	mov	r0, r7
 8002d34:	f004 f826 	bl	8006d84 <HAL_I2C_Mem_Write>
        SSD1306.DisplayOn = 1;
 8002d38:	22af      	movs	r2, #175	@ 0xaf
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d3a:	4623      	mov	r3, r4
 8002d3c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d40:	f8cd 8000 	str.w	r8, [sp]
 8002d44:	f88d 2017 	strb.w	r2, [sp, #23]
 8002d48:	4638      	mov	r0, r7
 8002d4a:	462a      	mov	r2, r5
        SSD1306.DisplayOn = 1;
 8002d4c:	f889 4005 	strb.w	r4, [r9, #5]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d50:	2178      	movs	r1, #120	@ 0x78
 8002d52:	f004 f817 	bl	8006d84 <HAL_I2C_Mem_Write>
    memset(SSD1306_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 8002d56:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002d5a:	4629      	mov	r1, r5
 8002d5c:	4806      	ldr	r0, [pc, #24]	@ (8002d78 <ssd1306_Init+0x318>)
 8002d5e:	f00d fb82 	bl	8010466 <memset>
    ssd1306_UpdateScreen();
 8002d62:	f7ff fe31 	bl	80029c8 <ssd1306_UpdateScreen>
    SSD1306.CurrentX = 0;
 8002d66:	f8c9 5000 	str.w	r5, [r9]
    SSD1306.Initialized = 1;
 8002d6a:	f889 4004 	strb.w	r4, [r9, #4]
}
 8002d6e:	b006      	add	sp, #24
 8002d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002d74:	20000420 	.word	0x20000420
 8002d78:	20001138 	.word	0x20001138
 8002d7c:	20001130 	.word	0x20001130

08002d80 <ssd1306_WriteChar>:
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d84:	b087      	sub	sp, #28
    if (ch < 32 || ch > 126)
 8002d86:	f1a0 0520 	sub.w	r5, r0, #32
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002d8a:	ac06      	add	r4, sp, #24
 8002d8c:	e904 0006 	stmdb	r4, {r1, r2}
    if (ch < 32 || ch > 126)
 8002d90:	b2ea      	uxtb	r2, r5
 8002d92:	2a5e      	cmp	r2, #94	@ 0x5e
 8002d94:	d85c      	bhi.n	8002e50 <ssd1306_WriteChar+0xd0>
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002d96:	4e58      	ldr	r6, [pc, #352]	@ (8002ef8 <ssd1306_WriteChar+0x178>)
 8002d98:	f89d 4010 	ldrb.w	r4, [sp, #16]
 8002d9c:	8831      	ldrh	r1, [r6, #0]
 8002d9e:	eb01 0e04 	add.w	lr, r1, r4
 8002da2:	f1be 0f80 	cmp.w	lr, #128	@ 0x80
 8002da6:	dc53      	bgt.n	8002e50 <ssd1306_WriteChar+0xd0>
 8002da8:	f89d 2011 	ldrb.w	r2, [sp, #17]
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 8002dac:	f8b6 c002 	ldrh.w	ip, [r6, #2]
 8002db0:	eb0c 0602 	add.w	r6, ip, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002db4:	2e40      	cmp	r6, #64	@ 0x40
 8002db6:	dc4b      	bgt.n	8002e50 <ssd1306_WriteChar+0xd0>
    for(i = 0; i < Font.FontHeight; i++) {
 8002db8:	2a00      	cmp	r2, #0
 8002dba:	d043      	beq.n	8002e44 <ssd1306_WriteChar+0xc4>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002dbc:	fb02 f605 	mul.w	r6, r2, r5
 8002dc0:	9d05      	ldr	r5, [sp, #20]
 8002dc2:	2c00      	cmp	r4, #0
 8002dc4:	d03e      	beq.n	8002e44 <ssd1306_WriteChar+0xc4>
 8002dc6:	4432      	add	r2, r6
 8002dc8:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 8002dcc:	3e01      	subs	r6, #1
 8002dce:	eb05 0646 	add.w	r6, r5, r6, lsl #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002dd2:	e9cd 0e02 	strd	r0, lr, [sp, #8]
 8002dd6:	3d02      	subs	r5, #2
 8002dd8:	eb05 0a42 	add.w	sl, r5, r2, lsl #1
 8002ddc:	4d47      	ldr	r5, [pc, #284]	@ (8002efc <ssd1306_WriteChar+0x17c>)
 8002dde:	fa5f fc8c 	uxtb.w	ip, ip
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002de2:	fa5f fb81 	uxtb.w	fp, r1
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002de6:	f1bc 0f3f 	cmp.w	ip, #63	@ 0x3f
 8002dea:	f106 0602 	add.w	r6, r6, #2
        for(j = 0; j < Font.FontWidth; j++) {
 8002dee:	d821      	bhi.n	8002e34 <ssd1306_WriteChar+0xb4>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002df0:	2201      	movs	r2, #1
 8002df2:	f00c 0807 	and.w	r8, ip, #7
 8002df6:	fa02 f808 	lsl.w	r8, r2, r8
 8002dfa:	ea4f 00dc 	mov.w	r0, ip, lsr #3
 8002dfe:	ea6f 0e08 	mvn.w	lr, r8
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002e02:	8837      	ldrh	r7, [r6, #0]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e04:	01c0      	lsls	r0, r0, #7
 8002e06:	fa5f fe8e 	uxtb.w	lr, lr
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002e0a:	465a      	mov	r2, fp
 8002e0c:	b323      	cbz	r3, 8002e58 <ssd1306_WriteChar+0xd8>
 8002e0e:	2b01      	cmp	r3, #1
        for(j = 0; j < Font.FontWidth; j++) {
 8002e10:	f04f 0100 	mov.w	r1, #0
 8002e14:	d04e      	beq.n	8002eb4 <ssd1306_WriteChar+0x134>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e16:	0617      	lsls	r7, r2, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e18:	eb02 0800 	add.w	r8, r2, r0
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e1c:	d405      	bmi.n	8002e2a <ssd1306_WriteChar+0xaa>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e1e:	f815 9008 	ldrb.w	r9, [r5, r8]
 8002e22:	ea0e 0909 	and.w	r9, lr, r9
 8002e26:	f805 9008 	strb.w	r9, [r5, r8]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e2a:	3101      	adds	r1, #1
 8002e2c:	3201      	adds	r2, #1
 8002e2e:	428c      	cmp	r4, r1
 8002e30:	b2d2      	uxtb	r2, r2
 8002e32:	d1f0      	bne.n	8002e16 <ssd1306_WriteChar+0x96>
    for(i = 0; i < Font.FontHeight; i++) {
 8002e34:	f10c 0c01 	add.w	ip, ip, #1
 8002e38:	4556      	cmp	r6, sl
 8002e3a:	fa5f fc8c 	uxtb.w	ip, ip
 8002e3e:	d1d2      	bne.n	8002de6 <ssd1306_WriteChar+0x66>
 8002e40:	e9dd 0e02 	ldrd	r0, lr, [sp, #8]
    SSD1306.CurrentX += Font.FontWidth;
 8002e44:	4b2c      	ldr	r3, [pc, #176]	@ (8002ef8 <ssd1306_WriteChar+0x178>)
 8002e46:	f8a3 e000 	strh.w	lr, [r3]
}
 8002e4a:	b007      	add	sp, #28
 8002e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return 0;
 8002e50:	2000      	movs	r0, #0
}
 8002e52:	b007      	add	sp, #28
 8002e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        for(j = 0; j < Font.FontWidth; j++) {
 8002e58:	4619      	mov	r1, r3
 8002e5a:	9601      	str	r6, [sp, #4]
 8002e5c:	e00d      	b.n	8002e7a <ssd1306_WriteChar+0xfa>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e5e:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002e62:	d105      	bne.n	8002e70 <ssd1306_WriteChar+0xf0>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002e64:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002e68:	ea49 0908 	orr.w	r9, r9, r8
 8002e6c:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e70:	3101      	adds	r1, #1
 8002e72:	3201      	adds	r2, #1
 8002e74:	42a1      	cmp	r1, r4
 8002e76:	b2d2      	uxtb	r2, r2
 8002e78:	d014      	beq.n	8002ea4 <ssd1306_WriteChar+0x124>
            if((b << j) & 0x8000)  {
 8002e7a:	fa07 f601 	lsl.w	r6, r7, r1
 8002e7e:	f416 4f00 	tst.w	r6, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e82:	eb02 0600 	add.w	r6, r2, r0
            if((b << j) & 0x8000)  {
 8002e86:	d0ea      	beq.n	8002e5e <ssd1306_WriteChar+0xde>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e88:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002e8c:	d1f0      	bne.n	8002e70 <ssd1306_WriteChar+0xf0>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e8e:	f815 9006 	ldrb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e92:	3101      	adds	r1, #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e94:	ea0e 0909 	and.w	r9, lr, r9
        for(j = 0; j < Font.FontWidth; j++) {
 8002e98:	3201      	adds	r2, #1
 8002e9a:	42a1      	cmp	r1, r4
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e9c:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002ea0:	b2d2      	uxtb	r2, r2
 8002ea2:	d1ea      	bne.n	8002e7a <ssd1306_WriteChar+0xfa>
 8002ea4:	9e01      	ldr	r6, [sp, #4]
    for(i = 0; i < Font.FontHeight; i++) {
 8002ea6:	f10c 0c01 	add.w	ip, ip, #1
 8002eaa:	4556      	cmp	r6, sl
 8002eac:	fa5f fc8c 	uxtb.w	ip, ip
 8002eb0:	d199      	bne.n	8002de6 <ssd1306_WriteChar+0x66>
 8002eb2:	e7c5      	b.n	8002e40 <ssd1306_WriteChar+0xc0>
        for(j = 0; j < Font.FontWidth; j++) {
 8002eb4:	9601      	str	r6, [sp, #4]
 8002eb6:	e00d      	b.n	8002ed4 <ssd1306_WriteChar+0x154>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002eb8:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002ebc:	d105      	bne.n	8002eca <ssd1306_WriteChar+0x14a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002ebe:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002ec2:	ea49 0908 	orr.w	r9, r9, r8
 8002ec6:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002eca:	3101      	adds	r1, #1
 8002ecc:	3201      	adds	r2, #1
 8002ece:	42a1      	cmp	r1, r4
 8002ed0:	b2d2      	uxtb	r2, r2
 8002ed2:	d0e7      	beq.n	8002ea4 <ssd1306_WriteChar+0x124>
            if((b << j) & 0x8000)  {
 8002ed4:	fa07 f601 	lsl.w	r6, r7, r1
 8002ed8:	f416 4f00 	tst.w	r6, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002edc:	eb02 0600 	add.w	r6, r2, r0
            if((b << j) & 0x8000)  {
 8002ee0:	d1ea      	bne.n	8002eb8 <ssd1306_WriteChar+0x138>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002ee2:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002ee6:	d1f0      	bne.n	8002eca <ssd1306_WriteChar+0x14a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002ee8:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002eec:	ea0e 0909 	and.w	r9, lr, r9
 8002ef0:	f805 9006 	strb.w	r9, [r5, r6]
 8002ef4:	e7e9      	b.n	8002eca <ssd1306_WriteChar+0x14a>
 8002ef6:	bf00      	nop
 8002ef8:	20001130 	.word	0x20001130
 8002efc:	20001138 	.word	0x20001138

08002f00 <ssd1306_WriteString>:
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002f00:	b570      	push	{r4, r5, r6, lr}
 8002f02:	4604      	mov	r4, r0
 8002f04:	b082      	sub	sp, #8
    while (*str) {
 8002f06:	7800      	ldrb	r0, [r0, #0]
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002f08:	466d      	mov	r5, sp
 8002f0a:	e885 0006 	stmia.w	r5, {r1, r2}
    while (*str) {
 8002f0e:	b178      	cbz	r0, 8002f30 <ssd1306_WriteString+0x30>
 8002f10:	461e      	mov	r6, r3
 8002f12:	e002      	b.n	8002f1a <ssd1306_WriteString+0x1a>
 8002f14:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8002f18:	b150      	cbz	r0, 8002f30 <ssd1306_WriteString+0x30>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 8002f1a:	e895 0006 	ldmia.w	r5, {r1, r2}
 8002f1e:	4633      	mov	r3, r6
 8002f20:	f7ff ff2e 	bl	8002d80 <ssd1306_WriteChar>
 8002f24:	7822      	ldrb	r2, [r4, #0]
 8002f26:	4290      	cmp	r0, r2
 8002f28:	d0f4      	beq.n	8002f14 <ssd1306_WriteString+0x14>
}
 8002f2a:	4610      	mov	r0, r2
 8002f2c:	b002      	add	sp, #8
 8002f2e:	bd70      	pop	{r4, r5, r6, pc}
    return *str;
 8002f30:	2200      	movs	r2, #0
}
 8002f32:	4610      	mov	r0, r2
 8002f34:	b002      	add	sp, #8
 8002f36:	bd70      	pop	{r4, r5, r6, pc}

08002f38 <ssd1306_SetCursor>:
    SSD1306.CurrentX = x;
 8002f38:	4b01      	ldr	r3, [pc, #4]	@ (8002f40 <ssd1306_SetCursor+0x8>)
 8002f3a:	8018      	strh	r0, [r3, #0]
    SSD1306.CurrentY = y;
 8002f3c:	8059      	strh	r1, [r3, #2]
}
 8002f3e:	4770      	bx	lr
 8002f40:	20001130 	.word	0x20001130

08002f44 <ssd1306_DrawBitmap>:
void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SSD1306_COLOR color) {
 8002f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f48:	4606      	mov	r6, r0
 8002f4a:	b085      	sub	sp, #20
    if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f4c:	0635      	lsls	r5, r6, #24
void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SSD1306_COLOR color) {
 8002f4e:	f89d 4038 	ldrb.w	r4, [sp, #56]	@ 0x38
 8002f52:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
    if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f56:	d46a      	bmi.n	800302e <ssd1306_DrawBitmap+0xea>
 8002f58:	293f      	cmp	r1, #63	@ 0x3f
 8002f5a:	d868      	bhi.n	800302e <ssd1306_DrawBitmap+0xea>
    for (uint8_t j = 0; j < h; j++, y++) {
 8002f5c:	2c00      	cmp	r4, #0
 8002f5e:	d066      	beq.n	800302e <ssd1306_DrawBitmap+0xea>
 8002f60:	4615      	mov	r5, r2
    int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 8002f62:	1dda      	adds	r2, r3, #7
 8002f64:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8002f68:	2b00      	cmp	r3, #0
 8002f6a:	d060      	beq.n	800302e <ssd1306_DrawBitmap+0xea>
 8002f6c:	440c      	add	r4, r1
 8002f6e:	fa5f fb84 	uxtb.w	fp, r4
 8002f72:	2400      	movs	r4, #0
 8002f74:	46b1      	mov	r9, r6
    uint8_t byte = 0;
 8002f76:	46a4      	mov	ip, r4
 8002f78:	4606      	mov	r6, r0
        for (uint8_t i = 0; i < w; i++) {
 8002f7a:	293f      	cmp	r1, #63	@ 0x3f
 8002f7c:	d841      	bhi.n	8003002 <ssd1306_DrawBitmap+0xbe>
 8002f7e:	2e01      	cmp	r6, #1
 8002f80:	9503      	str	r5, [sp, #12]
 8002f82:	d057      	beq.n	8003034 <ssd1306_DrawBitmap+0xf0>
 8002f84:	46b0      	mov	r8, r6
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002f86:	2001      	movs	r0, #1
 8002f88:	f001 0207 	and.w	r2, r1, #7
 8002f8c:	fa00 f202 	lsl.w	r2, r0, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002f90:	43d2      	mvns	r2, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002f92:	9e03      	ldr	r6, [sp, #12]
 8002f94:	b2d5      	uxtb	r5, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002f96:	ea4f 0ed1 	mov.w	lr, r1, lsr #3
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002f9a:	e9cd 5101 	strd	r5, r1, [sp, #4]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002f9e:	ea4f 1ece 	mov.w	lr, lr, lsl #7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fa2:	4648      	mov	r0, r9
 8002fa4:	2200      	movs	r2, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fa6:	1937      	adds	r7, r6, r4
 8002fa8:	e002      	b.n	8002fb0 <ssd1306_DrawBitmap+0x6c>
        for (uint8_t i = 0; i < w; i++) {
 8002faa:	429a      	cmp	r2, r3
 8002fac:	b2e8      	uxtb	r0, r5
 8002fae:	d01e      	beq.n	8002fee <ssd1306_DrawBitmap+0xaa>
                byte <<= 1;
 8002fb0:	b2d5      	uxtb	r5, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fb2:	08ed      	lsrs	r5, r5, #3
            if (i & 7) {
 8002fb4:	f012 0f07 	tst.w	r2, #7
                byte <<= 1;
 8002fb8:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fbc:	bf0c      	ite	eq
 8002fbe:	f817 c005 	ldrbeq.w	ip, [r7, r5]
                byte <<= 1;
 8002fc2:	fa5f fc8c 	uxtbne.w	ip, ip
            if (byte & 0x80) {
 8002fc6:	f01c 0f80 	tst.w	ip, #128	@ 0x80
        for (uint8_t i = 0; i < w; i++) {
 8002fca:	f100 0501 	add.w	r5, r0, #1
 8002fce:	f102 0201 	add.w	r2, r2, #1
            if (byte & 0x80) {
 8002fd2:	d0ea      	beq.n	8002faa <ssd1306_DrawBitmap+0x66>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002fd4:	0601      	lsls	r1, r0, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002fd6:	eb00 060e 	add.w	r6, r0, lr
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002fda:	d4e6      	bmi.n	8002faa <ssd1306_DrawBitmap+0x66>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fdc:	4833      	ldr	r0, [pc, #204]	@ (80030ac <ssd1306_DrawBitmap+0x168>)
 8002fde:	9901      	ldr	r1, [sp, #4]
 8002fe0:	5d80      	ldrb	r0, [r0, r6]
 8002fe2:	4008      	ands	r0, r1
 8002fe4:	4931      	ldr	r1, [pc, #196]	@ (80030ac <ssd1306_DrawBitmap+0x168>)
        for (uint8_t i = 0; i < w; i++) {
 8002fe6:	429a      	cmp	r2, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fe8:	5588      	strb	r0, [r1, r6]
        for (uint8_t i = 0; i < w; i++) {
 8002fea:	b2e8      	uxtb	r0, r5
 8002fec:	d1e0      	bne.n	8002fb0 <ssd1306_DrawBitmap+0x6c>
 8002fee:	9902      	ldr	r1, [sp, #8]
    for (uint8_t j = 0; j < h; j++, y++) {
 8002ff0:	3101      	adds	r1, #1
 8002ff2:	b2c9      	uxtb	r1, r1
 8002ff4:	4559      	cmp	r1, fp
 8002ff6:	4454      	add	r4, sl
 8002ff8:	d019      	beq.n	800302e <ssd1306_DrawBitmap+0xea>
        for (uint8_t i = 0; i < w; i++) {
 8002ffa:	2940      	cmp	r1, #64	@ 0x40
 8002ffc:	d1c3      	bne.n	8002f86 <ssd1306_DrawBitmap+0x42>
 8002ffe:	9d03      	ldr	r5, [sp, #12]
 8003000:	4646      	mov	r6, r8
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003002:	2000      	movs	r0, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003004:	192f      	adds	r7, r5, r4
                byte <<= 1;
 8003006:	b2c2      	uxtb	r2, r0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003008:	08d2      	lsrs	r2, r2, #3
            if (i & 7) {
 800300a:	f010 0f07 	tst.w	r0, #7
                byte <<= 1;
 800300e:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
        for (uint8_t i = 0; i < w; i++) {
 8003012:	f100 0001 	add.w	r0, r0, #1
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003016:	bf0c      	ite	eq
 8003018:	f817 c002 	ldrbeq.w	ip, [r7, r2]
                byte <<= 1;
 800301c:	fa5f fc8c 	uxtbne.w	ip, ip
        for (uint8_t i = 0; i < w; i++) {
 8003020:	4283      	cmp	r3, r0
 8003022:	d1f0      	bne.n	8003006 <ssd1306_DrawBitmap+0xc2>
    for (uint8_t j = 0; j < h; j++, y++) {
 8003024:	3101      	adds	r1, #1
 8003026:	b2c9      	uxtb	r1, r1
 8003028:	4559      	cmp	r1, fp
 800302a:	4454      	add	r4, sl
 800302c:	d1a5      	bne.n	8002f7a <ssd1306_DrawBitmap+0x36>
}
 800302e:	b005      	add	sp, #20
 8003030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003034:	f001 0207 	and.w	r2, r1, #7
 8003038:	fa06 f202 	lsl.w	r2, r6, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800303c:	9f03      	ldr	r7, [sp, #12]
 800303e:	b2d5      	uxtb	r5, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003040:	ea4f 08d1 	mov.w	r8, r1, lsr #3
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003044:	e9cd 5101 	strd	r5, r1, [sp, #4]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003048:	ea4f 18c8 	mov.w	r8, r8, lsl #7
 800304c:	4648      	mov	r0, r9
 800304e:	2200      	movs	r2, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003050:	eb07 0e04 	add.w	lr, r7, r4
 8003054:	e002      	b.n	800305c <ssd1306_DrawBitmap+0x118>
        for (uint8_t i = 0; i < w; i++) {
 8003056:	4293      	cmp	r3, r2
 8003058:	b2e8      	uxtb	r0, r5
 800305a:	d01d      	beq.n	8003098 <ssd1306_DrawBitmap+0x154>
                byte <<= 1;
 800305c:	b2d5      	uxtb	r5, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800305e:	08ed      	lsrs	r5, r5, #3
            if (i & 7) {
 8003060:	0757      	lsls	r7, r2, #29
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003062:	bf0e      	itee	eq
 8003064:	f81e c005 	ldrbeq.w	ip, [lr, r5]
                byte <<= 1;
 8003068:	ea4f 0c4c 	movne.w	ip, ip, lsl #1
 800306c:	fa5f fc8c 	uxtbne.w	ip, ip
            if (byte & 0x80) {
 8003070:	f01c 0f80 	tst.w	ip, #128	@ 0x80
        for (uint8_t i = 0; i < w; i++) {
 8003074:	f100 0501 	add.w	r5, r0, #1
 8003078:	f102 0201 	add.w	r2, r2, #1
            if (byte & 0x80) {
 800307c:	d0eb      	beq.n	8003056 <ssd1306_DrawBitmap+0x112>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 800307e:	0601      	lsls	r1, r0, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003080:	eb00 0708 	add.w	r7, r0, r8
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8003084:	d4e7      	bmi.n	8003056 <ssd1306_DrawBitmap+0x112>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003086:	4809      	ldr	r0, [pc, #36]	@ (80030ac <ssd1306_DrawBitmap+0x168>)
 8003088:	9901      	ldr	r1, [sp, #4]
 800308a:	5dc0      	ldrb	r0, [r0, r7]
 800308c:	4308      	orrs	r0, r1
 800308e:	4907      	ldr	r1, [pc, #28]	@ (80030ac <ssd1306_DrawBitmap+0x168>)
        for (uint8_t i = 0; i < w; i++) {
 8003090:	4293      	cmp	r3, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003092:	55c8      	strb	r0, [r1, r7]
        for (uint8_t i = 0; i < w; i++) {
 8003094:	b2e8      	uxtb	r0, r5
 8003096:	d1e1      	bne.n	800305c <ssd1306_DrawBitmap+0x118>
 8003098:	9902      	ldr	r1, [sp, #8]
    for (uint8_t j = 0; j < h; j++, y++) {
 800309a:	3101      	adds	r1, #1
 800309c:	b2c9      	uxtb	r1, r1
 800309e:	458b      	cmp	fp, r1
 80030a0:	4454      	add	r4, sl
 80030a2:	d0c4      	beq.n	800302e <ssd1306_DrawBitmap+0xea>
        for (uint8_t i = 0; i < w; i++) {
 80030a4:	2940      	cmp	r1, #64	@ 0x40
 80030a6:	d1c5      	bne.n	8003034 <ssd1306_DrawBitmap+0xf0>
 80030a8:	9d03      	ldr	r5, [sp, #12]
 80030aa:	e7aa      	b.n	8003002 <ssd1306_DrawBitmap+0xbe>
 80030ac:	20001138 	.word	0x20001138

080030b0 <batterygauge>:



}

void batterygauge(float vbat,int x, int y,int currentsquare){
 80030b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030b4:	b2cc      	uxtb	r4, r1
 80030b6:	b2c5      	uxtb	r5, r0
 80030b8:	1c66      	adds	r6, r4, #1
 80030ba:	1d67      	adds	r7, r4, #5
 80030bc:	f105 010f 	add.w	r1, r5, #15
 80030c0:	b2c9      	uxtb	r1, r1
 80030c2:	b2f6      	uxtb	r6, r6
 80030c4:	b2ff      	uxtb	r7, r7
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030c6:	b081      	sub	sp, #4
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030c8:	463b      	mov	r3, r7
 80030ca:	4608      	mov	r0, r1
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030cc:	4691      	mov	r9, r2
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030ce:	460a      	mov	r2, r1
 80030d0:	4631      	mov	r1, r6
 80030d2:	f7ff fb8b 	bl	80027ec <ssd1306_Line.constprop.0>
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030d6:	f105 0210 	add.w	r2, r5, #16
 80030da:	463b      	mov	r3, r7
 80030dc:	b2d2      	uxtb	r2, r2
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030de:	f105 070e 	add.w	r7, r5, #14
 80030e2:	b2ff      	uxtb	r7, r7
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030e4:	4631      	mov	r1, r6
 80030e6:	4610      	mov	r0, r2
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030e8:	1da6      	adds	r6, r4, #6
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030ea:	f7ff fb7f 	bl	80027ec <ssd1306_Line.constprop.0>
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030ee:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 80030f0:	463a      	mov	r2, r7
 80030f2:	4623      	mov	r3, r4
 80030f4:	4621      	mov	r1, r4
 80030f6:	4628      	mov	r0, r5
 80030f8:	f7ff fb78 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80030fc:	4633      	mov	r3, r6
 80030fe:	4621      	mov	r1, r4
 8003100:	4638      	mov	r0, r7
 8003102:	f7ff fb73 	bl	80027ec <ssd1306_Line.constprop.0>
void batterygauge(float vbat,int x, int y,int currentsquare){
 8003106:	ee10 8a10 	vmov	r8, s0
    ssd1306_Line(x2,y2,x1,y2,color);
 800310a:	462a      	mov	r2, r5
 800310c:	4633      	mov	r3, r6
 800310e:	4631      	mov	r1, r6
 8003110:	4638      	mov	r0, r7
 8003112:	f7ff fb6b 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003116:	4623      	mov	r3, r4
 8003118:	4631      	mov	r1, r6
 800311a:	4628      	mov	r0, r5
 800311c:	f7ff fb66 	bl	80027ec <ssd1306_Line.constprop.0>
	if(vbat<=3.7){
 8003120:	4640      	mov	r0, r8
 8003122:	f7fd f9e9 	bl	80004f8 <__aeabi_f2d>
		else{

		}
	}
	if(vbat>3.7 && vbat<= 3.9){
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
 8003126:	f104 0a02 	add.w	sl, r4, #2
 800312a:	f105 0802 	add.w	r8, r5, #2
 800312e:	3404      	adds	r4, #4
 8003130:	f105 0b03 	add.w	fp, r5, #3
	if(vbat<=3.7){
 8003134:	a384      	add	r3, pc, #528	@ (adr r3, 8003348 <batterygauge+0x298>)
 8003136:	e9d3 2300 	ldrd	r2, r3, [r3]
 800313a:	4606      	mov	r6, r0
 800313c:	460f      	mov	r7, r1
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
 800313e:	fa5f f888 	uxtb.w	r8, r8
 8003142:	fa5f fa8a 	uxtb.w	sl, sl
 8003146:	b2e4      	uxtb	r4, r4
 8003148:	fa5f fb8b 	uxtb.w	fp, fp
	if(vbat<=3.7){
 800314c:	f7fd fca8 	bl	8000aa0 <__aeabi_dcmple>
 8003150:	2800      	cmp	r0, #0
 8003152:	d166      	bne.n	8003222 <batterygauge+0x172>
	if(vbat>3.7 && vbat<= 3.9){
 8003154:	a37e      	add	r3, pc, #504	@ (adr r3, 8003350 <batterygauge+0x2a0>)
 8003156:	e9d3 2300 	ldrd	r2, r3, [r3]
 800315a:	4630      	mov	r0, r6
 800315c:	4639      	mov	r1, r7
 800315e:	f7fd fc9f 	bl	8000aa0 <__aeabi_dcmple>
 8003162:	2800      	cmp	r0, #0
 8003164:	f040 808f 	bne.w	8003286 <batterygauge+0x1d6>
				else{

				}

	}
	if(vbat>3.9 && vbat<=4.1){
 8003168:	a37b      	add	r3, pc, #492	@ (adr r3, 8003358 <batterygauge+0x2a8>)
 800316a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800316e:	4639      	mov	r1, r7
 8003170:	4630      	mov	r0, r6
 8003172:	f7fd fc95 	bl	8000aa0 <__aeabi_dcmple>
			ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
 8003176:	1d6f      	adds	r7, r5, #5
 8003178:	1dae      	adds	r6, r5, #6
 800317a:	b2ff      	uxtb	r7, r7
 800317c:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 800317e:	4653      	mov	r3, sl
 8003180:	465a      	mov	r2, fp
 8003182:	4651      	mov	r1, sl
	if(vbat>3.9 && vbat<=4.1){
 8003184:	2800      	cmp	r0, #0
 8003186:	f040 809a 	bne.w	80032be <batterygauge+0x20e>
    ssd1306_Line(x1,y1,x2,y1,color);
 800318a:	4640      	mov	r0, r8
 800318c:	f7ff fb2e 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003190:	4623      	mov	r3, r4
 8003192:	4651      	mov	r1, sl
 8003194:	4658      	mov	r0, fp
 8003196:	f7ff fb29 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800319a:	4642      	mov	r2, r8
 800319c:	4623      	mov	r3, r4
 800319e:	4621      	mov	r1, r4
 80031a0:	4658      	mov	r0, fp
 80031a2:	f7ff fb23 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80031a6:	4653      	mov	r3, sl
 80031a8:	4621      	mov	r1, r4
 80031aa:	4640      	mov	r0, r8
 80031ac:	f7ff fb1e 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80031b0:	4632      	mov	r2, r6
 80031b2:	4638      	mov	r0, r7
 80031b4:	4653      	mov	r3, sl
 80031b6:	4651      	mov	r1, sl
 80031b8:	f7ff fb18 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80031bc:	4630      	mov	r0, r6
 80031be:	4623      	mov	r3, r4
 80031c0:	4651      	mov	r1, sl
 80031c2:	f7ff fb13 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80031c6:	463a      	mov	r2, r7
 80031c8:	4630      	mov	r0, r6
 80031ca:	4623      	mov	r3, r4
 80031cc:	4621      	mov	r1, r4
 80031ce:	f7ff fb0d 	bl	80027ec <ssd1306_Line.constprop.0>
	}

	if(vbat>4.1){
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
		ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
		ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 80031d2:	f105 0609 	add.w	r6, r5, #9
    ssd1306_Line(x1,y2,x1,y1,color);
 80031d6:	4638      	mov	r0, r7
		ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 80031d8:	f105 0708 	add.w	r7, r5, #8
 80031dc:	b2ff      	uxtb	r7, r7
 80031de:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y2,x1,y1,color);
 80031e0:	4653      	mov	r3, sl
 80031e2:	4621      	mov	r1, r4
 80031e4:	f7ff fb02 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80031e8:	4632      	mov	r2, r6
 80031ea:	4653      	mov	r3, sl
 80031ec:	4651      	mov	r1, sl
 80031ee:	4638      	mov	r0, r7
 80031f0:	f7ff fafc 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80031f4:	4623      	mov	r3, r4
 80031f6:	4651      	mov	r1, sl
 80031f8:	4630      	mov	r0, r6
 80031fa:	f7ff faf7 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80031fe:	4623      	mov	r3, r4
 8003200:	463a      	mov	r2, r7
 8003202:	4621      	mov	r1, r4
 8003204:	4630      	mov	r0, r6
 8003206:	f7ff faf1 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 800320a:	4653      	mov	r3, sl
 800320c:	4621      	mov	r1, r4
 800320e:	4638      	mov	r0, r7
 8003210:	f7ff faec 	bl	80027ec <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 8003214:	f1b9 0f01 	cmp.w	r9, #1
 8003218:	f000 8081 	beq.w	800331e <batterygauge+0x26e>
	}




}
 800321c:	b001      	add	sp, #4
 800321e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ssd1306_Line(x1,y1,x2,y1,color);
 8003222:	465a      	mov	r2, fp
 8003224:	4653      	mov	r3, sl
 8003226:	4651      	mov	r1, sl
 8003228:	4640      	mov	r0, r8
 800322a:	f7ff fadf 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 800322e:	4623      	mov	r3, r4
 8003230:	4651      	mov	r1, sl
 8003232:	4658      	mov	r0, fp
 8003234:	f7ff fada 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003238:	4623      	mov	r3, r4
 800323a:	4642      	mov	r2, r8
 800323c:	4621      	mov	r1, r4
 800323e:	4658      	mov	r0, fp
 8003240:	f7ff fad4 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003244:	4653      	mov	r3, sl
 8003246:	4621      	mov	r1, r4
 8003248:	4640      	mov	r0, r8
 800324a:	f7ff facf 	bl	80027ec <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 800324e:	f1b9 0f01 	cmp.w	r9, #1
 8003252:	d1e3      	bne.n	800321c <batterygauge+0x16c>
    ssd1306_Line(x1,y1,x2,y1,color);
 8003254:	465a      	mov	r2, fp
 8003256:	4653      	mov	r3, sl
 8003258:	4651      	mov	r1, sl
 800325a:	4640      	mov	r0, r8
 800325c:	f7ff fac6 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003260:	4623      	mov	r3, r4
 8003262:	4651      	mov	r1, sl
 8003264:	4658      	mov	r0, fp
 8003266:	f7ff fac1 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800326a:	4623      	mov	r3, r4
 800326c:	4642      	mov	r2, r8
 800326e:	4621      	mov	r1, r4
 8003270:	4658      	mov	r0, fp
 8003272:	f7ff fabb 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003276:	4653      	mov	r3, sl
 8003278:	4621      	mov	r1, r4
 800327a:	4610      	mov	r0, r2
}
 800327c:	b001      	add	sp, #4
 800327e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ssd1306_Line(x1,y2,x1,y1,color);
 8003282:	f7ff bab3 	b.w	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 8003286:	465a      	mov	r2, fp
 8003288:	4653      	mov	r3, sl
 800328a:	4651      	mov	r1, sl
 800328c:	4640      	mov	r0, r8
 800328e:	f7ff faad 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003292:	4623      	mov	r3, r4
 8003294:	4651      	mov	r1, sl
 8003296:	4658      	mov	r0, fp
 8003298:	f7ff faa8 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800329c:	4623      	mov	r3, r4
 800329e:	4642      	mov	r2, r8
 80032a0:	4621      	mov	r1, r4
 80032a2:	4658      	mov	r0, fp
 80032a4:	f7ff faa2 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032a8:	4653      	mov	r3, sl
 80032aa:	4621      	mov	r1, r4
 80032ac:	4640      	mov	r0, r8
 80032ae:	f7ff fa9d 	bl	80027ec <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 80032b2:	f1b9 0f01 	cmp.w	r9, #1
 80032b6:	d1b1      	bne.n	800321c <batterygauge+0x16c>
			ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
 80032b8:	1d6e      	adds	r6, r5, #5
 80032ba:	3506      	adds	r5, #6
 80032bc:	e032      	b.n	8003324 <batterygauge+0x274>
    ssd1306_Line(x1,y1,x2,y1,color);
 80032be:	4640      	mov	r0, r8
 80032c0:	f7ff fa94 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80032c4:	4623      	mov	r3, r4
 80032c6:	4651      	mov	r1, sl
 80032c8:	4658      	mov	r0, fp
 80032ca:	f7ff fa8f 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80032ce:	4642      	mov	r2, r8
 80032d0:	4623      	mov	r3, r4
 80032d2:	4621      	mov	r1, r4
 80032d4:	4658      	mov	r0, fp
 80032d6:	f7ff fa89 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032da:	4653      	mov	r3, sl
 80032dc:	4621      	mov	r1, r4
 80032de:	4640      	mov	r0, r8
 80032e0:	f7ff fa84 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80032e4:	4632      	mov	r2, r6
 80032e6:	4653      	mov	r3, sl
 80032e8:	4651      	mov	r1, sl
 80032ea:	4638      	mov	r0, r7
 80032ec:	f7ff fa7e 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80032f0:	4623      	mov	r3, r4
 80032f2:	4651      	mov	r1, sl
 80032f4:	4630      	mov	r0, r6
 80032f6:	f7ff fa79 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80032fa:	4623      	mov	r3, r4
 80032fc:	463a      	mov	r2, r7
 80032fe:	4621      	mov	r1, r4
 8003300:	4630      	mov	r0, r6
 8003302:	f7ff fa73 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003306:	4653      	mov	r3, sl
 8003308:	4621      	mov	r1, r4
 800330a:	4638      	mov	r0, r7
 800330c:	f7ff fa6e 	bl	80027ec <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 8003310:	f1b9 0f01 	cmp.w	r9, #1
 8003314:	d182      	bne.n	800321c <batterygauge+0x16c>
			ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 8003316:	f105 0608 	add.w	r6, r5, #8
 800331a:	3509      	adds	r5, #9
 800331c:	e002      	b.n	8003324 <batterygauge+0x274>
			ssd1306_DrawRectangle(x+11, y+2, x+12, y+4, White);
 800331e:	f105 060b 	add.w	r6, r5, #11
 8003322:	350c      	adds	r5, #12
 8003324:	b2ed      	uxtb	r5, r5
 8003326:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 8003328:	462a      	mov	r2, r5
 800332a:	4653      	mov	r3, sl
 800332c:	4651      	mov	r1, sl
 800332e:	4630      	mov	r0, r6
 8003330:	f7ff fa5c 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003334:	4623      	mov	r3, r4
 8003336:	4651      	mov	r1, sl
 8003338:	4628      	mov	r0, r5
 800333a:	f7ff fa57 	bl	80027ec <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800333e:	4623      	mov	r3, r4
 8003340:	4632      	mov	r2, r6
 8003342:	4621      	mov	r1, r4
 8003344:	4628      	mov	r0, r5
 8003346:	e794      	b.n	8003272 <batterygauge+0x1c2>
 8003348:	9999999a 	.word	0x9999999a
 800334c:	400d9999 	.word	0x400d9999
 8003350:	33333333 	.word	0x33333333
 8003354:	400f3333 	.word	0x400f3333
 8003358:	66666666 	.word	0x66666666
 800335c:	40106666 	.word	0x40106666

08003360 <percentage>:

void percentage(float percent){
 8003360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003364:	ee10 0a10 	vmov	r0, s0
 8003368:	b082      	sub	sp, #8
	ssd1306_FillRectangle(32, 40, floor(0.63*percent+32), 56, White);
 800336a:	f7fd f8c5 	bl	80004f8 <__aeabi_f2d>
 800336e:	a380      	add	r3, pc, #512	@ (adr r3, 8003570 <percentage+0x210>)
 8003370:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003374:	4604      	mov	r4, r0
 8003376:	460d      	mov	r5, r1
 8003378:	f7fd f916 	bl	80005a8 <__aeabi_dmul>
 800337c:	4b74      	ldr	r3, [pc, #464]	@ (8003550 <percentage+0x1f0>)
 800337e:	4e75      	ldr	r6, [pc, #468]	@ (8003554 <percentage+0x1f4>)
 8003380:	2200      	movs	r2, #0
 8003382:	f7fc ff5b 	bl	800023c <__adddf3>
 8003386:	ec41 0b10 	vmov	d0, r0, r1
 800338a:	f010 fd1d 	bl	8013dc8 <floor>
 800338e:	ec51 0b10 	vmov	r0, r1, d0
 8003392:	f7fd fbe1 	bl	8000b58 <__aeabi_d2uiz>
 8003396:	fa5f fc80 	uxtb.w	ip, r0
    uint8_t x_start = ((x1<=x2) ? x1 : x2);
 800339a:	4667      	mov	r7, ip
 800339c:	2f20      	cmp	r7, #32
 800339e:	bf28      	it	cs
 80033a0:	2720      	movcs	r7, #32
    uint8_t x_end   = ((x1<=x2) ? x2 : x1);
 80033a2:	f1bc 0f20 	cmp.w	ip, #32
 80033a6:	bf38      	it	cc
 80033a8:	f04f 0c20 	movcc.w	ip, #32
    for (uint8_t y= y_start; (y<= y_end)&&(y<SSD1306_HEIGHT); y++) {
 80033ac:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80033b0:	f107 3aff 	add.w	sl, r7, #4294967295
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033b4:	f04f 0901 	mov.w	r9, #1
 80033b8:	f04f 0880 	mov.w	r8, #128	@ 0x80
 80033bc:	f00e 0007 	and.w	r0, lr, #7
 80033c0:	ea4f 01de 	mov.w	r1, lr, lsr #3
 80033c4:	fa09 f000 	lsl.w	r0, r9, r0
 80033c8:	fb18 a101 	smlabb	r1, r8, r1, sl
 80033cc:	b2c0      	uxtb	r0, r0
 80033ce:	4431      	add	r1, r6
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033d0:	463b      	mov	r3, r7
 80033d2:	e001      	b.n	80033d8 <percentage+0x78>
 80033d4:	061a      	lsls	r2, r3, #24
 80033d6:	d407      	bmi.n	80033e8 <percentage+0x88>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033d8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033dc:	3301      	adds	r3, #1
 80033de:	b2db      	uxtb	r3, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033e0:	4302      	orrs	r2, r0
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033e2:	459c      	cmp	ip, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033e4:	700a      	strb	r2, [r1, #0]
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033e6:	d2f5      	bcs.n	80033d4 <percentage+0x74>
    for (uint8_t y= y_start; (y<= y_end)&&(y<SSD1306_HEIGHT); y++) {
 80033e8:	f10e 0e01 	add.w	lr, lr, #1
 80033ec:	fa5f fe8e 	uxtb.w	lr, lr
 80033f0:	f1be 0f39 	cmp.w	lr, #57	@ 0x39
 80033f4:	d1e2      	bne.n	80033bc <percentage+0x5c>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033f6:	f8d6 22a0 	ldr.w	r2, [r6, #672]	@ 0x2a0
 80033fa:	f8b6 32dc 	ldrh.w	r3, [r6, #732]	@ 0x2dc
 80033fe:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003402:	f8c6 22a0 	str.w	r2, [r6, #672]	@ 0x2a0
 8003406:	f8d6 22a4 	ldr.w	r2, [r6, #676]	@ 0x2a4
 800340a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800340e:	f8c6 22a4 	str.w	r2, [r6, #676]	@ 0x2a4
 8003412:	f8d6 22a8 	ldr.w	r2, [r6, #680]	@ 0x2a8
 8003416:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800341a:	f8c6 22a8 	str.w	r2, [r6, #680]	@ 0x2a8
 800341e:	f8d6 22ac 	ldr.w	r2, [r6, #684]	@ 0x2ac
 8003422:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003426:	f8c6 22ac 	str.w	r2, [r6, #684]	@ 0x2ac
 800342a:	f8d6 22b0 	ldr.w	r2, [r6, #688]	@ 0x2b0
 800342e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003432:	f8c6 22b0 	str.w	r2, [r6, #688]	@ 0x2b0
 8003436:	f8d6 22b4 	ldr.w	r2, [r6, #692]	@ 0x2b4
 800343a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800343e:	f8c6 22b4 	str.w	r2, [r6, #692]	@ 0x2b4
 8003442:	f8d6 22b8 	ldr.w	r2, [r6, #696]	@ 0x2b8
 8003446:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800344a:	f8c6 22b8 	str.w	r2, [r6, #696]	@ 0x2b8
 800344e:	f8d6 22bc 	ldr.w	r2, [r6, #700]	@ 0x2bc
 8003452:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003456:	f8c6 22bc 	str.w	r2, [r6, #700]	@ 0x2bc
 800345a:	f8d6 22c0 	ldr.w	r2, [r6, #704]	@ 0x2c0
 800345e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003462:	f8c6 22c0 	str.w	r2, [r6, #704]	@ 0x2c0
 8003466:	f8d6 22c4 	ldr.w	r2, [r6, #708]	@ 0x2c4
 800346a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800346e:	f8c6 22c4 	str.w	r2, [r6, #708]	@ 0x2c4
 8003472:	f8d6 22c8 	ldr.w	r2, [r6, #712]	@ 0x2c8
 8003476:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800347a:	f8c6 22c8 	str.w	r2, [r6, #712]	@ 0x2c8
 800347e:	f8d6 22cc 	ldr.w	r2, [r6, #716]	@ 0x2cc
 8003482:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003486:	f8c6 22cc 	str.w	r2, [r6, #716]	@ 0x2cc
 800348a:	f8d6 22d0 	ldr.w	r2, [r6, #720]	@ 0x2d0
 800348e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003492:	f8c6 22d0 	str.w	r2, [r6, #720]	@ 0x2d0
 8003496:	f8d6 22d4 	ldr.w	r2, [r6, #724]	@ 0x2d4
 800349a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800349e:	f8c6 22d4 	str.w	r2, [r6, #724]	@ 0x2d4
 80034a2:	f8d6 22d8 	ldr.w	r2, [r6, #728]	@ 0x2d8
 80034a6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80034aa:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80034ae:	f043 0301 	orr.w	r3, r3, #1
 80034b2:	f8c6 22d8 	str.w	r2, [r6, #728]	@ 0x2d8
 80034b6:	f896 22de 	ldrb.w	r2, [r6, #734]	@ 0x2de
 80034ba:	f8a6 32dc 	strh.w	r3, [r6, #732]	@ 0x2dc
 80034be:	f896 33df 	ldrb.w	r3, [r6, #991]	@ 0x3df
 80034c2:	f042 0201 	orr.w	r2, r2, #1
 80034c6:	f043 0301 	orr.w	r3, r3, #1
 80034ca:	f886 22de 	strb.w	r2, [r6, #734]	@ 0x2de
 80034ce:	f896 23a0 	ldrb.w	r2, [r6, #928]	@ 0x3a0
 80034d2:	f886 33df 	strb.w	r3, [r6, #991]	@ 0x3df
 80034d6:	4b20      	ldr	r3, [pc, #128]	@ (8003558 <percentage+0x1f8>)
 80034d8:	21ff      	movs	r1, #255	@ 0xff
 80034da:	f042 0201 	orr.w	r2, r2, #1
 80034de:	f886 12df 	strb.w	r1, [r6, #735]	@ 0x2df
 80034e2:	f886 135f 	strb.w	r1, [r6, #863]	@ 0x35f
 80034e6:	f886 23a0 	strb.w	r2, [r6, #928]	@ 0x3a0
 80034ea:	f1a3 013f 	sub.w	r1, r3, #63	@ 0x3f
 80034ee:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80034f2:	f042 0201 	orr.w	r2, r2, #1
    while((x1 != x2) || (y1 != y2)) {
 80034f6:	4299      	cmp	r1, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80034f8:	701a      	strb	r2, [r3, #0]
    while((x1 != x2) || (y1 != y2)) {
 80034fa:	d1f8      	bne.n	80034ee <percentage+0x18e>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80034fc:	f896 33a0 	ldrb.w	r3, [r6, #928]	@ 0x3a0
	ssd1306_DrawRectangle(32, 40, 95, 56, White);
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 8003500:	4f16      	ldr	r7, [pc, #88]	@ (800355c <percentage+0x1fc>)
 8003502:	4a17      	ldr	r2, [pc, #92]	@ (8003560 <percentage+0x200>)
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003504:	21ff      	movs	r1, #255	@ 0xff
 8003506:	f043 0301 	orr.w	r3, r3, #1
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 800350a:	e9cd 4500 	strd	r4, r5, [sp]
 800350e:	4638      	mov	r0, r7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003510:	f886 33a0 	strb.w	r3, [r6, #928]	@ 0x3a0
 8003514:	f886 1320 	strb.w	r1, [r6, #800]	@ 0x320
 8003518:	f886 12a0 	strb.w	r1, [r6, #672]	@ 0x2a0
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 800351c:	2114      	movs	r1, #20
 800351e:	f00c ff07 	bl	8010330 <sniprintf>
    SSD1306.CurrentX = x;
 8003522:	4a10      	ldr	r2, [pc, #64]	@ (8003564 <percentage+0x204>)
 8003524:	4810      	ldr	r0, [pc, #64]	@ (8003568 <percentage+0x208>)
 8003526:	4b11      	ldr	r3, [pc, #68]	@ (800356c <percentage+0x20c>)
 8003528:	6010      	str	r0, [r2, #0]
    while (*str) {
 800352a:	7838      	ldrb	r0, [r7, #0]
 800352c:	7819      	ldrb	r1, [r3, #0]
 800352e:	785d      	ldrb	r5, [r3, #1]
 8003530:	685e      	ldr	r6, [r3, #4]
 8003532:	b918      	cbnz	r0, 800353c <percentage+0x1dc>
 8003534:	e009      	b.n	800354a <percentage+0x1ea>
 8003536:	f817 0f01 	ldrb.w	r0, [r7, #1]!
 800353a:	b130      	cbz	r0, 800354a <percentage+0x1ea>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 800353c:	4633      	mov	r3, r6
 800353e:	462a      	mov	r2, r5
 8003540:	f7ff f9be 	bl	80028c0 <ssd1306_WriteChar.constprop.0.isra.0>
 8003544:	783b      	ldrb	r3, [r7, #0]
 8003546:	4283      	cmp	r3, r0
 8003548:	d0f5      	beq.n	8003536 <percentage+0x1d6>
	ssd1306_SetCursor(45,44);
	ssd1306_WriteString((char  *)bufferscreen,Font_6x8,White);


}
 800354a:	b002      	add	sp, #8
 800354c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003550:	40400000 	.word	0x40400000
 8003554:	20001138 	.word	0x20001138
 8003558:	20001518 	.word	0x20001518
 800355c:	20000680 	.word	0x20000680
 8003560:	08016018 	.word	0x08016018
 8003564:	20001130 	.word	0x20001130
 8003568:	002c002d 	.word	0x002c002d
 800356c:	2000002c 	.word	0x2000002c
 8003570:	c28f5c29 	.word	0xc28f5c29
 8003574:	3fe428f5 	.word	0x3fe428f5

08003578 <statemachine>:
int flag_50kmh=0;
int flag_100kmh=0;
float time50kmh=0.0;
float time100kmh=0.0;

void statemachine(void){
 8003578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800357c:	ed2d 8b04 	vpush	{d8-d9}
	switch(state){
 8003580:	4caf      	ldr	r4, [pc, #700]	@ (8003840 <statemachine+0x2c8>)
 8003582:	7823      	ldrb	r3, [r4, #0]
void statemachine(void){
 8003584:	b085      	sub	sp, #20
	switch(state){
 8003586:	2b05      	cmp	r3, #5
 8003588:	d87d      	bhi.n	8003686 <statemachine+0x10e>
 800358a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800358e:	009a      	.short	0x009a
 8003590:	019900ef 	.word	0x019900ef
 8003594:	01a90006 	.word	0x01a90006
 8003598:	0081      	.short	0x0081
									 									 									  			 	BTN_A_LONG=0;
									 									 									  	}
			  break;
		  case STATE_CHRONOMETER:

			  ssd1306_Fill(Black);
 800359a:	2000      	movs	r0, #0
 800359c:	f7ff fa08 	bl	80029b0 <ssd1306_Fill>
			  ssd1306_SetCursor(32, 32);
 80035a0:	2120      	movs	r1, #32
 80035a2:	4608      	mov	r0, r1
 80035a4:	f7ff fcc8 	bl	8002f38 <ssd1306_SetCursor>
			  ssd1306_WriteString("chrono", Font_6x8, White);
 80035a8:	4ba6      	ldr	r3, [pc, #664]	@ (8003844 <statemachine+0x2cc>)
 80035aa:	48a7      	ldr	r0, [pc, #668]	@ (8003848 <statemachine+0x2d0>)
 80035ac:	e893 0006 	ldmia.w	r3, {r1, r2}
 80035b0:	2301      	movs	r3, #1
 80035b2:	f7ff fca5 	bl	8002f00 <ssd1306_WriteString>
			  ssd1306_SetCursor(32,40);
 80035b6:	2128      	movs	r1, #40	@ 0x28
 80035b8:	2020      	movs	r0, #32
 80035ba:	f7ff fcbd 	bl	8002f38 <ssd1306_SetCursor>

			  switch(chronostate){
 80035be:	49a3      	ldr	r1, [pc, #652]	@ (800384c <statemachine+0x2d4>)
 80035c0:	780a      	ldrb	r2, [r1, #0]
 80035c2:	2a01      	cmp	r2, #1
 80035c4:	f000 870f 	beq.w	80043e6 <statemachine+0xe6e>
 80035c8:	2a02      	cmp	r2, #2
 80035ca:	f000 86b0 	beq.w	800432e <statemachine+0xdb6>
 80035ce:	2a00      	cmp	r2, #0
 80035d0:	f040 8194 	bne.w	80038fc <statemachine+0x384>
			  case STATE_RESET:
				  min=0;
 80035d4:	4b9e      	ldr	r3, [pc, #632]	@ (8003850 <statemachine+0x2d8>)
				  seconde=0;
 80035d6:	4e9f      	ldr	r6, [pc, #636]	@ (8003854 <statemachine+0x2dc>)
				  calctime=0;

				  	 if(BTN_B>=1){
 80035d8:	4d9f      	ldr	r5, [pc, #636]	@ (8003858 <statemachine+0x2e0>)
				  min=0;
 80035da:	2000      	movs	r0, #0
 80035dc:	6018      	str	r0, [r3, #0]
				  seconde=0;
 80035de:	6030      	str	r0, [r6, #0]
				  calctime=0;
 80035e0:	489e      	ldr	r0, [pc, #632]	@ (800385c <statemachine+0x2e4>)
 80035e2:	6002      	str	r2, [r0, #0]
				  	 if(BTN_B>=1){
 80035e4:	6828      	ldr	r0, [r5, #0]
 80035e6:	2800      	cmp	r0, #0
 80035e8:	dd06      	ble.n	80035f8 <statemachine+0x80>
				  		chronostate++;
				  		BTN_B=0;
 80035ea:	602a      	str	r2, [r5, #0]
				  		starttime=uwTick;
 80035ec:	4a9c      	ldr	r2, [pc, #624]	@ (8003860 <statemachine+0x2e8>)
 80035ee:	6810      	ldr	r0, [r2, #0]
 80035f0:	4a9c      	ldr	r2, [pc, #624]	@ (8003864 <statemachine+0x2ec>)
 80035f2:	6010      	str	r0, [r2, #0]
				  		chronostate++;
 80035f4:	2201      	movs	r2, #1
 80035f6:	700a      	strb	r2, [r1, #0]
				  timehandler=calctime;

				  if(BTN_B>=1){
				  			chronostate--;
				  			BTN_B=0;
				  			starttime=uwTick;
 80035f8:	ed9f 8a9b 	vldr	s16, [pc, #620]	@ 8003868 <statemachine+0x2f0>
 80035fc:	2000      	movs	r0, #0
 80035fe:	2100      	movs	r1, #0
 8003600:	eef0 8a48 	vmov.f32	s17, s16
			  }

			  min=floor((float) calctime/60000);
			  seconde=(float) ((calctime-(min*60000))/1000);
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003604:	4d99      	ldr	r5, [pc, #612]	@ (800386c <statemachine+0x2f4>)
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003606:	4a9a      	ldr	r2, [pc, #616]	@ (8003870 <statemachine+0x2f8>)
 8003608:	e9cd 0100 	strd	r0, r1, [sp]
 800360c:	210f      	movs	r1, #15
			  min=floor((float) calctime/60000);
 800360e:	edc3 8a00 	vstr	s17, [r3]
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003612:	4898      	ldr	r0, [pc, #608]	@ (8003874 <statemachine+0x2fc>)
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003614:	ed86 8a00 	vstr	s16, [r6]
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003618:	f00c fe8a 	bl	8010330 <sniprintf>
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 800361c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003620:	2301      	movs	r3, #1
 8003622:	4894      	ldr	r0, [pc, #592]	@ (8003874 <statemachine+0x2fc>)
 8003624:	f7ff fc6c 	bl	8002f00 <ssd1306_WriteString>
			  ssd1306_SetCursor(32, 50);
 8003628:	2132      	movs	r1, #50	@ 0x32
 800362a:	2020      	movs	r0, #32
 800362c:	f7ff fc84 	bl	8002f38 <ssd1306_SetCursor>
			  snprintf((char *)bufferscreen,15, "%0.3fs",seconde);
 8003630:	6830      	ldr	r0, [r6, #0]
 8003632:	f7fc ff61 	bl	80004f8 <__aeabi_f2d>
 8003636:	4a90      	ldr	r2, [pc, #576]	@ (8003878 <statemachine+0x300>)
 8003638:	e9cd 0100 	strd	r0, r1, [sp]
 800363c:	210f      	movs	r1, #15
 800363e:	488d      	ldr	r0, [pc, #564]	@ (8003874 <statemachine+0x2fc>)
 8003640:	f00c fe76 	bl	8010330 <sniprintf>
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003644:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003648:	488a      	ldr	r0, [pc, #552]	@ (8003874 <statemachine+0x2fc>)
 800364a:	2301      	movs	r3, #1
 800364c:	f7ff fc58 	bl	8002f00 <ssd1306_WriteString>


			  if(BTN_A>=1){
 8003650:	f8df b244 	ldr.w	fp, [pc, #580]	@ 8003898 <statemachine+0x320>
 8003654:	f8db 2000 	ldr.w	r2, [fp]
 8003658:	2a00      	cmp	r2, #0
 800365a:	dd07      	ble.n	800366c <statemachine+0xf4>
			 	state++;
 800365c:	7822      	ldrb	r2, [r4, #0]
			 	BTN_A=0;
			 	BTN_B=0;
 800365e:	487e      	ldr	r0, [pc, #504]	@ (8003858 <statemachine+0x2e0>)
			 	BTN_A=0;
 8003660:	2100      	movs	r1, #0
			 	state++;
 8003662:	3201      	adds	r2, #1
 8003664:	7022      	strb	r2, [r4, #0]
			 	BTN_A=0;
 8003666:	f8cb 1000 	str.w	r1, [fp]
			 	BTN_B=0;
 800366a:	6001      	str	r1, [r0, #0]
						  	state--;
						  	BTN_A=0;
						  	BTN_B=0;
						  }

		 					if(BTN_A_LONG>=1){
 800366c:	4a83      	ldr	r2, [pc, #524]	@ (800387c <statemachine+0x304>)
 800366e:	6811      	ldr	r1, [r2, #0]
 8003670:	2900      	cmp	r1, #0
 8003672:	dd08      	ble.n	8003686 <statemachine+0x10e>
			 								state--;
 8003674:	7820      	ldrb	r0, [r4, #0]
			 								BTN_A=0;
			 								BTN_B=0;
 8003676:	4d78      	ldr	r5, [pc, #480]	@ (8003858 <statemachine+0x2e0>)
			 								BTN_A=0;
 8003678:	2100      	movs	r1, #0
			 								state--;
 800367a:	1e43      	subs	r3, r0, #1
			 								BTN_A=0;
 800367c:	f8cb 1000 	str.w	r1, [fp]
			 								state--;
 8003680:	7023      	strb	r3, [r4, #0]
			 								BTN_B=0;
 8003682:	6029      	str	r1, [r5, #0]
			 								BTN_A_LONG=0;
 8003684:	6011      	str	r1, [r2, #0]

					  break;

	}
return ;
}
 8003686:	b005      	add	sp, #20
 8003688:	ecbd 8b04 	vpop	{d8-d9}
 800368c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					  ssd1306_Fill(Black);
 8003690:	2000      	movs	r0, #0
 8003692:	f7ff f98d 	bl	80029b0 <ssd1306_Fill>
					  ssd1306_WriteString("0-100",Font_6x8,White);
 8003696:	4d6b      	ldr	r5, [pc, #428]	@ (8003844 <statemachine+0x2cc>)
					  switch(accelstate){
 8003698:	4f79      	ldr	r7, [pc, #484]	@ (8003880 <statemachine+0x308>)
					  ssd1306_SetCursor(32,32);
 800369a:	2120      	movs	r1, #32
 800369c:	4608      	mov	r0, r1
 800369e:	f7ff fc4b 	bl	8002f38 <ssd1306_SetCursor>
					  ssd1306_WriteString("0-100",Font_6x8,White);
 80036a2:	2301      	movs	r3, #1
 80036a4:	e895 0006 	ldmia.w	r5, {r1, r2}
 80036a8:	4876      	ldr	r0, [pc, #472]	@ (8003884 <statemachine+0x30c>)
 80036aa:	f7ff fc29 	bl	8002f00 <ssd1306_WriteString>
					  switch(accelstate){
 80036ae:	783b      	ldrb	r3, [r7, #0]
 80036b0:	2b04      	cmp	r3, #4
 80036b2:	d8e8      	bhi.n	8003686 <statemachine+0x10e>
 80036b4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80036b8:	033b0359 	.word	0x033b0359
 80036bc:	02dd037b 	.word	0x02dd037b
 80036c0:	0274      	.short	0x0274
				 if(GNSSData.fgSpeed>=vitmax){
 80036c2:	4f71      	ldr	r7, [pc, #452]	@ (8003888 <statemachine+0x310>)
 80036c4:	4e71      	ldr	r6, [pc, #452]	@ (800388c <statemachine+0x314>)
		ssd1306_Fill(Black);
 80036c6:	2000      	movs	r0, #0
 80036c8:	f7ff f972 	bl	80029b0 <ssd1306_Fill>
				 if(GNSSData.fgSpeed>=vitmax){
 80036cc:	ed96 8a30 	vldr	s16, [r6, #192]	@ 0xc0
 80036d0:	edd7 7a00 	vldr	s15, [r7]
 80036d4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80036d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
								 if (GNSSData.fgSpeed!=0){
 80036dc:	eeb5 8a40 	vcmp.f32	s16, #0.0
									 vitmax=GNSSData.fgSpeed;
 80036e0:	bfa8      	it	ge
 80036e2:	ed87 8a00 	vstrge	s16, [r7]
								 if (GNSSData.fgSpeed!=0){
 80036e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ea:	f000 8104 	beq.w	80038f6 <statemachine+0x37e>
									 pace=1000/(60*GNSSData.fgSpeed);
 80036ee:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8003890 <statemachine+0x318>
									 sec=(pace-floor(pace))*60;
 80036f2:	eec7 7a88 	vdiv.f32	s15, s15, s16
 80036f6:	ee17 0a90 	vmov	r0, s15
 80036fa:	f7fc fefd 	bl	80004f8 <__aeabi_f2d>
 80036fe:	ec41 0b19 	vmov	d9, r0, r1
 8003702:	eeb0 0a49 	vmov.f32	s0, s18
 8003706:	eef0 0a69 	vmov.f32	s1, s19
 800370a:	f010 fb5d 	bl	8013dc8 <floor>
 800370e:	ec51 0b19 	vmov	r0, r1, d9
 8003712:	ec53 2b10 	vmov	r2, r3, d0
 8003716:	f7fc fd8f 	bl	8000238 <__aeabi_dsub>
 800371a:	4b5e      	ldr	r3, [pc, #376]	@ (8003894 <statemachine+0x31c>)
 800371c:	2200      	movs	r2, #0
 800371e:	f7fc ff43 	bl	80005a8 <__aeabi_dmul>
 8003722:	f7fd fa39 	bl	8000b98 <__aeabi_d2f>
 8003726:	ee08 0a10 	vmov	s16, r0
				  switch(spdstate){
 800372a:	f8df 818c 	ldr.w	r8, [pc, #396]	@ 80038b8 <statemachine+0x340>
 800372e:	f898 5000 	ldrb.w	r5, [r8]
 8003732:	2d01      	cmp	r5, #1
 8003734:	f000 861c 	beq.w	8004370 <statemachine+0xdf8>
 8003738:	2d02      	cmp	r5, #2
 800373a:	f001 802d 	beq.w	8004798 <statemachine+0x1220>
 800373e:	2d00      	cmp	r5, #0
 8003740:	f000 810f 	beq.w	8003962 <statemachine+0x3ea>
				  					if(BTN_A>=1){
 8003744:	4b54      	ldr	r3, [pc, #336]	@ (8003898 <statemachine+0x320>)
 8003746:	681a      	ldr	r2, [r3, #0]
 8003748:	2a00      	cmp	r2, #0
 800374a:	dd06      	ble.n	800375a <statemachine+0x1e2>
				  									 					state++;
 800374c:	7822      	ldrb	r2, [r4, #0]
				  									 					BTN_B=0;
 800374e:	4842      	ldr	r0, [pc, #264]	@ (8003858 <statemachine+0x2e0>)
				  									 					BTN_A=0;
 8003750:	2100      	movs	r1, #0
 8003752:	6019      	str	r1, [r3, #0]
				  									 					state++;
 8003754:	1c53      	adds	r3, r2, #1
 8003756:	7023      	strb	r3, [r4, #0]
				  									 					BTN_B=0;
 8003758:	6001      	str	r1, [r0, #0]
				  									 	 if(BTN_B_LONG>=1){
 800375a:	4b50      	ldr	r3, [pc, #320]	@ (800389c <statemachine+0x324>)
 800375c:	681a      	ldr	r2, [r3, #0]
 800375e:	2a00      	cmp	r2, #0
 8003760:	dd91      	ble.n	8003686 <statemachine+0x10e>
				  									 					  							  vitmax=0;
 8003762:	2100      	movs	r1, #0
				  									 					  							BTN_B_LONG=0;
 8003764:	2200      	movs	r2, #0
				  									 					  							  vitmax=0;
 8003766:	6039      	str	r1, [r7, #0]
				  									 					  							BTN_B_LONG=0;
 8003768:	601a      	str	r2, [r3, #0]
 800376a:	e78c      	b.n	8003686 <statemachine+0x10e>
					  if(settimeen==0){
 800376c:	4f4c      	ldr	r7, [pc, #304]	@ (80038a0 <statemachine+0x328>)
					  ssd1306_Fill(Black);
 800376e:	2000      	movs	r0, #0
 8003770:	f7ff f91e 	bl	80029b0 <ssd1306_Fill>
					  if(settimeen==0){
 8003774:	683b      	ldr	r3, [r7, #0]
 8003776:	b92b      	cbnz	r3, 8003784 <statemachine+0x20c>
						  if(GNSSData.fixType>=1){
 8003778:	4e44      	ldr	r6, [pc, #272]	@ (800388c <statemachine+0x314>)
 800377a:	f896 3077 	ldrb.w	r3, [r6, #119]	@ 0x77
 800377e:	2b00      	cmp	r3, #0
 8003780:	f040 80e0 	bne.w	8003944 <statemachine+0x3cc>
					  switch(balisestate){
 8003784:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 80038bc <statemachine+0x344>
 8003788:	f898 5000 	ldrb.w	r5, [r8]
 800378c:	2d01      	cmp	r5, #1
 800378e:	f000 8649 	beq.w	8004424 <statemachine+0xeac>
 8003792:	2d02      	cmp	r5, #2
 8003794:	f000 8590 	beq.w	80042b8 <statemachine+0xd40>
 8003798:	2d00      	cmp	r5, #0
 800379a:	f47f af74 	bne.w	8003686 <statemachine+0x10e>
						  ssd1306_SetCursor(32,32);
 800379e:	2120      	movs	r1, #32
 80037a0:	4608      	mov	r0, r1
 80037a2:	f7ff fbc9 	bl	8002f38 <ssd1306_SetCursor>
						  ssd1306_WriteString("Tracker",Font_6x8,White);
 80037a6:	4b27      	ldr	r3, [pc, #156]	@ (8003844 <statemachine+0x2cc>)
 80037a8:	483e      	ldr	r0, [pc, #248]	@ (80038a4 <statemachine+0x32c>)
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80037aa:	4e30      	ldr	r6, [pc, #192]	@ (800386c <statemachine+0x2f4>)
						  ssd1306_WriteString("Tracker",Font_6x8,White);
 80037ac:	e893 0006 	ldmia.w	r3, {r1, r2}
 80037b0:	2301      	movs	r3, #1
 80037b2:	f7ff fba5 	bl	8002f00 <ssd1306_WriteString>
						  snprintf((char *)bufferscreen,50, "offset=%d",pageoffset);
 80037b6:	4b3c      	ldr	r3, [pc, #240]	@ (80038a8 <statemachine+0x330>)
 80037b8:	4a3c      	ldr	r2, [pc, #240]	@ (80038ac <statemachine+0x334>)
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	482d      	ldr	r0, [pc, #180]	@ (8003874 <statemachine+0x2fc>)
 80037be:	2132      	movs	r1, #50	@ 0x32
 80037c0:	f00c fdb6 	bl	8010330 <sniprintf>
						  ssd1306_SetCursor(32,42);
 80037c4:	212a      	movs	r1, #42	@ 0x2a
 80037c6:	2020      	movs	r0, #32
 80037c8:	f7ff fbb6 	bl	8002f38 <ssd1306_SetCursor>
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80037cc:	e896 0006 	ldmia.w	r6, {r1, r2}
 80037d0:	2301      	movs	r3, #1
 80037d2:	4828      	ldr	r0, [pc, #160]	@ (8003874 <statemachine+0x2fc>)
 80037d4:	f7ff fb94 	bl	8002f00 <ssd1306_WriteString>
						  snprintf((char *)bufferscreen,50, "page=%d",pagenumber);
 80037d8:	4b35      	ldr	r3, [pc, #212]	@ (80038b0 <statemachine+0x338>)
 80037da:	4a36      	ldr	r2, [pc, #216]	@ (80038b4 <statemachine+0x33c>)
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	4825      	ldr	r0, [pc, #148]	@ (8003874 <statemachine+0x2fc>)
 80037e0:	2132      	movs	r1, #50	@ 0x32
 80037e2:	f00c fda5 	bl	8010330 <sniprintf>
						  ssd1306_SetCursor(32,52);
 80037e6:	2134      	movs	r1, #52	@ 0x34
 80037e8:	2020      	movs	r0, #32
 80037ea:	f7ff fba5 	bl	8002f38 <ssd1306_SetCursor>
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80037ee:	e896 0006 	ldmia.w	r6, {r1, r2}
 80037f2:	2301      	movs	r3, #1
 80037f4:	481f      	ldr	r0, [pc, #124]	@ (8003874 <statemachine+0x2fc>)
 80037f6:	f7ff fb83 	bl	8002f00 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 80037fa:	4b28      	ldr	r3, [pc, #160]	@ (800389c <statemachine+0x324>)
 80037fc:	681a      	ldr	r2, [r3, #0]
 80037fe:	2a00      	cmp	r2, #0
 8003800:	f301 804d 	bgt.w	800489e <statemachine+0x1326>
 8003804:	f8df b090 	ldr.w	fp, [pc, #144]	@ 8003898 <statemachine+0x320>
						  if(BTN_A>=1){
 8003808:	f8db 2000 	ldr.w	r2, [fp]
 800380c:	2a00      	cmp	r2, #0
 800380e:	dd08      	ble.n	8003822 <statemachine+0x2aa>
						  				  			 	state++;
 8003810:	7821      	ldrb	r1, [r4, #0]
						  				  			 	BTN_B=0;
 8003812:	4811      	ldr	r0, [pc, #68]	@ (8003858 <statemachine+0x2e0>)
						  				  			 	BTN_A=0;
 8003814:	2200      	movs	r2, #0
						  				  			 	state++;
 8003816:	1c4b      	adds	r3, r1, #1
						  				  			 	BTN_A=0;
 8003818:	f8cb 2000 	str.w	r2, [fp]
						  				  			 	state++;
 800381c:	7023      	strb	r3, [r4, #0]
						  				  			 	BTN_B=0;
 800381e:	6002      	str	r2, [r0, #0]
						  				  			 	settimeen=0;
 8003820:	603a      	str	r2, [r7, #0]
						  if(BTN_A_LONG>=1){
 8003822:	4b16      	ldr	r3, [pc, #88]	@ (800387c <statemachine+0x304>)
 8003824:	681a      	ldr	r2, [r3, #0]
 8003826:	2a00      	cmp	r2, #0
 8003828:	f77f af2d 	ble.w	8003686 <statemachine+0x10e>
									  state--;
 800382c:	7821      	ldrb	r1, [r4, #0]
									BTN_B=0;
 800382e:	480a      	ldr	r0, [pc, #40]	@ (8003858 <statemachine+0x2e0>)
									BTN_A_LONG=0;
 8003830:	2200      	movs	r2, #0
 8003832:	601a      	str	r2, [r3, #0]
									  state--;
 8003834:	1e4b      	subs	r3, r1, #1
 8003836:	7023      	strb	r3, [r4, #0]
									BTN_B=0;
 8003838:	6002      	str	r2, [r0, #0]
									settimeen=0;
 800383a:	603a      	str	r2, [r7, #0]
 800383c:	e723      	b.n	8003686 <statemachine+0x10e>
 800383e:	bf00      	nop
 8003840:	20001070 	.word	0x20001070
 8003844:	2000002c 	.word	0x2000002c
 8003848:	080161c4 	.word	0x080161c4
 800384c:	2000106d 	.word	0x2000106d
 8003850:	20000634 	.word	0x20000634
 8003854:	20000638 	.word	0x20000638
 8003858:	20000ff4 	.word	0x20000ff4
 800385c:	2000062c 	.word	0x2000062c
 8003860:	20001804 	.word	0x20001804
 8003864:	20000630 	.word	0x20000630
 8003868:	00000000 	.word	0x00000000
 800386c:	20000024 	.word	0x20000024
 8003870:	080161cc 	.word	0x080161cc
 8003874:	20000680 	.word	0x20000680
 8003878:	080161d8 	.word	0x080161d8
 800387c:	200005e0 	.word	0x200005e0
 8003880:	2000106a 	.word	0x2000106a
 8003884:	0801622c 	.word	0x0801622c
 8003888:	2000063c 	.word	0x2000063c
 800388c:	20000510 	.word	0x20000510
 8003890:	41855556 	.word	0x41855556
 8003894:	404e0000 	.word	0x404e0000
 8003898:	20000ff8 	.word	0x20000ff8
 800389c:	200005e4 	.word	0x200005e4
 80038a0:	200005f8 	.word	0x200005f8
 80038a4:	08016064 	.word	0x08016064
 80038a8:	200006bc 	.word	0x200006bc
 80038ac:	0801606c 	.word	0x0801606c
 80038b0:	200006b8 	.word	0x200006b8
 80038b4:	08016078 	.word	0x08016078
 80038b8:	2000106f 	.word	0x2000106f
 80038bc:	2000106b 	.word	0x2000106b
			  switch(posstate){
 80038c0:	4d9b      	ldr	r5, [pc, #620]	@ (8003b30 <statemachine+0x5b8>)
			  ssd1306_Fill(Black);
 80038c2:	2000      	movs	r0, #0
 80038c4:	f7ff f874 	bl	80029b0 <ssd1306_Fill>
			  switch(posstate){
 80038c8:	782b      	ldrb	r3, [r5, #0]
 80038ca:	2b05      	cmp	r3, #5
 80038cc:	f63f aec0 	bhi.w	8003650 <statemachine+0xd8>
 80038d0:	e8df f013 	tbh	[pc, r3, lsl #1]
 80038d4:	04af03ce 	.word	0x04af03ce
 80038d8:	037c0464 	.word	0x037c0464
 80038dc:	02c8031a 	.word	0x02c8031a
				  switch(usbstate){
 80038e0:	4e94      	ldr	r6, [pc, #592]	@ (8003b34 <statemachine+0x5bc>)
 80038e2:	7833      	ldrb	r3, [r6, #0]
 80038e4:	2b03      	cmp	r3, #3
 80038e6:	f63f aece 	bhi.w	8003686 <statemachine+0x10e>
 80038ea:	e8df f013 	tbh	[pc, r3, lsl #1]
 80038ee:	0074      	.short	0x0074
 80038f0:	00cb00db 	.word	0x00cb00db
 80038f4:	00aa      	.short	0x00aa
 80038f6:	ed9f 9b8a 	vldr	d9, [pc, #552]	@ 8003b20 <statemachine+0x5a8>
 80038fa:	e716      	b.n	800372a <statemachine+0x1b2>
				  timehandler=calctime;
 80038fc:	4b8e      	ldr	r3, [pc, #568]	@ (8003b38 <statemachine+0x5c0>)
			  min=floor((float) calctime/60000);
 80038fe:	eddf 7a8f 	vldr	s15, [pc, #572]	@ 8003b3c <statemachine+0x5c4>
 8003902:	ed93 8a00 	vldr	s16, [r3]
 8003906:	eeb8 8a48 	vcvt.f32.u32	s16, s16
 800390a:	ee68 7a27 	vmul.f32	s15, s16, s15
 800390e:	ee17 0a90 	vmov	r0, s15
 8003912:	f7fc fdf1 	bl	80004f8 <__aeabi_f2d>
 8003916:	ec41 0b10 	vmov	d0, r0, r1
 800391a:	f010 fa55 	bl	8013dc8 <floor>
 800391e:	ec51 0b10 	vmov	r0, r1, d0
 8003922:	f7fd f939 	bl	8000b98 <__aeabi_d2f>
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003926:	ed9f 7a86 	vldr	s14, [pc, #536]	@ 8003b40 <statemachine+0x5c8>
 800392a:	eddf 7a86 	vldr	s15, [pc, #536]	@ 8003b44 <statemachine+0x5cc>
 800392e:	4e86      	ldr	r6, [pc, #536]	@ (8003b48 <statemachine+0x5d0>)
			  min=floor((float) calctime/60000);
 8003930:	ee08 0a90 	vmov	s17, r0
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003934:	eea8 8ac7 	vfms.f32	s16, s17, s14
 8003938:	ee28 8a27 	vmul.f32	s16, s16, s15
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 800393c:	f7fc fddc 	bl	80004f8 <__aeabi_f2d>
 8003940:	4b82      	ldr	r3, [pc, #520]	@ (8003b4c <statemachine+0x5d4>)
 8003942:	e65f      	b.n	8003604 <statemachine+0x8c>
							HR=GNSSData.hour;
 8003944:	4b82      	ldr	r3, [pc, #520]	@ (8003b50 <statemachine+0x5d8>)
 8003946:	f896 2074 	ldrb.w	r2, [r6, #116]	@ 0x74
 800394a:	701a      	strb	r2, [r3, #0]
							settimeen=1;
 800394c:	2101      	movs	r1, #1
							MINUTE=GNSSData.min;
 800394e:	4b81      	ldr	r3, [pc, #516]	@ (8003b54 <statemachine+0x5dc>)
							settimeen=1;
 8003950:	6039      	str	r1, [r7, #0]
							MINUTE=GNSSData.min;
 8003952:	f896 1075 	ldrb.w	r1, [r6, #117]	@ 0x75
 8003956:	7019      	strb	r1, [r3, #0]
							SEC=GNSSData.sec;
 8003958:	4b7f      	ldr	r3, [pc, #508]	@ (8003b58 <statemachine+0x5e0>)
 800395a:	f896 2076 	ldrb.w	r2, [r6, #118]	@ 0x76
 800395e:	701a      	strb	r2, [r3, #0]
 8003960:	e710      	b.n	8003784 <statemachine+0x20c>
						ssd1306_SetCursor(32, 32);
 8003962:	2120      	movs	r1, #32
 8003964:	4608      	mov	r0, r1
 8003966:	f7ff fae7 	bl	8002f38 <ssd1306_SetCursor>
						snprintf((char *)bufferscreen,15, "%0.1f",(GNSSData.fgSpeed)*3.6);
 800396a:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 800396e:	f7fc fdc3 	bl	80004f8 <__aeabi_f2d>
 8003972:	a36d      	add	r3, pc, #436	@ (adr r3, 8003b28 <statemachine+0x5b0>)
 8003974:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003978:	f7fc fe16 	bl	80005a8 <__aeabi_dmul>
 800397c:	4a77      	ldr	r2, [pc, #476]	@ (8003b5c <statemachine+0x5e4>)
 800397e:	e9cd 0100 	strd	r0, r1, [sp]
 8003982:	210f      	movs	r1, #15
 8003984:	4876      	ldr	r0, [pc, #472]	@ (8003b60 <statemachine+0x5e8>)
 8003986:	f00c fcd3 	bl	8010330 <sniprintf>
						ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 800398a:	4b76      	ldr	r3, [pc, #472]	@ (8003b64 <statemachine+0x5ec>)
 800398c:	4874      	ldr	r0, [pc, #464]	@ (8003b60 <statemachine+0x5e8>)
 800398e:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003992:	2301      	movs	r3, #1
 8003994:	f7ff fab4 	bl	8002f00 <ssd1306_WriteString>
						ssd1306_SetCursor(32, 56);
 8003998:	2138      	movs	r1, #56	@ 0x38
 800399a:	2020      	movs	r0, #32
 800399c:	f7ff facc 	bl	8002f38 <ssd1306_SetCursor>
						ssd1306_WriteString("Vit(kmh)", Font_6x8, White);
 80039a0:	4b71      	ldr	r3, [pc, #452]	@ (8003b68 <statemachine+0x5f0>)
 80039a2:	4872      	ldr	r0, [pc, #456]	@ (8003b6c <statemachine+0x5f4>)
 80039a4:	e893 0006 	ldmia.w	r3, {r1, r2}
 80039a8:	2301      	movs	r3, #1
 80039aa:	f7ff faa9 	bl	8002f00 <ssd1306_WriteString>
						batterygauge(vbat,79, 57,1);
 80039ae:	4b70      	ldr	r3, [pc, #448]	@ (8003b70 <statemachine+0x5f8>)
 80039b0:	2201      	movs	r2, #1
 80039b2:	ed93 0a00 	vldr	s0, [r3]
 80039b6:	2139      	movs	r1, #57	@ 0x39
 80039b8:	204f      	movs	r0, #79	@ 0x4f
 80039ba:	f7ff fb79 	bl	80030b0 <batterygauge>
					 if(BTN_B>=1){
 80039be:	4b6d      	ldr	r3, [pc, #436]	@ (8003b74 <statemachine+0x5fc>)
 80039c0:	681a      	ldr	r2, [r3, #0]
 80039c2:	2a00      	cmp	r2, #0
 80039c4:	f77f aebe 	ble.w	8003744 <statemachine+0x1cc>
							BTN_B=0;
 80039c8:	601d      	str	r5, [r3, #0]
							spdstate++;
 80039ca:	f898 3000 	ldrb.w	r3, [r8]
 80039ce:	3301      	adds	r3, #1
 80039d0:	f888 3000 	strb.w	r3, [r8]
							BTN_B=0;
 80039d4:	e6b6      	b.n	8003744 <statemachine+0x1cc>
				 					 ssd1306_Fill(Black);
 80039d6:	2000      	movs	r0, #0
 80039d8:	f7fe ffea 	bl	80029b0 <ssd1306_Fill>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 80039dc:	4d62      	ldr	r5, [pc, #392]	@ (8003b68 <statemachine+0x5f0>)
				 									  ssd1306_SetCursor(32,32);
 80039de:	2120      	movs	r1, #32
 80039e0:	4608      	mov	r0, r1
 80039e2:	f7ff faa9 	bl	8002f38 <ssd1306_SetCursor>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 80039e6:	e895 0006 	ldmia.w	r5, {r1, r2}
 80039ea:	2301      	movs	r3, #1
 80039ec:	4862      	ldr	r0, [pc, #392]	@ (8003b78 <statemachine+0x600>)
 80039ee:	f7ff fa87 	bl	8002f00 <ssd1306_WriteString>
				 					  ssd1306_SetCursor(32,40);
 80039f2:	2128      	movs	r1, #40	@ 0x28
 80039f4:	2020      	movs	r0, #32
 80039f6:	f7ff fa9f 	bl	8002f38 <ssd1306_SetCursor>
				 					  ssd1306_WriteString("do nothing",Font_6x8,White);
 80039fa:	e895 0006 	ldmia.w	r5, {r1, r2}
 80039fe:	2301      	movs	r3, #1
 8003a00:	485e      	ldr	r0, [pc, #376]	@ (8003b7c <statemachine+0x604>)
 8003a02:	f7ff fa7d 	bl	8002f00 <ssd1306_WriteString>
				 					  usbtransmiten=0;
 8003a06:	4b5e      	ldr	r3, [pc, #376]	@ (8003b80 <statemachine+0x608>)
				 					  if(BTN_B>=1){
 8003a08:	4a5a      	ldr	r2, [pc, #360]	@ (8003b74 <statemachine+0x5fc>)
				 					  usbtransmiten=0;
 8003a0a:	2100      	movs	r1, #0
 8003a0c:	6019      	str	r1, [r3, #0]
				 					  if(BTN_B>=1){
 8003a0e:	6813      	ldr	r3, [r2, #0]
 8003a10:	428b      	cmp	r3, r1
 8003a12:	f340 8720 	ble.w	8004856 <statemachine+0x12de>
				 						  usbstate++;
 8003a16:	7833      	ldrb	r3, [r6, #0]
				 						  BTN_A=0;
 8003a18:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8003b98 <statemachine+0x620>
				 						  BTN_B=0;
 8003a1c:	6011      	str	r1, [r2, #0]
				 						  usbstate++;
 8003a1e:	3301      	adds	r3, #1
 8003a20:	7033      	strb	r3, [r6, #0]
				 						  BTN_A=0;
 8003a22:	f8cb 1000 	str.w	r1, [fp]
						 					if(BTN_A_LONG>=1){
 8003a26:	4957      	ldr	r1, [pc, #348]	@ (8003b84 <statemachine+0x60c>)
 8003a28:	6808      	ldr	r0, [r1, #0]
 8003a2a:	2800      	cmp	r0, #0
 8003a2c:	f77f ae2b 	ble.w	8003686 <statemachine+0x10e>
						 								state--;
 8003a30:	7820      	ldrb	r0, [r4, #0]
 8003a32:	3801      	subs	r0, #1
 8003a34:	7020      	strb	r0, [r4, #0]
						 								BTN_A=0;
 8003a36:	2000      	movs	r0, #0
 8003a38:	f8cb 0000 	str.w	r0, [fp]
						 								BTN_B=0;
 8003a3c:	6010      	str	r0, [r2, #0]
						 								BTN_A_LONG=0;
 8003a3e:	6008      	str	r0, [r1, #0]
 8003a40:	e621      	b.n	8003686 <statemachine+0x10e>
				 						ssd1306_Fill(Black);
 8003a42:	2000      	movs	r0, #0
 8003a44:	f7fe ffb4 	bl	80029b0 <ssd1306_Fill>
				 						ssd1306_SetCursor(32,40);
 8003a48:	2128      	movs	r1, #40	@ 0x28
 8003a4a:	2020      	movs	r0, #32
 8003a4c:	f7ff fa74 	bl	8002f38 <ssd1306_SetCursor>
				 						ssd1306_WriteString("finished",Font_6x8,White);
 8003a50:	4a45      	ldr	r2, [pc, #276]	@ (8003b68 <statemachine+0x5f0>)
 8003a52:	484d      	ldr	r0, [pc, #308]	@ (8003b88 <statemachine+0x610>)
 8003a54:	ca06      	ldmia	r2, {r1, r2}
 8003a56:	2301      	movs	r3, #1
 8003a58:	f7ff fa52 	bl	8002f00 <ssd1306_WriteString>
				 						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 8003a5c:	2200      	movs	r2, #0
 8003a5e:	484b      	ldr	r0, [pc, #300]	@ (8003b8c <statemachine+0x614>)
 8003a60:	2102      	movs	r1, #2
 8003a62:	f002 fe45 	bl	80066f0 <HAL_GPIO_WritePin>
						 					if(BTN_B>=1){
 8003a66:	4a43      	ldr	r2, [pc, #268]	@ (8003b74 <statemachine+0x5fc>)
 8003a68:	6813      	ldr	r3, [r2, #0]
 8003a6a:	2b00      	cmp	r3, #0
 8003a6c:	f340 8702 	ble.w	8004874 <statemachine+0x12fc>
						 						usbstate--;
 8003a70:	7831      	ldrb	r1, [r6, #0]
						 						BTN_A=0;
 8003a72:	f8df b124 	ldr.w	fp, [pc, #292]	@ 8003b98 <statemachine+0x620>
						 						BTN_B=0;
 8003a76:	2000      	movs	r0, #0
						 						usbstate--;
 8003a78:	3903      	subs	r1, #3
 8003a7a:	7031      	strb	r1, [r6, #0]
						 						BTN_B=0;
 8003a7c:	6010      	str	r0, [r2, #0]
						 						BTN_A=0;
 8003a7e:	f8cb 0000 	str.w	r0, [fp]
						 					 if(BTN_A>=1){
 8003a82:	e7d0      	b.n	8003a26 <statemachine+0x4ae>
if(usbtransmiten==0){
 8003a84:	4c3e      	ldr	r4, [pc, #248]	@ (8003b80 <statemachine+0x608>)
 8003a86:	6820      	ldr	r0, [r4, #0]
 8003a88:	2800      	cmp	r0, #0
 8003a8a:	f000 87db 	beq.w	8004a44 <statemachine+0x14cc>
				 					if(BTN_A>=1){
 8003a8e:	f8df b108 	ldr.w	fp, [pc, #264]	@ 8003b98 <statemachine+0x620>
 8003a92:	f8db 2000 	ldr.w	r2, [fp]
 8003a96:	2a00      	cmp	r2, #0
 8003a98:	f77f adf5 	ble.w	8003686 <statemachine+0x10e>
				 					BTN_A=0;
 8003a9c:	2200      	movs	r2, #0
 8003a9e:	f8cb 2000 	str.w	r2, [fp]
 8003aa2:	e5f0      	b.n	8003686 <statemachine+0x10e>
				 					 ssd1306_Fill(Black);
 8003aa4:	2000      	movs	r0, #0
 8003aa6:	f7fe ff83 	bl	80029b0 <ssd1306_Fill>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003aaa:	4d2f      	ldr	r5, [pc, #188]	@ (8003b68 <statemachine+0x5f0>)
				 					if(erasedisplay==1){
 8003aac:	f8df a0ec 	ldr.w	sl, [pc, #236]	@ 8003b9c <statemachine+0x624>
				 									  ssd1306_SetCursor(32,32);
 8003ab0:	2120      	movs	r1, #32
 8003ab2:	4608      	mov	r0, r1
 8003ab4:	f7ff fa40 	bl	8002f38 <ssd1306_SetCursor>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003ab8:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003abc:	2301      	movs	r3, #1
 8003abe:	482e      	ldr	r0, [pc, #184]	@ (8003b78 <statemachine+0x600>)
 8003ac0:	f7ff fa1e 	bl	8002f00 <ssd1306_WriteString>
				 					 ssd1306_SetCursor(32,40);
 8003ac4:	2128      	movs	r1, #40	@ 0x28
 8003ac6:	2020      	movs	r0, #32
 8003ac8:	f7ff fa36 	bl	8002f38 <ssd1306_SetCursor>
				 					ssd1306_WriteString("Push A",Font_6x8,White);
 8003acc:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003ad0:	2301      	movs	r3, #1
 8003ad2:	482f      	ldr	r0, [pc, #188]	@ (8003b90 <statemachine+0x618>)
 8003ad4:	f7ff fa14 	bl	8002f00 <ssd1306_WriteString>
				 					ssd1306_SetCursor(32,48);
 8003ad8:	2130      	movs	r1, #48	@ 0x30
 8003ada:	2020      	movs	r0, #32
 8003adc:	f7ff fa2c 	bl	8002f38 <ssd1306_SetCursor>
				 					ssd1306_WriteString("to erase",Font_6x8,White);
 8003ae0:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003ae4:	482b      	ldr	r0, [pc, #172]	@ (8003b94 <statemachine+0x61c>)
 8003ae6:	2301      	movs	r3, #1
 8003ae8:	f7ff fa0a 	bl	8002f00 <ssd1306_WriteString>
				 					if(erasedisplay==1){
 8003aec:	f8da 4000 	ldr.w	r4, [sl]
 8003af0:	2c01      	cmp	r4, #1
 8003af2:	f001 8034 	beq.w	8004b5e <statemachine+0x15e6>
				 					if(BTN_A>=1){
 8003af6:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 8003b98 <statemachine+0x620>
 8003afa:	f8db 2000 	ldr.w	r2, [fp]
 8003afe:	2a00      	cmp	r2, #0
 8003b00:	f300 86ec 	bgt.w	80048dc <statemachine+0x1364>
				 					if(BTN_B>=1){
 8003b04:	481b      	ldr	r0, [pc, #108]	@ (8003b74 <statemachine+0x5fc>)
 8003b06:	6802      	ldr	r2, [r0, #0]
 8003b08:	2a00      	cmp	r2, #0
 8003b0a:	f77f adbc 	ble.w	8003686 <statemachine+0x10e>
					 						usbstate++;
 8003b0e:	7832      	ldrb	r2, [r6, #0]
					 						  BTN_B=0;
 8003b10:	2100      	movs	r1, #0
					 						usbstate++;
 8003b12:	3201      	adds	r2, #1
 8003b14:	7032      	strb	r2, [r6, #0]
					 						  BTN_B=0;
 8003b16:	6001      	str	r1, [r0, #0]
					 						  BTN_A=0;
 8003b18:	f8cb 1000 	str.w	r1, [fp]
 8003b1c:	e5b3      	b.n	8003686 <statemachine+0x10e>
 8003b1e:	bf00      	nop
 8003b20:	00000000 	.word	0x00000000
 8003b24:	4058c000 	.word	0x4058c000
 8003b28:	cccccccd 	.word	0xcccccccd
 8003b2c:	400ccccc 	.word	0x400ccccc
 8003b30:	2000106e 	.word	0x2000106e
 8003b34:	2000106c 	.word	0x2000106c
 8003b38:	2000062c 	.word	0x2000062c
 8003b3c:	378bcf65 	.word	0x378bcf65
 8003b40:	476a6000 	.word	0x476a6000
 8003b44:	3a83126f 	.word	0x3a83126f
 8003b48:	20000638 	.word	0x20000638
 8003b4c:	20000634 	.word	0x20000634
 8003b50:	200005fd 	.word	0x200005fd
 8003b54:	200005fc 	.word	0x200005fc
 8003b58:	200005fe 	.word	0x200005fe
 8003b5c:	08016024 	.word	0x08016024
 8003b60:	20000680 	.word	0x20000680
 8003b64:	2000001c 	.word	0x2000001c
 8003b68:	2000002c 	.word	0x2000002c
 8003b6c:	0801602c 	.word	0x0801602c
 8003b70:	20000fc0 	.word	0x20000fc0
 8003b74:	20000ff4 	.word	0x20000ff4
 8003b78:	080161e0 	.word	0x080161e0
 8003b7c:	080161e4 	.word	0x080161e4
 8003b80:	20000618 	.word	0x20000618
 8003b84:	200005e0 	.word	0x200005e0
 8003b88:	08016220 	.word	0x08016220
 8003b8c:	48000400 	.word	0x48000400
 8003b90:	080161f0 	.word	0x080161f0
 8003b94:	080161f8 	.word	0x080161f8
 8003b98:	20000ff8 	.word	0x20000ff8
 8003b9c:	2000061c 	.word	0x2000061c
						  ssd1306_Fill(Black);
 8003ba0:	2000      	movs	r0, #0
 8003ba2:	f7fe ff05 	bl	80029b0 <ssd1306_Fill>
						 ssd1306_SetCursor(32,32);
 8003ba6:	2120      	movs	r1, #32
 8003ba8:	4608      	mov	r0, r1
 8003baa:	f7ff f9c5 	bl	8002f38 <ssd1306_SetCursor>
						 snprintf((char *)bufferscreen,15, "%0.1fs",time50kmh);
 8003bae:	f8df 82ac 	ldr.w	r8, [pc, #684]	@ 8003e5c <statemachine+0x8e4>
						 ssd1306_WriteString("0-50kmh",Font_6x8,White);
 8003bb2:	4895      	ldr	r0, [pc, #596]	@ (8003e08 <statemachine+0x890>)
						 snprintf((char *)bufferscreen,15, "%0.1fs",time100kmh);
 8003bb4:	4e95      	ldr	r6, [pc, #596]	@ (8003e0c <statemachine+0x894>)
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 8003bb6:	f8df b2a8 	ldr.w	fp, [pc, #680]	@ 8003e60 <statemachine+0x8e8>
						 ssd1306_WriteString("0-50kmh",Font_6x8,White);
 8003bba:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003bbe:	2301      	movs	r3, #1
 8003bc0:	f7ff f99e 	bl	8002f00 <ssd1306_WriteString>
						 ssd1306_SetCursor(32,40);
 8003bc4:	2128      	movs	r1, #40	@ 0x28
 8003bc6:	2020      	movs	r0, #32
 8003bc8:	f7ff f9b6 	bl	8002f38 <ssd1306_SetCursor>
						 snprintf((char *)bufferscreen,15, "%0.1fs",time50kmh);
 8003bcc:	f8d8 0000 	ldr.w	r0, [r8]
 8003bd0:	f7fc fc92 	bl	80004f8 <__aeabi_f2d>
 8003bd4:	4a8e      	ldr	r2, [pc, #568]	@ (8003e10 <statemachine+0x898>)
 8003bd6:	e9cd 0100 	strd	r0, r1, [sp]
 8003bda:	210f      	movs	r1, #15
 8003bdc:	488d      	ldr	r0, [pc, #564]	@ (8003e14 <statemachine+0x89c>)
 8003bde:	f00c fba7 	bl	8010330 <sniprintf>
						 ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8003be2:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003be6:	2301      	movs	r3, #1
 8003be8:	488a      	ldr	r0, [pc, #552]	@ (8003e14 <statemachine+0x89c>)
 8003bea:	f7ff f989 	bl	8002f00 <ssd1306_WriteString>
						 ssd1306_SetCursor(32,48);
 8003bee:	2130      	movs	r1, #48	@ 0x30
 8003bf0:	2020      	movs	r0, #32
 8003bf2:	f7ff f9a1 	bl	8002f38 <ssd1306_SetCursor>
						 ssd1306_WriteString("0-100kmh",Font_6x8,White);
 8003bf6:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003bfa:	2301      	movs	r3, #1
 8003bfc:	4886      	ldr	r0, [pc, #536]	@ (8003e18 <statemachine+0x8a0>)
 8003bfe:	f7ff f97f 	bl	8002f00 <ssd1306_WriteString>
						 ssd1306_SetCursor(32,56);
 8003c02:	2138      	movs	r1, #56	@ 0x38
 8003c04:	2020      	movs	r0, #32
 8003c06:	f7ff f997 	bl	8002f38 <ssd1306_SetCursor>
						 snprintf((char *)bufferscreen,15, "%0.1fs",time100kmh);
 8003c0a:	6830      	ldr	r0, [r6, #0]
 8003c0c:	f7fc fc74 	bl	80004f8 <__aeabi_f2d>
 8003c10:	4a7f      	ldr	r2, [pc, #508]	@ (8003e10 <statemachine+0x898>)
 8003c12:	e9cd 0100 	strd	r0, r1, [sp]
 8003c16:	210f      	movs	r1, #15
 8003c18:	487e      	ldr	r0, [pc, #504]	@ (8003e14 <statemachine+0x89c>)
 8003c1a:	f00c fb89 	bl	8010330 <sniprintf>
						 ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8003c1e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003c22:	487c      	ldr	r0, [pc, #496]	@ (8003e14 <statemachine+0x89c>)
 8003c24:	2301      	movs	r3, #1
 8003c26:	f7ff f96b 	bl	8002f00 <ssd1306_WriteString>
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 8003c2a:	f8db 2000 	ldr.w	r2, [fp]
 8003c2e:	2a00      	cmp	r2, #0
 8003c30:	f340 86bb 	ble.w	80049aa <statemachine+0x1432>
							 flag_100kmh=0;
 8003c34:	4b79      	ldr	r3, [pc, #484]	@ (8003e1c <statemachine+0x8a4>)
		 					if(BTN_A_LONG>=1){
 8003c36:	4d7a      	ldr	r5, [pc, #488]	@ (8003e20 <statemachine+0x8a8>)
						  	state--;
 8003c38:	7821      	ldrb	r1, [r4, #0]
							 flag_50kmh=0;
 8003c3a:	2000      	movs	r0, #0
							 time50kmh=0.0;
 8003c3c:	2200      	movs	r2, #0
							 flag_100kmh=0;
 8003c3e:	6018      	str	r0, [r3, #0]
		 					if(BTN_A_LONG>=1){
 8003c40:	682b      	ldr	r3, [r5, #0]
							 time100kmh=0.0;
 8003c42:	6032      	str	r2, [r6, #0]
						  	state--;
 8003c44:	3905      	subs	r1, #5
							 flag_50kmh=0;
 8003c46:	4e77      	ldr	r6, [pc, #476]	@ (8003e24 <statemachine+0x8ac>)
							 time50kmh=0.0;
 8003c48:	f8c8 2000 	str.w	r2, [r8]
						  	BTN_B=0;
 8003c4c:	4a76      	ldr	r2, [pc, #472]	@ (8003e28 <statemachine+0x8b0>)
							 flag_50kmh=0;
 8003c4e:	6030      	str	r0, [r6, #0]
						  	state--;
 8003c50:	b2c9      	uxtb	r1, r1
		 					if(BTN_A_LONG>=1){
 8003c52:	4283      	cmp	r3, r0
						  	state--;
 8003c54:	7021      	strb	r1, [r4, #0]
							 accelstate=WAITFORGPS;
 8003c56:	7038      	strb	r0, [r7, #0]
						  	BTN_A=0;
 8003c58:	f8cb 0000 	str.w	r0, [fp]
						  	BTN_B=0;
 8003c5c:	6010      	str	r0, [r2, #0]
		 					if(BTN_A_LONG>=1){
 8003c5e:	f77f ad12 	ble.w	8003686 <statemachine+0x10e>
			 								state--;
 8003c62:	3901      	subs	r1, #1
 8003c64:	7021      	strb	r1, [r4, #0]
			 								BTN_A=0;
 8003c66:	2100      	movs	r1, #0
 8003c68:	f8cb 1000 	str.w	r1, [fp]
			 								BTN_B=0;
 8003c6c:	6011      	str	r1, [r2, #0]
			 								BTN_A_LONG=0;
 8003c6e:	6029      	str	r1, [r5, #0]
		 					if(BTN_B>=1){
 8003c70:	e509      	b.n	8003686 <statemachine+0x10e>
						  if(((GNSSData.fgSpeed*3.6)>=50.0)&&(flag_50kmh==0)){
 8003c72:	4e6e      	ldr	r6, [pc, #440]	@ (8003e2c <statemachine+0x8b4>)
 8003c74:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 8003c78:	f7fc fc3e 	bl	80004f8 <__aeabi_f2d>
 8003c7c:	a35a      	add	r3, pc, #360	@ (adr r3, 8003de8 <statemachine+0x870>)
 8003c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c82:	4604      	mov	r4, r0
 8003c84:	460d      	mov	r5, r1
 8003c86:	f7fc ff15 	bl	8000ab4 <__aeabi_dcmpge>
 8003c8a:	b320      	cbz	r0, 8003cd6 <statemachine+0x75e>
 8003c8c:	f8df 8194 	ldr.w	r8, [pc, #404]	@ 8003e24 <statemachine+0x8ac>
 8003c90:	f8d8 3000 	ldr.w	r3, [r8]
 8003c94:	b993      	cbnz	r3, 8003cbc <statemachine+0x744>
							  time50kmh=(float)(htim16.Instance->CNT/1000.0);
 8003c96:	4b66      	ldr	r3, [pc, #408]	@ (8003e30 <statemachine+0x8b8>)
 8003c98:	f8df 91c0 	ldr.w	r9, [pc, #448]	@ 8003e5c <statemachine+0x8e4>
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8003ca0:	f7fc fc08 	bl	80004b4 <__aeabi_ui2d>
 8003ca4:	a352      	add	r3, pc, #328	@ (adr r3, 8003df0 <statemachine+0x878>)
 8003ca6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003caa:	f7fc fc7d 	bl	80005a8 <__aeabi_dmul>
 8003cae:	f7fc ff73 	bl	8000b98 <__aeabi_d2f>
							  flag_50kmh=1;
 8003cb2:	2301      	movs	r3, #1
							  time50kmh=(float)(htim16.Instance->CNT/1000.0);
 8003cb4:	f8c9 0000 	str.w	r0, [r9]
							  flag_50kmh=1;
 8003cb8:	f8c8 3000 	str.w	r3, [r8]
						  if(((GNSSData.fgSpeed*3.6)>=100.0)&&(flag_100kmh==0)){
 8003cbc:	a34e      	add	r3, pc, #312	@ (adr r3, 8003df8 <statemachine+0x880>)
 8003cbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	4629      	mov	r1, r5
 8003cc6:	f7fc fef5 	bl	8000ab4 <__aeabi_dcmpge>
 8003cca:	b120      	cbz	r0, 8003cd6 <statemachine+0x75e>
 8003ccc:	4d53      	ldr	r5, [pc, #332]	@ (8003e1c <statemachine+0x8a4>)
 8003cce:	682c      	ldr	r4, [r5, #0]
 8003cd0:	2c00      	cmp	r4, #0
 8003cd2:	f000 878c 	beq.w	8004bee <statemachine+0x1676>
						  ssd1306_SetCursor(32,40);
 8003cd6:	2128      	movs	r1, #40	@ 0x28
 8003cd8:	2020      	movs	r0, #32
 8003cda:	f7ff f92d 	bl	8002f38 <ssd1306_SetCursor>
						  snprintf((char *)bufferscreen,15, "%0.1f",GNSSData.fgSpeed*3.6);
 8003cde:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 8003ce2:	f7fc fc09 	bl	80004f8 <__aeabi_f2d>
 8003ce6:	a346      	add	r3, pc, #280	@ (adr r3, 8003e00 <statemachine+0x888>)
 8003ce8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cec:	f7fc fc5c 	bl	80005a8 <__aeabi_dmul>
 8003cf0:	4a50      	ldr	r2, [pc, #320]	@ (8003e34 <statemachine+0x8bc>)
 8003cf2:	e9cd 0100 	strd	r0, r1, [sp]
 8003cf6:	210f      	movs	r1, #15
 8003cf8:	4846      	ldr	r0, [pc, #280]	@ (8003e14 <statemachine+0x89c>)
 8003cfa:	f00c fb19 	bl	8010330 <sniprintf>
						  ssd1306_WriteString((char *)bufferscreen,Font_16x24,White);
 8003cfe:	4b4e      	ldr	r3, [pc, #312]	@ (8003e38 <statemachine+0x8c0>)
 8003d00:	4844      	ldr	r0, [pc, #272]	@ (8003e14 <statemachine+0x89c>)
 8003d02:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003d06:	2301      	movs	r3, #1
 8003d08:	f7ff f8fa 	bl	8002f00 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 8003d0c:	4b4b      	ldr	r3, [pc, #300]	@ (8003e3c <statemachine+0x8c4>)
 8003d0e:	681a      	ldr	r2, [r3, #0]
 8003d10:	2a00      	cmp	r2, #0
 8003d12:	f77f acb8 	ble.w	8003686 <statemachine+0x10e>
							  accelstate++;
 8003d16:	783a      	ldrb	r2, [r7, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8003d18:	4d45      	ldr	r5, [pc, #276]	@ (8003e30 <statemachine+0x8b8>)
							  accelstate++;
 8003d1a:	3201      	adds	r2, #1
							  BTN_B_LONG=0;
 8003d1c:	2400      	movs	r4, #0
							  HAL_TIM_Base_Stop(&htim16);
 8003d1e:	4628      	mov	r0, r5
							  BTN_B_LONG=0;
 8003d20:	601c      	str	r4, [r3, #0]
							  accelstate++;
 8003d22:	703a      	strb	r2, [r7, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8003d24:	f006 fdc6 	bl	800a8b4 <HAL_TIM_Base_Stop>
							  htim16.Instance->CNT=0;
 8003d28:	682b      	ldr	r3, [r5, #0]
 8003d2a:	625c      	str	r4, [r3, #36]	@ 0x24
 8003d2c:	e4ab      	b.n	8003686 <statemachine+0x10e>
						  timecounter++;
 8003d2e:	4d44      	ldr	r5, [pc, #272]	@ (8003e40 <statemachine+0x8c8>)
 8003d30:	682b      	ldr	r3, [r5, #0]
 8003d32:	3301      	adds	r3, #1
						  if(timecounter>=10){
 8003d34:	2b09      	cmp	r3, #9
						  timecounter++;
 8003d36:	602b      	str	r3, [r5, #0]
						  if(timecounter>=10){
 8003d38:	f340 85ac 	ble.w	8004894 <statemachine+0x131c>
							  timecounter=0;
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	602b      	str	r3, [r5, #0]
							  ssd1306_SetCursor(32,40);
 8003d40:	2128      	movs	r1, #40	@ 0x28
 8003d42:	2020      	movs	r0, #32
 8003d44:	f7ff f8f8 	bl	8002f38 <ssd1306_SetCursor>
							  ssd1306_WriteString("Push B",Font_7x10,White);
 8003d48:	4a3e      	ldr	r2, [pc, #248]	@ (8003e44 <statemachine+0x8cc>)
 8003d4a:	483f      	ldr	r0, [pc, #252]	@ (8003e48 <statemachine+0x8d0>)
 8003d4c:	ca06      	ldmia	r2, {r1, r2}
 8003d4e:	2301      	movs	r3, #1
 8003d50:	f7ff f8d6 	bl	8002f00 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 8003d54:	4b39      	ldr	r3, [pc, #228]	@ (8003e3c <statemachine+0x8c4>)
 8003d56:	681a      	ldr	r2, [r3, #0]
 8003d58:	2a00      	cmp	r2, #0
 8003d5a:	f340 863f 	ble.w	80049dc <statemachine+0x1464>
							  accelstate++;
 8003d5e:	783a      	ldrb	r2, [r7, #0]
						  				 						BTN_B_LONG=0;
 8003d60:	2100      	movs	r1, #0
							  accelstate++;
 8003d62:	3201      	adds	r2, #1
 8003d64:	703a      	strb	r2, [r7, #0]
						  				 						BTN_B_LONG=0;
 8003d66:	6019      	str	r1, [r3, #0]
 8003d68:	e48d      	b.n	8003686 <statemachine+0x10e>
						  ssd1306_SetCursor(32,40);
 8003d6a:	2128      	movs	r1, #40	@ 0x28
 8003d6c:	2020      	movs	r0, #32
 8003d6e:	f7ff f8e3 	bl	8002f38 <ssd1306_SetCursor>
						  ssd1306_WriteString("GPS fix",Font_7x10,White);
 8003d72:	4a34      	ldr	r2, [pc, #208]	@ (8003e44 <statemachine+0x8cc>)
 8003d74:	4835      	ldr	r0, [pc, #212]	@ (8003e4c <statemachine+0x8d4>)
 8003d76:	2301      	movs	r3, #1
 8003d78:	ca06      	ldmia	r2, {r1, r2}
 8003d7a:	f7ff f8c1 	bl	8002f00 <ssd1306_WriteString>
						  if(GNSSData.fixType>=2){
 8003d7e:	4b2b      	ldr	r3, [pc, #172]	@ (8003e2c <statemachine+0x8b4>)
 8003d80:	f893 3077 	ldrb.w	r3, [r3, #119]	@ 0x77
 8003d84:	2b01      	cmp	r3, #1
 8003d86:	d902      	bls.n	8003d8e <statemachine+0x816>
							  accelstate++;
 8003d88:	783b      	ldrb	r3, [r7, #0]
 8003d8a:	3301      	adds	r3, #1
 8003d8c:	703b      	strb	r3, [r7, #0]
						  if(BTN_A>=1){
 8003d8e:	f8df b0d0 	ldr.w	fp, [pc, #208]	@ 8003e60 <statemachine+0x8e8>
 8003d92:	f8db 2000 	ldr.w	r2, [fp]
 8003d96:	2a00      	cmp	r2, #0
 8003d98:	f77f ac68 	ble.w	800366c <statemachine+0xf4>
						  	state--;
 8003d9c:	7822      	ldrb	r2, [r4, #0]
						  	BTN_B=0;
 8003d9e:	4822      	ldr	r0, [pc, #136]	@ (8003e28 <statemachine+0x8b0>)
						  	BTN_A=0;
 8003da0:	2100      	movs	r1, #0
						  	state--;
 8003da2:	3a05      	subs	r2, #5
 8003da4:	7022      	strb	r2, [r4, #0]
						  	BTN_A=0;
 8003da6:	f8cb 1000 	str.w	r1, [fp]
						  	BTN_B=0;
 8003daa:	6001      	str	r1, [r0, #0]
 8003dac:	e45e      	b.n	800366c <statemachine+0xf4>
						  if(GNSSData.fgSpeed<=1.0){
 8003dae:	4b1f      	ldr	r3, [pc, #124]	@ (8003e2c <statemachine+0x8b4>)
 8003db0:	ed93 7a30 	vldr	s14, [r3, #192]	@ 0xc0
 8003db4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8003db8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003dbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
							  ssd1306_SetCursor(56,40);
 8003dc0:	f04f 0128 	mov.w	r1, #40	@ 0x28
						  if(GNSSData.fgSpeed<=1.0){
 8003dc4:	f240 8616 	bls.w	80049f4 <statemachine+0x147c>
							  ssd1306_SetCursor(32,40);
 8003dc8:	2020      	movs	r0, #32
 8003dca:	f7ff f8b5 	bl	8002f38 <ssd1306_SetCursor>
							  ssd1306_WriteString("Please stop",Font_6x8,White);
 8003dce:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	481e      	ldr	r0, [pc, #120]	@ (8003e50 <statemachine+0x8d8>)
 8003dd6:	f7ff f893 	bl	8002f00 <ssd1306_WriteString>
							  counterforstart=0;
 8003dda:	491e      	ldr	r1, [pc, #120]	@ (8003e54 <statemachine+0x8dc>)
							  indexcounterforstart=0;
 8003ddc:	4a1e      	ldr	r2, [pc, #120]	@ (8003e58 <statemachine+0x8e0>)
							  counterforstart=0;
 8003dde:	2300      	movs	r3, #0
 8003de0:	600b      	str	r3, [r1, #0]
							  indexcounterforstart=0;
 8003de2:	6013      	str	r3, [r2, #0]
 8003de4:	e44f      	b.n	8003686 <statemachine+0x10e>
 8003de6:	bf00      	nop
 8003de8:	71c71c72 	.word	0x71c71c72
 8003dec:	402bc71c 	.word	0x402bc71c
 8003df0:	d2f1a9fc 	.word	0xd2f1a9fc
 8003df4:	3f50624d 	.word	0x3f50624d
 8003df8:	71c71c72 	.word	0x71c71c72
 8003dfc:	403bc71c 	.word	0x403bc71c
 8003e00:	cccccccd 	.word	0xcccccccd
 8003e04:	400ccccc 	.word	0x400ccccc
 8003e08:	08016250 	.word	0x08016250
 8003e0c:	20001538 	.word	0x20001538
 8003e10:	08016258 	.word	0x08016258
 8003e14:	20000680 	.word	0x20000680
 8003e18:	08016260 	.word	0x08016260
 8003e1c:	20001540 	.word	0x20001540
 8003e20:	200005e0 	.word	0x200005e0
 8003e24:	20001544 	.word	0x20001544
 8003e28:	20000ff4 	.word	0x20000ff4
 8003e2c:	20000510 	.word	0x20000510
 8003e30:	200015f8 	.word	0x200015f8
 8003e34:	08016024 	.word	0x08016024
 8003e38:	2000001c 	.word	0x2000001c
 8003e3c:	200005e4 	.word	0x200005e4
 8003e40:	20001550 	.word	0x20001550
 8003e44:	20000024 	.word	0x20000024
 8003e48:	0801623c 	.word	0x0801623c
 8003e4c:	08016234 	.word	0x08016234
 8003e50:	08016244 	.word	0x08016244
 8003e54:	2000154c 	.word	0x2000154c
 8003e58:	20001548 	.word	0x20001548
 8003e5c:	2000153c 	.word	0x2000153c
 8003e60:	20000ff8 	.word	0x20000ff8
			  			  ssd1306_Fill(Black);
 8003e64:	2000      	movs	r0, #0
 8003e66:	f7fe fda3 	bl	80029b0 <ssd1306_Fill>
			  			  if(settimeen==0){
 8003e6a:	4bb1      	ldr	r3, [pc, #708]	@ (8004130 <statemachine+0xbb8>)
 8003e6c:	681a      	ldr	r2, [r3, #0]
 8003e6e:	2a00      	cmp	r2, #0
 8003e70:	f000 8660 	beq.w	8004b34 <statemachine+0x15bc>
 8003e74:	4eaf      	ldr	r6, [pc, #700]	@ (8004134 <statemachine+0xbbc>)
 8003e76:	f8df 831c 	ldr.w	r8, [pc, #796]	@ 8004194 <statemachine+0xc1c>
 8003e7a:	4faf      	ldr	r7, [pc, #700]	@ (8004138 <statemachine+0xbc0>)
			  			get_time_date();
 8003e7c:	f7fe faa6 	bl	80023cc <get_time_date>
			  				  ssd1306_SetCursor(32, 32);
 8003e80:	2120      	movs	r1, #32
 8003e82:	4608      	mov	r0, r1
 8003e84:	f7ff f858 	bl	8002f38 <ssd1306_SetCursor>
			  				  ssd1306_WriteString("hr GMT:", Font_6x8, White);
 8003e88:	4bac      	ldr	r3, [pc, #688]	@ (800413c <statemachine+0xbc4>)
 8003e8a:	48ad      	ldr	r0, [pc, #692]	@ (8004140 <statemachine+0xbc8>)
 8003e8c:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003e90:	2301      	movs	r3, #1
 8003e92:	f7ff f835 	bl	8002f00 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 42);
 8003e96:	212a      	movs	r1, #42	@ 0x2a
 8003e98:	2020      	movs	r0, #32
 8003e9a:	f7ff f84d 	bl	8002f38 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15, "%02d:%02d",HR,MINUTE);
 8003e9e:	7833      	ldrb	r3, [r6, #0]
 8003ea0:	f898 2000 	ldrb.w	r2, [r8]
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003ea4:	4ea7      	ldr	r6, [pc, #668]	@ (8004144 <statemachine+0xbcc>)
			  				snprintf((char *)bufferscreen,15, "%02d:%02d",HR,MINUTE);
 8003ea6:	9200      	str	r2, [sp, #0]
 8003ea8:	210f      	movs	r1, #15
 8003eaa:	4aa7      	ldr	r2, [pc, #668]	@ (8004148 <statemachine+0xbd0>)
 8003eac:	48a7      	ldr	r0, [pc, #668]	@ (800414c <statemachine+0xbd4>)
 8003eae:	f00c fa3f 	bl	8010330 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003eb2:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003eb6:	2301      	movs	r3, #1
 8003eb8:	48a4      	ldr	r0, [pc, #656]	@ (800414c <statemachine+0xbd4>)
 8003eba:	f7ff f821 	bl	8002f00 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 52);
 8003ebe:	2134      	movs	r1, #52	@ 0x34
 8003ec0:	2020      	movs	r0, #32
 8003ec2:	f7ff f839 	bl	8002f38 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15, "%02d sec",SEC);
 8003ec6:	4aa2      	ldr	r2, [pc, #648]	@ (8004150 <statemachine+0xbd8>)
 8003ec8:	783b      	ldrb	r3, [r7, #0]
 8003eca:	48a0      	ldr	r0, [pc, #640]	@ (800414c <statemachine+0xbd4>)
 8003ecc:	210f      	movs	r1, #15
 8003ece:	f00c fa2f 	bl	8010330 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003ed2:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003ed6:	2301      	movs	r3, #1
 8003ed8:	489c      	ldr	r0, [pc, #624]	@ (800414c <statemachine+0xbd4>)
 8003eda:	f7ff f811 	bl	8002f00 <ssd1306_WriteString>
			  				if(BTN_B>=1){
 8003ede:	4b9d      	ldr	r3, [pc, #628]	@ (8004154 <statemachine+0xbdc>)
 8003ee0:	681a      	ldr	r2, [r3, #0]
 8003ee2:	2a00      	cmp	r2, #0
 8003ee4:	dd04      	ble.n	8003ef0 <statemachine+0x978>
			  					posstate--;
 8003ee6:	782a      	ldrb	r2, [r5, #0]
			  					BTN_B=0;
 8003ee8:	2100      	movs	r1, #0
			  					posstate--;
 8003eea:	3a05      	subs	r2, #5
 8003eec:	702a      	strb	r2, [r5, #0]
			  					BTN_B=0;
 8003eee:	6019      	str	r1, [r3, #0]
			  				if(BTN_B_LONG>=1){
 8003ef0:	4b99      	ldr	r3, [pc, #612]	@ (8004158 <statemachine+0xbe0>)
 8003ef2:	681a      	ldr	r2, [r3, #0]
 8003ef4:	2a00      	cmp	r2, #0
 8003ef6:	f77f abab 	ble.w	8003650 <statemachine+0xd8>
			  							  					posstate--;
 8003efa:	782a      	ldrb	r2, [r5, #0]
			  							  					BTN_B_LONG=0;
 8003efc:	2100      	movs	r1, #0
			  							  					posstate--;
 8003efe:	3a01      	subs	r2, #1
 8003f00:	702a      	strb	r2, [r5, #0]
			  							  					BTN_B_LONG=0;
 8003f02:	6019      	str	r1, [r3, #0]
					if(BTN_A>=1){
 8003f04:	f7ff bba4 	b.w	8003650 <statemachine+0xd8>
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f08:	4b94      	ldr	r3, [pc, #592]	@ (800415c <statemachine+0xbe4>)
				  						snprintf((char *)bufferscreen,15, "baroalt:");
 8003f0a:	4e90      	ldr	r6, [pc, #576]	@ (800414c <statemachine+0xbd4>)
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f0c:	6818      	ldr	r0, [r3, #0]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f0e:	4f8b      	ldr	r7, [pc, #556]	@ (800413c <statemachine+0xbc4>)
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f10:	f7fd fd6e 	bl	80019f0 <bmp581_read_precise_normal>
				  						ssd1306_SetCursor(32, 32);
 8003f14:	2120      	movs	r1, #32
 8003f16:	4608      	mov	r0, r1
 8003f18:	f7ff f80e 	bl	8002f38 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "baroalt:");
 8003f1c:	4b90      	ldr	r3, [pc, #576]	@ (8004160 <statemachine+0xbe8>)
 8003f1e:	cb03      	ldmia	r3!, {r0, r1}
 8003f20:	781b      	ldrb	r3, [r3, #0]
 8003f22:	6030      	str	r0, [r6, #0]
 8003f24:	6071      	str	r1, [r6, #4]
 8003f26:	7233      	strb	r3, [r6, #8]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f28:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003f2c:	2301      	movs	r3, #1
 8003f2e:	4630      	mov	r0, r6
 8003f30:	f7fe ffe6 	bl	8002f00 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.2lf m",bmpalt);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003f34:	4b8b      	ldr	r3, [pc, #556]	@ (8004164 <statemachine+0xbec>)
 8003f36:	4a8c      	ldr	r2, [pc, #560]	@ (8004168 <statemachine+0xbf0>)
 8003f38:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003f3c:	e9cd 0100 	strd	r0, r1, [sp]
 8003f40:	210f      	movs	r1, #15
 8003f42:	4630      	mov	r0, r6
 8003f44:	f00c f9f4 	bl	8010330 <sniprintf>
				  						ssd1306_SetCursor(32, 40);
 8003f48:	2128      	movs	r1, #40	@ 0x28
 8003f4a:	2020      	movs	r0, #32
 8003f4c:	f7fe fff4 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f50:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003f54:	2301      	movs	r3, #1
 8003f56:	4630      	mov	r0, r6
 8003f58:	f7fe ffd2 	bl	8002f00 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "baropress:");
 8003f5c:	4b83      	ldr	r3, [pc, #524]	@ (800416c <statemachine+0xbf4>)
 8003f5e:	cb03      	ldmia	r3!, {r0, r1}
 8003f60:	881a      	ldrh	r2, [r3, #0]
 8003f62:	6030      	str	r0, [r6, #0]
 8003f64:	789b      	ldrb	r3, [r3, #2]
 8003f66:	6071      	str	r1, [r6, #4]
				  						ssd1306_SetCursor(32, 48);
 8003f68:	2020      	movs	r0, #32
 8003f6a:	2130      	movs	r1, #48	@ 0x30
				  						snprintf((char *)bufferscreen,15, "baropress:");
 8003f6c:	8132      	strh	r2, [r6, #8]
 8003f6e:	72b3      	strb	r3, [r6, #10]
				  						ssd1306_SetCursor(32, 48);
 8003f70:	f7fe ffe2 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f74:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003f78:	2301      	movs	r3, #1
 8003f7a:	4630      	mov	r0, r6
 8003f7c:	f7fe ffc0 	bl	8002f00 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.3lfkPa",bmppress/1000.0);
 8003f80:	4b7b      	ldr	r3, [pc, #492]	@ (8004170 <statemachine+0xbf8>)
 8003f82:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003f86:	a368      	add	r3, pc, #416	@ (adr r3, 8004128 <statemachine+0xbb0>)
 8003f88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f8c:	f7fc fb0c 	bl	80005a8 <__aeabi_dmul>
 8003f90:	4a78      	ldr	r2, [pc, #480]	@ (8004174 <statemachine+0xbfc>)
 8003f92:	e9cd 0100 	strd	r0, r1, [sp]
 8003f96:	210f      	movs	r1, #15
 8003f98:	4630      	mov	r0, r6
 8003f9a:	f00c f9c9 	bl	8010330 <sniprintf>
				  						ssd1306_SetCursor(32, 56);
 8003f9e:	2138      	movs	r1, #56	@ 0x38
 8003fa0:	2020      	movs	r0, #32
 8003fa2:	f7fe ffc9 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003fa6:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003faa:	2301      	movs	r3, #1
 8003fac:	4630      	mov	r0, r6
 8003fae:	f7fe ffa7 	bl	8002f00 <ssd1306_WriteString>
				  						HAL_Delay(200);
 8003fb2:	20c8      	movs	r0, #200	@ 0xc8
 8003fb4:	f001 fbd2 	bl	800575c <HAL_Delay>
				  if(BTN_B>=1){
 8003fb8:	4b66      	ldr	r3, [pc, #408]	@ (8004154 <statemachine+0xbdc>)
 8003fba:	681a      	ldr	r2, [r3, #0]
 8003fbc:	2a00      	cmp	r2, #0
 8003fbe:	dd97      	ble.n	8003ef0 <statemachine+0x978>
				  					posstate++;
 8003fc0:	782a      	ldrb	r2, [r5, #0]
				  					BTN_B=0;
 8003fc2:	2100      	movs	r1, #0
				  					posstate++;
 8003fc4:	3201      	adds	r2, #1
 8003fc6:	702a      	strb	r2, [r5, #0]
				  					BTN_B=0;
 8003fc8:	6019      	str	r1, [r3, #0]
				  if(BTN_B_LONG>=1){
 8003fca:	e791      	b.n	8003ef0 <statemachine+0x978>
				  						ssd1306_SetCursor(32, 32);
 8003fcc:	2120      	movs	r1, #32
 8003fce:	4608      	mov	r0, r1
 8003fd0:	f7fe ffb2 	bl	8002f38 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "altitude:");
 8003fd4:	4b68      	ldr	r3, [pc, #416]	@ (8004178 <statemachine+0xc00>)
 8003fd6:	4e5d      	ldr	r6, [pc, #372]	@ (800414c <statemachine+0xbd4>)
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003fd8:	4f58      	ldr	r7, [pc, #352]	@ (800413c <statemachine+0xbc4>)
				  						snprintf((char *)bufferscreen,15, "%0.2f m",GNSSData.fhMSL);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003fda:	f8df 81bc 	ldr.w	r8, [pc, #444]	@ 8004198 <statemachine+0xc20>
				  						snprintf((char *)bufferscreen,15, "altitude:");
 8003fde:	cb03      	ldmia	r3!, {r0, r1}
 8003fe0:	881b      	ldrh	r3, [r3, #0]
 8003fe2:	6030      	str	r0, [r6, #0]
 8003fe4:	6071      	str	r1, [r6, #4]
 8003fe6:	8133      	strh	r3, [r6, #8]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003fe8:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003fec:	2301      	movs	r3, #1
 8003fee:	4630      	mov	r0, r6
 8003ff0:	f7fe ff86 	bl	8002f00 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.2f m",GNSSData.fhMSL);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003ff4:	f8d8 00a4 	ldr.w	r0, [r8, #164]	@ 0xa4
 8003ff8:	f7fc fa7e 	bl	80004f8 <__aeabi_f2d>
 8003ffc:	4a5f      	ldr	r2, [pc, #380]	@ (800417c <statemachine+0xc04>)
 8003ffe:	e9cd 0100 	strd	r0, r1, [sp]
 8004002:	210f      	movs	r1, #15
 8004004:	4630      	mov	r0, r6
 8004006:	f00c f993 	bl	8010330 <sniprintf>
				  						ssd1306_SetCursor(32, 40);
 800400a:	2128      	movs	r1, #40	@ 0x28
 800400c:	2020      	movs	r0, #32
 800400e:	f7fe ff93 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004012:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004016:	2301      	movs	r3, #1
 8004018:	4630      	mov	r0, r6
 800401a:	f7fe ff71 	bl	8002f00 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "Accuracy(m)");
 800401e:	4b58      	ldr	r3, [pc, #352]	@ (8004180 <statemachine+0xc08>)
 8004020:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004022:	6030      	str	r0, [r6, #0]
 8004024:	6071      	str	r1, [r6, #4]
				  						ssd1306_SetCursor(32, 48);
 8004026:	2020      	movs	r0, #32
 8004028:	2130      	movs	r1, #48	@ 0x30
				  						snprintf((char *)bufferscreen,15, "Accuracy(m)");
 800402a:	60b2      	str	r2, [r6, #8]
				  						ssd1306_SetCursor(32, 48);
 800402c:	f7fe ff84 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004030:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004034:	2301      	movs	r3, #1
 8004036:	4630      	mov	r0, r6
 8004038:	f7fe ff62 	bl	8002f00 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.1f",GNSSData.fvACC);
 800403c:	f8d8 00b4 	ldr.w	r0, [r8, #180]	@ 0xb4
 8004040:	f7fc fa5a 	bl	80004f8 <__aeabi_f2d>
 8004044:	4a4f      	ldr	r2, [pc, #316]	@ (8004184 <statemachine+0xc0c>)
 8004046:	e9cd 0100 	strd	r0, r1, [sp]
 800404a:	210f      	movs	r1, #15
 800404c:	4630      	mov	r0, r6
 800404e:	f00c f96f 	bl	8010330 <sniprintf>
				  						ssd1306_SetCursor(32, 56);
 8004052:	2138      	movs	r1, #56	@ 0x38
 8004054:	2020      	movs	r0, #32
 8004056:	f7fe ff6f 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800405a:	e897 0006 	ldmia.w	r7, {r1, r2}
 800405e:	2301      	movs	r3, #1
 8004060:	4630      	mov	r0, r6
 8004062:	f7fe ff4d 	bl	8002f00 <ssd1306_WriteString>
				  if(BTN_B>=1){
 8004066:	4b3b      	ldr	r3, [pc, #236]	@ (8004154 <statemachine+0xbdc>)
 8004068:	681a      	ldr	r2, [r3, #0]
 800406a:	2a00      	cmp	r2, #0
 800406c:	dca8      	bgt.n	8003fc0 <statemachine+0xa48>
 800406e:	e73f      	b.n	8003ef0 <statemachine+0x978>
						ssd1306_SetCursor(32, 32);
 8004070:	2120      	movs	r1, #32
 8004072:	4608      	mov	r0, r1
 8004074:	f7fe ff60 	bl	8002f38 <ssd1306_SetCursor>
						snprintf((char *)bufferscreen,15, "Latitude:");
 8004078:	4b43      	ldr	r3, [pc, #268]	@ (8004188 <statemachine+0xc10>)
 800407a:	4e34      	ldr	r6, [pc, #208]	@ (800414c <statemachine+0xbd4>)
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800407c:	4f2f      	ldr	r7, [pc, #188]	@ (800413c <statemachine+0xbc4>)
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLat);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 800407e:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 8004198 <statemachine+0xc20>
						snprintf((char *)bufferscreen,15, "Latitude:");
 8004082:	cb03      	ldmia	r3!, {r0, r1}
 8004084:	881b      	ldrh	r3, [r3, #0]
 8004086:	6030      	str	r0, [r6, #0]
 8004088:	6071      	str	r1, [r6, #4]
 800408a:	8133      	strh	r3, [r6, #8]
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800408c:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004090:	2301      	movs	r3, #1
 8004092:	4630      	mov	r0, r6
 8004094:	f7fe ff34 	bl	8002f00 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLat);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8004098:	f8d8 0090 	ldr.w	r0, [r8, #144]	@ 0x90
 800409c:	f7fc fa2c 	bl	80004f8 <__aeabi_f2d>
 80040a0:	4a3a      	ldr	r2, [pc, #232]	@ (800418c <statemachine+0xc14>)
 80040a2:	e9cd 0100 	strd	r0, r1, [sp]
 80040a6:	210f      	movs	r1, #15
 80040a8:	4630      	mov	r0, r6
 80040aa:	f00c f941 	bl	8010330 <sniprintf>
						ssd1306_SetCursor(32, 40);
 80040ae:	2128      	movs	r1, #40	@ 0x28
 80040b0:	2020      	movs	r0, #32
 80040b2:	f7fe ff41 	bl	8002f38 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80040b6:	e897 0006 	ldmia.w	r7, {r1, r2}
 80040ba:	2301      	movs	r3, #1
 80040bc:	4630      	mov	r0, r6
 80040be:	f7fe ff1f 	bl	8002f00 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "Longitude:");
 80040c2:	4b33      	ldr	r3, [pc, #204]	@ (8004190 <statemachine+0xc18>)
 80040c4:	cb03      	ldmia	r3!, {r0, r1}
 80040c6:	881a      	ldrh	r2, [r3, #0]
 80040c8:	6030      	str	r0, [r6, #0]
 80040ca:	789b      	ldrb	r3, [r3, #2]
 80040cc:	6071      	str	r1, [r6, #4]
						ssd1306_SetCursor(32, 48);
 80040ce:	2020      	movs	r0, #32
 80040d0:	2130      	movs	r1, #48	@ 0x30
						snprintf((char *)bufferscreen,15, "Longitude:");
 80040d2:	8132      	strh	r2, [r6, #8]
 80040d4:	72b3      	strb	r3, [r6, #10]
						ssd1306_SetCursor(32, 48);
 80040d6:	f7fe ff2f 	bl	8002f38 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80040da:	2301      	movs	r3, #1
 80040dc:	e897 0006 	ldmia.w	r7, {r1, r2}
 80040e0:	4630      	mov	r0, r6
 80040e2:	f7fe ff0d 	bl	8002f00 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLon);
 80040e6:	f8d8 008c 	ldr.w	r0, [r8, #140]	@ 0x8c
 80040ea:	f7fc fa05 	bl	80004f8 <__aeabi_f2d>
 80040ee:	4a27      	ldr	r2, [pc, #156]	@ (800418c <statemachine+0xc14>)
 80040f0:	e9cd 0100 	strd	r0, r1, [sp]
 80040f4:	210f      	movs	r1, #15
 80040f6:	4630      	mov	r0, r6
 80040f8:	f00c f91a 	bl	8010330 <sniprintf>
						ssd1306_SetCursor(32, 56);
 80040fc:	2138      	movs	r1, #56	@ 0x38
 80040fe:	2020      	movs	r0, #32
 8004100:	f7fe ff1a 	bl	8002f38 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004104:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004108:	2301      	movs	r3, #1
 800410a:	4630      	mov	r0, r6
 800410c:	f7fe fef8 	bl	8002f00 <ssd1306_WriteString>
				  if(BTN_B>=1){
 8004110:	4b10      	ldr	r3, [pc, #64]	@ (8004154 <statemachine+0xbdc>)
 8004112:	681a      	ldr	r2, [r3, #0]
 8004114:	2a00      	cmp	r2, #0
 8004116:	f77f aa9b 	ble.w	8003650 <statemachine+0xd8>
					  posstate++;
 800411a:	782a      	ldrb	r2, [r5, #0]
					  BTN_B=0;
 800411c:	2100      	movs	r1, #0
					  posstate++;
 800411e:	3201      	adds	r2, #1
 8004120:	702a      	strb	r2, [r5, #0]
					  BTN_B=0;
 8004122:	6019      	str	r1, [r3, #0]
 8004124:	f7ff ba94 	b.w	8003650 <statemachine+0xd8>
 8004128:	d2f1a9fc 	.word	0xd2f1a9fc
 800412c:	3f50624d 	.word	0x3f50624d
 8004130:	200005f8 	.word	0x200005f8
 8004134:	200005fd 	.word	0x200005fd
 8004138:	200005fe 	.word	0x200005fe
 800413c:	2000002c 	.word	0x2000002c
 8004140:	080161a4 	.word	0x080161a4
 8004144:	20000024 	.word	0x20000024
 8004148:	080161ac 	.word	0x080161ac
 800414c:	20000680 	.word	0x20000680
 8004150:	080161b8 	.word	0x080161b8
 8004154:	20000ff4 	.word	0x20000ff4
 8004158:	200005e4 	.word	0x200005e4
 800415c:	200005d8 	.word	0x200005d8
 8004160:	08016174 	.word	0x08016174
 8004164:	20000408 	.word	0x20000408
 8004168:	08016180 	.word	0x08016180
 800416c:	0801618c 	.word	0x0801618c
 8004170:	20000410 	.word	0x20000410
 8004174:	08016198 	.word	0x08016198
 8004178:	08016154 	.word	0x08016154
 800417c:	08016160 	.word	0x08016160
 8004180:	08016168 	.word	0x08016168
 8004184:	08016024 	.word	0x08016024
 8004188:	080160e8 	.word	0x080160e8
 800418c:	080160f4 	.word	0x080160f4
 8004190:	080160fc 	.word	0x080160fc
 8004194:	200005fc 	.word	0x200005fc
 8004198:	20000510 	.word	0x20000510
			  				ssd1306_Fill(Black);
 800419c:	2000      	movs	r0, #0
 800419e:	f7fe fc07 	bl	80029b0 <ssd1306_Fill>
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041a2:	4bab      	ldr	r3, [pc, #684]	@ (8004450 <statemachine+0xed8>)
 80041a4:	4eab      	ldr	r6, [pc, #684]	@ (8004454 <statemachine+0xedc>)
 80041a6:	6818      	ldr	r0, [r3, #0]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80041a8:	4fab      	ldr	r7, [pc, #684]	@ (8004458 <statemachine+0xee0>)
			  				snprintf((char *)bufferscreen,20, "%d sat",GNSSData.numSV);
 80041aa:	f8df 82bc 	ldr.w	r8, [pc, #700]	@ 8004468 <statemachine+0xef0>
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041ae:	889a      	ldrh	r2, [r3, #4]
 80041b0:	6030      	str	r0, [r6, #0]
			  				ssd1306_SetCursor(32, 32);
 80041b2:	2120      	movs	r1, #32
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041b4:	799b      	ldrb	r3, [r3, #6]
 80041b6:	80b2      	strh	r2, [r6, #4]
			  				ssd1306_SetCursor(32, 32);
 80041b8:	4608      	mov	r0, r1
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041ba:	71b3      	strb	r3, [r6, #6]
			  				ssd1306_SetCursor(32, 32);
 80041bc:	f7fe febc 	bl	8002f38 <ssd1306_SetCursor>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80041c0:	e897 0006 	ldmia.w	r7, {r1, r2}
 80041c4:	2301      	movs	r3, #1
 80041c6:	4630      	mov	r0, r6
 80041c8:	f7fe fe9a 	bl	8002f00 <ssd1306_WriteString>
			  				snprintf((char *)bufferscreen,20, "%d sat",GNSSData.numSV);
 80041cc:	f898 3078 	ldrb.w	r3, [r8, #120]	@ 0x78
 80041d0:	4aa2      	ldr	r2, [pc, #648]	@ (800445c <statemachine+0xee4>)
 80041d2:	2114      	movs	r1, #20
 80041d4:	4630      	mov	r0, r6
 80041d6:	f00c f8ab 	bl	8010330 <sniprintf>
			  				ssd1306_SetCursor(32, 40);
 80041da:	2128      	movs	r1, #40	@ 0x28
 80041dc:	2020      	movs	r0, #32
 80041de:	f7fe feab 	bl	8002f38 <ssd1306_SetCursor>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80041e2:	e897 0006 	ldmia.w	r7, {r1, r2}
 80041e6:	2301      	movs	r3, #1
 80041e8:	4630      	mov	r0, r6
 80041ea:	f7fe fe89 	bl	8002f00 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 48);
 80041ee:	2130      	movs	r1, #48	@ 0x30
 80041f0:	2020      	movs	r0, #32
 80041f2:	f7fe fea1 	bl	8002f38 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15,  "DateJ/M/Y");
 80041f6:	4a9a      	ldr	r2, [pc, #616]	@ (8004460 <statemachine+0xee8>)
 80041f8:	ca03      	ldmia	r2!, {r0, r1}
 80041fa:	8812      	ldrh	r2, [r2, #0]
 80041fc:	6030      	str	r0, [r6, #0]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80041fe:	2301      	movs	r3, #1
			  				snprintf((char *)bufferscreen,15,  "DateJ/M/Y");
 8004200:	6071      	str	r1, [r6, #4]
 8004202:	8132      	strh	r2, [r6, #8]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004204:	4630      	mov	r0, r6
 8004206:	e897 0006 	ldmia.w	r7, {r1, r2}
 800420a:	f7fe fe79 	bl	8002f00 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 56);
 800420e:	2138      	movs	r1, #56	@ 0x38
 8004210:	2020      	movs	r0, #32
 8004212:	f7fe fe91 	bl	8002f38 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15,  "%d/%d/%d",GNSSData.day,GNSSData.month,GNSSData.year);
 8004216:	f8b8 306e 	ldrh.w	r3, [r8, #110]	@ 0x6e
 800421a:	9301      	str	r3, [sp, #4]
 800421c:	f898 3072 	ldrb.w	r3, [r8, #114]	@ 0x72
 8004220:	9300      	str	r3, [sp, #0]
 8004222:	4a90      	ldr	r2, [pc, #576]	@ (8004464 <statemachine+0xeec>)
 8004224:	f898 3073 	ldrb.w	r3, [r8, #115]	@ 0x73
 8004228:	210f      	movs	r1, #15
 800422a:	4630      	mov	r0, r6
 800422c:	f00c f880 	bl	8010330 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004230:	e713      	b.n	800405a <statemachine+0xae2>
				ssd1306_Fill(Black);
 8004232:	2000      	movs	r0, #0
 8004234:	f7fe fbbc 	bl	80029b0 <ssd1306_Fill>
				snprintf((char *)bufferscreen,15, "hacc=%0.2fm",GNSSData.fhACC);//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8004238:	4b8b      	ldr	r3, [pc, #556]	@ (8004468 <statemachine+0xef0>)
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 800423a:	4e8c      	ldr	r6, [pc, #560]	@ (800446c <statemachine+0xef4>)
				snprintf((char *)bufferscreen,15, "hacc=%0.2fm",GNSSData.fhACC);//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 800423c:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
 8004240:	f7fc f95a 	bl	80004f8 <__aeabi_f2d>
 8004244:	4a8a      	ldr	r2, [pc, #552]	@ (8004470 <statemachine+0xef8>)
 8004246:	e9cd 0100 	strd	r0, r1, [sp]
 800424a:	210f      	movs	r1, #15
 800424c:	4881      	ldr	r0, [pc, #516]	@ (8004454 <statemachine+0xedc>)
 800424e:	f00c f86f 	bl	8010330 <sniprintf>
				ssd1306_SetCursor(32, 32);
 8004252:	2120      	movs	r1, #32
 8004254:	4608      	mov	r0, r1
 8004256:	f7fe fe6f 	bl	8002f38 <ssd1306_SetCursor>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 800425a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800425e:	2301      	movs	r3, #1
 8004260:	487c      	ldr	r0, [pc, #496]	@ (8004454 <statemachine+0xedc>)
 8004262:	f7fe fe4d 	bl	8002f00 <ssd1306_WriteString>
				snprintf((char *)bufferscreen,20, "v=%0.2fV",vbat);
 8004266:	4b83      	ldr	r3, [pc, #524]	@ (8004474 <statemachine+0xefc>)
 8004268:	6818      	ldr	r0, [r3, #0]
 800426a:	f7fc f945 	bl	80004f8 <__aeabi_f2d>
 800426e:	4a82      	ldr	r2, [pc, #520]	@ (8004478 <statemachine+0xf00>)
 8004270:	e9cd 0100 	strd	r0, r1, [sp]
 8004274:	2114      	movs	r1, #20
 8004276:	4877      	ldr	r0, [pc, #476]	@ (8004454 <statemachine+0xedc>)
 8004278:	f00c f85a 	bl	8010330 <sniprintf>
				ssd1306_SetCursor(32, 42);
 800427c:	212a      	movs	r1, #42	@ 0x2a
 800427e:	2020      	movs	r0, #32
 8004280:	f7fe fe5a 	bl	8002f38 <ssd1306_SetCursor>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8004284:	e896 0006 	ldmia.w	r6, {r1, r2}
 8004288:	2301      	movs	r3, #1
 800428a:	4872      	ldr	r0, [pc, #456]	@ (8004454 <statemachine+0xedc>)
 800428c:	f7fe fe38 	bl	8002f00 <ssd1306_WriteString>
				ssd1306_SetCursor(32, 52);
 8004290:	2134      	movs	r1, #52	@ 0x34
 8004292:	2020      	movs	r0, #32
 8004294:	f7fe fe50 	bl	8002f38 <ssd1306_SetCursor>
				snprintf((char *)bufferscreen,15,  "T=%0.2fC",temp);
 8004298:	4b78      	ldr	r3, [pc, #480]	@ (800447c <statemachine+0xf04>)
 800429a:	6818      	ldr	r0, [r3, #0]
 800429c:	f7fc f92c 	bl	80004f8 <__aeabi_f2d>
 80042a0:	4a77      	ldr	r2, [pc, #476]	@ (8004480 <statemachine+0xf08>)
 80042a2:	e9cd 0100 	strd	r0, r1, [sp]
 80042a6:	210f      	movs	r1, #15
 80042a8:	486a      	ldr	r0, [pc, #424]	@ (8004454 <statemachine+0xedc>)
 80042aa:	f00c f841 	bl	8010330 <sniprintf>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80042ae:	e896 0006 	ldmia.w	r6, {r1, r2}
 80042b2:	4868      	ldr	r0, [pc, #416]	@ (8004454 <statemachine+0xedc>)
 80042b4:	2301      	movs	r3, #1
 80042b6:	e6d4      	b.n	8004062 <statemachine+0xaea>
						  ssd1306_WriteString("fin de",Font_6x8,White);
 80042b8:	4d67      	ldr	r5, [pc, #412]	@ (8004458 <statemachine+0xee0>)
						  if(BTN_A>=1){
 80042ba:	f8df b208 	ldr.w	fp, [pc, #520]	@ 80044c4 <statemachine+0xf4c>
						  ssd1306_SetCursor(32,32);
 80042be:	2120      	movs	r1, #32
 80042c0:	4608      	mov	r0, r1
 80042c2:	f7fe fe39 	bl	8002f38 <ssd1306_SetCursor>
						  ssd1306_WriteString("fin de",Font_6x8,White);
 80042c6:	e895 0006 	ldmia.w	r5, {r1, r2}
 80042ca:	2301      	movs	r3, #1
 80042cc:	486d      	ldr	r0, [pc, #436]	@ (8004484 <statemachine+0xf0c>)
 80042ce:	f7fe fe17 	bl	8002f00 <ssd1306_WriteString>
						  ssd1306_SetCursor(32,42);
 80042d2:	212a      	movs	r1, #42	@ 0x2a
 80042d4:	2020      	movs	r0, #32
 80042d6:	f7fe fe2f 	bl	8002f38 <ssd1306_SetCursor>
						  ssd1306_WriteString("memoire",Font_6x8,White);
 80042da:	e895 0006 	ldmia.w	r5, {r1, r2}
 80042de:	2301      	movs	r3, #1
 80042e0:	4869      	ldr	r0, [pc, #420]	@ (8004488 <statemachine+0xf10>)
 80042e2:	f7fe fe0d 	bl	8002f00 <ssd1306_WriteString>
						  ssd1306_SetCursor(32,52);
 80042e6:	2134      	movs	r1, #52	@ 0x34
 80042e8:	2020      	movs	r0, #32
 80042ea:	f7fe fe25 	bl	8002f38 <ssd1306_SetCursor>
						  snprintf((char *)bufferscreen,50,"%d,%d",pageoffset,pagenumber);
 80042ee:	4a67      	ldr	r2, [pc, #412]	@ (800448c <statemachine+0xf14>)
 80042f0:	4b67      	ldr	r3, [pc, #412]	@ (8004490 <statemachine+0xf18>)
 80042f2:	6812      	ldr	r2, [r2, #0]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	4857      	ldr	r0, [pc, #348]	@ (8004454 <statemachine+0xedc>)
 80042f8:	9200      	str	r2, [sp, #0]
 80042fa:	2132      	movs	r1, #50	@ 0x32
 80042fc:	4a65      	ldr	r2, [pc, #404]	@ (8004494 <statemachine+0xf1c>)
 80042fe:	f00c f817 	bl	8010330 <sniprintf>
						  ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004302:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004306:	4853      	ldr	r0, [pc, #332]	@ (8004454 <statemachine+0xedc>)
 8004308:	2301      	movs	r3, #1
 800430a:	f7fe fdf9 	bl	8002f00 <ssd1306_WriteString>
						  if(BTN_A>=1){
 800430e:	f8db 2000 	ldr.w	r2, [fp]
 8004312:	2a00      	cmp	r2, #0
 8004314:	f77f a9aa 	ble.w	800366c <statemachine+0xf4>
						  				  			 	state++;
 8004318:	7821      	ldrb	r1, [r4, #0]
						  				  			 	BTN_B=0;
 800431a:	485f      	ldr	r0, [pc, #380]	@ (8004498 <statemachine+0xf20>)
						  				  			 	BTN_A=0;
 800431c:	2200      	movs	r2, #0
						  				  			 	state++;
 800431e:	3101      	adds	r1, #1
						  				  			 	BTN_B=0;
 8004320:	6002      	str	r2, [r0, #0]
						  				  			 	state++;
 8004322:	7021      	strb	r1, [r4, #0]
						  				  			 	BTN_A=0;
 8004324:	f8cb 2000 	str.w	r2, [fp]
						  				  			settimeen=0;
 8004328:	603a      	str	r2, [r7, #0]
						  if(BTN_A_LONG>=1){
 800432a:	f7ff b99f 	b.w	800366c <statemachine+0xf4>
				  if(BTN_B>=1){
 800432e:	4d5a      	ldr	r5, [pc, #360]	@ (8004498 <statemachine+0xf20>)
				  timehandler=calctime;
 8004330:	4b5a      	ldr	r3, [pc, #360]	@ (800449c <statemachine+0xf24>)
				  if(BTN_B>=1){
 8004332:	682e      	ldr	r6, [r5, #0]
				  timehandler=calctime;
 8004334:	485a      	ldr	r0, [pc, #360]	@ (80044a0 <statemachine+0xf28>)
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	6003      	str	r3, [r0, #0]
				  if(BTN_B>=1){
 800433a:	2e00      	cmp	r6, #0
 800433c:	dd07      	ble.n	800434e <statemachine+0xdd6>
				  			starttime=uwTick;
 800433e:	4a59      	ldr	r2, [pc, #356]	@ (80044a4 <statemachine+0xf2c>)
 8004340:	6816      	ldr	r6, [r2, #0]
 8004342:	4a59      	ldr	r2, [pc, #356]	@ (80044a8 <statemachine+0xf30>)
 8004344:	6016      	str	r6, [r2, #0]
				  			chronostate--;
 8004346:	2201      	movs	r2, #1
				  			BTN_B=0;
 8004348:	2600      	movs	r6, #0
				  			chronostate--;
 800434a:	700a      	strb	r2, [r1, #0]
				  			BTN_B=0;
 800434c:	602e      	str	r6, [r5, #0]
				  if(BTN_B_LONG>=1){
 800434e:	4d57      	ldr	r5, [pc, #348]	@ (80044ac <statemachine+0xf34>)
 8004350:	682e      	ldr	r6, [r5, #0]
 8004352:	2e00      	cmp	r6, #0
 8004354:	dd04      	ble.n	8004360 <statemachine+0xde8>
				  				  	chronostate--;
 8004356:	3a02      	subs	r2, #2
 8004358:	700a      	strb	r2, [r1, #0]
				  				  	BTN_B_LONG=0;
 800435a:	2200      	movs	r2, #0
 800435c:	602a      	str	r2, [r5, #0]
				  				  	timehandler=0;
 800435e:	6002      	str	r2, [r0, #0]
			  min=floor((float) calctime/60000);
 8004360:	ee07 3a90 	vmov	s15, r3
 8004364:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8004368:	eddf 7a51 	vldr	s15, [pc, #324]	@ 80044b0 <statemachine+0xf38>
 800436c:	f7ff bacd 	b.w	800390a <statemachine+0x392>
					 ssd1306_SetCursor(32, 32);
 8004370:	2120      	movs	r1, #32
 8004372:	4608      	mov	r0, r1
 8004374:	f7fe fde0 	bl	8002f38 <ssd1306_SetCursor>
					 snprintf((char *)bufferscreen,15, "%0.1f",vitmax*3.6);
 8004378:	6838      	ldr	r0, [r7, #0]
 800437a:	f7fc f8bd 	bl	80004f8 <__aeabi_f2d>
 800437e:	a332      	add	r3, pc, #200	@ (adr r3, 8004448 <statemachine+0xed0>)
 8004380:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004384:	f7fc f910 	bl	80005a8 <__aeabi_dmul>
 8004388:	4a4a      	ldr	r2, [pc, #296]	@ (80044b4 <statemachine+0xf3c>)
 800438a:	e9cd 0100 	strd	r0, r1, [sp]
 800438e:	210f      	movs	r1, #15
 8004390:	4830      	ldr	r0, [pc, #192]	@ (8004454 <statemachine+0xedc>)
 8004392:	f00b ffcd 	bl	8010330 <sniprintf>
					 ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 8004396:	4b48      	ldr	r3, [pc, #288]	@ (80044b8 <statemachine+0xf40>)
 8004398:	482e      	ldr	r0, [pc, #184]	@ (8004454 <statemachine+0xedc>)
 800439a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800439e:	462b      	mov	r3, r5
 80043a0:	f7fe fdae 	bl	8002f00 <ssd1306_WriteString>
					 ssd1306_SetCursor(32, 56);
 80043a4:	2138      	movs	r1, #56	@ 0x38
 80043a6:	2020      	movs	r0, #32
 80043a8:	f7fe fdc6 	bl	8002f38 <ssd1306_SetCursor>
					 ssd1306_WriteString("maxV", Font_6x8, White);
 80043ac:	4b2a      	ldr	r3, [pc, #168]	@ (8004458 <statemachine+0xee0>)
 80043ae:	4843      	ldr	r0, [pc, #268]	@ (80044bc <statemachine+0xf44>)
 80043b0:	e893 0006 	ldmia.w	r3, {r1, r2}
 80043b4:	462b      	mov	r3, r5
 80043b6:	f7fe fda3 	bl	8002f00 <ssd1306_WriteString>
					 batterygauge(vbat,79, 57,1);
 80043ba:	4b2e      	ldr	r3, [pc, #184]	@ (8004474 <statemachine+0xefc>)
 80043bc:	462a      	mov	r2, r5
 80043be:	ed93 0a00 	vldr	s0, [r3]
 80043c2:	2139      	movs	r1, #57	@ 0x39
 80043c4:	204f      	movs	r0, #79	@ 0x4f
 80043c6:	f7fe fe73 	bl	80030b0 <batterygauge>
					 if(BTN_B>=1){
 80043ca:	4b33      	ldr	r3, [pc, #204]	@ (8004498 <statemachine+0xf20>)
 80043cc:	681a      	ldr	r2, [r3, #0]
 80043ce:	2a00      	cmp	r2, #0
 80043d0:	f77f a9b8 	ble.w	8003744 <statemachine+0x1cc>
					 							spdstate++;
 80043d4:	f898 2000 	ldrb.w	r2, [r8]
 80043d8:	3201      	adds	r2, #1
 80043da:	f888 2000 	strb.w	r2, [r8]
					 							BTN_B=0;
 80043de:	2200      	movs	r2, #0
 80043e0:	601a      	str	r2, [r3, #0]
 80043e2:	f7ff b9af 	b.w	8003744 <statemachine+0x1cc>
				  calctime=uwTick-starttime+timehandler;
 80043e6:	4b2f      	ldr	r3, [pc, #188]	@ (80044a4 <statemachine+0xf2c>)
 80043e8:	482d      	ldr	r0, [pc, #180]	@ (80044a0 <statemachine+0xf28>)
 80043ea:	4a2f      	ldr	r2, [pc, #188]	@ (80044a8 <statemachine+0xf30>)
 80043ec:	6800      	ldr	r0, [r0, #0]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	6812      	ldr	r2, [r2, #0]
 80043f2:	4403      	add	r3, r0
 80043f4:	1a9b      	subs	r3, r3, r2
 80043f6:	4829      	ldr	r0, [pc, #164]	@ (800449c <statemachine+0xf24>)
				  if(BTN_B>=1){
 80043f8:	4a27      	ldr	r2, [pc, #156]	@ (8004498 <statemachine+0xf20>)
				  calctime=uwTick-starttime+timehandler;
 80043fa:	6003      	str	r3, [r0, #0]
				  if(BTN_B>=1){
 80043fc:	6810      	ldr	r0, [r2, #0]
			  min=floor((float) calctime/60000);
 80043fe:	ee07 3a90 	vmov	s15, r3
				  if(BTN_B>=1){
 8004402:	2800      	cmp	r0, #0
			  min=floor((float) calctime/60000);
 8004404:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8004408:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80044b0 <statemachine+0xf38>
				  if(BTN_B>=1){
 800440c:	f77f aa7d 	ble.w	800390a <statemachine+0x392>
			  min=floor((float) calctime/60000);
 8004410:	ee68 7a27 	vmul.f32	s15, s16, s15
				  		chronostate++;
 8004414:	2002      	movs	r0, #2
				  		BTN_B=0;
 8004416:	2300      	movs	r3, #0
				  		chronostate++;
 8004418:	7008      	strb	r0, [r1, #0]
				  		BTN_B=0;
 800441a:	6013      	str	r3, [r2, #0]
			  min=floor((float) calctime/60000);
 800441c:	ee17 0a90 	vmov	r0, s15
 8004420:	f7ff ba77 	b.w	8003912 <statemachine+0x39a>
						  ssd1306_SetCursor(32,32);
 8004424:	2120      	movs	r1, #32
						  switch(ecranstate){
 8004426:	4f26      	ldr	r7, [pc, #152]	@ (80044c0 <statemachine+0xf48>)
						  ssd1306_SetCursor(32,32);
 8004428:	4608      	mov	r0, r1
 800442a:	f7fe fd85 	bl	8002f38 <ssd1306_SetCursor>
						  switch(ecranstate){
 800442e:	783b      	ldrb	r3, [r7, #0]
 8004430:	2b05      	cmp	r3, #5
 8004432:	f200 840a 	bhi.w	8004c4a <statemachine+0x16d2>
 8004436:	e8df f013 	tbh	[pc, r3, lsl #1]
 800443a:	015b      	.short	0x015b
 800443c:	010c013c 	.word	0x010c013c
 8004440:	00c000e9 	.word	0x00c000e9
 8004444:	0047      	.short	0x0047
 8004446:	bf00      	nop
 8004448:	cccccccd 	.word	0xcccccccd
 800444c:	400ccccc 	.word	0x400ccccc
 8004450:	0801612c 	.word	0x0801612c
 8004454:	20000680 	.word	0x20000680
 8004458:	2000002c 	.word	0x2000002c
 800445c:	08016134 	.word	0x08016134
 8004460:	0801613c 	.word	0x0801613c
 8004464:	08016148 	.word	0x08016148
 8004468:	20000510 	.word	0x20000510
 800446c:	20000024 	.word	0x20000024
 8004470:	08016108 	.word	0x08016108
 8004474:	20000fc0 	.word	0x20000fc0
 8004478:	08016114 	.word	0x08016114
 800447c:	20000fc8 	.word	0x20000fc8
 8004480:	08016120 	.word	0x08016120
 8004484:	080160d0 	.word	0x080160d0
 8004488:	080160d8 	.word	0x080160d8
 800448c:	200006b8 	.word	0x200006b8
 8004490:	200006bc 	.word	0x200006bc
 8004494:	080160e0 	.word	0x080160e0
 8004498:	20000ff4 	.word	0x20000ff4
 800449c:	2000062c 	.word	0x2000062c
 80044a0:	20000628 	.word	0x20000628
 80044a4:	20001804 	.word	0x20001804
 80044a8:	20000630 	.word	0x20000630
 80044ac:	200005e4 	.word	0x200005e4
 80044b0:	378bcf65 	.word	0x378bcf65
 80044b4:	08016024 	.word	0x08016024
 80044b8:	2000001c 	.word	0x2000001c
 80044bc:	08016038 	.word	0x08016038
 80044c0:	200005dc 	.word	0x200005dc
 80044c4:	20000ff8 	.word	0x20000ff8
							  snprintf((char  *)bufferscreen,50,"%0.1f",vitmax*3.6);
 80044c8:	4b99      	ldr	r3, [pc, #612]	@ (8004730 <statemachine+0x11b8>)
							  							ssd1306_WriteString("MaxV",Font_6x8,White);
 80044ca:	4d9a      	ldr	r5, [pc, #616]	@ (8004734 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",vitmax*3.6);
 80044cc:	6818      	ldr	r0, [r3, #0]
 80044ce:	f7fc f813 	bl	80004f8 <__aeabi_f2d>
 80044d2:	a393      	add	r3, pc, #588	@ (adr r3, 8004720 <statemachine+0x11a8>)
 80044d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044d8:	f7fc f866 	bl	80005a8 <__aeabi_dmul>
 80044dc:	4a96      	ldr	r2, [pc, #600]	@ (8004738 <statemachine+0x11c0>)
 80044de:	e9cd 0100 	strd	r0, r1, [sp]
 80044e2:	2132      	movs	r1, #50	@ 0x32
 80044e4:	4895      	ldr	r0, [pc, #596]	@ (800473c <statemachine+0x11c4>)
 80044e6:	f00b ff23 	bl	8010330 <sniprintf>
							  							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80044ea:	4a95      	ldr	r2, [pc, #596]	@ (8004740 <statemachine+0x11c8>)
 80044ec:	4893      	ldr	r0, [pc, #588]	@ (800473c <statemachine+0x11c4>)
 80044ee:	ca06      	ldmia	r2, {r1, r2}
 80044f0:	2301      	movs	r3, #1
 80044f2:	f7fe fd05 	bl	8002f00 <ssd1306_WriteString>
							  							ssd1306_SetCursor(32,42);
 80044f6:	212a      	movs	r1, #42	@ 0x2a
 80044f8:	2020      	movs	r0, #32
 80044fa:	f7fe fd1d 	bl	8002f38 <ssd1306_SetCursor>
							  							ssd1306_WriteString("MaxV",Font_6x8,White);
 80044fe:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004502:	2301      	movs	r3, #1
 8004504:	488f      	ldr	r0, [pc, #572]	@ (8004744 <statemachine+0x11cc>)
 8004506:	f7fe fcfb 	bl	8002f00 <ssd1306_WriteString>
							  if(BTN_B>=1){
 800450a:	4b8f      	ldr	r3, [pc, #572]	@ (8004748 <statemachine+0x11d0>)
 800450c:	681a      	ldr	r2, [r3, #0]
 800450e:	2a00      	cmp	r2, #0
 8004510:	f340 82c4 	ble.w	8004a9c <statemachine+0x1524>
							  														ecranstate--;
 8004514:	783a      	ldrb	r2, [r7, #0]
 8004516:	3a05      	subs	r2, #5
							  													  	BTN_A=0;
 8004518:	498c      	ldr	r1, [pc, #560]	@ (800474c <statemachine+0x11d4>)
							  														ecranstate--;
 800451a:	703a      	strb	r2, [r7, #0]
							  													  	BTN_B=0;
 800451c:	4e8c      	ldr	r6, [pc, #560]	@ (8004750 <statemachine+0x11d8>)
 800451e:	2200      	movs	r2, #0
 8004520:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 8004522:	600a      	str	r2, [r1, #0]
 8004524:	4c8b      	ldr	r4, [pc, #556]	@ (8004754 <statemachine+0x11dc>)
						 	batterygauge(vbat,79, 42,1);
 8004526:	ed94 0a00 	vldr	s0, [r4]
 800452a:	2201      	movs	r2, #1
 800452c:	212a      	movs	r1, #42	@ 0x2a
 800452e:	204f      	movs	r0, #79	@ 0x4f
 8004530:	f7fe fdbe 	bl	80030b0 <batterygauge>
						 	ssd1306_SetCursor(32,52);
 8004534:	2134      	movs	r1, #52	@ 0x34
 8004536:	2020      	movs	r0, #32
 8004538:	f7fe fcfe 	bl	8002f38 <ssd1306_SetCursor>
						 	snprintf((char  *)bufferscreen,50, "%0.2fV",vbat);
 800453c:	6820      	ldr	r0, [r4, #0]
 800453e:	f7fb ffdb 	bl	80004f8 <__aeabi_f2d>
 8004542:	4a85      	ldr	r2, [pc, #532]	@ (8004758 <statemachine+0x11e0>)
 8004544:	e9cd 0100 	strd	r0, r1, [sp]
 8004548:	2132      	movs	r1, #50	@ 0x32
 800454a:	487c      	ldr	r0, [pc, #496]	@ (800473c <statemachine+0x11c4>)
 800454c:	f00b fef0 	bl	8010330 <sniprintf>
						 	ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004550:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004554:	2301      	movs	r3, #1
 8004556:	4879      	ldr	r0, [pc, #484]	@ (800473c <statemachine+0x11c4>)
 8004558:	f7fe fcd2 	bl	8002f00 <ssd1306_WriteString>
						 	ssd1306_SetCursor(65,52);
 800455c:	2134      	movs	r1, #52	@ 0x34
 800455e:	2041      	movs	r0, #65	@ 0x41
 8004560:	f7fe fcea 	bl	8002f38 <ssd1306_SetCursor>
						 	snprintf((char  *)bufferscreen,50, "sat=%d",GNSSData.numSV);
 8004564:	4a7d      	ldr	r2, [pc, #500]	@ (800475c <statemachine+0x11e4>)
 8004566:	f896 3078 	ldrb.w	r3, [r6, #120]	@ 0x78
 800456a:	4874      	ldr	r0, [pc, #464]	@ (800473c <statemachine+0x11c4>)
 800456c:	2132      	movs	r1, #50	@ 0x32
 800456e:	f00b fedf 	bl	8010330 <sniprintf>
						 	ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004572:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004576:	2301      	movs	r3, #1
 8004578:	4870      	ldr	r0, [pc, #448]	@ (800473c <statemachine+0x11c4>)
 800457a:	f7fe fcc1 	bl	8002f00 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 800457e:	4b78      	ldr	r3, [pc, #480]	@ (8004760 <statemachine+0x11e8>)
 8004580:	681a      	ldr	r2, [r3, #0]
 8004582:	2a00      	cmp	r2, #0
 8004584:	f77f a87f 	ble.w	8003686 <statemachine+0x10e>
						  						  balisestate--;
 8004588:	f898 2000 	ldrb.w	r2, [r8]
						  						osThreadSuspend(BALISEHandle);
 800458c:	4875      	ldr	r0, [pc, #468]	@ (8004764 <statemachine+0x11ec>)
						  						  BTN_A=0;
 800458e:	496f      	ldr	r1, [pc, #444]	@ (800474c <statemachine+0x11d4>)
						  						osThreadSuspend(BALISEHandle);
 8004590:	6800      	ldr	r0, [r0, #0]
						  						  BTN_B_LONG=0;
 8004592:	2400      	movs	r4, #0
 8004594:	601c      	str	r4, [r3, #0]
						  						  balisestate--;
 8004596:	1e53      	subs	r3, r2, #1
						  						  BTN_A=0;
 8004598:	600c      	str	r4, [r1, #0]
						  						  balisestate--;
 800459a:	f888 3000 	strb.w	r3, [r8]
						  						osThreadSuspend(BALISEHandle);
 800459e:	f008 ffd3 	bl	800d548 <osThreadSuspend>
						  						storeindex();
 80045a2:	f7fe f82f 	bl	8002604 <storeindex>
						  						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 80045a6:	4870      	ldr	r0, [pc, #448]	@ (8004768 <statemachine+0x11f0>)
 80045a8:	4622      	mov	r2, r4
 80045aa:	2102      	movs	r1, #2
}
 80045ac:	b005      	add	sp, #20
 80045ae:	ecbd 8b04 	vpop	{d8-d9}
 80045b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
						  						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 80045b6:	f002 b89b 	b.w	80066f0 <HAL_GPIO_WritePin>
							  snprintf((char  *)bufferscreen,50,"%0.1f",vbat);
 80045ba:	4c66      	ldr	r4, [pc, #408]	@ (8004754 <statemachine+0x11dc>)
							  ssd1306_WriteString("Vbat(V)",Font_6x8,White);
 80045bc:	4d5d      	ldr	r5, [pc, #372]	@ (8004734 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",vbat);
 80045be:	6820      	ldr	r0, [r4, #0]
 80045c0:	f7fb ff9a 	bl	80004f8 <__aeabi_f2d>
 80045c4:	4a5c      	ldr	r2, [pc, #368]	@ (8004738 <statemachine+0x11c0>)
 80045c6:	e9cd 0100 	strd	r0, r1, [sp]
 80045ca:	2132      	movs	r1, #50	@ 0x32
 80045cc:	485b      	ldr	r0, [pc, #364]	@ (800473c <statemachine+0x11c4>)
 80045ce:	f00b feaf 	bl	8010330 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80045d2:	4a5b      	ldr	r2, [pc, #364]	@ (8004740 <statemachine+0x11c8>)
 80045d4:	4859      	ldr	r0, [pc, #356]	@ (800473c <statemachine+0x11c4>)
 80045d6:	ca06      	ldmia	r2, {r1, r2}
 80045d8:	2301      	movs	r3, #1
 80045da:	f7fe fc91 	bl	8002f00 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 80045de:	212a      	movs	r1, #42	@ 0x2a
 80045e0:	2020      	movs	r0, #32
 80045e2:	f7fe fca9 	bl	8002f38 <ssd1306_SetCursor>
							  ssd1306_WriteString("Vbat(V)",Font_6x8,White);
 80045e6:	e895 0006 	ldmia.w	r5, {r1, r2}
 80045ea:	2301      	movs	r3, #1
 80045ec:	485f      	ldr	r0, [pc, #380]	@ (800476c <statemachine+0x11f4>)
 80045ee:	f7fe fc87 	bl	8002f00 <ssd1306_WriteString>
							  if(BTN_B>=1){
 80045f2:	4b55      	ldr	r3, [pc, #340]	@ (8004748 <statemachine+0x11d0>)
 80045f4:	681a      	ldr	r2, [r3, #0]
 80045f6:	2a00      	cmp	r2, #0
 80045f8:	dd06      	ble.n	8004608 <statemachine+0x1090>
							  														  ecranstate++;
 80045fa:	783a      	ldrb	r2, [r7, #0]
 80045fc:	3201      	adds	r2, #1
 80045fe:	703a      	strb	r2, [r7, #0]
							  													  	BTN_B=0;
 8004600:	2200      	movs	r2, #0
 8004602:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 8004604:	4b51      	ldr	r3, [pc, #324]	@ (800474c <statemachine+0x11d4>)
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	4e51      	ldr	r6, [pc, #324]	@ (8004750 <statemachine+0x11d8>)
 800460a:	e78c      	b.n	8004526 <statemachine+0xfae>
							  snprintf((char  *)bufferscreen,50,"%0.1lf",bmpalt);
 800460c:	4b58      	ldr	r3, [pc, #352]	@ (8004770 <statemachine+0x11f8>)
 800460e:	4a59      	ldr	r2, [pc, #356]	@ (8004774 <statemachine+0x11fc>)
							  							ssd1306_WriteString("alt(m)",Font_6x8,White);
 8004610:	4d48      	ldr	r5, [pc, #288]	@ (8004734 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1lf",bmpalt);
 8004612:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004616:	e9cd 0100 	strd	r0, r1, [sp]
 800461a:	2132      	movs	r1, #50	@ 0x32
 800461c:	4847      	ldr	r0, [pc, #284]	@ (800473c <statemachine+0x11c4>)
 800461e:	f00b fe87 	bl	8010330 <sniprintf>
							  							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004622:	4a47      	ldr	r2, [pc, #284]	@ (8004740 <statemachine+0x11c8>)
 8004624:	4845      	ldr	r0, [pc, #276]	@ (800473c <statemachine+0x11c4>)
 8004626:	ca06      	ldmia	r2, {r1, r2}
 8004628:	2301      	movs	r3, #1
 800462a:	f7fe fc69 	bl	8002f00 <ssd1306_WriteString>
							  							ssd1306_SetCursor(32,42);
 800462e:	212a      	movs	r1, #42	@ 0x2a
 8004630:	2020      	movs	r0, #32
 8004632:	f7fe fc81 	bl	8002f38 <ssd1306_SetCursor>
							  							ssd1306_WriteString("alt(m)",Font_6x8,White);
 8004636:	e895 0006 	ldmia.w	r5, {r1, r2}
 800463a:	484f      	ldr	r0, [pc, #316]	@ (8004778 <statemachine+0x1200>)
 800463c:	2301      	movs	r3, #1
 800463e:	f7fe fc5f 	bl	8002f00 <ssd1306_WriteString>
							  if(BTN_B>=1){
 8004642:	4b41      	ldr	r3, [pc, #260]	@ (8004748 <statemachine+0x11d0>)
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	2a00      	cmp	r2, #0
 8004648:	f340 8228 	ble.w	8004a9c <statemachine+0x1524>
							  														  ecranstate++;
 800464c:	783a      	ldrb	r2, [r7, #0]
 800464e:	3201      	adds	r2, #1
 8004650:	e762      	b.n	8004518 <statemachine+0xfa0>
							  snprintf((char  *)bufferscreen,50,"%0.1f",GNSSData.fgSpeed*3.6);
 8004652:	4e3f      	ldr	r6, [pc, #252]	@ (8004750 <statemachine+0x11d8>)
							  ssd1306_WriteString("Vit(kmh)",Font_6x8,White);
 8004654:	4d37      	ldr	r5, [pc, #220]	@ (8004734 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",GNSSData.fgSpeed*3.6);
 8004656:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 800465a:	f7fb ff4d 	bl	80004f8 <__aeabi_f2d>
 800465e:	a330      	add	r3, pc, #192	@ (adr r3, 8004720 <statemachine+0x11a8>)
 8004660:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004664:	f7fb ffa0 	bl	80005a8 <__aeabi_dmul>
 8004668:	4a33      	ldr	r2, [pc, #204]	@ (8004738 <statemachine+0x11c0>)
 800466a:	e9cd 0100 	strd	r0, r1, [sp]
 800466e:	2132      	movs	r1, #50	@ 0x32
 8004670:	4832      	ldr	r0, [pc, #200]	@ (800473c <statemachine+0x11c4>)
 8004672:	f00b fe5d 	bl	8010330 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004676:	4a32      	ldr	r2, [pc, #200]	@ (8004740 <statemachine+0x11c8>)
 8004678:	4830      	ldr	r0, [pc, #192]	@ (800473c <statemachine+0x11c4>)
 800467a:	ca06      	ldmia	r2, {r1, r2}
 800467c:	2301      	movs	r3, #1
 800467e:	f7fe fc3f 	bl	8002f00 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 8004682:	212a      	movs	r1, #42	@ 0x2a
 8004684:	2020      	movs	r0, #32
 8004686:	f7fe fc57 	bl	8002f38 <ssd1306_SetCursor>
							  ssd1306_WriteString("Vit(kmh)",Font_6x8,White);
 800468a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800468e:	2301      	movs	r3, #1
 8004690:	483a      	ldr	r0, [pc, #232]	@ (800477c <statemachine+0x1204>)
 8004692:	f7fe fc35 	bl	8002f00 <ssd1306_WriteString>
							  if(BTN_B>=1){
 8004696:	4b2c      	ldr	r3, [pc, #176]	@ (8004748 <statemachine+0x11d0>)
 8004698:	681a      	ldr	r2, [r3, #0]
 800469a:	2a00      	cmp	r2, #0
 800469c:	f77f af42 	ble.w	8004524 <statemachine+0xfac>
							  														  ecranstate++;
 80046a0:	783a      	ldrb	r2, [r7, #0]
 80046a2:	4c2c      	ldr	r4, [pc, #176]	@ (8004754 <statemachine+0x11dc>)
 80046a4:	3201      	adds	r2, #1
 80046a6:	703a      	strb	r2, [r7, #0]
							  													  	BTN_B=0;
 80046a8:	2200      	movs	r2, #0
 80046aa:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 80046ac:	4b27      	ldr	r3, [pc, #156]	@ (800474c <statemachine+0x11d4>)
 80046ae:	601a      	str	r2, [r3, #0]
 80046b0:	e739      	b.n	8004526 <statemachine+0xfae>
							  snprintf((char  *)bufferscreen,50,"%0.3lf",distanceparcouru/1000);
 80046b2:	4933      	ldr	r1, [pc, #204]	@ (8004780 <statemachine+0x1208>)
							  ssd1306_WriteString("Dist(km)",Font_6x8,White);
 80046b4:	4d1f      	ldr	r5, [pc, #124]	@ (8004734 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.3lf",distanceparcouru/1000);
 80046b6:	a31c      	add	r3, pc, #112	@ (adr r3, 8004728 <statemachine+0x11b0>)
 80046b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80046c0:	f7fb ff72 	bl	80005a8 <__aeabi_dmul>
 80046c4:	4a2f      	ldr	r2, [pc, #188]	@ (8004784 <statemachine+0x120c>)
 80046c6:	e9cd 0100 	strd	r0, r1, [sp]
 80046ca:	2132      	movs	r1, #50	@ 0x32
 80046cc:	481b      	ldr	r0, [pc, #108]	@ (800473c <statemachine+0x11c4>)
 80046ce:	f00b fe2f 	bl	8010330 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80046d2:	4a1b      	ldr	r2, [pc, #108]	@ (8004740 <statemachine+0x11c8>)
 80046d4:	4819      	ldr	r0, [pc, #100]	@ (800473c <statemachine+0x11c4>)
 80046d6:	ca06      	ldmia	r2, {r1, r2}
 80046d8:	2301      	movs	r3, #1
 80046da:	f7fe fc11 	bl	8002f00 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 80046de:	212a      	movs	r1, #42	@ 0x2a
 80046e0:	2020      	movs	r0, #32
 80046e2:	f7fe fc29 	bl	8002f38 <ssd1306_SetCursor>
							  ssd1306_WriteString("Dist(km)",Font_6x8,White);
 80046e6:	e895 0006 	ldmia.w	r5, {r1, r2}
 80046ea:	4827      	ldr	r0, [pc, #156]	@ (8004788 <statemachine+0x1210>)
 80046ec:	2301      	movs	r3, #1
 80046ee:	e7a6      	b.n	800463e <statemachine+0x10c6>
							  snprintf((char *)bufferscreen,50,"%d",pagenumber);
 80046f0:	4b26      	ldr	r3, [pc, #152]	@ (800478c <statemachine+0x1214>)
 80046f2:	4a27      	ldr	r2, [pc, #156]	@ (8004790 <statemachine+0x1218>)
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	4811      	ldr	r0, [pc, #68]	@ (800473c <statemachine+0x11c4>)
							  ssd1306_WriteString("PageNb",Font_6x8,White);
 80046f8:	4d0e      	ldr	r5, [pc, #56]	@ (8004734 <statemachine+0x11bc>)
							  snprintf((char *)bufferscreen,50,"%d",pagenumber);
 80046fa:	2132      	movs	r1, #50	@ 0x32
 80046fc:	f00b fe18 	bl	8010330 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004700:	4a0f      	ldr	r2, [pc, #60]	@ (8004740 <statemachine+0x11c8>)
 8004702:	480e      	ldr	r0, [pc, #56]	@ (800473c <statemachine+0x11c4>)
 8004704:	ca06      	ldmia	r2, {r1, r2}
 8004706:	2301      	movs	r3, #1
 8004708:	f7fe fbfa 	bl	8002f00 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 800470c:	212a      	movs	r1, #42	@ 0x2a
 800470e:	2020      	movs	r0, #32
 8004710:	f7fe fc12 	bl	8002f38 <ssd1306_SetCursor>
							  ssd1306_WriteString("PageNb",Font_6x8,White);
 8004714:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004718:	481e      	ldr	r0, [pc, #120]	@ (8004794 <statemachine+0x121c>)
 800471a:	2301      	movs	r3, #1
 800471c:	e78f      	b.n	800463e <statemachine+0x10c6>
 800471e:	bf00      	nop
 8004720:	cccccccd 	.word	0xcccccccd
 8004724:	400ccccc 	.word	0x400ccccc
 8004728:	d2f1a9fc 	.word	0xd2f1a9fc
 800472c:	3f50624d 	.word	0x3f50624d
 8004730:	2000063c 	.word	0x2000063c
 8004734:	2000002c 	.word	0x2000002c
 8004738:	08016024 	.word	0x08016024
 800473c:	20000680 	.word	0x20000680
 8004740:	20000024 	.word	0x20000024
 8004744:	080160b8 	.word	0x080160b8
 8004748:	20000ff4 	.word	0x20000ff4
 800474c:	20000ff8 	.word	0x20000ff8
 8004750:	20000510 	.word	0x20000510
 8004754:	20000fc0 	.word	0x20000fc0
 8004758:	080160c0 	.word	0x080160c0
 800475c:	080160c8 	.word	0x080160c8
 8004760:	200005e4 	.word	0x200005e4
 8004764:	200003f4 	.word	0x200003f4
 8004768:	48000400 	.word	0x48000400
 800476c:	080160b0 	.word	0x080160b0
 8004770:	20000408 	.word	0x20000408
 8004774:	080160a0 	.word	0x080160a0
 8004778:	080160a8 	.word	0x080160a8
 800477c:	0801602c 	.word	0x0801602c
 8004780:	20000610 	.word	0x20000610
 8004784:	0801608c 	.word	0x0801608c
 8004788:	08016094 	.word	0x08016094
 800478c:	200006b8 	.word	0x200006b8
 8004790:	08016080 	.word	0x08016080
 8004794:	08016084 	.word	0x08016084
				  						ssd1306_SetCursor(32, 32);
 8004798:	2120      	movs	r1, #32
 800479a:	4608      	mov	r0, r1
 800479c:	f7fe fbcc 	bl	8002f38 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "%0.0fmin%0.0fs",floor(pace),floor(sec));
 80047a0:	eeb0 0a49 	vmov.f32	s0, s18
 80047a4:	eef0 0a69 	vmov.f32	s1, s19
 80047a8:	f00f fb0e 	bl	8013dc8 <floor>
 80047ac:	ee18 0a10 	vmov	r0, s16
 80047b0:	eeb0 8a40 	vmov.f32	s16, s0
 80047b4:	eef0 8a60 	vmov.f32	s17, s1
 80047b8:	f7fb fe9e 	bl	80004f8 <__aeabi_f2d>
 80047bc:	ec41 0b10 	vmov	d0, r0, r1
 80047c0:	f00f fb02 	bl	8013dc8 <floor>
 80047c4:	4aba      	ldr	r2, [pc, #744]	@ (8004ab0 <statemachine+0x1538>)
 80047c6:	48bb      	ldr	r0, [pc, #748]	@ (8004ab4 <statemachine+0x153c>)
				  						ssd1306_WriteString("pace", Font_6x8, White);
 80047c8:	4dbb      	ldr	r5, [pc, #748]	@ (8004ab8 <statemachine+0x1540>)
				  						snprintf((char *)bufferscreen,15, "%0.0fmin%0.0fs",floor(pace),floor(sec));
 80047ca:	ed8d 0b02 	vstr	d0, [sp, #8]
 80047ce:	210f      	movs	r1, #15
 80047d0:	ed8d 8b00 	vstr	d8, [sp]
 80047d4:	f00b fdac 	bl	8010330 <sniprintf>
				  						ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80047d8:	4ab8      	ldr	r2, [pc, #736]	@ (8004abc <statemachine+0x1544>)
 80047da:	48b6      	ldr	r0, [pc, #728]	@ (8004ab4 <statemachine+0x153c>)
 80047dc:	ca06      	ldmia	r2, {r1, r2}
 80047de:	2301      	movs	r3, #1
 80047e0:	f7fe fb8e 	bl	8002f00 <ssd1306_WriteString>
				  						ssd1306_SetCursor(32, 42);
 80047e4:	212a      	movs	r1, #42	@ 0x2a
 80047e6:	2020      	movs	r0, #32
 80047e8:	f7fe fba6 	bl	8002f38 <ssd1306_SetCursor>
				  						ssd1306_WriteString("pace", Font_6x8, White);
 80047ec:	e895 0006 	ldmia.w	r5, {r1, r2}
 80047f0:	2301      	movs	r3, #1
 80047f2:	48b3      	ldr	r0, [pc, #716]	@ (8004ac0 <statemachine+0x1548>)
 80047f4:	f7fe fb84 	bl	8002f00 <ssd1306_WriteString>
				  						ssd1306_SetCursor(32, 56);
 80047f8:	2138      	movs	r1, #56	@ 0x38
 80047fa:	2020      	movs	r0, #32
 80047fc:	f7fe fb9c 	bl	8002f38 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "V=%0.1fkmh",vitmax*3.6);
 8004800:	6838      	ldr	r0, [r7, #0]
 8004802:	f7fb fe79 	bl	80004f8 <__aeabi_f2d>
 8004806:	a3a8      	add	r3, pc, #672	@ (adr r3, 8004aa8 <statemachine+0x1530>)
 8004808:	e9d3 2300 	ldrd	r2, r3, [r3]
 800480c:	f7fb fecc 	bl	80005a8 <__aeabi_dmul>
 8004810:	4aac      	ldr	r2, [pc, #688]	@ (8004ac4 <statemachine+0x154c>)
 8004812:	e9cd 0100 	strd	r0, r1, [sp]
 8004816:	210f      	movs	r1, #15
 8004818:	48a6      	ldr	r0, [pc, #664]	@ (8004ab4 <statemachine+0x153c>)
 800481a:	f00b fd89 	bl	8010330 <sniprintf>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800481e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004822:	2301      	movs	r3, #1
 8004824:	48a3      	ldr	r0, [pc, #652]	@ (8004ab4 <statemachine+0x153c>)
 8004826:	f7fe fb6b 	bl	8002f00 <ssd1306_WriteString>
				  						batterygauge(vbat,79, 43,1);
 800482a:	4ba7      	ldr	r3, [pc, #668]	@ (8004ac8 <statemachine+0x1550>)
 800482c:	2201      	movs	r2, #1
 800482e:	ed93 0a00 	vldr	s0, [r3]
 8004832:	212b      	movs	r1, #43	@ 0x2b
 8004834:	204f      	movs	r0, #79	@ 0x4f
 8004836:	f7fe fc3b 	bl	80030b0 <batterygauge>
				  					 if(BTN_B>=1){
 800483a:	4ba4      	ldr	r3, [pc, #656]	@ (8004acc <statemachine+0x1554>)
 800483c:	681a      	ldr	r2, [r3, #0]
 800483e:	2a00      	cmp	r2, #0
 8004840:	f77e af80 	ble.w	8003744 <statemachine+0x1cc>
				  								spdstate--;
 8004844:	f898 2000 	ldrb.w	r2, [r8]
 8004848:	3a02      	subs	r2, #2
 800484a:	f888 2000 	strb.w	r2, [r8]
				  								BTN_B=0;
 800484e:	2200      	movs	r2, #0
 8004850:	601a      	str	r2, [r3, #0]
 8004852:	f7fe bf77 	b.w	8003744 <statemachine+0x1cc>
				 					 if(BTN_A>=1){
 8004856:	f8df b2d4 	ldr.w	fp, [pc, #724]	@ 8004b2c <statemachine+0x15b4>
 800485a:	f8db 0000 	ldr.w	r0, [fp]
 800485e:	2800      	cmp	r0, #0
 8004860:	f77f a8e1 	ble.w	8003a26 <statemachine+0x4ae>
				 						 state++;
 8004864:	7820      	ldrb	r0, [r4, #0]
				 									  			 	BTN_A=0;
 8004866:	f8cb 1000 	str.w	r1, [fp]
				 						 state++;
 800486a:	3001      	adds	r0, #1
 800486c:	7020      	strb	r0, [r4, #0]
				 									  			 	BTN_B=0;
 800486e:	6011      	str	r1, [r2, #0]
				 					if(BTN_A_LONG>=1){
 8004870:	f7ff b8d9 	b.w	8003a26 <statemachine+0x4ae>
						 					 if(BTN_A>=1){
 8004874:	f8df b2b4 	ldr.w	fp, [pc, #692]	@ 8004b2c <statemachine+0x15b4>
 8004878:	f8db 1000 	ldr.w	r1, [fp]
 800487c:	2900      	cmp	r1, #0
 800487e:	f77f a8d2 	ble.w	8003a26 <statemachine+0x4ae>
						 						 	state++;
 8004882:	7821      	ldrb	r1, [r4, #0]
						 							BTN_A=0;
 8004884:	2000      	movs	r0, #0
						 						 	state++;
 8004886:	3101      	adds	r1, #1
 8004888:	7021      	strb	r1, [r4, #0]
						 							BTN_A=0;
 800488a:	f8cb 0000 	str.w	r0, [fp]
						 							BTN_B=0;
 800488e:	6010      	str	r0, [r2, #0]
 8004890:	f7ff b8c9 	b.w	8003a26 <statemachine+0x4ae>
						  if(timecounter%2==0){
 8004894:	07db      	lsls	r3, r3, #31
 8004896:	f53f aa5d 	bmi.w	8003d54 <statemachine+0x7dc>
 800489a:	f7ff ba51 	b.w	8003d40 <statemachine+0x7c8>
							osThreadResume(BALISEHandle);
 800489e:	4a8c      	ldr	r2, [pc, #560]	@ (8004ad0 <statemachine+0x1558>)
							BTN_A=0;
 80048a0:	f8df b288 	ldr.w	fp, [pc, #648]	@ 8004b2c <statemachine+0x15b4>
							osThreadResume(BALISEHandle);
 80048a4:	6810      	ldr	r0, [r2, #0]
							balisestate++;
 80048a6:	f898 2000 	ldrb.w	r2, [r8]
							BTN_B_LONG=0;
 80048aa:	601d      	str	r5, [r3, #0]
							BTN_A=0;
 80048ac:	f8cb 5000 	str.w	r5, [fp]
							oldlat=GNSSData.fLat;
 80048b0:	4d88      	ldr	r5, [pc, #544]	@ (8004ad4 <statemachine+0x155c>)
 80048b2:	4e89      	ldr	r6, [pc, #548]	@ (8004ad8 <statemachine+0x1560>)
							balisestate++;
 80048b4:	3201      	adds	r2, #1
 80048b6:	f888 2000 	strb.w	r2, [r8]
							osThreadResume(BALISEHandle);
 80048ba:	f008 fe4b 	bl	800d554 <osThreadResume>
							oldlat=GNSSData.fLat;
 80048be:	f8d5 0090 	ldr.w	r0, [r5, #144]	@ 0x90
 80048c2:	f7fb fe19 	bl	80004f8 <__aeabi_f2d>
 80048c6:	e9c6 0100 	strd	r0, r1, [r6]
							oldlong=GNSSData.fLon;
 80048ca:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 80048ce:	4d83      	ldr	r5, [pc, #524]	@ (8004adc <statemachine+0x1564>)
 80048d0:	f7fb fe12 	bl	80004f8 <__aeabi_f2d>
 80048d4:	e9c5 0100 	strd	r0, r1, [r5]
 80048d8:	f7fe bf96 	b.w	8003808 <statemachine+0x290>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80048dc:	4f80      	ldr	r7, [pc, #512]	@ (8004ae0 <statemachine+0x1568>)
				 						erasetime=HAL_GetTick();
 80048de:	f000 ff31 	bl	8005744 <HAL_GetTick>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80048e2:	683a      	ldr	r2, [r7, #0]
				 						erasetime=HAL_GetTick();
 80048e4:	4b7f      	ldr	r3, [pc, #508]	@ (8004ae4 <statemachine+0x156c>)
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80048e6:	320f      	adds	r2, #15
				 						erasetime=HAL_GetTick();
 80048e8:	6018      	str	r0, [r3, #0]
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80048ea:	db38      	blt.n	800495e <statemachine+0x13e6>
 80048ec:	2600      	movs	r6, #0
				 								percentage((float) 0);
 80048ee:	ed9f 8a7e 	vldr	s16, [pc, #504]	@ 8004ae8 <statemachine+0x1570>
				 							ssd1306_WriteString("usb",Font_6x8,White);
 80048f2:	f8df 923c 	ldr.w	r9, [pc, #572]	@ 8004b30 <statemachine+0x15b8>
				 							SPIF_EraseSector(&hspif1,i);
 80048f6:	f8df 81f4 	ldr.w	r8, [pc, #500]	@ 8004aec <statemachine+0x1574>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80048fa:	4634      	mov	r4, r6
				 							ssd1306_Fill(Black);
 80048fc:	2000      	movs	r0, #0
 80048fe:	f7fe f857 	bl	80029b0 <ssd1306_Fill>
				 							ssd1306_SetCursor(32,32);
 8004902:	2120      	movs	r1, #32
 8004904:	4608      	mov	r0, r1
 8004906:	f7fe fb17 	bl	8002f38 <ssd1306_SetCursor>
				 							ssd1306_WriteString("usb",Font_6x8,White);
 800490a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800490e:	2301      	movs	r3, #1
 8004910:	4648      	mov	r0, r9
 8004912:	f7fe faf5 	bl	8002f00 <ssd1306_WriteString>
				 							SPIF_EraseSector(&hspif1,i);
 8004916:	4621      	mov	r1, r4
 8004918:	4640      	mov	r0, r8
 800491a:	f00a f985 	bl	800ec28 <SPIF_EraseSector>
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 800491e:	ee07 6a90 	vmov	s15, r6
				 								percentage((float) 0);
 8004922:	eeb0 0a48 	vmov.f32	s0, s16
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004926:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				 							if(i>=1){
 800492a:	b394      	cbz	r4, 8004992 <statemachine+0x141a>
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 800492c:	683b      	ldr	r3, [r7, #0]
 800492e:	2b00      	cmp	r3, #0
 8004930:	bfb8      	it	lt
 8004932:	330f      	addlt	r3, #15
 8004934:	111b      	asrs	r3, r3, #4
 8004936:	ee07 3a10 	vmov	s14, r3
 800493a:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800493e:	3401      	adds	r4, #1
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004940:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8004944:	f7fe fd0c 	bl	8003360 <percentage>
				 							ssd1306_UpdateScreen();
 8004948:	f7fe f83e 	bl	80029c8 <ssd1306_UpdateScreen>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800494c:	683b      	ldr	r3, [r7, #0]
 800494e:	2b00      	cmp	r3, #0
 8004950:	bfb8      	it	lt
 8004952:	330f      	addlt	r3, #15
 8004954:	ebb4 1f23 	cmp.w	r4, r3, asr #4
 8004958:	f106 0664 	add.w	r6, r6, #100	@ 0x64
 800495c:	ddce      	ble.n	80048fc <statemachine+0x1384>
				 						SPIF_EraseSector(&hspif1, (int)floor((MAX_WRITE_PAGE+1)/16));
 800495e:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
 8004962:	4862      	ldr	r0, [pc, #392]	@ (8004aec <statemachine+0x1574>)
 8004964:	f00a f960 	bl	800ec28 <SPIF_EraseSector>
				 						erasetime=HAL_GetTick()-erasetime;
 8004968:	f000 feec 	bl	8005744 <HAL_GetTick>
 800496c:	4b5d      	ldr	r3, [pc, #372]	@ (8004ae4 <statemachine+0x156c>)
				 						pageoffset=0;
 800496e:	4960      	ldr	r1, [pc, #384]	@ (8004af0 <statemachine+0x1578>)
				 						erasetime=HAL_GetTick()-erasetime;
 8004970:	681a      	ldr	r2, [r3, #0]
 8004972:	1a82      	subs	r2, r0, r2
				 						pageoffset=0;
 8004974:	2400      	movs	r4, #0
				 						erasetime=HAL_GetTick()-erasetime;
 8004976:	601a      	str	r2, [r3, #0]
				 						erasedisplay=1;
 8004978:	2201      	movs	r2, #1
 800497a:	f8ca 2000 	str.w	r2, [sl]
				 						pageoffset=0;
 800497e:	600c      	str	r4, [r1, #0]
				 						pagenumber=0;
 8004980:	603c      	str	r4, [r7, #0]
				 						storeindex();
 8004982:	f7fd fe3f 	bl	8002604 <storeindex>
				 						BTN_B=0;
 8004986:	4a51      	ldr	r2, [pc, #324]	@ (8004acc <statemachine+0x1554>)
				 						BTN_A=0;
 8004988:	f8cb 4000 	str.w	r4, [fp]
				 						BTN_B=0;
 800498c:	6014      	str	r4, [r2, #0]
				 					if(BTN_B>=1){
 800498e:	f7fe be7a 	b.w	8003686 <statemachine+0x10e>
				 								percentage((float) 0);
 8004992:	f7fe fce5 	bl	8003360 <percentage>
				 							ssd1306_UpdateScreen();
 8004996:	f7fe f817 	bl	80029c8 <ssd1306_UpdateScreen>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800499a:	683b      	ldr	r3, [r7, #0]
 800499c:	2b0f      	cmp	r3, #15
 800499e:	f04f 0401 	mov.w	r4, #1
 80049a2:	f106 0664 	add.w	r6, r6, #100	@ 0x64
 80049a6:	dca9      	bgt.n	80048fc <statemachine+0x1384>
 80049a8:	e7d9      	b.n	800495e <statemachine+0x13e6>
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 80049aa:	4a48      	ldr	r2, [pc, #288]	@ (8004acc <statemachine+0x1554>)
 80049ac:	4d51      	ldr	r5, [pc, #324]	@ (8004af4 <statemachine+0x157c>)
 80049ae:	6811      	ldr	r1, [r2, #0]
 80049b0:	6828      	ldr	r0, [r5, #0]
 80049b2:	2900      	cmp	r1, #0
 80049b4:	f340 810b 	ble.w	8004bce <statemachine+0x1656>
							 time50kmh=0.0;
 80049b8:	2100      	movs	r1, #0
							 time100kmh=0.0;
 80049ba:	6031      	str	r1, [r6, #0]
							 flag_50kmh=0;
 80049bc:	4b4e      	ldr	r3, [pc, #312]	@ (8004af8 <statemachine+0x1580>)
							 flag_100kmh=0;
 80049be:	4e4f      	ldr	r6, [pc, #316]	@ (8004afc <statemachine+0x1584>)
							 time50kmh=0.0;
 80049c0:	f8c8 1000 	str.w	r1, [r8]
							 flag_50kmh=0;
 80049c4:	2100      	movs	r1, #0
		 					if(BTN_A_LONG>=1){
 80049c6:	4288      	cmp	r0, r1
							 flag_50kmh=0;
 80049c8:	6019      	str	r1, [r3, #0]
							 flag_100kmh=0;
 80049ca:	6031      	str	r1, [r6, #0]
							 accelstate=WAITFORGPS;
 80049cc:	7039      	strb	r1, [r7, #0]
			 								state--;
 80049ce:	bfc8      	it	gt
 80049d0:	7821      	ldrbgt	r1, [r4, #0]
		 					if(BTN_A_LONG>=1){
 80049d2:	f73f a946 	bgt.w	8003c62 <statemachine+0x6ea>
		 						BTN_B=0;
 80049d6:	6011      	str	r1, [r2, #0]
return ;
 80049d8:	f7fe be55 	b.w	8003686 <statemachine+0x10e>
						  if(BTN_A>=1){
 80049dc:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8004b2c <statemachine+0x15b4>
						  timecounter++;
 80049e0:	682a      	ldr	r2, [r5, #0]
						  if(BTN_A>=1){
 80049e2:	f8db 1000 	ldr.w	r1, [fp]
						  timecounter++;
 80049e6:	3201      	adds	r2, #1
						  if(BTN_A>=1){
 80049e8:	2900      	cmp	r1, #0
						  timecounter++;
 80049ea:	602a      	str	r2, [r5, #0]
						  if(BTN_A>=1){
 80049ec:	f73f a9d6 	bgt.w	8003d9c <statemachine+0x824>
 80049f0:	f7fe be3c 	b.w	800366c <statemachine+0xf4>
							  snprintf((char *)bufferscreen,15, "%d",3-counterforstart);
 80049f4:	4c42      	ldr	r4, [pc, #264]	@ (8004b00 <statemachine+0x1588>)
							  ssd1306_SetCursor(56,40);
 80049f6:	2038      	movs	r0, #56	@ 0x38
 80049f8:	f7fe fa9e 	bl	8002f38 <ssd1306_SetCursor>
							  snprintf((char *)bufferscreen,15, "%d",3-counterforstart);
 80049fc:	6823      	ldr	r3, [r4, #0]
 80049fe:	4a41      	ldr	r2, [pc, #260]	@ (8004b04 <statemachine+0x158c>)
 8004a00:	482c      	ldr	r0, [pc, #176]	@ (8004ab4 <statemachine+0x153c>)
 8004a02:	210f      	movs	r1, #15
 8004a04:	f1c3 0303 	rsb	r3, r3, #3
 8004a08:	f00b fc92 	bl	8010330 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 8004a0c:	4a3e      	ldr	r2, [pc, #248]	@ (8004b08 <statemachine+0x1590>)
 8004a0e:	4829      	ldr	r0, [pc, #164]	@ (8004ab4 <statemachine+0x153c>)
 8004a10:	2301      	movs	r3, #1
 8004a12:	ca06      	ldmia	r2, {r1, r2}
 8004a14:	f7fe fa74 	bl	8002f00 <ssd1306_WriteString>
							  if(counterforstart==3){
 8004a18:	6823      	ldr	r3, [r4, #0]
 8004a1a:	2b03      	cmp	r3, #3
 8004a1c:	f000 8105 	beq.w	8004c2a <statemachine+0x16b2>
 8004a20:	4d3a      	ldr	r5, [pc, #232]	@ (8004b0c <statemachine+0x1594>)
							  indexcounterforstart++;
 8004a22:	682b      	ldr	r3, [r5, #0]
 8004a24:	493a      	ldr	r1, [pc, #232]	@ (8004b10 <statemachine+0x1598>)
 8004a26:	4a3b      	ldr	r2, [pc, #236]	@ (8004b14 <statemachine+0x159c>)
 8004a28:	3301      	adds	r3, #1
 8004a2a:	fb01 2203 	mla	r2, r1, r3, r2
							  if(indexcounterforstart%10==0){
 8004a2e:	493a      	ldr	r1, [pc, #232]	@ (8004b18 <statemachine+0x15a0>)
							  indexcounterforstart++;
 8004a30:	602b      	str	r3, [r5, #0]
							  if(indexcounterforstart%10==0){
 8004a32:	ebb1 0f72 	cmp.w	r1, r2, ror #1
 8004a36:	f67e ae26 	bls.w	8003686 <statemachine+0x10e>
								  counterforstart++;
 8004a3a:	6823      	ldr	r3, [r4, #0]
 8004a3c:	3301      	adds	r3, #1
 8004a3e:	6023      	str	r3, [r4, #0]
 8004a40:	f7fe be21 	b.w	8003686 <statemachine+0x10e>
				 					ssd1306_WriteString("push A",Font_6x8,White);
 8004a44:	4d1c      	ldr	r5, [pc, #112]	@ (8004ab8 <statemachine+0x1540>)
				 					if(BTN_A>=1){
 8004a46:	f8df b0e4 	ldr.w	fp, [pc, #228]	@ 8004b2c <statemachine+0x15b4>
				 					ssd1306_Fill(Black);
 8004a4a:	f7fd ffb1 	bl	80029b0 <ssd1306_Fill>
				 					ssd1306_SetCursor(32,40);
 8004a4e:	2128      	movs	r1, #40	@ 0x28
 8004a50:	2020      	movs	r0, #32
 8004a52:	f7fe fa71 	bl	8002f38 <ssd1306_SetCursor>
				 					ssd1306_WriteString("push A",Font_6x8,White);
 8004a56:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004a5a:	2301      	movs	r3, #1
 8004a5c:	482f      	ldr	r0, [pc, #188]	@ (8004b1c <statemachine+0x15a4>)
 8004a5e:	f7fe fa4f 	bl	8002f00 <ssd1306_WriteString>
				 					ssd1306_SetCursor(32,32);
 8004a62:	2120      	movs	r1, #32
 8004a64:	4608      	mov	r0, r1
 8004a66:	f7fe fa67 	bl	8002f38 <ssd1306_SetCursor>
				 					ssd1306_WriteString("write",Font_6x8,White);
 8004a6a:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004a6e:	482c      	ldr	r0, [pc, #176]	@ (8004b20 <statemachine+0x15a8>)
 8004a70:	2301      	movs	r3, #1
 8004a72:	f7fe fa45 	bl	8002f00 <ssd1306_WriteString>
				 					if(BTN_A>=1){
 8004a76:	f8db 2000 	ldr.w	r2, [fp]
 8004a7a:	2a00      	cmp	r2, #0
 8004a7c:	f77e ae03 	ble.w	8003686 <statemachine+0x10e>
				 					if(usbtransmiten==0){
 8004a80:	6822      	ldr	r2, [r4, #0]
 8004a82:	2a00      	cmp	r2, #0
 8004a84:	f47f a80a 	bne.w	8003a9c <statemachine+0x524>
				 						osThreadResume(USBTRANSMITHandle);
 8004a88:	4826      	ldr	r0, [pc, #152]	@ (8004b24 <statemachine+0x15ac>)
				 						usbtransmitstate=STATE_UNDER16PAGES1;
 8004a8a:	4927      	ldr	r1, [pc, #156]	@ (8004b28 <statemachine+0x15b0>)
				 						osThreadResume(USBTRANSMITHandle);
 8004a8c:	6800      	ldr	r0, [r0, #0]
				 						usbtransmitstate=STATE_UNDER16PAGES1;
 8004a8e:	700a      	strb	r2, [r1, #0]
				 						osThreadResume(USBTRANSMITHandle);
 8004a90:	f008 fd60 	bl	800d554 <osThreadResume>
				 					usbtransmiten=1;
 8004a94:	2201      	movs	r2, #1
 8004a96:	6022      	str	r2, [r4, #0]
 8004a98:	f7ff b800 	b.w	8003a9c <statemachine+0x524>
 8004a9c:	4e0d      	ldr	r6, [pc, #52]	@ (8004ad4 <statemachine+0x155c>)
 8004a9e:	4c0a      	ldr	r4, [pc, #40]	@ (8004ac8 <statemachine+0x1550>)
 8004aa0:	e541      	b.n	8004526 <statemachine+0xfae>
 8004aa2:	bf00      	nop
 8004aa4:	f3af 8000 	nop.w
 8004aa8:	cccccccd 	.word	0xcccccccd
 8004aac:	400ccccc 	.word	0x400ccccc
 8004ab0:	08016040 	.word	0x08016040
 8004ab4:	20000680 	.word	0x20000680
 8004ab8:	2000002c 	.word	0x2000002c
 8004abc:	20000024 	.word	0x20000024
 8004ac0:	08016050 	.word	0x08016050
 8004ac4:	08016058 	.word	0x08016058
 8004ac8:	20000fc0 	.word	0x20000fc0
 8004acc:	20000ff4 	.word	0x20000ff4
 8004ad0:	200003f4 	.word	0x200003f4
 8004ad4:	20000510 	.word	0x20000510
 8004ad8:	20000608 	.word	0x20000608
 8004adc:	20000600 	.word	0x20000600
 8004ae0:	200006b8 	.word	0x200006b8
 8004ae4:	20000620 	.word	0x20000620
 8004ae8:	00000000 	.word	0x00000000
 8004aec:	20000fd4 	.word	0x20000fd4
 8004af0:	200006bc 	.word	0x200006bc
 8004af4:	200005e0 	.word	0x200005e0
 8004af8:	20001544 	.word	0x20001544
 8004afc:	20001540 	.word	0x20001540
 8004b00:	2000154c 	.word	0x2000154c
 8004b04:	08016080 	.word	0x08016080
 8004b08:	2000001c 	.word	0x2000001c
 8004b0c:	20001548 	.word	0x20001548
 8004b10:	cccccccd 	.word	0xcccccccd
 8004b14:	19999998 	.word	0x19999998
 8004b18:	19999999 	.word	0x19999999
 8004b1c:	08016210 	.word	0x08016210
 8004b20:	08016218 	.word	0x08016218
 8004b24:	200003f0 	.word	0x200003f0
 8004b28:	200017f8 	.word	0x200017f8
 8004b2c:	20000ff8 	.word	0x20000ff8
 8004b30:	080161e0 	.word	0x080161e0
			  							HR=GNSSData.hour;
 8004b34:	4a4a      	ldr	r2, [pc, #296]	@ (8004c60 <statemachine+0x16e8>)
 8004b36:	4e4b      	ldr	r6, [pc, #300]	@ (8004c64 <statemachine+0x16ec>)
			  							MINUTE=GNSSData.min;
 8004b38:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 8004c9c <statemachine+0x1724>
			  							SEC=GNSSData.sec;
 8004b3c:	4f4a      	ldr	r7, [pc, #296]	@ (8004c68 <statemachine+0x16f0>)
			  							HR=GNSSData.hour;
 8004b3e:	f892 0074 	ldrb.w	r0, [r2, #116]	@ 0x74
 8004b42:	7030      	strb	r0, [r6, #0]
			  							settimeen=1;
 8004b44:	2101      	movs	r1, #1
 8004b46:	6019      	str	r1, [r3, #0]
			  							MINUTE=GNSSData.min;
 8004b48:	f892 1075 	ldrb.w	r1, [r2, #117]	@ 0x75
			  							SEC=GNSSData.sec;
 8004b4c:	f892 2076 	ldrb.w	r2, [r2, #118]	@ 0x76
			  							MINUTE=GNSSData.min;
 8004b50:	f888 1000 	strb.w	r1, [r8]
			  							SEC=GNSSData.sec;
 8004b54:	703a      	strb	r2, [r7, #0]
			  							set_time (HR, MINUTE, SEC);
 8004b56:	f7fd fc13 	bl	8002380 <set_time>
 8004b5a:	f7ff b98f 	b.w	8003e7c <statemachine+0x904>
					 					 ssd1306_Fill(Black);
 8004b5e:	2000      	movs	r0, #0
 8004b60:	f7fd ff26 	bl	80029b0 <ssd1306_Fill>
					 					 ssd1306_SetCursor(32,32);
 8004b64:	2120      	movs	r1, #32
 8004b66:	4608      	mov	r0, r1
 8004b68:	f7fe f9e6 	bl	8002f38 <ssd1306_SetCursor>
					 					ssd1306_WriteString("usb",Font_6x8,White);
 8004b6c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004b70:	4623      	mov	r3, r4
 8004b72:	483e      	ldr	r0, [pc, #248]	@ (8004c6c <statemachine+0x16f4>)
 8004b74:	f7fe f9c4 	bl	8002f00 <ssd1306_WriteString>
					 					ssd1306_SetCursor(32,42);
 8004b78:	212a      	movs	r1, #42	@ 0x2a
 8004b7a:	2020      	movs	r0, #32
 8004b7c:	f7fe f9dc 	bl	8002f38 <ssd1306_SetCursor>
					 					ssd1306_WriteString("FIN",Font_7x10,White);
 8004b80:	4b3b      	ldr	r3, [pc, #236]	@ (8004c70 <statemachine+0x16f8>)
 8004b82:	483c      	ldr	r0, [pc, #240]	@ (8004c74 <statemachine+0x16fc>)
 8004b84:	e893 0006 	ldmia.w	r3, {r1, r2}
 8004b88:	4623      	mov	r3, r4
 8004b8a:	f7fe f9b9 	bl	8002f00 <ssd1306_WriteString>
					 					ssd1306_SetCursor(32,56);
 8004b8e:	2138      	movs	r1, #56	@ 0x38
 8004b90:	2020      	movs	r0, #32
 8004b92:	f7fe f9d1 	bl	8002f38 <ssd1306_SetCursor>
				 						snprintf((char  *)bufferscreen,50,"t=%0.2f",(float)erasetime/1000);
 8004b96:	4b38      	ldr	r3, [pc, #224]	@ (8004c78 <statemachine+0x1700>)
 8004b98:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8004c7c <statemachine+0x1704>
 8004b9c:	edd3 7a00 	vldr	s15, [r3]
 8004ba0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ba4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ba8:	ee17 0a90 	vmov	r0, s15
 8004bac:	f7fb fca4 	bl	80004f8 <__aeabi_f2d>
 8004bb0:	4a33      	ldr	r2, [pc, #204]	@ (8004c80 <statemachine+0x1708>)
 8004bb2:	e9cd 0100 	strd	r0, r1, [sp]
 8004bb6:	2132      	movs	r1, #50	@ 0x32
 8004bb8:	4832      	ldr	r0, [pc, #200]	@ (8004c84 <statemachine+0x170c>)
 8004bba:	f00b fbb9 	bl	8010330 <sniprintf>
				 						ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004bbe:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004bc2:	4623      	mov	r3, r4
 8004bc4:	482f      	ldr	r0, [pc, #188]	@ (8004c84 <statemachine+0x170c>)
 8004bc6:	f7fe f99b 	bl	8002f00 <ssd1306_WriteString>
 8004bca:	f7fe bf94 	b.w	8003af6 <statemachine+0x57e>
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 8004bce:	2800      	cmp	r0, #0
 8004bd0:	f77e ad59 	ble.w	8003686 <statemachine+0x10e>
							 time50kmh=0.0;
 8004bd4:	2100      	movs	r1, #0
							 time100kmh=0.0;
 8004bd6:	6031      	str	r1, [r6, #0]
							 flag_100kmh=0;
 8004bd8:	482b      	ldr	r0, [pc, #172]	@ (8004c88 <statemachine+0x1710>)
							 flag_50kmh=0;
 8004bda:	4e2c      	ldr	r6, [pc, #176]	@ (8004c8c <statemachine+0x1714>)
							 time50kmh=0.0;
 8004bdc:	f8c8 1000 	str.w	r1, [r8]
							 flag_50kmh=0;
 8004be0:	2100      	movs	r1, #0
 8004be2:	6031      	str	r1, [r6, #0]
							 flag_100kmh=0;
 8004be4:	6001      	str	r1, [r0, #0]
							 accelstate=WAITFORGPS;
 8004be6:	7039      	strb	r1, [r7, #0]
			 								state--;
 8004be8:	7821      	ldrb	r1, [r4, #0]
 8004bea:	f7ff b83a 	b.w	8003c62 <statemachine+0x6ea>
							  time100kmh=(float)(htim16.Instance->CNT/1000.0);
 8004bee:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8004ca0 <statemachine+0x1728>
 8004bf2:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8004ca4 <statemachine+0x172c>
 8004bf6:	f8d8 3000 	ldr.w	r3, [r8]
 8004bfa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8004bfc:	f7fb fc5a 	bl	80004b4 <__aeabi_ui2d>
 8004c00:	a315      	add	r3, pc, #84	@ (adr r3, 8004c58 <statemachine+0x16e0>)
 8004c02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c06:	f7fb fccf 	bl	80005a8 <__aeabi_dmul>
 8004c0a:	f7fb ffc5 	bl	8000b98 <__aeabi_d2f>
							  flag_100kmh=1;
 8004c0e:	2301      	movs	r3, #1
							  time100kmh=(float)(htim16.Instance->CNT/1000.0);
 8004c10:	f8c9 0000 	str.w	r0, [r9]
							  flag_100kmh=1;
 8004c14:	602b      	str	r3, [r5, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8004c16:	4640      	mov	r0, r8
							  accelstate++;
 8004c18:	2304      	movs	r3, #4
 8004c1a:	703b      	strb	r3, [r7, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8004c1c:	f005 fe4a 	bl	800a8b4 <HAL_TIM_Base_Stop>
							  htim16.Instance->CNT=0;
 8004c20:	f8d8 3000 	ldr.w	r3, [r8]
 8004c24:	625c      	str	r4, [r3, #36]	@ 0x24
 8004c26:	f7ff b856 	b.w	8003cd6 <statemachine+0x75e>
							  				accelstate++;
 8004c2a:	783b      	ldrb	r3, [r7, #0]
							  				HAL_TIM_Base_Start(&htim16);
 8004c2c:	f8df 8070 	ldr.w	r8, [pc, #112]	@ 8004ca0 <statemachine+0x1728>
							  				indexcounterforstart=0;
 8004c30:	4d17      	ldr	r5, [pc, #92]	@ (8004c90 <statemachine+0x1718>)
							  				counterforstart=0;
 8004c32:	2600      	movs	r6, #0
							  				accelstate++;
 8004c34:	3301      	adds	r3, #1
							  				HAL_TIM_Base_Start(&htim16);
 8004c36:	4640      	mov	r0, r8
							  				accelstate++;
 8004c38:	703b      	strb	r3, [r7, #0]
							  				counterforstart=0;
 8004c3a:	6026      	str	r6, [r4, #0]
							  				indexcounterforstart=0;
 8004c3c:	602e      	str	r6, [r5, #0]
							  				HAL_TIM_Base_Start(&htim16);
 8004c3e:	f005 fe15 	bl	800a86c <HAL_TIM_Base_Start>
							  				htim16.Instance->CNT=0;
 8004c42:	f8d8 3000 	ldr.w	r3, [r8]
 8004c46:	625e      	str	r6, [r3, #36]	@ 0x24
 8004c48:	e6eb      	b.n	8004a22 <statemachine+0x14aa>
 8004c4a:	4e05      	ldr	r6, [pc, #20]	@ (8004c60 <statemachine+0x16e8>)
 8004c4c:	4d11      	ldr	r5, [pc, #68]	@ (8004c94 <statemachine+0x171c>)
 8004c4e:	4c12      	ldr	r4, [pc, #72]	@ (8004c98 <statemachine+0x1720>)
 8004c50:	e469      	b.n	8004526 <statemachine+0xfae>
 8004c52:	bf00      	nop
 8004c54:	f3af 8000 	nop.w
 8004c58:	d2f1a9fc 	.word	0xd2f1a9fc
 8004c5c:	3f50624d 	.word	0x3f50624d
 8004c60:	20000510 	.word	0x20000510
 8004c64:	200005fd 	.word	0x200005fd
 8004c68:	200005fe 	.word	0x200005fe
 8004c6c:	080161e0 	.word	0x080161e0
 8004c70:	20000024 	.word	0x20000024
 8004c74:	08016204 	.word	0x08016204
 8004c78:	20000620 	.word	0x20000620
 8004c7c:	3a83126f 	.word	0x3a83126f
 8004c80:	08016208 	.word	0x08016208
 8004c84:	20000680 	.word	0x20000680
 8004c88:	20001540 	.word	0x20001540
 8004c8c:	20001544 	.word	0x20001544
 8004c90:	20001548 	.word	0x20001548
 8004c94:	2000002c 	.word	0x2000002c
 8004c98:	20000fc0 	.word	0x20000fc0
 8004c9c:	200005fc 	.word	0x200005fc
 8004ca0:	200015f8 	.word	0x200015f8
 8004ca4:	20001538 	.word	0x20001538

08004ca8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004ca8:	b500      	push	{lr}
  SET_BIT(RCC->AHB3ENR, Periphs);
 8004caa:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8004cae:	b083      	sub	sp, #12
 8004cb0:	6d18      	ldr	r0, [r3, #80]	@ 0x50
 8004cb2:	f440 2000 	orr.w	r0, r0, #524288	@ 0x80000
 8004cb6:	6518      	str	r0, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 8004cb8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004cba:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004cbe:	9301      	str	r3, [sp, #4]

  __HAL_RCC_HSEM_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8004cc0:	2200      	movs	r2, #0
 8004cc2:	210f      	movs	r1, #15
 8004cc4:	f06f 0001 	mvn.w	r0, #1
  (void)tmpreg;
 8004cc8:	9b01      	ldr	r3, [sp, #4]
 8004cca:	f001 f97d 	bl	8005fc8 <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* HSEM_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(HSEM_IRQn, 5, 0);
 8004cce:	2200      	movs	r2, #0
 8004cd0:	2105      	movs	r1, #5
 8004cd2:	202e      	movs	r0, #46	@ 0x2e
 8004cd4:	f001 f978 	bl	8005fc8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(HSEM_IRQn);
 8004cd8:	202e      	movs	r0, #46	@ 0x2e

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8004cda:	b003      	add	sp, #12
 8004cdc:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_NVIC_EnableIRQ(HSEM_IRQn);
 8004ce0:	f001 b9ae 	b.w	8006040 <HAL_NVIC_EnableIRQ>

08004ce4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004ce4:	b570      	push	{r4, r5, r6, lr}
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status = HAL_OK;

  /*Configure the TIM1 IRQ priority */
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8004ce6:	4601      	mov	r1, r0
{
 8004ce8:	b08a      	sub	sp, #40	@ 0x28
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8004cea:	2200      	movs	r2, #0
{
 8004cec:	4606      	mov	r6, r0
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8004cee:	2019      	movs	r0, #25
 8004cf0:	f001 f96a 	bl	8005fc8 <HAL_NVIC_SetPriority>
  /* Enable the TIM1 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8004cf4:	2019      	movs	r0, #25
 8004cf6:	f001 f9a3 	bl	8006040 <HAL_NVIC_EnableIRQ>
  SET_BIT(RCC->APB2ENR, Periphs);
 8004cfa:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000

  /* Enable TIM1 clock */
  __HAL_RCC_TIM1_CLK_ENABLE();

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8004cfe:	a901      	add	r1, sp, #4
 8004d00:	6e1a      	ldr	r2, [r3, #96]	@ 0x60

  /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM1 */
  htim1.Instance = TIM1;
 8004d02:	4c1c      	ldr	r4, [pc, #112]	@ (8004d74 <HAL_InitTick+0x90>)
 8004d04:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004d08:	661a      	str	r2, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8004d0a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004d0c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8004d10:	a803      	add	r0, sp, #12
 8004d12:	9302      	str	r3, [sp, #8]
  (void)tmpreg;
 8004d14:	9b02      	ldr	r3, [sp, #8]
 8004d16:	f004 f943 	bl	8008fa0 <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK2Freq();
 8004d1a:	f004 f8ff 	bl	8008f1c <HAL_RCC_GetPCLK2Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004d1e:	4a16      	ldr	r2, [pc, #88]	@ (8004d78 <HAL_InitTick+0x94>)
  htim1.Instance = TIM1;
 8004d20:	4916      	ldr	r1, [pc, #88]	@ (8004d7c <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004d22:	fba2 2300 	umull	r2, r3, r2, r0
 8004d26:	0c9b      	lsrs	r3, r3, #18
 8004d28:	3b01      	subs	r3, #1
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim1.Init.Period = (1000000U / 1000U) - 1U;
  htim1.Init.Prescaler = uwPrescalerValue;
  htim1.Init.ClockDivision = 0;
 8004d2a:	2200      	movs	r2, #0
  htim1.Init.Prescaler = uwPrescalerValue;
 8004d2c:	e9c4 1300 	strd	r1, r3, [r4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim1);
 8004d30:	4620      	mov	r0, r4
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8004d32:	f240 33e7 	movw	r3, #999	@ 0x3e7
  htim1.Init.ClockDivision = 0;
 8004d36:	6122      	str	r2, [r4, #16]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004d38:	60a2      	str	r2, [r4, #8]
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8004d3a:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim1);
 8004d3c:	f005 fd28 	bl	800a790 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8004d40:	4605      	mov	r5, r0
 8004d42:	b110      	cbz	r0, 8004d4a <HAL_InitTick+0x66>
    }
  }

 /* Return function status */
  return status;
}
 8004d44:	4628      	mov	r0, r5
 8004d46:	b00a      	add	sp, #40	@ 0x28
 8004d48:	bd70      	pop	{r4, r5, r6, pc}
    status = HAL_TIM_Base_Start_IT(&htim1);
 8004d4a:	4620      	mov	r0, r4
 8004d4c:	f005 fdc8 	bl	800a8e0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8004d50:	4605      	mov	r5, r0
 8004d52:	2800      	cmp	r0, #0
 8004d54:	d1f6      	bne.n	8004d44 <HAL_InitTick+0x60>
        HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8004d56:	2019      	movs	r0, #25
 8004d58:	f001 f972 	bl	8006040 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8004d5c:	2e0f      	cmp	r6, #15
 8004d5e:	d901      	bls.n	8004d64 <HAL_InitTick+0x80>
        status = HAL_ERROR;
 8004d60:	2501      	movs	r5, #1
 8004d62:	e7ef      	b.n	8004d44 <HAL_InitTick+0x60>
        HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority, 0U);
 8004d64:	462a      	mov	r2, r5
 8004d66:	4631      	mov	r1, r6
 8004d68:	2019      	movs	r0, #25
 8004d6a:	f001 f92d 	bl	8005fc8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8004d6e:	4b04      	ldr	r3, [pc, #16]	@ (8004d80 <HAL_InitTick+0x9c>)
 8004d70:	601e      	str	r6, [r3, #0]
 8004d72:	e7e7      	b.n	8004d44 <HAL_InitTick+0x60>
 8004d74:	20001554 	.word	0x20001554
 8004d78:	431bde83 	.word	0x431bde83
 8004d7c:	40012c00 	.word	0x40012c00
 8004d80:	2000003c 	.word	0x2000003c

08004d84 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004d84:	b508      	push	{r3, lr}
 8004d86:	4c07      	ldr	r4, [pc, #28]	@ (8004da4 <NMI_Handler+0x20>)
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
  {
	   ssd1306_SetCursor(32, 20);
	   	  ssd1306_WriteString("NMI", Font_7x10, White);
 8004d88:	4d07      	ldr	r5, [pc, #28]	@ (8004da8 <NMI_Handler+0x24>)
	   ssd1306_SetCursor(32, 20);
 8004d8a:	2114      	movs	r1, #20
 8004d8c:	2020      	movs	r0, #32
 8004d8e:	f7fe f8d3 	bl	8002f38 <ssd1306_SetCursor>
	   	  ssd1306_WriteString("NMI", Font_7x10, White);
 8004d92:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004d96:	2301      	movs	r3, #1
 8004d98:	4628      	mov	r0, r5
 8004d9a:	f7fe f8b1 	bl	8002f00 <ssd1306_WriteString>
	   	  ssd1306_UpdateScreen();
 8004d9e:	f7fd fe13 	bl	80029c8 <ssd1306_UpdateScreen>
   while (1)
 8004da2:	e7f2      	b.n	8004d8a <NMI_Handler+0x6>
 8004da4:	20000024 	.word	0x20000024
 8004da8:	0801626c 	.word	0x0801626c

08004dac <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004dac:	b508      	push	{r3, lr}
 8004dae:	4c07      	ldr	r4, [pc, #28]	@ (8004dcc <HardFault_Handler+0x20>)
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  ssd1306_WriteString("hardfault", Font_7x10, White);
 8004db0:	4d07      	ldr	r5, [pc, #28]	@ (8004dd0 <HardFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004db2:	2114      	movs	r1, #20
 8004db4:	2020      	movs	r0, #32
 8004db6:	f7fe f8bf 	bl	8002f38 <ssd1306_SetCursor>
	  ssd1306_WriteString("hardfault", Font_7x10, White);
 8004dba:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004dbe:	2301      	movs	r3, #1
 8004dc0:	4628      	mov	r0, r5
 8004dc2:	f7fe f89d 	bl	8002f00 <ssd1306_WriteString>
	  ssd1306_UpdateScreen();
 8004dc6:	f7fd fdff 	bl	80029c8 <ssd1306_UpdateScreen>
  while (1)
 8004dca:	e7f2      	b.n	8004db2 <HardFault_Handler+0x6>
 8004dcc:	20000024 	.word	0x20000024
 8004dd0:	08016270 	.word	0x08016270

08004dd4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004dd4:	b508      	push	{r3, lr}
 8004dd6:	4c07      	ldr	r4, [pc, #28]	@ (8004df4 <MemManage_Handler+0x20>)
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("mem", Font_7x10, White);
 8004dd8:	4d07      	ldr	r5, [pc, #28]	@ (8004df8 <MemManage_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004dda:	2114      	movs	r1, #20
 8004ddc:	2020      	movs	r0, #32
 8004dde:	f7fe f8ab 	bl	8002f38 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("mem", Font_7x10, White);
 8004de2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004de6:	2301      	movs	r3, #1
 8004de8:	4628      	mov	r0, r5
 8004dea:	f7fe f889 	bl	8002f00 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004dee:	f7fd fdeb 	bl	80029c8 <ssd1306_UpdateScreen>
  while (1)
 8004df2:	e7f2      	b.n	8004dda <MemManage_Handler+0x6>
 8004df4:	20000024 	.word	0x20000024
 8004df8:	0801627c 	.word	0x0801627c

08004dfc <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004dfc:	b508      	push	{r3, lr}
 8004dfe:	4c07      	ldr	r4, [pc, #28]	@ (8004e1c <BusFault_Handler+0x20>)
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_BusFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("bus", Font_7x10, White);
 8004e00:	4d07      	ldr	r5, [pc, #28]	@ (8004e20 <BusFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004e02:	2114      	movs	r1, #20
 8004e04:	2020      	movs	r0, #32
 8004e06:	f7fe f897 	bl	8002f38 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("bus", Font_7x10, White);
 8004e0a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004e0e:	2301      	movs	r3, #1
 8004e10:	4628      	mov	r0, r5
 8004e12:	f7fe f875 	bl	8002f00 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004e16:	f7fd fdd7 	bl	80029c8 <ssd1306_UpdateScreen>
  while (1)
 8004e1a:	e7f2      	b.n	8004e02 <BusFault_Handler+0x6>
 8004e1c:	20000024 	.word	0x20000024
 8004e20:	08016280 	.word	0x08016280

08004e24 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004e24:	b508      	push	{r3, lr}
 8004e26:	4c07      	ldr	r4, [pc, #28]	@ (8004e44 <UsageFault_Handler+0x20>)
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("usage", Font_7x10, White);
 8004e28:	4d07      	ldr	r5, [pc, #28]	@ (8004e48 <UsageFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004e2a:	2114      	movs	r1, #20
 8004e2c:	2020      	movs	r0, #32
 8004e2e:	f7fe f883 	bl	8002f38 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("usage", Font_7x10, White);
 8004e32:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004e36:	2301      	movs	r3, #1
 8004e38:	4628      	mov	r0, r5
 8004e3a:	f7fe f861 	bl	8002f00 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004e3e:	f7fd fdc3 	bl	80029c8 <ssd1306_UpdateScreen>
  while (1)
 8004e42:	e7f2      	b.n	8004e2a <UsageFault_Handler+0x6>
 8004e44:	20000024 	.word	0x20000024
 8004e48:	08016284 	.word	0x08016284

08004e4c <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004e4c:	4770      	bx	lr
 8004e4e:	bf00      	nop

08004e50 <RTC_WKUP_IRQHandler>:
void RTC_WKUP_IRQHandler(void)
{
  /* USER CODE BEGIN RTC_WKUP_IRQn 0 */

  /* USER CODE END RTC_WKUP_IRQn 0 */
  HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 8004e50:	4801      	ldr	r0, [pc, #4]	@ (8004e58 <RTC_WKUP_IRQHandler+0x8>)
 8004e52:	f004 bd8b 	b.w	800996c <HAL_RTCEx_WakeUpTimerIRQHandler>
 8004e56:	bf00      	nop
 8004e58:	20001074 	.word	0x20001074

08004e5c <DMA1_Channel1_IRQHandler>:
void DMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8004e5c:	4801      	ldr	r0, [pc, #4]	@ (8004e64 <DMA1_Channel1_IRQHandler+0x8>)
 8004e5e:	f001 ba55 	b.w	800630c <HAL_DMA_IRQHandler>
 8004e62:	bf00      	nop
 8004e64:	20000328 	.word	0x20000328

08004e68 <DMA1_Channel2_IRQHandler>:
void DMA1_Channel2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_rx);
 8004e68:	4801      	ldr	r0, [pc, #4]	@ (8004e70 <DMA1_Channel2_IRQHandler+0x8>)
 8004e6a:	f001 ba4f 	b.w	800630c <HAL_DMA_IRQHandler>
 8004e6e:	bf00      	nop
 8004e70:	200016f8 	.word	0x200016f8

08004e74 <DMA1_Channel3_IRQHandler>:
void DMA1_Channel3_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */

  /* USER CODE END DMA1_Channel3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_tx);
 8004e74:	4801      	ldr	r0, [pc, #4]	@ (8004e7c <DMA1_Channel3_IRQHandler+0x8>)
 8004e76:	f001 ba49 	b.w	800630c <HAL_DMA_IRQHandler>
 8004e7a:	bf00      	nop
 8004e7c:	20001698 	.word	0x20001698

08004e80 <USB_LP_IRQHandler>:
void USB_LP_IRQHandler(void)
{
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8004e80:	4801      	ldr	r0, [pc, #4]	@ (8004e88 <USB_LP_IRQHandler+0x8>)
 8004e82:	f002 bb63 	b.w	800754c <HAL_PCD_IRQHandler>
 8004e86:	bf00      	nop
 8004e88:	2000576c 	.word	0x2000576c

08004e8c <TIM1_UP_TIM16_IRQHandler>:
void TIM1_UP_TIM16_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  if (htim1.Instance != NULL)
 8004e8c:	4806      	ldr	r0, [pc, #24]	@ (8004ea8 <TIM1_UP_TIM16_IRQHandler+0x1c>)
{
 8004e8e:	b508      	push	{r3, lr}
  if (htim1.Instance != NULL)
 8004e90:	6803      	ldr	r3, [r0, #0]
 8004e92:	b10b      	cbz	r3, 8004e98 <TIM1_UP_TIM16_IRQHandler+0xc>
  {
    HAL_TIM_IRQHandler(&htim1);
 8004e94:	f005 fe06 	bl	800aaa4 <HAL_TIM_IRQHandler>
  }
  if (htim16.Instance != NULL)
 8004e98:	4804      	ldr	r0, [pc, #16]	@ (8004eac <TIM1_UP_TIM16_IRQHandler+0x20>)
 8004e9a:	6803      	ldr	r3, [r0, #0]
 8004e9c:	b11b      	cbz	r3, 8004ea6 <TIM1_UP_TIM16_IRQHandler+0x1a>
    HAL_TIM_IRQHandler(&htim16);
  }
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 8004e9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_TIM_IRQHandler(&htim16);
 8004ea2:	f005 bdff 	b.w	800aaa4 <HAL_TIM_IRQHandler>
}
 8004ea6:	bd08      	pop	{r3, pc}
 8004ea8:	20001554 	.word	0x20001554
 8004eac:	200015f8 	.word	0x200015f8

08004eb0 <TIM1_TRG_COM_TIM17_IRQHandler>:
void TIM1_TRG_COM_TIM17_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
  HAL_TIM_IRQHandler(&htim17);
 8004eb0:	4801      	ldr	r0, [pc, #4]	@ (8004eb8 <TIM1_TRG_COM_TIM17_IRQHandler+0x8>)
 8004eb2:	f005 bdf7 	b.w	800aaa4 <HAL_TIM_IRQHandler>
 8004eb6:	bf00      	nop
 8004eb8:	200015a8 	.word	0x200015a8

08004ebc <SPI1_IRQHandler>:
void SPI1_IRQHandler(void)
{
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8004ebc:	4801      	ldr	r0, [pc, #4]	@ (8004ec4 <SPI1_IRQHandler+0x8>)
 8004ebe:	f005 bbb5 	b.w	800a62c <HAL_SPI_IRQHandler>
 8004ec2:	bf00      	nop
 8004ec4:	20001098 	.word	0x20001098

08004ec8 <LPUART1_IRQHandler>:
void LPUART1_IRQHandler(void)
{
  /* USER CODE BEGIN LPUART1_IRQn 0 */

  /* USER CODE END LPUART1_IRQn 0 */
  HAL_UART_IRQHandler(&hlpuart1);
 8004ec8:	4801      	ldr	r0, [pc, #4]	@ (8004ed0 <LPUART1_IRQHandler+0x8>)
 8004eca:	f006 b849 	b.w	800af60 <HAL_UART_IRQHandler>
 8004ece:	bf00      	nop
 8004ed0:	20001758 	.word	0x20001758

08004ed4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8004ed4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 8004ed6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8004eda:	f001 fc19 	bl	8006710 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8004ede:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
 8004ee2:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8004ee6:	f001 bc13 	b.w	8006710 <HAL_GPIO_EXTI_IRQHandler>
 8004eea:	bf00      	nop

08004eec <IPCC_C1_RX_IRQHandler>:
void IPCC_C1_RX_IRQHandler(void)
{
  /* USER CODE BEGIN IPCC_C1_RX_IRQn 0 */

  /* USER CODE END IPCC_C1_RX_IRQn 0 */
  HAL_IPCC_RX_IRQHandler(&hipcc);
 8004eec:	4801      	ldr	r0, [pc, #4]	@ (8004ef4 <IPCC_C1_RX_IRQHandler+0x8>)
 8004eee:	f002 ba01 	b.w	80072f4 <HAL_IPCC_RX_IRQHandler>
 8004ef2:	bf00      	nop
 8004ef4:	200004cc 	.word	0x200004cc

08004ef8 <IPCC_C1_TX_IRQHandler>:
void IPCC_C1_TX_IRQHandler(void)
{
  /* USER CODE BEGIN IPCC_C1_TX_IRQn 0 */

  /* USER CODE END IPCC_C1_TX_IRQn 0 */
  HAL_IPCC_TX_IRQHandler(&hipcc);
 8004ef8:	4801      	ldr	r0, [pc, #4]	@ (8004f00 <IPCC_C1_TX_IRQHandler+0x8>)
 8004efa:	f002 b9cf 	b.w	800729c <HAL_IPCC_TX_IRQHandler>
 8004efe:	bf00      	nop
 8004f00:	200004cc 	.word	0x200004cc

08004f04 <HSEM_IRQHandler>:
void HSEM_IRQHandler(void)
{
  /* USER CODE BEGIN HSEM_IRQn 0 */

  /* USER CODE END HSEM_IRQn 0 */
  HAL_HSEM_IRQHandler();
 8004f04:	f001 bc12 	b.w	800672c <HAL_HSEM_IRQHandler>

08004f08 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8004f08:	2001      	movs	r0, #1
 8004f0a:	4770      	bx	lr

08004f0c <_kill>:

int _kill(int pid, int sig)
{
 8004f0c:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8004f0e:	f00b fafd 	bl	801050c <__errno>
 8004f12:	2316      	movs	r3, #22
 8004f14:	6003      	str	r3, [r0, #0]
  return -1;
}
 8004f16:	f04f 30ff 	mov.w	r0, #4294967295
 8004f1a:	bd08      	pop	{r3, pc}

08004f1c <_exit>:

void _exit (int status)
{
 8004f1c:	b508      	push	{r3, lr}
  errno = EINVAL;
 8004f1e:	f00b faf5 	bl	801050c <__errno>
 8004f22:	2316      	movs	r3, #22
 8004f24:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8004f26:	e7fe      	b.n	8004f26 <_exit+0xa>

08004f28 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004f28:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f2a:	1e16      	subs	r6, r2, #0
 8004f2c:	dd07      	ble.n	8004f3e <_read+0x16>
 8004f2e:	460c      	mov	r4, r1
 8004f30:	198d      	adds	r5, r1, r6
  {
    *ptr++ = __io_getchar();
 8004f32:	f3af 8000 	nop.w
 8004f36:	f804 0b01 	strb.w	r0, [r4], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f3a:	42a5      	cmp	r5, r4
 8004f3c:	d1f9      	bne.n	8004f32 <_read+0xa>
  }

  return len;
}
 8004f3e:	4630      	mov	r0, r6
 8004f40:	bd70      	pop	{r4, r5, r6, pc}
 8004f42:	bf00      	nop

08004f44 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004f44:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f46:	1e16      	subs	r6, r2, #0
 8004f48:	dd07      	ble.n	8004f5a <_write+0x16>
 8004f4a:	460c      	mov	r4, r1
 8004f4c:	198d      	adds	r5, r1, r6
  {
    __io_putchar(*ptr++);
 8004f4e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8004f52:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f56:	42a5      	cmp	r5, r4
 8004f58:	d1f9      	bne.n	8004f4e <_write+0xa>
  }
  return len;
}
 8004f5a:	4630      	mov	r0, r6
 8004f5c:	bd70      	pop	{r4, r5, r6, pc}
 8004f5e:	bf00      	nop

08004f60 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8004f60:	f04f 30ff 	mov.w	r0, #4294967295
 8004f64:	4770      	bx	lr
 8004f66:	bf00      	nop

08004f68 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8004f68:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8004f6c:	604b      	str	r3, [r1, #4]
  return 0;
}
 8004f6e:	2000      	movs	r0, #0
 8004f70:	4770      	bx	lr
 8004f72:	bf00      	nop

08004f74 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8004f74:	2001      	movs	r0, #1
 8004f76:	4770      	bx	lr

08004f78 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8004f78:	2000      	movs	r0, #0
 8004f7a:	4770      	bx	lr

08004f7c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004f7c:	490c      	ldr	r1, [pc, #48]	@ (8004fb0 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004f7e:	4a0d      	ldr	r2, [pc, #52]	@ (8004fb4 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8004f80:	680b      	ldr	r3, [r1, #0]
{
 8004f82:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004f84:	4c0c      	ldr	r4, [pc, #48]	@ (8004fb8 <_sbrk+0x3c>)
 8004f86:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8004f88:	b12b      	cbz	r3, 8004f96 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004f8a:	4418      	add	r0, r3
 8004f8c:	4290      	cmp	r0, r2
 8004f8e:	d807      	bhi.n	8004fa0 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8004f90:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 8004f92:	4618      	mov	r0, r3
 8004f94:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8004f96:	4b09      	ldr	r3, [pc, #36]	@ (8004fbc <_sbrk+0x40>)
 8004f98:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8004f9a:	4418      	add	r0, r3
 8004f9c:	4290      	cmp	r0, r2
 8004f9e:	d9f7      	bls.n	8004f90 <_sbrk+0x14>
    errno = ENOMEM;
 8004fa0:	f00b fab4 	bl	801050c <__errno>
 8004fa4:	230c      	movs	r3, #12
 8004fa6:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8004fa8:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004fac:	4618      	mov	r0, r3
 8004fae:	bd10      	pop	{r4, pc}
 8004fb0:	200015a0 	.word	0x200015a0
 8004fb4:	20030000 	.word	0x20030000
 8004fb8:	00000400 	.word	0x00000400
 8004fbc:	20005b98 	.word	0x20005b98

08004fc0 <SystemInit>:
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif /* USER_VECT_TAB_ADDRESS */

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << (10UL * 2UL)) | (3UL << (11UL * 2UL))); /* set CP10 and CP11 Full Access */
 8004fc0:	4914      	ldr	r1, [pc, #80]	@ (8005014 <SystemInit+0x54>)
 8004fc2:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
#endif /* FPU */

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8004fc6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
  SCB->CPACR |= ((3UL << (10UL * 2UL)) | (3UL << (11UL * 2UL))); /* set CP10 and CP11 Full Access */
 8004fca:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004fce:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  RCC->CR |= RCC_CR_MSION;
 8004fd2:	6819      	ldr	r1, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00070000U;

  /* Reset PLLSAI1ON, PLLON, HSECSSON, HSEON, HSION, and MSIPLLON bits */
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004fd4:	4a10      	ldr	r2, [pc, #64]	@ (8005018 <SystemInit+0x58>)
  RCC->CFGR = 0x00070000U;
 8004fd6:	f44f 20e0 	mov.w	r0, #458752	@ 0x70000
  RCC->CR |= RCC_CR_MSION;
 8004fda:	f041 0101 	orr.w	r1, r1, #1
 8004fde:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00070000U;
 8004fe0:	6098      	str	r0, [r3, #8]
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004fe2:	6818      	ldr	r0, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x22041000U;
 8004fe4:	490d      	ldr	r1, [pc, #52]	@ (800501c <SystemInit+0x5c>)
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004fe6:	4002      	ands	r2, r0
 8004fe8:	601a      	str	r2, [r3, #0]
  RCC->CSR &= (uint32_t)0xFFFFFFFAU;
 8004fea:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8004fee:	f022 0205 	bic.w	r2, r2, #5
 8004ff2:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8004ff6:	f8d3 2098 	ldr.w	r2, [r3, #152]	@ 0x98
 8004ffa:	f022 0201 	bic.w	r2, r2, #1
 8004ffe:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  RCC->PLLCFGR = 0x22041000U;
 8005002:	60d9      	str	r1, [r3, #12]

#if defined(STM32WB55xx) || defined(STM32WB5Mxx)
  /* Reset PLLSAI1CFGR register */
  RCC->PLLSAI1CFGR = 0x22041000U;
 8005004:	6119      	str	r1, [r3, #16]
#endif /* STM32WB55xx || STM32WB5Mxx */

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8005006:	681a      	ldr	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8005008:	2100      	movs	r1, #0
  RCC->CR &= 0xFFFBFFFFU;
 800500a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800500e:	601a      	str	r2, [r3, #0]
  RCC->CIER = 0x00000000;
 8005010:	6199      	str	r1, [r3, #24]
}
 8005012:	4770      	bx	lr
 8005014:	e000ed00 	.word	0xe000ed00
 8005018:	faf6fefb 	.word	0xfaf6fefb
 800501c:	22041000 	.word	0x22041000

08005020 <MX_TIM2_Init>:
TIM_HandleTypeDef htim16;
TIM_HandleTypeDef htim17;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8005020:	b500      	push	{lr}
  TIM_MasterConfigTypeDef sMasterConfig = {0};

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005022:	481c      	ldr	r0, [pc, #112]	@ (8005094 <MX_TIM2_Init+0x74>)
 8005024:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
{
 8005028:	b089      	sub	sp, #36	@ 0x24
  htim2.Instance = TIM2;
 800502a:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 6400-1;
 800502c:	f641 02ff 	movw	r2, #6399	@ 0x18ff
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005030:	2300      	movs	r3, #0
  htim2.Init.Prescaler = 6400-1;
 8005032:	6042      	str	r2, [r0, #4]
 8005034:	f240 32e7 	movw	r2, #999	@ 0x3e7
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005038:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800503c:	e9cd 3306 	strd	r3, r3, [sp, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005040:	e9cd 3301 	strd	r3, r3, [sp, #4]
  htim2.Init.Prescaler = 6400-1;
 8005044:	e9c0 3202 	strd	r3, r2, [r0, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005048:	9303      	str	r3, [sp, #12]
  htim2.Init.Prescaler = 6400-1;
 800504a:	6103      	str	r3, [r0, #16]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim2.Init.Period = 1000-1;
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800504c:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800504e:	f005 fb9f 	bl	800a790 <HAL_TIM_Base_Init>
 8005052:	b998      	cbnz	r0, 800507c <MX_TIM2_Init+0x5c>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005054:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8005058:	480e      	ldr	r0, [pc, #56]	@ (8005094 <MX_TIM2_Init+0x74>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800505a:	9304      	str	r3, [sp, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800505c:	a904      	add	r1, sp, #16
 800505e:	f005 fc67 	bl	800a930 <HAL_TIM_ConfigClockSource>
 8005062:	b998      	cbnz	r0, 800508c <MX_TIM2_Init+0x6c>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8005064:	2220      	movs	r2, #32
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005066:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005068:	480a      	ldr	r0, [pc, #40]	@ (8005094 <MX_TIM2_Init+0x74>)
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800506a:	9201      	str	r2, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800506c:	a901      	add	r1, sp, #4
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800506e:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005070:	f005 fdc2 	bl	800abf8 <HAL_TIMEx_MasterConfigSynchronization>
 8005074:	b928      	cbnz	r0, 8005082 <MX_TIM2_Init+0x62>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8005076:	b009      	add	sp, #36	@ 0x24
 8005078:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800507c:	f7fd f8f4 	bl	8002268 <Error_Handler>
 8005080:	e7e8      	b.n	8005054 <MX_TIM2_Init+0x34>
    Error_Handler();
 8005082:	f7fd f8f1 	bl	8002268 <Error_Handler>
}
 8005086:	b009      	add	sp, #36	@ 0x24
 8005088:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800508c:	f7fd f8ec 	bl	8002268 <Error_Handler>
 8005090:	e7e8      	b.n	8005064 <MX_TIM2_Init+0x44>
 8005092:	bf00      	nop
 8005094:	20001648 	.word	0x20001648

08005098 <MX_TIM16_Init>:
/* TIM16 init function */
void MX_TIM16_Init(void)
{
 8005098:	b510      	push	{r4, lr}
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 800509a:	480b      	ldr	r0, [pc, #44]	@ (80050c8 <MX_TIM16_Init+0x30>)
 800509c:	4c0b      	ldr	r4, [pc, #44]	@ (80050cc <MX_TIM16_Init+0x34>)
  htim16.Init.Prescaler = 64000-1;
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 800509e:	2300      	movs	r3, #0
  htim16.Init.Prescaler = 64000-1;
 80050a0:	f64f 11ff 	movw	r1, #63999	@ 0xf9ff
  htim16.Init.Period = 65535;
 80050a4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  htim16.Init.Prescaler = 64000-1;
 80050a8:	e9c0 4100 	strd	r4, r1, [r0]
  htim16.Init.Period = 65535;
 80050ac:	e9c0 3202 	strd	r3, r2, [r0, #8]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim16.Init.RepetitionCounter = 0;
 80050b0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80050b4:	6183      	str	r3, [r0, #24]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 80050b6:	f005 fb6b 	bl	800a790 <HAL_TIM_Base_Init>
 80050ba:	b900      	cbnz	r0, 80050be <MX_TIM16_Init+0x26>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 80050bc:	bd10      	pop	{r4, pc}
 80050be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 80050c2:	f7fd b8d1 	b.w	8002268 <Error_Handler>
 80050c6:	bf00      	nop
 80050c8:	200015f8 	.word	0x200015f8
 80050cc:	40014400 	.word	0x40014400

080050d0 <MX_TIM17_Init>:
/* TIM17 init function */
void MX_TIM17_Init(void)
{
 80050d0:	b510      	push	{r4, lr}
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 80050d2:	480a      	ldr	r0, [pc, #40]	@ (80050fc <MX_TIM17_Init+0x2c>)
 80050d4:	4c0a      	ldr	r4, [pc, #40]	@ (8005100 <MX_TIM17_Init+0x30>)
  htim17.Init.Prescaler = 64000-1;
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 80050d6:	2300      	movs	r3, #0
  htim17.Init.Prescaler = 64000-1;
 80050d8:	f64f 11ff 	movw	r1, #63999	@ 0xf9ff
  htim17.Init.Period = 200-1;
 80050dc:	22c7      	movs	r2, #199	@ 0xc7
  htim17.Init.Prescaler = 64000-1;
 80050de:	e9c0 4100 	strd	r4, r1, [r0]
  htim17.Init.Period = 200-1;
 80050e2:	e9c0 3202 	strd	r3, r2, [r0, #8]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim17.Init.RepetitionCounter = 0;
 80050e6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80050ea:	6183      	str	r3, [r0, #24]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 80050ec:	f005 fb50 	bl	800a790 <HAL_TIM_Base_Init>
 80050f0:	b900      	cbnz	r0, 80050f4 <MX_TIM17_Init+0x24>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 80050f2:	bd10      	pop	{r4, pc}
 80050f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 80050f8:	f7fd b8b6 	b.w	8002268 <Error_Handler>
 80050fc:	200015a8 	.word	0x200015a8
 8005100:	40014800 	.word	0x40014800

08005104 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8005104:	b500      	push	{lr}

  if(tim_baseHandle->Instance==TIM2)
 8005106:	6803      	ldr	r3, [r0, #0]
 8005108:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
{
 800510c:	b085      	sub	sp, #20
  if(tim_baseHandle->Instance==TIM2)
 800510e:	d008      	beq.n	8005122 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM16)
 8005110:	4a21      	ldr	r2, [pc, #132]	@ (8005198 <HAL_TIM_Base_MspInit+0x94>)
 8005112:	4293      	cmp	r3, r2
 8005114:	d029      	beq.n	800516a <HAL_TIM_Base_MspInit+0x66>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM17)
 8005116:	4a21      	ldr	r2, [pc, #132]	@ (800519c <HAL_TIM_Base_MspInit+0x98>)
 8005118:	4293      	cmp	r3, r2
 800511a:	d010      	beq.n	800513e <HAL_TIM_Base_MspInit+0x3a>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
  /* USER CODE BEGIN TIM17_MspInit 1 */

  /* USER CODE END TIM17_MspInit 1 */
  }
}
 800511c:	b005      	add	sp, #20
 800511e:	f85d fb04 	ldr.w	pc, [sp], #4
  SET_BIT(RCC->APB1ENR1, Periphs);
 8005122:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8005126:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8005128:	f042 0201 	orr.w	r2, r2, #1
 800512c:	659a      	str	r2, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800512e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005130:	f003 0301 	and.w	r3, r3, #1
 8005134:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8005136:	9b01      	ldr	r3, [sp, #4]
 8005138:	b005      	add	sp, #20
 800513a:	f85d fb04 	ldr.w	pc, [sp], #4
  SET_BIT(RCC->APB2ENR, Periphs);
 800513e:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 5, 0);
 8005142:	2200      	movs	r2, #0
 8005144:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8005146:	f440 2080 	orr.w	r0, r0, #262144	@ 0x40000
 800514a:	6618      	str	r0, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 800514c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800514e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8005152:	9303      	str	r3, [sp, #12]
 8005154:	2105      	movs	r1, #5
 8005156:	201a      	movs	r0, #26
  (void)tmpreg;
 8005158:	9b03      	ldr	r3, [sp, #12]
 800515a:	f000 ff35 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 800515e:	201a      	movs	r0, #26
}
 8005160:	b005      	add	sp, #20
 8005162:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8005166:	f000 bf6b 	b.w	8006040 <HAL_NVIC_EnableIRQ>
  SET_BIT(RCC->APB2ENR, Periphs);
 800516a:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 15, 0);
 800516e:	2200      	movs	r2, #0
 8005170:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8005172:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
 8005176:	6618      	str	r0, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8005178:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800517a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800517e:	9302      	str	r3, [sp, #8]
 8005180:	210f      	movs	r1, #15
 8005182:	2019      	movs	r0, #25
  (void)tmpreg;
 8005184:	9b02      	ldr	r3, [sp, #8]
 8005186:	f000 ff1f 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 800518a:	2019      	movs	r0, #25
}
 800518c:	b005      	add	sp, #20
 800518e:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8005192:	f000 bf55 	b.w	8006040 <HAL_NVIC_EnableIRQ>
 8005196:	bf00      	nop
 8005198:	40014400 	.word	0x40014400
 800519c:	40014800 	.word	0x40014800

080051a0 <MX_LPUART1_UART_Init>:
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
  hlpuart1.Init.Parity = UART_PARITY_NONE;
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80051a0:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8005228 <MX_LPUART1_UART_Init+0x88>
{
 80051a4:	b510      	push	{r4, lr}
  hlpuart1.Instance = LPUART1;
 80051a6:	4822      	ldr	r0, [pc, #136]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 80051a8:	4c22      	ldr	r4, [pc, #136]	@ (8005234 <MX_LPUART1_UART_Init+0x94>)
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 80051aa:	2300      	movs	r3, #0
  hlpuart1.Init.BaudRate = 115200;
 80051ac:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 80051b0:	220c      	movs	r2, #12
  hlpuart1.Init.BaudRate = 115200;
 80051b2:	e9c0 4100 	strd	r4, r1, [r0]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80051b6:	ed80 7b08 	vstr	d7, [r0, #32]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 80051ba:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 80051be:	e9c0 3204 	strd	r3, r2, [r0, #16]
 80051c2:	6183      	str	r3, [r0, #24]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80051c4:	6283      	str	r3, [r0, #40]	@ 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 80051c6:	6643      	str	r3, [r0, #100]	@ 0x64
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 80051c8:	f006 fa98 	bl	800b6fc <HAL_UART_Init>
 80051cc:	b970      	cbnz	r0, 80051ec <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80051ce:	4818      	ldr	r0, [pc, #96]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 80051d0:	2100      	movs	r1, #0
 80051d2:	f006 fc5b 	bl	800ba8c <HAL_UARTEx_SetTxFifoThreshold>
 80051d6:	b988      	cbnz	r0, 80051fc <MX_LPUART1_UART_Init+0x5c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80051d8:	4815      	ldr	r0, [pc, #84]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 80051da:	2100      	movs	r1, #0
 80051dc:	f006 fc98 	bl	800bb10 <HAL_UARTEx_SetRxFifoThreshold>
 80051e0:	b9a0      	cbnz	r0, 800520c <MX_LPUART1_UART_Init+0x6c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 80051e2:	4813      	ldr	r0, [pc, #76]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 80051e4:	f006 fc34 	bl	800ba50 <HAL_UARTEx_DisableFifoMode>
 80051e8:	b9b8      	cbnz	r0, 800521a <MX_LPUART1_UART_Init+0x7a>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 80051ea:	bd10      	pop	{r4, pc}
    Error_Handler();
 80051ec:	f7fd f83c 	bl	8002268 <Error_Handler>
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80051f0:	480f      	ldr	r0, [pc, #60]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 80051f2:	2100      	movs	r1, #0
 80051f4:	f006 fc4a 	bl	800ba8c <HAL_UARTEx_SetTxFifoThreshold>
 80051f8:	2800      	cmp	r0, #0
 80051fa:	d0ed      	beq.n	80051d8 <MX_LPUART1_UART_Init+0x38>
    Error_Handler();
 80051fc:	f7fd f834 	bl	8002268 <Error_Handler>
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8005200:	480b      	ldr	r0, [pc, #44]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 8005202:	2100      	movs	r1, #0
 8005204:	f006 fc84 	bl	800bb10 <HAL_UARTEx_SetRxFifoThreshold>
 8005208:	2800      	cmp	r0, #0
 800520a:	d0ea      	beq.n	80051e2 <MX_LPUART1_UART_Init+0x42>
    Error_Handler();
 800520c:	f7fd f82c 	bl	8002268 <Error_Handler>
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8005210:	4807      	ldr	r0, [pc, #28]	@ (8005230 <MX_LPUART1_UART_Init+0x90>)
 8005212:	f006 fc1d 	bl	800ba50 <HAL_UARTEx_DisableFifoMode>
 8005216:	2800      	cmp	r0, #0
 8005218:	d0e7      	beq.n	80051ea <MX_LPUART1_UART_Init+0x4a>
}
 800521a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 800521e:	f7fd b823 	b.w	8002268 <Error_Handler>
 8005222:	bf00      	nop
 8005224:	f3af 8000 	nop.w
	...
 8005230:	20001758 	.word	0x20001758
 8005234:	40008000 	.word	0x40008000

08005238 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8005238:	b570      	push	{r4, r5, r6, lr}
 800523a:	4604      	mov	r4, r0
 800523c:	b09c      	sub	sp, #112	@ 0x70

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800523e:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8005240:	2250      	movs	r2, #80	@ 0x50
 8005242:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005244:	e9cd 1102 	strd	r1, r1, [sp, #8]
 8005248:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800524c:	9106      	str	r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800524e:	f00b f90a 	bl	8010466 <memset>
  if(uartHandle->Instance==LPUART1)
 8005252:	4b3d      	ldr	r3, [pc, #244]	@ (8005348 <HAL_UART_MspInit+0x110>)
 8005254:	6822      	ldr	r2, [r4, #0]
 8005256:	429a      	cmp	r2, r3
 8005258:	d001      	beq.n	800525e <HAL_UART_MspInit+0x26>
    HAL_NVIC_EnableIRQ(LPUART1_IRQn);
  /* USER CODE BEGIN LPUART1_MspInit 1 */

  /* USER CODE END LPUART1_MspInit 1 */
  }
}
 800525a:	b01c      	add	sp, #112	@ 0x70
 800525c:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 800525e:	2202      	movs	r2, #2
    PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 8005260:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8005264:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8005266:	9208      	str	r2, [sp, #32]
    PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 8005268:	930f      	str	r3, [sp, #60]	@ 0x3c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800526a:	f003 fec3 	bl	8008ff4 <HAL_RCCEx_PeriphCLKConfig>
 800526e:	2800      	cmp	r0, #0
 8005270:	d157      	bne.n	8005322 <HAL_UART_MspInit+0xea>
  SET_BIT(RCC->APB1ENR2, Periphs);
 8005272:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8005276:	ed9f 7b30 	vldr	d7, [pc, #192]	@ 8005338 <HAL_UART_MspInit+0x100>
 800527a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
    hdma_lpuart1_rx.Instance = DMA1_Channel2;
 800527c:	4e33      	ldr	r6, [pc, #204]	@ (800534c <HAL_UART_MspInit+0x114>)
 800527e:	f042 0201 	orr.w	r2, r2, #1
 8005282:	65da      	str	r2, [r3, #92]	@ 0x5c
  tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 8005284:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8005286:	f002 0201 	and.w	r2, r2, #1
 800528a:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 800528c:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 800528e:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8005290:	f042 0201 	orr.w	r2, r2, #1
 8005294:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8005296:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8005298:	ed8d 7b02 	vstr	d7, [sp, #8]
 800529c:	ed9f 7b28 	vldr	d7, [pc, #160]	@ 8005340 <HAL_UART_MspInit+0x108>
 80052a0:	f003 0301 	and.w	r3, r3, #1
 80052a4:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80052a6:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 80052a8:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80052aa:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 80052ae:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 80052b0:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80052b2:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80052b6:	f001 f879 	bl	80063ac <HAL_GPIO_Init>
    hdma_lpuart1_rx.Init.Request = DMA_REQUEST_LPUART1_RX;
 80052ba:	4925      	ldr	r1, [pc, #148]	@ (8005350 <HAL_UART_MspInit+0x118>)
 80052bc:	2210      	movs	r2, #16
 80052be:	2300      	movs	r3, #0
 80052c0:	e9c6 1200 	strd	r1, r2, [r6]
    if (HAL_DMA_Init(&hdma_lpuart1_rx) != HAL_OK)
 80052c4:	4630      	mov	r0, r6
    hdma_lpuart1_rx.Init.Request = DMA_REQUEST_LPUART1_RX;
 80052c6:	2180      	movs	r1, #128	@ 0x80
 80052c8:	2220      	movs	r2, #32
 80052ca:	e9c6 3302 	strd	r3, r3, [r6, #8]
 80052ce:	e9c6 1304 	strd	r1, r3, [r6, #16]
 80052d2:	e9c6 3206 	strd	r3, r2, [r6, #24]
 80052d6:	6233      	str	r3, [r6, #32]
    if (HAL_DMA_Init(&hdma_lpuart1_rx) != HAL_OK)
 80052d8:	f000 fec0 	bl	800605c <HAL_DMA_Init>
 80052dc:	bb38      	cbnz	r0, 800532e <HAL_UART_MspInit+0xf6>
    hdma_lpuart1_tx.Instance = DMA1_Channel3;
 80052de:	4d1d      	ldr	r5, [pc, #116]	@ (8005354 <HAL_UART_MspInit+0x11c>)
 80052e0:	491d      	ldr	r1, [pc, #116]	@ (8005358 <HAL_UART_MspInit+0x120>)
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_lpuart1_rx);
 80052e2:	f8c4 6080 	str.w	r6, [r4, #128]	@ 0x80
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 80052e6:	2211      	movs	r2, #17
 80052e8:	2300      	movs	r3, #0
 80052ea:	e9c5 1200 	strd	r1, r2, [r5]
    if (HAL_DMA_Init(&hdma_lpuart1_tx) != HAL_OK)
 80052ee:	4628      	mov	r0, r5
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 80052f0:	2110      	movs	r1, #16
 80052f2:	2280      	movs	r2, #128	@ 0x80
 80052f4:	e9c5 1302 	strd	r1, r3, [r5, #8]
 80052f8:	e9c5 3305 	strd	r3, r3, [r5, #20]
 80052fc:	e9c5 3307 	strd	r3, r3, [r5, #28]
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_lpuart1_rx);
 8005300:	62b4      	str	r4, [r6, #40]	@ 0x28
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8005302:	612a      	str	r2, [r5, #16]
    if (HAL_DMA_Init(&hdma_lpuart1_tx) != HAL_OK)
 8005304:	f000 feaa 	bl	800605c <HAL_DMA_Init>
 8005308:	b970      	cbnz	r0, 8005328 <HAL_UART_MspInit+0xf0>
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 800530a:	2200      	movs	r2, #0
 800530c:	2106      	movs	r1, #6
    __HAL_LINKDMA(uartHandle,hdmatx,hdma_lpuart1_tx);
 800530e:	67e5      	str	r5, [r4, #124]	@ 0x7c
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8005310:	2025      	movs	r0, #37	@ 0x25
    __HAL_LINKDMA(uartHandle,hdmatx,hdma_lpuart1_tx);
 8005312:	62ac      	str	r4, [r5, #40]	@ 0x28
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8005314:	f000 fe58 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LPUART1_IRQn);
 8005318:	2025      	movs	r0, #37	@ 0x25
 800531a:	f000 fe91 	bl	8006040 <HAL_NVIC_EnableIRQ>
}
 800531e:	b01c      	add	sp, #112	@ 0x70
 8005320:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 8005322:	f7fc ffa1 	bl	8002268 <Error_Handler>
 8005326:	e7a4      	b.n	8005272 <HAL_UART_MspInit+0x3a>
      Error_Handler();
 8005328:	f7fc ff9e 	bl	8002268 <Error_Handler>
 800532c:	e7ed      	b.n	800530a <HAL_UART_MspInit+0xd2>
      Error_Handler();
 800532e:	f7fc ff9b 	bl	8002268 <Error_Handler>
 8005332:	e7d4      	b.n	80052de <HAL_UART_MspInit+0xa6>
 8005334:	f3af 8000 	nop.w
 8005338:	0000000c 	.word	0x0000000c
 800533c:	00000002 	.word	0x00000002
	...
 8005348:	40008000 	.word	0x40008000
 800534c:	200016f8 	.word	0x200016f8
 8005350:	4002001c 	.word	0x4002001c
 8005354:	20001698 	.word	0x20001698
 8005358:	40020030 	.word	0x40020030

0800535c <HAL_UART_RxCpltCallback>:
  }
}

/* USER CODE BEGIN 1 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
	if(huart->Instance==LPUART1){
 800535c:	4b18      	ldr	r3, [pc, #96]	@ (80053c0 <HAL_UART_RxCpltCallback+0x64>)
 800535e:	6802      	ldr	r2, [r0, #0]
 8005360:	429a      	cmp	r2, r3
 8005362:	d000      	beq.n	8005366 <HAL_UART_RxCpltCallback+0xa>
 8005364:	4770      	bx	lr
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8005366:	b510      	push	{r4, lr}
		if(itest==0){
 8005368:	4c16      	ldr	r4, [pc, #88]	@ (80053c4 <HAL_UART_RxCpltCallback+0x68>)
 800536a:	6823      	ldr	r3, [r4, #0]
 800536c:	b1c3      	cbz	r3, 80053a0 <HAL_UART_RxCpltCallback+0x44>
			timetest1=HAL_GetTick();
		}
		itest++;
 800536e:	3301      	adds	r3, #1
		if(itest>=10){
 8005370:	2b09      	cmp	r3, #9
 8005372:	dc1b      	bgt.n	80053ac <HAL_UART_RxCpltCallback+0x50>
		itest++;
 8005374:	6023      	str	r3, [r4, #0]




		}
		received_flag=1;
 8005376:	4b14      	ldr	r3, [pc, #80]	@ (80053c8 <HAL_UART_RxCpltCallback+0x6c>)
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 8005378:	4914      	ldr	r1, [pc, #80]	@ (80053cc <HAL_UART_RxCpltCallback+0x70>)
 800537a:	4815      	ldr	r0, [pc, #84]	@ (80053d0 <HAL_UART_RxCpltCallback+0x74>)
		received_flag=1;
 800537c:	2401      	movs	r4, #1
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 800537e:	2264      	movs	r2, #100	@ 0x64
		received_flag=1;
 8005380:	601c      	str	r4, [r3, #0]
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 8005382:	f00b f8f0 	bl	8010566 <memcpy>
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 8005386:	4b13      	ldr	r3, [pc, #76]	@ (80053d4 <HAL_UART_RxCpltCallback+0x78>)
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8005388:	4910      	ldr	r1, [pc, #64]	@ (80053cc <HAL_UART_RxCpltCallback+0x70>)
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 800538a:	681c      	ldr	r4, [r3, #0]
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 800538c:	4812      	ldr	r0, [pc, #72]	@ (80053d8 <HAL_UART_RxCpltCallback+0x7c>)
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 800538e:	6823      	ldr	r3, [r4, #0]
 8005390:	f023 0304 	bic.w	r3, r3, #4
 8005394:	6023      	str	r3, [r4, #0]
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8005396:	2264      	movs	r2, #100	@ 0x64

	}

}
 8005398:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 800539c:	f006 bb30 	b.w	800ba00 <HAL_UART_Receive_DMA>
			timetest1=HAL_GetTick();
 80053a0:	f000 f9d0 	bl	8005744 <HAL_GetTick>
 80053a4:	4a0d      	ldr	r2, [pc, #52]	@ (80053dc <HAL_UART_RxCpltCallback+0x80>)
		itest++;
 80053a6:	6823      	ldr	r3, [r4, #0]
			timetest1=HAL_GetTick();
 80053a8:	6010      	str	r0, [r2, #0]
 80053aa:	e7e0      	b.n	800536e <HAL_UART_RxCpltCallback+0x12>
			itest=0;
 80053ac:	2300      	movs	r3, #0
 80053ae:	6023      	str	r3, [r4, #0]
			timetest2=HAL_GetTick()-timetest1;
 80053b0:	f000 f9c8 	bl	8005744 <HAL_GetTick>
 80053b4:	4a09      	ldr	r2, [pc, #36]	@ (80053dc <HAL_UART_RxCpltCallback+0x80>)
 80053b6:	4b0a      	ldr	r3, [pc, #40]	@ (80053e0 <HAL_UART_RxCpltCallback+0x84>)
 80053b8:	6812      	ldr	r2, [r2, #0]
 80053ba:	1a80      	subs	r0, r0, r2
 80053bc:	6018      	str	r0, [r3, #0]
 80053be:	e7da      	b.n	8005376 <HAL_UART_RxCpltCallback+0x1a>
 80053c0:	40008000 	.word	0x40008000
 80053c4:	200017ec 	.word	0x200017ec
 80053c8:	2000050c 	.word	0x2000050c
 80053cc:	20000ffc 	.word	0x20000ffc
 80053d0:	20000518 	.word	0x20000518
 80053d4:	200016f8 	.word	0x200016f8
 80053d8:	20001758 	.word	0x20001758
 80053dc:	200017f4 	.word	0x200017f4
 80053e0:	200017f0 	.word	0x200017f0

080053e4 <usbtransmit>:
	gpupower=atoi((uint8_t *)usbnumbuf2);


}

void usbtransmit(void){
 80053e4:	b5f0      	push	{r4, r5, r6, r7, lr}

	if(pagenumber>0){
 80053e6:	4c83      	ldr	r4, [pc, #524]	@ (80055f4 <usbtransmit+0x210>)
 80053e8:	6823      	ldr	r3, [r4, #0]
 80053ea:	2b00      	cmp	r3, #0
void usbtransmit(void){
 80053ec:	b083      	sub	sp, #12
		ssd1306_Fill(Black);
 80053ee:	f04f 0000 	mov.w	r0, #0
	if(pagenumber>0){
 80053f2:	dd3a      	ble.n	800546a <usbtransmit+0x86>
		ssd1306_Fill(Black);
 80053f4:	f7fd fadc 	bl	80029b0 <ssd1306_Fill>
		ssd1306_SetCursor(32,32);
 80053f8:	2120      	movs	r1, #32
 80053fa:	4608      	mov	r0, r1
 80053fc:	f7fd fd9c 	bl	8002f38 <ssd1306_SetCursor>
		ssd1306_WriteString("write",Font_6x8,White);
 8005400:	4b7d      	ldr	r3, [pc, #500]	@ (80055f8 <usbtransmit+0x214>)
		int taillefin=0;
	switch(usbtransmitstate){
 8005402:	4d7e      	ldr	r5, [pc, #504]	@ (80055fc <usbtransmit+0x218>)
		ssd1306_WriteString("write",Font_6x8,White);
 8005404:	487e      	ldr	r0, [pc, #504]	@ (8005600 <usbtransmit+0x21c>)
 8005406:	e893 0006 	ldmia.w	r3, {r1, r2}
 800540a:	2301      	movs	r3, #1
 800540c:	f7fd fd78 	bl	8002f00 <ssd1306_WriteString>
	switch(usbtransmitstate){
 8005410:	782b      	ldrb	r3, [r5, #0]
 8005412:	2b06      	cmp	r3, #6
 8005414:	d827      	bhi.n	8005466 <usbtransmit+0x82>
 8005416:	e8df f013 	tbh	[pc, r3, lsl #1]
 800541a:	00b7      	.short	0x00b7
 800541c:	00500007 	.word	0x00500007
 8005420:	0086005a 	.word	0x0086005a
 8005424:	005000de 	.word	0x005000de

		}

		break;
	case STATE_UNDER16PAGES2:
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
 8005428:	4e76      	ldr	r6, [pc, #472]	@ (8005604 <usbtransmit+0x220>)
 800542a:	6821      	ldr	r1, [r4, #0]
 800542c:	6833      	ldr	r3, [r6, #0]
 800542e:	4876      	ldr	r0, [pc, #472]	@ (8005608 <usbtransmit+0x224>)
 8005430:	2200      	movs	r2, #0
 8005432:	9200      	str	r2, [sp, #0]
 8005434:	4a75      	ldr	r2, [pc, #468]	@ (800560c <usbtransmit+0x228>)
 8005436:	f009 fc99 	bl	800ed6c <SPIF_ReadPage>
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
 800543a:	4874      	ldr	r0, [pc, #464]	@ (800560c <usbtransmit+0x228>)
 800543c:	8831      	ldrh	r1, [r6, #0]
 800543e:	f009 fd4f 	bl	800eee0 <CDC_Transmit_FS>
		HAL_Delay(100);
 8005442:	2064      	movs	r0, #100	@ 0x64
 8005444:	f000 f98a 	bl	800575c <HAL_Delay>

		break;
	case STATE_OVER16PAGES3:
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
		taillefin = snprintf((char  *)usbbuffer,64,"findetrame\n\r");
 8005448:	4b71      	ldr	r3, [pc, #452]	@ (8005610 <usbtransmit+0x22c>)
 800544a:	4c72      	ldr	r4, [pc, #456]	@ (8005614 <usbtransmit+0x230>)
 800544c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800544e:	781b      	ldrb	r3, [r3, #0]
 8005450:	6020      	str	r0, [r4, #0]
 8005452:	6061      	str	r1, [r4, #4]
		CDC_Transmit_FS((char  *)usbbuffer,taillefin);
 8005454:	4620      	mov	r0, r4
 8005456:	210c      	movs	r1, #12
		taillefin = snprintf((char  *)usbbuffer,64,"findetrame\n\r");
 8005458:	60a2      	str	r2, [r4, #8]
 800545a:	7323      	strb	r3, [r4, #12]
		CDC_Transmit_FS((char  *)usbbuffer,taillefin);
 800545c:	f009 fd40 	bl	800eee0 <CDC_Transmit_FS>
		usbtransmitstate++;
 8005460:	782b      	ldrb	r3, [r5, #0]
 8005462:	3301      	adds	r3, #1
 8005464:	702b      	strb	r3, [r5, #0]


				}


}
 8005466:	b003      	add	sp, #12
 8005468:	bdf0      	pop	{r4, r5, r6, r7, pc}
					ssd1306_WriteString("write",Font_7x10,White);
 800546a:	4c6b      	ldr	r4, [pc, #428]	@ (8005618 <usbtransmit+0x234>)
					ssd1306_Fill(Black);
 800546c:	f7fd faa0 	bl	80029b0 <ssd1306_Fill>
					ssd1306_SetCursor(32,40);
 8005470:	2128      	movs	r1, #40	@ 0x28
 8005472:	2020      	movs	r0, #32
 8005474:	f7fd fd60 	bl	8002f38 <ssd1306_SetCursor>
					ssd1306_WriteString("write",Font_7x10,White);
 8005478:	e894 0006 	ldmia.w	r4, {r1, r2}
 800547c:	2301      	movs	r3, #1
 800547e:	4860      	ldr	r0, [pc, #384]	@ (8005600 <usbtransmit+0x21c>)
 8005480:	f7fd fd3e 	bl	8002f00 <ssd1306_WriteString>
					ssd1306_SetCursor(32,50);
 8005484:	2132      	movs	r1, #50	@ 0x32
 8005486:	2020      	movs	r0, #32
 8005488:	f7fd fd56 	bl	8002f38 <ssd1306_SetCursor>
					ssd1306_WriteString("nothing",Font_7x10,White);
 800548c:	e894 0006 	ldmia.w	r4, {r1, r2}
 8005490:	4862      	ldr	r0, [pc, #392]	@ (800561c <usbtransmit+0x238>)
 8005492:	2301      	movs	r3, #1
 8005494:	f7fd fd34 	bl	8002f00 <ssd1306_WriteString>
					osThreadSuspend(USBTRANSMITHandle);
 8005498:	4861      	ldr	r0, [pc, #388]	@ (8005620 <usbtransmit+0x23c>)
					usbtransmiten=0;
 800549a:	4d62      	ldr	r5, [pc, #392]	@ (8005624 <usbtransmit+0x240>)
					usbstate=USBSTATEFINISH;
 800549c:	4c62      	ldr	r4, [pc, #392]	@ (8005628 <usbtransmit+0x244>)
					usbindexsecteur=0;
 800549e:	4963      	ldr	r1, [pc, #396]	@ (800562c <usbtransmit+0x248>)
							usbindexpage=0;
 80054a0:	4a63      	ldr	r2, [pc, #396]	@ (8005630 <usbtransmit+0x24c>)
					osThreadSuspend(USBTRANSMITHandle);
 80054a2:	6800      	ldr	r0, [r0, #0]
					usbtransmiten=0;
 80054a4:	2300      	movs	r3, #0
 80054a6:	602b      	str	r3, [r5, #0]
					usbstate=USBSTATEFINISH;
 80054a8:	2503      	movs	r5, #3
 80054aa:	7025      	strb	r5, [r4, #0]
					usbindexsecteur=0;
 80054ac:	600b      	str	r3, [r1, #0]
							usbindexpage=0;
 80054ae:	6013      	str	r3, [r2, #0]
}
 80054b0:	b003      	add	sp, #12
 80054b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
					osThreadSuspend(USBTRANSMITHandle);
 80054b6:	f008 b847 	b.w	800d548 <osThreadSuspend>
		ssd1306_SetCursor(32,48);
 80054ba:	2130      	movs	r1, #48	@ 0x30
 80054bc:	2020      	movs	r0, #32
 80054be:	f7fd fd3b 	bl	8002f38 <ssd1306_SetCursor>
		ssd1306_WriteString("finish",Font_7x10,White);
 80054c2:	4b55      	ldr	r3, [pc, #340]	@ (8005618 <usbtransmit+0x234>)
 80054c4:	485b      	ldr	r0, [pc, #364]	@ (8005634 <usbtransmit+0x250>)
 80054c6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80054ca:	2301      	movs	r3, #1
 80054cc:	e7e2      	b.n	8005494 <usbtransmit+0xb0>
			SPIF_ReadSector(&hspif1,usbindexsecteur, (uint8_t  *)flashread, 2048, 0);
 80054ce:	4e57      	ldr	r6, [pc, #348]	@ (800562c <usbtransmit+0x248>)
 80054d0:	4a4e      	ldr	r2, [pc, #312]	@ (800560c <usbtransmit+0x228>)
 80054d2:	484d      	ldr	r0, [pc, #308]	@ (8005608 <usbtransmit+0x224>)
 80054d4:	2300      	movs	r3, #0
 80054d6:	9300      	str	r3, [sp, #0]
 80054d8:	6831      	ldr	r1, [r6, #0]
 80054da:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80054de:	f009 fc67 	bl	800edb0 <SPIF_ReadSector>
			CDC_Transmit_FS((char  * )flashread,2048);
 80054e2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80054e6:	4849      	ldr	r0, [pc, #292]	@ (800560c <usbtransmit+0x228>)
 80054e8:	f009 fcfa 	bl	800eee0 <CDC_Transmit_FS>
			percentage((float) (usbindexsecteur*16*100)/pagenumber);
 80054ec:	6833      	ldr	r3, [r6, #0]
 80054ee:	ed94 7a00 	vldr	s14, [r4]
 80054f2:	f44f 62c8 	mov.w	r2, #1600	@ 0x640
 80054f6:	fb02 f303 	mul.w	r3, r2, r3
 80054fa:	ee07 3a90 	vmov	s15, r3
 80054fe:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8005502:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005506:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800550a:	f7fd ff29 	bl	8003360 <percentage>
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 800550e:	6822      	ldr	r2, [r4, #0]
			usbindexsecteur++;
 8005510:	6833      	ldr	r3, [r6, #0]
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005512:	2a00      	cmp	r2, #0
			usbindexsecteur++;
 8005514:	f103 0301 	add.w	r3, r3, #1
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005518:	bfb8      	it	lt
 800551a:	320f      	addlt	r2, #15
 800551c:	ebb3 1f22 	cmp.w	r3, r2, asr #4
			usbindexsecteur++;
 8005520:	6033      	str	r3, [r6, #0]
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005522:	d1a0      	bne.n	8005466 <usbtransmit+0x82>
 8005524:	e79c      	b.n	8005460 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,(usbindexsecteur*16+usbindexpage), (uint8_t  *)flashread, 256, 0);
 8005526:	4e42      	ldr	r6, [pc, #264]	@ (8005630 <usbtransmit+0x24c>)
 8005528:	4f40      	ldr	r7, [pc, #256]	@ (800562c <usbtransmit+0x248>)
 800552a:	6833      	ldr	r3, [r6, #0]
 800552c:	6839      	ldr	r1, [r7, #0]
 800552e:	4a37      	ldr	r2, [pc, #220]	@ (800560c <usbtransmit+0x228>)
 8005530:	4835      	ldr	r0, [pc, #212]	@ (8005608 <usbtransmit+0x224>)
 8005532:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 8005536:	2300      	movs	r3, #0
 8005538:	9300      	str	r3, [sp, #0]
 800553a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800553e:	f009 fc15 	bl	800ed6c <SPIF_ReadPage>
		CDC_Transmit_FS((char  * )flashread,256);
 8005542:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8005546:	4831      	ldr	r0, [pc, #196]	@ (800560c <usbtransmit+0x228>)
 8005548:	f009 fcca 	bl	800eee0 <CDC_Transmit_FS>
		percentage((float) ((usbindexsecteur*16+usbindexpage)*100)/pagenumber);
 800554c:	683a      	ldr	r2, [r7, #0]
 800554e:	6833      	ldr	r3, [r6, #0]
 8005550:	edd4 7a00 	vldr	s15, [r4]
 8005554:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 8005558:	2264      	movs	r2, #100	@ 0x64
 800555a:	fb02 f303 	mul.w	r3, r2, r3
 800555e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8005562:	ee07 3a90 	vmov	s15, r3
 8005566:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800556a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800556e:	f7fd fef7 	bl	8003360 <percentage>
		usbindexpage++;
 8005572:	6833      	ldr	r3, [r6, #0]
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 8005574:	683a      	ldr	r2, [r7, #0]
 8005576:	6821      	ldr	r1, [r4, #0]
		usbindexpage++;
 8005578:	3301      	adds	r3, #1
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 800557a:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 800557e:	428a      	cmp	r2, r1
		usbindexpage++;
 8005580:	6033      	str	r3, [r6, #0]
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 8005582:	f47f af70 	bne.w	8005466 <usbtransmit+0x82>
 8005586:	e76b      	b.n	8005460 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,usbindexpage, (uint8_t  *)flashread, 256, 0);
 8005588:	4e29      	ldr	r6, [pc, #164]	@ (8005630 <usbtransmit+0x24c>)
 800558a:	4a20      	ldr	r2, [pc, #128]	@ (800560c <usbtransmit+0x228>)
 800558c:	481e      	ldr	r0, [pc, #120]	@ (8005608 <usbtransmit+0x224>)
 800558e:	2300      	movs	r3, #0
 8005590:	9300      	str	r3, [sp, #0]
 8005592:	6831      	ldr	r1, [r6, #0]
 8005594:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005598:	f009 fbe8 	bl	800ed6c <SPIF_ReadPage>
		CDC_Transmit_FS((char  * )flashread,256);
 800559c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80055a0:	481a      	ldr	r0, [pc, #104]	@ (800560c <usbtransmit+0x228>)
 80055a2:	f009 fc9d 	bl	800eee0 <CDC_Transmit_FS>
		percentage((float) (usbindexpage*100)/pagenumber);
 80055a6:	6833      	ldr	r3, [r6, #0]
 80055a8:	ed94 7a00 	vldr	s14, [r4]
 80055ac:	2264      	movs	r2, #100	@ 0x64
 80055ae:	fb02 f303 	mul.w	r3, r2, r3
 80055b2:	ee07 3a90 	vmov	s15, r3
 80055b6:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 80055ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055be:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80055c2:	f7fd fecd 	bl	8003360 <percentage>
		usbindexpage++;
 80055c6:	6833      	ldr	r3, [r6, #0]
		if(usbindexpage==pagenumber){
 80055c8:	6822      	ldr	r2, [r4, #0]
		usbindexpage++;
 80055ca:	3301      	adds	r3, #1
		if(usbindexpage==pagenumber){
 80055cc:	4293      	cmp	r3, r2
		usbindexpage++;
 80055ce:	6033      	str	r3, [r6, #0]
		if(usbindexpage==pagenumber){
 80055d0:	f47f af49 	bne.w	8005466 <usbtransmit+0x82>
 80055d4:	e744      	b.n	8005460 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
 80055d6:	4e0b      	ldr	r6, [pc, #44]	@ (8005604 <usbtransmit+0x220>)
 80055d8:	6821      	ldr	r1, [r4, #0]
 80055da:	6833      	ldr	r3, [r6, #0]
 80055dc:	480a      	ldr	r0, [pc, #40]	@ (8005608 <usbtransmit+0x224>)
 80055de:	2200      	movs	r2, #0
 80055e0:	9200      	str	r2, [sp, #0]
 80055e2:	4a0a      	ldr	r2, [pc, #40]	@ (800560c <usbtransmit+0x228>)
 80055e4:	f009 fbc2 	bl	800ed6c <SPIF_ReadPage>
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
 80055e8:	8831      	ldrh	r1, [r6, #0]
 80055ea:	4808      	ldr	r0, [pc, #32]	@ (800560c <usbtransmit+0x228>)
 80055ec:	f009 fc78 	bl	800eee0 <CDC_Transmit_FS>
 80055f0:	e72a      	b.n	8005448 <usbtransmit+0x64>
 80055f2:	bf00      	nop
 80055f4:	200006b8 	.word	0x200006b8
 80055f8:	2000002c 	.word	0x2000002c
 80055fc:	200017f8 	.word	0x200017f8
 8005600:	08016218 	.word	0x08016218
 8005604:	200006bc 	.word	0x200006bc
 8005608:	20000fd4 	.word	0x20000fd4
 800560c:	200006c0 	.word	0x200006c0
 8005610:	0801628c 	.word	0x0801628c
 8005614:	20000640 	.word	0x20000640
 8005618:	20000024 	.word	0x20000024
 800561c:	080162a4 	.word	0x080162a4
 8005620:	200003f0 	.word	0x200003f0
 8005624:	20000618 	.word	0x20000618
 8005628:	2000106c 	.word	0x2000106c
 800562c:	200017fc 	.word	0x200017fc
 8005630:	20001800 	.word	0x20001800
 8005634:	0801629c 	.word	0x0801629c

08005638 <CopyDataInit>:
 8005638:	58d4      	ldr	r4, [r2, r3]
 800563a:	50c4      	str	r4, [r0, r3]
 800563c:	3304      	adds	r3, #4

0800563e <LoopCopyDataInit>:
 800563e:	18c4      	adds	r4, r0, r3
 8005640:	428c      	cmp	r4, r1
 8005642:	d3f9      	bcc.n	8005638 <CopyDataInit>
 8005644:	4770      	bx	lr

08005646 <FillZerobss>:
 8005646:	6003      	str	r3, [r0, #0]
 8005648:	3004      	adds	r0, #4

0800564a <LoopFillZerobss>:
 800564a:	4288      	cmp	r0, r1
 800564c:	d3fb      	bcc.n	8005646 <FillZerobss>
 800564e:	4770      	bx	lr

08005650 <Reset_Handler>:
 8005650:	480c      	ldr	r0, [pc, #48]	@ (8005684 <LoopForever+0x2>)
 8005652:	4685      	mov	sp, r0
 8005654:	f7ff fcb4 	bl	8004fc0 <SystemInit>
 8005658:	480b      	ldr	r0, [pc, #44]	@ (8005688 <LoopForever+0x6>)
 800565a:	490c      	ldr	r1, [pc, #48]	@ (800568c <LoopForever+0xa>)
 800565c:	4a0c      	ldr	r2, [pc, #48]	@ (8005690 <LoopForever+0xe>)
 800565e:	2300      	movs	r3, #0
 8005660:	f7ff ffed 	bl	800563e <LoopCopyDataInit>
 8005664:	480b      	ldr	r0, [pc, #44]	@ (8005694 <LoopForever+0x12>)
 8005666:	490c      	ldr	r1, [pc, #48]	@ (8005698 <LoopForever+0x16>)
 8005668:	4a0c      	ldr	r2, [pc, #48]	@ (800569c <LoopForever+0x1a>)
 800566a:	2300      	movs	r3, #0
 800566c:	f7ff ffe7 	bl	800563e <LoopCopyDataInit>
 8005670:	480b      	ldr	r0, [pc, #44]	@ (80056a0 <LoopForever+0x1e>)
 8005672:	490c      	ldr	r1, [pc, #48]	@ (80056a4 <LoopForever+0x22>)
 8005674:	2300      	movs	r3, #0
 8005676:	f7ff ffe8 	bl	800564a <LoopFillZerobss>
 800567a:	f00a ff4d 	bl	8010518 <__libc_init_array>
 800567e:	f7fc fce3 	bl	8002048 <main>

08005682 <LoopForever>:
 8005682:	e7fe      	b.n	8005682 <LoopForever>
 8005684:	20030000 	.word	0x20030000
 8005688:	20000008 	.word	0x20000008
 800568c:	200002fc 	.word	0x200002fc
 8005690:	08018a20 	.word	0x08018a20
 8005694:	20030000 	.word	0x20030000
 8005698:	20030000 	.word	0x20030000
 800569c:	08018d14 	.word	0x08018d14
 80056a0:	20000300 	.word	0x20000300
 80056a4:	20005b94 	.word	0x20005b94

080056a8 <ADC1_IRQHandler>:
 80056a8:	e7fe      	b.n	80056a8 <ADC1_IRQHandler>
	...

080056ac <HAL_MspDeInit>:
 80056ac:	4770      	bx	lr
 80056ae:	bf00      	nop

080056b0 <HAL_DeInit>:
 80056b0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80056b4:	f04f 32ff 	mov.w	r2, #4294967295
 80056b8:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80056ba:	b510      	push	{r4, lr}
 80056bc:	639a      	str	r2, [r3, #56]	@ 0x38
 80056be:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 80056c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80056c2:	2400      	movs	r4, #0
 80056c4:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80056c6:	639c      	str	r4, [r3, #56]	@ 0x38
 80056c8:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 80056ca:	63dc      	str	r4, [r3, #60]	@ 0x3c
 80056cc:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80056ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80056d0:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80056d2:	641c      	str	r4, [r3, #64]	@ 0x40
 80056d4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80056d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80056d8:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80056da:	645c      	str	r4, [r3, #68]	@ 0x44
 80056dc:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 80056de:	629a      	str	r2, [r3, #40]	@ 0x28
 80056e0:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 80056e2:	629c      	str	r4, [r3, #40]	@ 0x28
 80056e4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80056e6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80056e8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80056ea:	62dc      	str	r4, [r3, #44]	@ 0x2c
 80056ec:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80056ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80056f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80056f2:	631c      	str	r4, [r3, #48]	@ 0x30
 80056f4:	f7ff ffda 	bl	80056ac <HAL_MspDeInit>
 80056f8:	4620      	mov	r0, r4
 80056fa:	bd10      	pop	{r4, pc}

080056fc <HAL_Init>:
 80056fc:	4a0a      	ldr	r2, [pc, #40]	@ (8005728 <HAL_Init+0x2c>)
 80056fe:	6813      	ldr	r3, [r2, #0]
 8005700:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005704:	b510      	push	{r4, lr}
 8005706:	2003      	movs	r0, #3
 8005708:	6013      	str	r3, [r2, #0]
 800570a:	f000 fc4b 	bl	8005fa4 <HAL_NVIC_SetPriorityGrouping>
 800570e:	200f      	movs	r0, #15
 8005710:	f7ff fae8 	bl	8004ce4 <HAL_InitTick>
 8005714:	b110      	cbz	r0, 800571c <HAL_Init+0x20>
 8005716:	2401      	movs	r4, #1
 8005718:	4620      	mov	r0, r4
 800571a:	bd10      	pop	{r4, pc}
 800571c:	4604      	mov	r4, r0
 800571e:	f7ff fac3 	bl	8004ca8 <HAL_MspInit>
 8005722:	4620      	mov	r0, r4
 8005724:	bd10      	pop	{r4, pc}
 8005726:	bf00      	nop
 8005728:	58004000 	.word	0x58004000

0800572c <HAL_IncTick>:
 800572c:	4a03      	ldr	r2, [pc, #12]	@ (800573c <HAL_IncTick+0x10>)
 800572e:	4b04      	ldr	r3, [pc, #16]	@ (8005740 <HAL_IncTick+0x14>)
 8005730:	6811      	ldr	r1, [r2, #0]
 8005732:	781b      	ldrb	r3, [r3, #0]
 8005734:	440b      	add	r3, r1
 8005736:	6013      	str	r3, [r2, #0]
 8005738:	4770      	bx	lr
 800573a:	bf00      	nop
 800573c:	20001804 	.word	0x20001804
 8005740:	20000038 	.word	0x20000038

08005744 <HAL_GetTick>:
 8005744:	4b01      	ldr	r3, [pc, #4]	@ (800574c <HAL_GetTick+0x8>)
 8005746:	6818      	ldr	r0, [r3, #0]
 8005748:	4770      	bx	lr
 800574a:	bf00      	nop
 800574c:	20001804 	.word	0x20001804

08005750 <HAL_GetTickPrio>:
 8005750:	4b01      	ldr	r3, [pc, #4]	@ (8005758 <HAL_GetTickPrio+0x8>)
 8005752:	6818      	ldr	r0, [r3, #0]
 8005754:	4770      	bx	lr
 8005756:	bf00      	nop
 8005758:	2000003c 	.word	0x2000003c

0800575c <HAL_Delay>:
 800575c:	b538      	push	{r3, r4, r5, lr}
 800575e:	4604      	mov	r4, r0
 8005760:	f7ff fff0 	bl	8005744 <HAL_GetTick>
 8005764:	1c63      	adds	r3, r4, #1
 8005766:	4605      	mov	r5, r0
 8005768:	d002      	beq.n	8005770 <HAL_Delay+0x14>
 800576a:	4b04      	ldr	r3, [pc, #16]	@ (800577c <HAL_Delay+0x20>)
 800576c:	781b      	ldrb	r3, [r3, #0]
 800576e:	441c      	add	r4, r3
 8005770:	f7ff ffe8 	bl	8005744 <HAL_GetTick>
 8005774:	1b40      	subs	r0, r0, r5
 8005776:	42a0      	cmp	r0, r4
 8005778:	d3fa      	bcc.n	8005770 <HAL_Delay+0x14>
 800577a:	bd38      	pop	{r3, r4, r5, pc}
 800577c:	20000038 	.word	0x20000038

08005780 <HAL_ADC_Init>:
 8005780:	b530      	push	{r4, r5, lr}
 8005782:	b083      	sub	sp, #12
 8005784:	2300      	movs	r3, #0
 8005786:	9301      	str	r3, [sp, #4]
 8005788:	2800      	cmp	r0, #0
 800578a:	f000 8087 	beq.w	800589c <HAL_ADC_Init+0x11c>
 800578e:	6d45      	ldr	r5, [r0, #84]	@ 0x54
 8005790:	4604      	mov	r4, r0
 8005792:	2d00      	cmp	r5, #0
 8005794:	f000 8087 	beq.w	80058a6 <HAL_ADC_Init+0x126>
 8005798:	6822      	ldr	r2, [r4, #0]
 800579a:	6893      	ldr	r3, [r2, #8]
 800579c:	0098      	lsls	r0, r3, #2
 800579e:	d505      	bpl.n	80057ac <HAL_ADC_Init+0x2c>
 80057a0:	6893      	ldr	r3, [r2, #8]
 80057a2:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 80057a6:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80057aa:	6093      	str	r3, [r2, #8]
 80057ac:	6893      	ldr	r3, [r2, #8]
 80057ae:	00d9      	lsls	r1, r3, #3
 80057b0:	d419      	bmi.n	80057e6 <HAL_ADC_Init+0x66>
 80057b2:	4b59      	ldr	r3, [pc, #356]	@ (8005918 <HAL_ADC_Init+0x198>)
 80057b4:	4859      	ldr	r0, [pc, #356]	@ (800591c <HAL_ADC_Init+0x19c>)
 80057b6:	681b      	ldr	r3, [r3, #0]
 80057b8:	6891      	ldr	r1, [r2, #8]
 80057ba:	099b      	lsrs	r3, r3, #6
 80057bc:	fba0 0303 	umull	r0, r3, r0, r3
 80057c0:	f021 4110 	bic.w	r1, r1, #2415919104	@ 0x90000000
 80057c4:	099b      	lsrs	r3, r3, #6
 80057c6:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80057ca:	3301      	adds	r3, #1
 80057cc:	005b      	lsls	r3, r3, #1
 80057ce:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80057d2:	6091      	str	r1, [r2, #8]
 80057d4:	9301      	str	r3, [sp, #4]
 80057d6:	9b01      	ldr	r3, [sp, #4]
 80057d8:	b12b      	cbz	r3, 80057e6 <HAL_ADC_Init+0x66>
 80057da:	9b01      	ldr	r3, [sp, #4]
 80057dc:	3b01      	subs	r3, #1
 80057de:	9301      	str	r3, [sp, #4]
 80057e0:	9b01      	ldr	r3, [sp, #4]
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	d1f9      	bne.n	80057da <HAL_ADC_Init+0x5a>
 80057e6:	6893      	ldr	r3, [r2, #8]
 80057e8:	00db      	lsls	r3, r3, #3
 80057ea:	d45a      	bmi.n	80058a2 <HAL_ADC_Init+0x122>
 80057ec:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80057ee:	f043 0310 	orr.w	r3, r3, #16
 80057f2:	6563      	str	r3, [r4, #84]	@ 0x54
 80057f4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80057f6:	2001      	movs	r0, #1
 80057f8:	4303      	orrs	r3, r0
 80057fa:	65a3      	str	r3, [r4, #88]	@ 0x58
 80057fc:	6893      	ldr	r3, [r2, #8]
 80057fe:	f013 0f04 	tst.w	r3, #4
 8005802:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005804:	d146      	bne.n	8005894 <HAL_ADC_Init+0x114>
 8005806:	06dd      	lsls	r5, r3, #27
 8005808:	d444      	bmi.n	8005894 <HAL_ADC_Init+0x114>
 800580a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800580c:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8005810:	f043 0302 	orr.w	r3, r3, #2
 8005814:	6563      	str	r3, [r4, #84]	@ 0x54
 8005816:	6893      	ldr	r3, [r2, #8]
 8005818:	07d9      	lsls	r1, r3, #31
 800581a:	d40a      	bmi.n	8005832 <HAL_ADC_Init+0xb2>
 800581c:	4b40      	ldr	r3, [pc, #256]	@ (8005920 <HAL_ADC_Init+0x1a0>)
 800581e:	689b      	ldr	r3, [r3, #8]
 8005820:	07db      	lsls	r3, r3, #31
 8005822:	d406      	bmi.n	8005832 <HAL_ADC_Init+0xb2>
 8005824:	493f      	ldr	r1, [pc, #252]	@ (8005924 <HAL_ADC_Init+0x1a4>)
 8005826:	6865      	ldr	r5, [r4, #4]
 8005828:	688b      	ldr	r3, [r1, #8]
 800582a:	f423 137c 	bic.w	r3, r3, #4128768	@ 0x3f0000
 800582e:	432b      	orrs	r3, r5
 8005830:	608b      	str	r3, [r1, #8]
 8005832:	68e5      	ldr	r5, [r4, #12]
 8005834:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005836:	f894 1020 	ldrb.w	r1, [r4, #32]
 800583a:	432b      	orrs	r3, r5
 800583c:	68a5      	ldr	r5, [r4, #8]
 800583e:	432b      	orrs	r3, r5
 8005840:	7e65      	ldrb	r5, [r4, #25]
 8005842:	2901      	cmp	r1, #1
 8005844:	ea43 3345 	orr.w	r3, r3, r5, lsl #13
 8005848:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800584c:	d047      	beq.n	80058de <HAL_ADC_Init+0x15e>
 800584e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8005850:	b121      	cbz	r1, 800585c <HAL_ADC_Init+0xdc>
 8005852:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
 8005854:	f401 7170 	and.w	r1, r1, #960	@ 0x3c0
 8005858:	4329      	orrs	r1, r5
 800585a:	430b      	orrs	r3, r1
 800585c:	68d5      	ldr	r5, [r2, #12]
 800585e:	4932      	ldr	r1, [pc, #200]	@ (8005928 <HAL_ADC_Init+0x1a8>)
 8005860:	4029      	ands	r1, r5
 8005862:	4319      	orrs	r1, r3
 8005864:	60d1      	str	r1, [r2, #12]
 8005866:	6891      	ldr	r1, [r2, #8]
 8005868:	6893      	ldr	r3, [r2, #8]
 800586a:	f001 0104 	and.w	r1, r1, #4
 800586e:	f003 0308 	and.w	r3, r3, #8
 8005872:	430b      	orrs	r3, r1
 8005874:	d01d      	beq.n	80058b2 <HAL_ADC_Init+0x132>
 8005876:	6923      	ldr	r3, [r4, #16]
 8005878:	2b01      	cmp	r3, #1
 800587a:	d035      	beq.n	80058e8 <HAL_ADC_Init+0x168>
 800587c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800587e:	f023 030f 	bic.w	r3, r3, #15
 8005882:	6313      	str	r3, [r2, #48]	@ 0x30
 8005884:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005886:	f023 0303 	bic.w	r3, r3, #3
 800588a:	f043 0301 	orr.w	r3, r3, #1
 800588e:	6563      	str	r3, [r4, #84]	@ 0x54
 8005890:	b003      	add	sp, #12
 8005892:	bd30      	pop	{r4, r5, pc}
 8005894:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005896:	f043 0310 	orr.w	r3, r3, #16
 800589a:	6563      	str	r3, [r4, #84]	@ 0x54
 800589c:	2001      	movs	r0, #1
 800589e:	b003      	add	sp, #12
 80058a0:	bd30      	pop	{r4, r5, pc}
 80058a2:	2000      	movs	r0, #0
 80058a4:	e7aa      	b.n	80057fc <HAL_ADC_Init+0x7c>
 80058a6:	f7fb fdd3 	bl	8001450 <HAL_ADC_MspInit>
 80058aa:	65a5      	str	r5, [r4, #88]	@ 0x58
 80058ac:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 80058b0:	e772      	b.n	8005798 <HAL_ADC_Init+0x18>
 80058b2:	68d1      	ldr	r1, [r2, #12]
 80058b4:	f894 3030 	ldrb.w	r3, [r4, #48]	@ 0x30
 80058b8:	7e25      	ldrb	r5, [r4, #24]
 80058ba:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
 80058be:	005b      	lsls	r3, r3, #1
 80058c0:	f021 0102 	bic.w	r1, r1, #2
 80058c4:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
 80058c8:	430b      	orrs	r3, r1
 80058ca:	60d3      	str	r3, [r2, #12]
 80058cc:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80058d0:	2b01      	cmp	r3, #1
 80058d2:	d011      	beq.n	80058f8 <HAL_ADC_Init+0x178>
 80058d4:	6913      	ldr	r3, [r2, #16]
 80058d6:	f023 0301 	bic.w	r3, r3, #1
 80058da:	6113      	str	r3, [r2, #16]
 80058dc:	e7cb      	b.n	8005876 <HAL_ADC_Init+0xf6>
 80058de:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80058e0:	3901      	subs	r1, #1
 80058e2:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
 80058e6:	e7b2      	b.n	800584e <HAL_ADC_Init+0xce>
 80058e8:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 80058ea:	69e3      	ldr	r3, [r4, #28]
 80058ec:	f021 010f 	bic.w	r1, r1, #15
 80058f0:	3b01      	subs	r3, #1
 80058f2:	430b      	orrs	r3, r1
 80058f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80058f6:	e7c5      	b.n	8005884 <HAL_ADC_Init+0x104>
 80058f8:	6911      	ldr	r1, [r2, #16]
 80058fa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80058fc:	6c25      	ldr	r5, [r4, #64]	@ 0x40
 80058fe:	f36f 018a 	bfc	r1, #2, #9
 8005902:	432b      	orrs	r3, r5
 8005904:	430b      	orrs	r3, r1
 8005906:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8005908:	430b      	orrs	r3, r1
 800590a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800590c:	430b      	orrs	r3, r1
 800590e:	f043 0301 	orr.w	r3, r3, #1
 8005912:	6113      	str	r3, [r2, #16]
 8005914:	e7af      	b.n	8005876 <HAL_ADC_Init+0xf6>
 8005916:	bf00      	nop
 8005918:	20000034 	.word	0x20000034
 800591c:	053e2d63 	.word	0x053e2d63
 8005920:	50040000 	.word	0x50040000
 8005924:	50040300 	.word	0x50040300
 8005928:	fff0c007 	.word	0xfff0c007

0800592c <HAL_ADC_ConvHalfCpltCallback>:
 800592c:	4770      	bx	lr
 800592e:	bf00      	nop

08005930 <ADC_DMAHalfConvCplt>:
 8005930:	b508      	push	{r3, lr}
 8005932:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8005934:	f7ff fffa 	bl	800592c <HAL_ADC_ConvHalfCpltCallback>
 8005938:	bd08      	pop	{r3, pc}
 800593a:	bf00      	nop

0800593c <HAL_ADC_ErrorCallback>:
 800593c:	4770      	bx	lr
 800593e:	bf00      	nop

08005940 <ADC_DMAConvCplt>:
 8005940:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005942:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005944:	f012 0f50 	tst.w	r2, #80	@ 0x50
 8005948:	b510      	push	{r4, lr}
 800594a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800594c:	d11d      	bne.n	800598a <ADC_DMAConvCplt+0x4a>
 800594e:	6819      	ldr	r1, [r3, #0]
 8005950:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005954:	655a      	str	r2, [r3, #84]	@ 0x54
 8005956:	680a      	ldr	r2, [r1, #0]
 8005958:	f012 0f08 	tst.w	r2, #8
 800595c:	68ca      	ldr	r2, [r1, #12]
 800595e:	d01b      	beq.n	8005998 <ADC_DMAConvCplt+0x58>
 8005960:	f412 6f40 	tst.w	r2, #3072	@ 0xc00
 8005964:	d10d      	bne.n	8005982 <ADC_DMAConvCplt+0x42>
 8005966:	68ca      	ldr	r2, [r1, #12]
 8005968:	0494      	lsls	r4, r2, #18
 800596a:	d40a      	bmi.n	8005982 <ADC_DMAConvCplt+0x42>
 800596c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800596e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005972:	655a      	str	r2, [r3, #84]	@ 0x54
 8005974:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005976:	04d1      	lsls	r1, r2, #19
 8005978:	d403      	bmi.n	8005982 <ADC_DMAConvCplt+0x42>
 800597a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800597c:	f042 0201 	orr.w	r2, r2, #1
 8005980:	655a      	str	r2, [r3, #84]	@ 0x54
 8005982:	4618      	mov	r0, r3
 8005984:	f7fb fdb4 	bl	80014f0 <HAL_ADC_ConvCpltCallback>
 8005988:	bd10      	pop	{r4, pc}
 800598a:	06d2      	lsls	r2, r2, #27
 800598c:	d40a      	bmi.n	80059a4 <ADC_DMAConvCplt+0x64>
 800598e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005994:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005996:	4718      	bx	r3
 8005998:	0790      	lsls	r0, r2, #30
 800599a:	d5e7      	bpl.n	800596c <ADC_DMAConvCplt+0x2c>
 800599c:	4618      	mov	r0, r3
 800599e:	f7fb fda7 	bl	80014f0 <HAL_ADC_ConvCpltCallback>
 80059a2:	e7f1      	b.n	8005988 <ADC_DMAConvCplt+0x48>
 80059a4:	4618      	mov	r0, r3
 80059a6:	f7ff ffc9 	bl	800593c <HAL_ADC_ErrorCallback>
 80059aa:	bd10      	pop	{r4, pc}

080059ac <ADC_DMAError>:
 80059ac:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80059ae:	b508      	push	{r3, lr}
 80059b0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80059b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80059b6:	6543      	str	r3, [r0, #84]	@ 0x54
 80059b8:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 80059ba:	f043 0304 	orr.w	r3, r3, #4
 80059be:	6583      	str	r3, [r0, #88]	@ 0x58
 80059c0:	f7ff ffbc 	bl	800593c <HAL_ADC_ErrorCallback>
 80059c4:	bd08      	pop	{r3, pc}
 80059c6:	bf00      	nop

080059c8 <HAL_ADC_ConfigChannel>:
 80059c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059ca:	f890 2050 	ldrb.w	r2, [r0, #80]	@ 0x50
 80059ce:	b083      	sub	sp, #12
 80059d0:	4603      	mov	r3, r0
 80059d2:	2a01      	cmp	r2, #1
 80059d4:	f04f 0000 	mov.w	r0, #0
 80059d8:	9001      	str	r0, [sp, #4]
 80059da:	f000 80e9 	beq.w	8005bb0 <HAL_ADC_ConfigChannel+0x1e8>
 80059de:	2001      	movs	r0, #1
 80059e0:	681a      	ldr	r2, [r3, #0]
 80059e2:	f883 0050 	strb.w	r0, [r3, #80]	@ 0x50
 80059e6:	6890      	ldr	r0, [r2, #8]
 80059e8:	0745      	lsls	r5, r0, #29
 80059ea:	d509      	bpl.n	8005a00 <HAL_ADC_ConfigChannel+0x38>
 80059ec:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80059ee:	f042 0220 	orr.w	r2, r2, #32
 80059f2:	655a      	str	r2, [r3, #84]	@ 0x54
 80059f4:	2001      	movs	r0, #1
 80059f6:	2200      	movs	r2, #0
 80059f8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80059fc:	b003      	add	sp, #12
 80059fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a00:	6848      	ldr	r0, [r1, #4]
 8005a02:	ea4f 1e90 	mov.w	lr, r0, lsr #6
 8005a06:	f000 0c1f 	and.w	ip, r0, #31
 8005a0a:	f00e 0e0c 	and.w	lr, lr, #12
 8005a0e:	6808      	ldr	r0, [r1, #0]
 8005a10:	f102 0430 	add.w	r4, r2, #48	@ 0x30
 8005a14:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005a18:	f854 500e 	ldr.w	r5, [r4, lr]
 8005a1c:	261f      	movs	r6, #31
 8005a1e:	fa00 f00c 	lsl.w	r0, r0, ip
 8005a22:	fa06 fc0c 	lsl.w	ip, r6, ip
 8005a26:	ea25 0c0c 	bic.w	ip, r5, ip
 8005a2a:	ea40 000c 	orr.w	r0, r0, ip
 8005a2e:	f844 000e 	str.w	r0, [r4, lr]
 8005a32:	6890      	ldr	r0, [r2, #8]
 8005a34:	f010 0f04 	tst.w	r0, #4
 8005a38:	6890      	ldr	r0, [r2, #8]
 8005a3a:	d101      	bne.n	8005a40 <HAL_ADC_ConfigChannel+0x78>
 8005a3c:	0704      	lsls	r4, r0, #28
 8005a3e:	d538      	bpl.n	8005ab2 <HAL_ADC_ConfigChannel+0xea>
 8005a40:	6890      	ldr	r0, [r2, #8]
 8005a42:	07c0      	lsls	r0, r0, #31
 8005a44:	d433      	bmi.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005a46:	68ce      	ldr	r6, [r1, #12]
 8005a48:	680c      	ldr	r4, [r1, #0]
 8005a4a:	48be      	ldr	r0, [pc, #760]	@ (8005d44 <HAL_ADC_ConfigChannel+0x37c>)
 8005a4c:	f8d2 50b0 	ldr.w	r5, [r2, #176]	@ 0xb0
 8005a50:	f006 0718 	and.w	r7, r6, #24
 8005a54:	40f8      	lsrs	r0, r7
 8005a56:	f3c4 0712 	ubfx	r7, r4, #0, #19
 8005a5a:	4020      	ands	r0, r4
 8005a5c:	ea25 0507 	bic.w	r5, r5, r7
 8005a60:	4328      	orrs	r0, r5
 8005a62:	f8c2 00b0 	str.w	r0, [r2, #176]	@ 0xb0
 8005a66:	48b8      	ldr	r0, [pc, #736]	@ (8005d48 <HAL_ADC_ConfigChannel+0x380>)
 8005a68:	4286      	cmp	r6, r0
 8005a6a:	d051      	beq.n	8005b10 <HAL_ADC_ConfigChannel+0x148>
 8005a6c:	49b7      	ldr	r1, [pc, #732]	@ (8005d4c <HAL_ADC_ConfigChannel+0x384>)
 8005a6e:	420c      	tst	r4, r1
 8005a70:	d01d      	beq.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005a72:	48b7      	ldr	r0, [pc, #732]	@ (8005d50 <HAL_ADC_ConfigChannel+0x388>)
 8005a74:	49b7      	ldr	r1, [pc, #732]	@ (8005d54 <HAL_ADC_ConfigChannel+0x38c>)
 8005a76:	6886      	ldr	r6, [r0, #8]
 8005a78:	688d      	ldr	r5, [r1, #8]
 8005a7a:	07ef      	lsls	r7, r5, #31
 8005a7c:	d4b6      	bmi.n	80059ec <HAL_ADC_ConfigChannel+0x24>
 8005a7e:	4db6      	ldr	r5, [pc, #728]	@ (8005d58 <HAL_ADC_ConfigChannel+0x390>)
 8005a80:	42ac      	cmp	r4, r5
 8005a82:	f006 77e0 	and.w	r7, r6, #29360128	@ 0x1c00000
 8005a86:	f000 80aa 	beq.w	8005bde <HAL_ADC_ConfigChannel+0x216>
 8005a8a:	4db4      	ldr	r5, [pc, #720]	@ (8005d5c <HAL_ADC_ConfigChannel+0x394>)
 8005a8c:	42ac      	cmp	r4, r5
 8005a8e:	f000 816f 	beq.w	8005d70 <HAL_ADC_ConfigChannel+0x3a8>
 8005a92:	4db3      	ldr	r5, [pc, #716]	@ (8005d60 <HAL_ADC_ConfigChannel+0x398>)
 8005a94:	42ac      	cmp	r4, r5
 8005a96:	d10a      	bne.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005a98:	0274      	lsls	r4, r6, #9
 8005a9a:	d408      	bmi.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005a9c:	428a      	cmp	r2, r1
 8005a9e:	d106      	bne.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005aa0:	6882      	ldr	r2, [r0, #8]
 8005aa2:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005aa6:	433a      	orrs	r2, r7
 8005aa8:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8005aac:	6082      	str	r2, [r0, #8]
 8005aae:	2000      	movs	r0, #0
 8005ab0:	e7a1      	b.n	80059f6 <HAL_ADC_ConfigChannel+0x2e>
 8005ab2:	680c      	ldr	r4, [r1, #0]
 8005ab4:	6888      	ldr	r0, [r1, #8]
 8005ab6:	0de5      	lsrs	r5, r4, #23
 8005ab8:	f005 0504 	and.w	r5, r5, #4
 8005abc:	f102 0614 	add.w	r6, r2, #20
 8005ac0:	f3c4 5404 	ubfx	r4, r4, #20, #5
 8005ac4:	fa00 f704 	lsl.w	r7, r0, r4
 8005ac8:	f04f 0c07 	mov.w	ip, #7
 8005acc:	5970      	ldr	r0, [r6, r5]
 8005ace:	fa0c f404 	lsl.w	r4, ip, r4
 8005ad2:	ea20 0004 	bic.w	r0, r0, r4
 8005ad6:	4338      	orrs	r0, r7
 8005ad8:	5170      	str	r0, [r6, r5]
 8005ada:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 8005ade:	2d04      	cmp	r5, #4
 8005ae0:	68d4      	ldr	r4, [r2, #12]
 8005ae2:	f000 80a0 	beq.w	8005c26 <HAL_ADC_ConfigChannel+0x25e>
 8005ae6:	f102 0660 	add.w	r6, r2, #96	@ 0x60
 8005aea:	f3c4 04c1 	ubfx	r4, r4, #3, #2
 8005aee:	0064      	lsls	r4, r4, #1
 8005af0:	f856 c025 	ldr.w	ip, [r6, r5, lsl #2]
 8005af4:	4f9b      	ldr	r7, [pc, #620]	@ (8005d64 <HAL_ADC_ConfigChannel+0x39c>)
 8005af6:	40a0      	lsls	r0, r4
 8005af8:	680c      	ldr	r4, [r1, #0]
 8005afa:	ea0c 0707 	and.w	r7, ip, r7
 8005afe:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
 8005b02:	433c      	orrs	r4, r7
 8005b04:	4320      	orrs	r0, r4
 8005b06:	f040 4000 	orr.w	r0, r0, #2147483648	@ 0x80000000
 8005b0a:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 8005b0e:	e797      	b.n	8005a40 <HAL_ADC_ConfigChannel+0x78>
 8005b10:	2f00      	cmp	r7, #0
 8005b12:	d050      	beq.n	8005bb6 <HAL_ADC_ConfigChannel+0x1ee>
 8005b14:	fa94 f0a4 	rbit	r0, r4
 8005b18:	2800      	cmp	r0, #0
 8005b1a:	f000 80b4 	beq.w	8005c86 <HAL_ADC_ConfigChannel+0x2be>
 8005b1e:	fab0 f080 	clz	r0, r0
 8005b22:	3001      	adds	r0, #1
 8005b24:	f000 001f 	and.w	r0, r0, #31
 8005b28:	2809      	cmp	r0, #9
 8005b2a:	f240 80ac 	bls.w	8005c86 <HAL_ADC_ConfigChannel+0x2be>
 8005b2e:	fa94 f0a4 	rbit	r0, r4
 8005b32:	2800      	cmp	r0, #0
 8005b34:	f000 8167 	beq.w	8005e06 <HAL_ADC_ConfigChannel+0x43e>
 8005b38:	fab0 f080 	clz	r0, r0
 8005b3c:	3001      	adds	r0, #1
 8005b3e:	0680      	lsls	r0, r0, #26
 8005b40:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
 8005b44:	fa94 f5a4 	rbit	r5, r4
 8005b48:	2d00      	cmp	r5, #0
 8005b4a:	f000 8166 	beq.w	8005e1a <HAL_ADC_ConfigChannel+0x452>
 8005b4e:	fab5 f585 	clz	r5, r5
 8005b52:	3501      	adds	r5, #1
 8005b54:	f005 051f 	and.w	r5, r5, #31
 8005b58:	2601      	movs	r6, #1
 8005b5a:	fa06 f505 	lsl.w	r5, r6, r5
 8005b5e:	4328      	orrs	r0, r5
 8005b60:	fa94 f4a4 	rbit	r4, r4
 8005b64:	2c00      	cmp	r4, #0
 8005b66:	f000 8156 	beq.w	8005e16 <HAL_ADC_ConfigChannel+0x44e>
 8005b6a:	fab4 f484 	clz	r4, r4
 8005b6e:	1c65      	adds	r5, r4, #1
 8005b70:	f005 051f 	and.w	r5, r5, #31
 8005b74:	2403      	movs	r4, #3
 8005b76:	f06f 061d 	mvn.w	r6, #29
 8005b7a:	fb14 6405 	smlabb	r4, r4, r5, r6
 8005b7e:	0524      	lsls	r4, r4, #20
 8005b80:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
 8005b84:	4320      	orrs	r0, r4
 8005b86:	0dc5      	lsrs	r5, r0, #23
 8005b88:	688c      	ldr	r4, [r1, #8]
 8005b8a:	f005 0504 	and.w	r5, r5, #4
 8005b8e:	f102 0614 	add.w	r6, r2, #20
 8005b92:	f3c0 5004 	ubfx	r0, r0, #20, #5
 8005b96:	fa04 f700 	lsl.w	r7, r4, r0
 8005b9a:	f04f 0c07 	mov.w	ip, #7
 8005b9e:	5974      	ldr	r4, [r6, r5]
 8005ba0:	fa0c f000 	lsl.w	r0, ip, r0
 8005ba4:	ea24 0000 	bic.w	r0, r4, r0
 8005ba8:	4338      	orrs	r0, r7
 8005baa:	5170      	str	r0, [r6, r5]
 8005bac:	680c      	ldr	r4, [r1, #0]
 8005bae:	e75d      	b.n	8005a6c <HAL_ADC_ConfigChannel+0xa4>
 8005bb0:	2002      	movs	r0, #2
 8005bb2:	b003      	add	sp, #12
 8005bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005bb6:	0ea4      	lsrs	r4, r4, #26
 8005bb8:	3401      	adds	r4, #1
 8005bba:	f004 051f 	and.w	r5, r4, #31
 8005bbe:	2001      	movs	r0, #1
 8005bc0:	06a4      	lsls	r4, r4, #26
 8005bc2:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
 8005bc6:	40a8      	lsls	r0, r5
 8005bc8:	2d09      	cmp	r5, #9
 8005bca:	ea40 0004 	orr.w	r0, r0, r4
 8005bce:	eb05 0445 	add.w	r4, r5, r5, lsl #1
 8005bd2:	d97d      	bls.n	8005cd0 <HAL_ADC_ConfigChannel+0x308>
 8005bd4:	3c1e      	subs	r4, #30
 8005bd6:	0524      	lsls	r4, r4, #20
 8005bd8:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
 8005bdc:	e7d2      	b.n	8005b84 <HAL_ADC_ConfigChannel+0x1bc>
 8005bde:	0236      	lsls	r6, r6, #8
 8005be0:	f53f af65 	bmi.w	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005be4:	428a      	cmp	r2, r1
 8005be6:	f47f af62 	bne.w	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005bea:	6882      	ldr	r2, [r0, #8]
 8005bec:	495e      	ldr	r1, [pc, #376]	@ (8005d68 <HAL_ADC_ConfigChannel+0x3a0>)
 8005bee:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005bf2:	433a      	orrs	r2, r7
 8005bf4:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8005bf8:	6082      	str	r2, [r0, #8]
 8005bfa:	680a      	ldr	r2, [r1, #0]
 8005bfc:	495b      	ldr	r1, [pc, #364]	@ (8005d6c <HAL_ADC_ConfigChannel+0x3a4>)
 8005bfe:	0992      	lsrs	r2, r2, #6
 8005c00:	fba1 1202 	umull	r1, r2, r1, r2
 8005c04:	0992      	lsrs	r2, r2, #6
 8005c06:	3201      	adds	r2, #1
 8005c08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005c0c:	0092      	lsls	r2, r2, #2
 8005c0e:	9201      	str	r2, [sp, #4]
 8005c10:	9a01      	ldr	r2, [sp, #4]
 8005c12:	2a00      	cmp	r2, #0
 8005c14:	f43f af4b 	beq.w	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005c18:	9a01      	ldr	r2, [sp, #4]
 8005c1a:	3a01      	subs	r2, #1
 8005c1c:	9201      	str	r2, [sp, #4]
 8005c1e:	9a01      	ldr	r2, [sp, #4]
 8005c20:	2a00      	cmp	r2, #0
 8005c22:	d1f9      	bne.n	8005c18 <HAL_ADC_ConfigChannel+0x250>
 8005c24:	e743      	b.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005c26:	6808      	ldr	r0, [r1, #0]
 8005c28:	6e14      	ldr	r4, [r2, #96]	@ 0x60
 8005c2a:	6e14      	ldr	r4, [r2, #96]	@ 0x60
 8005c2c:	f3c0 0512 	ubfx	r5, r0, #0, #19
 8005c30:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005c34:	2d00      	cmp	r5, #0
 8005c36:	d14d      	bne.n	8005cd4 <HAL_ADC_ConfigChannel+0x30c>
 8005c38:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005c3c:	4284      	cmp	r4, r0
 8005c3e:	f000 80cd 	beq.w	8005ddc <HAL_ADC_ConfigChannel+0x414>
 8005c42:	6e54      	ldr	r4, [r2, #100]	@ 0x64
 8005c44:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005c46:	f102 0460 	add.w	r4, r2, #96	@ 0x60
 8005c4a:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005c4e:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005c52:	4285      	cmp	r5, r0
 8005c54:	f000 80ad 	beq.w	8005db2 <HAL_ADC_ConfigChannel+0x3ea>
 8005c58:	68a5      	ldr	r5, [r4, #8]
 8005c5a:	68a5      	ldr	r5, [r4, #8]
 8005c5c:	f104 0608 	add.w	r6, r4, #8
 8005c60:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005c64:	4285      	cmp	r5, r0
 8005c66:	f000 8091 	beq.w	8005d8c <HAL_ADC_ConfigChannel+0x3c4>
 8005c6a:	68e5      	ldr	r5, [r4, #12]
 8005c6c:	68e5      	ldr	r5, [r4, #12]
 8005c6e:	f104 070c 	add.w	r7, r4, #12
 8005c72:	f3c5 6484 	ubfx	r4, r5, #26, #5
 8005c76:	42a0      	cmp	r0, r4
 8005c78:	f47f aee2 	bne.w	8005a40 <HAL_ADC_ConfigChannel+0x78>
 8005c7c:	6838      	ldr	r0, [r7, #0]
 8005c7e:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005c82:	6038      	str	r0, [r7, #0]
 8005c84:	e6dc      	b.n	8005a40 <HAL_ADC_ConfigChannel+0x78>
 8005c86:	fa94 f0a4 	rbit	r0, r4
 8005c8a:	2800      	cmp	r0, #0
 8005c8c:	f000 80d1 	beq.w	8005e32 <HAL_ADC_ConfigChannel+0x46a>
 8005c90:	fab0 f080 	clz	r0, r0
 8005c94:	3001      	adds	r0, #1
 8005c96:	0680      	lsls	r0, r0, #26
 8005c98:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
 8005c9c:	fa94 f5a4 	rbit	r5, r4
 8005ca0:	2d00      	cmp	r5, #0
 8005ca2:	f000 80c4 	beq.w	8005e2e <HAL_ADC_ConfigChannel+0x466>
 8005ca6:	fab5 f585 	clz	r5, r5
 8005caa:	3501      	adds	r5, #1
 8005cac:	f005 051f 	and.w	r5, r5, #31
 8005cb0:	2601      	movs	r6, #1
 8005cb2:	fa06 f505 	lsl.w	r5, r6, r5
 8005cb6:	4328      	orrs	r0, r5
 8005cb8:	fa94 f4a4 	rbit	r4, r4
 8005cbc:	2c00      	cmp	r4, #0
 8005cbe:	f000 80b3 	beq.w	8005e28 <HAL_ADC_ConfigChannel+0x460>
 8005cc2:	fab4 f484 	clz	r4, r4
 8005cc6:	3401      	adds	r4, #1
 8005cc8:	f004 041f 	and.w	r4, r4, #31
 8005ccc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005cd0:	0524      	lsls	r4, r4, #20
 8005cd2:	e757      	b.n	8005b84 <HAL_ADC_ConfigChannel+0x1bc>
 8005cd4:	fa90 f5a0 	rbit	r5, r0
 8005cd8:	b11d      	cbz	r5, 8005ce2 <HAL_ADC_ConfigChannel+0x31a>
 8005cda:	fab5 f585 	clz	r5, r5
 8005cde:	42ac      	cmp	r4, r5
 8005ce0:	d07c      	beq.n	8005ddc <HAL_ADC_ConfigChannel+0x414>
 8005ce2:	6e54      	ldr	r4, [r2, #100]	@ 0x64
 8005ce4:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005ce6:	f102 0460 	add.w	r4, r2, #96	@ 0x60
 8005cea:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005cee:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005cf2:	fa90 f7a0 	rbit	r7, r0
 8005cf6:	f104 0608 	add.w	r6, r4, #8
 8005cfa:	46b6      	mov	lr, r6
 8005cfc:	2f00      	cmp	r7, #0
 8005cfe:	f000 808e 	beq.w	8005e1e <HAL_ADC_ConfigChannel+0x456>
 8005d02:	fab7 f787 	clz	r7, r7
 8005d06:	42af      	cmp	r7, r5
 8005d08:	d055      	beq.n	8005db6 <HAL_ADC_ConfigChannel+0x3ee>
 8005d0a:	6835      	ldr	r5, [r6, #0]
 8005d0c:	6835      	ldr	r5, [r6, #0]
 8005d0e:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005d12:	fa90 fca0 	rbit	ip, r0
 8005d16:	f104 070c 	add.w	r7, r4, #12
 8005d1a:	46be      	mov	lr, r7
 8005d1c:	f1bc 0f00 	cmp.w	ip, #0
 8005d20:	d074      	beq.n	8005e0c <HAL_ADC_ConfigChannel+0x444>
 8005d22:	fabc fc8c 	clz	ip, ip
 8005d26:	45ac      	cmp	ip, r5
 8005d28:	d032      	beq.n	8005d90 <HAL_ADC_ConfigChannel+0x3c8>
 8005d2a:	683c      	ldr	r4, [r7, #0]
 8005d2c:	683c      	ldr	r4, [r7, #0]
 8005d2e:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005d32:	fa90 f0a0 	rbit	r0, r0
 8005d36:	2800      	cmp	r0, #0
 8005d38:	f43f ae82 	beq.w	8005a40 <HAL_ADC_ConfigChannel+0x78>
 8005d3c:	fab0 f080 	clz	r0, r0
 8005d40:	e799      	b.n	8005c76 <HAL_ADC_ConfigChannel+0x2ae>
 8005d42:	bf00      	nop
 8005d44:	0007ffff 	.word	0x0007ffff
 8005d48:	407f0000 	.word	0x407f0000
 8005d4c:	80080000 	.word	0x80080000
 8005d50:	50040300 	.word	0x50040300
 8005d54:	50040000 	.word	0x50040000
 8005d58:	c7520000 	.word	0xc7520000
 8005d5c:	cb840000 	.word	0xcb840000
 8005d60:	80000001 	.word	0x80000001
 8005d64:	03fff000 	.word	0x03fff000
 8005d68:	20000034 	.word	0x20000034
 8005d6c:	053e2d63 	.word	0x053e2d63
 8005d70:	01f5      	lsls	r5, r6, #7
 8005d72:	f53f ae9c 	bmi.w	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005d76:	428a      	cmp	r2, r1
 8005d78:	f47f ae99 	bne.w	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005d7c:	6882      	ldr	r2, [r0, #8]
 8005d7e:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005d82:	433a      	orrs	r2, r7
 8005d84:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8005d88:	6082      	str	r2, [r0, #8]
 8005d8a:	e690      	b.n	8005aae <HAL_ADC_ConfigChannel+0xe6>
 8005d8c:	f104 0e0c 	add.w	lr, r4, #12
 8005d90:	6830      	ldr	r0, [r6, #0]
 8005d92:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005d96:	6030      	str	r0, [r6, #0]
 8005d98:	68e0      	ldr	r0, [r4, #12]
 8005d9a:	6808      	ldr	r0, [r1, #0]
 8005d9c:	68e4      	ldr	r4, [r4, #12]
 8005d9e:	f3c0 0512 	ubfx	r5, r0, #0, #19
 8005da2:	4677      	mov	r7, lr
 8005da4:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005da8:	2d00      	cmp	r5, #0
 8005daa:	d1c2      	bne.n	8005d32 <HAL_ADC_ConfigChannel+0x36a>
 8005dac:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005db0:	e761      	b.n	8005c76 <HAL_ADC_ConfigChannel+0x2ae>
 8005db2:	f104 0e08 	add.w	lr, r4, #8
 8005db6:	f8dc 0000 	ldr.w	r0, [ip]
 8005dba:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005dbe:	f8cc 0000 	str.w	r0, [ip]
 8005dc2:	68a0      	ldr	r0, [r4, #8]
 8005dc4:	6808      	ldr	r0, [r1, #0]
 8005dc6:	68a5      	ldr	r5, [r4, #8]
 8005dc8:	f3c0 0712 	ubfx	r7, r0, #0, #19
 8005dcc:	4676      	mov	r6, lr
 8005dce:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005dd2:	2f00      	cmp	r7, #0
 8005dd4:	d19d      	bne.n	8005d12 <HAL_ADC_ConfigChannel+0x34a>
 8005dd6:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005dda:	e743      	b.n	8005c64 <HAL_ADC_ConfigChannel+0x29c>
 8005ddc:	6e10      	ldr	r0, [r2, #96]	@ 0x60
 8005dde:	4614      	mov	r4, r2
 8005de0:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005de4:	f844 0f60 	str.w	r0, [r4, #96]!
 8005de8:	6e50      	ldr	r0, [r2, #100]	@ 0x64
 8005dea:	6808      	ldr	r0, [r1, #0]
 8005dec:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005dee:	f3c0 0612 	ubfx	r6, r0, #0, #19
 8005df2:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005df6:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005dfa:	2e00      	cmp	r6, #0
 8005dfc:	f47f af79 	bne.w	8005cf2 <HAL_ADC_ConfigChannel+0x32a>
 8005e00:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005e04:	e725      	b.n	8005c52 <HAL_ADC_ConfigChannel+0x28a>
 8005e06:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 8005e0a:	e69b      	b.n	8005b44 <HAL_ADC_ConfigChannel+0x17c>
 8005e0c:	68e5      	ldr	r5, [r4, #12]
 8005e0e:	68e4      	ldr	r4, [r4, #12]
 8005e10:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005e14:	e78d      	b.n	8005d32 <HAL_ADC_ConfigChannel+0x36a>
 8005e16:	4c08      	ldr	r4, [pc, #32]	@ (8005e38 <HAL_ADC_ConfigChannel+0x470>)
 8005e18:	e6b4      	b.n	8005b84 <HAL_ADC_ConfigChannel+0x1bc>
 8005e1a:	2502      	movs	r5, #2
 8005e1c:	e69f      	b.n	8005b5e <HAL_ADC_ConfigChannel+0x196>
 8005e1e:	68a5      	ldr	r5, [r4, #8]
 8005e20:	68a5      	ldr	r5, [r4, #8]
 8005e22:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005e26:	e774      	b.n	8005d12 <HAL_ADC_ConfigChannel+0x34a>
 8005e28:	f44f 1440 	mov.w	r4, #3145728	@ 0x300000
 8005e2c:	e6aa      	b.n	8005b84 <HAL_ADC_ConfigChannel+0x1bc>
 8005e2e:	2502      	movs	r5, #2
 8005e30:	e741      	b.n	8005cb6 <HAL_ADC_ConfigChannel+0x2ee>
 8005e32:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 8005e36:	e731      	b.n	8005c9c <HAL_ADC_ConfigChannel+0x2d4>
 8005e38:	fe500000 	.word	0xfe500000

08005e3c <ADC_Enable>:
 8005e3c:	b570      	push	{r4, r5, r6, lr}
 8005e3e:	b082      	sub	sp, #8
 8005e40:	2200      	movs	r2, #0
 8005e42:	6803      	ldr	r3, [r0, #0]
 8005e44:	9201      	str	r2, [sp, #4]
 8005e46:	689a      	ldr	r2, [r3, #8]
 8005e48:	07d4      	lsls	r4, r2, #31
 8005e4a:	d430      	bmi.n	8005eae <ADC_Enable+0x72>
 8005e4c:	6899      	ldr	r1, [r3, #8]
 8005e4e:	4a26      	ldr	r2, [pc, #152]	@ (8005ee8 <ADC_Enable+0xac>)
 8005e50:	4211      	tst	r1, r2
 8005e52:	4604      	mov	r4, r0
 8005e54:	d120      	bne.n	8005e98 <ADC_Enable+0x5c>
 8005e56:	689a      	ldr	r2, [r3, #8]
 8005e58:	4924      	ldr	r1, [pc, #144]	@ (8005eec <ADC_Enable+0xb0>)
 8005e5a:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8005e5e:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8005e62:	f042 0201 	orr.w	r2, r2, #1
 8005e66:	609a      	str	r2, [r3, #8]
 8005e68:	688b      	ldr	r3, [r1, #8]
 8005e6a:	0218      	lsls	r0, r3, #8
 8005e6c:	d428      	bmi.n	8005ec0 <ADC_Enable+0x84>
 8005e6e:	f7ff fc69 	bl	8005744 <HAL_GetTick>
 8005e72:	4e1f      	ldr	r6, [pc, #124]	@ (8005ef0 <ADC_Enable+0xb4>)
 8005e74:	4605      	mov	r5, r0
 8005e76:	6823      	ldr	r3, [r4, #0]
 8005e78:	681a      	ldr	r2, [r3, #0]
 8005e7a:	07d2      	lsls	r2, r2, #31
 8005e7c:	d417      	bmi.n	8005eae <ADC_Enable+0x72>
 8005e7e:	689a      	ldr	r2, [r3, #8]
 8005e80:	07d1      	lsls	r1, r2, #31
 8005e82:	d417      	bmi.n	8005eb4 <ADC_Enable+0x78>
 8005e84:	689a      	ldr	r2, [r3, #8]
 8005e86:	4032      	ands	r2, r6
 8005e88:	f042 0201 	orr.w	r2, r2, #1
 8005e8c:	609a      	str	r2, [r3, #8]
 8005e8e:	f7ff fc59 	bl	8005744 <HAL_GetTick>
 8005e92:	1b40      	subs	r0, r0, r5
 8005e94:	2802      	cmp	r0, #2
 8005e96:	d9ee      	bls.n	8005e76 <ADC_Enable+0x3a>
 8005e98:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e9a:	f043 0310 	orr.w	r3, r3, #16
 8005e9e:	6563      	str	r3, [r4, #84]	@ 0x54
 8005ea0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005ea2:	2001      	movs	r0, #1
 8005ea4:	f043 0301 	orr.w	r3, r3, #1
 8005ea8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005eaa:	b002      	add	sp, #8
 8005eac:	bd70      	pop	{r4, r5, r6, pc}
 8005eae:	2000      	movs	r0, #0
 8005eb0:	b002      	add	sp, #8
 8005eb2:	bd70      	pop	{r4, r5, r6, pc}
 8005eb4:	f7ff fc46 	bl	8005744 <HAL_GetTick>
 8005eb8:	1b40      	subs	r0, r0, r5
 8005eba:	2802      	cmp	r0, #2
 8005ebc:	d9db      	bls.n	8005e76 <ADC_Enable+0x3a>
 8005ebe:	e7eb      	b.n	8005e98 <ADC_Enable+0x5c>
 8005ec0:	4b0c      	ldr	r3, [pc, #48]	@ (8005ef4 <ADC_Enable+0xb8>)
 8005ec2:	4a0d      	ldr	r2, [pc, #52]	@ (8005ef8 <ADC_Enable+0xbc>)
 8005ec4:	681b      	ldr	r3, [r3, #0]
 8005ec6:	099b      	lsrs	r3, r3, #6
 8005ec8:	fba2 2303 	umull	r2, r3, r2, r3
 8005ecc:	099b      	lsrs	r3, r3, #6
 8005ece:	3301      	adds	r3, #1
 8005ed0:	9301      	str	r3, [sp, #4]
 8005ed2:	9b01      	ldr	r3, [sp, #4]
 8005ed4:	2b00      	cmp	r3, #0
 8005ed6:	d0ca      	beq.n	8005e6e <ADC_Enable+0x32>
 8005ed8:	9b01      	ldr	r3, [sp, #4]
 8005eda:	3b01      	subs	r3, #1
 8005edc:	9301      	str	r3, [sp, #4]
 8005ede:	9b01      	ldr	r3, [sp, #4]
 8005ee0:	2b00      	cmp	r3, #0
 8005ee2:	d1f9      	bne.n	8005ed8 <ADC_Enable+0x9c>
 8005ee4:	e7c3      	b.n	8005e6e <ADC_Enable+0x32>
 8005ee6:	bf00      	nop
 8005ee8:	8000003f 	.word	0x8000003f
 8005eec:	50040300 	.word	0x50040300
 8005ef0:	7fffffc0 	.word	0x7fffffc0
 8005ef4:	20000034 	.word	0x20000034
 8005ef8:	053e2d63 	.word	0x053e2d63

08005efc <HAL_ADC_Start_DMA>:
 8005efc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005efe:	6803      	ldr	r3, [r0, #0]
 8005f00:	689d      	ldr	r5, [r3, #8]
 8005f02:	f015 0504 	ands.w	r5, r5, #4
 8005f06:	d141      	bne.n	8005f8c <HAL_ADC_Start_DMA+0x90>
 8005f08:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 8005f0c:	2b01      	cmp	r3, #1
 8005f0e:	4604      	mov	r4, r0
 8005f10:	d03c      	beq.n	8005f8c <HAL_ADC_Start_DMA+0x90>
 8005f12:	2301      	movs	r3, #1
 8005f14:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 8005f18:	460f      	mov	r7, r1
 8005f1a:	4616      	mov	r6, r2
 8005f1c:	f7ff ff8e 	bl	8005e3c <ADC_Enable>
 8005f20:	2800      	cmp	r0, #0
 8005f22:	d135      	bne.n	8005f90 <HAL_ADC_Start_DMA+0x94>
 8005f24:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f26:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8005f28:	6821      	ldr	r1, [r4, #0]
 8005f2a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8005f2e:	f023 0301 	bic.w	r3, r3, #1
 8005f32:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005f36:	6563      	str	r3, [r4, #84]	@ 0x54
 8005f38:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f3a:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005f3e:	bf1c      	itt	ne
 8005f40:	6da3      	ldrne	r3, [r4, #88]	@ 0x58
 8005f42:	f023 0306 	bicne.w	r3, r3, #6
 8005f46:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005f48:	4b13      	ldr	r3, [pc, #76]	@ (8005f98 <HAL_ADC_Start_DMA+0x9c>)
 8005f4a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8005f4c:	4b13      	ldr	r3, [pc, #76]	@ (8005f9c <HAL_ADC_Start_DMA+0xa0>)
 8005f4e:	6303      	str	r3, [r0, #48]	@ 0x30
 8005f50:	251c      	movs	r5, #28
 8005f52:	4b13      	ldr	r3, [pc, #76]	@ (8005fa0 <HAL_ADC_Start_DMA+0xa4>)
 8005f54:	6343      	str	r3, [r0, #52]	@ 0x34
 8005f56:	600d      	str	r5, [r1, #0]
 8005f58:	2500      	movs	r5, #0
 8005f5a:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005f5e:	684d      	ldr	r5, [r1, #4]
 8005f60:	f045 0510 	orr.w	r5, r5, #16
 8005f64:	604d      	str	r5, [r1, #4]
 8005f66:	68cd      	ldr	r5, [r1, #12]
 8005f68:	f045 0501 	orr.w	r5, r5, #1
 8005f6c:	4633      	mov	r3, r6
 8005f6e:	463a      	mov	r2, r7
 8005f70:	60cd      	str	r5, [r1, #12]
 8005f72:	3140      	adds	r1, #64	@ 0x40
 8005f74:	f000 f904 	bl	8006180 <HAL_DMA_Start_IT>
 8005f78:	6822      	ldr	r2, [r4, #0]
 8005f7a:	6893      	ldr	r3, [r2, #8]
 8005f7c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005f80:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8005f84:	f043 0304 	orr.w	r3, r3, #4
 8005f88:	6093      	str	r3, [r2, #8]
 8005f8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f8c:	2002      	movs	r0, #2
 8005f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f90:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005f94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f96:	bf00      	nop
 8005f98:	08005941 	.word	0x08005941
 8005f9c:	08005931 	.word	0x08005931
 8005fa0:	080059ad 	.word	0x080059ad

08005fa4 <HAL_NVIC_SetPriorityGrouping>:
 8005fa4:	4907      	ldr	r1, [pc, #28]	@ (8005fc4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005fa6:	68ca      	ldr	r2, [r1, #12]
 8005fa8:	0203      	lsls	r3, r0, #8
 8005faa:	f64f 00ff 	movw	r0, #63743	@ 0xf8ff
 8005fae:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8005fb2:	4002      	ands	r2, r0
 8005fb4:	4313      	orrs	r3, r2
 8005fb6:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8005fba:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005fbe:	60cb      	str	r3, [r1, #12]
 8005fc0:	4770      	bx	lr
 8005fc2:	bf00      	nop
 8005fc4:	e000ed00 	.word	0xe000ed00

08005fc8 <HAL_NVIC_SetPriority>:
 8005fc8:	4b1b      	ldr	r3, [pc, #108]	@ (8006038 <HAL_NVIC_SetPriority+0x70>)
 8005fca:	68db      	ldr	r3, [r3, #12]
 8005fcc:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8005fd0:	b500      	push	{lr}
 8005fd2:	f1c3 0e07 	rsb	lr, r3, #7
 8005fd6:	f1be 0f04 	cmp.w	lr, #4
 8005fda:	f103 0c04 	add.w	ip, r3, #4
 8005fde:	bf28      	it	cs
 8005fe0:	f04f 0e04 	movcs.w	lr, #4
 8005fe4:	f1bc 0f06 	cmp.w	ip, #6
 8005fe8:	d91c      	bls.n	8006024 <HAL_NVIC_SetPriority+0x5c>
 8005fea:	f1a3 0c03 	sub.w	ip, r3, #3
 8005fee:	f04f 33ff 	mov.w	r3, #4294967295
 8005ff2:	fa03 f30c 	lsl.w	r3, r3, ip
 8005ff6:	ea22 0203 	bic.w	r2, r2, r3
 8005ffa:	f04f 33ff 	mov.w	r3, #4294967295
 8005ffe:	fa03 f30e 	lsl.w	r3, r3, lr
 8006002:	ea21 0303 	bic.w	r3, r1, r3
 8006006:	fa03 f30c 	lsl.w	r3, r3, ip
 800600a:	4313      	orrs	r3, r2
 800600c:	011b      	lsls	r3, r3, #4
 800600e:	2800      	cmp	r0, #0
 8006010:	b2db      	uxtb	r3, r3
 8006012:	db0a      	blt.n	800602a <HAL_NVIC_SetPriority+0x62>
 8006014:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8006018:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 800601c:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
 8006020:	f85d fb04 	ldr.w	pc, [sp], #4
 8006024:	2200      	movs	r2, #0
 8006026:	4694      	mov	ip, r2
 8006028:	e7e7      	b.n	8005ffa <HAL_NVIC_SetPriority+0x32>
 800602a:	4a04      	ldr	r2, [pc, #16]	@ (800603c <HAL_NVIC_SetPriority+0x74>)
 800602c:	f000 000f 	and.w	r0, r0, #15
 8006030:	4402      	add	r2, r0
 8006032:	7613      	strb	r3, [r2, #24]
 8006034:	f85d fb04 	ldr.w	pc, [sp], #4
 8006038:	e000ed00 	.word	0xe000ed00
 800603c:	e000ecfc 	.word	0xe000ecfc

08006040 <HAL_NVIC_EnableIRQ>:
 8006040:	2800      	cmp	r0, #0
 8006042:	db07      	blt.n	8006054 <HAL_NVIC_EnableIRQ+0x14>
 8006044:	4a04      	ldr	r2, [pc, #16]	@ (8006058 <HAL_NVIC_EnableIRQ+0x18>)
 8006046:	0941      	lsrs	r1, r0, #5
 8006048:	2301      	movs	r3, #1
 800604a:	f000 001f 	and.w	r0, r0, #31
 800604e:	4083      	lsls	r3, r0
 8006050:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8006054:	4770      	bx	lr
 8006056:	bf00      	nop
 8006058:	e000e100 	.word	0xe000e100

0800605c <HAL_DMA_Init>:
 800605c:	2800      	cmp	r0, #0
 800605e:	d075      	beq.n	800614c <HAL_DMA_Init+0xf0>
 8006060:	6802      	ldr	r2, [r0, #0]
 8006062:	493b      	ldr	r1, [pc, #236]	@ (8006150 <HAL_DMA_Init+0xf4>)
 8006064:	428a      	cmp	r2, r1
 8006066:	b570      	push	{r4, r5, r6, lr}
 8006068:	4603      	mov	r3, r0
 800606a:	d95b      	bls.n	8006124 <HAL_DMA_Init+0xc8>
 800606c:	4939      	ldr	r1, [pc, #228]	@ (8006154 <HAL_DMA_Init+0xf8>)
 800606e:	483a      	ldr	r0, [pc, #232]	@ (8006158 <HAL_DMA_Init+0xfc>)
 8006070:	4d3a      	ldr	r5, [pc, #232]	@ (800615c <HAL_DMA_Init+0x100>)
 8006072:	4411      	add	r1, r2
 8006074:	fba0 0101 	umull	r0, r1, r0, r1
 8006078:	0909      	lsrs	r1, r1, #4
 800607a:	0089      	lsls	r1, r1, #2
 800607c:	6898      	ldr	r0, [r3, #8]
 800607e:	468c      	mov	ip, r1
 8006080:	e9c3 5110 	strd	r5, r1, [r3, #64]	@ 0x40
 8006084:	2402      	movs	r4, #2
 8006086:	68d9      	ldr	r1, [r3, #12]
 8006088:	f883 4025 	strb.w	r4, [r3, #37]	@ 0x25
 800608c:	691c      	ldr	r4, [r3, #16]
 800608e:	4301      	orrs	r1, r0
 8006090:	4321      	orrs	r1, r4
 8006092:	695c      	ldr	r4, [r3, #20]
 8006094:	4321      	orrs	r1, r4
 8006096:	699c      	ldr	r4, [r3, #24]
 8006098:	4321      	orrs	r1, r4
 800609a:	69dc      	ldr	r4, [r3, #28]
 800609c:	4321      	orrs	r1, r4
 800609e:	6814      	ldr	r4, [r2, #0]
 80060a0:	f424 4eff 	bic.w	lr, r4, #32640	@ 0x7f80
 80060a4:	6a1c      	ldr	r4, [r3, #32]
 80060a6:	f02e 0e70 	bic.w	lr, lr, #112	@ 0x70
 80060aa:	4321      	orrs	r1, r4
 80060ac:	ea41 010e 	orr.w	r1, r1, lr
 80060b0:	6011      	str	r1, [r2, #0]
 80060b2:	4927      	ldr	r1, [pc, #156]	@ (8006150 <HAL_DMA_Init+0xf4>)
 80060b4:	4c2a      	ldr	r4, [pc, #168]	@ (8006160 <HAL_DMA_Init+0x104>)
 80060b6:	428a      	cmp	r2, r1
 80060b8:	bf8d      	iteet	hi
 80060ba:	492a      	ldrhi	r1, [pc, #168]	@ (8006164 <HAL_DMA_Init+0x108>)
 80060bc:	f10c 4180 	addls.w	r1, ip, #1073741824	@ 0x40000000
 80060c0:	f501 3102 	addls.w	r1, r1, #133120	@ 0x20800
 80060c4:	4461      	addhi	r1, ip
 80060c6:	e9c3 1412 	strd	r1, r4, [r3, #72]	@ 0x48
 80060ca:	b2d2      	uxtb	r2, r2
 80060cc:	4c22      	ldr	r4, [pc, #136]	@ (8006158 <HAL_DMA_Init+0xfc>)
 80060ce:	3a08      	subs	r2, #8
 80060d0:	fba4 4202 	umull	r4, r2, r4, r2
 80060d4:	f3c2 1204 	ubfx	r2, r2, #4, #5
 80060d8:	2401      	movs	r4, #1
 80060da:	fa04 f202 	lsl.w	r2, r4, r2
 80060de:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
 80060e2:	651a      	str	r2, [r3, #80]	@ 0x50
 80060e4:	d027      	beq.n	8006136 <HAL_DMA_Init+0xda>
 80060e6:	685d      	ldr	r5, [r3, #4]
 80060e8:	4e1f      	ldr	r6, [pc, #124]	@ (8006168 <HAL_DMA_Init+0x10c>)
 80060ea:	f005 003f 	and.w	r0, r5, #63	@ 0x3f
 80060ee:	3d01      	subs	r5, #1
 80060f0:	2d03      	cmp	r5, #3
 80060f2:	6008      	str	r0, [r1, #0]
 80060f4:	f8c6 2084 	str.w	r2, [r6, #132]	@ 0x84
 80060f8:	d823      	bhi.n	8006142 <HAL_DMA_Init+0xe6>
 80060fa:	4a1c      	ldr	r2, [pc, #112]	@ (800616c <HAL_DMA_Init+0x110>)
 80060fc:	4d1c      	ldr	r5, [pc, #112]	@ (8006170 <HAL_DMA_Init+0x114>)
 80060fe:	4402      	add	r2, r0
 8006100:	0092      	lsls	r2, r2, #2
 8006102:	3801      	subs	r0, #1
 8006104:	4084      	lsls	r4, r0
 8006106:	2100      	movs	r1, #0
 8006108:	e9c3 2515 	strd	r2, r5, [r3, #84]	@ 0x54
 800610c:	65dc      	str	r4, [r3, #92]	@ 0x5c
 800610e:	6011      	str	r1, [r2, #0]
 8006110:	4a18      	ldr	r2, [pc, #96]	@ (8006174 <HAL_DMA_Init+0x118>)
 8006112:	6454      	str	r4, [r2, #68]	@ 0x44
 8006114:	2000      	movs	r0, #0
 8006116:	2201      	movs	r2, #1
 8006118:	63d8      	str	r0, [r3, #60]	@ 0x3c
 800611a:	f883 0024 	strb.w	r0, [r3, #36]	@ 0x24
 800611e:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8006122:	bd70      	pop	{r4, r5, r6, pc}
 8006124:	4914      	ldr	r1, [pc, #80]	@ (8006178 <HAL_DMA_Init+0x11c>)
 8006126:	480c      	ldr	r0, [pc, #48]	@ (8006158 <HAL_DMA_Init+0xfc>)
 8006128:	4d14      	ldr	r5, [pc, #80]	@ (800617c <HAL_DMA_Init+0x120>)
 800612a:	4411      	add	r1, r2
 800612c:	fba0 0101 	umull	r0, r1, r0, r1
 8006130:	0909      	lsrs	r1, r1, #4
 8006132:	0089      	lsls	r1, r1, #2
 8006134:	e7a2      	b.n	800607c <HAL_DMA_Init+0x20>
 8006136:	4c0c      	ldr	r4, [pc, #48]	@ (8006168 <HAL_DMA_Init+0x10c>)
 8006138:	2000      	movs	r0, #0
 800613a:	6058      	str	r0, [r3, #4]
 800613c:	6008      	str	r0, [r1, #0]
 800613e:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
 8006142:	2200      	movs	r2, #0
 8006144:	e9c3 2215 	strd	r2, r2, [r3, #84]	@ 0x54
 8006148:	65da      	str	r2, [r3, #92]	@ 0x5c
 800614a:	e7e3      	b.n	8006114 <HAL_DMA_Init+0xb8>
 800614c:	2001      	movs	r0, #1
 800614e:	4770      	bx	lr
 8006150:	40020407 	.word	0x40020407
 8006154:	bffdfbf8 	.word	0xbffdfbf8
 8006158:	cccccccd 	.word	0xcccccccd
 800615c:	40020400 	.word	0x40020400
 8006160:	40020880 	.word	0x40020880
 8006164:	4002081c 	.word	0x4002081c
 8006168:	40020800 	.word	0x40020800
 800616c:	1000823f 	.word	0x1000823f
 8006170:	40020940 	.word	0x40020940
 8006174:	40020900 	.word	0x40020900
 8006178:	bffdfff8 	.word	0xbffdfff8
 800617c:	40020000 	.word	0x40020000

08006180 <HAL_DMA_Start_IT>:
 8006180:	b4f0      	push	{r4, r5, r6, r7}
 8006182:	f890 4024 	ldrb.w	r4, [r0, #36]	@ 0x24
 8006186:	2c01      	cmp	r4, #1
 8006188:	d009      	beq.n	800619e <HAL_DMA_Start_IT+0x1e>
 800618a:	2401      	movs	r4, #1
 800618c:	f880 4024 	strb.w	r4, [r0, #36]	@ 0x24
 8006190:	f890 4025 	ldrb.w	r4, [r0, #37]	@ 0x25
 8006194:	2c01      	cmp	r4, #1
 8006196:	d005      	beq.n	80061a4 <HAL_DMA_Start_IT+0x24>
 8006198:	2300      	movs	r3, #0
 800619a:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 800619e:	2002      	movs	r0, #2
 80061a0:	bcf0      	pop	{r4, r5, r6, r7}
 80061a2:	4770      	bx	lr
 80061a4:	2402      	movs	r4, #2
 80061a6:	f880 4025 	strb.w	r4, [r0, #37]	@ 0x25
 80061aa:	2400      	movs	r4, #0
 80061ac:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80061ae:	6804      	ldr	r4, [r0, #0]
 80061b0:	6cc6      	ldr	r6, [r0, #76]	@ 0x4c
 80061b2:	6825      	ldr	r5, [r4, #0]
 80061b4:	f025 0501 	bic.w	r5, r5, #1
 80061b8:	6025      	str	r5, [r4, #0]
 80061ba:	e9d0 7514 	ldrd	r7, r5, [r0, #80]	@ 0x50
 80061be:	6077      	str	r7, [r6, #4]
 80061c0:	b115      	cbz	r5, 80061c8 <HAL_DMA_Start_IT+0x48>
 80061c2:	e9d0 6716 	ldrd	r6, r7, [r0, #88]	@ 0x58
 80061c6:	6077      	str	r7, [r6, #4]
 80061c8:	6c46      	ldr	r6, [r0, #68]	@ 0x44
 80061ca:	6c07      	ldr	r7, [r0, #64]	@ 0x40
 80061cc:	f006 0c1c 	and.w	ip, r6, #28
 80061d0:	2601      	movs	r6, #1
 80061d2:	fa06 f60c 	lsl.w	r6, r6, ip
 80061d6:	607e      	str	r6, [r7, #4]
 80061d8:	6063      	str	r3, [r4, #4]
 80061da:	6883      	ldr	r3, [r0, #8]
 80061dc:	2b10      	cmp	r3, #16
 80061de:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80061e0:	bf0b      	itete	eq
 80061e2:	60a2      	streq	r2, [r4, #8]
 80061e4:	60a1      	strne	r1, [r4, #8]
 80061e6:	60e1      	streq	r1, [r4, #12]
 80061e8:	60e2      	strne	r2, [r4, #12]
 80061ea:	b1bb      	cbz	r3, 800621c <HAL_DMA_Start_IT+0x9c>
 80061ec:	6823      	ldr	r3, [r4, #0]
 80061ee:	f043 030e 	orr.w	r3, r3, #14
 80061f2:	6023      	str	r3, [r4, #0]
 80061f4:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 80061f6:	681a      	ldr	r2, [r3, #0]
 80061f8:	03d2      	lsls	r2, r2, #15
 80061fa:	d503      	bpl.n	8006204 <HAL_DMA_Start_IT+0x84>
 80061fc:	681a      	ldr	r2, [r3, #0]
 80061fe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006202:	601a      	str	r2, [r3, #0]
 8006204:	b11d      	cbz	r5, 800620e <HAL_DMA_Start_IT+0x8e>
 8006206:	682b      	ldr	r3, [r5, #0]
 8006208:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800620c:	602b      	str	r3, [r5, #0]
 800620e:	6823      	ldr	r3, [r4, #0]
 8006210:	f043 0301 	orr.w	r3, r3, #1
 8006214:	2000      	movs	r0, #0
 8006216:	6023      	str	r3, [r4, #0]
 8006218:	bcf0      	pop	{r4, r5, r6, r7}
 800621a:	4770      	bx	lr
 800621c:	6823      	ldr	r3, [r4, #0]
 800621e:	f023 0304 	bic.w	r3, r3, #4
 8006222:	6023      	str	r3, [r4, #0]
 8006224:	6823      	ldr	r3, [r4, #0]
 8006226:	f043 030a 	orr.w	r3, r3, #10
 800622a:	6023      	str	r3, [r4, #0]
 800622c:	e7e2      	b.n	80061f4 <HAL_DMA_Start_IT+0x74>
 800622e:	bf00      	nop

08006230 <HAL_DMA_Abort>:
 8006230:	2800      	cmp	r0, #0
 8006232:	d033      	beq.n	800629c <HAL_DMA_Abort+0x6c>
 8006234:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8006238:	2b02      	cmp	r3, #2
 800623a:	d12a      	bne.n	8006292 <HAL_DMA_Abort+0x62>
 800623c:	6803      	ldr	r3, [r0, #0]
 800623e:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 8006240:	6819      	ldr	r1, [r3, #0]
 8006242:	b430      	push	{r4, r5}
 8006244:	f021 010e 	bic.w	r1, r1, #14
 8006248:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 800624a:	6019      	str	r1, [r3, #0]
 800624c:	6821      	ldr	r1, [r4, #0]
 800624e:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8006250:	f421 7180 	bic.w	r1, r1, #256	@ 0x100
 8006254:	6021      	str	r1, [r4, #0]
 8006256:	6819      	ldr	r1, [r3, #0]
 8006258:	f021 0101 	bic.w	r1, r1, #1
 800625c:	6019      	str	r1, [r3, #0]
 800625e:	f002 021c 	and.w	r2, r2, #28
 8006262:	2301      	movs	r3, #1
 8006264:	4093      	lsls	r3, r2
 8006266:	e9d0 4214 	ldrd	r4, r2, [r0, #80]	@ 0x50
 800626a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 800626c:	606b      	str	r3, [r5, #4]
 800626e:	604c      	str	r4, [r1, #4]
 8006270:	b132      	cbz	r2, 8006280 <HAL_DMA_Abort+0x50>
 8006272:	6813      	ldr	r3, [r2, #0]
 8006274:	e9d0 1416 	ldrd	r1, r4, [r0, #88]	@ 0x58
 8006278:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800627c:	6013      	str	r3, [r2, #0]
 800627e:	604c      	str	r4, [r1, #4]
 8006280:	2300      	movs	r3, #0
 8006282:	2201      	movs	r2, #1
 8006284:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 8006288:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 800628c:	bc30      	pop	{r4, r5}
 800628e:	4618      	mov	r0, r3
 8006290:	4770      	bx	lr
 8006292:	2204      	movs	r2, #4
 8006294:	2300      	movs	r3, #0
 8006296:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8006298:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 800629c:	2001      	movs	r0, #1
 800629e:	4770      	bx	lr

080062a0 <HAL_DMA_Abort_IT>:
 80062a0:	b538      	push	{r3, r4, r5, lr}
 80062a2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80062a6:	2b02      	cmp	r3, #2
 80062a8:	d003      	beq.n	80062b2 <HAL_DMA_Abort_IT+0x12>
 80062aa:	2304      	movs	r3, #4
 80062ac:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80062ae:	2001      	movs	r0, #1
 80062b0:	bd38      	pop	{r3, r4, r5, pc}
 80062b2:	6803      	ldr	r3, [r0, #0]
 80062b4:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 80062b6:	6819      	ldr	r1, [r3, #0]
 80062b8:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 80062ba:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80062bc:	f021 010e 	bic.w	r1, r1, #14
 80062c0:	6019      	str	r1, [r3, #0]
 80062c2:	6819      	ldr	r1, [r3, #0]
 80062c4:	f021 0101 	bic.w	r1, r1, #1
 80062c8:	6019      	str	r1, [r3, #0]
 80062ca:	6823      	ldr	r3, [r4, #0]
 80062cc:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 80062ce:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80062d2:	6023      	str	r3, [r4, #0]
 80062d4:	f002 021c 	and.w	r2, r2, #28
 80062d8:	2301      	movs	r3, #1
 80062da:	4093      	lsls	r3, r2
 80062dc:	e9d0 4214 	ldrd	r4, r2, [r0, #80]	@ 0x50
 80062e0:	606b      	str	r3, [r5, #4]
 80062e2:	604c      	str	r4, [r1, #4]
 80062e4:	b132      	cbz	r2, 80062f4 <HAL_DMA_Abort_IT+0x54>
 80062e6:	6813      	ldr	r3, [r2, #0]
 80062e8:	e9d0 1416 	ldrd	r1, r4, [r0, #88]	@ 0x58
 80062ec:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80062f0:	6013      	str	r3, [r2, #0]
 80062f2:	604c      	str	r4, [r1, #4]
 80062f4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80062f6:	2101      	movs	r1, #1
 80062f8:	2200      	movs	r2, #0
 80062fa:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 80062fe:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8006302:	b103      	cbz	r3, 8006306 <HAL_DMA_Abort_IT+0x66>
 8006304:	4798      	blx	r3
 8006306:	2000      	movs	r0, #0
 8006308:	bd38      	pop	{r3, r4, r5, pc}
 800630a:	bf00      	nop

0800630c <HAL_DMA_IRQHandler>:
 800630c:	b470      	push	{r4, r5, r6}
 800630e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8006310:	6c06      	ldr	r6, [r0, #64]	@ 0x40
 8006312:	6805      	ldr	r5, [r0, #0]
 8006314:	6831      	ldr	r1, [r6, #0]
 8006316:	682c      	ldr	r4, [r5, #0]
 8006318:	f003 031c 	and.w	r3, r3, #28
 800631c:	2204      	movs	r2, #4
 800631e:	409a      	lsls	r2, r3
 8006320:	420a      	tst	r2, r1
 8006322:	d00e      	beq.n	8006342 <HAL_DMA_IRQHandler+0x36>
 8006324:	f014 0f04 	tst.w	r4, #4
 8006328:	d00b      	beq.n	8006342 <HAL_DMA_IRQHandler+0x36>
 800632a:	682b      	ldr	r3, [r5, #0]
 800632c:	069b      	lsls	r3, r3, #26
 800632e:	d403      	bmi.n	8006338 <HAL_DMA_IRQHandler+0x2c>
 8006330:	682b      	ldr	r3, [r5, #0]
 8006332:	f023 0304 	bic.w	r3, r3, #4
 8006336:	602b      	str	r3, [r5, #0]
 8006338:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800633a:	6072      	str	r2, [r6, #4]
 800633c:	b1cb      	cbz	r3, 8006372 <HAL_DMA_IRQHandler+0x66>
 800633e:	bc70      	pop	{r4, r5, r6}
 8006340:	4718      	bx	r3
 8006342:	2202      	movs	r2, #2
 8006344:	409a      	lsls	r2, r3
 8006346:	420a      	tst	r2, r1
 8006348:	d015      	beq.n	8006376 <HAL_DMA_IRQHandler+0x6a>
 800634a:	f014 0f02 	tst.w	r4, #2
 800634e:	d012      	beq.n	8006376 <HAL_DMA_IRQHandler+0x6a>
 8006350:	682b      	ldr	r3, [r5, #0]
 8006352:	0699      	lsls	r1, r3, #26
 8006354:	d406      	bmi.n	8006364 <HAL_DMA_IRQHandler+0x58>
 8006356:	682b      	ldr	r3, [r5, #0]
 8006358:	f023 030a 	bic.w	r3, r3, #10
 800635c:	602b      	str	r3, [r5, #0]
 800635e:	2301      	movs	r3, #1
 8006360:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8006364:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8006366:	6072      	str	r2, [r6, #4]
 8006368:	2100      	movs	r1, #0
 800636a:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800636e:	2b00      	cmp	r3, #0
 8006370:	d1e5      	bne.n	800633e <HAL_DMA_IRQHandler+0x32>
 8006372:	bc70      	pop	{r4, r5, r6}
 8006374:	4770      	bx	lr
 8006376:	2208      	movs	r2, #8
 8006378:	409a      	lsls	r2, r3
 800637a:	420a      	tst	r2, r1
 800637c:	d0f9      	beq.n	8006372 <HAL_DMA_IRQHandler+0x66>
 800637e:	0722      	lsls	r2, r4, #28
 8006380:	d5f7      	bpl.n	8006372 <HAL_DMA_IRQHandler+0x66>
 8006382:	682a      	ldr	r2, [r5, #0]
 8006384:	6b41      	ldr	r1, [r0, #52]	@ 0x34
 8006386:	f022 020e 	bic.w	r2, r2, #14
 800638a:	602a      	str	r2, [r5, #0]
 800638c:	2201      	movs	r2, #1
 800638e:	fa02 f303 	lsl.w	r3, r2, r3
 8006392:	2400      	movs	r4, #0
 8006394:	6073      	str	r3, [r6, #4]
 8006396:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8006398:	f880 4024 	strb.w	r4, [r0, #36]	@ 0x24
 800639c:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 80063a0:	2900      	cmp	r1, #0
 80063a2:	d0e6      	beq.n	8006372 <HAL_DMA_IRQHandler+0x66>
 80063a4:	bc70      	pop	{r4, r5, r6}
 80063a6:	4708      	bx	r1

080063a8 <HAL_DMA_GetError>:
 80063a8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80063aa:	4770      	bx	lr

080063ac <HAL_GPIO_Init>:
 80063ac:	680b      	ldr	r3, [r1, #0]
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	f000 8181 	beq.w	80066b6 <HAL_GPIO_Init+0x30a>
 80063b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063b8:	f1b0 4f90 	cmp.w	r0, #1207959552	@ 0x48000000
 80063bc:	b083      	sub	sp, #12
 80063be:	f04f 0200 	mov.w	r2, #0
 80063c2:	f04f 0b01 	mov.w	fp, #1
 80063c6:	f000 80f6 	beq.w	80065b6 <HAL_GPIO_Init+0x20a>
 80063ca:	f8df e30c 	ldr.w	lr, [pc, #780]	@ 80066d8 <HAL_GPIO_Init+0x32c>
 80063ce:	9300      	str	r3, [sp, #0]
 80063d0:	9b00      	ldr	r3, [sp, #0]
 80063d2:	fa0b fc02 	lsl.w	ip, fp, r2
 80063d6:	ea1c 0a03 	ands.w	sl, ip, r3
 80063da:	d068      	beq.n	80064ae <HAL_GPIO_Init+0x102>
 80063dc:	684d      	ldr	r5, [r1, #4]
 80063de:	f005 0703 	and.w	r7, r5, #3
 80063e2:	0054      	lsls	r4, r2, #1
 80063e4:	2303      	movs	r3, #3
 80063e6:	f107 38ff 	add.w	r8, r7, #4294967295
 80063ea:	fa03 f604 	lsl.w	r6, r3, r4
 80063ee:	f1b8 0f01 	cmp.w	r8, #1
 80063f2:	ea6f 0606 	mvn.w	r6, r6
 80063f6:	f240 8102 	bls.w	80065fe <HAL_GPIO_Init+0x252>
 80063fa:	2f03      	cmp	r7, #3
 80063fc:	f040 815c 	bne.w	80066b8 <HAL_GPIO_Init+0x30c>
 8006400:	fa07 f404 	lsl.w	r4, r7, r4
 8006404:	6807      	ldr	r7, [r0, #0]
 8006406:	403e      	ands	r6, r7
 8006408:	4334      	orrs	r4, r6
 800640a:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
 800640e:	6004      	str	r4, [r0, #0]
 8006410:	d04d      	beq.n	80064ae <HAL_GPIO_Init+0x102>
 8006412:	f022 0403 	bic.w	r4, r2, #3
 8006416:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 800641a:	f002 0703 	and.w	r7, r2, #3
 800641e:	230f      	movs	r3, #15
 8006420:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
 8006424:	00bf      	lsls	r7, r7, #2
 8006426:	fa03 fc07 	lsl.w	ip, r3, r7
 800642a:	4ba9      	ldr	r3, [pc, #676]	@ (80066d0 <HAL_GPIO_Init+0x324>)
 800642c:	68a6      	ldr	r6, [r4, #8]
 800642e:	4298      	cmp	r0, r3
 8006430:	ea26 060c 	bic.w	r6, r6, ip
 8006434:	f000 8133 	beq.w	800669e <HAL_GPIO_Init+0x2f2>
 8006438:	4ba6      	ldr	r3, [pc, #664]	@ (80066d4 <HAL_GPIO_Init+0x328>)
 800643a:	4298      	cmp	r0, r3
 800643c:	f000 8120 	beq.w	8006680 <HAL_GPIO_Init+0x2d4>
 8006440:	f8df c298 	ldr.w	ip, [pc, #664]	@ 80066dc <HAL_GPIO_Init+0x330>
 8006444:	4560      	cmp	r0, ip
 8006446:	f000 8130 	beq.w	80066aa <HAL_GPIO_Init+0x2fe>
 800644a:	f8df c294 	ldr.w	ip, [pc, #660]	@ 80066e0 <HAL_GPIO_Init+0x334>
 800644e:	4560      	cmp	r0, ip
 8006450:	bf0c      	ite	eq
 8006452:	f04f 0c04 	moveq.w	ip, #4
 8006456:	f04f 0c07 	movne.w	ip, #7
 800645a:	fa0c f707 	lsl.w	r7, ip, r7
 800645e:	433e      	orrs	r6, r7
 8006460:	60a6      	str	r6, [r4, #8]
 8006462:	f8de 4000 	ldr.w	r4, [lr]
 8006466:	ea6f 060a 	mvn.w	r6, sl
 800646a:	02ef      	lsls	r7, r5, #11
 800646c:	bf54      	ite	pl
 800646e:	4034      	andpl	r4, r6
 8006470:	ea4a 0404 	orrmi.w	r4, sl, r4
 8006474:	f8ce 4000 	str.w	r4, [lr]
 8006478:	f8de 4004 	ldr.w	r4, [lr, #4]
 800647c:	02ab      	lsls	r3, r5, #10
 800647e:	bf54      	ite	pl
 8006480:	4034      	andpl	r4, r6
 8006482:	ea4a 0404 	orrmi.w	r4, sl, r4
 8006486:	f8ce 4004 	str.w	r4, [lr, #4]
 800648a:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
 800648e:	03ef      	lsls	r7, r5, #15
 8006490:	bf54      	ite	pl
 8006492:	4034      	andpl	r4, r6
 8006494:	ea4a 0404 	orrmi.w	r4, sl, r4
 8006498:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
 800649c:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
 80064a0:	03ab      	lsls	r3, r5, #14
 80064a2:	bf54      	ite	pl
 80064a4:	4034      	andpl	r4, r6
 80064a6:	ea4a 0404 	orrmi.w	r4, sl, r4
 80064aa:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
 80064ae:	9b00      	ldr	r3, [sp, #0]
 80064b0:	3201      	adds	r2, #1
 80064b2:	fa33 f402 	lsrs.w	r4, r3, r2
 80064b6:	d18b      	bne.n	80063d0 <HAL_GPIO_Init+0x24>
 80064b8:	b003      	add	sp, #12
 80064ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064be:	f8d0 a008 	ldr.w	sl, [r0, #8]
 80064c2:	68ce      	ldr	r6, [r1, #12]
 80064c4:	ea0e 0a0a 	and.w	sl, lr, sl
 80064c8:	fa06 f907 	lsl.w	r9, r6, r7
 80064cc:	ea49 090a 	orr.w	r9, r9, sl
 80064d0:	f8c0 9008 	str.w	r9, [r0, #8]
 80064d4:	f8d0 9004 	ldr.w	r9, [r0, #4]
 80064d8:	ea29 0908 	bic.w	r9, r9, r8
 80064dc:	f3c5 1800 	ubfx	r8, r5, #4, #1
 80064e0:	fa08 f802 	lsl.w	r8, r8, r2
 80064e4:	ea48 0809 	orr.w	r8, r8, r9
 80064e8:	f8c0 8004 	str.w	r8, [r0, #4]
 80064ec:	f8d0 900c 	ldr.w	r9, [r0, #12]
 80064f0:	688e      	ldr	r6, [r1, #8]
 80064f2:	ea0e 0909 	and.w	r9, lr, r9
 80064f6:	fa06 f807 	lsl.w	r8, r6, r7
 80064fa:	ea48 0809 	orr.w	r8, r8, r9
 80064fe:	2c02      	cmp	r4, #2
 8006500:	f8c0 800c 	str.w	r8, [r0, #12]
 8006504:	d119      	bne.n	800653a <HAL_GPIO_Init+0x18e>
 8006506:	ea4f 08d2 	mov.w	r8, r2, lsr #3
 800650a:	ea4f 0888 	mov.w	r8, r8, lsl #2
 800650e:	f108 4690 	add.w	r6, r8, #1207959552	@ 0x48000000
 8006512:	9600      	str	r6, [sp, #0]
 8006514:	f8d6 9020 	ldr.w	r9, [r6, #32]
 8006518:	690e      	ldr	r6, [r1, #16]
 800651a:	f002 0807 	and.w	r8, r2, #7
 800651e:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8006522:	fa06 fa08 	lsl.w	sl, r6, r8
 8006526:	260f      	movs	r6, #15
 8006528:	fa06 f808 	lsl.w	r8, r6, r8
 800652c:	ea29 0908 	bic.w	r9, r9, r8
 8006530:	9e00      	ldr	r6, [sp, #0]
 8006532:	ea4a 0a09 	orr.w	sl, sl, r9
 8006536:	f8c6 a020 	str.w	sl, [r6, #32]
 800653a:	40bc      	lsls	r4, r7
 800653c:	6807      	ldr	r7, [r0, #0]
 800653e:	ea07 070e 	and.w	r7, r7, lr
 8006542:	433c      	orrs	r4, r7
 8006544:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
 8006548:	6004      	str	r4, [r0, #0]
 800654a:	d030      	beq.n	80065ae <HAL_GPIO_Init+0x202>
 800654c:	f022 0403 	bic.w	r4, r2, #3
 8006550:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 8006554:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
 8006558:	f002 0703 	and.w	r7, r2, #3
 800655c:	f8d4 e008 	ldr.w	lr, [r4, #8]
 8006560:	260f      	movs	r6, #15
 8006562:	00bf      	lsls	r7, r7, #2
 8006564:	fa06 f707 	lsl.w	r7, r6, r7
 8006568:	ea2e 0707 	bic.w	r7, lr, r7
 800656c:	60a7      	str	r7, [r4, #8]
 800656e:	4c5a      	ldr	r4, [pc, #360]	@ (80066d8 <HAL_GPIO_Init+0x32c>)
 8006570:	02ee      	lsls	r6, r5, #11
 8006572:	6824      	ldr	r4, [r4, #0]
 8006574:	ea6f 070c 	mvn.w	r7, ip
 8006578:	d47f      	bmi.n	800667a <HAL_GPIO_Init+0x2ce>
 800657a:	403c      	ands	r4, r7
 800657c:	4e56      	ldr	r6, [pc, #344]	@ (80066d8 <HAL_GPIO_Init+0x32c>)
 800657e:	6034      	str	r4, [r6, #0]
 8006580:	6874      	ldr	r4, [r6, #4]
 8006582:	02ae      	lsls	r6, r5, #10
 8006584:	f100 8088 	bmi.w	8006698 <HAL_GPIO_Init+0x2ec>
 8006588:	403c      	ands	r4, r7
 800658a:	4e53      	ldr	r6, [pc, #332]	@ (80066d8 <HAL_GPIO_Init+0x32c>)
 800658c:	6074      	str	r4, [r6, #4]
 800658e:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
 8006592:	03ee      	lsls	r6, r5, #15
 8006594:	d47d      	bmi.n	8006692 <HAL_GPIO_Init+0x2e6>
 8006596:	403c      	ands	r4, r7
 8006598:	4e4f      	ldr	r6, [pc, #316]	@ (80066d8 <HAL_GPIO_Init+0x32c>)
 800659a:	03ad      	lsls	r5, r5, #14
 800659c:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
 80065a0:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
 80065a4:	d472      	bmi.n	800668c <HAL_GPIO_Init+0x2e0>
 80065a6:	403c      	ands	r4, r7
 80065a8:	4d4b      	ldr	r5, [pc, #300]	@ (80066d8 <HAL_GPIO_Init+0x32c>)
 80065aa:	f8c5 4084 	str.w	r4, [r5, #132]	@ 0x84
 80065ae:	3201      	adds	r2, #1
 80065b0:	fa33 f402 	lsrs.w	r4, r3, r2
 80065b4:	d080      	beq.n	80064b8 <HAL_GPIO_Init+0x10c>
 80065b6:	fa0b f802 	lsl.w	r8, fp, r2
 80065ba:	ea13 0c08 	ands.w	ip, r3, r8
 80065be:	d0f6      	beq.n	80065ae <HAL_GPIO_Init+0x202>
 80065c0:	684d      	ldr	r5, [r1, #4]
 80065c2:	f005 0403 	and.w	r4, r5, #3
 80065c6:	0057      	lsls	r7, r2, #1
 80065c8:	2603      	movs	r6, #3
 80065ca:	f104 39ff 	add.w	r9, r4, #4294967295
 80065ce:	fa06 fe07 	lsl.w	lr, r6, r7
 80065d2:	f1b9 0f01 	cmp.w	r9, #1
 80065d6:	ea6f 0e0e 	mvn.w	lr, lr
 80065da:	f67f af70 	bls.w	80064be <HAL_GPIO_Init+0x112>
 80065de:	2c03      	cmp	r4, #3
 80065e0:	d0ab      	beq.n	800653a <HAL_GPIO_Init+0x18e>
 80065e2:	f04f 4990 	mov.w	r9, #1207959552	@ 0x48000000
 80065e6:	688e      	ldr	r6, [r1, #8]
 80065e8:	f8d9 a00c 	ldr.w	sl, [r9, #12]
 80065ec:	fa06 f807 	lsl.w	r8, r6, r7
 80065f0:	ea0e 0a0a 	and.w	sl, lr, sl
 80065f4:	ea48 080a 	orr.w	r8, r8, sl
 80065f8:	f8c9 800c 	str.w	r8, [r9, #12]
 80065fc:	e79d      	b.n	800653a <HAL_GPIO_Init+0x18e>
 80065fe:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8006602:	68cb      	ldr	r3, [r1, #12]
 8006604:	ea09 0906 	and.w	r9, r9, r6
 8006608:	fa03 f804 	lsl.w	r8, r3, r4
 800660c:	ea48 0809 	orr.w	r8, r8, r9
 8006610:	f8c0 8008 	str.w	r8, [r0, #8]
 8006614:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8006618:	688b      	ldr	r3, [r1, #8]
 800661a:	ea28 080c 	bic.w	r8, r8, ip
 800661e:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8006622:	fa0c fc02 	lsl.w	ip, ip, r2
 8006626:	ea4c 0c08 	orr.w	ip, ip, r8
 800662a:	f8c0 c004 	str.w	ip, [r0, #4]
 800662e:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8006632:	fa03 fc04 	lsl.w	ip, r3, r4
 8006636:	ea08 0806 	and.w	r8, r8, r6
 800663a:	ea4c 0c08 	orr.w	ip, ip, r8
 800663e:	2f02      	cmp	r7, #2
 8006640:	f8c0 c00c 	str.w	ip, [r0, #12]
 8006644:	f47f aedc 	bne.w	8006400 <HAL_GPIO_Init+0x54>
 8006648:	690b      	ldr	r3, [r1, #16]
 800664a:	ea4f 08d2 	mov.w	r8, r2, lsr #3
 800664e:	f002 0c07 	and.w	ip, r2, #7
 8006652:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8006656:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800665a:	fa03 f30c 	lsl.w	r3, r3, ip
 800665e:	f8d8 9020 	ldr.w	r9, [r8, #32]
 8006662:	9301      	str	r3, [sp, #4]
 8006664:	230f      	movs	r3, #15
 8006666:	fa03 fc0c 	lsl.w	ip, r3, ip
 800666a:	9b01      	ldr	r3, [sp, #4]
 800666c:	ea29 090c 	bic.w	r9, r9, ip
 8006670:	ea43 0c09 	orr.w	ip, r3, r9
 8006674:	f8c8 c020 	str.w	ip, [r8, #32]
 8006678:	e6c2      	b.n	8006400 <HAL_GPIO_Init+0x54>
 800667a:	ea4c 0404 	orr.w	r4, ip, r4
 800667e:	e77d      	b.n	800657c <HAL_GPIO_Init+0x1d0>
 8006680:	f04f 0c02 	mov.w	ip, #2
 8006684:	fa0c f707 	lsl.w	r7, ip, r7
 8006688:	433e      	orrs	r6, r7
 800668a:	e6e9      	b.n	8006460 <HAL_GPIO_Init+0xb4>
 800668c:	ea44 040c 	orr.w	r4, r4, ip
 8006690:	e78a      	b.n	80065a8 <HAL_GPIO_Init+0x1fc>
 8006692:	ea4c 0404 	orr.w	r4, ip, r4
 8006696:	e77f      	b.n	8006598 <HAL_GPIO_Init+0x1ec>
 8006698:	ea44 040c 	orr.w	r4, r4, ip
 800669c:	e775      	b.n	800658a <HAL_GPIO_Init+0x1de>
 800669e:	f04f 0c01 	mov.w	ip, #1
 80066a2:	fa0c f707 	lsl.w	r7, ip, r7
 80066a6:	433e      	orrs	r6, r7
 80066a8:	e6da      	b.n	8006460 <HAL_GPIO_Init+0xb4>
 80066aa:	f04f 0c03 	mov.w	ip, #3
 80066ae:	fa0c f707 	lsl.w	r7, ip, r7
 80066b2:	433e      	orrs	r6, r7
 80066b4:	e6d4      	b.n	8006460 <HAL_GPIO_Init+0xb4>
 80066b6:	4770      	bx	lr
 80066b8:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80066bc:	688b      	ldr	r3, [r1, #8]
 80066be:	ea08 0806 	and.w	r8, r8, r6
 80066c2:	fa03 fc04 	lsl.w	ip, r3, r4
 80066c6:	ea4c 0c08 	orr.w	ip, ip, r8
 80066ca:	f8c0 c00c 	str.w	ip, [r0, #12]
 80066ce:	e697      	b.n	8006400 <HAL_GPIO_Init+0x54>
 80066d0:	48000400 	.word	0x48000400
 80066d4:	48000800 	.word	0x48000800
 80066d8:	58000800 	.word	0x58000800
 80066dc:	48000c00 	.word	0x48000c00
 80066e0:	48001000 	.word	0x48001000

080066e4 <HAL_GPIO_ReadPin>:
 80066e4:	6903      	ldr	r3, [r0, #16]
 80066e6:	4219      	tst	r1, r3
 80066e8:	bf14      	ite	ne
 80066ea:	2001      	movne	r0, #1
 80066ec:	2000      	moveq	r0, #0
 80066ee:	4770      	bx	lr

080066f0 <HAL_GPIO_WritePin>:
 80066f0:	b10a      	cbz	r2, 80066f6 <HAL_GPIO_WritePin+0x6>
 80066f2:	6181      	str	r1, [r0, #24]
 80066f4:	4770      	bx	lr
 80066f6:	6281      	str	r1, [r0, #40]	@ 0x28
 80066f8:	4770      	bx	lr
 80066fa:	bf00      	nop

080066fc <HAL_GPIO_TogglePin>:
 80066fc:	6943      	ldr	r3, [r0, #20]
 80066fe:	ea01 0203 	and.w	r2, r1, r3
 8006702:	ea21 0103 	bic.w	r1, r1, r3
 8006706:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800670a:	6181      	str	r1, [r0, #24]
 800670c:	4770      	bx	lr
 800670e:	bf00      	nop

08006710 <HAL_GPIO_EXTI_IRQHandler>:
 8006710:	4a04      	ldr	r2, [pc, #16]	@ (8006724 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8006712:	68d1      	ldr	r1, [r2, #12]
 8006714:	4201      	tst	r1, r0
 8006716:	d100      	bne.n	800671a <HAL_GPIO_EXTI_IRQHandler+0xa>
 8006718:	4770      	bx	lr
 800671a:	b508      	push	{r3, lr}
 800671c:	60d0      	str	r0, [r2, #12]
 800671e:	f7fb fba5 	bl	8001e6c <HAL_GPIO_EXTI_Callback>
 8006722:	bd08      	pop	{r3, pc}
 8006724:	58000800 	.word	0x58000800

08006728 <HAL_HSEM_FreeCallback>:
 8006728:	4770      	bx	lr
 800672a:	bf00      	nop

0800672c <HAL_HSEM_IRQHandler>:
 800672c:	b508      	push	{r3, lr}
 800672e:	4b05      	ldr	r3, [pc, #20]	@ (8006744 <HAL_HSEM_IRQHandler+0x18>)
 8006730:	68d8      	ldr	r0, [r3, #12]
 8006732:	681a      	ldr	r2, [r3, #0]
 8006734:	ea22 0200 	bic.w	r2, r2, r0
 8006738:	601a      	str	r2, [r3, #0]
 800673a:	6058      	str	r0, [r3, #4]
 800673c:	f7ff fff4 	bl	8006728 <HAL_HSEM_FreeCallback>
 8006740:	bd08      	pop	{r3, pc}
 8006742:	bf00      	nop
 8006744:	58001500 	.word	0x58001500

08006748 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
 8006748:	6803      	ldr	r3, [r0, #0]
 800674a:	699a      	ldr	r2, [r3, #24]
 800674c:	0412      	lsls	r2, r2, #16
 800674e:	f140 8097 	bpl.w	8006880 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
 8006752:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006756:	4604      	mov	r4, r0
 8006758:	460e      	mov	r6, r1
 800675a:	2710      	movs	r7, #16
 800675c:	699a      	ldr	r2, [r3, #24]
 800675e:	f012 0810 	ands.w	r8, r2, #16
 8006762:	d07f      	beq.n	8006864 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
 8006764:	61df      	str	r7, [r3, #28]
 8006766:	4635      	mov	r5, r6
 8006768:	699a      	ldr	r2, [r3, #24]
 800676a:	f012 0820 	ands.w	r8, r2, #32
 800676e:	d17b      	bne.n	8006868 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
 8006770:	f7fe ffe8 	bl	8005744 <HAL_GetTick>
 8006774:	1b40      	subs	r0, r0, r5
 8006776:	2819      	cmp	r0, #25
 8006778:	6823      	ldr	r3, [r4, #0]
 800677a:	d83d      	bhi.n	80067f8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
 800677c:	699a      	ldr	r2, [r3, #24]
 800677e:	0690      	lsls	r0, r2, #26
 8006780:	d5f6      	bpl.n	8006770 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>
 8006782:	2220      	movs	r2, #32
 8006784:	61da      	str	r2, [r3, #28]
 8006786:	f048 0804 	orr.w	r8, r8, #4
 800678a:	2501      	movs	r5, #1
 800678c:	699a      	ldr	r2, [r3, #24]
 800678e:	05d1      	lsls	r1, r2, #23
 8006790:	d552      	bpl.n	8006838 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
 8006792:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006796:	0555      	lsls	r5, r2, #21
 8006798:	61d9      	str	r1, [r3, #28]
 800679a:	f048 0801 	orr.w	r8, r8, #1
 800679e:	d504      	bpl.n	80067aa <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
 80067a0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80067a4:	61d9      	str	r1, [r3, #28]
 80067a6:	f048 0808 	orr.w	r8, r8, #8
 80067aa:	0591      	lsls	r1, r2, #22
 80067ac:	d504      	bpl.n	80067b8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
 80067ae:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80067b2:	f048 0802 	orr.w	r8, r8, #2
 80067b6:	61da      	str	r2, [r3, #28]
 80067b8:	699a      	ldr	r2, [r3, #24]
 80067ba:	0795      	lsls	r5, r2, #30
 80067bc:	bf44      	itt	mi
 80067be:	2200      	movmi	r2, #0
 80067c0:	629a      	strmi	r2, [r3, #40]	@ 0x28
 80067c2:	699a      	ldr	r2, [r3, #24]
 80067c4:	07d0      	lsls	r0, r2, #31
 80067c6:	d403      	bmi.n	80067d0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
 80067c8:	699a      	ldr	r2, [r3, #24]
 80067ca:	f042 0201 	orr.w	r2, r2, #1
 80067ce:	619a      	str	r2, [r3, #24]
 80067d0:	685a      	ldr	r2, [r3, #4]
 80067d2:	482c      	ldr	r0, [pc, #176]	@ (8006884 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
 80067d4:	4002      	ands	r2, r0
 80067d6:	605a      	str	r2, [r3, #4]
 80067d8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80067da:	2120      	movs	r1, #32
 80067dc:	2200      	movs	r2, #0
 80067de:	ea43 0308 	orr.w	r3, r3, r8
 80067e2:	6463      	str	r3, [r4, #68]	@ 0x44
 80067e4:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 80067e8:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 80067ec:	2300      	movs	r3, #0
 80067ee:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80067f2:	2001      	movs	r0, #1
 80067f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80067f8:	6858      	ldr	r0, [r3, #4]
 80067fa:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 80067fe:	6999      	ldr	r1, [r3, #24]
 8006800:	0409      	lsls	r1, r1, #16
 8006802:	b2d2      	uxtb	r2, r2
 8006804:	d50b      	bpl.n	800681e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 8006806:	0441      	lsls	r1, r0, #17
 8006808:	d409      	bmi.n	800681e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 800680a:	2a20      	cmp	r2, #32
 800680c:	d007      	beq.n	800681e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 800680e:	685a      	ldr	r2, [r3, #4]
 8006810:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006814:	605a      	str	r2, [r3, #4]
 8006816:	f7fe ff95 	bl	8005744 <HAL_GetTick>
 800681a:	6823      	ldr	r3, [r4, #0]
 800681c:	4605      	mov	r5, r0
 800681e:	699a      	ldr	r2, [r3, #24]
 8006820:	0690      	lsls	r0, r2, #26
 8006822:	d4a1      	bmi.n	8006768 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
 8006824:	f7fe ff8e 	bl	8005744 <HAL_GetTick>
 8006828:	1b40      	subs	r0, r0, r5
 800682a:	2819      	cmp	r0, #25
 800682c:	6823      	ldr	r3, [r4, #0]
 800682e:	d9f6      	bls.n	800681e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 8006830:	699a      	ldr	r2, [r3, #24]
 8006832:	f04f 0820 	mov.w	r8, #32
 8006836:	e7a6      	b.n	8006786 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
 8006838:	0550      	lsls	r0, r2, #21
 800683a:	d4b1      	bmi.n	80067a0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
 800683c:	0592      	lsls	r2, r2, #22
 800683e:	d4b6      	bmi.n	80067ae <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
 8006840:	2d00      	cmp	r5, #0
 8006842:	d1b9      	bne.n	80067b8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
 8006844:	f7fe ff7e 	bl	8005744 <HAL_GetTick>
 8006848:	1b80      	subs	r0, r0, r6
 800684a:	2819      	cmp	r0, #25
 800684c:	6823      	ldr	r3, [r4, #0]
 800684e:	d902      	bls.n	8006856 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
 8006850:	699a      	ldr	r2, [r3, #24]
 8006852:	0411      	lsls	r1, r2, #16
 8006854:	d40b      	bmi.n	800686e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
 8006856:	699a      	ldr	r2, [r3, #24]
 8006858:	0412      	lsls	r2, r2, #16
 800685a:	f53f af7f 	bmi.w	800675c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
 800685e:	2000      	movs	r0, #0
 8006860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006864:	4645      	mov	r5, r8
 8006866:	e791      	b.n	800678c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
 8006868:	f04f 0800 	mov.w	r8, #0
 800686c:	e789      	b.n	8006782 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
 800686e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006870:	2220      	movs	r2, #32
 8006872:	4313      	orrs	r3, r2
 8006874:	6463      	str	r3, [r4, #68]	@ 0x44
 8006876:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
 800687a:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
 800687e:	e7b5      	b.n	80067ec <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
 8006880:	2000      	movs	r0, #0
 8006882:	4770      	bx	lr
 8006884:	fe00e800 	.word	0xfe00e800

08006888 <I2C_WaitOnTXISFlagUntilTimeout>:
 8006888:	6803      	ldr	r3, [r0, #0]
 800688a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800688e:	4681      	mov	r9, r0
 8006890:	460d      	mov	r5, r1
 8006892:	4690      	mov	r8, r2
 8006894:	2610      	movs	r6, #16
 8006896:	2720      	movs	r7, #32
 8006898:	699c      	ldr	r4, [r3, #24]
 800689a:	f014 0402 	ands.w	r4, r4, #2
 800689e:	d168      	bne.n	8006972 <I2C_WaitOnTXISFlagUntilTimeout+0xea>
 80068a0:	699a      	ldr	r2, [r3, #24]
 80068a2:	f012 0c10 	ands.w	ip, r2, #16
 80068a6:	d062      	beq.n	800696e <I2C_WaitOnTXISFlagUntilTimeout+0xe6>
 80068a8:	1c6a      	adds	r2, r5, #1
 80068aa:	61de      	str	r6, [r3, #28]
 80068ac:	d164      	bne.n	8006978 <I2C_WaitOnTXISFlagUntilTimeout+0xf0>
 80068ae:	699a      	ldr	r2, [r3, #24]
 80068b0:	0691      	lsls	r1, r2, #26
 80068b2:	d5fc      	bpl.n	80068ae <I2C_WaitOnTXISFlagUntilTimeout+0x26>
 80068b4:	61df      	str	r7, [r3, #28]
 80068b6:	f044 0c04 	orr.w	ip, r4, #4
 80068ba:	2101      	movs	r1, #1
 80068bc:	699a      	ldr	r2, [r3, #24]
 80068be:	05d0      	lsls	r0, r2, #23
 80068c0:	d534      	bpl.n	800692c <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
 80068c2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80068c6:	0554      	lsls	r4, r2, #21
 80068c8:	61d9      	str	r1, [r3, #28]
 80068ca:	f04c 0c01 	orr.w	ip, ip, #1
 80068ce:	d504      	bpl.n	80068da <I2C_WaitOnTXISFlagUntilTimeout+0x52>
 80068d0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80068d4:	61d9      	str	r1, [r3, #28]
 80068d6:	f04c 0c08 	orr.w	ip, ip, #8
 80068da:	0595      	lsls	r5, r2, #22
 80068dc:	d504      	bpl.n	80068e8 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
 80068de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80068e2:	f04c 0c02 	orr.w	ip, ip, #2
 80068e6:	61da      	str	r2, [r3, #28]
 80068e8:	699a      	ldr	r2, [r3, #24]
 80068ea:	0790      	lsls	r0, r2, #30
 80068ec:	bf44      	itt	mi
 80068ee:	2200      	movmi	r2, #0
 80068f0:	629a      	strmi	r2, [r3, #40]	@ 0x28
 80068f2:	699a      	ldr	r2, [r3, #24]
 80068f4:	07d1      	lsls	r1, r2, #31
 80068f6:	d403      	bmi.n	8006900 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 80068f8:	699a      	ldr	r2, [r3, #24]
 80068fa:	f042 0201 	orr.w	r2, r2, #1
 80068fe:	619a      	str	r2, [r3, #24]
 8006900:	685a      	ldr	r2, [r3, #4]
 8006902:	483b      	ldr	r0, [pc, #236]	@ (80069f0 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
 8006904:	4002      	ands	r2, r0
 8006906:	605a      	str	r2, [r3, #4]
 8006908:	f8d9 3044 	ldr.w	r3, [r9, #68]	@ 0x44
 800690c:	2120      	movs	r1, #32
 800690e:	2200      	movs	r2, #0
 8006910:	ea43 030c 	orr.w	r3, r3, ip
 8006914:	f8c9 3044 	str.w	r3, [r9, #68]	@ 0x44
 8006918:	f889 1041 	strb.w	r1, [r9, #65]	@ 0x41
 800691c:	f889 2042 	strb.w	r2, [r9, #66]	@ 0x42
 8006920:	2300      	movs	r3, #0
 8006922:	f889 3040 	strb.w	r3, [r9, #64]	@ 0x40
 8006926:	2001      	movs	r0, #1
 8006928:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800692c:	0550      	lsls	r0, r2, #21
 800692e:	d4cf      	bmi.n	80068d0 <I2C_WaitOnTXISFlagUntilTimeout+0x48>
 8006930:	0594      	lsls	r4, r2, #22
 8006932:	d4d4      	bmi.n	80068de <I2C_WaitOnTXISFlagUntilTimeout+0x56>
 8006934:	2900      	cmp	r1, #0
 8006936:	d1d7      	bne.n	80068e8 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
 8006938:	1c6a      	adds	r2, r5, #1
 800693a:	d0ad      	beq.n	8006898 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
 800693c:	f7fe ff02 	bl	8005744 <HAL_GetTick>
 8006940:	eba0 0308 	sub.w	r3, r0, r8
 8006944:	42ab      	cmp	r3, r5
 8006946:	f8d9 3000 	ldr.w	r3, [r9]
 800694a:	d801      	bhi.n	8006950 <I2C_WaitOnTXISFlagUntilTimeout+0xc8>
 800694c:	2d00      	cmp	r5, #0
 800694e:	d1a2      	bne.n	8006896 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006950:	699a      	ldr	r2, [r3, #24]
 8006952:	f012 0202 	ands.w	r2, r2, #2
 8006956:	d19e      	bne.n	8006896 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006958:	f8d9 3044 	ldr.w	r3, [r9, #68]	@ 0x44
 800695c:	2120      	movs	r1, #32
 800695e:	430b      	orrs	r3, r1
 8006960:	f8c9 3044 	str.w	r3, [r9, #68]	@ 0x44
 8006964:	f889 1041 	strb.w	r1, [r9, #65]	@ 0x41
 8006968:	f889 2042 	strb.w	r2, [r9, #66]	@ 0x42
 800696c:	e7d8      	b.n	8006920 <I2C_WaitOnTXISFlagUntilTimeout+0x98>
 800696e:	4661      	mov	r1, ip
 8006970:	e7a4      	b.n	80068bc <I2C_WaitOnTXISFlagUntilTimeout+0x34>
 8006972:	2000      	movs	r0, #0
 8006974:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006978:	46c2      	mov	sl, r8
 800697a:	699a      	ldr	r2, [r3, #24]
 800697c:	0692      	lsls	r2, r2, #26
 800697e:	d499      	bmi.n	80068b4 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
 8006980:	f7fe fee0 	bl	8005744 <HAL_GetTick>
 8006984:	eba0 000a 	sub.w	r0, r0, sl
 8006988:	4285      	cmp	r5, r0
 800698a:	d300      	bcc.n	800698e <I2C_WaitOnTXISFlagUntilTimeout+0x106>
 800698c:	bb1d      	cbnz	r5, 80069d6 <I2C_WaitOnTXISFlagUntilTimeout+0x14e>
 800698e:	f8d9 3000 	ldr.w	r3, [r9]
 8006992:	6858      	ldr	r0, [r3, #4]
 8006994:	f899 2042 	ldrb.w	r2, [r9, #66]	@ 0x42
 8006998:	6999      	ldr	r1, [r3, #24]
 800699a:	0409      	lsls	r1, r1, #16
 800699c:	b2d2      	uxtb	r2, r2
 800699e:	d50c      	bpl.n	80069ba <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069a0:	0441      	lsls	r1, r0, #17
 80069a2:	d40a      	bmi.n	80069ba <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069a4:	2a20      	cmp	r2, #32
 80069a6:	d008      	beq.n	80069ba <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069a8:	685a      	ldr	r2, [r3, #4]
 80069aa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80069ae:	605a      	str	r2, [r3, #4]
 80069b0:	f7fe fec8 	bl	8005744 <HAL_GetTick>
 80069b4:	f8d9 3000 	ldr.w	r3, [r9]
 80069b8:	4682      	mov	sl, r0
 80069ba:	699a      	ldr	r2, [r3, #24]
 80069bc:	0690      	lsls	r0, r2, #26
 80069be:	d4dc      	bmi.n	800697a <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
 80069c0:	f7fe fec0 	bl	8005744 <HAL_GetTick>
 80069c4:	eba0 000a 	sub.w	r0, r0, sl
 80069c8:	2819      	cmp	r0, #25
 80069ca:	f8d9 3000 	ldr.w	r3, [r9]
 80069ce:	d9f4      	bls.n	80069ba <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069d0:	699a      	ldr	r2, [r3, #24]
 80069d2:	2420      	movs	r4, #32
 80069d4:	e76f      	b.n	80068b6 <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
 80069d6:	f8d9 3000 	ldr.w	r3, [r9]
 80069da:	699a      	ldr	r2, [r3, #24]
 80069dc:	0690      	lsls	r0, r2, #26
 80069de:	f53f af69 	bmi.w	80068b4 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
 80069e2:	f7fe feaf 	bl	8005744 <HAL_GetTick>
 80069e6:	eba0 000a 	sub.w	r0, r0, sl
 80069ea:	4285      	cmp	r5, r0
 80069ec:	d2f3      	bcs.n	80069d6 <I2C_WaitOnTXISFlagUntilTimeout+0x14e>
 80069ee:	e7ce      	b.n	800698e <I2C_WaitOnTXISFlagUntilTimeout+0x106>
 80069f0:	fe00e800 	.word	0xfe00e800

080069f4 <I2C_WaitOnFlagUntilTimeout>:
 80069f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80069f8:	4604      	mov	r4, r0
 80069fa:	6800      	ldr	r0, [r0, #0]
 80069fc:	460f      	mov	r7, r1
 80069fe:	4616      	mov	r6, r2
 8006a00:	461d      	mov	r5, r3
 8006a02:	f04f 0810 	mov.w	r8, #16
 8006a06:	f04f 0920 	mov.w	r9, #32
 8006a0a:	6983      	ldr	r3, [r0, #24]
 8006a0c:	ea37 0303 	bics.w	r3, r7, r3
 8006a10:	bf0c      	ite	eq
 8006a12:	2301      	moveq	r3, #1
 8006a14:	2300      	movne	r3, #0
 8006a16:	42b3      	cmp	r3, r6
 8006a18:	d16c      	bne.n	8006af4 <I2C_WaitOnFlagUntilTimeout+0x100>
 8006a1a:	6983      	ldr	r3, [r0, #24]
 8006a1c:	f013 0310 	ands.w	r3, r3, #16
 8006a20:	d066      	beq.n	8006af0 <I2C_WaitOnFlagUntilTimeout+0xfc>
 8006a22:	1c6b      	adds	r3, r5, #1
 8006a24:	f8c0 801c 	str.w	r8, [r0, #28]
 8006a28:	d167      	bne.n	8006afa <I2C_WaitOnFlagUntilTimeout+0x106>
 8006a2a:	6983      	ldr	r3, [r0, #24]
 8006a2c:	069a      	lsls	r2, r3, #26
 8006a2e:	d5fc      	bpl.n	8006a2a <I2C_WaitOnFlagUntilTimeout+0x36>
 8006a30:	f8c0 901c 	str.w	r9, [r0, #28]
 8006a34:	2300      	movs	r3, #0
 8006a36:	f043 0304 	orr.w	r3, r3, #4
 8006a3a:	2101      	movs	r1, #1
 8006a3c:	6982      	ldr	r2, [r0, #24]
 8006a3e:	f412 7f80 	tst.w	r2, #256	@ 0x100
 8006a42:	d031      	beq.n	8006aa8 <I2C_WaitOnFlagUntilTimeout+0xb4>
 8006a44:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006a48:	61c1      	str	r1, [r0, #28]
 8006a4a:	0551      	lsls	r1, r2, #21
 8006a4c:	f043 0301 	orr.w	r3, r3, #1
 8006a50:	d504      	bpl.n	8006a5c <I2C_WaitOnFlagUntilTimeout+0x68>
 8006a52:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8006a56:	61c1      	str	r1, [r0, #28]
 8006a58:	f043 0308 	orr.w	r3, r3, #8
 8006a5c:	0591      	lsls	r1, r2, #22
 8006a5e:	d504      	bpl.n	8006a6a <I2C_WaitOnFlagUntilTimeout+0x76>
 8006a60:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006a64:	f043 0302 	orr.w	r3, r3, #2
 8006a68:	61c2      	str	r2, [r0, #28]
 8006a6a:	6982      	ldr	r2, [r0, #24]
 8006a6c:	0791      	lsls	r1, r2, #30
 8006a6e:	bf44      	itt	mi
 8006a70:	2200      	movmi	r2, #0
 8006a72:	6282      	strmi	r2, [r0, #40]	@ 0x28
 8006a74:	6982      	ldr	r2, [r0, #24]
 8006a76:	07d2      	lsls	r2, r2, #31
 8006a78:	d403      	bmi.n	8006a82 <I2C_WaitOnFlagUntilTimeout+0x8e>
 8006a7a:	6982      	ldr	r2, [r0, #24]
 8006a7c:	f042 0201 	orr.w	r2, r2, #1
 8006a80:	6182      	str	r2, [r0, #24]
 8006a82:	6842      	ldr	r2, [r0, #4]
 8006a84:	4939      	ldr	r1, [pc, #228]	@ (8006b6c <I2C_WaitOnFlagUntilTimeout+0x178>)
 8006a86:	400a      	ands	r2, r1
 8006a88:	6042      	str	r2, [r0, #4]
 8006a8a:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8006a8c:	2520      	movs	r5, #32
 8006a8e:	2100      	movs	r1, #0
 8006a90:	4313      	orrs	r3, r2
 8006a92:	6463      	str	r3, [r4, #68]	@ 0x44
 8006a94:	f884 5041 	strb.w	r5, [r4, #65]	@ 0x41
 8006a98:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
 8006a9c:	2300      	movs	r3, #0
 8006a9e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006aa2:	2001      	movs	r0, #1
 8006aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006aa8:	f412 6f80 	tst.w	r2, #1024	@ 0x400
 8006aac:	d1d1      	bne.n	8006a52 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8006aae:	0592      	lsls	r2, r2, #22
 8006ab0:	d4d6      	bmi.n	8006a60 <I2C_WaitOnFlagUntilTimeout+0x6c>
 8006ab2:	2900      	cmp	r1, #0
 8006ab4:	d1d9      	bne.n	8006a6a <I2C_WaitOnFlagUntilTimeout+0x76>
 8006ab6:	1c6b      	adds	r3, r5, #1
 8006ab8:	d0a7      	beq.n	8006a0a <I2C_WaitOnFlagUntilTimeout+0x16>
 8006aba:	f7fe fe43 	bl	8005744 <HAL_GetTick>
 8006abe:	9b08      	ldr	r3, [sp, #32]
 8006ac0:	1ac3      	subs	r3, r0, r3
 8006ac2:	42ab      	cmp	r3, r5
 8006ac4:	6820      	ldr	r0, [r4, #0]
 8006ac6:	d801      	bhi.n	8006acc <I2C_WaitOnFlagUntilTimeout+0xd8>
 8006ac8:	2d00      	cmp	r5, #0
 8006aca:	d19c      	bne.n	8006a06 <I2C_WaitOnFlagUntilTimeout+0x12>
 8006acc:	6983      	ldr	r3, [r0, #24]
 8006ace:	ea37 0303 	bics.w	r3, r7, r3
 8006ad2:	bf0c      	ite	eq
 8006ad4:	2301      	moveq	r3, #1
 8006ad6:	2300      	movne	r3, #0
 8006ad8:	42b3      	cmp	r3, r6
 8006ada:	d194      	bne.n	8006a06 <I2C_WaitOnFlagUntilTimeout+0x12>
 8006adc:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006ade:	2120      	movs	r1, #32
 8006ae0:	430b      	orrs	r3, r1
 8006ae2:	2200      	movs	r2, #0
 8006ae4:	6463      	str	r3, [r4, #68]	@ 0x44
 8006ae6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006aea:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006aee:	e7d5      	b.n	8006a9c <I2C_WaitOnFlagUntilTimeout+0xa8>
 8006af0:	4619      	mov	r1, r3
 8006af2:	e7a3      	b.n	8006a3c <I2C_WaitOnFlagUntilTimeout+0x48>
 8006af4:	2000      	movs	r0, #0
 8006af6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006afa:	f8dd a020 	ldr.w	sl, [sp, #32]
 8006afe:	6983      	ldr	r3, [r0, #24]
 8006b00:	069b      	lsls	r3, r3, #26
 8006b02:	d495      	bmi.n	8006a30 <I2C_WaitOnFlagUntilTimeout+0x3c>
 8006b04:	f7fe fe1e 	bl	8005744 <HAL_GetTick>
 8006b08:	eba0 000a 	sub.w	r0, r0, sl
 8006b0c:	4285      	cmp	r5, r0
 8006b0e:	d300      	bcc.n	8006b12 <I2C_WaitOnFlagUntilTimeout+0x11e>
 8006b10:	bb05      	cbnz	r5, 8006b54 <I2C_WaitOnFlagUntilTimeout+0x160>
 8006b12:	6820      	ldr	r0, [r4, #0]
 8006b14:	6841      	ldr	r1, [r0, #4]
 8006b16:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
 8006b1a:	6982      	ldr	r2, [r0, #24]
 8006b1c:	0412      	lsls	r2, r2, #16
 8006b1e:	b2db      	uxtb	r3, r3
 8006b20:	d50b      	bpl.n	8006b3a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b22:	044a      	lsls	r2, r1, #17
 8006b24:	d409      	bmi.n	8006b3a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b26:	2b20      	cmp	r3, #32
 8006b28:	d007      	beq.n	8006b3a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b2a:	6843      	ldr	r3, [r0, #4]
 8006b2c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006b30:	6043      	str	r3, [r0, #4]
 8006b32:	f7fe fe07 	bl	8005744 <HAL_GetTick>
 8006b36:	4682      	mov	sl, r0
 8006b38:	6820      	ldr	r0, [r4, #0]
 8006b3a:	6983      	ldr	r3, [r0, #24]
 8006b3c:	0699      	lsls	r1, r3, #26
 8006b3e:	d4de      	bmi.n	8006afe <I2C_WaitOnFlagUntilTimeout+0x10a>
 8006b40:	f7fe fe00 	bl	8005744 <HAL_GetTick>
 8006b44:	eba0 000a 	sub.w	r0, r0, sl
 8006b48:	2819      	cmp	r0, #25
 8006b4a:	6820      	ldr	r0, [r4, #0]
 8006b4c:	d9f5      	bls.n	8006b3a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b4e:	6983      	ldr	r3, [r0, #24]
 8006b50:	2320      	movs	r3, #32
 8006b52:	e770      	b.n	8006a36 <I2C_WaitOnFlagUntilTimeout+0x42>
 8006b54:	6820      	ldr	r0, [r4, #0]
 8006b56:	6983      	ldr	r3, [r0, #24]
 8006b58:	0699      	lsls	r1, r3, #26
 8006b5a:	f53f af69 	bmi.w	8006a30 <I2C_WaitOnFlagUntilTimeout+0x3c>
 8006b5e:	f7fe fdf1 	bl	8005744 <HAL_GetTick>
 8006b62:	eba0 000a 	sub.w	r0, r0, sl
 8006b66:	4285      	cmp	r5, r0
 8006b68:	d2f4      	bcs.n	8006b54 <I2C_WaitOnFlagUntilTimeout+0x160>
 8006b6a:	e7d2      	b.n	8006b12 <I2C_WaitOnFlagUntilTimeout+0x11e>
 8006b6c:	fe00e800 	.word	0xfe00e800

08006b70 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8006b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b74:	6803      	ldr	r3, [r0, #0]
 8006b76:	4604      	mov	r4, r0
 8006b78:	6998      	ldr	r0, [r3, #24]
 8006b7a:	0680      	lsls	r0, r0, #26
 8006b7c:	d45f      	bmi.n	8006c3e <I2C_WaitOnSTOPFlagUntilTimeout+0xce>
 8006b7e:	460d      	mov	r5, r1
 8006b80:	4616      	mov	r6, r2
 8006b82:	2710      	movs	r7, #16
 8006b84:	f04f 0820 	mov.w	r8, #32
 8006b88:	699a      	ldr	r2, [r3, #24]
 8006b8a:	f012 0c10 	ands.w	ip, r2, #16
 8006b8e:	d059      	beq.n	8006c44 <I2C_WaitOnSTOPFlagUntilTimeout+0xd4>
 8006b90:	1c6a      	adds	r2, r5, #1
 8006b92:	61df      	str	r7, [r3, #28]
 8006b94:	d161      	bne.n	8006c5a <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
 8006b96:	699a      	ldr	r2, [r3, #24]
 8006b98:	0691      	lsls	r1, r2, #26
 8006b9a:	d5fc      	bpl.n	8006b96 <I2C_WaitOnSTOPFlagUntilTimeout+0x26>
 8006b9c:	f8c3 801c 	str.w	r8, [r3, #28]
 8006ba0:	f04f 0c00 	mov.w	ip, #0
 8006ba4:	f04c 0c04 	orr.w	ip, ip, #4
 8006ba8:	2101      	movs	r1, #1
 8006baa:	699a      	ldr	r2, [r3, #24]
 8006bac:	05d0      	lsls	r0, r2, #23
 8006bae:	d532      	bpl.n	8006c16 <I2C_WaitOnSTOPFlagUntilTimeout+0xa6>
 8006bb0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006bb4:	0555      	lsls	r5, r2, #21
 8006bb6:	61d9      	str	r1, [r3, #28]
 8006bb8:	f04c 0c01 	orr.w	ip, ip, #1
 8006bbc:	d504      	bpl.n	8006bc8 <I2C_WaitOnSTOPFlagUntilTimeout+0x58>
 8006bbe:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8006bc2:	61d9      	str	r1, [r3, #28]
 8006bc4:	f04c 0c08 	orr.w	ip, ip, #8
 8006bc8:	0591      	lsls	r1, r2, #22
 8006bca:	d504      	bpl.n	8006bd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
 8006bcc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006bd0:	f04c 0c02 	orr.w	ip, ip, #2
 8006bd4:	61da      	str	r2, [r3, #28]
 8006bd6:	699a      	ldr	r2, [r3, #24]
 8006bd8:	0790      	lsls	r0, r2, #30
 8006bda:	bf44      	itt	mi
 8006bdc:	2200      	movmi	r2, #0
 8006bde:	629a      	strmi	r2, [r3, #40]	@ 0x28
 8006be0:	699a      	ldr	r2, [r3, #24]
 8006be2:	07d1      	lsls	r1, r2, #31
 8006be4:	d403      	bmi.n	8006bee <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8006be6:	699a      	ldr	r2, [r3, #24]
 8006be8:	f042 0201 	orr.w	r2, r2, #1
 8006bec:	619a      	str	r2, [r3, #24]
 8006bee:	685a      	ldr	r2, [r3, #4]
 8006bf0:	4836      	ldr	r0, [pc, #216]	@ (8006ccc <I2C_WaitOnSTOPFlagUntilTimeout+0x15c>)
 8006bf2:	4002      	ands	r2, r0
 8006bf4:	605a      	str	r2, [r3, #4]
 8006bf6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006bf8:	2120      	movs	r1, #32
 8006bfa:	2200      	movs	r2, #0
 8006bfc:	ea43 030c 	orr.w	r3, r3, ip
 8006c00:	6463      	str	r3, [r4, #68]	@ 0x44
 8006c02:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006c06:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006c0a:	2300      	movs	r3, #0
 8006c0c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006c10:	2001      	movs	r0, #1
 8006c12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006c16:	0550      	lsls	r0, r2, #21
 8006c18:	d4d1      	bmi.n	8006bbe <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
 8006c1a:	0592      	lsls	r2, r2, #22
 8006c1c:	d4d6      	bmi.n	8006bcc <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
 8006c1e:	2900      	cmp	r1, #0
 8006c20:	d1d9      	bne.n	8006bd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
 8006c22:	f7fe fd8f 	bl	8005744 <HAL_GetTick>
 8006c26:	1b80      	subs	r0, r0, r6
 8006c28:	42a8      	cmp	r0, r5
 8006c2a:	6823      	ldr	r3, [r4, #0]
 8006c2c:	d800      	bhi.n	8006c30 <I2C_WaitOnSTOPFlagUntilTimeout+0xc0>
 8006c2e:	b91d      	cbnz	r5, 8006c38 <I2C_WaitOnSTOPFlagUntilTimeout+0xc8>
 8006c30:	699a      	ldr	r2, [r3, #24]
 8006c32:	f012 0220 	ands.w	r2, r2, #32
 8006c36:	d007      	beq.n	8006c48 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
 8006c38:	699a      	ldr	r2, [r3, #24]
 8006c3a:	0692      	lsls	r2, r2, #26
 8006c3c:	d5a4      	bpl.n	8006b88 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
 8006c3e:	2000      	movs	r0, #0
 8006c40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006c44:	4661      	mov	r1, ip
 8006c46:	e7b0      	b.n	8006baa <I2C_WaitOnSTOPFlagUntilTimeout+0x3a>
 8006c48:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006c4a:	2120      	movs	r1, #32
 8006c4c:	430b      	orrs	r3, r1
 8006c4e:	6463      	str	r3, [r4, #68]	@ 0x44
 8006c50:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006c54:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006c58:	e7d7      	b.n	8006c0a <I2C_WaitOnSTOPFlagUntilTimeout+0x9a>
 8006c5a:	46b1      	mov	r9, r6
 8006c5c:	699a      	ldr	r2, [r3, #24]
 8006c5e:	0692      	lsls	r2, r2, #26
 8006c60:	d49c      	bmi.n	8006b9c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8006c62:	f7fe fd6f 	bl	8005744 <HAL_GetTick>
 8006c66:	eba0 0009 	sub.w	r0, r0, r9
 8006c6a:	4285      	cmp	r5, r0
 8006c6c:	d300      	bcc.n	8006c70 <I2C_WaitOnSTOPFlagUntilTimeout+0x100>
 8006c6e:	bb0d      	cbnz	r5, 8006cb4 <I2C_WaitOnSTOPFlagUntilTimeout+0x144>
 8006c70:	6823      	ldr	r3, [r4, #0]
 8006c72:	6858      	ldr	r0, [r3, #4]
 8006c74:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 8006c78:	6999      	ldr	r1, [r3, #24]
 8006c7a:	0409      	lsls	r1, r1, #16
 8006c7c:	b2d2      	uxtb	r2, r2
 8006c7e:	d50b      	bpl.n	8006c98 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006c80:	0441      	lsls	r1, r0, #17
 8006c82:	d409      	bmi.n	8006c98 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006c84:	2a20      	cmp	r2, #32
 8006c86:	d007      	beq.n	8006c98 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006c88:	685a      	ldr	r2, [r3, #4]
 8006c8a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006c8e:	605a      	str	r2, [r3, #4]
 8006c90:	f7fe fd58 	bl	8005744 <HAL_GetTick>
 8006c94:	6823      	ldr	r3, [r4, #0]
 8006c96:	4681      	mov	r9, r0
 8006c98:	699a      	ldr	r2, [r3, #24]
 8006c9a:	0690      	lsls	r0, r2, #26
 8006c9c:	d4de      	bmi.n	8006c5c <I2C_WaitOnSTOPFlagUntilTimeout+0xec>
 8006c9e:	f7fe fd51 	bl	8005744 <HAL_GetTick>
 8006ca2:	eba0 0009 	sub.w	r0, r0, r9
 8006ca6:	2819      	cmp	r0, #25
 8006ca8:	6823      	ldr	r3, [r4, #0]
 8006caa:	d9f5      	bls.n	8006c98 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006cac:	699a      	ldr	r2, [r3, #24]
 8006cae:	f04f 0c20 	mov.w	ip, #32
 8006cb2:	e777      	b.n	8006ba4 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
 8006cb4:	6823      	ldr	r3, [r4, #0]
 8006cb6:	699a      	ldr	r2, [r3, #24]
 8006cb8:	0690      	lsls	r0, r2, #26
 8006cba:	f53f af6f 	bmi.w	8006b9c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8006cbe:	f7fe fd41 	bl	8005744 <HAL_GetTick>
 8006cc2:	eba0 0009 	sub.w	r0, r0, r9
 8006cc6:	4285      	cmp	r5, r0
 8006cc8:	d2f4      	bcs.n	8006cb4 <I2C_WaitOnSTOPFlagUntilTimeout+0x144>
 8006cca:	e7d1      	b.n	8006c70 <I2C_WaitOnSTOPFlagUntilTimeout+0x100>
 8006ccc:	fe00e800 	.word	0xfe00e800

08006cd0 <HAL_I2C_Init>:
 8006cd0:	2800      	cmp	r0, #0
 8006cd2:	d054      	beq.n	8006d7e <HAL_I2C_Init+0xae>
 8006cd4:	b510      	push	{r4, lr}
 8006cd6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006cda:	4604      	mov	r4, r0
 8006cdc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006ce0:	2b00      	cmp	r3, #0
 8006ce2:	d047      	beq.n	8006d74 <HAL_I2C_Init+0xa4>
 8006ce4:	6823      	ldr	r3, [r4, #0]
 8006ce6:	2224      	movs	r2, #36	@ 0x24
 8006ce8:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
 8006cec:	6819      	ldr	r1, [r3, #0]
 8006cee:	6862      	ldr	r2, [r4, #4]
 8006cf0:	f021 0101 	bic.w	r1, r1, #1
 8006cf4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8006cf8:	6019      	str	r1, [r3, #0]
 8006cfa:	611a      	str	r2, [r3, #16]
 8006cfc:	689a      	ldr	r2, [r3, #8]
 8006cfe:	68e1      	ldr	r1, [r4, #12]
 8006d00:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006d04:	2901      	cmp	r1, #1
 8006d06:	609a      	str	r2, [r3, #8]
 8006d08:	68a2      	ldr	r2, [r4, #8]
 8006d0a:	d009      	beq.n	8006d20 <HAL_I2C_Init+0x50>
 8006d0c:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8006d10:	2902      	cmp	r1, #2
 8006d12:	609a      	str	r2, [r3, #8]
 8006d14:	d107      	bne.n	8006d26 <HAL_I2C_Init+0x56>
 8006d16:	685a      	ldr	r2, [r3, #4]
 8006d18:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006d1c:	605a      	str	r2, [r3, #4]
 8006d1e:	e006      	b.n	8006d2e <HAL_I2C_Init+0x5e>
 8006d20:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006d24:	609a      	str	r2, [r3, #8]
 8006d26:	685a      	ldr	r2, [r3, #4]
 8006d28:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006d2c:	605a      	str	r2, [r3, #4]
 8006d2e:	6859      	ldr	r1, [r3, #4]
 8006d30:	6922      	ldr	r2, [r4, #16]
 8006d32:	f041 7100 	orr.w	r1, r1, #33554432	@ 0x2000000
 8006d36:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8006d3a:	6059      	str	r1, [r3, #4]
 8006d3c:	6961      	ldr	r1, [r4, #20]
 8006d3e:	68d8      	ldr	r0, [r3, #12]
 8006d40:	430a      	orrs	r2, r1
 8006d42:	69a1      	ldr	r1, [r4, #24]
 8006d44:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
 8006d48:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006d4c:	69e1      	ldr	r1, [r4, #28]
 8006d4e:	60d8      	str	r0, [r3, #12]
 8006d50:	6a20      	ldr	r0, [r4, #32]
 8006d52:	60da      	str	r2, [r3, #12]
 8006d54:	4301      	orrs	r1, r0
 8006d56:	6019      	str	r1, [r3, #0]
 8006d58:	6819      	ldr	r1, [r3, #0]
 8006d5a:	f041 0101 	orr.w	r1, r1, #1
 8006d5e:	6019      	str	r1, [r3, #0]
 8006d60:	2200      	movs	r2, #0
 8006d62:	2320      	movs	r3, #32
 8006d64:	6462      	str	r2, [r4, #68]	@ 0x44
 8006d66:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006d6a:	6322      	str	r2, [r4, #48]	@ 0x30
 8006d6c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006d70:	4610      	mov	r0, r2
 8006d72:	bd10      	pop	{r4, pc}
 8006d74:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
 8006d78:	f7fa ffac 	bl	8001cd4 <HAL_I2C_MspInit>
 8006d7c:	e7b2      	b.n	8006ce4 <HAL_I2C_Init+0x14>
 8006d7e:	2001      	movs	r0, #1
 8006d80:	4770      	bx	lr
 8006d82:	bf00      	nop

08006d84 <HAL_I2C_Mem_Write>:
 8006d84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006d88:	4604      	mov	r4, r0
 8006d8a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
 8006d8e:	b082      	sub	sp, #8
 8006d90:	2820      	cmp	r0, #32
 8006d92:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8006d96:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8006d98:	f040 80a2 	bne.w	8006ee0 <HAL_I2C_Mem_Write+0x15c>
 8006d9c:	4698      	mov	r8, r3
 8006d9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	f000 8096 	beq.w	8006ed2 <HAL_I2C_Mem_Write+0x14e>
 8006da6:	f1ba 0f00 	cmp.w	sl, #0
 8006daa:	f000 8092 	beq.w	8006ed2 <HAL_I2C_Mem_Write+0x14e>
 8006dae:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006db2:	2b01      	cmp	r3, #1
 8006db4:	f000 8094 	beq.w	8006ee0 <HAL_I2C_Mem_Write+0x15c>
 8006db8:	2301      	movs	r3, #1
 8006dba:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006dbe:	460d      	mov	r5, r1
 8006dc0:	4691      	mov	r9, r2
 8006dc2:	f7fe fcbf 	bl	8005744 <HAL_GetTick>
 8006dc6:	4606      	mov	r6, r0
 8006dc8:	4601      	mov	r1, r0
 8006dca:	4620      	mov	r0, r4
 8006dcc:	f7ff fcbc 	bl	8006748 <I2C_WaitOnFlagUntilTimeout.constprop.0>
 8006dd0:	2800      	cmp	r0, #0
 8006dd2:	f040 8081 	bne.w	8006ed8 <HAL_I2C_Mem_Write+0x154>
 8006dd6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006dd8:	6263      	str	r3, [r4, #36]	@ 0x24
 8006dda:	2321      	movs	r3, #33	@ 0x21
 8006ddc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006de0:	6822      	ldr	r2, [r4, #0]
 8006de2:	4963      	ldr	r1, [pc, #396]	@ (8006f70 <HAL_I2C_Mem_Write+0x1ec>)
 8006de4:	6360      	str	r0, [r4, #52]	@ 0x34
 8006de6:	2340      	movs	r3, #64	@ 0x40
 8006de8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006dec:	6460      	str	r0, [r4, #68]	@ 0x44
 8006dee:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 8006df2:	6853      	ldr	r3, [r2, #4]
 8006df4:	400b      	ands	r3, r1
 8006df6:	fa5f f188 	uxtb.w	r1, r8
 8006dfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006dfe:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8006e02:	432b      	orrs	r3, r5
 8006e04:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006e08:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8006e0c:	6053      	str	r3, [r2, #4]
 8006e0e:	4639      	mov	r1, r7
 8006e10:	4632      	mov	r2, r6
 8006e12:	4620      	mov	r0, r4
 8006e14:	f7ff fd38 	bl	8006888 <I2C_WaitOnTXISFlagUntilTimeout>
 8006e18:	2800      	cmp	r0, #0
 8006e1a:	d165      	bne.n	8006ee8 <HAL_I2C_Mem_Write+0x164>
 8006e1c:	f1b8 0f01 	cmp.w	r8, #1
 8006e20:	6823      	ldr	r3, [r4, #0]
 8006e22:	d165      	bne.n	8006ef0 <HAL_I2C_Mem_Write+0x16c>
 8006e24:	fa5f f289 	uxtb.w	r2, r9
 8006e28:	629a      	str	r2, [r3, #40]	@ 0x28
 8006e2a:	9600      	str	r6, [sp, #0]
 8006e2c:	463b      	mov	r3, r7
 8006e2e:	2200      	movs	r2, #0
 8006e30:	2180      	movs	r1, #128	@ 0x80
 8006e32:	4620      	mov	r0, r4
 8006e34:	f7ff fdde 	bl	80069f4 <I2C_WaitOnFlagUntilTimeout>
 8006e38:	2800      	cmp	r0, #0
 8006e3a:	d155      	bne.n	8006ee8 <HAL_I2C_Mem_Write+0x164>
 8006e3c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e3e:	6822      	ldr	r2, [r4, #0]
 8006e40:	b29b      	uxth	r3, r3
 8006e42:	2bff      	cmp	r3, #255	@ 0xff
 8006e44:	d970      	bls.n	8006f28 <HAL_I2C_Mem_Write+0x1a4>
 8006e46:	6853      	ldr	r3, [r2, #4]
 8006e48:	494a      	ldr	r1, [pc, #296]	@ (8006f74 <HAL_I2C_Mem_Write+0x1f0>)
 8006e4a:	400b      	ands	r3, r1
 8006e4c:	432b      	orrs	r3, r5
 8006e4e:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006e52:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e56:	21ff      	movs	r1, #255	@ 0xff
 8006e58:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006e5a:	6053      	str	r3, [r2, #4]
 8006e5c:	e003      	b.n	8006e66 <HAL_I2C_Mem_Write+0xe2>
 8006e5e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e60:	b29b      	uxth	r3, r3
 8006e62:	2b00      	cmp	r3, #0
 8006e64:	d06e      	beq.n	8006f44 <HAL_I2C_Mem_Write+0x1c0>
 8006e66:	4632      	mov	r2, r6
 8006e68:	4639      	mov	r1, r7
 8006e6a:	4620      	mov	r0, r4
 8006e6c:	f7ff fd0c 	bl	8006888 <I2C_WaitOnTXISFlagUntilTimeout>
 8006e70:	2800      	cmp	r0, #0
 8006e72:	d131      	bne.n	8006ed8 <HAL_I2C_Mem_Write+0x154>
 8006e74:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006e76:	6823      	ldr	r3, [r4, #0]
 8006e78:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006e7c:	629a      	str	r2, [r3, #40]	@ 0x28
 8006e7e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e80:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8006e82:	6261      	str	r1, [r4, #36]	@ 0x24
 8006e84:	3b01      	subs	r3, #1
 8006e86:	b29b      	uxth	r3, r3
 8006e88:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8006e8a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e8c:	3a01      	subs	r2, #1
 8006e8e:	b292      	uxth	r2, r2
 8006e90:	b29b      	uxth	r3, r3
 8006e92:	8522      	strh	r2, [r4, #40]	@ 0x28
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d0e2      	beq.n	8006e5e <HAL_I2C_Mem_Write+0xda>
 8006e98:	2a00      	cmp	r2, #0
 8006e9a:	d1e0      	bne.n	8006e5e <HAL_I2C_Mem_Write+0xda>
 8006e9c:	2180      	movs	r1, #128	@ 0x80
 8006e9e:	9600      	str	r6, [sp, #0]
 8006ea0:	463b      	mov	r3, r7
 8006ea2:	4620      	mov	r0, r4
 8006ea4:	f7ff fda6 	bl	80069f4 <I2C_WaitOnFlagUntilTimeout>
 8006ea8:	21ff      	movs	r1, #255	@ 0xff
 8006eaa:	b9a8      	cbnz	r0, 8006ed8 <HAL_I2C_Mem_Write+0x154>
 8006eac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006eae:	f8df c0c4 	ldr.w	ip, [pc, #196]	@ 8006f74 <HAL_I2C_Mem_Write+0x1f0>
 8006eb2:	6822      	ldr	r2, [r4, #0]
 8006eb4:	b29b      	uxth	r3, r3
 8006eb6:	428b      	cmp	r3, r1
 8006eb8:	4660      	mov	r0, ip
 8006eba:	d928      	bls.n	8006f0e <HAL_I2C_Mem_Write+0x18a>
 8006ebc:	6853      	ldr	r3, [r2, #4]
 8006ebe:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006ec0:	ea03 030c 	and.w	r3, r3, ip
 8006ec4:	432b      	orrs	r3, r5
 8006ec6:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006eca:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006ece:	6053      	str	r3, [r2, #4]
 8006ed0:	e7c5      	b.n	8006e5e <HAL_I2C_Mem_Write+0xda>
 8006ed2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8006ed6:	6463      	str	r3, [r4, #68]	@ 0x44
 8006ed8:	2001      	movs	r0, #1
 8006eda:	b002      	add	sp, #8
 8006edc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ee0:	2002      	movs	r0, #2
 8006ee2:	b002      	add	sp, #8
 8006ee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ee8:	2300      	movs	r3, #0
 8006eea:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006eee:	e7f3      	b.n	8006ed8 <HAL_I2C_Mem_Write+0x154>
 8006ef0:	ea4f 2219 	mov.w	r2, r9, lsr #8
 8006ef4:	629a      	str	r2, [r3, #40]	@ 0x28
 8006ef6:	4639      	mov	r1, r7
 8006ef8:	4632      	mov	r2, r6
 8006efa:	4620      	mov	r0, r4
 8006efc:	f7ff fcc4 	bl	8006888 <I2C_WaitOnTXISFlagUntilTimeout>
 8006f00:	2800      	cmp	r0, #0
 8006f02:	d1f1      	bne.n	8006ee8 <HAL_I2C_Mem_Write+0x164>
 8006f04:	6823      	ldr	r3, [r4, #0]
 8006f06:	fa5f f289 	uxtb.w	r2, r9
 8006f0a:	629a      	str	r2, [r3, #40]	@ 0x28
 8006f0c:	e78d      	b.n	8006e2a <HAL_I2C_Mem_Write+0xa6>
 8006f0e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006f10:	6851      	ldr	r1, [r2, #4]
 8006f12:	b29b      	uxth	r3, r3
 8006f14:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006f16:	b2db      	uxtb	r3, r3
 8006f18:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006f1c:	4001      	ands	r1, r0
 8006f1e:	430b      	orrs	r3, r1
 8006f20:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006f24:	6053      	str	r3, [r2, #4]
 8006f26:	e79a      	b.n	8006e5e <HAL_I2C_Mem_Write+0xda>
 8006f28:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006f2a:	4812      	ldr	r0, [pc, #72]	@ (8006f74 <HAL_I2C_Mem_Write+0x1f0>)
 8006f2c:	6851      	ldr	r1, [r2, #4]
 8006f2e:	b29b      	uxth	r3, r3
 8006f30:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006f32:	b2db      	uxtb	r3, r3
 8006f34:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006f38:	4001      	ands	r1, r0
 8006f3a:	430b      	orrs	r3, r1
 8006f3c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006f40:	6053      	str	r3, [r2, #4]
 8006f42:	e790      	b.n	8006e66 <HAL_I2C_Mem_Write+0xe2>
 8006f44:	4632      	mov	r2, r6
 8006f46:	4639      	mov	r1, r7
 8006f48:	4620      	mov	r0, r4
 8006f4a:	f7ff fe11 	bl	8006b70 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006f4e:	2800      	cmp	r0, #0
 8006f50:	d1c2      	bne.n	8006ed8 <HAL_I2C_Mem_Write+0x154>
 8006f52:	6823      	ldr	r3, [r4, #0]
 8006f54:	4d08      	ldr	r5, [pc, #32]	@ (8006f78 <HAL_I2C_Mem_Write+0x1f4>)
 8006f56:	2120      	movs	r1, #32
 8006f58:	61d9      	str	r1, [r3, #28]
 8006f5a:	685a      	ldr	r2, [r3, #4]
 8006f5c:	402a      	ands	r2, r5
 8006f5e:	605a      	str	r2, [r3, #4]
 8006f60:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006f64:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
 8006f68:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 8006f6c:	e7b5      	b.n	8006eda <HAL_I2C_Mem_Write+0x156>
 8006f6e:	bf00      	nop
 8006f70:	fc009800 	.word	0xfc009800
 8006f74:	fc009c00 	.word	0xfc009c00
 8006f78:	fe00e800 	.word	0xfe00e800

08006f7c <HAL_I2C_Mem_Read>:
 8006f7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006f80:	4604      	mov	r4, r0
 8006f82:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
 8006f86:	b082      	sub	sp, #8
 8006f88:	2820      	cmp	r0, #32
 8006f8a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8006f8e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8006f90:	f040 80a3 	bne.w	80070da <HAL_I2C_Mem_Read+0x15e>
 8006f94:	4698      	mov	r8, r3
 8006f96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006f98:	2b00      	cmp	r3, #0
 8006f9a:	f000 8097 	beq.w	80070cc <HAL_I2C_Mem_Read+0x150>
 8006f9e:	f1ba 0f00 	cmp.w	sl, #0
 8006fa2:	f000 8093 	beq.w	80070cc <HAL_I2C_Mem_Read+0x150>
 8006fa6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006faa:	2b01      	cmp	r3, #1
 8006fac:	f000 8095 	beq.w	80070da <HAL_I2C_Mem_Read+0x15e>
 8006fb0:	2301      	movs	r3, #1
 8006fb2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006fb6:	460d      	mov	r5, r1
 8006fb8:	4691      	mov	r9, r2
 8006fba:	f7fe fbc3 	bl	8005744 <HAL_GetTick>
 8006fbe:	4606      	mov	r6, r0
 8006fc0:	4601      	mov	r1, r0
 8006fc2:	4620      	mov	r0, r4
 8006fc4:	f7ff fbc0 	bl	8006748 <I2C_WaitOnFlagUntilTimeout.constprop.0>
 8006fc8:	2800      	cmp	r0, #0
 8006fca:	f040 8082 	bne.w	80070d2 <HAL_I2C_Mem_Read+0x156>
 8006fce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006fd0:	6263      	str	r3, [r4, #36]	@ 0x24
 8006fd2:	2322      	movs	r3, #34	@ 0x22
 8006fd4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006fd8:	6822      	ldr	r2, [r4, #0]
 8006fda:	4964      	ldr	r1, [pc, #400]	@ (800716c <HAL_I2C_Mem_Read+0x1f0>)
 8006fdc:	6360      	str	r0, [r4, #52]	@ 0x34
 8006fde:	2340      	movs	r3, #64	@ 0x40
 8006fe0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006fe4:	6460      	str	r0, [r4, #68]	@ 0x44
 8006fe6:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 8006fea:	6853      	ldr	r3, [r2, #4]
 8006fec:	400b      	ands	r3, r1
 8006fee:	fa5f f188 	uxtb.w	r1, r8
 8006ff2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006ff6:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8006ffa:	432b      	orrs	r3, r5
 8006ffc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8007000:	6053      	str	r3, [r2, #4]
 8007002:	4639      	mov	r1, r7
 8007004:	4632      	mov	r2, r6
 8007006:	4620      	mov	r0, r4
 8007008:	f7ff fc3e 	bl	8006888 <I2C_WaitOnTXISFlagUntilTimeout>
 800700c:	2800      	cmp	r0, #0
 800700e:	d168      	bne.n	80070e2 <HAL_I2C_Mem_Read+0x166>
 8007010:	f1b8 0f01 	cmp.w	r8, #1
 8007014:	6823      	ldr	r3, [r4, #0]
 8007016:	d168      	bne.n	80070ea <HAL_I2C_Mem_Read+0x16e>
 8007018:	fa5f f289 	uxtb.w	r2, r9
 800701c:	629a      	str	r2, [r3, #40]	@ 0x28
 800701e:	9600      	str	r6, [sp, #0]
 8007020:	463b      	mov	r3, r7
 8007022:	2200      	movs	r2, #0
 8007024:	2140      	movs	r1, #64	@ 0x40
 8007026:	4620      	mov	r0, r4
 8007028:	f7ff fce4 	bl	80069f4 <I2C_WaitOnFlagUntilTimeout>
 800702c:	2800      	cmp	r0, #0
 800702e:	d158      	bne.n	80070e2 <HAL_I2C_Mem_Read+0x166>
 8007030:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007032:	6822      	ldr	r2, [r4, #0]
 8007034:	b29b      	uxth	r3, r3
 8007036:	2bff      	cmp	r3, #255	@ 0xff
 8007038:	d973      	bls.n	8007122 <HAL_I2C_Mem_Read+0x1a6>
 800703a:	6853      	ldr	r3, [r2, #4]
 800703c:	494b      	ldr	r1, [pc, #300]	@ (800716c <HAL_I2C_Mem_Read+0x1f0>)
 800703e:	400b      	ands	r3, r1
 8007040:	432b      	orrs	r3, r5
 8007042:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8007046:	f443 3392 	orr.w	r3, r3, #74752	@ 0x12400
 800704a:	21ff      	movs	r1, #255	@ 0xff
 800704c:	8521      	strh	r1, [r4, #40]	@ 0x28
 800704e:	6053      	str	r3, [r2, #4]
 8007050:	e003      	b.n	800705a <HAL_I2C_Mem_Read+0xde>
 8007052:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007054:	b29b      	uxth	r3, r3
 8007056:	2b00      	cmp	r3, #0
 8007058:	d073      	beq.n	8007142 <HAL_I2C_Mem_Read+0x1c6>
 800705a:	9600      	str	r6, [sp, #0]
 800705c:	463b      	mov	r3, r7
 800705e:	2200      	movs	r2, #0
 8007060:	2104      	movs	r1, #4
 8007062:	4620      	mov	r0, r4
 8007064:	f7ff fcc6 	bl	80069f4 <I2C_WaitOnFlagUntilTimeout>
 8007068:	2800      	cmp	r0, #0
 800706a:	d132      	bne.n	80070d2 <HAL_I2C_Mem_Read+0x156>
 800706c:	6822      	ldr	r2, [r4, #0]
 800706e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007070:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8007072:	701a      	strb	r2, [r3, #0]
 8007074:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007076:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8007078:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800707a:	3b01      	subs	r3, #1
 800707c:	b29b      	uxth	r3, r3
 800707e:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8007080:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007082:	3a01      	subs	r2, #1
 8007084:	b292      	uxth	r2, r2
 8007086:	3101      	adds	r1, #1
 8007088:	b29b      	uxth	r3, r3
 800708a:	6261      	str	r1, [r4, #36]	@ 0x24
 800708c:	8522      	strh	r2, [r4, #40]	@ 0x28
 800708e:	2b00      	cmp	r3, #0
 8007090:	d0df      	beq.n	8007052 <HAL_I2C_Mem_Read+0xd6>
 8007092:	2a00      	cmp	r2, #0
 8007094:	d1dd      	bne.n	8007052 <HAL_I2C_Mem_Read+0xd6>
 8007096:	2180      	movs	r1, #128	@ 0x80
 8007098:	9600      	str	r6, [sp, #0]
 800709a:	463b      	mov	r3, r7
 800709c:	4620      	mov	r0, r4
 800709e:	f7ff fca9 	bl	80069f4 <I2C_WaitOnFlagUntilTimeout>
 80070a2:	21ff      	movs	r1, #255	@ 0xff
 80070a4:	b9a8      	cbnz	r0, 80070d2 <HAL_I2C_Mem_Read+0x156>
 80070a6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80070a8:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 8007174 <HAL_I2C_Mem_Read+0x1f8>
 80070ac:	6822      	ldr	r2, [r4, #0]
 80070ae:	b29b      	uxth	r3, r3
 80070b0:	428b      	cmp	r3, r1
 80070b2:	4660      	mov	r0, ip
 80070b4:	d928      	bls.n	8007108 <HAL_I2C_Mem_Read+0x18c>
 80070b6:	6853      	ldr	r3, [r2, #4]
 80070b8:	8521      	strh	r1, [r4, #40]	@ 0x28
 80070ba:	ea03 030c 	and.w	r3, r3, ip
 80070be:	432b      	orrs	r3, r5
 80070c0:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 80070c4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80070c8:	6053      	str	r3, [r2, #4]
 80070ca:	e7c2      	b.n	8007052 <HAL_I2C_Mem_Read+0xd6>
 80070cc:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80070d0:	6463      	str	r3, [r4, #68]	@ 0x44
 80070d2:	2001      	movs	r0, #1
 80070d4:	b002      	add	sp, #8
 80070d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070da:	2002      	movs	r0, #2
 80070dc:	b002      	add	sp, #8
 80070de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070e2:	2300      	movs	r3, #0
 80070e4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80070e8:	e7f3      	b.n	80070d2 <HAL_I2C_Mem_Read+0x156>
 80070ea:	ea4f 2219 	mov.w	r2, r9, lsr #8
 80070ee:	629a      	str	r2, [r3, #40]	@ 0x28
 80070f0:	4639      	mov	r1, r7
 80070f2:	4632      	mov	r2, r6
 80070f4:	4620      	mov	r0, r4
 80070f6:	f7ff fbc7 	bl	8006888 <I2C_WaitOnTXISFlagUntilTimeout>
 80070fa:	2800      	cmp	r0, #0
 80070fc:	d1f1      	bne.n	80070e2 <HAL_I2C_Mem_Read+0x166>
 80070fe:	6823      	ldr	r3, [r4, #0]
 8007100:	fa5f f289 	uxtb.w	r2, r9
 8007104:	629a      	str	r2, [r3, #40]	@ 0x28
 8007106:	e78a      	b.n	800701e <HAL_I2C_Mem_Read+0xa2>
 8007108:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800710a:	6851      	ldr	r1, [r2, #4]
 800710c:	b29b      	uxth	r3, r3
 800710e:	8523      	strh	r3, [r4, #40]	@ 0x28
 8007110:	b2db      	uxtb	r3, r3
 8007112:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007116:	4001      	ands	r1, r0
 8007118:	430b      	orrs	r3, r1
 800711a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800711e:	6053      	str	r3, [r2, #4]
 8007120:	e797      	b.n	8007052 <HAL_I2C_Mem_Read+0xd6>
 8007122:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007124:	4811      	ldr	r0, [pc, #68]	@ (800716c <HAL_I2C_Mem_Read+0x1f0>)
 8007126:	6851      	ldr	r1, [r2, #4]
 8007128:	b29b      	uxth	r3, r3
 800712a:	8523      	strh	r3, [r4, #40]	@ 0x28
 800712c:	b2db      	uxtb	r3, r3
 800712e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007132:	4001      	ands	r1, r0
 8007134:	430b      	orrs	r3, r1
 8007136:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800713a:	f443 5310 	orr.w	r3, r3, #9216	@ 0x2400
 800713e:	6053      	str	r3, [r2, #4]
 8007140:	e78b      	b.n	800705a <HAL_I2C_Mem_Read+0xde>
 8007142:	4632      	mov	r2, r6
 8007144:	4639      	mov	r1, r7
 8007146:	4620      	mov	r0, r4
 8007148:	f7ff fd12 	bl	8006b70 <I2C_WaitOnSTOPFlagUntilTimeout>
 800714c:	2800      	cmp	r0, #0
 800714e:	d1c0      	bne.n	80070d2 <HAL_I2C_Mem_Read+0x156>
 8007150:	6823      	ldr	r3, [r4, #0]
 8007152:	4d07      	ldr	r5, [pc, #28]	@ (8007170 <HAL_I2C_Mem_Read+0x1f4>)
 8007154:	2120      	movs	r1, #32
 8007156:	61d9      	str	r1, [r3, #28]
 8007158:	685a      	ldr	r2, [r3, #4]
 800715a:	402a      	ands	r2, r5
 800715c:	605a      	str	r2, [r3, #4]
 800715e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8007162:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
 8007166:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 800716a:	e7b3      	b.n	80070d4 <HAL_I2C_Mem_Read+0x158>
 800716c:	fc009800 	.word	0xfc009800
 8007170:	fe00e800 	.word	0xfe00e800
 8007174:	fc009c00 	.word	0xfc009c00

08007178 <HAL_I2CEx_ConfigAnalogFilter>:
 8007178:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
 800717c:	2a20      	cmp	r2, #32
 800717e:	d123      	bne.n	80071c8 <HAL_I2CEx_ConfigAnalogFilter+0x50>
 8007180:	fa5f fc82 	uxtb.w	ip, r2
 8007184:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8007188:	2a01      	cmp	r2, #1
 800718a:	4603      	mov	r3, r0
 800718c:	d01c      	beq.n	80071c8 <HAL_I2CEx_ConfigAnalogFilter+0x50>
 800718e:	6802      	ldr	r2, [r0, #0]
 8007190:	2024      	movs	r0, #36	@ 0x24
 8007192:	b500      	push	{lr}
 8007194:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
 8007198:	6810      	ldr	r0, [r2, #0]
 800719a:	f020 0001 	bic.w	r0, r0, #1
 800719e:	6010      	str	r0, [r2, #0]
 80071a0:	6810      	ldr	r0, [r2, #0]
 80071a2:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 80071a6:	6010      	str	r0, [r2, #0]
 80071a8:	6810      	ldr	r0, [r2, #0]
 80071aa:	4301      	orrs	r1, r0
 80071ac:	6011      	str	r1, [r2, #0]
 80071ae:	6811      	ldr	r1, [r2, #0]
 80071b0:	f04f 0e00 	mov.w	lr, #0
 80071b4:	f041 0101 	orr.w	r1, r1, #1
 80071b8:	6011      	str	r1, [r2, #0]
 80071ba:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
 80071be:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
 80071c2:	4670      	mov	r0, lr
 80071c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80071c8:	2002      	movs	r0, #2
 80071ca:	4770      	bx	lr

080071cc <HAL_I2CEx_ConfigDigitalFilter>:
 80071cc:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
 80071d0:	2a20      	cmp	r2, #32
 80071d2:	d122      	bne.n	800721a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
 80071d4:	b500      	push	{lr}
 80071d6:	fa5f fe82 	uxtb.w	lr, r2
 80071da:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80071de:	2a01      	cmp	r2, #1
 80071e0:	4603      	mov	r3, r0
 80071e2:	d01c      	beq.n	800721e <HAL_I2CEx_ConfigDigitalFilter+0x52>
 80071e4:	6802      	ldr	r2, [r0, #0]
 80071e6:	2024      	movs	r0, #36	@ 0x24
 80071e8:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
 80071ec:	6810      	ldr	r0, [r2, #0]
 80071ee:	f020 0001 	bic.w	r0, r0, #1
 80071f2:	6010      	str	r0, [r2, #0]
 80071f4:	6810      	ldr	r0, [r2, #0]
 80071f6:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 80071fa:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
 80071fe:	6011      	str	r1, [r2, #0]
 8007200:	6811      	ldr	r1, [r2, #0]
 8007202:	f04f 0c00 	mov.w	ip, #0
 8007206:	f041 0101 	orr.w	r1, r1, #1
 800720a:	6011      	str	r1, [r2, #0]
 800720c:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
 8007210:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
 8007214:	4660      	mov	r0, ip
 8007216:	f85d fb04 	ldr.w	pc, [sp], #4
 800721a:	2002      	movs	r0, #2
 800721c:	4770      	bx	lr
 800721e:	2002      	movs	r0, #2
 8007220:	f85d fb04 	ldr.w	pc, [sp], #4

08007224 <HAL_I2CEx_EnableFastModePlus>:
 8007224:	4a02      	ldr	r2, [pc, #8]	@ (8007230 <HAL_I2CEx_EnableFastModePlus+0xc>)
 8007226:	6853      	ldr	r3, [r2, #4]
 8007228:	4303      	orrs	r3, r0
 800722a:	6053      	str	r3, [r2, #4]
 800722c:	4770      	bx	lr
 800722e:	bf00      	nop
 8007230:	40010000 	.word	0x40010000

08007234 <HAL_IPCC_TxCallback>:
 8007234:	4770      	bx	lr
 8007236:	bf00      	nop

08007238 <HAL_IPCC_RxCallback>:
 8007238:	4770      	bx	lr
 800723a:	bf00      	nop

0800723c <HAL_IPCC_Init>:
 800723c:	b330      	cbz	r0, 800728c <HAL_IPCC_Init+0x50>
 800723e:	b510      	push	{r4, lr}
 8007240:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8007244:	4604      	mov	r4, r0
 8007246:	b1f3      	cbz	r3, 8007286 <HAL_IPCC_Init+0x4a>
 8007248:	4b11      	ldr	r3, [pc, #68]	@ (8007290 <HAL_IPCC_Init+0x54>)
 800724a:	2000      	movs	r0, #0
 800724c:	f04f 113f 	mov.w	r1, #4128831	@ 0x3f003f
 8007250:	223f      	movs	r2, #63	@ 0x3f
 8007252:	6018      	str	r0, [r3, #0]
 8007254:	6059      	str	r1, [r3, #4]
 8007256:	609a      	str	r2, [r3, #8]
 8007258:	6819      	ldr	r1, [r3, #0]
 800725a:	4a0e      	ldr	r2, [pc, #56]	@ (8007294 <HAL_IPCC_Init+0x58>)
 800725c:	f041 1101 	orr.w	r1, r1, #65537	@ 0x10001
 8007260:	6019      	str	r1, [r3, #0]
 8007262:	4b0d      	ldr	r3, [pc, #52]	@ (8007298 <HAL_IPCC_Init+0x5c>)
 8007264:	6360      	str	r0, [r4, #52]	@ 0x34
 8007266:	2101      	movs	r1, #1
 8007268:	f884 1038 	strb.w	r1, [r4, #56]	@ 0x38
 800726c:	e9c4 2201 	strd	r2, r2, [r4, #4]
 8007270:	e9c4 3307 	strd	r3, r3, [r4, #28]
 8007274:	e9c4 2203 	strd	r2, r2, [r4, #12]
 8007278:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
 800727c:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8007280:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 8007284:	bd10      	pop	{r4, pc}
 8007286:	f7fa fdc9 	bl	8001e1c <HAL_IPCC_MspInit>
 800728a:	e7dd      	b.n	8007248 <HAL_IPCC_Init+0xc>
 800728c:	2001      	movs	r0, #1
 800728e:	4770      	bx	lr
 8007290:	58000c00 	.word	0x58000c00
 8007294:	08007239 	.word	0x08007239
 8007298:	08007235 	.word	0x08007235

0800729c <HAL_IPCC_TX_IRQHandler>:
 800729c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072a0:	4f13      	ldr	r7, [pc, #76]	@ (80072f0 <HAL_IPCC_TX_IRQHandler+0x54>)
 80072a2:	687e      	ldr	r6, [r7, #4]
 80072a4:	68fb      	ldr	r3, [r7, #12]
 80072a6:	ea46 4603 	orr.w	r6, r6, r3, lsl #16
 80072aa:	43f6      	mvns	r6, r6
 80072ac:	f416 167c 	ands.w	r6, r6, #4128768	@ 0x3f0000
 80072b0:	d01c      	beq.n	80072ec <HAL_IPCC_TX_IRQHandler+0x50>
 80072b2:	4682      	mov	sl, r0
 80072b4:	2500      	movs	r5, #0
 80072b6:	f100 091c 	add.w	r9, r0, #28
 80072ba:	f04f 0801 	mov.w	r8, #1
 80072be:	e000      	b.n	80072c2 <HAL_IPCC_TX_IRQHandler+0x26>
 80072c0:	3501      	adds	r5, #1
 80072c2:	f005 040f 	and.w	r4, r5, #15
 80072c6:	3410      	adds	r4, #16
 80072c8:	fa08 f404 	lsl.w	r4, r8, r4
 80072cc:	4234      	tst	r4, r6
 80072ce:	d0f7      	beq.n	80072c0 <HAL_IPCC_TX_IRQHandler+0x24>
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	f859 b025 	ldr.w	fp, [r9, r5, lsl #2]
 80072d6:	4323      	orrs	r3, r4
 80072d8:	2200      	movs	r2, #0
 80072da:	4629      	mov	r1, r5
 80072dc:	4650      	mov	r0, sl
 80072de:	607b      	str	r3, [r7, #4]
 80072e0:	f1bb 0f00 	cmp.w	fp, #0
 80072e4:	d000      	beq.n	80072e8 <HAL_IPCC_TX_IRQHandler+0x4c>
 80072e6:	47d8      	blx	fp
 80072e8:	43a6      	bics	r6, r4
 80072ea:	d1e9      	bne.n	80072c0 <HAL_IPCC_TX_IRQHandler+0x24>
 80072ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072f0:	58000c00 	.word	0x58000c00

080072f4 <HAL_IPCC_RX_IRQHandler>:
 80072f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80072f8:	f8df 804c 	ldr.w	r8, [pc, #76]	@ 8007348 <HAL_IPCC_RX_IRQHandler+0x54>
 80072fc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8007300:	f8d8 601c 	ldr.w	r6, [r8, #28]
 8007304:	ea26 0603 	bic.w	r6, r6, r3
 8007308:	f016 063f 	ands.w	r6, r6, #63	@ 0x3f
 800730c:	d01a      	beq.n	8007344 <HAL_IPCC_RX_IRQHandler+0x50>
 800730e:	2501      	movs	r5, #1
 8007310:	4607      	mov	r7, r0
 8007312:	46a9      	mov	r9, r5
 8007314:	e000      	b.n	8007318 <HAL_IPCC_RX_IRQHandler+0x24>
 8007316:	3501      	adds	r5, #1
 8007318:	1e69      	subs	r1, r5, #1
 800731a:	f001 040f 	and.w	r4, r1, #15
 800731e:	fa09 f404 	lsl.w	r4, r9, r4
 8007322:	4234      	tst	r4, r6
 8007324:	d0f7      	beq.n	8007316 <HAL_IPCC_RX_IRQHandler+0x22>
 8007326:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800732a:	f857 a025 	ldr.w	sl, [r7, r5, lsl #2]
 800732e:	4323      	orrs	r3, r4
 8007330:	2201      	movs	r2, #1
 8007332:	4638      	mov	r0, r7
 8007334:	f8c8 3004 	str.w	r3, [r8, #4]
 8007338:	f1ba 0f00 	cmp.w	sl, #0
 800733c:	d000      	beq.n	8007340 <HAL_IPCC_RX_IRQHandler+0x4c>
 800733e:	47d0      	blx	sl
 8007340:	43a6      	bics	r6, r4
 8007342:	d1e8      	bne.n	8007316 <HAL_IPCC_RX_IRQHandler+0x22>
 8007344:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007348:	58000c00 	.word	0x58000c00

0800734c <HAL_PCD_Init>:
 800734c:	2800      	cmp	r0, #0
 800734e:	f000 80d7 	beq.w	8007500 <HAL_PCD_Init+0x1b4>
 8007352:	b510      	push	{r4, lr}
 8007354:	f890 3291 	ldrb.w	r3, [r0, #657]	@ 0x291
 8007358:	4604      	mov	r4, r0
 800735a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800735e:	2b00      	cmp	r3, #0
 8007360:	f000 80c9 	beq.w	80074f6 <HAL_PCD_Init+0x1aa>
 8007364:	2303      	movs	r3, #3
 8007366:	6820      	ldr	r0, [r4, #0]
 8007368:	f884 3291 	strb.w	r3, [r4, #657]	@ 0x291
 800736c:	f004 fc1c 	bl	800bba8 <USB_DisableGlobalInt>
 8007370:	7922      	ldrb	r2, [r4, #4]
 8007372:	2a00      	cmp	r2, #0
 8007374:	f000 80ae 	beq.w	80074d4 <HAL_PCD_Init+0x188>
 8007378:	2300      	movs	r3, #0
 800737a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800737e:	2a01      	cmp	r2, #1
 8007380:	e9c4 3308 	strd	r3, r3, [r4, #32]
 8007384:	8221      	strh	r1, [r4, #16]
 8007386:	74e3      	strb	r3, [r4, #19]
 8007388:	62a3      	str	r3, [r4, #40]	@ 0x28
 800738a:	f000 80c0 	beq.w	800750e <HAL_PCD_Init+0x1c2>
 800738e:	f240 1101 	movw	r1, #257	@ 0x101
 8007392:	2a02      	cmp	r2, #2
 8007394:	e9c4 3312 	strd	r3, r3, [r4, #72]	@ 0x48
 8007398:	8721      	strh	r1, [r4, #56]	@ 0x38
 800739a:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
 800739e:	6523      	str	r3, [r4, #80]	@ 0x50
 80073a0:	d044      	beq.n	800742c <HAL_PCD_Init+0xe0>
 80073a2:	f44f 7181 	mov.w	r1, #258	@ 0x102
 80073a6:	2a03      	cmp	r2, #3
 80073a8:	e9c4 331c 	strd	r3, r3, [r4, #112]	@ 0x70
 80073ac:	f8a4 1060 	strh.w	r1, [r4, #96]	@ 0x60
 80073b0:	f884 3063 	strb.w	r3, [r4, #99]	@ 0x63
 80073b4:	67a3      	str	r3, [r4, #120]	@ 0x78
 80073b6:	d039      	beq.n	800742c <HAL_PCD_Init+0xe0>
 80073b8:	f240 1103 	movw	r1, #259	@ 0x103
 80073bc:	2a04      	cmp	r2, #4
 80073be:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
 80073c2:	f8a4 1088 	strh.w	r1, [r4, #136]	@ 0x88
 80073c6:	f884 308b 	strb.w	r3, [r4, #139]	@ 0x8b
 80073ca:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 80073ce:	d02d      	beq.n	800742c <HAL_PCD_Init+0xe0>
 80073d0:	f44f 7182 	mov.w	r1, #260	@ 0x104
 80073d4:	2a05      	cmp	r2, #5
 80073d6:	e9c4 3330 	strd	r3, r3, [r4, #192]	@ 0xc0
 80073da:	f8a4 10b0 	strh.w	r1, [r4, #176]	@ 0xb0
 80073de:	f884 30b3 	strb.w	r3, [r4, #179]	@ 0xb3
 80073e2:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 80073e6:	d021      	beq.n	800742c <HAL_PCD_Init+0xe0>
 80073e8:	f240 1105 	movw	r1, #261	@ 0x105
 80073ec:	2a06      	cmp	r2, #6
 80073ee:	e9c4 333a 	strd	r3, r3, [r4, #232]	@ 0xe8
 80073f2:	f8a4 10d8 	strh.w	r1, [r4, #216]	@ 0xd8
 80073f6:	f884 30db 	strb.w	r3, [r4, #219]	@ 0xdb
 80073fa:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 80073fe:	d015      	beq.n	800742c <HAL_PCD_Init+0xe0>
 8007400:	f44f 7183 	mov.w	r1, #262	@ 0x106
 8007404:	2a07      	cmp	r2, #7
 8007406:	e9c4 3344 	strd	r3, r3, [r4, #272]	@ 0x110
 800740a:	f8a4 1100 	strh.w	r1, [r4, #256]	@ 0x100
 800740e:	f884 3103 	strb.w	r3, [r4, #259]	@ 0x103
 8007412:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 8007416:	d009      	beq.n	800742c <HAL_PCD_Init+0xe0>
 8007418:	e9c4 334e 	strd	r3, r3, [r4, #312]	@ 0x138
 800741c:	f240 1107 	movw	r1, #263	@ 0x107
 8007420:	f8a4 1128 	strh.w	r1, [r4, #296]	@ 0x128
 8007424:	f884 312b 	strb.w	r3, [r4, #299]	@ 0x12b
 8007428:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 800742c:	2300      	movs	r3, #0
 800742e:	2101      	movs	r1, #1
 8007430:	2a02      	cmp	r2, #2
 8007432:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
 8007436:	e9c4 3362 	strd	r3, r3, [r4, #392]	@ 0x188
 800743a:	f8a4 3150 	strh.w	r3, [r4, #336]	@ 0x150
 800743e:	f884 3153 	strb.w	r3, [r4, #339]	@ 0x153
 8007442:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
 8007446:	f8a4 1178 	strh.w	r1, [r4, #376]	@ 0x178
 800744a:	f884 317b 	strb.w	r3, [r4, #379]	@ 0x17b
 800744e:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
 8007452:	d03f      	beq.n	80074d4 <HAL_PCD_Init+0x188>
 8007454:	2102      	movs	r1, #2
 8007456:	2a03      	cmp	r2, #3
 8007458:	e9c4 336c 	strd	r3, r3, [r4, #432]	@ 0x1b0
 800745c:	f8a4 11a0 	strh.w	r1, [r4, #416]	@ 0x1a0
 8007460:	f884 31a3 	strb.w	r3, [r4, #419]	@ 0x1a3
 8007464:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
 8007468:	d034      	beq.n	80074d4 <HAL_PCD_Init+0x188>
 800746a:	2103      	movs	r1, #3
 800746c:	2a04      	cmp	r2, #4
 800746e:	e9c4 3376 	strd	r3, r3, [r4, #472]	@ 0x1d8
 8007472:	f8a4 11c8 	strh.w	r1, [r4, #456]	@ 0x1c8
 8007476:	f884 31cb 	strb.w	r3, [r4, #459]	@ 0x1cb
 800747a:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
 800747e:	d029      	beq.n	80074d4 <HAL_PCD_Init+0x188>
 8007480:	2104      	movs	r1, #4
 8007482:	2a05      	cmp	r2, #5
 8007484:	e9c4 3380 	strd	r3, r3, [r4, #512]	@ 0x200
 8007488:	f8a4 11f0 	strh.w	r1, [r4, #496]	@ 0x1f0
 800748c:	f884 31f3 	strb.w	r3, [r4, #499]	@ 0x1f3
 8007490:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
 8007494:	d01e      	beq.n	80074d4 <HAL_PCD_Init+0x188>
 8007496:	2105      	movs	r1, #5
 8007498:	2a06      	cmp	r2, #6
 800749a:	e9c4 338a 	strd	r3, r3, [r4, #552]	@ 0x228
 800749e:	f8a4 1218 	strh.w	r1, [r4, #536]	@ 0x218
 80074a2:	f884 321b 	strb.w	r3, [r4, #539]	@ 0x21b
 80074a6:	f8c4 3230 	str.w	r3, [r4, #560]	@ 0x230
 80074aa:	d013      	beq.n	80074d4 <HAL_PCD_Init+0x188>
 80074ac:	2106      	movs	r1, #6
 80074ae:	2a07      	cmp	r2, #7
 80074b0:	e9c4 3394 	strd	r3, r3, [r4, #592]	@ 0x250
 80074b4:	f8a4 1240 	strh.w	r1, [r4, #576]	@ 0x240
 80074b8:	f884 3243 	strb.w	r3, [r4, #579]	@ 0x243
 80074bc:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
 80074c0:	d008      	beq.n	80074d4 <HAL_PCD_Init+0x188>
 80074c2:	e9c4 339e 	strd	r3, r3, [r4, #632]	@ 0x278
 80074c6:	2207      	movs	r2, #7
 80074c8:	f8a4 2268 	strh.w	r2, [r4, #616]	@ 0x268
 80074cc:	f884 326b 	strb.w	r3, [r4, #619]	@ 0x26b
 80074d0:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
 80074d4:	4623      	mov	r3, r4
 80074d6:	f853 0b04 	ldr.w	r0, [r3], #4
 80074da:	e893 0006 	ldmia.w	r3, {r1, r2}
 80074de:	f004 fb6d 	bl	800bbbc <USB_DevInit>
 80074e2:	7aa3      	ldrb	r3, [r4, #10]
 80074e4:	2201      	movs	r2, #1
 80074e6:	2100      	movs	r1, #0
 80074e8:	4293      	cmp	r3, r2
 80074ea:	7321      	strb	r1, [r4, #12]
 80074ec:	f884 2291 	strb.w	r2, [r4, #657]	@ 0x291
 80074f0:	d008      	beq.n	8007504 <HAL_PCD_Init+0x1b8>
 80074f2:	2000      	movs	r0, #0
 80074f4:	bd10      	pop	{r4, pc}
 80074f6:	f880 2290 	strb.w	r2, [r0, #656]	@ 0x290
 80074fa:	f007 fdf3 	bl	800f0e4 <HAL_PCD_MspInit>
 80074fe:	e731      	b.n	8007364 <HAL_PCD_Init+0x18>
 8007500:	2001      	movs	r0, #1
 8007502:	4770      	bx	lr
 8007504:	4620      	mov	r0, r4
 8007506:	f000 ff1b 	bl	8008340 <HAL_PCDEx_ActivateLPM>
 800750a:	2000      	movs	r0, #0
 800750c:	bd10      	pop	{r4, pc}
 800750e:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
 8007512:	f8a4 3150 	strh.w	r3, [r4, #336]	@ 0x150
 8007516:	f884 3153 	strb.w	r3, [r4, #339]	@ 0x153
 800751a:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
 800751e:	e7d9      	b.n	80074d4 <HAL_PCD_Init+0x188>

08007520 <HAL_PCD_Start>:
 8007520:	f890 3290 	ldrb.w	r3, [r0, #656]	@ 0x290
 8007524:	2b01      	cmp	r3, #1
 8007526:	d00f      	beq.n	8007548 <HAL_PCD_Start+0x28>
 8007528:	b510      	push	{r4, lr}
 800752a:	4604      	mov	r4, r0
 800752c:	2301      	movs	r3, #1
 800752e:	6800      	ldr	r0, [r0, #0]
 8007530:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007534:	f004 fb2e 	bl	800bb94 <USB_EnableGlobalInt>
 8007538:	6820      	ldr	r0, [r4, #0]
 800753a:	f005 f87d 	bl	800c638 <USB_DevConnect>
 800753e:	2300      	movs	r3, #0
 8007540:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007544:	4618      	mov	r0, r3
 8007546:	bd10      	pop	{r4, pc}
 8007548:	2002      	movs	r0, #2
 800754a:	4770      	bx	lr

0800754c <HAL_PCD_IRQHandler>:
 800754c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007550:	4604      	mov	r4, r0
 8007552:	b083      	sub	sp, #12
 8007554:	6800      	ldr	r0, [r0, #0]
 8007556:	f005 f87b 	bl	800c650 <USB_ReadInterrupts>
 800755a:	f410 4500 	ands.w	r5, r0, #32768	@ 0x8000
 800755e:	d12c      	bne.n	80075ba <HAL_PCD_IRQHandler+0x6e>
 8007560:	0543      	lsls	r3, r0, #21
 8007562:	f100 817b 	bmi.w	800785c <HAL_PCD_IRQHandler+0x310>
 8007566:	0447      	lsls	r7, r0, #17
 8007568:	d41b      	bmi.n	80075a2 <HAL_PCD_IRQHandler+0x56>
 800756a:	f410 5100 	ands.w	r1, r0, #8192	@ 0x2000
 800756e:	f040 81d7 	bne.w	8007920 <HAL_PCD_IRQHandler+0x3d4>
 8007572:	04c6      	lsls	r6, r0, #19
 8007574:	f100 808b 	bmi.w	800768e <HAL_PCD_IRQHandler+0x142>
 8007578:	0505      	lsls	r5, r0, #20
 800757a:	f100 8331 	bmi.w	8007be0 <HAL_PCD_IRQHandler+0x694>
 800757e:	0601      	lsls	r1, r0, #24
 8007580:	f100 8301 	bmi.w	8007b86 <HAL_PCD_IRQHandler+0x63a>
 8007584:	0582      	lsls	r2, r0, #22
 8007586:	f100 841f 	bmi.w	8007dc8 <HAL_PCD_IRQHandler+0x87c>
 800758a:	05c3      	lsls	r3, r0, #23
 800758c:	d512      	bpl.n	80075b4 <HAL_PCD_IRQHandler+0x68>
 800758e:	6822      	ldr	r2, [r4, #0]
 8007590:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007594:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007598:	041b      	lsls	r3, r3, #16
 800759a:	0c1b      	lsrs	r3, r3, #16
 800759c:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80075a0:	e008      	b.n	80075b4 <HAL_PCD_IRQHandler+0x68>
 80075a2:	6822      	ldr	r2, [r4, #0]
 80075a4:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80075a8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80075ac:	041b      	lsls	r3, r3, #16
 80075ae:	0c1b      	lsrs	r3, r3, #16
 80075b0:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80075b4:	b003      	add	sp, #12
 80075b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075ba:	6820      	ldr	r0, [r4, #0]
 80075bc:	f8b0 3044 	ldrh.w	r3, [r0, #68]	@ 0x44
 80075c0:	041f      	lsls	r7, r3, #16
 80075c2:	d5f7      	bpl.n	80075b4 <HAL_PCD_IRQHandler+0x68>
 80075c4:	f8df babc 	ldr.w	fp, [pc, #2748]	@ 8008084 <HAL_PCD_IRQHandler+0xb38>
 80075c8:	e010      	b.n	80075ec <HAL_PCD_IRQHandler+0xa0>
 80075ca:	f011 0110 	ands.w	r1, r1, #16
 80075ce:	f000 80c5 	beq.w	800775c <HAL_PCD_IRQHandler+0x210>
 80075d2:	8801      	ldrh	r1, [r0, #0]
 80075d4:	f411 6500 	ands.w	r5, r1, #2048	@ 0x800
 80075d8:	b28b      	uxth	r3, r1
 80075da:	f040 80e7 	bne.w	80077ac <HAL_PCD_IRQHandler+0x260>
 80075de:	041e      	lsls	r6, r3, #16
 80075e0:	f100 815a 	bmi.w	8007898 <HAL_PCD_IRQHandler+0x34c>
 80075e4:	f8b0 3044 	ldrh.w	r3, [r0, #68]	@ 0x44
 80075e8:	041a      	lsls	r2, r3, #16
 80075ea:	d5e3      	bpl.n	80075b4 <HAL_PCD_IRQHandler+0x68>
 80075ec:	f8b0 5044 	ldrh.w	r5, [r0, #68]	@ 0x44
 80075f0:	b2a9      	uxth	r1, r5
 80075f2:	f015 050f 	ands.w	r5, r5, #15
 80075f6:	d0e8      	beq.n	80075ca <HAL_PCD_IRQHandler+0x7e>
 80075f8:	fa0f f885 	sxth.w	r8, r5
 80075fc:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007600:	0419      	lsls	r1, r3, #16
 8007602:	b29e      	uxth	r6, r3
 8007604:	d466      	bmi.n	80076d4 <HAL_PCD_IRQHandler+0x188>
 8007606:	0631      	lsls	r1, r6, #24
 8007608:	d5ec      	bpl.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 800760a:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 800760e:	b29b      	uxth	r3, r3
 8007610:	ea03 030b 	and.w	r3, r3, fp
 8007614:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007618:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 800761c:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007620:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007624:	00af      	lsls	r7, r5, #2
 8007626:	7cd3      	ldrb	r3, [r2, #19]
 8007628:	2b01      	cmp	r3, #1
 800762a:	f000 8185 	beq.w	8007938 <HAL_PCD_IRQHandler+0x3ec>
 800762e:	eb08 0888 	add.w	r8, r8, r8, lsl #2
 8007632:	eb04 0cc8 	add.w	ip, r4, r8, lsl #3
 8007636:	7c11      	ldrb	r1, [r2, #16]
 8007638:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
 800763c:	9300      	str	r3, [sp, #0]
 800763e:	f416 7a80 	ands.w	sl, r6, #256	@ 0x100
 8007642:	ea4f 09c8 	mov.w	r9, r8, lsl #3
 8007646:	ea4f 0ec1 	mov.w	lr, r1, lsl #3
 800764a:	fa0f f881 	sxth.w	r8, r1
 800764e:	f040 81a3 	bne.w	8007998 <HAL_PCD_IRQHandler+0x44c>
 8007652:	f8b0 5050 	ldrh.w	r5, [r0, #80]	@ 0x50
 8007656:	fa1e f585 	uxtah	r5, lr, r5
 800765a:	4405      	add	r5, r0
 800765c:	f8b5 5402 	ldrh.w	r5, [r5, #1026]	@ 0x402
 8007660:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8007664:	429d      	cmp	r5, r3
 8007666:	f080 8191 	bcs.w	800798c <HAL_PCD_IRQHandler+0x440>
 800766a:	1b5b      	subs	r3, r3, r5
 800766c:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007670:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8007672:	442b      	add	r3, r5
 8007674:	6253      	str	r3, [r2, #36]	@ 0x24
 8007676:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
 800767a:	f109 0110 	add.w	r1, r9, #16
 800767e:	442b      	add	r3, r5
 8007680:	4421      	add	r1, r4
 8007682:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
 8007686:	f004 fdb1 	bl	800c1ec <USB_EPStartXfer>
 800768a:	6820      	ldr	r0, [r4, #0]
 800768c:	e7aa      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 800768e:	6822      	ldr	r2, [r4, #0]
 8007690:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007694:	f023 0304 	bic.w	r3, r3, #4
 8007698:	041b      	lsls	r3, r3, #16
 800769a:	0c1b      	lsrs	r3, r3, #16
 800769c:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 80076a0:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 80076a4:	f023 0308 	bic.w	r3, r3, #8
 80076a8:	041b      	lsls	r3, r3, #16
 80076aa:	0c1b      	lsrs	r3, r3, #16
 80076ac:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 80076b0:	f894 32c8 	ldrb.w	r3, [r4, #712]	@ 0x2c8
 80076b4:	2b01      	cmp	r3, #1
 80076b6:	f000 8395 	beq.w	8007de4 <HAL_PCD_IRQHandler+0x898>
 80076ba:	4620      	mov	r0, r4
 80076bc:	f007 fd8c 	bl	800f1d8 <HAL_PCD_ResumeCallback>
 80076c0:	6822      	ldr	r2, [r4, #0]
 80076c2:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80076c6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80076ca:	041b      	lsls	r3, r3, #16
 80076cc:	0c1b      	lsrs	r3, r3, #16
 80076ce:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80076d2:	e76f      	b.n	80075b4 <HAL_PCD_IRQHandler+0x68>
 80076d4:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 80076d8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80076dc:	051b      	lsls	r3, r3, #20
 80076de:	0d1b      	lsrs	r3, r3, #20
 80076e0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80076e4:	eb05 0185 	add.w	r1, r5, r5, lsl #2
 80076e8:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 80076ec:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80076f0:	00af      	lsls	r7, r5, #2
 80076f2:	f891 315c 	ldrb.w	r3, [r1, #348]	@ 0x15c
 80076f6:	2b00      	cmp	r3, #0
 80076f8:	d17b      	bne.n	80077f2 <HAL_PCD_IRQHandler+0x2a6>
 80076fa:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 80076fe:	f200 4206 	addw	r2, r0, #1030	@ 0x406
 8007702:	fa12 f383 	uxtah	r3, r2, r3
 8007706:	f891 2150 	ldrb.w	r2, [r1, #336]	@ 0x150
 800770a:	f833 9032 	ldrh.w	r9, [r3, r2, lsl #3]
 800770e:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007712:	f1b9 0f00 	cmp.w	r9, #0
 8007716:	f040 81d0 	bne.w	8007aba <HAL_PCD_IRQHandler+0x56e>
 800771a:	f04f 0900 	mov.w	r9, #0
 800771e:	197b      	adds	r3, r7, r5
 8007720:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007724:	f8d3 216c 	ldr.w	r2, [r3, #364]	@ 0x16c
 8007728:	444a      	add	r2, r9
 800772a:	f8c3 216c 	str.w	r2, [r3, #364]	@ 0x16c
 800772e:	f8d3 2164 	ldr.w	r2, [r3, #356]	@ 0x164
 8007732:	444a      	add	r2, r9
 8007734:	f8c3 2164 	str.w	r2, [r3, #356]	@ 0x164
 8007738:	f8d3 2168 	ldr.w	r2, [r3, #360]	@ 0x168
 800773c:	b122      	cbz	r2, 8007748 <HAL_PCD_IRQHandler+0x1fc>
 800773e:	f8d3 3160 	ldr.w	r3, [r3, #352]	@ 0x160
 8007742:	454b      	cmp	r3, r9
 8007744:	f240 819b 	bls.w	8007a7e <HAL_PCD_IRQHandler+0x532>
 8007748:	442f      	add	r7, r5
 800774a:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 800774e:	4620      	mov	r0, r4
 8007750:	f897 1150 	ldrb.w	r1, [r7, #336]	@ 0x150
 8007754:	f007 fd06 	bl	800f164 <HAL_PCD_DataOutStageCallback>
 8007758:	6820      	ldr	r0, [r4, #0]
 800775a:	e754      	b.n	8007606 <HAL_PCD_IRQHandler+0xba>
 800775c:	8803      	ldrh	r3, [r0, #0]
 800775e:	b29b      	uxth	r3, r3
 8007760:	ea03 030b 	and.w	r3, r3, fp
 8007764:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007768:	8003      	strh	r3, [r0, #0]
 800776a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 800776e:	fa10 f283 	uxtah	r2, r0, r3
 8007772:	7c20      	ldrb	r0, [r4, #16]
 8007774:	f240 4302 	movw	r3, #1026	@ 0x402
 8007778:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800777c:	4620      	mov	r0, r4
 800777e:	5ad3      	ldrh	r3, [r2, r3]
 8007780:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8007782:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007786:	441a      	add	r2, r3
 8007788:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800778a:	6262      	str	r2, [r4, #36]	@ 0x24
 800778c:	f007 fcf4 	bl	800f178 <HAL_PCD_DataInStageCallback>
 8007790:	7b23      	ldrb	r3, [r4, #12]
 8007792:	b363      	cbz	r3, 80077ee <HAL_PCD_IRQHandler+0x2a2>
 8007794:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8007796:	6820      	ldr	r0, [r4, #0]
 8007798:	2b00      	cmp	r3, #0
 800779a:	f47f af23 	bne.w	80075e4 <HAL_PCD_IRQHandler+0x98>
 800779e:	7b22      	ldrb	r2, [r4, #12]
 80077a0:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80077a4:	f8a0 204c 	strh.w	r2, [r0, #76]	@ 0x4c
 80077a8:	7323      	strb	r3, [r4, #12]
 80077aa:	e71b      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 80077ac:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80077b0:	f894 1150 	ldrb.w	r1, [r4, #336]	@ 0x150
 80077b4:	f240 4306 	movw	r3, #1030	@ 0x406
 80077b8:	fa10 f282 	uxtah	r2, r0, r2
 80077bc:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80077c0:	f504 7126 	add.w	r1, r4, #664	@ 0x298
 80077c4:	5ad3      	ldrh	r3, [r2, r3]
 80077c6:	f8b4 2156 	ldrh.w	r2, [r4, #342]	@ 0x156
 80077ca:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80077ce:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 80077d2:	f004 ff51 	bl	800c678 <USB_ReadPMA>
 80077d6:	6822      	ldr	r2, [r4, #0]
 80077d8:	8813      	ldrh	r3, [r2, #0]
 80077da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80077de:	051b      	lsls	r3, r3, #20
 80077e0:	0d1b      	lsrs	r3, r3, #20
 80077e2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80077e6:	8013      	strh	r3, [r2, #0]
 80077e8:	4620      	mov	r0, r4
 80077ea:	f007 fcb5 	bl	800f158 <HAL_PCD_SetupStageCallback>
 80077ee:	6820      	ldr	r0, [r4, #0]
 80077f0:	e6f8      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 80077f2:	f891 3153 	ldrb.w	r3, [r1, #339]	@ 0x153
 80077f6:	f891 2150 	ldrb.w	r2, [r1, #336]	@ 0x150
 80077fa:	2b02      	cmp	r3, #2
 80077fc:	f000 820b 	beq.w	8007c16 <HAL_PCD_IRQHandler+0x6ca>
 8007800:	b212      	sxth	r2, r2
 8007802:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007806:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800780a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800780e:	041b      	lsls	r3, r3, #16
 8007810:	0c1b      	lsrs	r3, r3, #16
 8007812:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007816:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800781a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800781e:	f891 3150 	ldrb.w	r3, [r1, #336]	@ 0x150
 8007822:	b21a      	sxth	r2, r3
 8007824:	f830 2022 	ldrh.w	r2, [r0, r2, lsl #2]
 8007828:	f412 4f80 	tst.w	r2, #16384	@ 0x4000
 800782c:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007830:	f000 812f 	beq.w	8007a92 <HAL_PCD_IRQHandler+0x546>
 8007834:	f200 4c02 	addw	ip, r0, #1026	@ 0x402
 8007838:	fa1c f282 	uxtah	r2, ip, r2
 800783c:	f832 9033 	ldrh.w	r9, [r2, r3, lsl #3]
 8007840:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007844:	f1b9 0f00 	cmp.w	r9, #0
 8007848:	f43f af67 	beq.w	800771a <HAL_PCD_IRQHandler+0x1ce>
 800784c:	f8b1 2158 	ldrh.w	r2, [r1, #344]	@ 0x158
 8007850:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007854:	464b      	mov	r3, r9
 8007856:	f004 ff0f 	bl	800c678 <USB_ReadPMA>
 800785a:	e760      	b.n	800771e <HAL_PCD_IRQHandler+0x1d2>
 800785c:	6822      	ldr	r2, [r4, #0]
 800785e:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007862:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007866:	041b      	lsls	r3, r3, #16
 8007868:	0c1b      	lsrs	r3, r3, #16
 800786a:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 800786e:	4620      	mov	r0, r4
 8007870:	f007 fc90 	bl	800f194 <HAL_PCD_ResetCallback>
 8007874:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8007878:	2b01      	cmp	r3, #1
 800787a:	f43f ae9b 	beq.w	80075b4 <HAL_PCD_IRQHandler+0x68>
 800787e:	2301      	movs	r3, #1
 8007880:	6820      	ldr	r0, [r4, #0]
 8007882:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007886:	7325      	strb	r5, [r4, #12]
 8007888:	4629      	mov	r1, r5
 800788a:	f004 fecf 	bl	800c62c <USB_SetDevAddress>
 800788e:	f884 5290 	strb.w	r5, [r4, #656]	@ 0x290
 8007892:	b003      	add	sp, #12
 8007894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007898:	8802      	ldrh	r2, [r0, #0]
 800789a:	f640 738f 	movw	r3, #3983	@ 0xf8f
 800789e:	4013      	ands	r3, r2
 80078a0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80078a4:	8003      	strh	r3, [r0, #0]
 80078a6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80078aa:	f894 1150 	ldrb.w	r1, [r4, #336]	@ 0x150
 80078ae:	f240 4306 	movw	r3, #1030	@ 0x406
 80078b2:	fa10 f282 	uxtah	r2, r0, r2
 80078b6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80078ba:	5ad3      	ldrh	r3, [r2, r3]
 80078bc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80078c0:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 80078c4:	b193      	cbz	r3, 80078ec <HAL_PCD_IRQHandler+0x3a0>
 80078c6:	f8d4 1164 	ldr.w	r1, [r4, #356]	@ 0x164
 80078ca:	b179      	cbz	r1, 80078ec <HAL_PCD_IRQHandler+0x3a0>
 80078cc:	f8b4 2156 	ldrh.w	r2, [r4, #342]	@ 0x156
 80078d0:	f004 fed2 	bl	800c678 <USB_ReadPMA>
 80078d4:	f8d4 3164 	ldr.w	r3, [r4, #356]	@ 0x164
 80078d8:	f8d4 216c 	ldr.w	r2, [r4, #364]	@ 0x16c
 80078dc:	4413      	add	r3, r2
 80078de:	4620      	mov	r0, r4
 80078e0:	4629      	mov	r1, r5
 80078e2:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
 80078e6:	f007 fc3d 	bl	800f164 <HAL_PCD_DataOutStageCallback>
 80078ea:	6820      	ldr	r0, [r4, #0]
 80078ec:	8803      	ldrh	r3, [r0, #0]
 80078ee:	051d      	lsls	r5, r3, #20
 80078f0:	b29a      	uxth	r2, r3
 80078f2:	f53f ae77 	bmi.w	80075e4 <HAL_PCD_IRQHandler+0x98>
 80078f6:	f402 5240 	and.w	r2, r2, #12288	@ 0x3000
 80078fa:	f5b2 5f40 	cmp.w	r2, #12288	@ 0x3000
 80078fe:	f43f ae71 	beq.w	80075e4 <HAL_PCD_IRQHandler+0x98>
 8007902:	8803      	ldrh	r3, [r0, #0]
 8007904:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007908:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800790c:	041b      	lsls	r3, r3, #16
 800790e:	0c1b      	lsrs	r3, r3, #16
 8007910:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 8007914:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007918:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800791c:	8003      	strh	r3, [r0, #0]
 800791e:	e661      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 8007920:	6822      	ldr	r2, [r4, #0]
 8007922:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007926:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800792a:	041b      	lsls	r3, r3, #16
 800792c:	0c1b      	lsrs	r3, r3, #16
 800792e:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007932:	b003      	add	sp, #12
 8007934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007938:	1c6b      	adds	r3, r5, #1
 800793a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800793e:	2100      	movs	r1, #0
 8007940:	f844 1033 	str.w	r1, [r4, r3, lsl #3]
 8007944:	7f13      	ldrb	r3, [r2, #28]
 8007946:	b1c3      	cbz	r3, 800797a <HAL_PCD_IRQHandler+0x42e>
 8007948:	f016 0640 	ands.w	r6, r6, #64	@ 0x40
 800794c:	7c53      	ldrb	r3, [r2, #17]
 800794e:	f040 810f 	bne.w	8007b70 <HAL_PCD_IRQHandler+0x624>
 8007952:	2b00      	cmp	r3, #0
 8007954:	f040 8259 	bne.w	8007e0a <HAL_PCD_IRQHandler+0x8be>
 8007958:	7c13      	ldrb	r3, [r2, #16]
 800795a:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800795e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007962:	f203 4306 	addw	r3, r3, #1030	@ 0x406
 8007966:	b292      	uxth	r2, r2
 8007968:	5a99      	ldrh	r1, [r3, r2]
 800796a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800796e:	5299      	strh	r1, [r3, r2]
 8007970:	5a99      	ldrh	r1, [r3, r2]
 8007972:	b289      	uxth	r1, r1
 8007974:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8007978:	5299      	strh	r1, [r3, r2]
 800797a:	443d      	add	r5, r7
 800797c:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 8007980:	4620      	mov	r0, r4
 8007982:	7c29      	ldrb	r1, [r5, #16]
 8007984:	f007 fbf8 	bl	800f178 <HAL_PCD_DataInStageCallback>
 8007988:	6820      	ldr	r0, [r4, #0]
 800798a:	e62b      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 800798c:	f8cc a028 	str.w	sl, [ip, #40]	@ 0x28
 8007990:	4620      	mov	r0, r4
 8007992:	f007 fbf1 	bl	800f178 <HAL_PCD_DataInStageCallback>
 8007996:	e72a      	b.n	80077ee <HAL_PCD_IRQHandler+0x2a2>
 8007998:	f406 4380 	and.w	r3, r6, #16384	@ 0x4000
 800799c:	f016 0640 	ands.w	r6, r6, #64	@ 0x40
 80079a0:	9301      	str	r3, [sp, #4]
 80079a2:	f040 8092 	bne.w	8007aca <HAL_PCD_IRQHandler+0x57e>
 80079a6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80079aa:	9b00      	ldr	r3, [sp, #0]
 80079ac:	f200 4a06 	addw	sl, r0, #1030	@ 0x406
 80079b0:	fa1a f282 	uxtah	r2, sl, r2
 80079b4:	f832 9038 	ldrh.w	r9, [r2, r8, lsl #3]
 80079b8:	f3c9 0909 	ubfx	r9, r9, #0, #10
 80079bc:	4599      	cmp	r9, r3
 80079be:	f240 81a5 	bls.w	8007d0c <HAL_PCD_IRQHandler+0x7c0>
 80079c2:	f8cc 6028 	str.w	r6, [ip, #40]	@ 0x28
 80079c6:	197b      	adds	r3, r7, r5
 80079c8:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80079cc:	7c5b      	ldrb	r3, [r3, #17]
 80079ce:	2b00      	cmp	r3, #0
 80079d0:	f040 82a3 	bne.w	8007f1a <HAL_PCD_IRQHandler+0x9ce>
 80079d4:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80079d8:	f20e 4602 	addw	r6, lr, #1026	@ 0x402
 80079dc:	b292      	uxth	r2, r2
 80079de:	4406      	add	r6, r0
 80079e0:	5ab3      	ldrh	r3, [r6, r2]
 80079e2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80079e6:	52b3      	strh	r3, [r6, r2]
 80079e8:	5ab3      	ldrh	r3, [r6, r2]
 80079ea:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80079ee:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80079f2:	b29b      	uxth	r3, r3
 80079f4:	52b3      	strh	r3, [r6, r2]
 80079f6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80079fa:	fa1a f282 	uxtah	r2, sl, r2
 80079fe:	f832 3038 	ldrh.w	r3, [r2, r8, lsl #3]
 8007a02:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007a06:	f822 3038 	strh.w	r3, [r2, r8, lsl #3]
 8007a0a:	f832 3038 	ldrh.w	r3, [r2, r8, lsl #3]
 8007a0e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007a12:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007a16:	b29b      	uxth	r3, r3
 8007a18:	f822 3038 	strh.w	r3, [r2, r8, lsl #3]
 8007a1c:	197b      	adds	r3, r7, r5
 8007a1e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007a22:	7cdb      	ldrb	r3, [r3, #19]
 8007a24:	2b02      	cmp	r3, #2
 8007a26:	d10f      	bne.n	8007a48 <HAL_PCD_IRQHandler+0x4fc>
 8007a28:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007a2c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a30:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007a34:	041b      	lsls	r3, r3, #16
 8007a36:	0c1b      	lsrs	r3, r3, #16
 8007a38:	f083 0320 	eor.w	r3, r3, #32
 8007a3c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007a40:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007a44:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007a48:	4620      	mov	r0, r4
 8007a4a:	f007 fb95 	bl	800f178 <HAL_PCD_DataInStageCallback>
 8007a4e:	9b01      	ldr	r3, [sp, #4]
 8007a50:	2b00      	cmp	r3, #0
 8007a52:	f47f aecc 	bne.w	80077ee <HAL_PCD_IRQHandler+0x2a2>
 8007a56:	197b      	adds	r3, r7, r5
 8007a58:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007a5c:	6820      	ldr	r0, [r4, #0]
 8007a5e:	7c1a      	ldrb	r2, [r3, #16]
 8007a60:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007a64:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a68:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a6c:	041b      	lsls	r3, r3, #16
 8007a6e:	0c1b      	lsrs	r3, r3, #16
 8007a70:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007a74:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007a78:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007a7c:	e5b2      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 8007a7e:	2128      	movs	r1, #40	@ 0x28
 8007a80:	fb01 4105 	mla	r1, r1, r5, r4
 8007a84:	6820      	ldr	r0, [r4, #0]
 8007a86:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8007a8a:	f004 fbaf 	bl	800c1ec <USB_EPStartXfer>
 8007a8e:	6820      	ldr	r0, [r4, #0]
 8007a90:	e5b9      	b.n	8007606 <HAL_PCD_IRQHandler+0xba>
 8007a92:	f200 4c06 	addw	ip, r0, #1030	@ 0x406
 8007a96:	fa1c f282 	uxtah	r2, ip, r2
 8007a9a:	f832 9033 	ldrh.w	r9, [r2, r3, lsl #3]
 8007a9e:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007aa2:	f1b9 0f00 	cmp.w	r9, #0
 8007aa6:	f43f ae38 	beq.w	800771a <HAL_PCD_IRQHandler+0x1ce>
 8007aaa:	f8b1 215a 	ldrh.w	r2, [r1, #346]	@ 0x15a
 8007aae:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007ab2:	464b      	mov	r3, r9
 8007ab4:	f004 fde0 	bl	800c678 <USB_ReadPMA>
 8007ab8:	e631      	b.n	800771e <HAL_PCD_IRQHandler+0x1d2>
 8007aba:	f8b1 2156 	ldrh.w	r2, [r1, #342]	@ 0x156
 8007abe:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007ac2:	464b      	mov	r3, r9
 8007ac4:	f004 fdd8 	bl	800c678 <USB_ReadPMA>
 8007ac8:	e629      	b.n	800771e <HAL_PCD_IRQHandler+0x1d2>
 8007aca:	f8b0 6050 	ldrh.w	r6, [r0, #80]	@ 0x50
 8007ace:	9b00      	ldr	r3, [sp, #0]
 8007ad0:	f200 4a02 	addw	sl, r0, #1026	@ 0x402
 8007ad4:	fa1a f686 	uxtah	r6, sl, r6
 8007ad8:	f836 9038 	ldrh.w	r9, [r6, r8, lsl #3]
 8007adc:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007ae0:	4599      	cmp	r9, r3
 8007ae2:	f0c0 80e2 	bcc.w	8007caa <HAL_PCD_IRQHandler+0x75e>
 8007ae6:	2600      	movs	r6, #0
 8007ae8:	f8cc 6028 	str.w	r6, [ip, #40]	@ 0x28
 8007aec:	7c53      	ldrb	r3, [r2, #17]
 8007aee:	2b00      	cmp	r3, #0
 8007af0:	f040 8225 	bne.w	8007f3e <HAL_PCD_IRQHandler+0x9f2>
 8007af4:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007af8:	fa1a f383 	uxtah	r3, sl, r3
 8007afc:	f20e 4206 	addw	r2, lr, #1030	@ 0x406
 8007b00:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007b04:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007b08:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007b0c:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007b10:	b2b6      	uxth	r6, r6
 8007b12:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 8007b16:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007b1a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007b1e:	4402      	add	r2, r0
 8007b20:	b29b      	uxth	r3, r3
 8007b22:	5ad6      	ldrh	r6, [r2, r3]
 8007b24:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007b28:	52d6      	strh	r6, [r2, r3]
 8007b2a:	5ad6      	ldrh	r6, [r2, r3]
 8007b2c:	b2b6      	uxth	r6, r6
 8007b2e:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 8007b32:	52d6      	strh	r6, [r2, r3]
 8007b34:	197b      	adds	r3, r7, r5
 8007b36:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007b3a:	7cdb      	ldrb	r3, [r3, #19]
 8007b3c:	2b02      	cmp	r3, #2
 8007b3e:	d10f      	bne.n	8007b60 <HAL_PCD_IRQHandler+0x614>
 8007b40:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007b44:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007b48:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007b4c:	041b      	lsls	r3, r3, #16
 8007b4e:	0c1b      	lsrs	r3, r3, #16
 8007b50:	f083 0320 	eor.w	r3, r3, #32
 8007b54:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007b58:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007b5c:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007b60:	4620      	mov	r0, r4
 8007b62:	f007 fb09 	bl	800f178 <HAL_PCD_DataInStageCallback>
 8007b66:	9b01      	ldr	r3, [sp, #4]
 8007b68:	2b00      	cmp	r3, #0
 8007b6a:	f47f af74 	bne.w	8007a56 <HAL_PCD_IRQHandler+0x50a>
 8007b6e:	e63e      	b.n	80077ee <HAL_PCD_IRQHandler+0x2a2>
 8007b70:	2b00      	cmp	r3, #0
 8007b72:	f040 813d 	bne.w	8007df0 <HAL_PCD_IRQHandler+0x8a4>
 8007b76:	7c13      	ldrb	r3, [r2, #16]
 8007b78:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007b7c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007b80:	f203 4302 	addw	r3, r3, #1026	@ 0x402
 8007b84:	e6ef      	b.n	8007966 <HAL_PCD_IRQHandler+0x41a>
 8007b86:	6822      	ldr	r2, [r4, #0]
 8007b88:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007b8c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007b90:	041b      	lsls	r3, r3, #16
 8007b92:	0c1b      	lsrs	r3, r3, #16
 8007b94:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007b98:	f894 32c8 	ldrb.w	r3, [r4, #712]	@ 0x2c8
 8007b9c:	2b00      	cmp	r3, #0
 8007b9e:	f040 810e 	bne.w	8007dbe <HAL_PCD_IRQHandler+0x872>
 8007ba2:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007ba6:	b29b      	uxth	r3, r3
 8007ba8:	f043 0304 	orr.w	r3, r3, #4
 8007bac:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007bb0:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007bb4:	b29b      	uxth	r3, r3
 8007bb6:	2101      	movs	r1, #1
 8007bb8:	f043 0308 	orr.w	r3, r3, #8
 8007bbc:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007bc0:	f884 12c8 	strb.w	r1, [r4, #712]	@ 0x2c8
 8007bc4:	f8b2 3054 	ldrh.w	r3, [r2, #84]	@ 0x54
 8007bc8:	f3c3 038d 	ubfx	r3, r3, #2, #14
 8007bcc:	f003 033c 	and.w	r3, r3, #60	@ 0x3c
 8007bd0:	4620      	mov	r0, r4
 8007bd2:	f8c4 32cc 	str.w	r3, [r4, #716]	@ 0x2cc
 8007bd6:	b003      	add	sp, #12
 8007bd8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bdc:	f007 bbd6 	b.w	800f38c <HAL_PCDEx_LPM_Callback>
 8007be0:	6822      	ldr	r2, [r4, #0]
 8007be2:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007be6:	b29b      	uxth	r3, r3
 8007be8:	f043 0308 	orr.w	r3, r3, #8
 8007bec:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007bf0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007bf4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007bf8:	041b      	lsls	r3, r3, #16
 8007bfa:	0c1b      	lsrs	r3, r3, #16
 8007bfc:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007c00:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007c04:	b29b      	uxth	r3, r3
 8007c06:	f043 0304 	orr.w	r3, r3, #4
 8007c0a:	4620      	mov	r0, r4
 8007c0c:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007c10:	f007 fad2 	bl	800f1b8 <HAL_PCD_SuspendCallback>
 8007c14:	e4ce      	b.n	80075b4 <HAL_PCD_IRQHandler+0x68>
 8007c16:	f8b0 e050 	ldrh.w	lr, [r0, #80]	@ 0x50
 8007c1a:	f8d1 3168 	ldr.w	r3, [r1, #360]	@ 0x168
 8007c1e:	fa0f fc82 	sxth.w	ip, r2
 8007c22:	00d2      	lsls	r2, r2, #3
 8007c24:	fa12 f28e 	uxtah	r2, r2, lr
 8007c28:	f416 4a80 	ands.w	sl, r6, #16384	@ 0x4000
 8007c2c:	4402      	add	r2, r0
 8007c2e:	f000 80f9 	beq.w	8007e24 <HAL_PCD_IRQHandler+0x8d8>
 8007c32:	f8b2 e402 	ldrh.w	lr, [r2, #1026]	@ 0x402
 8007c36:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8007c3a:	459e      	cmp	lr, r3
 8007c3c:	46f1      	mov	r9, lr
 8007c3e:	f200 8165 	bhi.w	8007f0c <HAL_PCD_IRQHandler+0x9c0>
 8007c42:	eba3 030e 	sub.w	r3, r3, lr
 8007c46:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007c4a:	b97b      	cbnz	r3, 8007c6c <HAL_PCD_IRQHandler+0x720>
 8007c4c:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 8007c50:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007c54:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8007c58:	0412      	lsls	r2, r2, #16
 8007c5a:	0c12      	lsrs	r2, r2, #16
 8007c5c:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 8007c60:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007c64:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8007c68:	f820 202c 	strh.w	r2, [r0, ip, lsl #2]
 8007c6c:	0672      	lsls	r2, r6, #25
 8007c6e:	d50d      	bpl.n	8007c8c <HAL_PCD_IRQHandler+0x740>
 8007c70:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8007c74:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007c78:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c7c:	041b      	lsls	r3, r3, #16
 8007c7e:	0c1b      	lsrs	r3, r3, #16
 8007c80:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007c84:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8007c88:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8007c8c:	f1be 0f00 	cmp.w	lr, #0
 8007c90:	f43f ad45 	beq.w	800771e <HAL_PCD_IRQHandler+0x1d2>
 8007c94:	1979      	adds	r1, r7, r5
 8007c96:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007c9a:	4673      	mov	r3, lr
 8007c9c:	f8b1 2158 	ldrh.w	r2, [r1, #344]	@ 0x158
 8007ca0:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007ca4:	f004 fce8 	bl	800c678 <USB_ReadPMA>
 8007ca8:	e539      	b.n	800771e <HAL_PCD_IRQHandler+0x1d2>
 8007caa:	eba3 0309 	sub.w	r3, r3, r9
 8007cae:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007cb2:	9b01      	ldr	r3, [sp, #4]
 8007cb4:	b16b      	cbz	r3, 8007cd2 <HAL_PCD_IRQHandler+0x786>
 8007cb6:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007cba:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007cbe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007cc2:	041b      	lsls	r3, r3, #16
 8007cc4:	0c1b      	lsrs	r3, r3, #16
 8007cc6:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007cca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007cce:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007cd2:	197b      	adds	r3, r7, r5
 8007cd4:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007cd8:	f893 2034 	ldrb.w	r2, [r3, #52]	@ 0x34
 8007cdc:	2a01      	cmp	r2, #1
 8007cde:	f000 80dc 	beq.w	8007e9a <HAL_PCD_IRQHandler+0x94e>
 8007ce2:	443d      	add	r5, r7
 8007ce4:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 8007ce8:	7c2a      	ldrb	r2, [r5, #16]
 8007cea:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007cee:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007cf2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007cf6:	041b      	lsls	r3, r3, #16
 8007cf8:	0c1b      	lsrs	r3, r3, #16
 8007cfa:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
 8007cfe:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007d02:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007d06:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007d0a:	e46b      	b.n	80075e4 <HAL_PCD_IRQHandler+0x98>
 8007d0c:	eba3 0309 	sub.w	r3, r3, r9
 8007d10:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007d14:	2b00      	cmp	r3, #0
 8007d16:	f43f ae56 	beq.w	80079c6 <HAL_PCD_IRQHandler+0x47a>
 8007d1a:	9b01      	ldr	r3, [sp, #4]
 8007d1c:	b96b      	cbnz	r3, 8007d3a <HAL_PCD_IRQHandler+0x7ee>
 8007d1e:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007d22:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007d26:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007d2a:	041b      	lsls	r3, r3, #16
 8007d2c:	0c1b      	lsrs	r3, r3, #16
 8007d2e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007d32:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007d36:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007d3a:	197b      	adds	r3, r7, r5
 8007d3c:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007d40:	f893 2034 	ldrb.w	r2, [r3, #52]	@ 0x34
 8007d44:	2a01      	cmp	r2, #1
 8007d46:	d1cc      	bne.n	8007ce2 <HAL_PCD_IRQHandler+0x796>
 8007d48:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007d4a:	eb02 0109 	add.w	r1, r2, r9
 8007d4e:	6259      	str	r1, [r3, #36]	@ 0x24
 8007d50:	f8dc 602c 	ldr.w	r6, [ip, #44]	@ 0x2c
 8007d54:	444e      	add	r6, r9
 8007d56:	f8cc 602c 	str.w	r6, [ip, #44]	@ 0x2c
 8007d5a:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8007d5c:	6a1a      	ldr	r2, [r3, #32]
 8007d5e:	4296      	cmp	r6, r2
 8007d60:	f0c0 8109 	bcc.w	8007f76 <HAL_PCD_IRQHandler+0xa2a>
 8007d64:	1ab6      	subs	r6, r6, r2
 8007d66:	631e      	str	r6, [r3, #48]	@ 0x30
 8007d68:	fa1f f982 	uxth.w	r9, r2
 8007d6c:	197b      	adds	r3, r7, r5
 8007d6e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007d72:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007d76:	f1bc 0f00 	cmp.w	ip, #0
 8007d7a:	f040 80f1 	bne.w	8007f60 <HAL_PCD_IRQHandler+0xa14>
 8007d7e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007d82:	fa1a f383 	uxtah	r3, sl, r3
 8007d86:	449e      	add	lr, r3
 8007d88:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007d8c:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007d90:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007d94:	2a00      	cmp	r2, #0
 8007d96:	f040 8119 	bne.w	8007fcc <HAL_PCD_IRQHandler+0xa80>
 8007d9a:	f833 2038 	ldrh.w	r2, [r3, r8, lsl #3]
 8007d9e:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007da2:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007da6:	b292      	uxth	r2, r2
 8007da8:	f823 2038 	strh.w	r2, [r3, r8, lsl #3]
 8007dac:	197a      	adds	r2, r7, r5
 8007dae:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007db2:	464b      	mov	r3, r9
 8007db4:	8b52      	ldrh	r2, [r2, #26]
 8007db6:	f004 fc4f 	bl	800c658 <USB_WritePMA>
 8007dba:	6820      	ldr	r0, [r4, #0]
 8007dbc:	e791      	b.n	8007ce2 <HAL_PCD_IRQHandler+0x796>
 8007dbe:	4620      	mov	r0, r4
 8007dc0:	f007 f9fa 	bl	800f1b8 <HAL_PCD_SuspendCallback>
 8007dc4:	f7ff bbf6 	b.w	80075b4 <HAL_PCD_IRQHandler+0x68>
 8007dc8:	6822      	ldr	r2, [r4, #0]
 8007dca:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007dce:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007dd2:	041b      	lsls	r3, r3, #16
 8007dd4:	0c1b      	lsrs	r3, r3, #16
 8007dd6:	4620      	mov	r0, r4
 8007dd8:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007ddc:	f007 f9d6 	bl	800f18c <HAL_PCD_SOFCallback>
 8007de0:	f7ff bbe8 	b.w	80075b4 <HAL_PCD_IRQHandler+0x68>
 8007de4:	f884 12c8 	strb.w	r1, [r4, #712]	@ 0x2c8
 8007de8:	4620      	mov	r0, r4
 8007dea:	f007 facf 	bl	800f38c <HAL_PCDEx_LPM_Callback>
 8007dee:	e464      	b.n	80076ba <HAL_PCD_IRQHandler+0x16e>
 8007df0:	2b01      	cmp	r3, #1
 8007df2:	f47f adc2 	bne.w	800797a <HAL_PCD_IRQHandler+0x42e>
 8007df6:	7c13      	ldrb	r3, [r2, #16]
 8007df8:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007dfc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007e00:	f203 4302 	addw	r3, r3, #1026	@ 0x402
 8007e04:	b292      	uxth	r2, r2
 8007e06:	5299      	strh	r1, [r3, r2]
 8007e08:	e5b7      	b.n	800797a <HAL_PCD_IRQHandler+0x42e>
 8007e0a:	2b01      	cmp	r3, #1
 8007e0c:	f47f adb5 	bne.w	800797a <HAL_PCD_IRQHandler+0x42e>
 8007e10:	7c13      	ldrb	r3, [r2, #16]
 8007e12:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007e16:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007e1a:	f203 4306 	addw	r3, r3, #1030	@ 0x406
 8007e1e:	b292      	uxth	r2, r2
 8007e20:	529e      	strh	r6, [r3, r2]
 8007e22:	e5aa      	b.n	800797a <HAL_PCD_IRQHandler+0x42e>
 8007e24:	f8b2 e406 	ldrh.w	lr, [r2, #1030]	@ 0x406
 8007e28:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8007e2c:	459e      	cmp	lr, r3
 8007e2e:	46f1      	mov	r9, lr
 8007e30:	d870      	bhi.n	8007f14 <HAL_PCD_IRQHandler+0x9c8>
 8007e32:	eba3 030e 	sub.w	r3, r3, lr
 8007e36:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007e3a:	b97b      	cbnz	r3, 8007e5c <HAL_PCD_IRQHandler+0x910>
 8007e3c:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 8007e40:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007e44:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8007e48:	0412      	lsls	r2, r2, #16
 8007e4a:	0c12      	lsrs	r2, r2, #16
 8007e4c:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 8007e50:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007e54:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8007e58:	f820 202c 	strh.w	r2, [r0, ip, lsl #2]
 8007e5c:	0673      	lsls	r3, r6, #25
 8007e5e:	d40d      	bmi.n	8007e7c <HAL_PCD_IRQHandler+0x930>
 8007e60:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8007e64:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007e68:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007e6c:	041b      	lsls	r3, r3, #16
 8007e6e:	0c1b      	lsrs	r3, r3, #16
 8007e70:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007e74:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8007e78:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8007e7c:	f1be 0f00 	cmp.w	lr, #0
 8007e80:	f43f ac4d 	beq.w	800771e <HAL_PCD_IRQHandler+0x1d2>
 8007e84:	1979      	adds	r1, r7, r5
 8007e86:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007e8a:	4673      	mov	r3, lr
 8007e8c:	f8b1 215a 	ldrh.w	r2, [r1, #346]	@ 0x15a
 8007e90:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007e94:	f004 fbf0 	bl	800c678 <USB_ReadPMA>
 8007e98:	e441      	b.n	800771e <HAL_PCD_IRQHandler+0x1d2>
 8007e9a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007e9c:	eb02 0109 	add.w	r1, r2, r9
 8007ea0:	6259      	str	r1, [r3, #36]	@ 0x24
 8007ea2:	f8dc 602c 	ldr.w	r6, [ip, #44]	@ 0x2c
 8007ea6:	444e      	add	r6, r9
 8007ea8:	f8cc 602c 	str.w	r6, [ip, #44]	@ 0x2c
 8007eac:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8007eae:	6a1a      	ldr	r2, [r3, #32]
 8007eb0:	4296      	cmp	r6, r2
 8007eb2:	d36f      	bcc.n	8007f94 <HAL_PCD_IRQHandler+0xa48>
 8007eb4:	1ab6      	subs	r6, r6, r2
 8007eb6:	631e      	str	r6, [r3, #48]	@ 0x30
 8007eb8:	fa1f f982 	uxth.w	r9, r2
 8007ebc:	197b      	adds	r3, r7, r5
 8007ebe:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007ec2:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007ec6:	f1bc 0f00 	cmp.w	ip, #0
 8007eca:	d159      	bne.n	8007f80 <HAL_PCD_IRQHandler+0xa34>
 8007ecc:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007ed0:	fa1a f383 	uxtah	r3, sl, r3
 8007ed4:	449e      	add	lr, r3
 8007ed6:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007eda:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007ede:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007ee2:	2a00      	cmp	r2, #0
 8007ee4:	f040 8098 	bne.w	8008018 <HAL_PCD_IRQHandler+0xacc>
 8007ee8:	f833 2038 	ldrh.w	r2, [r3, r8, lsl #3]
 8007eec:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007ef0:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007ef4:	b292      	uxth	r2, r2
 8007ef6:	f823 2038 	strh.w	r2, [r3, r8, lsl #3]
 8007efa:	197a      	adds	r2, r7, r5
 8007efc:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007f00:	464b      	mov	r3, r9
 8007f02:	8b12      	ldrh	r2, [r2, #24]
 8007f04:	f004 fba8 	bl	800c658 <USB_WritePMA>
 8007f08:	6820      	ldr	r0, [r4, #0]
 8007f0a:	e6ea      	b.n	8007ce2 <HAL_PCD_IRQHandler+0x796>
 8007f0c:	2300      	movs	r3, #0
 8007f0e:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007f12:	e69b      	b.n	8007c4c <HAL_PCD_IRQHandler+0x700>
 8007f14:	f8c1 a168 	str.w	sl, [r1, #360]	@ 0x168
 8007f18:	e790      	b.n	8007e3c <HAL_PCD_IRQHandler+0x8f0>
 8007f1a:	2b01      	cmp	r3, #1
 8007f1c:	f47f ad7e 	bne.w	8007a1c <HAL_PCD_IRQHandler+0x4d0>
 8007f20:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f24:	f20e 4202 	addw	r2, lr, #1026	@ 0x402
 8007f28:	b29b      	uxth	r3, r3
 8007f2a:	4402      	add	r2, r0
 8007f2c:	2600      	movs	r6, #0
 8007f2e:	52d6      	strh	r6, [r2, r3]
 8007f30:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f34:	fa1a f383 	uxtah	r3, sl, r3
 8007f38:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007f3c:	e56e      	b.n	8007a1c <HAL_PCD_IRQHandler+0x4d0>
 8007f3e:	2b01      	cmp	r3, #1
 8007f40:	f47f adf8 	bne.w	8007b34 <HAL_PCD_IRQHandler+0x5e8>
 8007f44:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f48:	fa1a f383 	uxtah	r3, sl, r3
 8007f4c:	f20e 4206 	addw	r2, lr, #1030	@ 0x406
 8007f50:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007f54:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f58:	4402      	add	r2, r0
 8007f5a:	b29b      	uxth	r3, r3
 8007f5c:	52d6      	strh	r6, [r2, r3]
 8007f5e:	e5e9      	b.n	8007b34 <HAL_PCD_IRQHandler+0x5e8>
 8007f60:	f1bc 0f01 	cmp.w	ip, #1
 8007f64:	f47f af22 	bne.w	8007dac <HAL_PCD_IRQHandler+0x860>
 8007f68:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f6c:	fa1a f383 	uxtah	r3, sl, r3
 8007f70:	f823 9038 	strh.w	r9, [r3, r8, lsl #3]
 8007f74:	e71a      	b.n	8007dac <HAL_PCD_IRQHandler+0x860>
 8007f76:	b996      	cbnz	r6, 8007f9e <HAL_PCD_IRQHandler+0xa52>
 8007f78:	f883 6034 	strb.w	r6, [r3, #52]	@ 0x34
 8007f7c:	464a      	mov	r2, r9
 8007f7e:	e6f5      	b.n	8007d6c <HAL_PCD_IRQHandler+0x820>
 8007f80:	f1bc 0f01 	cmp.w	ip, #1
 8007f84:	d1b9      	bne.n	8007efa <HAL_PCD_IRQHandler+0x9ae>
 8007f86:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f8a:	fa1a f383 	uxtah	r3, sl, r3
 8007f8e:	f823 9038 	strh.w	r9, [r3, r8, lsl #3]
 8007f92:	e7b2      	b.n	8007efa <HAL_PCD_IRQHandler+0x9ae>
 8007f94:	bb4e      	cbnz	r6, 8007fea <HAL_PCD_IRQHandler+0xa9e>
 8007f96:	f883 6034 	strb.w	r6, [r3, #52]	@ 0x34
 8007f9a:	464a      	mov	r2, r9
 8007f9c:	e78e      	b.n	8007ebc <HAL_PCD_IRQHandler+0x970>
 8007f9e:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007fa2:	2200      	movs	r2, #0
 8007fa4:	631a      	str	r2, [r3, #48]	@ 0x30
 8007fa6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007faa:	fa1f f986 	uxth.w	r9, r6
 8007fae:	f1bc 0f00 	cmp.w	ip, #0
 8007fb2:	d1d5      	bne.n	8007f60 <HAL_PCD_IRQHandler+0xa14>
 8007fb4:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007fb8:	fa1a f383 	uxtah	r3, sl, r3
 8007fbc:	4632      	mov	r2, r6
 8007fbe:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007fc2:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007fc6:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007fca:	449e      	add	lr, r3
 8007fcc:	2a3e      	cmp	r2, #62	@ 0x3e
 8007fce:	d832      	bhi.n	8008036 <HAL_PCD_IRQHandler+0xaea>
 8007fd0:	f8be 3000 	ldrh.w	r3, [lr]
 8007fd4:	0856      	lsrs	r6, r2, #1
 8007fd6:	07d2      	lsls	r2, r2, #31
 8007fd8:	bf48      	it	mi
 8007fda:	3601      	addmi	r6, #1
 8007fdc:	b29b      	uxth	r3, r3
 8007fde:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8007fe2:	b29b      	uxth	r3, r3
 8007fe4:	f8ae 3000 	strh.w	r3, [lr]
 8007fe8:	e6e0      	b.n	8007dac <HAL_PCD_IRQHandler+0x860>
 8007fea:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007fee:	2200      	movs	r2, #0
 8007ff0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007ff4:	631a      	str	r2, [r3, #48]	@ 0x30
 8007ff6:	fa1f f986 	uxth.w	r9, r6
 8007ffa:	f1bc 0f00 	cmp.w	ip, #0
 8007ffe:	d1bf      	bne.n	8007f80 <HAL_PCD_IRQHandler+0xa34>
 8008000:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8008004:	fa1a f383 	uxtah	r3, sl, r3
 8008008:	4632      	mov	r2, r6
 800800a:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 800800e:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8008012:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8008016:	449e      	add	lr, r3
 8008018:	2a3e      	cmp	r2, #62	@ 0x3e
 800801a:	d81f      	bhi.n	800805c <HAL_PCD_IRQHandler+0xb10>
 800801c:	f8be 3000 	ldrh.w	r3, [lr]
 8008020:	0856      	lsrs	r6, r2, #1
 8008022:	07d2      	lsls	r2, r2, #31
 8008024:	bf48      	it	mi
 8008026:	3601      	addmi	r6, #1
 8008028:	b29b      	uxth	r3, r3
 800802a:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 800802e:	b29b      	uxth	r3, r3
 8008030:	f8ae 3000 	strh.w	r3, [lr]
 8008034:	e761      	b.n	8007efa <HAL_PCD_IRQHandler+0x9ae>
 8008036:	06d3      	lsls	r3, r2, #27
 8008038:	f8be 3000 	ldrh.w	r3, [lr]
 800803c:	ea4f 1652 	mov.w	r6, r2, lsr #5
 8008040:	bf08      	it	eq
 8008042:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8008046:	b29b      	uxth	r3, r3
 8008048:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 800804c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8008050:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8008054:	b29b      	uxth	r3, r3
 8008056:	f8ae 3000 	strh.w	r3, [lr]
 800805a:	e6a7      	b.n	8007dac <HAL_PCD_IRQHandler+0x860>
 800805c:	06d3      	lsls	r3, r2, #27
 800805e:	f8be 3000 	ldrh.w	r3, [lr]
 8008062:	ea4f 1652 	mov.w	r6, r2, lsr #5
 8008066:	bf08      	it	eq
 8008068:	f106 36ff 	addeq.w	r6, r6, #4294967295
 800806c:	b29b      	uxth	r3, r3
 800806e:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8008072:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8008076:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800807a:	b29b      	uxth	r3, r3
 800807c:	f8ae 3000 	strh.w	r3, [lr]
 8008080:	e73b      	b.n	8007efa <HAL_PCD_IRQHandler+0x9ae>
 8008082:	bf00      	nop
 8008084:	ffff8f0f 	.word	0xffff8f0f

08008088 <HAL_PCD_SetAddress>:
 8008088:	f890 2290 	ldrb.w	r2, [r0, #656]	@ 0x290
 800808c:	2a01      	cmp	r2, #1
 800808e:	d00d      	beq.n	80080ac <HAL_PCD_SetAddress+0x24>
 8008090:	b510      	push	{r4, lr}
 8008092:	4604      	mov	r4, r0
 8008094:	2201      	movs	r2, #1
 8008096:	6800      	ldr	r0, [r0, #0]
 8008098:	f884 2290 	strb.w	r2, [r4, #656]	@ 0x290
 800809c:	7321      	strb	r1, [r4, #12]
 800809e:	f004 fac5 	bl	800c62c <USB_SetDevAddress>
 80080a2:	2300      	movs	r3, #0
 80080a4:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80080a8:	4618      	mov	r0, r3
 80080aa:	bd10      	pop	{r4, pc}
 80080ac:	2002      	movs	r0, #2
 80080ae:	4770      	bx	lr

080080b0 <HAL_PCD_EP_Open>:
 80080b0:	b510      	push	{r4, lr}
 80080b2:	f001 0e07 	and.w	lr, r1, #7
 80080b6:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 80080ba:	0609      	lsls	r1, r1, #24
 80080bc:	4604      	mov	r4, r0
 80080be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80080c2:	d423      	bmi.n	800810c <HAL_PCD_EP_Open+0x5c>
 80080c4:	f50c 71a8 	add.w	r1, ip, #336	@ 0x150
 80080c8:	4401      	add	r1, r0
 80080ca:	eb0e 008e 	add.w	r0, lr, lr, lsl #2
 80080ce:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 80080d2:	f04f 0c00 	mov.w	ip, #0
 80080d6:	f880 c151 	strb.w	ip, [r0, #337]	@ 0x151
 80080da:	2b02      	cmp	r3, #2
 80080dc:	70cb      	strb	r3, [r1, #3]
 80080de:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80080e2:	bf04      	itt	eq
 80080e4:	2300      	moveq	r3, #0
 80080e6:	710b      	strbeq	r3, [r1, #4]
 80080e8:	f881 e000 	strb.w	lr, [r1]
 80080ec:	610a      	str	r2, [r1, #16]
 80080ee:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 80080f2:	2b01      	cmp	r3, #1
 80080f4:	d016      	beq.n	8008124 <HAL_PCD_EP_Open+0x74>
 80080f6:	2301      	movs	r3, #1
 80080f8:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80080fc:	6820      	ldr	r0, [r4, #0]
 80080fe:	f003 fd71 	bl	800bbe4 <USB_ActivateEndpoint>
 8008102:	2300      	movs	r3, #0
 8008104:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008108:	4618      	mov	r0, r3
 800810a:	bd10      	pop	{r4, pc}
 800810c:	f10c 0110 	add.w	r1, ip, #16
 8008110:	4401      	add	r1, r0
 8008112:	eb0e 008e 	add.w	r0, lr, lr, lsl #2
 8008116:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 800811a:	f04f 0c01 	mov.w	ip, #1
 800811e:	f880 c011 	strb.w	ip, [r0, #17]
 8008122:	e7da      	b.n	80080da <HAL_PCD_EP_Open+0x2a>
 8008124:	2002      	movs	r0, #2
 8008126:	bd10      	pop	{r4, pc}

08008128 <HAL_PCD_EP_Close>:
 8008128:	f001 0307 	and.w	r3, r1, #7
 800812c:	f001 0207 	and.w	r2, r1, #7
 8008130:	b510      	push	{r4, lr}
 8008132:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008136:	4604      	mov	r4, r0
 8008138:	0609      	lsls	r1, r1, #24
 800813a:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 800813e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8008142:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 8008146:	d416      	bmi.n	8008176 <HAL_PCD_EP_Close+0x4e>
 8008148:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800814c:	18e1      	adds	r1, r4, r3
 800814e:	f04f 0c00 	mov.w	ip, #0
 8008152:	f880 c151 	strb.w	ip, [r0, #337]	@ 0x151
 8008156:	700a      	strb	r2, [r1, #0]
 8008158:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 800815c:	2b01      	cmp	r3, #1
 800815e:	d015      	beq.n	800818c <HAL_PCD_EP_Close+0x64>
 8008160:	2301      	movs	r3, #1
 8008162:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008166:	6820      	ldr	r0, [r4, #0]
 8008168:	f003 ff5a 	bl	800c020 <USB_DeactivateEndpoint>
 800816c:	2300      	movs	r3, #0
 800816e:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008172:	4618      	mov	r0, r3
 8008174:	bd10      	pop	{r4, pc}
 8008176:	3310      	adds	r3, #16
 8008178:	18e1      	adds	r1, r4, r3
 800817a:	f04f 0c01 	mov.w	ip, #1
 800817e:	f880 c011 	strb.w	ip, [r0, #17]
 8008182:	700a      	strb	r2, [r1, #0]
 8008184:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008188:	2b01      	cmp	r3, #1
 800818a:	d1e9      	bne.n	8008160 <HAL_PCD_EP_Close+0x38>
 800818c:	2002      	movs	r0, #2
 800818e:	bd10      	pop	{r4, pc}

08008190 <HAL_PCD_EP_Receive>:
 8008190:	b510      	push	{r4, lr}
 8008192:	f001 0e07 	and.w	lr, r1, #7
 8008196:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 800819a:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 800819e:	2128      	movs	r1, #40	@ 0x28
 80081a0:	2400      	movs	r4, #0
 80081a2:	fb01 010e 	mla	r1, r1, lr, r0
 80081a6:	f8cc 2164 	str.w	r2, [ip, #356]	@ 0x164
 80081aa:	6800      	ldr	r0, [r0, #0]
 80081ac:	f88c e150 	strb.w	lr, [ip, #336]	@ 0x150
 80081b0:	e9cc 345a 	strd	r3, r4, [ip, #360]	@ 0x168
 80081b4:	f88c 4151 	strb.w	r4, [ip, #337]	@ 0x151
 80081b8:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 80081bc:	f004 f816 	bl	800c1ec <USB_EPStartXfer>
 80081c0:	4620      	mov	r0, r4
 80081c2:	bd10      	pop	{r4, pc}

080081c4 <HAL_PCD_EP_GetRxCount>:
 80081c4:	f001 0107 	and.w	r1, r1, #7
 80081c8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80081cc:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80081d0:	f8d0 016c 	ldr.w	r0, [r0, #364]	@ 0x16c
 80081d4:	4770      	bx	lr
 80081d6:	bf00      	nop

080081d8 <HAL_PCD_EP_Transmit>:
 80081d8:	b510      	push	{r4, lr}
 80081da:	f001 0e07 	and.w	lr, r1, #7
 80081de:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 80081e2:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 80081e6:	4661      	mov	r1, ip
 80081e8:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 80081ec:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
 80081f0:	2400      	movs	r4, #0
 80081f2:	2301      	movs	r3, #1
 80081f4:	6800      	ldr	r0, [r0, #0]
 80081f6:	f8cc 2024 	str.w	r2, [ip, #36]	@ 0x24
 80081fa:	3110      	adds	r1, #16
 80081fc:	f88c 3034 	strb.w	r3, [ip, #52]	@ 0x34
 8008200:	f8cc 402c 	str.w	r4, [ip, #44]	@ 0x2c
 8008204:	f88c 3011 	strb.w	r3, [ip, #17]
 8008208:	f88c e010 	strb.w	lr, [ip, #16]
 800820c:	f003 ffee 	bl	800c1ec <USB_EPStartXfer>
 8008210:	4620      	mov	r0, r4
 8008212:	bd10      	pop	{r4, pc}

08008214 <HAL_PCD_EP_SetStall>:
 8008214:	7902      	ldrb	r2, [r0, #4]
 8008216:	f001 0307 	and.w	r3, r1, #7
 800821a:	429a      	cmp	r2, r3
 800821c:	d333      	bcc.n	8008286 <HAL_PCD_EP_SetStall+0x72>
 800821e:	060a      	lsls	r2, r1, #24
 8008220:	b510      	push	{r4, lr}
 8008222:	4604      	mov	r4, r0
 8008224:	d41c      	bmi.n	8008260 <HAL_PCD_EP_SetStall+0x4c>
 8008226:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 800822a:	2028      	movs	r0, #40	@ 0x28
 800822c:	fb00 4101 	mla	r1, r0, r1, r4
 8008230:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8008234:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8008238:	2000      	movs	r0, #0
 800823a:	f882 0151 	strb.w	r0, [r2, #337]	@ 0x151
 800823e:	2201      	movs	r2, #1
 8008240:	708a      	strb	r2, [r1, #2]
 8008242:	700b      	strb	r3, [r1, #0]
 8008244:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008248:	4293      	cmp	r3, r2
 800824a:	d01a      	beq.n	8008282 <HAL_PCD_EP_SetStall+0x6e>
 800824c:	6820      	ldr	r0, [r4, #0]
 800824e:	f884 2290 	strb.w	r2, [r4, #656]	@ 0x290
 8008252:	f004 f975 	bl	800c540 <USB_EPSetStall>
 8008256:	2300      	movs	r3, #0
 8008258:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 800825c:	4618      	mov	r0, r3
 800825e:	bd10      	pop	{r4, pc}
 8008260:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8008264:	2128      	movs	r1, #40	@ 0x28
 8008266:	fb01 0103 	mla	r1, r1, r3, r0
 800826a:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 800826e:	3110      	adds	r1, #16
 8008270:	2001      	movs	r0, #1
 8008272:	7450      	strb	r0, [r2, #17]
 8008274:	2201      	movs	r2, #1
 8008276:	708a      	strb	r2, [r1, #2]
 8008278:	700b      	strb	r3, [r1, #0]
 800827a:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 800827e:	4293      	cmp	r3, r2
 8008280:	d1e4      	bne.n	800824c <HAL_PCD_EP_SetStall+0x38>
 8008282:	2002      	movs	r0, #2
 8008284:	bd10      	pop	{r4, pc}
 8008286:	2001      	movs	r0, #1
 8008288:	4770      	bx	lr
 800828a:	bf00      	nop

0800828c <HAL_PCD_EP_ClrStall>:
 800828c:	b538      	push	{r3, r4, r5, lr}
 800828e:	7902      	ldrb	r2, [r0, #4]
 8008290:	f001 030f 	and.w	r3, r1, #15
 8008294:	429a      	cmp	r2, r3
 8008296:	d332      	bcc.n	80082fe <HAL_PCD_EP_ClrStall+0x72>
 8008298:	f001 0307 	and.w	r3, r1, #7
 800829c:	f001 0207 	and.w	r2, r1, #7
 80082a0:	4604      	mov	r4, r0
 80082a2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80082a6:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 80082aa:	0609      	lsls	r1, r1, #24
 80082ac:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80082b0:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 80082b4:	d416      	bmi.n	80082e4 <HAL_PCD_EP_ClrStall+0x58>
 80082b6:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80082ba:	18e1      	adds	r1, r4, r3
 80082bc:	2500      	movs	r5, #0
 80082be:	f880 5151 	strb.w	r5, [r0, #337]	@ 0x151
 80082c2:	2500      	movs	r5, #0
 80082c4:	708d      	strb	r5, [r1, #2]
 80082c6:	700a      	strb	r2, [r1, #0]
 80082c8:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 80082cc:	2b01      	cmp	r3, #1
 80082ce:	d014      	beq.n	80082fa <HAL_PCD_EP_ClrStall+0x6e>
 80082d0:	2301      	movs	r3, #1
 80082d2:	6820      	ldr	r0, [r4, #0]
 80082d4:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80082d8:	f004 f95a 	bl	800c590 <USB_EPClearStall>
 80082dc:	f884 5290 	strb.w	r5, [r4, #656]	@ 0x290
 80082e0:	4628      	mov	r0, r5
 80082e2:	bd38      	pop	{r3, r4, r5, pc}
 80082e4:	3310      	adds	r3, #16
 80082e6:	18e1      	adds	r1, r4, r3
 80082e8:	2501      	movs	r5, #1
 80082ea:	7445      	strb	r5, [r0, #17]
 80082ec:	2500      	movs	r5, #0
 80082ee:	708d      	strb	r5, [r1, #2]
 80082f0:	700a      	strb	r2, [r1, #0]
 80082f2:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 80082f6:	2b01      	cmp	r3, #1
 80082f8:	d1ea      	bne.n	80082d0 <HAL_PCD_EP_ClrStall+0x44>
 80082fa:	2002      	movs	r0, #2
 80082fc:	bd38      	pop	{r3, r4, r5, pc}
 80082fe:	2001      	movs	r0, #1
 8008300:	bd38      	pop	{r3, r4, r5, pc}
 8008302:	bf00      	nop

08008304 <HAL_PCDEx_PMAConfig>:
 8008304:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8008308:	d00c      	beq.n	8008324 <HAL_PCDEx_PMAConfig+0x20>
 800830a:	f001 0107 	and.w	r1, r1, #7
 800830e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8008312:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8008316:	3010      	adds	r0, #16
 8008318:	b299      	uxth	r1, r3
 800831a:	b962      	cbnz	r2, 8008336 <HAL_PCDEx_PMAConfig+0x32>
 800831c:	80c1      	strh	r1, [r0, #6]
 800831e:	7302      	strb	r2, [r0, #12]
 8008320:	2000      	movs	r0, #0
 8008322:	4770      	bx	lr
 8008324:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8008328:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 800832c:	f500 70a8 	add.w	r0, r0, #336	@ 0x150
 8008330:	b299      	uxth	r1, r3
 8008332:	2a00      	cmp	r2, #0
 8008334:	d0f2      	beq.n	800831c <HAL_PCDEx_PMAConfig+0x18>
 8008336:	2201      	movs	r2, #1
 8008338:	6083      	str	r3, [r0, #8]
 800833a:	7302      	strb	r2, [r0, #12]
 800833c:	2000      	movs	r0, #0
 800833e:	4770      	bx	lr

08008340 <HAL_PCDEx_ActivateLPM>:
 8008340:	4602      	mov	r2, r0
 8008342:	2000      	movs	r0, #0
 8008344:	6811      	ldr	r1, [r2, #0]
 8008346:	b410      	push	{r4}
 8008348:	f882 02c8 	strb.w	r0, [r2, #712]	@ 0x2c8
 800834c:	f8b1 3054 	ldrh.w	r3, [r1, #84]	@ 0x54
 8008350:	2401      	movs	r4, #1
 8008352:	b29b      	uxth	r3, r3
 8008354:	4323      	orrs	r3, r4
 8008356:	f8c2 42d0 	str.w	r4, [r2, #720]	@ 0x2d0
 800835a:	f8a1 3054 	strh.w	r3, [r1, #84]	@ 0x54
 800835e:	f8b1 3054 	ldrh.w	r3, [r1, #84]	@ 0x54
 8008362:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008366:	b29b      	uxth	r3, r3
 8008368:	f043 0302 	orr.w	r3, r3, #2
 800836c:	f8a1 3054 	strh.w	r3, [r1, #84]	@ 0x54
 8008370:	4770      	bx	lr
 8008372:	bf00      	nop

08008374 <HAL_PWR_EnableBkUpAccess>:
 8008374:	4a02      	ldr	r2, [pc, #8]	@ (8008380 <HAL_PWR_EnableBkUpAccess+0xc>)
 8008376:	6813      	ldr	r3, [r2, #0]
 8008378:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800837c:	6013      	str	r3, [r2, #0]
 800837e:	4770      	bx	lr
 8008380:	58000400 	.word	0x58000400

08008384 <HAL_PWREx_GetVoltageRange>:
 8008384:	4b02      	ldr	r3, [pc, #8]	@ (8008390 <HAL_PWREx_GetVoltageRange+0xc>)
 8008386:	6818      	ldr	r0, [r3, #0]
 8008388:	f400 60c0 	and.w	r0, r0, #1536	@ 0x600
 800838c:	4770      	bx	lr
 800838e:	bf00      	nop
 8008390:	58000400 	.word	0x58000400

08008394 <HAL_PWREx_EnableVddUSB>:
 8008394:	4a02      	ldr	r2, [pc, #8]	@ (80083a0 <HAL_PWREx_EnableVddUSB+0xc>)
 8008396:	6853      	ldr	r3, [r2, #4]
 8008398:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800839c:	6053      	str	r3, [r2, #4]
 800839e:	4770      	bx	lr
 80083a0:	58000400 	.word	0x58000400

080083a4 <RCC_SetFlashLatencyFromMSIRange>:
 80083a4:	28b0      	cmp	r0, #176	@ 0xb0
 80083a6:	4b31      	ldr	r3, [pc, #196]	@ (800846c <RCC_SetFlashLatencyFromMSIRange+0xc8>)
 80083a8:	4a31      	ldr	r2, [pc, #196]	@ (8008470 <RCC_SetFlashLatencyFromMSIRange+0xcc>)
 80083aa:	bf98      	it	ls
 80083ac:	0900      	lsrls	r0, r0, #4
 80083ae:	b570      	push	{r4, r5, r6, lr}
 80083b0:	bf8c      	ite	hi
 80083b2:	6adc      	ldrhi	r4, [r3, #44]	@ 0x2c
 80083b4:	f853 4020 	ldrls.w	r4, [r3, r0, lsl #2]
 80083b8:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80083bc:	b084      	sub	sp, #16
 80083be:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 80083c2:	f003 030f 	and.w	r3, r3, #15
 80083c6:	ae04      	add	r6, sp, #16
 80083c8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80083cc:	fbb4 f4f3 	udiv	r4, r4, r3
 80083d0:	f7ff ffd8 	bl	8008384 <HAL_PWREx_GetVoltageRange>
 80083d4:	4b27      	ldr	r3, [pc, #156]	@ (8008474 <RCC_SetFlashLatencyFromMSIRange+0xd0>)
 80083d6:	4605      	mov	r5, r0
 80083d8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80083da:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
 80083de:	e906 000f 	stmdb	r6, {r0, r1, r2, r3}
 80083e2:	d029      	beq.n	8008438 <RCC_SetFlashLatencyFromMSIRange+0x94>
 80083e4:	4b24      	ldr	r3, [pc, #144]	@ (8008478 <RCC_SetFlashLatencyFromMSIRange+0xd4>)
 80083e6:	429c      	cmp	r4, r3
 80083e8:	d33a      	bcc.n	8008460 <RCC_SetFlashLatencyFromMSIRange+0xbc>
 80083ea:	f503 03b7 	add.w	r3, r3, #5996544	@ 0x5b8000
 80083ee:	f603 537f 	addw	r3, r3, #3455	@ 0xd7f
 80083f2:	429c      	cmp	r4, r3
 80083f4:	d936      	bls.n	8008464 <RCC_SetFlashLatencyFromMSIRange+0xc0>
 80083f6:	f503 1374 	add.w	r3, r3, #3997696	@ 0x3d0000
 80083fa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80083fe:	429c      	cmp	r4, r3
 8008400:	d932      	bls.n	8008468 <RCC_SetFlashLatencyFromMSIRange+0xc4>
 8008402:	2600      	movs	r6, #0
 8008404:	4c1d      	ldr	r4, [pc, #116]	@ (800847c <RCC_SetFlashLatencyFromMSIRange+0xd8>)
 8008406:	6823      	ldr	r3, [r4, #0]
 8008408:	f023 0307 	bic.w	r3, r3, #7
 800840c:	4333      	orrs	r3, r6
 800840e:	6023      	str	r3, [r4, #0]
 8008410:	f7fd f998 	bl	8005744 <HAL_GetTick>
 8008414:	4605      	mov	r5, r0
 8008416:	e004      	b.n	8008422 <RCC_SetFlashLatencyFromMSIRange+0x7e>
 8008418:	f7fd f994 	bl	8005744 <HAL_GetTick>
 800841c:	1b40      	subs	r0, r0, r5
 800841e:	2802      	cmp	r0, #2
 8008420:	d807      	bhi.n	8008432 <RCC_SetFlashLatencyFromMSIRange+0x8e>
 8008422:	6823      	ldr	r3, [r4, #0]
 8008424:	f003 0307 	and.w	r3, r3, #7
 8008428:	429e      	cmp	r6, r3
 800842a:	d1f5      	bne.n	8008418 <RCC_SetFlashLatencyFromMSIRange+0x74>
 800842c:	2000      	movs	r0, #0
 800842e:	b004      	add	sp, #16
 8008430:	bd70      	pop	{r4, r5, r6, pc}
 8008432:	2003      	movs	r0, #3
 8008434:	b004      	add	sp, #16
 8008436:	bd70      	pop	{r4, r5, r6, pc}
 8008438:	4b11      	ldr	r3, [pc, #68]	@ (8008480 <RCC_SetFlashLatencyFromMSIRange+0xdc>)
 800843a:	429c      	cmp	r4, r3
 800843c:	d910      	bls.n	8008460 <RCC_SetFlashLatencyFromMSIRange+0xbc>
 800843e:	4b11      	ldr	r3, [pc, #68]	@ (8008484 <RCC_SetFlashLatencyFromMSIRange+0xe0>)
 8008440:	429c      	cmp	r4, r3
 8008442:	d90f      	bls.n	8008464 <RCC_SetFlashLatencyFromMSIRange+0xc0>
 8008444:	4b10      	ldr	r3, [pc, #64]	@ (8008488 <RCC_SetFlashLatencyFromMSIRange+0xe4>)
 8008446:	429c      	cmp	r4, r3
 8008448:	d90e      	bls.n	8008468 <RCC_SetFlashLatencyFromMSIRange+0xc4>
 800844a:	4b10      	ldr	r3, [pc, #64]	@ (800848c <RCC_SetFlashLatencyFromMSIRange+0xe8>)
 800844c:	429c      	cmp	r4, r3
 800844e:	bf38      	it	cc
 8008450:	2303      	movcc	r3, #3
 8008452:	d2d6      	bcs.n	8008402 <RCC_SetFlashLatencyFromMSIRange+0x5e>
 8008454:	aa04      	add	r2, sp, #16
 8008456:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800845a:	f853 6c10 	ldr.w	r6, [r3, #-16]
 800845e:	e7d1      	b.n	8008404 <RCC_SetFlashLatencyFromMSIRange+0x60>
 8008460:	2300      	movs	r3, #0
 8008462:	e7f7      	b.n	8008454 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8008464:	2301      	movs	r3, #1
 8008466:	e7f5      	b.n	8008454 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8008468:	2302      	movs	r3, #2
 800846a:	e7f3      	b.n	8008454 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 800846c:	08018320 	.word	0x08018320
 8008470:	08018380 	.word	0x08018380
 8008474:	08015eec 	.word	0x08015eec
 8008478:	006acfc0 	.word	0x006acfc0
 800847c:	58004000 	.word	0x58004000
 8008480:	0121eabf 	.word	0x0121eabf
 8008484:	0234933f 	.word	0x0234933f
 8008488:	03473bbf 	.word	0x03473bbf
 800848c:	03dfd240 	.word	0x03dfd240

08008490 <HAL_RCC_GetSysClockFreq.part.0>:
 8008490:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008494:	b410      	push	{r4}
 8008496:	68d3      	ldr	r3, [r2, #12]
 8008498:	f003 0303 	and.w	r3, r3, #3
 800849c:	2b02      	cmp	r3, #2
 800849e:	d028      	beq.n	80084f2 <HAL_RCC_GetSysClockFreq.part.0+0x62>
 80084a0:	2b03      	cmp	r3, #3
 80084a2:	d11b      	bne.n	80084dc <HAL_RCC_GetSysClockFreq.part.0+0x4c>
 80084a4:	6812      	ldr	r2, [r2, #0]
 80084a6:	4b14      	ldr	r3, [pc, #80]	@ (80084f8 <HAL_RCC_GetSysClockFreq.part.0+0x68>)
 80084a8:	4c14      	ldr	r4, [pc, #80]	@ (80084fc <HAL_RCC_GetSysClockFreq.part.0+0x6c>)
 80084aa:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 80084ae:	bf08      	it	eq
 80084b0:	461c      	moveq	r4, r3
 80084b2:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80084b6:	68cb      	ldr	r3, [r1, #12]
 80084b8:	68ca      	ldr	r2, [r1, #12]
 80084ba:	68c8      	ldr	r0, [r1, #12]
 80084bc:	f3c3 2306 	ubfx	r3, r3, #8, #7
 80084c0:	f3c2 1202 	ubfx	r2, r2, #4, #3
 80084c4:	0f40      	lsrs	r0, r0, #29
 80084c6:	fb04 f303 	mul.w	r3, r4, r3
 80084ca:	3201      	adds	r2, #1
 80084cc:	3001      	adds	r0, #1
 80084ce:	fbb3 f3f2 	udiv	r3, r3, r2
 80084d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80084d6:	fbb3 f0f0 	udiv	r0, r3, r0
 80084da:	4770      	bx	lr
 80084dc:	6813      	ldr	r3, [r2, #0]
 80084de:	4a08      	ldr	r2, [pc, #32]	@ (8008500 <HAL_RCC_GetSysClockFreq.part.0+0x70>)
 80084e0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80084e4:	2bb0      	cmp	r3, #176	@ 0xb0
 80084e6:	bf28      	it	cs
 80084e8:	23b0      	movcs	r3, #176	@ 0xb0
 80084ea:	091b      	lsrs	r3, r3, #4
 80084ec:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80084f0:	e7df      	b.n	80084b2 <HAL_RCC_GetSysClockFreq.part.0+0x22>
 80084f2:	4c02      	ldr	r4, [pc, #8]	@ (80084fc <HAL_RCC_GetSysClockFreq.part.0+0x6c>)
 80084f4:	e7dd      	b.n	80084b2 <HAL_RCC_GetSysClockFreq.part.0+0x22>
 80084f6:	bf00      	nop
 80084f8:	01e84800 	.word	0x01e84800
 80084fc:	00f42400 	.word	0x00f42400
 8008500:	08018320 	.word	0x08018320

08008504 <HAL_RCC_OscConfig>:
 8008504:	2800      	cmp	r0, #0
 8008506:	f000 834a 	beq.w	8008b9e <HAL_RCC_OscConfig+0x69a>
 800850a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800850c:	6803      	ldr	r3, [r0, #0]
 800850e:	069d      	lsls	r5, r3, #26
 8008510:	4604      	mov	r4, r0
 8008512:	d529      	bpl.n	8008568 <HAL_RCC_OscConfig+0x64>
 8008514:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008518:	6893      	ldr	r3, [r2, #8]
 800851a:	68d2      	ldr	r2, [r2, #12]
 800851c:	f013 030c 	ands.w	r3, r3, #12
 8008520:	f000 80f9 	beq.w	8008716 <HAL_RCC_OscConfig+0x212>
 8008524:	2b0c      	cmp	r3, #12
 8008526:	f000 80f1 	beq.w	800870c <HAL_RCC_OscConfig+0x208>
 800852a:	69e3      	ldr	r3, [r4, #28]
 800852c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008530:	2b00      	cmp	r3, #0
 8008532:	f000 8274 	beq.w	8008a1e <HAL_RCC_OscConfig+0x51a>
 8008536:	682b      	ldr	r3, [r5, #0]
 8008538:	f043 0301 	orr.w	r3, r3, #1
 800853c:	602b      	str	r3, [r5, #0]
 800853e:	f7fd f901 	bl	8005744 <HAL_GetTick>
 8008542:	4606      	mov	r6, r0
 8008544:	682b      	ldr	r3, [r5, #0]
 8008546:	0798      	lsls	r0, r3, #30
 8008548:	f140 827a 	bpl.w	8008a40 <HAL_RCC_OscConfig+0x53c>
 800854c:	682b      	ldr	r3, [r5, #0]
 800854e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008550:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008554:	4313      	orrs	r3, r2
 8008556:	602b      	str	r3, [r5, #0]
 8008558:	686b      	ldr	r3, [r5, #4]
 800855a:	6a22      	ldr	r2, [r4, #32]
 800855c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008560:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008564:	606b      	str	r3, [r5, #4]
 8008566:	6823      	ldr	r3, [r4, #0]
 8008568:	07da      	lsls	r2, r3, #31
 800856a:	d527      	bpl.n	80085bc <HAL_RCC_OscConfig+0xb8>
 800856c:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008570:	688a      	ldr	r2, [r1, #8]
 8008572:	68c9      	ldr	r1, [r1, #12]
 8008574:	f002 020c 	and.w	r2, r2, #12
 8008578:	2a08      	cmp	r2, #8
 800857a:	f000 81f0 	beq.w	800895e <HAL_RCC_OscConfig+0x45a>
 800857e:	2a0c      	cmp	r2, #12
 8008580:	f000 81e8 	beq.w	8008954 <HAL_RCC_OscConfig+0x450>
 8008584:	6863      	ldr	r3, [r4, #4]
 8008586:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800858a:	f000 8233 	beq.w	80089f4 <HAL_RCC_OscConfig+0x4f0>
 800858e:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008592:	682a      	ldr	r2, [r5, #0]
 8008594:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8008598:	602a      	str	r2, [r5, #0]
 800859a:	2b00      	cmp	r3, #0
 800859c:	f040 8230 	bne.w	8008a00 <HAL_RCC_OscConfig+0x4fc>
 80085a0:	f7fd f8d0 	bl	8005744 <HAL_GetTick>
 80085a4:	4606      	mov	r6, r0
 80085a6:	682b      	ldr	r3, [r5, #0]
 80085a8:	039f      	lsls	r7, r3, #14
 80085aa:	d506      	bpl.n	80085ba <HAL_RCC_OscConfig+0xb6>
 80085ac:	f7fd f8ca 	bl	8005744 <HAL_GetTick>
 80085b0:	1b80      	subs	r0, r0, r6
 80085b2:	2864      	cmp	r0, #100	@ 0x64
 80085b4:	d9f7      	bls.n	80085a6 <HAL_RCC_OscConfig+0xa2>
 80085b6:	2003      	movs	r0, #3
 80085b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085ba:	6823      	ldr	r3, [r4, #0]
 80085bc:	079d      	lsls	r5, r3, #30
 80085be:	d52c      	bpl.n	800861a <HAL_RCC_OscConfig+0x116>
 80085c0:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80085c4:	688a      	ldr	r2, [r1, #8]
 80085c6:	68c9      	ldr	r1, [r1, #12]
 80085c8:	f002 020c 	and.w	r2, r2, #12
 80085cc:	2a04      	cmp	r2, #4
 80085ce:	f000 811f 	beq.w	8008810 <HAL_RCC_OscConfig+0x30c>
 80085d2:	2a0c      	cmp	r2, #12
 80085d4:	f000 8117 	beq.w	8008806 <HAL_RCC_OscConfig+0x302>
 80085d8:	68e3      	ldr	r3, [r4, #12]
 80085da:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80085de:	b183      	cbz	r3, 8008602 <HAL_RCC_OscConfig+0xfe>
 80085e0:	682b      	ldr	r3, [r5, #0]
 80085e2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80085e6:	602b      	str	r3, [r5, #0]
 80085e8:	f7fd f8ac 	bl	8005744 <HAL_GetTick>
 80085ec:	4606      	mov	r6, r0
 80085ee:	682b      	ldr	r3, [r5, #0]
 80085f0:	0558      	lsls	r0, r3, #21
 80085f2:	f100 8233 	bmi.w	8008a5c <HAL_RCC_OscConfig+0x558>
 80085f6:	f7fd f8a5 	bl	8005744 <HAL_GetTick>
 80085fa:	1b80      	subs	r0, r0, r6
 80085fc:	2802      	cmp	r0, #2
 80085fe:	d9f6      	bls.n	80085ee <HAL_RCC_OscConfig+0xea>
 8008600:	e7d9      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008602:	682b      	ldr	r3, [r5, #0]
 8008604:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008608:	602b      	str	r3, [r5, #0]
 800860a:	f7fd f89b 	bl	8005744 <HAL_GetTick>
 800860e:	4606      	mov	r6, r0
 8008610:	682b      	ldr	r3, [r5, #0]
 8008612:	0559      	lsls	r1, r3, #21
 8008614:	f100 822b 	bmi.w	8008a6e <HAL_RCC_OscConfig+0x56a>
 8008618:	6823      	ldr	r3, [r4, #0]
 800861a:	f013 0f18 	tst.w	r3, #24
 800861e:	d023      	beq.n	8008668 <HAL_RCC_OscConfig+0x164>
 8008620:	6962      	ldr	r2, [r4, #20]
 8008622:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008626:	2a00      	cmp	r2, #0
 8008628:	f000 80ff 	beq.w	800882a <HAL_RCC_OscConfig+0x326>
 800862c:	f013 0f10 	tst.w	r3, #16
 8008630:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008634:	f000 8234 	beq.w	8008aa0 <HAL_RCC_OscConfig+0x59c>
 8008638:	079a      	lsls	r2, r3, #30
 800863a:	f100 81a3 	bmi.w	8008984 <HAL_RCC_OscConfig+0x480>
 800863e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008642:	f043 0301 	orr.w	r3, r3, #1
 8008646:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800864a:	f7fd f87b 	bl	8005744 <HAL_GetTick>
 800864e:	4606      	mov	r6, r0
 8008650:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008654:	079b      	lsls	r3, r3, #30
 8008656:	f100 8195 	bmi.w	8008984 <HAL_RCC_OscConfig+0x480>
 800865a:	f7fd f873 	bl	8005744 <HAL_GetTick>
 800865e:	1b80      	subs	r0, r0, r6
 8008660:	2802      	cmp	r0, #2
 8008662:	d9f5      	bls.n	8008650 <HAL_RCC_OscConfig+0x14c>
 8008664:	e7a7      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008666:	6823      	ldr	r3, [r4, #0]
 8008668:	0758      	lsls	r0, r3, #29
 800866a:	d422      	bmi.n	80086b2 <HAL_RCC_OscConfig+0x1ae>
 800866c:	0658      	lsls	r0, r3, #25
 800866e:	d51b      	bpl.n	80086a8 <HAL_RCC_OscConfig+0x1a4>
 8008670:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008672:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008676:	2b00      	cmp	r3, #0
 8008678:	f000 80b1 	beq.w	80087de <HAL_RCC_OscConfig+0x2da>
 800867c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8008680:	f043 0301 	orr.w	r3, r3, #1
 8008684:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 8008688:	f7fd f85c 	bl	8005744 <HAL_GetTick>
 800868c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8008690:	0799      	lsls	r1, r3, #30
 8008692:	4606      	mov	r6, r0
 8008694:	d408      	bmi.n	80086a8 <HAL_RCC_OscConfig+0x1a4>
 8008696:	f7fd f855 	bl	8005744 <HAL_GetTick>
 800869a:	1b80      	subs	r0, r0, r6
 800869c:	2802      	cmp	r0, #2
 800869e:	d88a      	bhi.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 80086a0:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80086a4:	0799      	lsls	r1, r3, #30
 80086a6:	d5f6      	bpl.n	8008696 <HAL_RCC_OscConfig+0x192>
 80086a8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	d177      	bne.n	800879e <HAL_RCC_OscConfig+0x29a>
 80086ae:	2000      	movs	r0, #0
 80086b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80086b2:	4dae      	ldr	r5, [pc, #696]	@ (800896c <HAL_RCC_OscConfig+0x468>)
 80086b4:	682b      	ldr	r3, [r5, #0]
 80086b6:	05d9      	lsls	r1, r3, #23
 80086b8:	f140 80db 	bpl.w	8008872 <HAL_RCC_OscConfig+0x36e>
 80086bc:	68a3      	ldr	r3, [r4, #8]
 80086be:	2b01      	cmp	r3, #1
 80086c0:	f000 812f 	beq.w	8008922 <HAL_RCC_OscConfig+0x41e>
 80086c4:	2b05      	cmp	r3, #5
 80086c6:	f000 821a 	beq.w	8008afe <HAL_RCC_OscConfig+0x5fa>
 80086ca:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80086ce:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 80086d2:	f022 0201 	bic.w	r2, r2, #1
 80086d6:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 80086da:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 80086de:	f022 0204 	bic.w	r2, r2, #4
 80086e2:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 80086e6:	2b00      	cmp	r3, #0
 80086e8:	f040 8123 	bne.w	8008932 <HAL_RCC_OscConfig+0x42e>
 80086ec:	f7fd f82a 	bl	8005744 <HAL_GetTick>
 80086f0:	4606      	mov	r6, r0
 80086f2:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 80086f6:	079f      	lsls	r7, r3, #30
 80086f8:	f140 8136 	bpl.w	8008968 <HAL_RCC_OscConfig+0x464>
 80086fc:	f7fd f822 	bl	8005744 <HAL_GetTick>
 8008700:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008704:	1b80      	subs	r0, r0, r6
 8008706:	4298      	cmp	r0, r3
 8008708:	d9f3      	bls.n	80086f2 <HAL_RCC_OscConfig+0x1ee>
 800870a:	e754      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 800870c:	f002 0203 	and.w	r2, r2, #3
 8008710:	2a01      	cmp	r2, #1
 8008712:	f47f af0a 	bne.w	800852a <HAL_RCC_OscConfig+0x26>
 8008716:	69e3      	ldr	r3, [r4, #28]
 8008718:	2b00      	cmp	r3, #0
 800871a:	d03e      	beq.n	800879a <HAL_RCC_OscConfig+0x296>
 800871c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008720:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8008722:	682b      	ldr	r3, [r5, #0]
 8008724:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008728:	2bb0      	cmp	r3, #176	@ 0xb0
 800872a:	bf28      	it	cs
 800872c:	23b0      	movcs	r3, #176	@ 0xb0
 800872e:	4298      	cmp	r0, r3
 8008730:	f240 81a4 	bls.w	8008a7c <HAL_RCC_OscConfig+0x578>
 8008734:	f7ff fe36 	bl	80083a4 <RCC_SetFlashLatencyFromMSIRange>
 8008738:	bb78      	cbnz	r0, 800879a <HAL_RCC_OscConfig+0x296>
 800873a:	682b      	ldr	r3, [r5, #0]
 800873c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800873e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008742:	4313      	orrs	r3, r2
 8008744:	602b      	str	r3, [r5, #0]
 8008746:	686b      	ldr	r3, [r5, #4]
 8008748:	6a22      	ldr	r2, [r4, #32]
 800874a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800874e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008752:	606b      	str	r3, [r5, #4]
 8008754:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008758:	6893      	ldr	r3, [r2, #8]
 800875a:	f013 030c 	ands.w	r3, r3, #12
 800875e:	f000 81c3 	beq.w	8008ae8 <HAL_RCC_OscConfig+0x5e4>
 8008762:	2b04      	cmp	r3, #4
 8008764:	f000 8219 	beq.w	8008b9a <HAL_RCC_OscConfig+0x696>
 8008768:	2b08      	cmp	r3, #8
 800876a:	f000 820e 	beq.w	8008b8a <HAL_RCC_OscConfig+0x686>
 800876e:	f7ff fe8f 	bl	8008490 <HAL_RCC_GetSysClockFreq.part.0>
 8008772:	4603      	mov	r3, r0
 8008774:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008778:	487d      	ldr	r0, [pc, #500]	@ (8008970 <HAL_RCC_OscConfig+0x46c>)
 800877a:	6892      	ldr	r2, [r2, #8]
 800877c:	497d      	ldr	r1, [pc, #500]	@ (8008974 <HAL_RCC_OscConfig+0x470>)
 800877e:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8008782:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8008786:	4a7c      	ldr	r2, [pc, #496]	@ (8008978 <HAL_RCC_OscConfig+0x474>)
 8008788:	fbb3 f3f0 	udiv	r3, r3, r0
 800878c:	6810      	ldr	r0, [r2, #0]
 800878e:	600b      	str	r3, [r1, #0]
 8008790:	f7fc faa8 	bl	8004ce4 <HAL_InitTick>
 8008794:	2800      	cmp	r0, #0
 8008796:	f43f aee6 	beq.w	8008566 <HAL_RCC_OscConfig+0x62>
 800879a:	2001      	movs	r0, #1
 800879c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800879e:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80087a2:	2b02      	cmp	r3, #2
 80087a4:	68aa      	ldr	r2, [r5, #8]
 80087a6:	68e9      	ldr	r1, [r5, #12]
 80087a8:	f002 020c 	and.w	r2, r2, #12
 80087ac:	d071      	beq.n	8008892 <HAL_RCC_OscConfig+0x38e>
 80087ae:	2a0c      	cmp	r2, #12
 80087b0:	d0f3      	beq.n	800879a <HAL_RCC_OscConfig+0x296>
 80087b2:	682b      	ldr	r3, [r5, #0]
 80087b4:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80087b8:	602b      	str	r3, [r5, #0]
 80087ba:	f7fc ffc3 	bl	8005744 <HAL_GetTick>
 80087be:	4604      	mov	r4, r0
 80087c0:	e005      	b.n	80087ce <HAL_RCC_OscConfig+0x2ca>
 80087c2:	f7fc ffbf 	bl	8005744 <HAL_GetTick>
 80087c6:	1b00      	subs	r0, r0, r4
 80087c8:	2802      	cmp	r0, #2
 80087ca:	f63f aef4 	bhi.w	80085b6 <HAL_RCC_OscConfig+0xb2>
 80087ce:	682b      	ldr	r3, [r5, #0]
 80087d0:	019b      	lsls	r3, r3, #6
 80087d2:	d4f6      	bmi.n	80087c2 <HAL_RCC_OscConfig+0x2be>
 80087d4:	68ea      	ldr	r2, [r5, #12]
 80087d6:	4b69      	ldr	r3, [pc, #420]	@ (800897c <HAL_RCC_OscConfig+0x478>)
 80087d8:	4013      	ands	r3, r2
 80087da:	60eb      	str	r3, [r5, #12]
 80087dc:	e767      	b.n	80086ae <HAL_RCC_OscConfig+0x1aa>
 80087de:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80087e2:	f023 0301 	bic.w	r3, r3, #1
 80087e6:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 80087ea:	f7fc ffab 	bl	8005744 <HAL_GetTick>
 80087ee:	4606      	mov	r6, r0
 80087f0:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80087f4:	079a      	lsls	r2, r3, #30
 80087f6:	f57f af57 	bpl.w	80086a8 <HAL_RCC_OscConfig+0x1a4>
 80087fa:	f7fc ffa3 	bl	8005744 <HAL_GetTick>
 80087fe:	1b80      	subs	r0, r0, r6
 8008800:	2802      	cmp	r0, #2
 8008802:	d9f5      	bls.n	80087f0 <HAL_RCC_OscConfig+0x2ec>
 8008804:	e6d7      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008806:	f001 0103 	and.w	r1, r1, #3
 800880a:	2902      	cmp	r1, #2
 800880c:	f47f aee4 	bne.w	80085d8 <HAL_RCC_OscConfig+0xd4>
 8008810:	68e2      	ldr	r2, [r4, #12]
 8008812:	2a00      	cmp	r2, #0
 8008814:	d0c1      	beq.n	800879a <HAL_RCC_OscConfig+0x296>
 8008816:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 800881a:	6920      	ldr	r0, [r4, #16]
 800881c:	684a      	ldr	r2, [r1, #4]
 800881e:	f022 42fe 	bic.w	r2, r2, #2130706432	@ 0x7f000000
 8008822:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8008826:	604a      	str	r2, [r1, #4]
 8008828:	e6f7      	b.n	800861a <HAL_RCC_OscConfig+0x116>
 800882a:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800882e:	f023 0304 	bic.w	r3, r3, #4
 8008832:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008836:	f7fc ff85 	bl	8005744 <HAL_GetTick>
 800883a:	4606      	mov	r6, r0
 800883c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008840:	071b      	lsls	r3, r3, #28
 8008842:	f100 8104 	bmi.w	8008a4e <HAL_RCC_OscConfig+0x54a>
 8008846:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800884a:	f023 0301 	bic.w	r3, r3, #1
 800884e:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008852:	f7fc ff77 	bl	8005744 <HAL_GetTick>
 8008856:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800885a:	4605      	mov	r5, r0
 800885c:	f8d6 3094 	ldr.w	r3, [r6, #148]	@ 0x94
 8008860:	079f      	lsls	r7, r3, #30
 8008862:	f57f af00 	bpl.w	8008666 <HAL_RCC_OscConfig+0x162>
 8008866:	f7fc ff6d 	bl	8005744 <HAL_GetTick>
 800886a:	1b40      	subs	r0, r0, r5
 800886c:	2802      	cmp	r0, #2
 800886e:	d9f5      	bls.n	800885c <HAL_RCC_OscConfig+0x358>
 8008870:	e6a1      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008872:	f7ff fd7f 	bl	8008374 <HAL_PWR_EnableBkUpAccess>
 8008876:	f7fc ff65 	bl	8005744 <HAL_GetTick>
 800887a:	4606      	mov	r6, r0
 800887c:	e005      	b.n	800888a <HAL_RCC_OscConfig+0x386>
 800887e:	f7fc ff61 	bl	8005744 <HAL_GetTick>
 8008882:	1b80      	subs	r0, r0, r6
 8008884:	2802      	cmp	r0, #2
 8008886:	f63f ae96 	bhi.w	80085b6 <HAL_RCC_OscConfig+0xb2>
 800888a:	682b      	ldr	r3, [r5, #0]
 800888c:	05da      	lsls	r2, r3, #23
 800888e:	d5f6      	bpl.n	800887e <HAL_RCC_OscConfig+0x37a>
 8008890:	e714      	b.n	80086bc <HAL_RCC_OscConfig+0x1b8>
 8008892:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008894:	f001 0303 	and.w	r3, r1, #3
 8008898:	4283      	cmp	r3, r0
 800889a:	f000 813f 	beq.w	8008b1c <HAL_RCC_OscConfig+0x618>
 800889e:	2a0c      	cmp	r2, #12
 80088a0:	f43f af7b 	beq.w	800879a <HAL_RCC_OscConfig+0x296>
 80088a4:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80088a8:	682b      	ldr	r3, [r5, #0]
 80088aa:	015b      	lsls	r3, r3, #5
 80088ac:	f53f af75 	bmi.w	800879a <HAL_RCC_OscConfig+0x296>
 80088b0:	682b      	ldr	r3, [r5, #0]
 80088b2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80088b6:	602b      	str	r3, [r5, #0]
 80088b8:	f7fc ff44 	bl	8005744 <HAL_GetTick>
 80088bc:	4606      	mov	r6, r0
 80088be:	e005      	b.n	80088cc <HAL_RCC_OscConfig+0x3c8>
 80088c0:	f7fc ff40 	bl	8005744 <HAL_GetTick>
 80088c4:	1b80      	subs	r0, r0, r6
 80088c6:	2802      	cmp	r0, #2
 80088c8:	f63f ae75 	bhi.w	80085b6 <HAL_RCC_OscConfig+0xb2>
 80088cc:	682b      	ldr	r3, [r5, #0]
 80088ce:	019f      	lsls	r7, r3, #6
 80088d0:	d4f6      	bmi.n	80088c0 <HAL_RCC_OscConfig+0x3bc>
 80088d2:	e9d4 320c 	ldrd	r3, r2, [r4, #48]	@ 0x30
 80088d6:	68e9      	ldr	r1, [r5, #12]
 80088d8:	4313      	orrs	r3, r2
 80088da:	4a29      	ldr	r2, [pc, #164]	@ (8008980 <HAL_RCC_OscConfig+0x47c>)
 80088dc:	400a      	ands	r2, r1
 80088de:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 80088e0:	4313      	orrs	r3, r2
 80088e2:	430b      	orrs	r3, r1
 80088e4:	e9d4 0110 	ldrd	r0, r1, [r4, #64]	@ 0x40
 80088e8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80088ea:	4303      	orrs	r3, r0
 80088ec:	430b      	orrs	r3, r1
 80088ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80088f2:	60eb      	str	r3, [r5, #12]
 80088f4:	682b      	ldr	r3, [r5, #0]
 80088f6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80088fa:	602b      	str	r3, [r5, #0]
 80088fc:	68eb      	ldr	r3, [r5, #12]
 80088fe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008902:	60eb      	str	r3, [r5, #12]
 8008904:	f7fc ff1e 	bl	8005744 <HAL_GetTick>
 8008908:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 800890c:	4604      	mov	r4, r0
 800890e:	682b      	ldr	r3, [r5, #0]
 8008910:	0198      	lsls	r0, r3, #6
 8008912:	f53f aecc 	bmi.w	80086ae <HAL_RCC_OscConfig+0x1aa>
 8008916:	f7fc ff15 	bl	8005744 <HAL_GetTick>
 800891a:	1b00      	subs	r0, r0, r4
 800891c:	2802      	cmp	r0, #2
 800891e:	d9f6      	bls.n	800890e <HAL_RCC_OscConfig+0x40a>
 8008920:	e649      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008922:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008926:	f8d2 3090 	ldr.w	r3, [r2, #144]	@ 0x90
 800892a:	f043 0301 	orr.w	r3, r3, #1
 800892e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8008932:	f7fc ff07 	bl	8005744 <HAL_GetTick>
 8008936:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800893a:	4605      	mov	r5, r0
 800893c:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 8008940:	079b      	lsls	r3, r3, #30
 8008942:	d411      	bmi.n	8008968 <HAL_RCC_OscConfig+0x464>
 8008944:	f7fc fefe 	bl	8005744 <HAL_GetTick>
 8008948:	f241 3388 	movw	r3, #5000	@ 0x1388
 800894c:	1b40      	subs	r0, r0, r5
 800894e:	4298      	cmp	r0, r3
 8008950:	d9f4      	bls.n	800893c <HAL_RCC_OscConfig+0x438>
 8008952:	e630      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008954:	f001 0103 	and.w	r1, r1, #3
 8008958:	2903      	cmp	r1, #3
 800895a:	f47f ae13 	bne.w	8008584 <HAL_RCC_OscConfig+0x80>
 800895e:	6862      	ldr	r2, [r4, #4]
 8008960:	2a00      	cmp	r2, #0
 8008962:	f47f ae2b 	bne.w	80085bc <HAL_RCC_OscConfig+0xb8>
 8008966:	e718      	b.n	800879a <HAL_RCC_OscConfig+0x296>
 8008968:	6823      	ldr	r3, [r4, #0]
 800896a:	e67f      	b.n	800866c <HAL_RCC_OscConfig+0x168>
 800896c:	58000400 	.word	0x58000400
 8008970:	08018380 	.word	0x08018380
 8008974:	20000034 	.word	0x20000034
 8008978:	2000003c 	.word	0x2000003c
 800897c:	eefefffc 	.word	0xeefefffc
 8008980:	11c1808c 	.word	0x11c1808c
 8008984:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008988:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800898c:	f043 0304 	orr.w	r3, r3, #4
 8008990:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008994:	f7fc fed6 	bl	8005744 <HAL_GetTick>
 8008998:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800899c:	071f      	lsls	r7, r3, #28
 800899e:	4606      	mov	r6, r0
 80089a0:	d409      	bmi.n	80089b6 <HAL_RCC_OscConfig+0x4b2>
 80089a2:	f7fc fecf 	bl	8005744 <HAL_GetTick>
 80089a6:	1b80      	subs	r0, r0, r6
 80089a8:	2803      	cmp	r0, #3
 80089aa:	f63f ae04 	bhi.w	80085b6 <HAL_RCC_OscConfig+0xb2>
 80089ae:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089b2:	071f      	lsls	r7, r3, #28
 80089b4:	d5f5      	bpl.n	80089a2 <HAL_RCC_OscConfig+0x49e>
 80089b6:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089ba:	69a2      	ldr	r2, [r4, #24]
 80089bc:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80089c0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80089c4:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80089c8:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089cc:	f023 0301 	bic.w	r3, r3, #1
 80089d0:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80089d4:	f7fc feb6 	bl	8005744 <HAL_GetTick>
 80089d8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80089dc:	4605      	mov	r5, r0
 80089de:	f8d6 3094 	ldr.w	r3, [r6, #148]	@ 0x94
 80089e2:	0798      	lsls	r0, r3, #30
 80089e4:	f57f ae3f 	bpl.w	8008666 <HAL_RCC_OscConfig+0x162>
 80089e8:	f7fc feac 	bl	8005744 <HAL_GetTick>
 80089ec:	1b40      	subs	r0, r0, r5
 80089ee:	2802      	cmp	r0, #2
 80089f0:	d9f5      	bls.n	80089de <HAL_RCC_OscConfig+0x4da>
 80089f2:	e5e0      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 80089f4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80089f8:	6813      	ldr	r3, [r2, #0]
 80089fa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80089fe:	6013      	str	r3, [r2, #0]
 8008a00:	f7fc fea0 	bl	8005744 <HAL_GetTick>
 8008a04:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008a08:	4605      	mov	r5, r0
 8008a0a:	6833      	ldr	r3, [r6, #0]
 8008a0c:	039b      	lsls	r3, r3, #14
 8008a0e:	f53f add4 	bmi.w	80085ba <HAL_RCC_OscConfig+0xb6>
 8008a12:	f7fc fe97 	bl	8005744 <HAL_GetTick>
 8008a16:	1b40      	subs	r0, r0, r5
 8008a18:	2864      	cmp	r0, #100	@ 0x64
 8008a1a:	d9f6      	bls.n	8008a0a <HAL_RCC_OscConfig+0x506>
 8008a1c:	e5cb      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008a1e:	682b      	ldr	r3, [r5, #0]
 8008a20:	f023 0301 	bic.w	r3, r3, #1
 8008a24:	602b      	str	r3, [r5, #0]
 8008a26:	f7fc fe8d 	bl	8005744 <HAL_GetTick>
 8008a2a:	4606      	mov	r6, r0
 8008a2c:	682b      	ldr	r3, [r5, #0]
 8008a2e:	0799      	lsls	r1, r3, #30
 8008a30:	f57f ad99 	bpl.w	8008566 <HAL_RCC_OscConfig+0x62>
 8008a34:	f7fc fe86 	bl	8005744 <HAL_GetTick>
 8008a38:	1b80      	subs	r0, r0, r6
 8008a3a:	2802      	cmp	r0, #2
 8008a3c:	d9f6      	bls.n	8008a2c <HAL_RCC_OscConfig+0x528>
 8008a3e:	e5ba      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008a40:	f7fc fe80 	bl	8005744 <HAL_GetTick>
 8008a44:	1b80      	subs	r0, r0, r6
 8008a46:	2802      	cmp	r0, #2
 8008a48:	f67f ad7c 	bls.w	8008544 <HAL_RCC_OscConfig+0x40>
 8008a4c:	e5b3      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008a4e:	f7fc fe79 	bl	8005744 <HAL_GetTick>
 8008a52:	1b80      	subs	r0, r0, r6
 8008a54:	2803      	cmp	r0, #3
 8008a56:	f67f aef1 	bls.w	800883c <HAL_RCC_OscConfig+0x338>
 8008a5a:	e5ac      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008a5c:	686b      	ldr	r3, [r5, #4]
 8008a5e:	6922      	ldr	r2, [r4, #16]
 8008a60:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 8008a64:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008a68:	606b      	str	r3, [r5, #4]
 8008a6a:	6823      	ldr	r3, [r4, #0]
 8008a6c:	e5d5      	b.n	800861a <HAL_RCC_OscConfig+0x116>
 8008a6e:	f7fc fe69 	bl	8005744 <HAL_GetTick>
 8008a72:	1b80      	subs	r0, r0, r6
 8008a74:	2802      	cmp	r0, #2
 8008a76:	f67f adcb 	bls.w	8008610 <HAL_RCC_OscConfig+0x10c>
 8008a7a:	e59c      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008a7c:	682b      	ldr	r3, [r5, #0]
 8008a7e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008a82:	4303      	orrs	r3, r0
 8008a84:	602b      	str	r3, [r5, #0]
 8008a86:	686b      	ldr	r3, [r5, #4]
 8008a88:	6a22      	ldr	r2, [r4, #32]
 8008a8a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008a8e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008a92:	606b      	str	r3, [r5, #4]
 8008a94:	f7ff fc86 	bl	80083a4 <RCC_SetFlashLatencyFromMSIRange>
 8008a98:	2800      	cmp	r0, #0
 8008a9a:	f43f ae5b 	beq.w	8008754 <HAL_RCC_OscConfig+0x250>
 8008a9e:	e67c      	b.n	800879a <HAL_RCC_OscConfig+0x296>
 8008aa0:	f043 0301 	orr.w	r3, r3, #1
 8008aa4:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008aa8:	f7fc fe4c 	bl	8005744 <HAL_GetTick>
 8008aac:	4606      	mov	r6, r0
 8008aae:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008ab2:	0799      	lsls	r1, r3, #30
 8008ab4:	d405      	bmi.n	8008ac2 <HAL_RCC_OscConfig+0x5be>
 8008ab6:	f7fc fe45 	bl	8005744 <HAL_GetTick>
 8008aba:	1b80      	subs	r0, r0, r6
 8008abc:	2802      	cmp	r0, #2
 8008abe:	d9f6      	bls.n	8008aae <HAL_RCC_OscConfig+0x5aa>
 8008ac0:	e579      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008ac2:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008ac6:	f023 0304 	bic.w	r3, r3, #4
 8008aca:	f04f 47b0 	mov.w	r7, #1476395008	@ 0x58000000
 8008ace:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008ad2:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8008ad6:	071a      	lsls	r2, r3, #28
 8008ad8:	f57f adc5 	bpl.w	8008666 <HAL_RCC_OscConfig+0x162>
 8008adc:	f7fc fe32 	bl	8005744 <HAL_GetTick>
 8008ae0:	1b80      	subs	r0, r0, r6
 8008ae2:	2803      	cmp	r0, #3
 8008ae4:	d9f5      	bls.n	8008ad2 <HAL_RCC_OscConfig+0x5ce>
 8008ae6:	e566      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008ae8:	6813      	ldr	r3, [r2, #0]
 8008aea:	4a2e      	ldr	r2, [pc, #184]	@ (8008ba4 <HAL_RCC_OscConfig+0x6a0>)
 8008aec:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008af0:	2bb0      	cmp	r3, #176	@ 0xb0
 8008af2:	bf28      	it	cs
 8008af4:	23b0      	movcs	r3, #176	@ 0xb0
 8008af6:	091b      	lsrs	r3, r3, #4
 8008af8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008afc:	e63a      	b.n	8008774 <HAL_RCC_OscConfig+0x270>
 8008afe:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008b02:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 8008b06:	f042 0204 	orr.w	r2, r2, #4
 8008b0a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008b0e:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 8008b12:	f042 0201 	orr.w	r2, r2, #1
 8008b16:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008b1a:	e70a      	b.n	8008932 <HAL_RCC_OscConfig+0x42e>
 8008b1c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8008b1e:	f001 0370 	and.w	r3, r1, #112	@ 0x70
 8008b22:	4283      	cmp	r3, r0
 8008b24:	f47f aebb 	bne.w	800889e <HAL_RCC_OscConfig+0x39a>
 8008b28:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8008b2a:	f3c1 2306 	ubfx	r3, r1, #8, #7
 8008b2e:	4283      	cmp	r3, r0
 8008b30:	f47f aeb5 	bne.w	800889e <HAL_RCC_OscConfig+0x39a>
 8008b34:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8008b36:	f401 1378 	and.w	r3, r1, #4063232	@ 0x3e0000
 8008b3a:	4283      	cmp	r3, r0
 8008b3c:	f47f aeaf 	bne.w	800889e <HAL_RCC_OscConfig+0x39a>
 8008b40:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8008b42:	f001 6360 	and.w	r3, r1, #234881024	@ 0xe000000
 8008b46:	4283      	cmp	r3, r0
 8008b48:	f47f aea9 	bne.w	800889e <HAL_RCC_OscConfig+0x39a>
 8008b4c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8008b4e:	f001 4160 	and.w	r1, r1, #3758096384	@ 0xe0000000
 8008b52:	4299      	cmp	r1, r3
 8008b54:	f47f aea3 	bne.w	800889e <HAL_RCC_OscConfig+0x39a>
 8008b58:	682b      	ldr	r3, [r5, #0]
 8008b5a:	0199      	lsls	r1, r3, #6
 8008b5c:	f53f ada7 	bmi.w	80086ae <HAL_RCC_OscConfig+0x1aa>
 8008b60:	682b      	ldr	r3, [r5, #0]
 8008b62:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8008b66:	602b      	str	r3, [r5, #0]
 8008b68:	68eb      	ldr	r3, [r5, #12]
 8008b6a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008b6e:	60eb      	str	r3, [r5, #12]
 8008b70:	f7fc fde8 	bl	8005744 <HAL_GetTick>
 8008b74:	4604      	mov	r4, r0
 8008b76:	682b      	ldr	r3, [r5, #0]
 8008b78:	019a      	lsls	r2, r3, #6
 8008b7a:	f53f ad98 	bmi.w	80086ae <HAL_RCC_OscConfig+0x1aa>
 8008b7e:	f7fc fde1 	bl	8005744 <HAL_GetTick>
 8008b82:	1b03      	subs	r3, r0, r4
 8008b84:	2b02      	cmp	r3, #2
 8008b86:	d9f6      	bls.n	8008b76 <HAL_RCC_OscConfig+0x672>
 8008b88:	e515      	b.n	80085b6 <HAL_RCC_OscConfig+0xb2>
 8008b8a:	6811      	ldr	r1, [r2, #0]
 8008b8c:	4a06      	ldr	r2, [pc, #24]	@ (8008ba8 <HAL_RCC_OscConfig+0x6a4>)
 8008b8e:	4b07      	ldr	r3, [pc, #28]	@ (8008bac <HAL_RCC_OscConfig+0x6a8>)
 8008b90:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8008b94:	bf08      	it	eq
 8008b96:	4613      	moveq	r3, r2
 8008b98:	e5ec      	b.n	8008774 <HAL_RCC_OscConfig+0x270>
 8008b9a:	4b04      	ldr	r3, [pc, #16]	@ (8008bac <HAL_RCC_OscConfig+0x6a8>)
 8008b9c:	e5ea      	b.n	8008774 <HAL_RCC_OscConfig+0x270>
 8008b9e:	2001      	movs	r0, #1
 8008ba0:	4770      	bx	lr
 8008ba2:	bf00      	nop
 8008ba4:	08018320 	.word	0x08018320
 8008ba8:	01e84800 	.word	0x01e84800
 8008bac:	00f42400 	.word	0x00f42400

08008bb0 <HAL_RCC_ClockConfig>:
 8008bb0:	2800      	cmp	r0, #0
 8008bb2:	f000 8130 	beq.w	8008e16 <HAL_RCC_ClockConfig+0x266>
 8008bb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008bba:	4e9d      	ldr	r6, [pc, #628]	@ (8008e30 <HAL_RCC_ClockConfig+0x280>)
 8008bbc:	6833      	ldr	r3, [r6, #0]
 8008bbe:	f003 0307 	and.w	r3, r3, #7
 8008bc2:	428b      	cmp	r3, r1
 8008bc4:	460c      	mov	r4, r1
 8008bc6:	4605      	mov	r5, r0
 8008bc8:	f0c0 80d9 	bcc.w	8008d7e <HAL_RCC_ClockConfig+0x1ce>
 8008bcc:	682b      	ldr	r3, [r5, #0]
 8008bce:	079a      	lsls	r2, r3, #30
 8008bd0:	d472      	bmi.n	8008cb8 <HAL_RCC_ClockConfig+0x108>
 8008bd2:	0698      	lsls	r0, r3, #26
 8008bd4:	f100 8082 	bmi.w	8008cdc <HAL_RCC_ClockConfig+0x12c>
 8008bd8:	065a      	lsls	r2, r3, #25
 8008bda:	f100 8094 	bmi.w	8008d06 <HAL_RCC_ClockConfig+0x156>
 8008bde:	0758      	lsls	r0, r3, #29
 8008be0:	f100 80a7 	bmi.w	8008d32 <HAL_RCC_ClockConfig+0x182>
 8008be4:	071a      	lsls	r2, r3, #28
 8008be6:	f100 80b6 	bmi.w	8008d56 <HAL_RCC_ClockConfig+0x1a6>
 8008bea:	07df      	lsls	r7, r3, #31
 8008bec:	d529      	bpl.n	8008c42 <HAL_RCC_ClockConfig+0x92>
 8008bee:	686b      	ldr	r3, [r5, #4]
 8008bf0:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008bf4:	2b02      	cmp	r3, #2
 8008bf6:	6812      	ldr	r2, [r2, #0]
 8008bf8:	f000 8106 	beq.w	8008e08 <HAL_RCC_ClockConfig+0x258>
 8008bfc:	2b03      	cmp	r3, #3
 8008bfe:	f000 80fd 	beq.w	8008dfc <HAL_RCC_ClockConfig+0x24c>
 8008c02:	2b00      	cmp	r3, #0
 8008c04:	f040 8104 	bne.w	8008e10 <HAL_RCC_ClockConfig+0x260>
 8008c08:	0791      	lsls	r1, r2, #30
 8008c0a:	f140 80fa 	bpl.w	8008e02 <HAL_RCC_ClockConfig+0x252>
 8008c0e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008c12:	f241 3888 	movw	r8, #5000	@ 0x1388
 8008c16:	68b2      	ldr	r2, [r6, #8]
 8008c18:	f022 0203 	bic.w	r2, r2, #3
 8008c1c:	4313      	orrs	r3, r2
 8008c1e:	60b3      	str	r3, [r6, #8]
 8008c20:	f7fc fd90 	bl	8005744 <HAL_GetTick>
 8008c24:	4607      	mov	r7, r0
 8008c26:	e005      	b.n	8008c34 <HAL_RCC_ClockConfig+0x84>
 8008c28:	f7fc fd8c 	bl	8005744 <HAL_GetTick>
 8008c2c:	1bc0      	subs	r0, r0, r7
 8008c2e:	4540      	cmp	r0, r8
 8008c30:	f200 80b8 	bhi.w	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008c34:	68b3      	ldr	r3, [r6, #8]
 8008c36:	686a      	ldr	r2, [r5, #4]
 8008c38:	f003 030c 	and.w	r3, r3, #12
 8008c3c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008c40:	d1f2      	bne.n	8008c28 <HAL_RCC_ClockConfig+0x78>
 8008c42:	4d7b      	ldr	r5, [pc, #492]	@ (8008e30 <HAL_RCC_ClockConfig+0x280>)
 8008c44:	682b      	ldr	r3, [r5, #0]
 8008c46:	f003 0307 	and.w	r3, r3, #7
 8008c4a:	42a3      	cmp	r3, r4
 8008c4c:	d913      	bls.n	8008c76 <HAL_RCC_ClockConfig+0xc6>
 8008c4e:	682b      	ldr	r3, [r5, #0]
 8008c50:	f023 0307 	bic.w	r3, r3, #7
 8008c54:	4323      	orrs	r3, r4
 8008c56:	602b      	str	r3, [r5, #0]
 8008c58:	f7fc fd74 	bl	8005744 <HAL_GetTick>
 8008c5c:	4606      	mov	r6, r0
 8008c5e:	e005      	b.n	8008c6c <HAL_RCC_ClockConfig+0xbc>
 8008c60:	f7fc fd70 	bl	8005744 <HAL_GetTick>
 8008c64:	1b80      	subs	r0, r0, r6
 8008c66:	2802      	cmp	r0, #2
 8008c68:	f200 809c 	bhi.w	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008c6c:	682b      	ldr	r3, [r5, #0]
 8008c6e:	f003 0307 	and.w	r3, r3, #7
 8008c72:	42a3      	cmp	r3, r4
 8008c74:	d1f4      	bne.n	8008c60 <HAL_RCC_ClockConfig+0xb0>
 8008c76:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008c7a:	6893      	ldr	r3, [r2, #8]
 8008c7c:	f013 030c 	ands.w	r3, r3, #12
 8008c80:	f000 80b1 	beq.w	8008de6 <HAL_RCC_ClockConfig+0x236>
 8008c84:	2b04      	cmp	r3, #4
 8008c86:	f000 80d0 	beq.w	8008e2a <HAL_RCC_ClockConfig+0x27a>
 8008c8a:	2b08      	cmp	r3, #8
 8008c8c:	f000 80c5 	beq.w	8008e1a <HAL_RCC_ClockConfig+0x26a>
 8008c90:	f7ff fbfe 	bl	8008490 <HAL_RCC_GetSysClockFreq.part.0>
 8008c94:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008c98:	4a66      	ldr	r2, [pc, #408]	@ (8008e34 <HAL_RCC_ClockConfig+0x284>)
 8008c9a:	689b      	ldr	r3, [r3, #8]
 8008c9c:	4966      	ldr	r1, [pc, #408]	@ (8008e38 <HAL_RCC_ClockConfig+0x288>)
 8008c9e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008ca2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ca6:	fbb0 f0f3 	udiv	r0, r0, r3
 8008caa:	6010      	str	r0, [r2, #0]
 8008cac:	f7fc fd50 	bl	8005750 <HAL_GetTickPrio>
 8008cb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008cb4:	f7fc b816 	b.w	8004ce4 <HAL_InitTick>
 8008cb8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008cbc:	68aa      	ldr	r2, [r5, #8]
 8008cbe:	68b3      	ldr	r3, [r6, #8]
 8008cc0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008cc4:	4313      	orrs	r3, r2
 8008cc6:	60b3      	str	r3, [r6, #8]
 8008cc8:	f7fc fd3c 	bl	8005744 <HAL_GetTick>
 8008ccc:	4607      	mov	r7, r0
 8008cce:	68b3      	ldr	r3, [r6, #8]
 8008cd0:	03db      	lsls	r3, r3, #15
 8008cd2:	d56a      	bpl.n	8008daa <HAL_RCC_ClockConfig+0x1fa>
 8008cd4:	682b      	ldr	r3, [r5, #0]
 8008cd6:	0698      	lsls	r0, r3, #26
 8008cd8:	f57f af7e 	bpl.w	8008bd8 <HAL_RCC_ClockConfig+0x28>
 8008cdc:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008ce0:	696a      	ldr	r2, [r5, #20]
 8008ce2:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008ce6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008cea:	4313      	orrs	r3, r2
 8008cec:	f8c6 3108 	str.w	r3, [r6, #264]	@ 0x108
 8008cf0:	f7fc fd28 	bl	8005744 <HAL_GetTick>
 8008cf4:	4607      	mov	r7, r0
 8008cf6:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008cfa:	0399      	lsls	r1, r3, #14
 8008cfc:	d55b      	bpl.n	8008db6 <HAL_RCC_ClockConfig+0x206>
 8008cfe:	682b      	ldr	r3, [r5, #0]
 8008d00:	065a      	lsls	r2, r3, #25
 8008d02:	f57f af6c 	bpl.w	8008bde <HAL_RCC_ClockConfig+0x2e>
 8008d06:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d0a:	69aa      	ldr	r2, [r5, #24]
 8008d0c:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008d10:	f023 030f 	bic.w	r3, r3, #15
 8008d14:	ea43 1312 	orr.w	r3, r3, r2, lsr #4
 8008d18:	f8c6 3108 	str.w	r3, [r6, #264]	@ 0x108
 8008d1c:	f7fc fd12 	bl	8005744 <HAL_GetTick>
 8008d20:	4607      	mov	r7, r0
 8008d22:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008d26:	03db      	lsls	r3, r3, #15
 8008d28:	d54b      	bpl.n	8008dc2 <HAL_RCC_ClockConfig+0x212>
 8008d2a:	682b      	ldr	r3, [r5, #0]
 8008d2c:	0758      	lsls	r0, r3, #29
 8008d2e:	f57f af59 	bpl.w	8008be4 <HAL_RCC_ClockConfig+0x34>
 8008d32:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d36:	68ea      	ldr	r2, [r5, #12]
 8008d38:	68b3      	ldr	r3, [r6, #8]
 8008d3a:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8008d3e:	4313      	orrs	r3, r2
 8008d40:	60b3      	str	r3, [r6, #8]
 8008d42:	f7fc fcff 	bl	8005744 <HAL_GetTick>
 8008d46:	4607      	mov	r7, r0
 8008d48:	68b3      	ldr	r3, [r6, #8]
 8008d4a:	0399      	lsls	r1, r3, #14
 8008d4c:	d53f      	bpl.n	8008dce <HAL_RCC_ClockConfig+0x21e>
 8008d4e:	682b      	ldr	r3, [r5, #0]
 8008d50:	071a      	lsls	r2, r3, #28
 8008d52:	f57f af4a 	bpl.w	8008bea <HAL_RCC_ClockConfig+0x3a>
 8008d56:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d5a:	692a      	ldr	r2, [r5, #16]
 8008d5c:	68b3      	ldr	r3, [r6, #8]
 8008d5e:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
 8008d62:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008d66:	60b3      	str	r3, [r6, #8]
 8008d68:	f7fc fcec 	bl	8005744 <HAL_GetTick>
 8008d6c:	4607      	mov	r7, r0
 8008d6e:	68b3      	ldr	r3, [r6, #8]
 8008d70:	035b      	lsls	r3, r3, #13
 8008d72:	d532      	bpl.n	8008dda <HAL_RCC_ClockConfig+0x22a>
 8008d74:	682b      	ldr	r3, [r5, #0]
 8008d76:	07df      	lsls	r7, r3, #31
 8008d78:	f53f af39 	bmi.w	8008bee <HAL_RCC_ClockConfig+0x3e>
 8008d7c:	e761      	b.n	8008c42 <HAL_RCC_ClockConfig+0x92>
 8008d7e:	6833      	ldr	r3, [r6, #0]
 8008d80:	f023 0307 	bic.w	r3, r3, #7
 8008d84:	430b      	orrs	r3, r1
 8008d86:	6033      	str	r3, [r6, #0]
 8008d88:	f7fc fcdc 	bl	8005744 <HAL_GetTick>
 8008d8c:	4607      	mov	r7, r0
 8008d8e:	6833      	ldr	r3, [r6, #0]
 8008d90:	f003 0307 	and.w	r3, r3, #7
 8008d94:	42a3      	cmp	r3, r4
 8008d96:	f43f af19 	beq.w	8008bcc <HAL_RCC_ClockConfig+0x1c>
 8008d9a:	f7fc fcd3 	bl	8005744 <HAL_GetTick>
 8008d9e:	1bc3      	subs	r3, r0, r7
 8008da0:	2b02      	cmp	r3, #2
 8008da2:	d9f4      	bls.n	8008d8e <HAL_RCC_ClockConfig+0x1de>
 8008da4:	2003      	movs	r0, #3
 8008da6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008daa:	f7fc fccb 	bl	8005744 <HAL_GetTick>
 8008dae:	1bc0      	subs	r0, r0, r7
 8008db0:	2802      	cmp	r0, #2
 8008db2:	d98c      	bls.n	8008cce <HAL_RCC_ClockConfig+0x11e>
 8008db4:	e7f6      	b.n	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008db6:	f7fc fcc5 	bl	8005744 <HAL_GetTick>
 8008dba:	1bc0      	subs	r0, r0, r7
 8008dbc:	2802      	cmp	r0, #2
 8008dbe:	d99a      	bls.n	8008cf6 <HAL_RCC_ClockConfig+0x146>
 8008dc0:	e7f0      	b.n	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008dc2:	f7fc fcbf 	bl	8005744 <HAL_GetTick>
 8008dc6:	1bc0      	subs	r0, r0, r7
 8008dc8:	2802      	cmp	r0, #2
 8008dca:	d9aa      	bls.n	8008d22 <HAL_RCC_ClockConfig+0x172>
 8008dcc:	e7ea      	b.n	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008dce:	f7fc fcb9 	bl	8005744 <HAL_GetTick>
 8008dd2:	1bc0      	subs	r0, r0, r7
 8008dd4:	2802      	cmp	r0, #2
 8008dd6:	d9b7      	bls.n	8008d48 <HAL_RCC_ClockConfig+0x198>
 8008dd8:	e7e4      	b.n	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008dda:	f7fc fcb3 	bl	8005744 <HAL_GetTick>
 8008dde:	1bc0      	subs	r0, r0, r7
 8008de0:	2802      	cmp	r0, #2
 8008de2:	d9c4      	bls.n	8008d6e <HAL_RCC_ClockConfig+0x1be>
 8008de4:	e7de      	b.n	8008da4 <HAL_RCC_ClockConfig+0x1f4>
 8008de6:	6813      	ldr	r3, [r2, #0]
 8008de8:	4a14      	ldr	r2, [pc, #80]	@ (8008e3c <HAL_RCC_ClockConfig+0x28c>)
 8008dea:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008dee:	2bb0      	cmp	r3, #176	@ 0xb0
 8008df0:	bf28      	it	cs
 8008df2:	23b0      	movcs	r3, #176	@ 0xb0
 8008df4:	091b      	lsrs	r3, r3, #4
 8008df6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008dfa:	e74b      	b.n	8008c94 <HAL_RCC_ClockConfig+0xe4>
 8008dfc:	0190      	lsls	r0, r2, #6
 8008dfe:	f53f af06 	bmi.w	8008c0e <HAL_RCC_ClockConfig+0x5e>
 8008e02:	2001      	movs	r0, #1
 8008e04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e08:	0396      	lsls	r6, r2, #14
 8008e0a:	f53f af00 	bmi.w	8008c0e <HAL_RCC_ClockConfig+0x5e>
 8008e0e:	e7f8      	b.n	8008e02 <HAL_RCC_ClockConfig+0x252>
 8008e10:	0552      	lsls	r2, r2, #21
 8008e12:	d5f6      	bpl.n	8008e02 <HAL_RCC_ClockConfig+0x252>
 8008e14:	e6fb      	b.n	8008c0e <HAL_RCC_ClockConfig+0x5e>
 8008e16:	2001      	movs	r0, #1
 8008e18:	4770      	bx	lr
 8008e1a:	6812      	ldr	r2, [r2, #0]
 8008e1c:	4b08      	ldr	r3, [pc, #32]	@ (8008e40 <HAL_RCC_ClockConfig+0x290>)
 8008e1e:	4809      	ldr	r0, [pc, #36]	@ (8008e44 <HAL_RCC_ClockConfig+0x294>)
 8008e20:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008e24:	bf08      	it	eq
 8008e26:	4618      	moveq	r0, r3
 8008e28:	e734      	b.n	8008c94 <HAL_RCC_ClockConfig+0xe4>
 8008e2a:	4806      	ldr	r0, [pc, #24]	@ (8008e44 <HAL_RCC_ClockConfig+0x294>)
 8008e2c:	e732      	b.n	8008c94 <HAL_RCC_ClockConfig+0xe4>
 8008e2e:	bf00      	nop
 8008e30:	58004000 	.word	0x58004000
 8008e34:	20000034 	.word	0x20000034
 8008e38:	08018380 	.word	0x08018380
 8008e3c:	08018320 	.word	0x08018320
 8008e40:	01e84800 	.word	0x01e84800
 8008e44:	00f42400 	.word	0x00f42400

08008e48 <HAL_RCC_GetSysClockFreq>:
 8008e48:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008e4c:	6893      	ldr	r3, [r2, #8]
 8008e4e:	f013 030c 	ands.w	r3, r3, #12
 8008e52:	d10a      	bne.n	8008e6a <HAL_RCC_GetSysClockFreq+0x22>
 8008e54:	6813      	ldr	r3, [r2, #0]
 8008e56:	4a0d      	ldr	r2, [pc, #52]	@ (8008e8c <HAL_RCC_GetSysClockFreq+0x44>)
 8008e58:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008e5c:	2bb0      	cmp	r3, #176	@ 0xb0
 8008e5e:	bf28      	it	cs
 8008e60:	23b0      	movcs	r3, #176	@ 0xb0
 8008e62:	091b      	lsrs	r3, r3, #4
 8008e64:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008e68:	4770      	bx	lr
 8008e6a:	2b04      	cmp	r3, #4
 8008e6c:	d00b      	beq.n	8008e86 <HAL_RCC_GetSysClockFreq+0x3e>
 8008e6e:	2b08      	cmp	r3, #8
 8008e70:	d001      	beq.n	8008e76 <HAL_RCC_GetSysClockFreq+0x2e>
 8008e72:	f7ff bb0d 	b.w	8008490 <HAL_RCC_GetSysClockFreq.part.0>
 8008e76:	6812      	ldr	r2, [r2, #0]
 8008e78:	4b05      	ldr	r3, [pc, #20]	@ (8008e90 <HAL_RCC_GetSysClockFreq+0x48>)
 8008e7a:	4806      	ldr	r0, [pc, #24]	@ (8008e94 <HAL_RCC_GetSysClockFreq+0x4c>)
 8008e7c:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008e80:	bf08      	it	eq
 8008e82:	4618      	moveq	r0, r3
 8008e84:	4770      	bx	lr
 8008e86:	4803      	ldr	r0, [pc, #12]	@ (8008e94 <HAL_RCC_GetSysClockFreq+0x4c>)
 8008e88:	4770      	bx	lr
 8008e8a:	bf00      	nop
 8008e8c:	08018320 	.word	0x08018320
 8008e90:	01e84800 	.word	0x01e84800
 8008e94:	00f42400 	.word	0x00f42400

08008e98 <HAL_RCC_GetPCLK1Freq>:
 8008e98:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008e9c:	b508      	push	{r3, lr}
 8008e9e:	6893      	ldr	r3, [r2, #8]
 8008ea0:	f013 030c 	ands.w	r3, r3, #12
 8008ea4:	d11e      	bne.n	8008ee4 <HAL_RCC_GetPCLK1Freq+0x4c>
 8008ea6:	6813      	ldr	r3, [r2, #0]
 8008ea8:	4a17      	ldr	r2, [pc, #92]	@ (8008f08 <HAL_RCC_GetPCLK1Freq+0x70>)
 8008eaa:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008eae:	2bb0      	cmp	r3, #176	@ 0xb0
 8008eb0:	bf28      	it	cs
 8008eb2:	23b0      	movcs	r3, #176	@ 0xb0
 8008eb4:	091b      	lsrs	r3, r3, #4
 8008eb6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008eba:	4914      	ldr	r1, [pc, #80]	@ (8008f0c <HAL_RCC_GetPCLK1Freq+0x74>)
 8008ebc:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008ec0:	6893      	ldr	r3, [r2, #8]
 8008ec2:	6892      	ldr	r2, [r2, #8]
 8008ec4:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008ec8:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8008ecc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ed0:	490f      	ldr	r1, [pc, #60]	@ (8008f10 <HAL_RCC_GetPCLK1Freq+0x78>)
 8008ed2:	fbb0 f3f3 	udiv	r3, r0, r3
 8008ed6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008eda:	f000 001f 	and.w	r0, r0, #31
 8008ede:	fa23 f000 	lsr.w	r0, r3, r0
 8008ee2:	bd08      	pop	{r3, pc}
 8008ee4:	2b04      	cmp	r3, #4
 8008ee6:	d004      	beq.n	8008ef2 <HAL_RCC_GetPCLK1Freq+0x5a>
 8008ee8:	2b08      	cmp	r3, #8
 8008eea:	d004      	beq.n	8008ef6 <HAL_RCC_GetPCLK1Freq+0x5e>
 8008eec:	f7ff fad0 	bl	8008490 <HAL_RCC_GetSysClockFreq.part.0>
 8008ef0:	e7e3      	b.n	8008eba <HAL_RCC_GetPCLK1Freq+0x22>
 8008ef2:	4808      	ldr	r0, [pc, #32]	@ (8008f14 <HAL_RCC_GetPCLK1Freq+0x7c>)
 8008ef4:	e7e1      	b.n	8008eba <HAL_RCC_GetPCLK1Freq+0x22>
 8008ef6:	6812      	ldr	r2, [r2, #0]
 8008ef8:	4b07      	ldr	r3, [pc, #28]	@ (8008f18 <HAL_RCC_GetPCLK1Freq+0x80>)
 8008efa:	4806      	ldr	r0, [pc, #24]	@ (8008f14 <HAL_RCC_GetPCLK1Freq+0x7c>)
 8008efc:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008f00:	bf08      	it	eq
 8008f02:	4618      	moveq	r0, r3
 8008f04:	e7d9      	b.n	8008eba <HAL_RCC_GetPCLK1Freq+0x22>
 8008f06:	bf00      	nop
 8008f08:	08018320 	.word	0x08018320
 8008f0c:	08018380 	.word	0x08018380
 8008f10:	08018360 	.word	0x08018360
 8008f14:	00f42400 	.word	0x00f42400
 8008f18:	01e84800 	.word	0x01e84800

08008f1c <HAL_RCC_GetPCLK2Freq>:
 8008f1c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008f20:	b508      	push	{r3, lr}
 8008f22:	6893      	ldr	r3, [r2, #8]
 8008f24:	f013 030c 	ands.w	r3, r3, #12
 8008f28:	d11e      	bne.n	8008f68 <HAL_RCC_GetPCLK2Freq+0x4c>
 8008f2a:	6813      	ldr	r3, [r2, #0]
 8008f2c:	4a17      	ldr	r2, [pc, #92]	@ (8008f8c <HAL_RCC_GetPCLK2Freq+0x70>)
 8008f2e:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008f32:	2bb0      	cmp	r3, #176	@ 0xb0
 8008f34:	bf28      	it	cs
 8008f36:	23b0      	movcs	r3, #176	@ 0xb0
 8008f38:	091b      	lsrs	r3, r3, #4
 8008f3a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008f3e:	4914      	ldr	r1, [pc, #80]	@ (8008f90 <HAL_RCC_GetPCLK2Freq+0x74>)
 8008f40:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008f44:	6893      	ldr	r3, [r2, #8]
 8008f46:	6892      	ldr	r2, [r2, #8]
 8008f48:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008f4c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8008f50:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008f54:	490f      	ldr	r1, [pc, #60]	@ (8008f94 <HAL_RCC_GetPCLK2Freq+0x78>)
 8008f56:	fbb0 f3f3 	udiv	r3, r0, r3
 8008f5a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008f5e:	f000 001f 	and.w	r0, r0, #31
 8008f62:	fa23 f000 	lsr.w	r0, r3, r0
 8008f66:	bd08      	pop	{r3, pc}
 8008f68:	2b04      	cmp	r3, #4
 8008f6a:	d004      	beq.n	8008f76 <HAL_RCC_GetPCLK2Freq+0x5a>
 8008f6c:	2b08      	cmp	r3, #8
 8008f6e:	d004      	beq.n	8008f7a <HAL_RCC_GetPCLK2Freq+0x5e>
 8008f70:	f7ff fa8e 	bl	8008490 <HAL_RCC_GetSysClockFreq.part.0>
 8008f74:	e7e3      	b.n	8008f3e <HAL_RCC_GetPCLK2Freq+0x22>
 8008f76:	4808      	ldr	r0, [pc, #32]	@ (8008f98 <HAL_RCC_GetPCLK2Freq+0x7c>)
 8008f78:	e7e1      	b.n	8008f3e <HAL_RCC_GetPCLK2Freq+0x22>
 8008f7a:	6812      	ldr	r2, [r2, #0]
 8008f7c:	4b07      	ldr	r3, [pc, #28]	@ (8008f9c <HAL_RCC_GetPCLK2Freq+0x80>)
 8008f7e:	4806      	ldr	r0, [pc, #24]	@ (8008f98 <HAL_RCC_GetPCLK2Freq+0x7c>)
 8008f80:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008f84:	bf08      	it	eq
 8008f86:	4618      	moveq	r0, r3
 8008f88:	e7d9      	b.n	8008f3e <HAL_RCC_GetPCLK2Freq+0x22>
 8008f8a:	bf00      	nop
 8008f8c:	08018320 	.word	0x08018320
 8008f90:	08018380 	.word	0x08018380
 8008f94:	08018360 	.word	0x08018360
 8008f98:	00f42400 	.word	0x00f42400
 8008f9c:	01e84800 	.word	0x01e84800

08008fa0 <HAL_RCC_GetClockConfig>:
 8008fa0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008fa4:	226f      	movs	r2, #111	@ 0x6f
 8008fa6:	b410      	push	{r4}
 8008fa8:	6002      	str	r2, [r0, #0]
 8008faa:	689a      	ldr	r2, [r3, #8]
 8008fac:	4c10      	ldr	r4, [pc, #64]	@ (8008ff0 <HAL_RCC_GetClockConfig+0x50>)
 8008fae:	f002 020c 	and.w	r2, r2, #12
 8008fb2:	6042      	str	r2, [r0, #4]
 8008fb4:	689a      	ldr	r2, [r3, #8]
 8008fb6:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008fba:	6082      	str	r2, [r0, #8]
 8008fbc:	689a      	ldr	r2, [r3, #8]
 8008fbe:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8008fc2:	60c2      	str	r2, [r0, #12]
 8008fc4:	689a      	ldr	r2, [r3, #8]
 8008fc6:	f402 5260 	and.w	r2, r2, #14336	@ 0x3800
 8008fca:	6102      	str	r2, [r0, #16]
 8008fcc:	f8d3 2108 	ldr.w	r2, [r3, #264]	@ 0x108
 8008fd0:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008fd4:	6142      	str	r2, [r0, #20]
 8008fd6:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 8008fda:	011b      	lsls	r3, r3, #4
 8008fdc:	b2db      	uxtb	r3, r3
 8008fde:	6183      	str	r3, [r0, #24]
 8008fe0:	6823      	ldr	r3, [r4, #0]
 8008fe2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008fe6:	f003 0307 	and.w	r3, r3, #7
 8008fea:	600b      	str	r3, [r1, #0]
 8008fec:	4770      	bx	lr
 8008fee:	bf00      	nop
 8008ff0:	58004000 	.word	0x58004000

08008ff4 <HAL_RCCEx_PeriphCLKConfig>:
 8008ff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ff6:	6803      	ldr	r3, [r0, #0]
 8008ff8:	f013 0540 	ands.w	r5, r3, #64	@ 0x40
 8008ffc:	4604      	mov	r4, r0
 8008ffe:	d046      	beq.n	800908e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8009000:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8009002:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
 8009006:	d032      	beq.n	800906e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8009008:	f200 8146 	bhi.w	8009298 <HAL_RCCEx_PeriphCLKConfig+0x2a4>
 800900c:	2900      	cmp	r1, #0
 800900e:	f040 8149 	bne.w	80092a4 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8009012:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8009016:	682b      	ldr	r3, [r5, #0]
 8009018:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800901c:	602b      	str	r3, [r5, #0]
 800901e:	f7fc fb91 	bl	8005744 <HAL_GetTick>
 8009022:	4606      	mov	r6, r0
 8009024:	682b      	ldr	r3, [r5, #0]
 8009026:	011f      	lsls	r7, r3, #4
 8009028:	f100 81a4 	bmi.w	8009374 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800902c:	692b      	ldr	r3, [r5, #16]
 800902e:	6862      	ldr	r2, [r4, #4]
 8009030:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8009034:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8009038:	612b      	str	r3, [r5, #16]
 800903a:	692b      	ldr	r3, [r5, #16]
 800903c:	68a2      	ldr	r2, [r4, #8]
 800903e:	f423 1378 	bic.w	r3, r3, #4063232	@ 0x3e0000
 8009042:	4313      	orrs	r3, r2
 8009044:	612b      	str	r3, [r5, #16]
 8009046:	682b      	ldr	r3, [r5, #0]
 8009048:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800904c:	602b      	str	r3, [r5, #0]
 800904e:	f7fc fb79 	bl	8005744 <HAL_GetTick>
 8009052:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8009056:	4606      	mov	r6, r0
 8009058:	682b      	ldr	r3, [r5, #0]
 800905a:	0118      	lsls	r0, r3, #4
 800905c:	f140 81a3 	bpl.w	80093a6 <HAL_RCCEx_PeriphCLKConfig+0x3b2>
 8009060:	6961      	ldr	r1, [r4, #20]
 8009062:	692a      	ldr	r2, [r5, #16]
 8009064:	6823      	ldr	r3, [r4, #0]
 8009066:	430a      	orrs	r2, r1
 8009068:	612a      	str	r2, [r5, #16]
 800906a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800906c:	e005      	b.n	800907a <HAL_RCCEx_PeriphCLKConfig+0x86>
 800906e:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 8009072:	68c2      	ldr	r2, [r0, #12]
 8009074:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8009078:	60c2      	str	r2, [r0, #12]
 800907a:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 800907e:	2500      	movs	r5, #0
 8009080:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 8009084:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8009088:	430a      	orrs	r2, r1
 800908a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800908e:	0519      	lsls	r1, r3, #20
 8009090:	d509      	bpl.n	80090a6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009092:	f04f 47b0 	mov.w	r7, #1476395008	@ 0x58000000
 8009096:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009098:	f8d7 6090 	ldr.w	r6, [r7, #144]	@ 0x90
 800909c:	f406 7640 	and.w	r6, r6, #768	@ 0x300
 80090a0:	42b2      	cmp	r2, r6
 80090a2:	f040 80c0 	bne.w	8009226 <HAL_RCCEx_PeriphCLKConfig+0x232>
 80090a6:	07d8      	lsls	r0, r3, #31
 80090a8:	d509      	bpl.n	80090be <HAL_RCCEx_PeriphCLKConfig+0xca>
 80090aa:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80090ae:	69a0      	ldr	r0, [r4, #24]
 80090b0:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80090b4:	f022 0203 	bic.w	r2, r2, #3
 80090b8:	4302      	orrs	r2, r0
 80090ba:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 80090be:	0799      	lsls	r1, r3, #30
 80090c0:	d509      	bpl.n	80090d6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 80090c2:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80090c6:	69e0      	ldr	r0, [r4, #28]
 80090c8:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80090cc:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80090d0:	4302      	orrs	r2, r0
 80090d2:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 80090d6:	06da      	lsls	r2, r3, #27
 80090d8:	d50c      	bpl.n	80090f4 <HAL_RCCEx_PeriphCLKConfig+0x100>
 80090da:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80090dc:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80090e0:	0c06      	lsrs	r6, r0, #16
 80090e2:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80090e6:	0436      	lsls	r6, r6, #16
 80090e8:	ea22 0206 	bic.w	r2, r2, r6
 80090ec:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80090f0:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 80090f4:	069f      	lsls	r7, r3, #26
 80090f6:	d50c      	bpl.n	8009112 <HAL_RCCEx_PeriphCLKConfig+0x11e>
 80090f8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 80090fa:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80090fe:	0c06      	lsrs	r6, r0, #16
 8009100:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8009104:	0436      	lsls	r6, r6, #16
 8009106:	ea22 0206 	bic.w	r2, r2, r6
 800910a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800910e:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8009112:	075e      	lsls	r6, r3, #29
 8009114:	d50f      	bpl.n	8009136 <HAL_RCCEx_PeriphCLKConfig+0x142>
 8009116:	6a22      	ldr	r2, [r4, #32]
 8009118:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800911c:	0910      	lsrs	r0, r2, #4
 800911e:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
 8009122:	f400 207f 	and.w	r0, r0, #1044480	@ 0xff000
 8009126:	0112      	lsls	r2, r2, #4
 8009128:	f402 227f 	and.w	r2, r2, #1044480	@ 0xff000
 800912c:	ea21 0100 	bic.w	r1, r1, r0
 8009130:	430a      	orrs	r2, r1
 8009132:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8009136:	0718      	lsls	r0, r3, #28
 8009138:	d50f      	bpl.n	800915a <HAL_RCCEx_PeriphCLKConfig+0x166>
 800913a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800913c:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8009140:	0910      	lsrs	r0, r2, #4
 8009142:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
 8009146:	f400 207f 	and.w	r0, r0, #1044480	@ 0xff000
 800914a:	0112      	lsls	r2, r2, #4
 800914c:	f402 227f 	and.w	r2, r2, #1044480	@ 0xff000
 8009150:	ea21 0100 	bic.w	r1, r1, r0
 8009154:	430a      	orrs	r2, r1
 8009156:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 800915a:	05d9      	lsls	r1, r3, #23
 800915c:	d511      	bpl.n	8009182 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800915e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8009162:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009164:	f8d6 2088 	ldr.w	r2, [r6, #136]	@ 0x88
 8009168:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 800916c:	430a      	orrs	r2, r1
 800916e:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
 8009172:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8009176:	f000 8097 	beq.w	80092a8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 800917a:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
 800917e:	f000 809d 	beq.w	80092bc <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8009182:	059f      	lsls	r7, r3, #22
 8009184:	d51e      	bpl.n	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 8009186:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009188:	f031 4280 	bics.w	r2, r1, #1073741824	@ 0x40000000
 800918c:	d07a      	beq.n	8009284 <HAL_RCCEx_PeriphCLKConfig+0x290>
 800918e:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8009192:	d077      	beq.n	8009284 <HAL_RCCEx_PeriphCLKConfig+0x290>
 8009194:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8009198:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
 800919c:	f8d2 6088 	ldr.w	r6, [r2, #136]	@ 0x88
 80091a0:	f026 4640 	bic.w	r6, r6, #3221225472	@ 0xc0000000
 80091a4:	f8c2 6088 	str.w	r6, [r2, #136]	@ 0x88
 80091a8:	f8d2 6088 	ldr.w	r6, [r2, #136]	@ 0x88
 80091ac:	f026 6640 	bic.w	r6, r6, #201326592	@ 0xc000000
 80091b0:	4330      	orrs	r0, r6
 80091b2:	f1b1 5fc0 	cmp.w	r1, #402653184	@ 0x18000000
 80091b6:	f8c2 0088 	str.w	r0, [r2, #136]	@ 0x88
 80091ba:	d103      	bne.n	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 80091bc:	68d1      	ldr	r1, [r2, #12]
 80091be:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 80091c2:	60d1      	str	r1, [r2, #12]
 80091c4:	055e      	lsls	r6, r3, #21
 80091c6:	d510      	bpl.n	80091ea <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80091c8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80091cc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 80091ce:	f8d6 2088 	ldr.w	r2, [r6, #136]	@ 0x88
 80091d2:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80091d6:	430a      	orrs	r2, r1
 80091d8:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
 80091dc:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 80091e0:	d067      	beq.n	80092b2 <HAL_RCCEx_PeriphCLKConfig+0x2be>
 80091e2:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
 80091e6:	f000 8092 	beq.w	800930e <HAL_RCCEx_PeriphCLKConfig+0x31a>
 80091ea:	04da      	lsls	r2, r3, #19
 80091ec:	d509      	bpl.n	8009202 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 80091ee:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80091f2:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 80091f4:	f8d1 2094 	ldr.w	r2, [r1, #148]	@ 0x94
 80091f8:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 80091fc:	4302      	orrs	r2, r0
 80091fe:	f8c1 2094 	str.w	r2, [r1, #148]	@ 0x94
 8009202:	049b      	lsls	r3, r3, #18
 8009204:	d50d      	bpl.n	8009222 <HAL_RCCEx_PeriphCLKConfig+0x22e>
 8009206:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800920a:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 800920c:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800920e:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8009212:	430b      	orrs	r3, r1
 8009214:	6253      	str	r3, [r2, #36]	@ 0x24
 8009216:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8009218:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800921a:	f023 0303 	bic.w	r3, r3, #3
 800921e:	430b      	orrs	r3, r1
 8009220:	6253      	str	r3, [r2, #36]	@ 0x24
 8009222:	4628      	mov	r0, r5
 8009224:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009226:	f7ff f8a5 	bl	8008374 <HAL_PWR_EnableBkUpAccess>
 800922a:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800922e:	2e00      	cmp	r6, #0
 8009230:	f000 8096 	beq.w	8009360 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8009234:	f8d7 2090 	ldr.w	r2, [r7, #144]	@ 0x90
 8009238:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800923c:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8009240:	f8d7 2090 	ldr.w	r2, [r7, #144]	@ 0x90
 8009244:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8009248:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 800924c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800924e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009252:	4313      	orrs	r3, r2
 8009254:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8009258:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800925c:	07da      	lsls	r2, r3, #31
 800925e:	f140 8087 	bpl.w	8009370 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009262:	f7fc fa6f 	bl	8005744 <HAL_GetTick>
 8009266:	4606      	mov	r6, r0
 8009268:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800926c:	079b      	lsls	r3, r3, #30
 800926e:	d47f      	bmi.n	8009370 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009270:	f7fc fa68 	bl	8005744 <HAL_GetTick>
 8009274:	f241 3388 	movw	r3, #5000	@ 0x1388
 8009278:	1b80      	subs	r0, r0, r6
 800927a:	4298      	cmp	r0, r3
 800927c:	d9f4      	bls.n	8009268 <HAL_RCCEx_PeriphCLKConfig+0x274>
 800927e:	6823      	ldr	r3, [r4, #0]
 8009280:	2503      	movs	r5, #3
 8009282:	e710      	b.n	80090a6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009284:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 8009288:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 800928c:	f022 4240 	bic.w	r2, r2, #3221225472	@ 0xc0000000
 8009290:	430a      	orrs	r2, r1
 8009292:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 8009296:	e795      	b.n	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 8009298:	f421 0280 	bic.w	r2, r1, #4194304	@ 0x400000
 800929c:	f5b2 0f00 	cmp.w	r2, #8388608	@ 0x800000
 80092a0:	f43f aeeb 	beq.w	800907a <HAL_RCCEx_PeriphCLKConfig+0x86>
 80092a4:	2501      	movs	r5, #1
 80092a6:	e6f2      	b.n	800908e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80092a8:	68f2      	ldr	r2, [r6, #12]
 80092aa:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 80092ae:	60f2      	str	r2, [r6, #12]
 80092b0:	e767      	b.n	8009182 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 80092b2:	68f2      	ldr	r2, [r6, #12]
 80092b4:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80092b8:	60f2      	str	r2, [r6, #12]
 80092ba:	e796      	b.n	80091ea <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80092bc:	6833      	ldr	r3, [r6, #0]
 80092be:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80092c2:	6033      	str	r3, [r6, #0]
 80092c4:	f7fc fa3e 	bl	8005744 <HAL_GetTick>
 80092c8:	4607      	mov	r7, r0
 80092ca:	6833      	ldr	r3, [r6, #0]
 80092cc:	011a      	lsls	r2, r3, #4
 80092ce:	d462      	bmi.n	8009396 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 80092d0:	6933      	ldr	r3, [r6, #16]
 80092d2:	6862      	ldr	r2, [r4, #4]
 80092d4:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80092d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80092dc:	6133      	str	r3, [r6, #16]
 80092de:	6933      	ldr	r3, [r6, #16]
 80092e0:	68e2      	ldr	r2, [r4, #12]
 80092e2:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 80092e6:	4313      	orrs	r3, r2
 80092e8:	6133      	str	r3, [r6, #16]
 80092ea:	6833      	ldr	r3, [r6, #0]
 80092ec:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80092f0:	6033      	str	r3, [r6, #0]
 80092f2:	f7fc fa27 	bl	8005744 <HAL_GetTick>
 80092f6:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80092fa:	4607      	mov	r7, r0
 80092fc:	6833      	ldr	r3, [r6, #0]
 80092fe:	011b      	lsls	r3, r3, #4
 8009300:	d55e      	bpl.n	80093c0 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 8009302:	6932      	ldr	r2, [r6, #16]
 8009304:	6961      	ldr	r1, [r4, #20]
 8009306:	6823      	ldr	r3, [r4, #0]
 8009308:	430a      	orrs	r2, r1
 800930a:	6132      	str	r2, [r6, #16]
 800930c:	e739      	b.n	8009182 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800930e:	6833      	ldr	r3, [r6, #0]
 8009310:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8009314:	6033      	str	r3, [r6, #0]
 8009316:	f7fc fa15 	bl	8005744 <HAL_GetTick>
 800931a:	4607      	mov	r7, r0
 800931c:	6833      	ldr	r3, [r6, #0]
 800931e:	0118      	lsls	r0, r3, #4
 8009320:	d431      	bmi.n	8009386 <HAL_RCCEx_PeriphCLKConfig+0x392>
 8009322:	6933      	ldr	r3, [r6, #16]
 8009324:	6862      	ldr	r2, [r4, #4]
 8009326:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 800932a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800932e:	6133      	str	r3, [r6, #16]
 8009330:	6933      	ldr	r3, [r6, #16]
 8009332:	6922      	ldr	r2, [r4, #16]
 8009334:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
 8009338:	4313      	orrs	r3, r2
 800933a:	6133      	str	r3, [r6, #16]
 800933c:	6833      	ldr	r3, [r6, #0]
 800933e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8009342:	6033      	str	r3, [r6, #0]
 8009344:	f7fc f9fe 	bl	8005744 <HAL_GetTick>
 8009348:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800934c:	4607      	mov	r7, r0
 800934e:	6833      	ldr	r3, [r6, #0]
 8009350:	0119      	lsls	r1, r3, #4
 8009352:	d52f      	bpl.n	80093b4 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8009354:	6932      	ldr	r2, [r6, #16]
 8009356:	6961      	ldr	r1, [r4, #20]
 8009358:	6823      	ldr	r3, [r4, #0]
 800935a:	430a      	orrs	r2, r1
 800935c:	6132      	str	r2, [r6, #16]
 800935e:	e744      	b.n	80091ea <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8009360:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009362:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009366:	4313      	orrs	r3, r2
 8009368:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800936c:	6823      	ldr	r3, [r4, #0]
 800936e:	e69a      	b.n	80090a6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009370:	6823      	ldr	r3, [r4, #0]
 8009372:	e698      	b.n	80090a6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009374:	f7fc f9e6 	bl	8005744 <HAL_GetTick>
 8009378:	1b80      	subs	r0, r0, r6
 800937a:	2802      	cmp	r0, #2
 800937c:	f67f ae52 	bls.w	8009024 <HAL_RCCEx_PeriphCLKConfig+0x30>
 8009380:	6823      	ldr	r3, [r4, #0]
 8009382:	2503      	movs	r5, #3
 8009384:	e683      	b.n	800908e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8009386:	f7fc f9dd 	bl	8005744 <HAL_GetTick>
 800938a:	1bc0      	subs	r0, r0, r7
 800938c:	2802      	cmp	r0, #2
 800938e:	d9c5      	bls.n	800931c <HAL_RCCEx_PeriphCLKConfig+0x328>
 8009390:	6823      	ldr	r3, [r4, #0]
 8009392:	2503      	movs	r5, #3
 8009394:	e729      	b.n	80091ea <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8009396:	f7fc f9d5 	bl	8005744 <HAL_GetTick>
 800939a:	1bc0      	subs	r0, r0, r7
 800939c:	2802      	cmp	r0, #2
 800939e:	d994      	bls.n	80092ca <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 80093a0:	6823      	ldr	r3, [r4, #0]
 80093a2:	2503      	movs	r5, #3
 80093a4:	e6ed      	b.n	8009182 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 80093a6:	f7fc f9cd 	bl	8005744 <HAL_GetTick>
 80093aa:	1b80      	subs	r0, r0, r6
 80093ac:	2802      	cmp	r0, #2
 80093ae:	f67f ae53 	bls.w	8009058 <HAL_RCCEx_PeriphCLKConfig+0x64>
 80093b2:	e7e5      	b.n	8009380 <HAL_RCCEx_PeriphCLKConfig+0x38c>
 80093b4:	f7fc f9c6 	bl	8005744 <HAL_GetTick>
 80093b8:	1bc0      	subs	r0, r0, r7
 80093ba:	2802      	cmp	r0, #2
 80093bc:	d9c7      	bls.n	800934e <HAL_RCCEx_PeriphCLKConfig+0x35a>
 80093be:	e7e7      	b.n	8009390 <HAL_RCCEx_PeriphCLKConfig+0x39c>
 80093c0:	f7fc f9c0 	bl	8005744 <HAL_GetTick>
 80093c4:	1bc0      	subs	r0, r0, r7
 80093c6:	2802      	cmp	r0, #2
 80093c8:	d998      	bls.n	80092fc <HAL_RCCEx_PeriphCLKConfig+0x308>
 80093ca:	e7e9      	b.n	80093a0 <HAL_RCCEx_PeriphCLKConfig+0x3ac>

080093cc <HAL_RTC_Init>:
 80093cc:	2800      	cmp	r0, #0
 80093ce:	d063      	beq.n	8009498 <HAL_RTC_Init+0xcc>
 80093d0:	b538      	push	{r3, r4, r5, lr}
 80093d2:	f890 3021 	ldrb.w	r3, [r0, #33]	@ 0x21
 80093d6:	4604      	mov	r4, r0
 80093d8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80093dc:	b15b      	cbz	r3, 80093f6 <HAL_RTC_Init+0x2a>
 80093de:	2202      	movs	r2, #2
 80093e0:	6823      	ldr	r3, [r4, #0]
 80093e2:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 80093e6:	68da      	ldr	r2, [r3, #12]
 80093e8:	06d2      	lsls	r2, r2, #27
 80093ea:	d509      	bpl.n	8009400 <HAL_RTC_Init+0x34>
 80093ec:	2301      	movs	r3, #1
 80093ee:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 80093f2:	2000      	movs	r0, #0
 80093f4:	bd38      	pop	{r3, r4, r5, pc}
 80093f6:	f880 2020 	strb.w	r2, [r0, #32]
 80093fa:	f7f8 ff85 	bl	8002308 <HAL_RTC_MspInit>
 80093fe:	e7ee      	b.n	80093de <HAL_RTC_Init+0x12>
 8009400:	2253      	movs	r2, #83	@ 0x53
 8009402:	21ca      	movs	r1, #202	@ 0xca
 8009404:	6259      	str	r1, [r3, #36]	@ 0x24
 8009406:	625a      	str	r2, [r3, #36]	@ 0x24
 8009408:	68da      	ldr	r2, [r3, #12]
 800940a:	0655      	lsls	r5, r2, #25
 800940c:	d528      	bpl.n	8009460 <HAL_RTC_Init+0x94>
 800940e:	6899      	ldr	r1, [r3, #8]
 8009410:	6862      	ldr	r2, [r4, #4]
 8009412:	6925      	ldr	r5, [r4, #16]
 8009414:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 8009418:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 800941c:	6099      	str	r1, [r3, #8]
 800941e:	69a1      	ldr	r1, [r4, #24]
 8009420:	6898      	ldr	r0, [r3, #8]
 8009422:	432a      	orrs	r2, r5
 8009424:	430a      	orrs	r2, r1
 8009426:	4302      	orrs	r2, r0
 8009428:	68e1      	ldr	r1, [r4, #12]
 800942a:	609a      	str	r2, [r3, #8]
 800942c:	6119      	str	r1, [r3, #16]
 800942e:	691a      	ldr	r2, [r3, #16]
 8009430:	68a1      	ldr	r1, [r4, #8]
 8009432:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009436:	611a      	str	r2, [r3, #16]
 8009438:	68da      	ldr	r2, [r3, #12]
 800943a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800943e:	60da      	str	r2, [r3, #12]
 8009440:	689a      	ldr	r2, [r3, #8]
 8009442:	0691      	lsls	r1, r2, #26
 8009444:	d52a      	bpl.n	800949c <HAL_RTC_Init+0xd0>
 8009446:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8009448:	69e2      	ldr	r2, [r4, #28]
 800944a:	6960      	ldr	r0, [r4, #20]
 800944c:	f021 0103 	bic.w	r1, r1, #3
 8009450:	64d9      	str	r1, [r3, #76]	@ 0x4c
 8009452:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8009454:	4302      	orrs	r2, r0
 8009456:	430a      	orrs	r2, r1
 8009458:	21ff      	movs	r1, #255	@ 0xff
 800945a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800945c:	6259      	str	r1, [r3, #36]	@ 0x24
 800945e:	e7c5      	b.n	80093ec <HAL_RTC_Init+0x20>
 8009460:	68da      	ldr	r2, [r3, #12]
 8009462:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8009466:	60da      	str	r2, [r3, #12]
 8009468:	f7fc f96c 	bl	8005744 <HAL_GetTick>
 800946c:	4605      	mov	r5, r0
 800946e:	e005      	b.n	800947c <HAL_RTC_Init+0xb0>
 8009470:	f7fc f968 	bl	8005744 <HAL_GetTick>
 8009474:	1b40      	subs	r0, r0, r5
 8009476:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800947a:	d804      	bhi.n	8009486 <HAL_RTC_Init+0xba>
 800947c:	6823      	ldr	r3, [r4, #0]
 800947e:	68da      	ldr	r2, [r3, #12]
 8009480:	0650      	lsls	r0, r2, #25
 8009482:	d4c4      	bmi.n	800940e <HAL_RTC_Init+0x42>
 8009484:	e7f4      	b.n	8009470 <HAL_RTC_Init+0xa4>
 8009486:	6823      	ldr	r3, [r4, #0]
 8009488:	2204      	movs	r2, #4
 800948a:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 800948e:	22ff      	movs	r2, #255	@ 0xff
 8009490:	68d9      	ldr	r1, [r3, #12]
 8009492:	625a      	str	r2, [r3, #36]	@ 0x24
 8009494:	2001      	movs	r0, #1
 8009496:	bd38      	pop	{r3, r4, r5, pc}
 8009498:	2001      	movs	r0, #1
 800949a:	4770      	bx	lr
 800949c:	4a0a      	ldr	r2, [pc, #40]	@ (80094c8 <HAL_RTC_Init+0xfc>)
 800949e:	60da      	str	r2, [r3, #12]
 80094a0:	f7fc f950 	bl	8005744 <HAL_GetTick>
 80094a4:	4605      	mov	r5, r0
 80094a6:	6823      	ldr	r3, [r4, #0]
 80094a8:	68da      	ldr	r2, [r3, #12]
 80094aa:	0692      	lsls	r2, r2, #26
 80094ac:	d4cb      	bmi.n	8009446 <HAL_RTC_Init+0x7a>
 80094ae:	f7fc f949 	bl	8005744 <HAL_GetTick>
 80094b2:	1b40      	subs	r0, r0, r5
 80094b4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80094b8:	d9f5      	bls.n	80094a6 <HAL_RTC_Init+0xda>
 80094ba:	6823      	ldr	r3, [r4, #0]
 80094bc:	2104      	movs	r1, #4
 80094be:	22ff      	movs	r2, #255	@ 0xff
 80094c0:	f884 1021 	strb.w	r1, [r4, #33]	@ 0x21
 80094c4:	625a      	str	r2, [r3, #36]	@ 0x24
 80094c6:	e7e5      	b.n	8009494 <HAL_RTC_Init+0xc8>
 80094c8:	0001ff5f 	.word	0x0001ff5f

080094cc <HAL_RTC_SetTime>:
 80094cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094ce:	f890 3020 	ldrb.w	r3, [r0, #32]
 80094d2:	2b01      	cmp	r3, #1
 80094d4:	f000 80a4 	beq.w	8009620 <HAL_RTC_SetTime+0x154>
 80094d8:	460d      	mov	r5, r1
 80094da:	2101      	movs	r1, #1
 80094dc:	2302      	movs	r3, #2
 80094de:	f880 1020 	strb.w	r1, [r0, #32]
 80094e2:	6801      	ldr	r1, [r0, #0]
 80094e4:	f880 3021 	strb.w	r3, [r0, #33]	@ 0x21
 80094e8:	688b      	ldr	r3, [r1, #8]
 80094ea:	4606      	mov	r6, r0
 80094ec:	2a00      	cmp	r2, #0
 80094ee:	d137      	bne.n	8009560 <HAL_RTC_SetTime+0x94>
 80094f0:	f013 0c40 	ands.w	ip, r3, #64	@ 0x40
 80094f4:	bf18      	it	ne
 80094f6:	f895 c003 	ldrbne.w	ip, [r5, #3]
 80094fa:	782b      	ldrb	r3, [r5, #0]
 80094fc:	bf0c      	ite	eq
 80094fe:	f885 c003 	strbeq.w	ip, [r5, #3]
 8009502:	ea4f 5c8c 	movne.w	ip, ip, lsl #22
 8009506:	2b09      	cmp	r3, #9
 8009508:	d909      	bls.n	800951e <HAL_RTC_SetTime+0x52>
 800950a:	2000      	movs	r0, #0
 800950c:	3b0a      	subs	r3, #10
 800950e:	b2db      	uxtb	r3, r3
 8009510:	2b09      	cmp	r3, #9
 8009512:	f100 0001 	add.w	r0, r0, #1
 8009516:	d8f9      	bhi.n	800950c <HAL_RTC_SetTime+0x40>
 8009518:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 800951c:	b2db      	uxtb	r3, r3
 800951e:	041c      	lsls	r4, r3, #16
 8009520:	786b      	ldrb	r3, [r5, #1]
 8009522:	2b09      	cmp	r3, #9
 8009524:	d909      	bls.n	800953a <HAL_RTC_SetTime+0x6e>
 8009526:	2000      	movs	r0, #0
 8009528:	3b0a      	subs	r3, #10
 800952a:	b2db      	uxtb	r3, r3
 800952c:	2b09      	cmp	r3, #9
 800952e:	f100 0001 	add.w	r0, r0, #1
 8009532:	d8f9      	bhi.n	8009528 <HAL_RTC_SetTime+0x5c>
 8009534:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 8009538:	b2db      	uxtb	r3, r3
 800953a:	78a8      	ldrb	r0, [r5, #2]
 800953c:	2809      	cmp	r0, #9
 800953e:	ea4f 2303 	mov.w	r3, r3, lsl #8
 8009542:	d908      	bls.n	8009556 <HAL_RTC_SetTime+0x8a>
 8009544:	380a      	subs	r0, #10
 8009546:	b2c0      	uxtb	r0, r0
 8009548:	2809      	cmp	r0, #9
 800954a:	f102 0201 	add.w	r2, r2, #1
 800954e:	d8f9      	bhi.n	8009544 <HAL_RTC_SetTime+0x78>
 8009550:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8009554:	b2c0      	uxtb	r0, r0
 8009556:	ea44 040c 	orr.w	r4, r4, ip
 800955a:	431c      	orrs	r4, r3
 800955c:	4304      	orrs	r4, r0
 800955e:	e00f      	b.n	8009580 <HAL_RTC_SetTime+0xb4>
 8009560:	786c      	ldrb	r4, [r5, #1]
 8009562:	782a      	ldrb	r2, [r5, #0]
 8009564:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8009568:	ea4f 2404 	mov.w	r4, r4, lsl #8
 800956c:	bf14      	ite	ne
 800956e:	78eb      	ldrbne	r3, [r5, #3]
 8009570:	70eb      	strbeq	r3, [r5, #3]
 8009572:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009576:	78aa      	ldrb	r2, [r5, #2]
 8009578:	bf18      	it	ne
 800957a:	059b      	lslne	r3, r3, #22
 800957c:	4314      	orrs	r4, r2
 800957e:	431c      	orrs	r4, r3
 8009580:	23ca      	movs	r3, #202	@ 0xca
 8009582:	624b      	str	r3, [r1, #36]	@ 0x24
 8009584:	2353      	movs	r3, #83	@ 0x53
 8009586:	624b      	str	r3, [r1, #36]	@ 0x24
 8009588:	68cb      	ldr	r3, [r1, #12]
 800958a:	065f      	lsls	r7, r3, #25
 800958c:	d51f      	bpl.n	80095ce <HAL_RTC_SetTime+0x102>
 800958e:	f004 347f 	and.w	r4, r4, #2139062143	@ 0x7f7f7f7f
 8009592:	f024 44fe 	bic.w	r4, r4, #2130706432	@ 0x7f000000
 8009596:	600c      	str	r4, [r1, #0]
 8009598:	688a      	ldr	r2, [r1, #8]
 800959a:	68eb      	ldr	r3, [r5, #12]
 800959c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80095a0:	608a      	str	r2, [r1, #8]
 80095a2:	692a      	ldr	r2, [r5, #16]
 80095a4:	4313      	orrs	r3, r2
 80095a6:	688a      	ldr	r2, [r1, #8]
 80095a8:	4313      	orrs	r3, r2
 80095aa:	608b      	str	r3, [r1, #8]
 80095ac:	68cb      	ldr	r3, [r1, #12]
 80095ae:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80095b2:	60cb      	str	r3, [r1, #12]
 80095b4:	688b      	ldr	r3, [r1, #8]
 80095b6:	069a      	lsls	r2, r3, #26
 80095b8:	d521      	bpl.n	80095fe <HAL_RTC_SetTime+0x132>
 80095ba:	2301      	movs	r3, #1
 80095bc:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 80095c0:	2000      	movs	r0, #0
 80095c2:	22ff      	movs	r2, #255	@ 0xff
 80095c4:	2300      	movs	r3, #0
 80095c6:	624a      	str	r2, [r1, #36]	@ 0x24
 80095c8:	f886 3020 	strb.w	r3, [r6, #32]
 80095cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80095ce:	68cb      	ldr	r3, [r1, #12]
 80095d0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80095d4:	60cb      	str	r3, [r1, #12]
 80095d6:	f7fc f8b5 	bl	8005744 <HAL_GetTick>
 80095da:	4607      	mov	r7, r0
 80095dc:	6831      	ldr	r1, [r6, #0]
 80095de:	68cb      	ldr	r3, [r1, #12]
 80095e0:	0658      	lsls	r0, r3, #25
 80095e2:	d4d4      	bmi.n	800958e <HAL_RTC_SetTime+0xc2>
 80095e4:	f7fc f8ae 	bl	8005744 <HAL_GetTick>
 80095e8:	1bc0      	subs	r0, r0, r7
 80095ea:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80095ee:	d9f5      	bls.n	80095dc <HAL_RTC_SetTime+0x110>
 80095f0:	2304      	movs	r3, #4
 80095f2:	6831      	ldr	r1, [r6, #0]
 80095f4:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 80095f8:	68cb      	ldr	r3, [r1, #12]
 80095fa:	2001      	movs	r0, #1
 80095fc:	e7e1      	b.n	80095c2 <HAL_RTC_SetTime+0xf6>
 80095fe:	4b0c      	ldr	r3, [pc, #48]	@ (8009630 <HAL_RTC_SetTime+0x164>)
 8009600:	60cb      	str	r3, [r1, #12]
 8009602:	f7fc f89f 	bl	8005744 <HAL_GetTick>
 8009606:	4604      	mov	r4, r0
 8009608:	e005      	b.n	8009616 <HAL_RTC_SetTime+0x14a>
 800960a:	f7fc f89b 	bl	8005744 <HAL_GetTick>
 800960e:	1b00      	subs	r0, r0, r4
 8009610:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8009614:	d806      	bhi.n	8009624 <HAL_RTC_SetTime+0x158>
 8009616:	6831      	ldr	r1, [r6, #0]
 8009618:	68cb      	ldr	r3, [r1, #12]
 800961a:	069b      	lsls	r3, r3, #26
 800961c:	d5f5      	bpl.n	800960a <HAL_RTC_SetTime+0x13e>
 800961e:	e7cc      	b.n	80095ba <HAL_RTC_SetTime+0xee>
 8009620:	2002      	movs	r0, #2
 8009622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009624:	2304      	movs	r3, #4
 8009626:	6831      	ldr	r1, [r6, #0]
 8009628:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 800962c:	2001      	movs	r0, #1
 800962e:	e7c8      	b.n	80095c2 <HAL_RTC_SetTime+0xf6>
 8009630:	0001ff5f 	.word	0x0001ff5f

08009634 <HAL_RTC_GetTime>:
 8009634:	6803      	ldr	r3, [r0, #0]
 8009636:	b530      	push	{r4, r5, lr}
 8009638:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
 800963a:	6918      	ldr	r0, [r3, #16]
 800963c:	681b      	ldr	r3, [r3, #0]
 800963e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8009642:	e9c1 4001 	strd	r4, r0, [r1, #4]
 8009646:	f3c3 4405 	ubfx	r4, r3, #16, #6
 800964a:	2000      	movs	r0, #0
 800964c:	f3c3 2e06 	ubfx	lr, r3, #8, #7
 8009650:	f364 0007 	bfi	r0, r4, #0, #8
 8009654:	f003 0c7f 	and.w	ip, r3, #127	@ 0x7f
 8009658:	f36e 200f 	bfi	r0, lr, #8, #8
 800965c:	f3c3 4506 	ubfx	r5, r3, #16, #7
 8009660:	f36c 4017 	bfi	r0, ip, #16, #8
 8009664:	f3c3 5380 	ubfx	r3, r3, #22, #1
 8009668:	f363 601f 	bfi	r0, r3, #24, #8
 800966c:	6008      	str	r0, [r1, #0]
 800966e:	b9da      	cbnz	r2, 80096a8 <HAL_RTC_GetTime+0x74>
 8009670:	ea4f 131e 	mov.w	r3, lr, lsr #4
 8009674:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009678:	f00e 0e0f 	and.w	lr, lr, #15
 800967c:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8009680:	0924      	lsrs	r4, r4, #4
 8009682:	ea4f 131c 	mov.w	r3, ip, lsr #4
 8009686:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800968a:	f005 050f 	and.w	r5, r5, #15
 800968e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009692:	f00c 0c0f 	and.w	ip, ip, #15
 8009696:	eb05 0544 	add.w	r5, r5, r4, lsl #1
 800969a:	eb0c 0c43 	add.w	ip, ip, r3, lsl #1
 800969e:	700d      	strb	r5, [r1, #0]
 80096a0:	f881 e001 	strb.w	lr, [r1, #1]
 80096a4:	f881 c002 	strb.w	ip, [r1, #2]
 80096a8:	2000      	movs	r0, #0
 80096aa:	bd30      	pop	{r4, r5, pc}

080096ac <HAL_RTC_SetDate>:
 80096ac:	f890 3020 	ldrb.w	r3, [r0, #32]
 80096b0:	2b01      	cmp	r3, #1
 80096b2:	f000 809c 	beq.w	80097ee <HAL_RTC_SetDate+0x142>
 80096b6:	b570      	push	{r4, r5, r6, lr}
 80096b8:	4605      	mov	r5, r0
 80096ba:	2302      	movs	r3, #2
 80096bc:	2001      	movs	r0, #1
 80096be:	f885 0020 	strb.w	r0, [r5, #32]
 80096c2:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80096c6:	f891 e000 	ldrb.w	lr, [r1]
 80096ca:	78cb      	ldrb	r3, [r1, #3]
 80096cc:	7848      	ldrb	r0, [r1, #1]
 80096ce:	f891 c002 	ldrb.w	ip, [r1, #2]
 80096d2:	ea4f 3e4e 	mov.w	lr, lr, lsl #13
 80096d6:	b31a      	cbz	r2, 8009720 <HAL_RTC_SetDate+0x74>
 80096d8:	ea4e 4403 	orr.w	r4, lr, r3, lsl #16
 80096dc:	ea44 040c 	orr.w	r4, r4, ip
 80096e0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
 80096e4:	682a      	ldr	r2, [r5, #0]
 80096e6:	2353      	movs	r3, #83	@ 0x53
 80096e8:	21ca      	movs	r1, #202	@ 0xca
 80096ea:	6251      	str	r1, [r2, #36]	@ 0x24
 80096ec:	6253      	str	r3, [r2, #36]	@ 0x24
 80096ee:	68d3      	ldr	r3, [r2, #12]
 80096f0:	065e      	lsls	r6, r3, #25
 80096f2:	d550      	bpl.n	8009796 <HAL_RTC_SetDate+0xea>
 80096f4:	f024 447f 	bic.w	r4, r4, #4278190080	@ 0xff000000
 80096f8:	f024 04c0 	bic.w	r4, r4, #192	@ 0xc0
 80096fc:	6054      	str	r4, [r2, #4]
 80096fe:	68d3      	ldr	r3, [r2, #12]
 8009700:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009704:	60d3      	str	r3, [r2, #12]
 8009706:	6893      	ldr	r3, [r2, #8]
 8009708:	0699      	lsls	r1, r3, #26
 800970a:	d55f      	bpl.n	80097cc <HAL_RTC_SetDate+0x120>
 800970c:	2301      	movs	r3, #1
 800970e:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 8009712:	2000      	movs	r0, #0
 8009714:	21ff      	movs	r1, #255	@ 0xff
 8009716:	2300      	movs	r3, #0
 8009718:	6251      	str	r1, [r2, #36]	@ 0x24
 800971a:	f885 3020 	strb.w	r3, [r5, #32]
 800971e:	bd70      	pop	{r4, r5, r6, pc}
 8009720:	06c4      	lsls	r4, r0, #27
 8009722:	d550      	bpl.n	80097c6 <HAL_RTC_SetDate+0x11a>
 8009724:	f020 0010 	bic.w	r0, r0, #16
 8009728:	300a      	adds	r0, #10
 800972a:	b2c0      	uxtb	r0, r0
 800972c:	2b09      	cmp	r3, #9
 800972e:	7048      	strb	r0, [r1, #1]
 8009730:	bf98      	it	ls
 8009732:	041c      	lslls	r4, r3, #16
 8009734:	d90d      	bls.n	8009752 <HAL_RTC_SetDate+0xa6>
 8009736:	2100      	movs	r1, #0
 8009738:	3b0a      	subs	r3, #10
 800973a:	b2db      	uxtb	r3, r3
 800973c:	2b09      	cmp	r3, #9
 800973e:	f101 0101 	add.w	r1, r1, #1
 8009742:	d8f9      	bhi.n	8009738 <HAL_RTC_SetDate+0x8c>
 8009744:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8009748:	b2db      	uxtb	r3, r3
 800974a:	2809      	cmp	r0, #9
 800974c:	ea4f 4403 	mov.w	r4, r3, lsl #16
 8009750:	d909      	bls.n	8009766 <HAL_RTC_SetDate+0xba>
 8009752:	2300      	movs	r3, #0
 8009754:	380a      	subs	r0, #10
 8009756:	b2c0      	uxtb	r0, r0
 8009758:	2809      	cmp	r0, #9
 800975a:	f103 0301 	add.w	r3, r3, #1
 800975e:	d8f9      	bhi.n	8009754 <HAL_RTC_SetDate+0xa8>
 8009760:	ea40 1303 	orr.w	r3, r0, r3, lsl #4
 8009764:	b2d8      	uxtb	r0, r3
 8009766:	f1bc 0f09 	cmp.w	ip, #9
 800976a:	ea4f 2000 	mov.w	r0, r0, lsl #8
 800976e:	d90c      	bls.n	800978a <HAL_RTC_SetDate+0xde>
 8009770:	f1ac 0c0a 	sub.w	ip, ip, #10
 8009774:	fa5f fc8c 	uxtb.w	ip, ip
 8009778:	f1bc 0f09 	cmp.w	ip, #9
 800977c:	f102 0201 	add.w	r2, r2, #1
 8009780:	d8f6      	bhi.n	8009770 <HAL_RTC_SetDate+0xc4>
 8009782:	ea4c 1202 	orr.w	r2, ip, r2, lsl #4
 8009786:	fa5f fc82 	uxtb.w	ip, r2
 800978a:	ea44 040e 	orr.w	r4, r4, lr
 800978e:	4304      	orrs	r4, r0
 8009790:	ea44 040c 	orr.w	r4, r4, ip
 8009794:	e7a6      	b.n	80096e4 <HAL_RTC_SetDate+0x38>
 8009796:	68d3      	ldr	r3, [r2, #12]
 8009798:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800979c:	60d3      	str	r3, [r2, #12]
 800979e:	f7fb ffd1 	bl	8005744 <HAL_GetTick>
 80097a2:	4606      	mov	r6, r0
 80097a4:	682a      	ldr	r2, [r5, #0]
 80097a6:	68d3      	ldr	r3, [r2, #12]
 80097a8:	0658      	lsls	r0, r3, #25
 80097aa:	d4a3      	bmi.n	80096f4 <HAL_RTC_SetDate+0x48>
 80097ac:	f7fb ffca 	bl	8005744 <HAL_GetTick>
 80097b0:	1b80      	subs	r0, r0, r6
 80097b2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80097b6:	d9f5      	bls.n	80097a4 <HAL_RTC_SetDate+0xf8>
 80097b8:	2304      	movs	r3, #4
 80097ba:	682a      	ldr	r2, [r5, #0]
 80097bc:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80097c0:	68d3      	ldr	r3, [r2, #12]
 80097c2:	2001      	movs	r0, #1
 80097c4:	e7a6      	b.n	8009714 <HAL_RTC_SetDate+0x68>
 80097c6:	2b09      	cmp	r3, #9
 80097c8:	d8b5      	bhi.n	8009736 <HAL_RTC_SetDate+0x8a>
 80097ca:	e7be      	b.n	800974a <HAL_RTC_SetDate+0x9e>
 80097cc:	4b0c      	ldr	r3, [pc, #48]	@ (8009800 <HAL_RTC_SetDate+0x154>)
 80097ce:	60d3      	str	r3, [r2, #12]
 80097d0:	f7fb ffb8 	bl	8005744 <HAL_GetTick>
 80097d4:	4604      	mov	r4, r0
 80097d6:	e005      	b.n	80097e4 <HAL_RTC_SetDate+0x138>
 80097d8:	f7fb ffb4 	bl	8005744 <HAL_GetTick>
 80097dc:	1b00      	subs	r0, r0, r4
 80097de:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80097e2:	d806      	bhi.n	80097f2 <HAL_RTC_SetDate+0x146>
 80097e4:	682a      	ldr	r2, [r5, #0]
 80097e6:	68d3      	ldr	r3, [r2, #12]
 80097e8:	069b      	lsls	r3, r3, #26
 80097ea:	d5f5      	bpl.n	80097d8 <HAL_RTC_SetDate+0x12c>
 80097ec:	e78e      	b.n	800970c <HAL_RTC_SetDate+0x60>
 80097ee:	2002      	movs	r0, #2
 80097f0:	4770      	bx	lr
 80097f2:	2304      	movs	r3, #4
 80097f4:	682a      	ldr	r2, [r5, #0]
 80097f6:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80097fa:	2001      	movs	r0, #1
 80097fc:	e78a      	b.n	8009714 <HAL_RTC_SetDate+0x68>
 80097fe:	bf00      	nop
 8009800:	0001ff5f 	.word	0x0001ff5f

08009804 <HAL_RTC_GetDate>:
 8009804:	6803      	ldr	r3, [r0, #0]
 8009806:	685b      	ldr	r3, [r3, #4]
 8009808:	b510      	push	{r4, lr}
 800980a:	2000      	movs	r0, #0
 800980c:	f3c3 3e42 	ubfx	lr, r3, #13, #3
 8009810:	f36e 0007 	bfi	r0, lr, #0, #8
 8009814:	f3c3 2e04 	ubfx	lr, r3, #8, #5
 8009818:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 800981c:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8009820:	f36e 200f 	bfi	r0, lr, #8, #8
 8009824:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8009828:	f363 4017 	bfi	r0, r3, #16, #8
 800982c:	f36c 601f 	bfi	r0, ip, #24, #8
 8009830:	6008      	str	r0, [r1, #0]
 8009832:	b9d2      	cbnz	r2, 800986a <HAL_RTC_GetDate+0x66>
 8009834:	091a      	lsrs	r2, r3, #4
 8009836:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800983a:	f003 030f 	and.w	r3, r3, #15
 800983e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8009842:	ea4f 1e1e 	mov.w	lr, lr, lsr #4
 8009846:	708b      	strb	r3, [r1, #2]
 8009848:	ea4f 131c 	mov.w	r3, ip, lsr #4
 800984c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8009850:	f004 040f 	and.w	r4, r4, #15
 8009854:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009858:	f00c 0c0f 	and.w	ip, ip, #15
 800985c:	eb04 044e 	add.w	r4, r4, lr, lsl #1
 8009860:	eb0c 0c43 	add.w	ip, ip, r3, lsl #1
 8009864:	704c      	strb	r4, [r1, #1]
 8009866:	f881 c003 	strb.w	ip, [r1, #3]
 800986a:	2000      	movs	r0, #0
 800986c:	bd10      	pop	{r4, pc}
 800986e:	bf00      	nop

08009870 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8009870:	b430      	push	{r4, r5}
 8009872:	4c3a      	ldr	r4, [pc, #232]	@ (800995c <HAL_RTCEx_SetWakeUpTimer_IT+0xec>)
 8009874:	4b3a      	ldr	r3, [pc, #232]	@ (8009960 <HAL_RTCEx_SetWakeUpTimer_IT+0xf0>)
 8009876:	6825      	ldr	r5, [r4, #0]
 8009878:	fba3 3505 	umull	r3, r5, r3, r5
 800987c:	0aed      	lsrs	r5, r5, #11
 800987e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8009882:	fb03 f505 	mul.w	r5, r3, r5
 8009886:	f890 3020 	ldrb.w	r3, [r0, #32]
 800988a:	b082      	sub	sp, #8
 800988c:	2b01      	cmp	r3, #1
 800988e:	9501      	str	r5, [sp, #4]
 8009890:	d05f      	beq.n	8009952 <HAL_RTCEx_SetWakeUpTimer_IT+0xe2>
 8009892:	2301      	movs	r3, #1
 8009894:	f880 3020 	strb.w	r3, [r0, #32]
 8009898:	6804      	ldr	r4, [r0, #0]
 800989a:	2302      	movs	r3, #2
 800989c:	f880 3021 	strb.w	r3, [r0, #33]	@ 0x21
 80098a0:	23ca      	movs	r3, #202	@ 0xca
 80098a2:	6263      	str	r3, [r4, #36]	@ 0x24
 80098a4:	2353      	movs	r3, #83	@ 0x53
 80098a6:	6263      	str	r3, [r4, #36]	@ 0x24
 80098a8:	68a3      	ldr	r3, [r4, #8]
 80098aa:	055b      	lsls	r3, r3, #21
 80098ac:	4684      	mov	ip, r0
 80098ae:	d422      	bmi.n	80098f6 <HAL_RTCEx_SetWakeUpTimer_IT+0x86>
 80098b0:	68a3      	ldr	r3, [r4, #8]
 80098b2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80098b6:	60a3      	str	r3, [r4, #8]
 80098b8:	68e3      	ldr	r3, [r4, #12]
 80098ba:	b2db      	uxtb	r3, r3
 80098bc:	f463 6390 	orn	r3, r3, #1152	@ 0x480
 80098c0:	60e3      	str	r3, [r4, #12]
 80098c2:	9501      	str	r5, [sp, #4]
 80098c4:	e002      	b.n	80098cc <HAL_RTCEx_SetWakeUpTimer_IT+0x5c>
 80098c6:	68e3      	ldr	r3, [r4, #12]
 80098c8:	075b      	lsls	r3, r3, #29
 80098ca:	d41b      	bmi.n	8009904 <HAL_RTCEx_SetWakeUpTimer_IT+0x94>
 80098cc:	9b01      	ldr	r3, [sp, #4]
 80098ce:	3b01      	subs	r3, #1
 80098d0:	9301      	str	r3, [sp, #4]
 80098d2:	9b01      	ldr	r3, [sp, #4]
 80098d4:	2b00      	cmp	r3, #0
 80098d6:	d1f6      	bne.n	80098c6 <HAL_RTCEx_SetWakeUpTimer_IT+0x56>
 80098d8:	22ff      	movs	r2, #255	@ 0xff
 80098da:	2303      	movs	r3, #3
 80098dc:	6262      	str	r2, [r4, #36]	@ 0x24
 80098de:	2003      	movs	r0, #3
 80098e0:	f88c 3021 	strb.w	r3, [ip, #33]	@ 0x21
 80098e4:	2300      	movs	r3, #0
 80098e6:	f88c 3020 	strb.w	r3, [ip, #32]
 80098ea:	b002      	add	sp, #8
 80098ec:	bc30      	pop	{r4, r5}
 80098ee:	4770      	bx	lr
 80098f0:	68e3      	ldr	r3, [r4, #12]
 80098f2:	0758      	lsls	r0, r3, #29
 80098f4:	d5dc      	bpl.n	80098b0 <HAL_RTCEx_SetWakeUpTimer_IT+0x40>
 80098f6:	9b01      	ldr	r3, [sp, #4]
 80098f8:	3b01      	subs	r3, #1
 80098fa:	9301      	str	r3, [sp, #4]
 80098fc:	9b01      	ldr	r3, [sp, #4]
 80098fe:	2b00      	cmp	r3, #0
 8009900:	d1f6      	bne.n	80098f0 <HAL_RTCEx_SetWakeUpTimer_IT+0x80>
 8009902:	e7e9      	b.n	80098d8 <HAL_RTCEx_SetWakeUpTimer_IT+0x68>
 8009904:	68a3      	ldr	r3, [r4, #8]
 8009906:	f023 0307 	bic.w	r3, r3, #7
 800990a:	60a3      	str	r3, [r4, #8]
 800990c:	68a3      	ldr	r3, [r4, #8]
 800990e:	431a      	orrs	r2, r3
 8009910:	4b14      	ldr	r3, [pc, #80]	@ (8009964 <HAL_RTCEx_SetWakeUpTimer_IT+0xf4>)
 8009912:	60a2      	str	r2, [r4, #8]
 8009914:	6161      	str	r1, [r4, #20]
 8009916:	f8d3 2080 	ldr.w	r2, [r3, #128]	@ 0x80
 800991a:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 800991e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8009922:	681a      	ldr	r2, [r3, #0]
 8009924:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 8009928:	601a      	str	r2, [r3, #0]
 800992a:	68a3      	ldr	r3, [r4, #8]
 800992c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8009930:	60a3      	str	r3, [r4, #8]
 8009932:	68a3      	ldr	r3, [r4, #8]
 8009934:	2100      	movs	r1, #0
 8009936:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800993a:	60a3      	str	r3, [r4, #8]
 800993c:	22ff      	movs	r2, #255	@ 0xff
 800993e:	2301      	movs	r3, #1
 8009940:	4608      	mov	r0, r1
 8009942:	6262      	str	r2, [r4, #36]	@ 0x24
 8009944:	f88c 3021 	strb.w	r3, [ip, #33]	@ 0x21
 8009948:	f88c 1020 	strb.w	r1, [ip, #32]
 800994c:	b002      	add	sp, #8
 800994e:	bc30      	pop	{r4, r5}
 8009950:	4770      	bx	lr
 8009952:	2002      	movs	r0, #2
 8009954:	b002      	add	sp, #8
 8009956:	bc30      	pop	{r4, r5}
 8009958:	4770      	bx	lr
 800995a:	bf00      	nop
 800995c:	20000034 	.word	0x20000034
 8009960:	10624dd3 	.word	0x10624dd3
 8009964:	58000800 	.word	0x58000800

08009968 <HAL_RTCEx_WakeUpTimerEventCallback>:
 8009968:	4770      	bx	lr
 800996a:	bf00      	nop

0800996c <HAL_RTCEx_WakeUpTimerIRQHandler>:
 800996c:	4a0c      	ldr	r2, [pc, #48]	@ (80099a0 <HAL_RTCEx_WakeUpTimerIRQHandler+0x34>)
 800996e:	6803      	ldr	r3, [r0, #0]
 8009970:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 8009974:	b510      	push	{r4, lr}
 8009976:	60d1      	str	r1, [r2, #12]
 8009978:	68da      	ldr	r2, [r3, #12]
 800997a:	0552      	lsls	r2, r2, #21
 800997c:	4604      	mov	r4, r0
 800997e:	d403      	bmi.n	8009988 <HAL_RTCEx_WakeUpTimerIRQHandler+0x1c>
 8009980:	2301      	movs	r3, #1
 8009982:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8009986:	bd10      	pop	{r4, pc}
 8009988:	68da      	ldr	r2, [r3, #12]
 800998a:	b2d2      	uxtb	r2, r2
 800998c:	f462 6290 	orn	r2, r2, #1152	@ 0x480
 8009990:	60da      	str	r2, [r3, #12]
 8009992:	f7ff ffe9 	bl	8009968 <HAL_RTCEx_WakeUpTimerEventCallback>
 8009996:	2301      	movs	r3, #1
 8009998:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800999c:	bd10      	pop	{r4, pc}
 800999e:	bf00      	nop
 80099a0:	58000800 	.word	0x58000800

080099a4 <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 80099a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099a8:	b082      	sub	sp, #8
 80099aa:	2300      	movs	r3, #0
 80099ac:	460e      	mov	r6, r1
 80099ae:	4615      	mov	r5, r2
 80099b0:	f88d 3003 	strb.w	r3, [sp, #3]
 80099b4:	4607      	mov	r7, r0
 80099b6:	f7fb fec5 	bl	8005744 <HAL_GetTick>
 80099ba:	4435      	add	r5, r6
 80099bc:	1a2d      	subs	r5, r5, r0
 80099be:	f7fb fec1 	bl	8005744 <HAL_GetTick>
 80099c2:	4b32      	ldr	r3, [pc, #200]	@ (8009a8c <SPI_WaitFifoStateUntilTimeout.constprop.0+0xe8>)
 80099c4:	683c      	ldr	r4, [r7, #0]
 80099c6:	681b      	ldr	r3, [r3, #0]
 80099c8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80099cc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80099d0:	0d1b      	lsrs	r3, r3, #20
 80099d2:	fb05 f303 	mul.w	r3, r5, r3
 80099d6:	3601      	adds	r6, #1
 80099d8:	9301      	str	r3, [sp, #4]
 80099da:	d111      	bne.n	8009a00 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5c>
 80099dc:	68a3      	ldr	r3, [r4, #8]
 80099de:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 80099e2:	d009      	beq.n	80099f8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
 80099e4:	7b23      	ldrb	r3, [r4, #12]
 80099e6:	b2db      	uxtb	r3, r3
 80099e8:	f88d 3003 	strb.w	r3, [sp, #3]
 80099ec:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80099f0:	68a3      	ldr	r3, [r4, #8]
 80099f2:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 80099f6:	d1f5      	bne.n	80099e4 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x40>
 80099f8:	2000      	movs	r0, #0
 80099fa:	b002      	add	sp, #8
 80099fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a00:	4680      	mov	r8, r0
 8009a02:	4623      	mov	r3, r4
 8009a04:	689b      	ldr	r3, [r3, #8]
 8009a06:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 8009a0a:	d0f5      	beq.n	80099f8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
 8009a0c:	7b23      	ldrb	r3, [r4, #12]
 8009a0e:	b2db      	uxtb	r3, r3
 8009a10:	f88d 3003 	strb.w	r3, [sp, #3]
 8009a14:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009a18:	f7fb fe94 	bl	8005744 <HAL_GetTick>
 8009a1c:	eba0 0008 	sub.w	r0, r0, r8
 8009a20:	42a8      	cmp	r0, r5
 8009a22:	d209      	bcs.n	8009a38 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x94>
 8009a24:	9a01      	ldr	r2, [sp, #4]
 8009a26:	9b01      	ldr	r3, [sp, #4]
 8009a28:	2a00      	cmp	r2, #0
 8009a2a:	f103 33ff 	add.w	r3, r3, #4294967295
 8009a2e:	9301      	str	r3, [sp, #4]
 8009a30:	bf08      	it	eq
 8009a32:	2500      	moveq	r5, #0
 8009a34:	683b      	ldr	r3, [r7, #0]
 8009a36:	e7e5      	b.n	8009a04 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x60>
 8009a38:	e9d7 3100 	ldrd	r3, r1, [r7]
 8009a3c:	685a      	ldr	r2, [r3, #4]
 8009a3e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8009a42:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8009a46:	605a      	str	r2, [r3, #4]
 8009a48:	d013      	beq.n	8009a72 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xce>
 8009a4a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8009a4c:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8009a50:	d107      	bne.n	8009a62 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xbe>
 8009a52:	681a      	ldr	r2, [r3, #0]
 8009a54:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009a58:	601a      	str	r2, [r3, #0]
 8009a5a:	681a      	ldr	r2, [r3, #0]
 8009a5c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009a60:	601a      	str	r2, [r3, #0]
 8009a62:	2201      	movs	r2, #1
 8009a64:	2300      	movs	r3, #0
 8009a66:	f887 205d 	strb.w	r2, [r7, #93]	@ 0x5d
 8009a6a:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
 8009a6e:	2003      	movs	r0, #3
 8009a70:	e7c3      	b.n	80099fa <SPI_WaitFifoStateUntilTimeout.constprop.0+0x56>
 8009a72:	68ba      	ldr	r2, [r7, #8]
 8009a74:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8009a78:	d002      	beq.n	8009a80 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xdc>
 8009a7a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8009a7e:	d1e4      	bne.n	8009a4a <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa6>
 8009a80:	681a      	ldr	r2, [r3, #0]
 8009a82:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009a86:	601a      	str	r2, [r3, #0]
 8009a88:	e7df      	b.n	8009a4a <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa6>
 8009a8a:	bf00      	nop
 8009a8c:	20000034 	.word	0x20000034

08009a90 <SPI_EndRxTxTransaction>:
 8009a90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a94:	b084      	sub	sp, #16
 8009a96:	2300      	movs	r3, #0
 8009a98:	460e      	mov	r6, r1
 8009a9a:	4617      	mov	r7, r2
 8009a9c:	f88d 3007 	strb.w	r3, [sp, #7]
 8009aa0:	4605      	mov	r5, r0
 8009aa2:	f7fb fe4f 	bl	8005744 <HAL_GetTick>
 8009aa6:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 8009be0 <SPI_EndRxTxTransaction+0x150>
 8009aaa:	eb06 0807 	add.w	r8, r6, r7
 8009aae:	eba8 0400 	sub.w	r4, r8, r0
 8009ab2:	f7fb fe47 	bl	8005744 <HAL_GetTick>
 8009ab6:	f8d9 3000 	ldr.w	r3, [r9]
 8009aba:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009abe:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8009ac2:	0d1b      	lsrs	r3, r3, #20
 8009ac4:	fb04 f303 	mul.w	r3, r4, r3
 8009ac8:	9302      	str	r3, [sp, #8]
 8009aca:	1c73      	adds	r3, r6, #1
 8009acc:	d126      	bne.n	8009b1c <SPI_EndRxTxTransaction+0x8c>
 8009ace:	682c      	ldr	r4, [r5, #0]
 8009ad0:	68a3      	ldr	r3, [r4, #8]
 8009ad2:	f413 5fc0 	tst.w	r3, #6144	@ 0x1800
 8009ad6:	d1fb      	bne.n	8009ad0 <SPI_EndRxTxTransaction+0x40>
 8009ad8:	f7fb fe34 	bl	8005744 <HAL_GetTick>
 8009adc:	eba8 0800 	sub.w	r8, r8, r0
 8009ae0:	f7fb fe30 	bl	8005744 <HAL_GetTick>
 8009ae4:	f8d9 3000 	ldr.w	r3, [r9]
 8009ae8:	682a      	ldr	r2, [r5, #0]
 8009aea:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8009aee:	fb08 f303 	mul.w	r3, r8, r3
 8009af2:	9303      	str	r3, [sp, #12]
 8009af4:	6893      	ldr	r3, [r2, #8]
 8009af6:	0619      	lsls	r1, r3, #24
 8009af8:	d4fc      	bmi.n	8009af4 <SPI_EndRxTxTransaction+0x64>
 8009afa:	463a      	mov	r2, r7
 8009afc:	4631      	mov	r1, r6
 8009afe:	4628      	mov	r0, r5
 8009b00:	f7ff ff50 	bl	80099a4 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8009b04:	b910      	cbnz	r0, 8009b0c <SPI_EndRxTxTransaction+0x7c>
 8009b06:	b004      	add	sp, #16
 8009b08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b0c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 8009b0e:	f043 0320 	orr.w	r3, r3, #32
 8009b12:	662b      	str	r3, [r5, #96]	@ 0x60
 8009b14:	2003      	movs	r0, #3
 8009b16:	b004      	add	sp, #16
 8009b18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b1c:	4682      	mov	sl, r0
 8009b1e:	682b      	ldr	r3, [r5, #0]
 8009b20:	689b      	ldr	r3, [r3, #8]
 8009b22:	f413 5fc0 	tst.w	r3, #6144	@ 0x1800
 8009b26:	d00e      	beq.n	8009b46 <SPI_EndRxTxTransaction+0xb6>
 8009b28:	f7fb fe0c 	bl	8005744 <HAL_GetTick>
 8009b2c:	eba0 030a 	sub.w	r3, r0, sl
 8009b30:	42a3      	cmp	r3, r4
 8009b32:	d220      	bcs.n	8009b76 <SPI_EndRxTxTransaction+0xe6>
 8009b34:	9a02      	ldr	r2, [sp, #8]
 8009b36:	9b02      	ldr	r3, [sp, #8]
 8009b38:	2a00      	cmp	r2, #0
 8009b3a:	f103 33ff 	add.w	r3, r3, #4294967295
 8009b3e:	bf08      	it	eq
 8009b40:	2400      	moveq	r4, #0
 8009b42:	9302      	str	r3, [sp, #8]
 8009b44:	e7eb      	b.n	8009b1e <SPI_EndRxTxTransaction+0x8e>
 8009b46:	f7fb fdfd 	bl	8005744 <HAL_GetTick>
 8009b4a:	eba8 0400 	sub.w	r4, r8, r0
 8009b4e:	f7fb fdf9 	bl	8005744 <HAL_GetTick>
 8009b52:	f8d9 3000 	ldr.w	r3, [r9]
 8009b56:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8009b5a:	fb04 f303 	mul.w	r3, r4, r3
 8009b5e:	4680      	mov	r8, r0
 8009b60:	9303      	str	r3, [sp, #12]
 8009b62:	682b      	ldr	r3, [r5, #0]
 8009b64:	689b      	ldr	r3, [r3, #8]
 8009b66:	061b      	lsls	r3, r3, #24
 8009b68:	d5c7      	bpl.n	8009afa <SPI_EndRxTxTransaction+0x6a>
 8009b6a:	f7fb fdeb 	bl	8005744 <HAL_GetTick>
 8009b6e:	eba0 0308 	sub.w	r3, r0, r8
 8009b72:	42a3      	cmp	r3, r4
 8009b74:	d31f      	bcc.n	8009bb6 <SPI_EndRxTxTransaction+0x126>
 8009b76:	e9d5 3100 	ldrd	r3, r1, [r5]
 8009b7a:	685a      	ldr	r2, [r3, #4]
 8009b7c:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8009b80:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8009b84:	605a      	str	r2, [r3, #4]
 8009b86:	d01f      	beq.n	8009bc8 <SPI_EndRxTxTransaction+0x138>
 8009b88:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8009b8a:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8009b8e:	d107      	bne.n	8009ba0 <SPI_EndRxTxTransaction+0x110>
 8009b90:	681a      	ldr	r2, [r3, #0]
 8009b92:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009b96:	601a      	str	r2, [r3, #0]
 8009b98:	681a      	ldr	r2, [r3, #0]
 8009b9a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009b9e:	601a      	str	r2, [r3, #0]
 8009ba0:	2301      	movs	r3, #1
 8009ba2:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
 8009ba6:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 8009ba8:	2200      	movs	r2, #0
 8009baa:	f043 0320 	orr.w	r3, r3, #32
 8009bae:	f885 205c 	strb.w	r2, [r5, #92]	@ 0x5c
 8009bb2:	662b      	str	r3, [r5, #96]	@ 0x60
 8009bb4:	e7ae      	b.n	8009b14 <SPI_EndRxTxTransaction+0x84>
 8009bb6:	9a03      	ldr	r2, [sp, #12]
 8009bb8:	9b03      	ldr	r3, [sp, #12]
 8009bba:	2a00      	cmp	r2, #0
 8009bbc:	f103 33ff 	add.w	r3, r3, #4294967295
 8009bc0:	bf08      	it	eq
 8009bc2:	2400      	moveq	r4, #0
 8009bc4:	9303      	str	r3, [sp, #12]
 8009bc6:	e7cc      	b.n	8009b62 <SPI_EndRxTxTransaction+0xd2>
 8009bc8:	68aa      	ldr	r2, [r5, #8]
 8009bca:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8009bce:	d002      	beq.n	8009bd6 <SPI_EndRxTxTransaction+0x146>
 8009bd0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8009bd4:	d1d8      	bne.n	8009b88 <SPI_EndRxTxTransaction+0xf8>
 8009bd6:	681a      	ldr	r2, [r3, #0]
 8009bd8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009bdc:	601a      	str	r2, [r3, #0]
 8009bde:	e7d3      	b.n	8009b88 <SPI_EndRxTxTransaction+0xf8>
 8009be0:	20000034 	.word	0x20000034

08009be4 <HAL_SPI_Init>:
 8009be4:	2800      	cmp	r0, #0
 8009be6:	d074      	beq.n	8009cd2 <HAL_SPI_Init+0xee>
 8009be8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009bec:	4604      	mov	r4, r0
 8009bee:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8009bf0:	2800      	cmp	r0, #0
 8009bf2:	d053      	beq.n	8009c9c <HAL_SPI_Init+0xb8>
 8009bf4:	2300      	movs	r3, #0
 8009bf6:	e9c4 3304 	strd	r3, r3, [r4, #16]
 8009bfa:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009bfe:	2200      	movs	r2, #0
 8009c00:	62a2      	str	r2, [r4, #40]	@ 0x28
 8009c02:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009c06:	2b00      	cmp	r3, #0
 8009c08:	d057      	beq.n	8009cba <HAL_SPI_Init+0xd6>
 8009c0a:	6821      	ldr	r1, [r4, #0]
 8009c0c:	68e7      	ldr	r7, [r4, #12]
 8009c0e:	2302      	movs	r3, #2
 8009c10:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009c14:	680b      	ldr	r3, [r1, #0]
 8009c16:	f5b7 6fe0 	cmp.w	r7, #1792	@ 0x700
 8009c1a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009c1e:	600b      	str	r3, [r1, #0]
 8009c20:	d842      	bhi.n	8009ca8 <HAL_SPI_Init+0xc4>
 8009c22:	d151      	bne.n	8009cc8 <HAL_SPI_Init+0xe4>
 8009c24:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8009c26:	f44f 5c80 	mov.w	ip, #4096	@ 0x1000
 8009c2a:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
 8009c2e:	6862      	ldr	r2, [r4, #4]
 8009c30:	68a3      	ldr	r3, [r4, #8]
 8009c32:	69a6      	ldr	r6, [r4, #24]
 8009c34:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8009c38:	f402 7282 	and.w	r2, r2, #260	@ 0x104
 8009c3c:	431a      	orrs	r2, r3
 8009c3e:	6923      	ldr	r3, [r4, #16]
 8009c40:	f003 0302 	and.w	r3, r3, #2
 8009c44:	4313      	orrs	r3, r2
 8009c46:	6962      	ldr	r2, [r4, #20]
 8009c48:	f002 0201 	and.w	r2, r2, #1
 8009c4c:	431a      	orrs	r2, r3
 8009c4e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8009c50:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
 8009c54:	f003 0308 	and.w	r3, r3, #8
 8009c58:	ea43 0e07 	orr.w	lr, r3, r7
 8009c5c:	69e3      	ldr	r3, [r4, #28]
 8009c5e:	f003 0838 	and.w	r8, r3, #56	@ 0x38
 8009c62:	6a23      	ldr	r3, [r4, #32]
 8009c64:	f003 0780 	and.w	r7, r3, #128	@ 0x80
 8009c68:	f406 7300 	and.w	r3, r6, #512	@ 0x200
 8009c6c:	4313      	orrs	r3, r2
 8009c6e:	ea43 0308 	orr.w	r3, r3, r8
 8009c72:	433b      	orrs	r3, r7
 8009c74:	0c36      	lsrs	r6, r6, #16
 8009c76:	432b      	orrs	r3, r5
 8009c78:	f006 0604 	and.w	r6, r6, #4
 8009c7c:	600b      	str	r3, [r1, #0]
 8009c7e:	f000 0010 	and.w	r0, r0, #16
 8009c82:	ea4e 0306 	orr.w	r3, lr, r6
 8009c86:	4303      	orrs	r3, r0
 8009c88:	ea43 030c 	orr.w	r3, r3, ip
 8009c8c:	604b      	str	r3, [r1, #4]
 8009c8e:	2000      	movs	r0, #0
 8009c90:	2301      	movs	r3, #1
 8009c92:	6620      	str	r0, [r4, #96]	@ 0x60
 8009c94:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009c98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c9c:	6863      	ldr	r3, [r4, #4]
 8009c9e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009ca2:	d0aa      	beq.n	8009bfa <HAL_SPI_Init+0x16>
 8009ca4:	61e0      	str	r0, [r4, #28]
 8009ca6:	e7a8      	b.n	8009bfa <HAL_SPI_Init+0x16>
 8009ca8:	f5b7 6f70 	cmp.w	r7, #3840	@ 0xf00
 8009cac:	d113      	bne.n	8009cd6 <HAL_SPI_Init+0xf2>
 8009cae:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8009cb0:	f04f 0c00 	mov.w	ip, #0
 8009cb4:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
 8009cb8:	e7b9      	b.n	8009c2e <HAL_SPI_Init+0x4a>
 8009cba:	4620      	mov	r0, r4
 8009cbc:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8009cc0:	f7f8 fbe4 	bl	800248c <HAL_SPI_MspInit>
 8009cc4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8009cc6:	e7a0      	b.n	8009c0a <HAL_SPI_Init+0x26>
 8009cc8:	f44f 5c80 	mov.w	ip, #4096	@ 0x1000
 8009ccc:	2500      	movs	r5, #0
 8009cce:	62a5      	str	r5, [r4, #40]	@ 0x28
 8009cd0:	e7ad      	b.n	8009c2e <HAL_SPI_Init+0x4a>
 8009cd2:	2001      	movs	r0, #1
 8009cd4:	4770      	bx	lr
 8009cd6:	f04f 0c00 	mov.w	ip, #0
 8009cda:	e7f7      	b.n	8009ccc <HAL_SPI_Init+0xe8>

08009cdc <HAL_SPI_Transmit>:
 8009cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ce0:	4604      	mov	r4, r0
 8009ce2:	b082      	sub	sp, #8
 8009ce4:	461d      	mov	r5, r3
 8009ce6:	460f      	mov	r7, r1
 8009ce8:	4690      	mov	r8, r2
 8009cea:	f7fb fd2b 	bl	8005744 <HAL_GetTick>
 8009cee:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009cf2:	2b01      	cmp	r3, #1
 8009cf4:	d17e      	bne.n	8009df4 <HAL_SPI_Transmit+0x118>
 8009cf6:	4606      	mov	r6, r0
 8009cf8:	b2d8      	uxtb	r0, r3
 8009cfa:	2f00      	cmp	r7, #0
 8009cfc:	d077      	beq.n	8009dee <HAL_SPI_Transmit+0x112>
 8009cfe:	f1b8 0f00 	cmp.w	r8, #0
 8009d02:	d074      	beq.n	8009dee <HAL_SPI_Transmit+0x112>
 8009d04:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009d08:	2b01      	cmp	r3, #1
 8009d0a:	d073      	beq.n	8009df4 <HAL_SPI_Transmit+0x118>
 8009d0c:	68a1      	ldr	r1, [r4, #8]
 8009d0e:	6823      	ldr	r3, [r4, #0]
 8009d10:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 8009d14:	2200      	movs	r2, #0
 8009d16:	2003      	movs	r0, #3
 8009d18:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8009d1c:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 8009d20:	e9c4 2213 	strd	r2, r2, [r4, #76]	@ 0x4c
 8009d24:	6622      	str	r2, [r4, #96]	@ 0x60
 8009d26:	6422      	str	r2, [r4, #64]	@ 0x40
 8009d28:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 8009d2c:	f8a4 803e 	strh.w	r8, [r4, #62]	@ 0x3e
 8009d30:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009d32:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8009d36:	f8a4 803c 	strh.w	r8, [r4, #60]	@ 0x3c
 8009d3a:	461a      	mov	r2, r3
 8009d3c:	d107      	bne.n	8009d4e <HAL_SPI_Transmit+0x72>
 8009d3e:	6819      	ldr	r1, [r3, #0]
 8009d40:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 8009d44:	6019      	str	r1, [r3, #0]
 8009d46:	6819      	ldr	r1, [r3, #0]
 8009d48:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8009d4c:	6019      	str	r1, [r3, #0]
 8009d4e:	6819      	ldr	r1, [r3, #0]
 8009d50:	0649      	lsls	r1, r1, #25
 8009d52:	d403      	bmi.n	8009d5c <HAL_SPI_Transmit+0x80>
 8009d54:	6819      	ldr	r1, [r3, #0]
 8009d56:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8009d5a:	6019      	str	r1, [r3, #0]
 8009d5c:	68e1      	ldr	r1, [r4, #12]
 8009d5e:	6860      	ldr	r0, [r4, #4]
 8009d60:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009d64:	d84a      	bhi.n	8009dfc <HAL_SPI_Transmit+0x120>
 8009d66:	2800      	cmp	r0, #0
 8009d68:	f000 80c3 	beq.w	8009ef2 <HAL_SPI_Transmit+0x216>
 8009d6c:	f1b8 0f01 	cmp.w	r8, #1
 8009d70:	f000 80bf 	beq.w	8009ef2 <HAL_SPI_Transmit+0x216>
 8009d74:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009d76:	b29b      	uxth	r3, r3
 8009d78:	b1f3      	cbz	r3, 8009db8 <HAL_SPI_Transmit+0xdc>
 8009d7a:	1c68      	adds	r0, r5, #1
 8009d7c:	d012      	beq.n	8009da4 <HAL_SPI_Transmit+0xc8>
 8009d7e:	e091      	b.n	8009ea4 <HAL_SPI_Transmit+0x1c8>
 8009d80:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009d82:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8009d84:	b29b      	uxth	r3, r3
 8009d86:	2b01      	cmp	r3, #1
 8009d88:	4601      	mov	r1, r0
 8009d8a:	f240 809f 	bls.w	8009ecc <HAL_SPI_Transmit+0x1f0>
 8009d8e:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009d92:	60d3      	str	r3, [r2, #12]
 8009d94:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009d96:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009d98:	3b02      	subs	r3, #2
 8009d9a:	b29b      	uxth	r3, r3
 8009d9c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009d9e:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009da0:	b289      	uxth	r1, r1
 8009da2:	b149      	cbz	r1, 8009db8 <HAL_SPI_Transmit+0xdc>
 8009da4:	6822      	ldr	r2, [r4, #0]
 8009da6:	6893      	ldr	r3, [r2, #8]
 8009da8:	0799      	lsls	r1, r3, #30
 8009daa:	d4e9      	bmi.n	8009d80 <HAL_SPI_Transmit+0xa4>
 8009dac:	f7fb fcca 	bl	8005744 <HAL_GetTick>
 8009db0:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009db2:	b289      	uxth	r1, r1
 8009db4:	2900      	cmp	r1, #0
 8009db6:	d1f5      	bne.n	8009da4 <HAL_SPI_Transmit+0xc8>
 8009db8:	4632      	mov	r2, r6
 8009dba:	4629      	mov	r1, r5
 8009dbc:	4620      	mov	r0, r4
 8009dbe:	f7ff fe67 	bl	8009a90 <SPI_EndRxTxTransaction>
 8009dc2:	b108      	cbz	r0, 8009dc8 <HAL_SPI_Transmit+0xec>
 8009dc4:	2320      	movs	r3, #32
 8009dc6:	6623      	str	r3, [r4, #96]	@ 0x60
 8009dc8:	68a3      	ldr	r3, [r4, #8]
 8009dca:	b933      	cbnz	r3, 8009dda <HAL_SPI_Transmit+0xfe>
 8009dcc:	6822      	ldr	r2, [r4, #0]
 8009dce:	9301      	str	r3, [sp, #4]
 8009dd0:	68d3      	ldr	r3, [r2, #12]
 8009dd2:	9301      	str	r3, [sp, #4]
 8009dd4:	6893      	ldr	r3, [r2, #8]
 8009dd6:	9301      	str	r3, [sp, #4]
 8009dd8:	9b01      	ldr	r3, [sp, #4]
 8009dda:	2301      	movs	r3, #1
 8009ddc:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009de0:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8009de2:	2300      	movs	r3, #0
 8009de4:	1ac0      	subs	r0, r0, r3
 8009de6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009dea:	bf18      	it	ne
 8009dec:	2001      	movne	r0, #1
 8009dee:	b002      	add	sp, #8
 8009df0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009df4:	2002      	movs	r0, #2
 8009df6:	b002      	add	sp, #8
 8009df8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009dfc:	2800      	cmp	r0, #0
 8009dfe:	d06f      	beq.n	8009ee0 <HAL_SPI_Transmit+0x204>
 8009e00:	f1b8 0f01 	cmp.w	r8, #1
 8009e04:	d06c      	beq.n	8009ee0 <HAL_SPI_Transmit+0x204>
 8009e06:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009e08:	b289      	uxth	r1, r1
 8009e0a:	2900      	cmp	r1, #0
 8009e0c:	d0d4      	beq.n	8009db8 <HAL_SPI_Transmit+0xdc>
 8009e0e:	1c69      	adds	r1, r5, #1
 8009e10:	d12c      	bne.n	8009e6c <HAL_SPI_Transmit+0x190>
 8009e12:	689a      	ldr	r2, [r3, #8]
 8009e14:	0797      	lsls	r7, r2, #30
 8009e16:	d513      	bpl.n	8009e40 <HAL_SPI_Transmit+0x164>
 8009e18:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009e1a:	f832 1b02 	ldrh.w	r1, [r2], #2
 8009e1e:	60d9      	str	r1, [r3, #12]
 8009e20:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	@ 0x3e
 8009e24:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009e26:	f10c 3cff 	add.w	ip, ip, #4294967295
 8009e2a:	fa1f fc8c 	uxth.w	ip, ip
 8009e2e:	f8a4 c03e 	strh.w	ip, [r4, #62]	@ 0x3e
 8009e32:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009e34:	b292      	uxth	r2, r2
 8009e36:	2a00      	cmp	r2, #0
 8009e38:	d0be      	beq.n	8009db8 <HAL_SPI_Transmit+0xdc>
 8009e3a:	689a      	ldr	r2, [r3, #8]
 8009e3c:	0797      	lsls	r7, r2, #30
 8009e3e:	d4eb      	bmi.n	8009e18 <HAL_SPI_Transmit+0x13c>
 8009e40:	f7fb fc80 	bl	8005744 <HAL_GetTick>
 8009e44:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e46:	b29b      	uxth	r3, r3
 8009e48:	2b00      	cmp	r3, #0
 8009e4a:	d0b5      	beq.n	8009db8 <HAL_SPI_Transmit+0xdc>
 8009e4c:	6823      	ldr	r3, [r4, #0]
 8009e4e:	e7e0      	b.n	8009e12 <HAL_SPI_Transmit+0x136>
 8009e50:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009e52:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009e56:	60d3      	str	r3, [r2, #12]
 8009e58:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e5a:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009e5c:	3b01      	subs	r3, #1
 8009e5e:	b29b      	uxth	r3, r3
 8009e60:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009e62:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e64:	b29b      	uxth	r3, r3
 8009e66:	2b00      	cmp	r3, #0
 8009e68:	d0a6      	beq.n	8009db8 <HAL_SPI_Transmit+0xdc>
 8009e6a:	6822      	ldr	r2, [r4, #0]
 8009e6c:	6893      	ldr	r3, [r2, #8]
 8009e6e:	0798      	lsls	r0, r3, #30
 8009e70:	d4ee      	bmi.n	8009e50 <HAL_SPI_Transmit+0x174>
 8009e72:	f7fb fc67 	bl	8005744 <HAL_GetTick>
 8009e76:	1b80      	subs	r0, r0, r6
 8009e78:	42a8      	cmp	r0, r5
 8009e7a:	d3f2      	bcc.n	8009e62 <HAL_SPI_Transmit+0x186>
 8009e7c:	2301      	movs	r3, #1
 8009e7e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009e82:	2300      	movs	r3, #0
 8009e84:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009e88:	2003      	movs	r0, #3
 8009e8a:	e7b0      	b.n	8009dee <HAL_SPI_Transmit+0x112>
 8009e8c:	f831 2b02 	ldrh.w	r2, [r1], #2
 8009e90:	60da      	str	r2, [r3, #12]
 8009e92:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e94:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009e96:	3b02      	subs	r3, #2
 8009e98:	b29b      	uxth	r3, r3
 8009e9a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009e9c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e9e:	b29b      	uxth	r3, r3
 8009ea0:	2b00      	cmp	r3, #0
 8009ea2:	d089      	beq.n	8009db8 <HAL_SPI_Transmit+0xdc>
 8009ea4:	6823      	ldr	r3, [r4, #0]
 8009ea6:	689a      	ldr	r2, [r3, #8]
 8009ea8:	0792      	lsls	r2, r2, #30
 8009eaa:	d539      	bpl.n	8009f20 <HAL_SPI_Transmit+0x244>
 8009eac:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009eae:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8009eb0:	b292      	uxth	r2, r2
 8009eb2:	2a01      	cmp	r2, #1
 8009eb4:	4601      	mov	r1, r0
 8009eb6:	d8e9      	bhi.n	8009e8c <HAL_SPI_Transmit+0x1b0>
 8009eb8:	7802      	ldrb	r2, [r0, #0]
 8009eba:	731a      	strb	r2, [r3, #12]
 8009ebc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ebe:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009ec0:	3b01      	subs	r3, #1
 8009ec2:	3201      	adds	r2, #1
 8009ec4:	b29b      	uxth	r3, r3
 8009ec6:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009ec8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009eca:	e7e7      	b.n	8009e9c <HAL_SPI_Transmit+0x1c0>
 8009ecc:	7803      	ldrb	r3, [r0, #0]
 8009ece:	7313      	strb	r3, [r2, #12]
 8009ed0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ed2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009ed4:	3b01      	subs	r3, #1
 8009ed6:	3201      	adds	r2, #1
 8009ed8:	b29b      	uxth	r3, r3
 8009eda:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009edc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009ede:	e75e      	b.n	8009d9e <HAL_SPI_Transmit+0xc2>
 8009ee0:	f837 1b02 	ldrh.w	r1, [r7], #2
 8009ee4:	60d9      	str	r1, [r3, #12]
 8009ee6:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009ee8:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009eea:	3901      	subs	r1, #1
 8009eec:	b289      	uxth	r1, r1
 8009eee:	87e1      	strh	r1, [r4, #62]	@ 0x3e
 8009ef0:	e789      	b.n	8009e06 <HAL_SPI_Transmit+0x12a>
 8009ef2:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009ef4:	b292      	uxth	r2, r2
 8009ef6:	2a01      	cmp	r2, #1
 8009ef8:	d908      	bls.n	8009f0c <HAL_SPI_Transmit+0x230>
 8009efa:	f837 2b02 	ldrh.w	r2, [r7], #2
 8009efe:	60da      	str	r2, [r3, #12]
 8009f00:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f02:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009f04:	3b02      	subs	r3, #2
 8009f06:	b29b      	uxth	r3, r3
 8009f08:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009f0a:	e733      	b.n	8009d74 <HAL_SPI_Transmit+0x98>
 8009f0c:	783a      	ldrb	r2, [r7, #0]
 8009f0e:	731a      	strb	r2, [r3, #12]
 8009f10:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f12:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009f14:	3b01      	subs	r3, #1
 8009f16:	3201      	adds	r2, #1
 8009f18:	b29b      	uxth	r3, r3
 8009f1a:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009f1c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009f1e:	e729      	b.n	8009d74 <HAL_SPI_Transmit+0x98>
 8009f20:	f7fb fc10 	bl	8005744 <HAL_GetTick>
 8009f24:	1b80      	subs	r0, r0, r6
 8009f26:	42a8      	cmp	r0, r5
 8009f28:	d3b8      	bcc.n	8009e9c <HAL_SPI_Transmit+0x1c0>
 8009f2a:	e7a7      	b.n	8009e7c <HAL_SPI_Transmit+0x1a0>

08009f2c <HAL_SPI_TransmitReceive>:
 8009f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f30:	4604      	mov	r4, r0
 8009f32:	4690      	mov	r8, r2
 8009f34:	461e      	mov	r6, r3
 8009f36:	460f      	mov	r7, r1
 8009f38:	f7fb fc04 	bl	8005744 <HAL_GetTick>
 8009f3c:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009f40:	6862      	ldr	r2, [r4, #4]
 8009f42:	2b01      	cmp	r3, #1
 8009f44:	4605      	mov	r5, r0
 8009f46:	d00b      	beq.n	8009f60 <HAL_SPI_TransmitReceive+0x34>
 8009f48:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8009f4c:	f040 808c 	bne.w	800a068 <HAL_SPI_TransmitReceive+0x13c>
 8009f50:	b2d9      	uxtb	r1, r3
 8009f52:	68a3      	ldr	r3, [r4, #8]
 8009f54:	2b00      	cmp	r3, #0
 8009f56:	f040 8087 	bne.w	800a068 <HAL_SPI_TransmitReceive+0x13c>
 8009f5a:	2904      	cmp	r1, #4
 8009f5c:	f040 8084 	bne.w	800a068 <HAL_SPI_TransmitReceive+0x13c>
 8009f60:	2f00      	cmp	r7, #0
 8009f62:	f000 8169 	beq.w	800a238 <HAL_SPI_TransmitReceive+0x30c>
 8009f66:	f1b8 0f00 	cmp.w	r8, #0
 8009f6a:	f000 8165 	beq.w	800a238 <HAL_SPI_TransmitReceive+0x30c>
 8009f6e:	2e00      	cmp	r6, #0
 8009f70:	f000 8162 	beq.w	800a238 <HAL_SPI_TransmitReceive+0x30c>
 8009f74:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009f78:	2b01      	cmp	r3, #1
 8009f7a:	d075      	beq.n	800a068 <HAL_SPI_TransmitReceive+0x13c>
 8009f7c:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009f80:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
 8009f84:	2101      	movs	r1, #1
 8009f86:	2b04      	cmp	r3, #4
 8009f88:	f884 105c 	strb.w	r1, [r4, #92]	@ 0x5c
 8009f8c:	68e1      	ldr	r1, [r4, #12]
 8009f8e:	f8a4 6044 	strh.w	r6, [r4, #68]	@ 0x44
 8009f92:	bf1c      	itt	ne
 8009f94:	2305      	movne	r3, #5
 8009f96:	f884 305d 	strbne.w	r3, [r4, #93]	@ 0x5d
 8009f9a:	2300      	movs	r3, #0
 8009f9c:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009fa0:	6623      	str	r3, [r4, #96]	@ 0x60
 8009fa2:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8009fa4:	f8a4 6046 	strh.w	r6, [r4, #70]	@ 0x46
 8009fa8:	6523      	str	r3, [r4, #80]	@ 0x50
 8009faa:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009fac:	6823      	ldr	r3, [r4, #0]
 8009fae:	87a6      	strh	r6, [r4, #60]	@ 0x3c
 8009fb0:	87e6      	strh	r6, [r4, #62]	@ 0x3e
 8009fb2:	d95c      	bls.n	800a06e <HAL_SPI_TransmitReceive+0x142>
 8009fb4:	6859      	ldr	r1, [r3, #4]
 8009fb6:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 8009fba:	6059      	str	r1, [r3, #4]
 8009fbc:	6819      	ldr	r1, [r3, #0]
 8009fbe:	0648      	lsls	r0, r1, #25
 8009fc0:	d403      	bmi.n	8009fca <HAL_SPI_TransmitReceive+0x9e>
 8009fc2:	6819      	ldr	r1, [r3, #0]
 8009fc4:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8009fc8:	6019      	str	r1, [r3, #0]
 8009fca:	2a00      	cmp	r2, #0
 8009fcc:	f000 8100 	beq.w	800a1d0 <HAL_SPI_TransmitReceive+0x2a4>
 8009fd0:	2e01      	cmp	r6, #1
 8009fd2:	f000 80fd 	beq.w	800a1d0 <HAL_SPI_TransmitReceive+0x2a4>
 8009fd6:	9b06      	ldr	r3, [sp, #24]
 8009fd8:	3301      	adds	r3, #1
 8009fda:	f04f 0601 	mov.w	r6, #1
 8009fde:	d028      	beq.n	800a032 <HAL_SPI_TransmitReceive+0x106>
 8009fe0:	e09a      	b.n	800a118 <HAL_SPI_TransmitReceive+0x1ec>
 8009fe2:	6822      	ldr	r2, [r4, #0]
 8009fe4:	6893      	ldr	r3, [r2, #8]
 8009fe6:	0799      	lsls	r1, r3, #30
 8009fe8:	d50d      	bpl.n	800a006 <HAL_SPI_TransmitReceive+0xda>
 8009fea:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009fec:	b29b      	uxth	r3, r3
 8009fee:	b153      	cbz	r3, 800a006 <HAL_SPI_TransmitReceive+0xda>
 8009ff0:	b146      	cbz	r6, 800a004 <HAL_SPI_TransmitReceive+0xd8>
 8009ff2:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009ff4:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009ff8:	60d3      	str	r3, [r2, #12]
 8009ffa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ffc:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009ffe:	3b01      	subs	r3, #1
 800a000:	b29b      	uxth	r3, r3
 800a002:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a004:	2600      	movs	r6, #0
 800a006:	6893      	ldr	r3, [r2, #8]
 800a008:	f013 0301 	ands.w	r3, r3, #1
 800a00c:	d00f      	beq.n	800a02e <HAL_SPI_TransmitReceive+0x102>
 800a00e:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a012:	b289      	uxth	r1, r1
 800a014:	b159      	cbz	r1, 800a02e <HAL_SPI_TransmitReceive+0x102>
 800a016:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a018:	68d2      	ldr	r2, [r2, #12]
 800a01a:	f821 2b02 	strh.w	r2, [r1], #2
 800a01e:	461e      	mov	r6, r3
 800a020:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a024:	6421      	str	r1, [r4, #64]	@ 0x40
 800a026:	3b01      	subs	r3, #1
 800a028:	b29b      	uxth	r3, r3
 800a02a:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a02e:	f7fb fb89 	bl	8005744 <HAL_GetTick>
 800a032:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a034:	b29b      	uxth	r3, r3
 800a036:	2b00      	cmp	r3, #0
 800a038:	d1d3      	bne.n	8009fe2 <HAL_SPI_TransmitReceive+0xb6>
 800a03a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a03e:	b29b      	uxth	r3, r3
 800a040:	2b00      	cmp	r3, #0
 800a042:	d1ce      	bne.n	8009fe2 <HAL_SPI_TransmitReceive+0xb6>
 800a044:	9906      	ldr	r1, [sp, #24]
 800a046:	462a      	mov	r2, r5
 800a048:	4620      	mov	r0, r4
 800a04a:	f7ff fd21 	bl	8009a90 <SPI_EndRxTxTransaction>
 800a04e:	2800      	cmp	r0, #0
 800a050:	f040 80ed 	bne.w	800a22e <HAL_SPI_TransmitReceive+0x302>
 800a054:	2301      	movs	r3, #1
 800a056:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a05a:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a05c:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 800a060:	1e18      	subs	r0, r3, #0
 800a062:	bf18      	it	ne
 800a064:	2001      	movne	r0, #1
 800a066:	e000      	b.n	800a06a <HAL_SPI_TransmitReceive+0x13e>
 800a068:	2002      	movs	r0, #2
 800a06a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a06e:	2e01      	cmp	r6, #1
 800a070:	f000 8118 	beq.w	800a2a4 <HAL_SPI_TransmitReceive+0x378>
 800a074:	6859      	ldr	r1, [r3, #4]
 800a076:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 800a07a:	6059      	str	r1, [r3, #4]
 800a07c:	6819      	ldr	r1, [r3, #0]
 800a07e:	0649      	lsls	r1, r1, #25
 800a080:	bf5e      	ittt	pl
 800a082:	6819      	ldrpl	r1, [r3, #0]
 800a084:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
 800a088:	6019      	strpl	r1, [r3, #0]
 800a08a:	b962      	cbnz	r2, 800a0a6 <HAL_SPI_TransmitReceive+0x17a>
 800a08c:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800a08e:	b292      	uxth	r2, r2
 800a090:	2a01      	cmp	r2, #1
 800a092:	f240 80d3 	bls.w	800a23c <HAL_SPI_TransmitReceive+0x310>
 800a096:	f837 2b02 	ldrh.w	r2, [r7], #2
 800a09a:	60da      	str	r2, [r3, #12]
 800a09c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a09e:	63a7      	str	r7, [r4, #56]	@ 0x38
 800a0a0:	3b02      	subs	r3, #2
 800a0a2:	b29b      	uxth	r3, r3
 800a0a4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a0a6:	9b06      	ldr	r3, [sp, #24]
 800a0a8:	3301      	adds	r3, #1
 800a0aa:	f04f 0601 	mov.w	r6, #1
 800a0ae:	d17d      	bne.n	800a1ac <HAL_SPI_TransmitReceive+0x280>
 800a0b0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0b2:	b29b      	uxth	r3, r3
 800a0b4:	b923      	cbnz	r3, 800a0c0 <HAL_SPI_TransmitReceive+0x194>
 800a0b6:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a0ba:	b29b      	uxth	r3, r3
 800a0bc:	2b00      	cmp	r3, #0
 800a0be:	d0c1      	beq.n	800a044 <HAL_SPI_TransmitReceive+0x118>
 800a0c0:	6822      	ldr	r2, [r4, #0]
 800a0c2:	6893      	ldr	r3, [r2, #8]
 800a0c4:	079f      	lsls	r7, r3, #30
 800a0c6:	d506      	bpl.n	800a0d6 <HAL_SPI_TransmitReceive+0x1aa>
 800a0c8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0ca:	b29b      	uxth	r3, r3
 800a0cc:	b11b      	cbz	r3, 800a0d6 <HAL_SPI_TransmitReceive+0x1aa>
 800a0ce:	2e00      	cmp	r6, #0
 800a0d0:	f040 8093 	bne.w	800a1fa <HAL_SPI_TransmitReceive+0x2ce>
 800a0d4:	2600      	movs	r6, #0
 800a0d6:	6893      	ldr	r3, [r2, #8]
 800a0d8:	f013 0301 	ands.w	r3, r3, #1
 800a0dc:	d019      	beq.n	800a112 <HAL_SPI_TransmitReceive+0x1e6>
 800a0de:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a0e2:	b289      	uxth	r1, r1
 800a0e4:	b1a9      	cbz	r1, 800a112 <HAL_SPI_TransmitReceive+0x1e6>
 800a0e6:	f8b4 0046 	ldrh.w	r0, [r4, #70]	@ 0x46
 800a0ea:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a0ec:	b280      	uxth	r0, r0
 800a0ee:	2801      	cmp	r0, #1
 800a0f0:	d977      	bls.n	800a1e2 <HAL_SPI_TransmitReceive+0x2b6>
 800a0f2:	68d0      	ldr	r0, [r2, #12]
 800a0f4:	f821 0b02 	strh.w	r0, [r1], #2
 800a0f8:	6421      	str	r1, [r4, #64]	@ 0x40
 800a0fa:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a0fe:	3902      	subs	r1, #2
 800a100:	b289      	uxth	r1, r1
 800a102:	f8a4 1046 	strh.w	r1, [r4, #70]	@ 0x46
 800a106:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a10a:	b289      	uxth	r1, r1
 800a10c:	2901      	cmp	r1, #1
 800a10e:	d935      	bls.n	800a17c <HAL_SPI_TransmitReceive+0x250>
 800a110:	461e      	mov	r6, r3
 800a112:	f7fb fb17 	bl	8005744 <HAL_GetTick>
 800a116:	e7cb      	b.n	800a0b0 <HAL_SPI_TransmitReceive+0x184>
 800a118:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a11a:	b29b      	uxth	r3, r3
 800a11c:	b923      	cbnz	r3, 800a128 <HAL_SPI_TransmitReceive+0x1fc>
 800a11e:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a122:	b29b      	uxth	r3, r3
 800a124:	2b00      	cmp	r3, #0
 800a126:	d08d      	beq.n	800a044 <HAL_SPI_TransmitReceive+0x118>
 800a128:	6822      	ldr	r2, [r4, #0]
 800a12a:	6893      	ldr	r3, [r2, #8]
 800a12c:	0798      	lsls	r0, r3, #30
 800a12e:	d50d      	bpl.n	800a14c <HAL_SPI_TransmitReceive+0x220>
 800a130:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a132:	b29b      	uxth	r3, r3
 800a134:	b153      	cbz	r3, 800a14c <HAL_SPI_TransmitReceive+0x220>
 800a136:	b146      	cbz	r6, 800a14a <HAL_SPI_TransmitReceive+0x21e>
 800a138:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800a13a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800a13e:	60d3      	str	r3, [r2, #12]
 800a140:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a142:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a144:	3b01      	subs	r3, #1
 800a146:	b29b      	uxth	r3, r3
 800a148:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a14a:	2600      	movs	r6, #0
 800a14c:	6893      	ldr	r3, [r2, #8]
 800a14e:	f013 0301 	ands.w	r3, r3, #1
 800a152:	d004      	beq.n	800a15e <HAL_SPI_TransmitReceive+0x232>
 800a154:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a158:	b289      	uxth	r1, r1
 800a15a:	2900      	cmp	r1, #0
 800a15c:	d178      	bne.n	800a250 <HAL_SPI_TransmitReceive+0x324>
 800a15e:	f7fb faf1 	bl	8005744 <HAL_GetTick>
 800a162:	9b06      	ldr	r3, [sp, #24]
 800a164:	1b40      	subs	r0, r0, r5
 800a166:	4298      	cmp	r0, r3
 800a168:	d3d6      	bcc.n	800a118 <HAL_SPI_TransmitReceive+0x1ec>
 800a16a:	2301      	movs	r3, #1
 800a16c:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a170:	2300      	movs	r3, #0
 800a172:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a176:	2003      	movs	r0, #3
 800a178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a17c:	6851      	ldr	r1, [r2, #4]
 800a17e:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800a182:	6051      	str	r1, [r2, #4]
 800a184:	e7c4      	b.n	800a110 <HAL_SPI_TransmitReceive+0x1e4>
 800a186:	2e00      	cmp	r6, #0
 800a188:	f040 80a6 	bne.w	800a2d8 <HAL_SPI_TransmitReceive+0x3ac>
 800a18c:	2600      	movs	r6, #0
 800a18e:	6893      	ldr	r3, [r2, #8]
 800a190:	f013 0301 	ands.w	r3, r3, #1
 800a194:	d004      	beq.n	800a1a0 <HAL_SPI_TransmitReceive+0x274>
 800a196:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a19a:	b289      	uxth	r1, r1
 800a19c:	2900      	cmp	r1, #0
 800a19e:	d164      	bne.n	800a26a <HAL_SPI_TransmitReceive+0x33e>
 800a1a0:	f7fb fad0 	bl	8005744 <HAL_GetTick>
 800a1a4:	9b06      	ldr	r3, [sp, #24]
 800a1a6:	1b40      	subs	r0, r0, r5
 800a1a8:	4298      	cmp	r0, r3
 800a1aa:	d2de      	bcs.n	800a16a <HAL_SPI_TransmitReceive+0x23e>
 800a1ac:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a1ae:	b29b      	uxth	r3, r3
 800a1b0:	b92b      	cbnz	r3, 800a1be <HAL_SPI_TransmitReceive+0x292>
 800a1b2:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a1b6:	b29b      	uxth	r3, r3
 800a1b8:	2b00      	cmp	r3, #0
 800a1ba:	f43f af43 	beq.w	800a044 <HAL_SPI_TransmitReceive+0x118>
 800a1be:	6822      	ldr	r2, [r4, #0]
 800a1c0:	6893      	ldr	r3, [r2, #8]
 800a1c2:	079b      	lsls	r3, r3, #30
 800a1c4:	d5e3      	bpl.n	800a18e <HAL_SPI_TransmitReceive+0x262>
 800a1c6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a1c8:	b29b      	uxth	r3, r3
 800a1ca:	2b00      	cmp	r3, #0
 800a1cc:	d0df      	beq.n	800a18e <HAL_SPI_TransmitReceive+0x262>
 800a1ce:	e7da      	b.n	800a186 <HAL_SPI_TransmitReceive+0x25a>
 800a1d0:	f837 2b02 	ldrh.w	r2, [r7], #2
 800a1d4:	60da      	str	r2, [r3, #12]
 800a1d6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a1d8:	63a7      	str	r7, [r4, #56]	@ 0x38
 800a1da:	3b01      	subs	r3, #1
 800a1dc:	b29b      	uxth	r3, r3
 800a1de:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a1e0:	e6f9      	b.n	8009fd6 <HAL_SPI_TransmitReceive+0xaa>
 800a1e2:	7b12      	ldrb	r2, [r2, #12]
 800a1e4:	700a      	strb	r2, [r1, #0]
 800a1e6:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a1ea:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a1ec:	3a01      	subs	r2, #1
 800a1ee:	3101      	adds	r1, #1
 800a1f0:	b292      	uxth	r2, r2
 800a1f2:	6421      	str	r1, [r4, #64]	@ 0x40
 800a1f4:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a1f8:	e78a      	b.n	800a110 <HAL_SPI_TransmitReceive+0x1e4>
 800a1fa:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a1fc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800a1fe:	b289      	uxth	r1, r1
 800a200:	2901      	cmp	r1, #1
 800a202:	d908      	bls.n	800a216 <HAL_SPI_TransmitReceive+0x2ea>
 800a204:	f833 1b02 	ldrh.w	r1, [r3], #2
 800a208:	60d1      	str	r1, [r2, #12]
 800a20a:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a20c:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a20e:	1e8b      	subs	r3, r1, #2
 800a210:	b29b      	uxth	r3, r3
 800a212:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a214:	e75e      	b.n	800a0d4 <HAL_SPI_TransmitReceive+0x1a8>
 800a216:	781b      	ldrb	r3, [r3, #0]
 800a218:	7313      	strb	r3, [r2, #12]
 800a21a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a21c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a21e:	3b01      	subs	r3, #1
 800a220:	1c51      	adds	r1, r2, #1
 800a222:	b29b      	uxth	r3, r3
 800a224:	6822      	ldr	r2, [r4, #0]
 800a226:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a228:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a22a:	2600      	movs	r6, #0
 800a22c:	e753      	b.n	800a0d6 <HAL_SPI_TransmitReceive+0x1aa>
 800a22e:	2220      	movs	r2, #32
 800a230:	2300      	movs	r3, #0
 800a232:	6622      	str	r2, [r4, #96]	@ 0x60
 800a234:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a238:	2001      	movs	r0, #1
 800a23a:	e716      	b.n	800a06a <HAL_SPI_TransmitReceive+0x13e>
 800a23c:	783a      	ldrb	r2, [r7, #0]
 800a23e:	731a      	strb	r2, [r3, #12]
 800a240:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a242:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a244:	3b01      	subs	r3, #1
 800a246:	3201      	adds	r2, #1
 800a248:	b29b      	uxth	r3, r3
 800a24a:	63a2      	str	r2, [r4, #56]	@ 0x38
 800a24c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a24e:	e72a      	b.n	800a0a6 <HAL_SPI_TransmitReceive+0x17a>
 800a250:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a252:	68d2      	ldr	r2, [r2, #12]
 800a254:	f821 2b02 	strh.w	r2, [r1], #2
 800a258:	461e      	mov	r6, r3
 800a25a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a25e:	6421      	str	r1, [r4, #64]	@ 0x40
 800a260:	3b01      	subs	r3, #1
 800a262:	b29b      	uxth	r3, r3
 800a264:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a268:	e779      	b.n	800a15e <HAL_SPI_TransmitReceive+0x232>
 800a26a:	f8b4 0046 	ldrh.w	r0, [r4, #70]	@ 0x46
 800a26e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a270:	b280      	uxth	r0, r0
 800a272:	2801      	cmp	r0, #1
 800a274:	d923      	bls.n	800a2be <HAL_SPI_TransmitReceive+0x392>
 800a276:	68d0      	ldr	r0, [r2, #12]
 800a278:	f821 0b02 	strh.w	r0, [r1], #2
 800a27c:	6421      	str	r1, [r4, #64]	@ 0x40
 800a27e:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a282:	3902      	subs	r1, #2
 800a284:	b289      	uxth	r1, r1
 800a286:	f8a4 1046 	strh.w	r1, [r4, #70]	@ 0x46
 800a28a:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a28e:	b289      	uxth	r1, r1
 800a290:	2901      	cmp	r1, #1
 800a292:	d901      	bls.n	800a298 <HAL_SPI_TransmitReceive+0x36c>
 800a294:	461e      	mov	r6, r3
 800a296:	e783      	b.n	800a1a0 <HAL_SPI_TransmitReceive+0x274>
 800a298:	6851      	ldr	r1, [r2, #4]
 800a29a:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800a29e:	6051      	str	r1, [r2, #4]
 800a2a0:	461e      	mov	r6, r3
 800a2a2:	e77d      	b.n	800a1a0 <HAL_SPI_TransmitReceive+0x274>
 800a2a4:	685a      	ldr	r2, [r3, #4]
 800a2a6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800a2aa:	605a      	str	r2, [r3, #4]
 800a2ac:	681a      	ldr	r2, [r3, #0]
 800a2ae:	0656      	lsls	r6, r2, #25
 800a2b0:	f53f aeec 	bmi.w	800a08c <HAL_SPI_TransmitReceive+0x160>
 800a2b4:	681a      	ldr	r2, [r3, #0]
 800a2b6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800a2ba:	601a      	str	r2, [r3, #0]
 800a2bc:	e6e6      	b.n	800a08c <HAL_SPI_TransmitReceive+0x160>
 800a2be:	7b12      	ldrb	r2, [r2, #12]
 800a2c0:	700a      	strb	r2, [r1, #0]
 800a2c2:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a2c6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a2c8:	3a01      	subs	r2, #1
 800a2ca:	3101      	adds	r1, #1
 800a2cc:	b292      	uxth	r2, r2
 800a2ce:	6421      	str	r1, [r4, #64]	@ 0x40
 800a2d0:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a2d4:	461e      	mov	r6, r3
 800a2d6:	e763      	b.n	800a1a0 <HAL_SPI_TransmitReceive+0x274>
 800a2d8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a2da:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800a2dc:	b29b      	uxth	r3, r3
 800a2de:	2b01      	cmp	r3, #1
 800a2e0:	d909      	bls.n	800a2f6 <HAL_SPI_TransmitReceive+0x3ca>
 800a2e2:	460b      	mov	r3, r1
 800a2e4:	f833 1b02 	ldrh.w	r1, [r3], #2
 800a2e8:	60d1      	str	r1, [r2, #12]
 800a2ea:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a2ec:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a2ee:	1e8b      	subs	r3, r1, #2
 800a2f0:	b29b      	uxth	r3, r3
 800a2f2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a2f4:	e74a      	b.n	800a18c <HAL_SPI_TransmitReceive+0x260>
 800a2f6:	780b      	ldrb	r3, [r1, #0]
 800a2f8:	7313      	strb	r3, [r2, #12]
 800a2fa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a2fc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a2fe:	3b01      	subs	r3, #1
 800a300:	1c51      	adds	r1, r2, #1
 800a302:	b29b      	uxth	r3, r3
 800a304:	6822      	ldr	r2, [r4, #0]
 800a306:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a308:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a30a:	e73f      	b.n	800a18c <HAL_SPI_TransmitReceive+0x260>

0800a30c <HAL_SPI_Receive>:
 800a30c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a310:	f890 605d 	ldrb.w	r6, [r0, #93]	@ 0x5d
 800a314:	2e01      	cmp	r6, #1
 800a316:	b084      	sub	sp, #16
 800a318:	f040 8095 	bne.w	800a446 <HAL_SPI_Receive+0x13a>
 800a31c:	461d      	mov	r5, r3
 800a31e:	4688      	mov	r8, r1
 800a320:	b2f3      	uxtb	r3, r6
 800a322:	2900      	cmp	r1, #0
 800a324:	f000 808b 	beq.w	800a43e <HAL_SPI_Receive+0x132>
 800a328:	4617      	mov	r7, r2
 800a32a:	2a00      	cmp	r2, #0
 800a32c:	f000 8087 	beq.w	800a43e <HAL_SPI_Receive+0x132>
 800a330:	6843      	ldr	r3, [r0, #4]
 800a332:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a336:	4604      	mov	r4, r0
 800a338:	d103      	bne.n	800a342 <HAL_SPI_Receive+0x36>
 800a33a:	6883      	ldr	r3, [r0, #8]
 800a33c:	2b00      	cmp	r3, #0
 800a33e:	f000 8127 	beq.w	800a590 <HAL_SPI_Receive+0x284>
 800a342:	f7fb f9ff 	bl	8005744 <HAL_GetTick>
 800a346:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800a34a:	2b01      	cmp	r3, #1
 800a34c:	4606      	mov	r6, r0
 800a34e:	d07a      	beq.n	800a446 <HAL_SPI_Receive+0x13a>
 800a350:	2001      	movs	r0, #1
 800a352:	68e2      	ldr	r2, [r4, #12]
 800a354:	6821      	ldr	r1, [r4, #0]
 800a356:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 800a35a:	2300      	movs	r3, #0
 800a35c:	2004      	movs	r0, #4
 800a35e:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 800a362:	f5b2 6fe0 	cmp.w	r2, #1792	@ 0x700
 800a366:	6623      	str	r3, [r4, #96]	@ 0x60
 800a368:	f8a4 7046 	strh.w	r7, [r4, #70]	@ 0x46
 800a36c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a36e:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
 800a372:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a374:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 800a376:	6848      	ldr	r0, [r1, #4]
 800a378:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
 800a37c:	f8a4 7044 	strh.w	r7, [r4, #68]	@ 0x44
 800a380:	460b      	mov	r3, r1
 800a382:	d965      	bls.n	800a450 <HAL_SPI_Receive+0x144>
 800a384:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 800a388:	6048      	str	r0, [r1, #4]
 800a38a:	68a0      	ldr	r0, [r4, #8]
 800a38c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800a390:	f000 80cc 	beq.w	800a52c <HAL_SPI_Receive+0x220>
 800a394:	6808      	ldr	r0, [r1, #0]
 800a396:	0640      	lsls	r0, r0, #25
 800a398:	d465      	bmi.n	800a466 <HAL_SPI_Receive+0x15a>
 800a39a:	6808      	ldr	r0, [r1, #0]
 800a39c:	f040 0040 	orr.w	r0, r0, #64	@ 0x40
 800a3a0:	6008      	str	r0, [r1, #0]
 800a3a2:	f5b2 6fe0 	cmp.w	r2, #1792	@ 0x700
 800a3a6:	d85e      	bhi.n	800a466 <HAL_SPI_Receive+0x15a>
 800a3a8:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a3ac:	b292      	uxth	r2, r2
 800a3ae:	b1ea      	cbz	r2, 800a3ec <HAL_SPI_Receive+0xe0>
 800a3b0:	1c69      	adds	r1, r5, #1
 800a3b2:	d011      	beq.n	800a3d8 <HAL_SPI_Receive+0xcc>
 800a3b4:	e0aa      	b.n	800a50c <HAL_SPI_Receive+0x200>
 800a3b6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a3b8:	7b1b      	ldrb	r3, [r3, #12]
 800a3ba:	7013      	strb	r3, [r2, #0]
 800a3bc:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a3c0:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a3c2:	3a01      	subs	r2, #1
 800a3c4:	b292      	uxth	r2, r2
 800a3c6:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a3ca:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a3ce:	3101      	adds	r1, #1
 800a3d0:	b29b      	uxth	r3, r3
 800a3d2:	6421      	str	r1, [r4, #64]	@ 0x40
 800a3d4:	b153      	cbz	r3, 800a3ec <HAL_SPI_Receive+0xe0>
 800a3d6:	6823      	ldr	r3, [r4, #0]
 800a3d8:	689a      	ldr	r2, [r3, #8]
 800a3da:	07d2      	lsls	r2, r2, #31
 800a3dc:	d4eb      	bmi.n	800a3b6 <HAL_SPI_Receive+0xaa>
 800a3de:	f7fb f9b1 	bl	8005744 <HAL_GetTick>
 800a3e2:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a3e6:	b29b      	uxth	r3, r3
 800a3e8:	2b00      	cmp	r3, #0
 800a3ea:	d1f4      	bne.n	800a3d6 <HAL_SPI_Receive+0xca>
 800a3ec:	6863      	ldr	r3, [r4, #4]
 800a3ee:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a3f2:	f000 80a8 	beq.w	800a546 <HAL_SPI_Receive+0x23a>
 800a3f6:	f7fb f9a5 	bl	8005744 <HAL_GetTick>
 800a3fa:	19af      	adds	r7, r5, r6
 800a3fc:	1a3f      	subs	r7, r7, r0
 800a3fe:	f7fb f9a1 	bl	8005744 <HAL_GetTick>
 800a402:	4b88      	ldr	r3, [pc, #544]	@ (800a624 <HAL_SPI_Receive+0x318>)
 800a404:	681b      	ldr	r3, [r3, #0]
 800a406:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a40a:	fb07 f303 	mul.w	r3, r7, r3
 800a40e:	1c69      	adds	r1, r5, #1
 800a410:	4680      	mov	r8, r0
 800a412:	9303      	str	r3, [sp, #12]
 800a414:	f040 80c6 	bne.w	800a5a4 <HAL_SPI_Receive+0x298>
 800a418:	6823      	ldr	r3, [r4, #0]
 800a41a:	689a      	ldr	r2, [r3, #8]
 800a41c:	0612      	lsls	r2, r2, #24
 800a41e:	d4fc      	bmi.n	800a41a <HAL_SPI_Receive+0x10e>
 800a420:	6863      	ldr	r3, [r4, #4]
 800a422:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a426:	f000 809c 	beq.w	800a562 <HAL_SPI_Receive+0x256>
 800a42a:	2301      	movs	r3, #1
 800a42c:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a430:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a432:	2200      	movs	r2, #0
 800a434:	1a9b      	subs	r3, r3, r2
 800a436:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 800a43a:	bf18      	it	ne
 800a43c:	2301      	movne	r3, #1
 800a43e:	4618      	mov	r0, r3
 800a440:	b004      	add	sp, #16
 800a442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a446:	2302      	movs	r3, #2
 800a448:	4618      	mov	r0, r3
 800a44a:	b004      	add	sp, #16
 800a44c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a450:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 800a454:	6048      	str	r0, [r1, #4]
 800a456:	68a0      	ldr	r0, [r4, #8]
 800a458:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800a45c:	d066      	beq.n	800a52c <HAL_SPI_Receive+0x220>
 800a45e:	6808      	ldr	r0, [r1, #0]
 800a460:	0647      	lsls	r7, r0, #25
 800a462:	d59a      	bpl.n	800a39a <HAL_SPI_Receive+0x8e>
 800a464:	e7a0      	b.n	800a3a8 <HAL_SPI_Receive+0x9c>
 800a466:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a46a:	b292      	uxth	r2, r2
 800a46c:	2a00      	cmp	r2, #0
 800a46e:	d0bd      	beq.n	800a3ec <HAL_SPI_Receive+0xe0>
 800a470:	1c6f      	adds	r7, r5, #1
 800a472:	d12f      	bne.n	800a4d4 <HAL_SPI_Receive+0x1c8>
 800a474:	688b      	ldr	r3, [r1, #8]
 800a476:	07d8      	lsls	r0, r3, #31
 800a478:	d512      	bpl.n	800a4a0 <HAL_SPI_Receive+0x194>
 800a47a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a47c:	68ca      	ldr	r2, [r1, #12]
 800a47e:	f823 2b02 	strh.w	r2, [r3], #2
 800a482:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a486:	6423      	str	r3, [r4, #64]	@ 0x40
 800a488:	3a01      	subs	r2, #1
 800a48a:	b292      	uxth	r2, r2
 800a48c:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a490:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a494:	b29b      	uxth	r3, r3
 800a496:	2b00      	cmp	r3, #0
 800a498:	d0a8      	beq.n	800a3ec <HAL_SPI_Receive+0xe0>
 800a49a:	688b      	ldr	r3, [r1, #8]
 800a49c:	07d8      	lsls	r0, r3, #31
 800a49e:	d4ec      	bmi.n	800a47a <HAL_SPI_Receive+0x16e>
 800a4a0:	f7fb f950 	bl	8005744 <HAL_GetTick>
 800a4a4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4a8:	b29b      	uxth	r3, r3
 800a4aa:	2b00      	cmp	r3, #0
 800a4ac:	d09e      	beq.n	800a3ec <HAL_SPI_Receive+0xe0>
 800a4ae:	6821      	ldr	r1, [r4, #0]
 800a4b0:	e7e0      	b.n	800a474 <HAL_SPI_Receive+0x168>
 800a4b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a4b4:	68db      	ldr	r3, [r3, #12]
 800a4b6:	f822 3b02 	strh.w	r3, [r2], #2
 800a4ba:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4be:	6422      	str	r2, [r4, #64]	@ 0x40
 800a4c0:	3b01      	subs	r3, #1
 800a4c2:	b29b      	uxth	r3, r3
 800a4c4:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a4c8:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4cc:	b29b      	uxth	r3, r3
 800a4ce:	2b00      	cmp	r3, #0
 800a4d0:	d08c      	beq.n	800a3ec <HAL_SPI_Receive+0xe0>
 800a4d2:	6823      	ldr	r3, [r4, #0]
 800a4d4:	689a      	ldr	r2, [r3, #8]
 800a4d6:	07d0      	lsls	r0, r2, #31
 800a4d8:	d4eb      	bmi.n	800a4b2 <HAL_SPI_Receive+0x1a6>
 800a4da:	f7fb f933 	bl	8005744 <HAL_GetTick>
 800a4de:	1b83      	subs	r3, r0, r6
 800a4e0:	42ab      	cmp	r3, r5
 800a4e2:	d3f1      	bcc.n	800a4c8 <HAL_SPI_Receive+0x1bc>
 800a4e4:	e01a      	b.n	800a51c <HAL_SPI_Receive+0x210>
 800a4e6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a4e8:	7b1b      	ldrb	r3, [r3, #12]
 800a4ea:	7013      	strb	r3, [r2, #0]
 800a4ec:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4f0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a4f2:	3b01      	subs	r3, #1
 800a4f4:	3201      	adds	r2, #1
 800a4f6:	b29b      	uxth	r3, r3
 800a4f8:	6422      	str	r2, [r4, #64]	@ 0x40
 800a4fa:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a4fe:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a502:	b29b      	uxth	r3, r3
 800a504:	2b00      	cmp	r3, #0
 800a506:	f43f af71 	beq.w	800a3ec <HAL_SPI_Receive+0xe0>
 800a50a:	6823      	ldr	r3, [r4, #0]
 800a50c:	689a      	ldr	r2, [r3, #8]
 800a50e:	07d7      	lsls	r7, r2, #31
 800a510:	d4e9      	bmi.n	800a4e6 <HAL_SPI_Receive+0x1da>
 800a512:	f7fb f917 	bl	8005744 <HAL_GetTick>
 800a516:	1b83      	subs	r3, r0, r6
 800a518:	42ab      	cmp	r3, r5
 800a51a:	d3f0      	bcc.n	800a4fe <HAL_SPI_Receive+0x1f2>
 800a51c:	2301      	movs	r3, #1
 800a51e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a522:	2300      	movs	r3, #0
 800a524:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a528:	2303      	movs	r3, #3
 800a52a:	e788      	b.n	800a43e <HAL_SPI_Receive+0x132>
 800a52c:	6808      	ldr	r0, [r1, #0]
 800a52e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800a532:	6008      	str	r0, [r1, #0]
 800a534:	6808      	ldr	r0, [r1, #0]
 800a536:	f420 4080 	bic.w	r0, r0, #16384	@ 0x4000
 800a53a:	6008      	str	r0, [r1, #0]
 800a53c:	6808      	ldr	r0, [r1, #0]
 800a53e:	0640      	lsls	r0, r0, #25
 800a540:	f53f af2f 	bmi.w	800a3a2 <HAL_SPI_Receive+0x96>
 800a544:	e729      	b.n	800a39a <HAL_SPI_Receive+0x8e>
 800a546:	68a3      	ldr	r3, [r4, #8]
 800a548:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a54c:	d003      	beq.n	800a556 <HAL_SPI_Receive+0x24a>
 800a54e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a552:	f47f af50 	bne.w	800a3f6 <HAL_SPI_Receive+0xea>
 800a556:	6822      	ldr	r2, [r4, #0]
 800a558:	6813      	ldr	r3, [r2, #0]
 800a55a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a55e:	6013      	str	r3, [r2, #0]
 800a560:	e749      	b.n	800a3f6 <HAL_SPI_Receive+0xea>
 800a562:	68a3      	ldr	r3, [r4, #8]
 800a564:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a568:	d003      	beq.n	800a572 <HAL_SPI_Receive+0x266>
 800a56a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a56e:	f47f af5c 	bne.w	800a42a <HAL_SPI_Receive+0x11e>
 800a572:	4632      	mov	r2, r6
 800a574:	4629      	mov	r1, r5
 800a576:	4620      	mov	r0, r4
 800a578:	f7ff fa14 	bl	80099a4 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 800a57c:	2800      	cmp	r0, #0
 800a57e:	f43f af54 	beq.w	800a42a <HAL_SPI_Receive+0x11e>
 800a582:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a584:	f043 0320 	orr.w	r3, r3, #32
 800a588:	6623      	str	r3, [r4, #96]	@ 0x60
 800a58a:	2320      	movs	r3, #32
 800a58c:	6623      	str	r3, [r4, #96]	@ 0x60
 800a58e:	e74c      	b.n	800a42a <HAL_SPI_Receive+0x11e>
 800a590:	9500      	str	r5, [sp, #0]
 800a592:	2504      	movs	r5, #4
 800a594:	4613      	mov	r3, r2
 800a596:	f880 505d 	strb.w	r5, [r0, #93]	@ 0x5d
 800a59a:	460a      	mov	r2, r1
 800a59c:	f7ff fcc6 	bl	8009f2c <HAL_SPI_TransmitReceive>
 800a5a0:	4603      	mov	r3, r0
 800a5a2:	e74c      	b.n	800a43e <HAL_SPI_Receive+0x132>
 800a5a4:	6823      	ldr	r3, [r4, #0]
 800a5a6:	689b      	ldr	r3, [r3, #8]
 800a5a8:	061b      	lsls	r3, r3, #24
 800a5aa:	f57f af39 	bpl.w	800a420 <HAL_SPI_Receive+0x114>
 800a5ae:	f7fb f8c9 	bl	8005744 <HAL_GetTick>
 800a5b2:	eba0 0308 	sub.w	r3, r0, r8
 800a5b6:	42bb      	cmp	r3, r7
 800a5b8:	d20b      	bcs.n	800a5d2 <HAL_SPI_Receive+0x2c6>
 800a5ba:	9a03      	ldr	r2, [sp, #12]
 800a5bc:	9b03      	ldr	r3, [sp, #12]
 800a5be:	3b01      	subs	r3, #1
 800a5c0:	9303      	str	r3, [sp, #12]
 800a5c2:	6823      	ldr	r3, [r4, #0]
 800a5c4:	689b      	ldr	r3, [r3, #8]
 800a5c6:	2a00      	cmp	r2, #0
 800a5c8:	bf08      	it	eq
 800a5ca:	2700      	moveq	r7, #0
 800a5cc:	061b      	lsls	r3, r3, #24
 800a5ce:	d4ee      	bmi.n	800a5ae <HAL_SPI_Receive+0x2a2>
 800a5d0:	e726      	b.n	800a420 <HAL_SPI_Receive+0x114>
 800a5d2:	e9d4 3100 	ldrd	r3, r1, [r4]
 800a5d6:	685a      	ldr	r2, [r3, #4]
 800a5d8:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 800a5dc:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800a5e0:	605a      	str	r2, [r3, #4]
 800a5e2:	d013      	beq.n	800a60c <HAL_SPI_Receive+0x300>
 800a5e4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a5e6:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800a5ea:	d107      	bne.n	800a5fc <HAL_SPI_Receive+0x2f0>
 800a5ec:	681a      	ldr	r2, [r3, #0]
 800a5ee:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800a5f2:	601a      	str	r2, [r3, #0]
 800a5f4:	681a      	ldr	r2, [r3, #0]
 800a5f6:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800a5fa:	601a      	str	r2, [r3, #0]
 800a5fc:	2301      	movs	r3, #1
 800a5fe:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a602:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a604:	f043 0320 	orr.w	r3, r3, #32
 800a608:	6623      	str	r3, [r4, #96]	@ 0x60
 800a60a:	e7be      	b.n	800a58a <HAL_SPI_Receive+0x27e>
 800a60c:	68a2      	ldr	r2, [r4, #8]
 800a60e:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800a612:	d002      	beq.n	800a61a <HAL_SPI_Receive+0x30e>
 800a614:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800a618:	d1e4      	bne.n	800a5e4 <HAL_SPI_Receive+0x2d8>
 800a61a:	681a      	ldr	r2, [r3, #0]
 800a61c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a620:	601a      	str	r2, [r3, #0]
 800a622:	e7df      	b.n	800a5e4 <HAL_SPI_Receive+0x2d8>
 800a624:	20000034 	.word	0x20000034

0800a628 <HAL_SPI_ErrorCallback>:
 800a628:	4770      	bx	lr
 800a62a:	bf00      	nop

0800a62c <HAL_SPI_IRQHandler>:
 800a62c:	b530      	push	{r4, r5, lr}
 800a62e:	6802      	ldr	r2, [r0, #0]
 800a630:	6851      	ldr	r1, [r2, #4]
 800a632:	6893      	ldr	r3, [r2, #8]
 800a634:	f013 0f40 	tst.w	r3, #64	@ 0x40
 800a638:	b085      	sub	sp, #20
 800a63a:	4604      	mov	r4, r0
 800a63c:	f3c3 1580 	ubfx	r5, r3, #6, #1
 800a640:	d116      	bne.n	800a670 <HAL_SPI_IRQHandler+0x44>
 800a642:	f013 0f01 	tst.w	r3, #1
 800a646:	d153      	bne.n	800a6f0 <HAL_SPI_IRQHandler+0xc4>
 800a648:	0798      	lsls	r0, r3, #30
 800a64a:	d56a      	bpl.n	800a722 <HAL_SPI_IRQHandler+0xf6>
 800a64c:	0608      	lsls	r0, r1, #24
 800a64e:	d47c      	bmi.n	800a74a <HAL_SPI_IRQHandler+0x11e>
 800a650:	0698      	lsls	r0, r3, #26
 800a652:	d413      	bmi.n	800a67c <HAL_SPI_IRQHandler+0x50>
 800a654:	05db      	lsls	r3, r3, #23
 800a656:	d568      	bpl.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a658:	068d      	lsls	r5, r1, #26
 800a65a:	d566      	bpl.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a65c:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a65e:	2000      	movs	r0, #0
 800a660:	f043 0308 	orr.w	r3, r3, #8
 800a664:	6623      	str	r3, [r4, #96]	@ 0x60
 800a666:	9003      	str	r0, [sp, #12]
 800a668:	6893      	ldr	r3, [r2, #8]
 800a66a:	9303      	str	r3, [sp, #12]
 800a66c:	9b03      	ldr	r3, [sp, #12]
 800a66e:	e018      	b.n	800a6a2 <HAL_SPI_IRQHandler+0x76>
 800a670:	0798      	lsls	r0, r3, #30
 800a672:	d542      	bpl.n	800a6fa <HAL_SPI_IRQHandler+0xce>
 800a674:	0608      	lsls	r0, r1, #24
 800a676:	d468      	bmi.n	800a74a <HAL_SPI_IRQHandler+0x11e>
 800a678:	0698      	lsls	r0, r3, #26
 800a67a:	d540      	bpl.n	800a6fe <HAL_SPI_IRQHandler+0xd2>
 800a67c:	0688      	lsls	r0, r1, #26
 800a67e:	d554      	bpl.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a680:	2d00      	cmp	r5, #0
 800a682:	d156      	bne.n	800a732 <HAL_SPI_IRQHandler+0x106>
 800a684:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a686:	f040 0001 	orr.w	r0, r0, #1
 800a68a:	6620      	str	r0, [r4, #96]	@ 0x60
 800a68c:	2000      	movs	r0, #0
 800a68e:	9002      	str	r0, [sp, #8]
 800a690:	6890      	ldr	r0, [r2, #8]
 800a692:	9002      	str	r0, [sp, #8]
 800a694:	6810      	ldr	r0, [r2, #0]
 800a696:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800a69a:	6010      	str	r0, [r2, #0]
 800a69c:	9802      	ldr	r0, [sp, #8]
 800a69e:	05db      	lsls	r3, r3, #23
 800a6a0:	d4dc      	bmi.n	800a65c <HAL_SPI_IRQHandler+0x30>
 800a6a2:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a6a4:	2b00      	cmp	r3, #0
 800a6a6:	d040      	beq.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a6a8:	6853      	ldr	r3, [r2, #4]
 800a6aa:	2001      	movs	r0, #1
 800a6ac:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800a6b0:	078d      	lsls	r5, r1, #30
 800a6b2:	6053      	str	r3, [r2, #4]
 800a6b4:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 800a6b8:	d059      	beq.n	800a76e <HAL_SPI_IRQHandler+0x142>
 800a6ba:	6853      	ldr	r3, [r2, #4]
 800a6bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a6be:	f023 0303 	bic.w	r3, r3, #3
 800a6c2:	6053      	str	r3, [r2, #4]
 800a6c4:	b140      	cbz	r0, 800a6d8 <HAL_SPI_IRQHandler+0xac>
 800a6c6:	4b2c      	ldr	r3, [pc, #176]	@ (800a778 <HAL_SPI_IRQHandler+0x14c>)
 800a6c8:	6383      	str	r3, [r0, #56]	@ 0x38
 800a6ca:	f7fb fde9 	bl	80062a0 <HAL_DMA_Abort_IT>
 800a6ce:	b118      	cbz	r0, 800a6d8 <HAL_SPI_IRQHandler+0xac>
 800a6d0:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a6d2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a6d6:	6623      	str	r3, [r4, #96]	@ 0x60
 800a6d8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800a6da:	b330      	cbz	r0, 800a72a <HAL_SPI_IRQHandler+0xfe>
 800a6dc:	4b26      	ldr	r3, [pc, #152]	@ (800a778 <HAL_SPI_IRQHandler+0x14c>)
 800a6de:	6383      	str	r3, [r0, #56]	@ 0x38
 800a6e0:	f7fb fdde 	bl	80062a0 <HAL_DMA_Abort_IT>
 800a6e4:	b308      	cbz	r0, 800a72a <HAL_SPI_IRQHandler+0xfe>
 800a6e6:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a6e8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a6ec:	6623      	str	r3, [r4, #96]	@ 0x60
 800a6ee:	e01c      	b.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a6f0:	f011 0f40 	tst.w	r1, #64	@ 0x40
 800a6f4:	d0a8      	beq.n	800a648 <HAL_SPI_IRQHandler+0x1c>
 800a6f6:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a6f8:	e029      	b.n	800a74e <HAL_SPI_IRQHandler+0x122>
 800a6fa:	069d      	lsls	r5, r3, #26
 800a6fc:	d417      	bmi.n	800a72e <HAL_SPI_IRQHandler+0x102>
 800a6fe:	0688      	lsls	r0, r1, #26
 800a700:	d513      	bpl.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a702:	f894 005d 	ldrb.w	r0, [r4, #93]	@ 0x5d
 800a706:	2803      	cmp	r0, #3
 800a708:	d017      	beq.n	800a73a <HAL_SPI_IRQHandler+0x10e>
 800a70a:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a70c:	f040 0004 	orr.w	r0, r0, #4
 800a710:	6620      	str	r0, [r4, #96]	@ 0x60
 800a712:	2000      	movs	r0, #0
 800a714:	9000      	str	r0, [sp, #0]
 800a716:	68d0      	ldr	r0, [r2, #12]
 800a718:	9000      	str	r0, [sp, #0]
 800a71a:	6890      	ldr	r0, [r2, #8]
 800a71c:	9000      	str	r0, [sp, #0]
 800a71e:	9800      	ldr	r0, [sp, #0]
 800a720:	e7bd      	b.n	800a69e <HAL_SPI_IRQHandler+0x72>
 800a722:	0698      	lsls	r0, r3, #26
 800a724:	d596      	bpl.n	800a654 <HAL_SPI_IRQHandler+0x28>
 800a726:	0688      	lsls	r0, r1, #26
 800a728:	d4ac      	bmi.n	800a684 <HAL_SPI_IRQHandler+0x58>
 800a72a:	b005      	add	sp, #20
 800a72c:	bd30      	pop	{r4, r5, pc}
 800a72e:	068d      	lsls	r5, r1, #26
 800a730:	d5fb      	bpl.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a732:	f894 005d 	ldrb.w	r0, [r4, #93]	@ 0x5d
 800a736:	2803      	cmp	r0, #3
 800a738:	d10d      	bne.n	800a756 <HAL_SPI_IRQHandler+0x12a>
 800a73a:	2300      	movs	r3, #0
 800a73c:	9301      	str	r3, [sp, #4]
 800a73e:	68d3      	ldr	r3, [r2, #12]
 800a740:	9301      	str	r3, [sp, #4]
 800a742:	6893      	ldr	r3, [r2, #8]
 800a744:	9301      	str	r3, [sp, #4]
 800a746:	9b01      	ldr	r3, [sp, #4]
 800a748:	e7ef      	b.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a74a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a74c:	4620      	mov	r0, r4
 800a74e:	b005      	add	sp, #20
 800a750:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a754:	4718      	bx	r3
 800a756:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a758:	f040 0004 	orr.w	r0, r0, #4
 800a75c:	6620      	str	r0, [r4, #96]	@ 0x60
 800a75e:	2000      	movs	r0, #0
 800a760:	9000      	str	r0, [sp, #0]
 800a762:	68d0      	ldr	r0, [r2, #12]
 800a764:	9000      	str	r0, [sp, #0]
 800a766:	6890      	ldr	r0, [r2, #8]
 800a768:	9000      	str	r0, [sp, #0]
 800a76a:	9800      	ldr	r0, [sp, #0]
 800a76c:	e78a      	b.n	800a684 <HAL_SPI_IRQHandler+0x58>
 800a76e:	4620      	mov	r0, r4
 800a770:	f7ff ff5a 	bl	800a628 <HAL_SPI_ErrorCallback>
 800a774:	e7d9      	b.n	800a72a <HAL_SPI_IRQHandler+0xfe>
 800a776:	bf00      	nop
 800a778:	0800a77d 	.word	0x0800a77d

0800a77c <SPI_DMAAbortOnError>:
 800a77c:	b508      	push	{r3, lr}
 800a77e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a780:	2300      	movs	r3, #0
 800a782:	f8a0 3046 	strh.w	r3, [r0, #70]	@ 0x46
 800a786:	87c3      	strh	r3, [r0, #62]	@ 0x3e
 800a788:	f7ff ff4e 	bl	800a628 <HAL_SPI_ErrorCallback>
 800a78c:	bd08      	pop	{r3, pc}
 800a78e:	bf00      	nop

0800a790 <HAL_TIM_Base_Init>:
 800a790:	2800      	cmp	r0, #0
 800a792:	d066      	beq.n	800a862 <HAL_TIM_Base_Init+0xd2>
 800a794:	b570      	push	{r4, r5, r6, lr}
 800a796:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a79a:	4604      	mov	r4, r0
 800a79c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a7a0:	2b00      	cmp	r3, #0
 800a7a2:	d04b      	beq.n	800a83c <HAL_TIM_Base_Init+0xac>
 800a7a4:	6822      	ldr	r2, [r4, #0]
 800a7a6:	4e30      	ldr	r6, [pc, #192]	@ (800a868 <HAL_TIM_Base_Init+0xd8>)
 800a7a8:	69a1      	ldr	r1, [r4, #24]
 800a7aa:	68e5      	ldr	r5, [r4, #12]
 800a7ac:	6860      	ldr	r0, [r4, #4]
 800a7ae:	2302      	movs	r3, #2
 800a7b0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a7b4:	42b2      	cmp	r2, r6
 800a7b6:	6813      	ldr	r3, [r2, #0]
 800a7b8:	d010      	beq.n	800a7dc <HAL_TIM_Base_Init+0x4c>
 800a7ba:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 800a7be:	d042      	beq.n	800a846 <HAL_TIM_Base_Init+0xb6>
 800a7c0:	f506 56c0 	add.w	r6, r6, #6144	@ 0x1800
 800a7c4:	42b2      	cmp	r2, r6
 800a7c6:	d00d      	beq.n	800a7e4 <HAL_TIM_Base_Init+0x54>
 800a7c8:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 800a7cc:	42b2      	cmp	r2, r6
 800a7ce:	d009      	beq.n	800a7e4 <HAL_TIM_Base_Init+0x54>
 800a7d0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a7d4:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a7d6:	4319      	orrs	r1, r3
 800a7d8:	6290      	str	r0, [r2, #40]	@ 0x28
 800a7da:	e00e      	b.n	800a7fa <HAL_TIM_Base_Init+0x6a>
 800a7dc:	68a6      	ldr	r6, [r4, #8]
 800a7de:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a7e2:	4333      	orrs	r3, r6
 800a7e4:	6926      	ldr	r6, [r4, #16]
 800a7e6:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a7e8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a7ec:	4333      	orrs	r3, r6
 800a7ee:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a7f2:	6290      	str	r0, [r2, #40]	@ 0x28
 800a7f4:	4319      	orrs	r1, r3
 800a7f6:	6963      	ldr	r3, [r4, #20]
 800a7f8:	6313      	str	r3, [r2, #48]	@ 0x30
 800a7fa:	6810      	ldr	r0, [r2, #0]
 800a7fc:	2301      	movs	r3, #1
 800a7fe:	f040 0004 	orr.w	r0, r0, #4
 800a802:	6010      	str	r0, [r2, #0]
 800a804:	6153      	str	r3, [r2, #20]
 800a806:	6011      	str	r1, [r2, #0]
 800a808:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
 800a80c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a810:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800a814:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800a818:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800a81c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800a820:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800a824:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800a828:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800a82c:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 800a830:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
 800a834:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a838:	2000      	movs	r0, #0
 800a83a:	bd70      	pop	{r4, r5, r6, pc}
 800a83c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
 800a840:	f7fa fc60 	bl	8005104 <HAL_TIM_Base_MspInit>
 800a844:	e7ae      	b.n	800a7a4 <HAL_TIM_Base_Init+0x14>
 800a846:	68a6      	ldr	r6, [r4, #8]
 800a848:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a84c:	4333      	orrs	r3, r6
 800a84e:	6926      	ldr	r6, [r4, #16]
 800a850:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a852:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a856:	4333      	orrs	r3, r6
 800a858:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a85c:	4319      	orrs	r1, r3
 800a85e:	6290      	str	r0, [r2, #40]	@ 0x28
 800a860:	e7cb      	b.n	800a7fa <HAL_TIM_Base_Init+0x6a>
 800a862:	2001      	movs	r0, #1
 800a864:	4770      	bx	lr
 800a866:	bf00      	nop
 800a868:	40012c00 	.word	0x40012c00

0800a86c <HAL_TIM_Base_Start>:
 800a86c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a870:	2b01      	cmp	r3, #1
 800a872:	d10f      	bne.n	800a894 <HAL_TIM_Base_Start+0x28>
 800a874:	6803      	ldr	r3, [r0, #0]
 800a876:	4a0d      	ldr	r2, [pc, #52]	@ (800a8ac <HAL_TIM_Base_Start+0x40>)
 800a878:	2102      	movs	r1, #2
 800a87a:	4293      	cmp	r3, r2
 800a87c:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800a880:	d00a      	beq.n	800a898 <HAL_TIM_Base_Start+0x2c>
 800a882:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a886:	d007      	beq.n	800a898 <HAL_TIM_Base_Start+0x2c>
 800a888:	681a      	ldr	r2, [r3, #0]
 800a88a:	f042 0201 	orr.w	r2, r2, #1
 800a88e:	601a      	str	r2, [r3, #0]
 800a890:	2000      	movs	r0, #0
 800a892:	4770      	bx	lr
 800a894:	2001      	movs	r0, #1
 800a896:	4770      	bx	lr
 800a898:	6899      	ldr	r1, [r3, #8]
 800a89a:	4a05      	ldr	r2, [pc, #20]	@ (800a8b0 <HAL_TIM_Base_Start+0x44>)
 800a89c:	400a      	ands	r2, r1
 800a89e:	2a06      	cmp	r2, #6
 800a8a0:	d0f6      	beq.n	800a890 <HAL_TIM_Base_Start+0x24>
 800a8a2:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800a8a6:	d1ef      	bne.n	800a888 <HAL_TIM_Base_Start+0x1c>
 800a8a8:	e7f2      	b.n	800a890 <HAL_TIM_Base_Start+0x24>
 800a8aa:	bf00      	nop
 800a8ac:	40012c00 	.word	0x40012c00
 800a8b0:	00010007 	.word	0x00010007

0800a8b4 <HAL_TIM_Base_Stop>:
 800a8b4:	6802      	ldr	r2, [r0, #0]
 800a8b6:	6a13      	ldr	r3, [r2, #32]
 800a8b8:	f003 3311 	and.w	r3, r3, #286331153	@ 0x11111111
 800a8bc:	f023 5388 	bic.w	r3, r3, #285212672	@ 0x11000000
 800a8c0:	b943      	cbnz	r3, 800a8d4 <HAL_TIM_Base_Stop+0x20>
 800a8c2:	6a11      	ldr	r1, [r2, #32]
 800a8c4:	f240 4344 	movw	r3, #1092	@ 0x444
 800a8c8:	4219      	tst	r1, r3
 800a8ca:	d103      	bne.n	800a8d4 <HAL_TIM_Base_Stop+0x20>
 800a8cc:	6813      	ldr	r3, [r2, #0]
 800a8ce:	f023 0301 	bic.w	r3, r3, #1
 800a8d2:	6013      	str	r3, [r2, #0]
 800a8d4:	2301      	movs	r3, #1
 800a8d6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800a8da:	2000      	movs	r0, #0
 800a8dc:	4770      	bx	lr
 800a8de:	bf00      	nop

0800a8e0 <HAL_TIM_Base_Start_IT>:
 800a8e0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a8e4:	2b01      	cmp	r3, #1
 800a8e6:	d113      	bne.n	800a910 <HAL_TIM_Base_Start_IT+0x30>
 800a8e8:	6803      	ldr	r3, [r0, #0]
 800a8ea:	490f      	ldr	r1, [pc, #60]	@ (800a928 <HAL_TIM_Base_Start_IT+0x48>)
 800a8ec:	2202      	movs	r2, #2
 800a8ee:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800a8f2:	68da      	ldr	r2, [r3, #12]
 800a8f4:	428b      	cmp	r3, r1
 800a8f6:	f042 0201 	orr.w	r2, r2, #1
 800a8fa:	60da      	str	r2, [r3, #12]
 800a8fc:	d00a      	beq.n	800a914 <HAL_TIM_Base_Start_IT+0x34>
 800a8fe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a902:	d007      	beq.n	800a914 <HAL_TIM_Base_Start_IT+0x34>
 800a904:	681a      	ldr	r2, [r3, #0]
 800a906:	f042 0201 	orr.w	r2, r2, #1
 800a90a:	601a      	str	r2, [r3, #0]
 800a90c:	2000      	movs	r0, #0
 800a90e:	4770      	bx	lr
 800a910:	2001      	movs	r0, #1
 800a912:	4770      	bx	lr
 800a914:	6899      	ldr	r1, [r3, #8]
 800a916:	4a05      	ldr	r2, [pc, #20]	@ (800a92c <HAL_TIM_Base_Start_IT+0x4c>)
 800a918:	400a      	ands	r2, r1
 800a91a:	2a06      	cmp	r2, #6
 800a91c:	d0f6      	beq.n	800a90c <HAL_TIM_Base_Start_IT+0x2c>
 800a91e:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800a922:	d1ef      	bne.n	800a904 <HAL_TIM_Base_Start_IT+0x24>
 800a924:	e7f2      	b.n	800a90c <HAL_TIM_Base_Start_IT+0x2c>
 800a926:	bf00      	nop
 800a928:	40012c00 	.word	0x40012c00
 800a92c:	00010007 	.word	0x00010007

0800a930 <HAL_TIM_ConfigClockSource>:
 800a930:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 800a934:	2a01      	cmp	r2, #1
 800a936:	d070      	beq.n	800aa1a <HAL_TIM_ConfigClockSource+0xea>
 800a938:	4603      	mov	r3, r0
 800a93a:	b430      	push	{r4, r5}
 800a93c:	6802      	ldr	r2, [r0, #0]
 800a93e:	2402      	movs	r4, #2
 800a940:	2001      	movs	r0, #1
 800a942:	f883 403d 	strb.w	r4, [r3, #61]	@ 0x3d
 800a946:	f883 003c 	strb.w	r0, [r3, #60]	@ 0x3c
 800a94a:	6895      	ldr	r5, [r2, #8]
 800a94c:	4c50      	ldr	r4, [pc, #320]	@ (800aa90 <HAL_TIM_ConfigClockSource+0x160>)
 800a94e:	402c      	ands	r4, r5
 800a950:	6094      	str	r4, [r2, #8]
 800a952:	680c      	ldr	r4, [r1, #0]
 800a954:	2c60      	cmp	r4, #96	@ 0x60
 800a956:	d07c      	beq.n	800aa52 <HAL_TIM_ConfigClockSource+0x122>
 800a958:	d813      	bhi.n	800a982 <HAL_TIM_ConfigClockSource+0x52>
 800a95a:	2c40      	cmp	r4, #64	@ 0x40
 800a95c:	d05f      	beq.n	800aa1e <HAL_TIM_ConfigClockSource+0xee>
 800a95e:	d830      	bhi.n	800a9c2 <HAL_TIM_ConfigClockSource+0x92>
 800a960:	2c20      	cmp	r4, #32
 800a962:	d004      	beq.n	800a96e <HAL_TIM_ConfigClockSource+0x3e>
 800a964:	f200 8090 	bhi.w	800aa88 <HAL_TIM_ConfigClockSource+0x158>
 800a968:	f034 0110 	bics.w	r1, r4, #16
 800a96c:	d121      	bne.n	800a9b2 <HAL_TIM_ConfigClockSource+0x82>
 800a96e:	6891      	ldr	r1, [r2, #8]
 800a970:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a974:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a978:	4321      	orrs	r1, r4
 800a97a:	f041 0107 	orr.w	r1, r1, #7
 800a97e:	6091      	str	r1, [r2, #8]
 800a980:	e016      	b.n	800a9b0 <HAL_TIM_ConfigClockSource+0x80>
 800a982:	f5b4 5f80 	cmp.w	r4, #4096	@ 0x1000
 800a986:	d013      	beq.n	800a9b0 <HAL_TIM_ConfigClockSource+0x80>
 800a988:	f5b4 5f00 	cmp.w	r4, #8192	@ 0x2000
 800a98c:	d035      	beq.n	800a9fa <HAL_TIM_ConfigClockSource+0xca>
 800a98e:	2c70      	cmp	r4, #112	@ 0x70
 800a990:	d10f      	bne.n	800a9b2 <HAL_TIM_ConfigClockSource+0x82>
 800a992:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 800a996:	6894      	ldr	r4, [r2, #8]
 800a998:	4328      	orrs	r0, r5
 800a99a:	68cd      	ldr	r5, [r1, #12]
 800a99c:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800a9a0:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 800a9a4:	4308      	orrs	r0, r1
 800a9a6:	6090      	str	r0, [r2, #8]
 800a9a8:	6891      	ldr	r1, [r2, #8]
 800a9aa:	f041 0177 	orr.w	r1, r1, #119	@ 0x77
 800a9ae:	6091      	str	r1, [r2, #8]
 800a9b0:	2000      	movs	r0, #0
 800a9b2:	2101      	movs	r1, #1
 800a9b4:	2200      	movs	r2, #0
 800a9b6:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
 800a9ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800a9be:	bc30      	pop	{r4, r5}
 800a9c0:	4770      	bx	lr
 800a9c2:	2c50      	cmp	r4, #80	@ 0x50
 800a9c4:	d1f5      	bne.n	800a9b2 <HAL_TIM_ConfigClockSource+0x82>
 800a9c6:	6848      	ldr	r0, [r1, #4]
 800a9c8:	68cc      	ldr	r4, [r1, #12]
 800a9ca:	6a11      	ldr	r1, [r2, #32]
 800a9cc:	f021 010a 	bic.w	r1, r1, #10
 800a9d0:	4308      	orrs	r0, r1
 800a9d2:	6a11      	ldr	r1, [r2, #32]
 800a9d4:	f021 0101 	bic.w	r1, r1, #1
 800a9d8:	6211      	str	r1, [r2, #32]
 800a9da:	6991      	ldr	r1, [r2, #24]
 800a9dc:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 800a9e0:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800a9e4:	6191      	str	r1, [r2, #24]
 800a9e6:	6210      	str	r0, [r2, #32]
 800a9e8:	6891      	ldr	r1, [r2, #8]
 800a9ea:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a9ee:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a9f2:	f041 0157 	orr.w	r1, r1, #87	@ 0x57
 800a9f6:	6091      	str	r1, [r2, #8]
 800a9f8:	e7da      	b.n	800a9b0 <HAL_TIM_ConfigClockSource+0x80>
 800a9fa:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 800a9fe:	6894      	ldr	r4, [r2, #8]
 800aa00:	4328      	orrs	r0, r5
 800aa02:	68cd      	ldr	r5, [r1, #12]
 800aa04:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800aa08:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 800aa0c:	4308      	orrs	r0, r1
 800aa0e:	6090      	str	r0, [r2, #8]
 800aa10:	6891      	ldr	r1, [r2, #8]
 800aa12:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800aa16:	6091      	str	r1, [r2, #8]
 800aa18:	e7ca      	b.n	800a9b0 <HAL_TIM_ConfigClockSource+0x80>
 800aa1a:	2002      	movs	r0, #2
 800aa1c:	4770      	bx	lr
 800aa1e:	6848      	ldr	r0, [r1, #4]
 800aa20:	68cc      	ldr	r4, [r1, #12]
 800aa22:	6a11      	ldr	r1, [r2, #32]
 800aa24:	f021 010a 	bic.w	r1, r1, #10
 800aa28:	4308      	orrs	r0, r1
 800aa2a:	6a11      	ldr	r1, [r2, #32]
 800aa2c:	f021 0101 	bic.w	r1, r1, #1
 800aa30:	6211      	str	r1, [r2, #32]
 800aa32:	6991      	ldr	r1, [r2, #24]
 800aa34:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 800aa38:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800aa3c:	6191      	str	r1, [r2, #24]
 800aa3e:	6210      	str	r0, [r2, #32]
 800aa40:	6891      	ldr	r1, [r2, #8]
 800aa42:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800aa46:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800aa4a:	f041 0147 	orr.w	r1, r1, #71	@ 0x47
 800aa4e:	6091      	str	r1, [r2, #8]
 800aa50:	e7ae      	b.n	800a9b0 <HAL_TIM_ConfigClockSource+0x80>
 800aa52:	6848      	ldr	r0, [r1, #4]
 800aa54:	68cc      	ldr	r4, [r1, #12]
 800aa56:	6a11      	ldr	r1, [r2, #32]
 800aa58:	f021 01a0 	bic.w	r1, r1, #160	@ 0xa0
 800aa5c:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
 800aa60:	6a10      	ldr	r0, [r2, #32]
 800aa62:	f020 0010 	bic.w	r0, r0, #16
 800aa66:	6210      	str	r0, [r2, #32]
 800aa68:	6990      	ldr	r0, [r2, #24]
 800aa6a:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 800aa6e:	ea40 3004 	orr.w	r0, r0, r4, lsl #12
 800aa72:	6190      	str	r0, [r2, #24]
 800aa74:	6211      	str	r1, [r2, #32]
 800aa76:	6891      	ldr	r1, [r2, #8]
 800aa78:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800aa7c:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800aa80:	f041 0167 	orr.w	r1, r1, #103	@ 0x67
 800aa84:	6091      	str	r1, [r2, #8]
 800aa86:	e793      	b.n	800a9b0 <HAL_TIM_ConfigClockSource+0x80>
 800aa88:	2c30      	cmp	r4, #48	@ 0x30
 800aa8a:	f43f af70 	beq.w	800a96e <HAL_TIM_ConfigClockSource+0x3e>
 800aa8e:	e790      	b.n	800a9b2 <HAL_TIM_ConfigClockSource+0x82>
 800aa90:	ffce0088 	.word	0xffce0088

0800aa94 <HAL_TIM_OC_DelayElapsedCallback>:
 800aa94:	4770      	bx	lr
 800aa96:	bf00      	nop

0800aa98 <HAL_TIM_IC_CaptureCallback>:
 800aa98:	4770      	bx	lr
 800aa9a:	bf00      	nop

0800aa9c <HAL_TIM_PWM_PulseFinishedCallback>:
 800aa9c:	4770      	bx	lr
 800aa9e:	bf00      	nop

0800aaa0 <HAL_TIM_TriggerCallback>:
 800aaa0:	4770      	bx	lr
 800aaa2:	bf00      	nop

0800aaa4 <HAL_TIM_IRQHandler>:
 800aaa4:	6803      	ldr	r3, [r0, #0]
 800aaa6:	b570      	push	{r4, r5, r6, lr}
 800aaa8:	68de      	ldr	r6, [r3, #12]
 800aaaa:	691d      	ldr	r5, [r3, #16]
 800aaac:	07aa      	lsls	r2, r5, #30
 800aaae:	4604      	mov	r4, r0
 800aab0:	d501      	bpl.n	800aab6 <HAL_TIM_IRQHandler+0x12>
 800aab2:	07b1      	lsls	r1, r6, #30
 800aab4:	d452      	bmi.n	800ab5c <HAL_TIM_IRQHandler+0xb8>
 800aab6:	076b      	lsls	r3, r5, #29
 800aab8:	d501      	bpl.n	800aabe <HAL_TIM_IRQHandler+0x1a>
 800aaba:	0770      	lsls	r0, r6, #29
 800aabc:	d43b      	bmi.n	800ab36 <HAL_TIM_IRQHandler+0x92>
 800aabe:	0729      	lsls	r1, r5, #28
 800aac0:	d501      	bpl.n	800aac6 <HAL_TIM_IRQHandler+0x22>
 800aac2:	0732      	lsls	r2, r6, #28
 800aac4:	d425      	bmi.n	800ab12 <HAL_TIM_IRQHandler+0x6e>
 800aac6:	06e8      	lsls	r0, r5, #27
 800aac8:	d501      	bpl.n	800aace <HAL_TIM_IRQHandler+0x2a>
 800aaca:	06f1      	lsls	r1, r6, #27
 800aacc:	d411      	bmi.n	800aaf2 <HAL_TIM_IRQHandler+0x4e>
 800aace:	07ea      	lsls	r2, r5, #31
 800aad0:	d501      	bpl.n	800aad6 <HAL_TIM_IRQHandler+0x32>
 800aad2:	07f3      	lsls	r3, r6, #31
 800aad4:	d464      	bmi.n	800aba0 <HAL_TIM_IRQHandler+0xfc>
 800aad6:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
 800aada:	d04c      	beq.n	800ab76 <HAL_TIM_IRQHandler+0xd2>
 800aadc:	0630      	lsls	r0, r6, #24
 800aade:	d467      	bmi.n	800abb0 <HAL_TIM_IRQHandler+0x10c>
 800aae0:	0668      	lsls	r0, r5, #25
 800aae2:	d501      	bpl.n	800aae8 <HAL_TIM_IRQHandler+0x44>
 800aae4:	0671      	lsls	r1, r6, #25
 800aae6:	d46d      	bmi.n	800abc4 <HAL_TIM_IRQHandler+0x120>
 800aae8:	06aa      	lsls	r2, r5, #26
 800aaea:	d501      	bpl.n	800aaf0 <HAL_TIM_IRQHandler+0x4c>
 800aaec:	06b3      	lsls	r3, r6, #26
 800aaee:	d44e      	bmi.n	800ab8e <HAL_TIM_IRQHandler+0xea>
 800aaf0:	bd70      	pop	{r4, r5, r6, pc}
 800aaf2:	6823      	ldr	r3, [r4, #0]
 800aaf4:	f06f 0210 	mvn.w	r2, #16
 800aaf8:	611a      	str	r2, [r3, #16]
 800aafa:	2208      	movs	r2, #8
 800aafc:	7722      	strb	r2, [r4, #28]
 800aafe:	69db      	ldr	r3, [r3, #28]
 800ab00:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800ab04:	4620      	mov	r0, r4
 800ab06:	d071      	beq.n	800abec <HAL_TIM_IRQHandler+0x148>
 800ab08:	f7ff ffc6 	bl	800aa98 <HAL_TIM_IC_CaptureCallback>
 800ab0c:	2300      	movs	r3, #0
 800ab0e:	7723      	strb	r3, [r4, #28]
 800ab10:	e7dd      	b.n	800aace <HAL_TIM_IRQHandler+0x2a>
 800ab12:	6823      	ldr	r3, [r4, #0]
 800ab14:	f06f 0208 	mvn.w	r2, #8
 800ab18:	611a      	str	r2, [r3, #16]
 800ab1a:	2204      	movs	r2, #4
 800ab1c:	7722      	strb	r2, [r4, #28]
 800ab1e:	69db      	ldr	r3, [r3, #28]
 800ab20:	079b      	lsls	r3, r3, #30
 800ab22:	4620      	mov	r0, r4
 800ab24:	d15f      	bne.n	800abe6 <HAL_TIM_IRQHandler+0x142>
 800ab26:	f7ff ffb5 	bl	800aa94 <HAL_TIM_OC_DelayElapsedCallback>
 800ab2a:	4620      	mov	r0, r4
 800ab2c:	f7ff ffb6 	bl	800aa9c <HAL_TIM_PWM_PulseFinishedCallback>
 800ab30:	2300      	movs	r3, #0
 800ab32:	7723      	strb	r3, [r4, #28]
 800ab34:	e7c7      	b.n	800aac6 <HAL_TIM_IRQHandler+0x22>
 800ab36:	6823      	ldr	r3, [r4, #0]
 800ab38:	f06f 0204 	mvn.w	r2, #4
 800ab3c:	611a      	str	r2, [r3, #16]
 800ab3e:	2202      	movs	r2, #2
 800ab40:	7722      	strb	r2, [r4, #28]
 800ab42:	699b      	ldr	r3, [r3, #24]
 800ab44:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800ab48:	4620      	mov	r0, r4
 800ab4a:	d149      	bne.n	800abe0 <HAL_TIM_IRQHandler+0x13c>
 800ab4c:	f7ff ffa2 	bl	800aa94 <HAL_TIM_OC_DelayElapsedCallback>
 800ab50:	4620      	mov	r0, r4
 800ab52:	f7ff ffa3 	bl	800aa9c <HAL_TIM_PWM_PulseFinishedCallback>
 800ab56:	2300      	movs	r3, #0
 800ab58:	7723      	strb	r3, [r4, #28]
 800ab5a:	e7b0      	b.n	800aabe <HAL_TIM_IRQHandler+0x1a>
 800ab5c:	f06f 0202 	mvn.w	r2, #2
 800ab60:	611a      	str	r2, [r3, #16]
 800ab62:	2201      	movs	r2, #1
 800ab64:	7702      	strb	r2, [r0, #28]
 800ab66:	699b      	ldr	r3, [r3, #24]
 800ab68:	079a      	lsls	r2, r3, #30
 800ab6a:	d033      	beq.n	800abd4 <HAL_TIM_IRQHandler+0x130>
 800ab6c:	f7ff ff94 	bl	800aa98 <HAL_TIM_IC_CaptureCallback>
 800ab70:	2300      	movs	r3, #0
 800ab72:	7723      	strb	r3, [r4, #28]
 800ab74:	e79f      	b.n	800aab6 <HAL_TIM_IRQHandler+0x12>
 800ab76:	05ea      	lsls	r2, r5, #23
 800ab78:	d5b2      	bpl.n	800aae0 <HAL_TIM_IRQHandler+0x3c>
 800ab7a:	0633      	lsls	r3, r6, #24
 800ab7c:	d5b0      	bpl.n	800aae0 <HAL_TIM_IRQHandler+0x3c>
 800ab7e:	6823      	ldr	r3, [r4, #0]
 800ab80:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800ab84:	611a      	str	r2, [r3, #16]
 800ab86:	4620      	mov	r0, r4
 800ab88:	f000 f86c 	bl	800ac64 <HAL_TIMEx_Break2Callback>
 800ab8c:	e7a8      	b.n	800aae0 <HAL_TIM_IRQHandler+0x3c>
 800ab8e:	6823      	ldr	r3, [r4, #0]
 800ab90:	f06f 0220 	mvn.w	r2, #32
 800ab94:	4620      	mov	r0, r4
 800ab96:	611a      	str	r2, [r3, #16]
 800ab98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab9c:	f000 b85e 	b.w	800ac5c <HAL_TIMEx_CommutCallback>
 800aba0:	6823      	ldr	r3, [r4, #0]
 800aba2:	f06f 0201 	mvn.w	r2, #1
 800aba6:	611a      	str	r2, [r3, #16]
 800aba8:	4620      	mov	r0, r4
 800abaa:	f7f7 fb53 	bl	8002254 <HAL_TIM_PeriodElapsedCallback>
 800abae:	e792      	b.n	800aad6 <HAL_TIM_IRQHandler+0x32>
 800abb0:	6823      	ldr	r3, [r4, #0]
 800abb2:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800abb6:	611a      	str	r2, [r3, #16]
 800abb8:	4620      	mov	r0, r4
 800abba:	f000 f851 	bl	800ac60 <HAL_TIMEx_BreakCallback>
 800abbe:	05e9      	lsls	r1, r5, #23
 800abc0:	d58e      	bpl.n	800aae0 <HAL_TIM_IRQHandler+0x3c>
 800abc2:	e7dc      	b.n	800ab7e <HAL_TIM_IRQHandler+0xda>
 800abc4:	6823      	ldr	r3, [r4, #0]
 800abc6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800abca:	611a      	str	r2, [r3, #16]
 800abcc:	4620      	mov	r0, r4
 800abce:	f7ff ff67 	bl	800aaa0 <HAL_TIM_TriggerCallback>
 800abd2:	e789      	b.n	800aae8 <HAL_TIM_IRQHandler+0x44>
 800abd4:	f7ff ff5e 	bl	800aa94 <HAL_TIM_OC_DelayElapsedCallback>
 800abd8:	4620      	mov	r0, r4
 800abda:	f7ff ff5f 	bl	800aa9c <HAL_TIM_PWM_PulseFinishedCallback>
 800abde:	e7c7      	b.n	800ab70 <HAL_TIM_IRQHandler+0xcc>
 800abe0:	f7ff ff5a 	bl	800aa98 <HAL_TIM_IC_CaptureCallback>
 800abe4:	e7b7      	b.n	800ab56 <HAL_TIM_IRQHandler+0xb2>
 800abe6:	f7ff ff57 	bl	800aa98 <HAL_TIM_IC_CaptureCallback>
 800abea:	e7a1      	b.n	800ab30 <HAL_TIM_IRQHandler+0x8c>
 800abec:	f7ff ff52 	bl	800aa94 <HAL_TIM_OC_DelayElapsedCallback>
 800abf0:	4620      	mov	r0, r4
 800abf2:	f7ff ff53 	bl	800aa9c <HAL_TIM_PWM_PulseFinishedCallback>
 800abf6:	e789      	b.n	800ab0c <HAL_TIM_IRQHandler+0x68>

0800abf8 <HAL_TIMEx_MasterConfigSynchronization>:
 800abf8:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 800abfc:	2a01      	cmp	r2, #1
 800abfe:	d028      	beq.n	800ac52 <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800ac00:	b470      	push	{r4, r5, r6}
 800ac02:	4603      	mov	r3, r0
 800ac04:	4e14      	ldr	r6, [pc, #80]	@ (800ac58 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 800ac06:	6800      	ldr	r0, [r0, #0]
 800ac08:	2202      	movs	r2, #2
 800ac0a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ac0e:	42b0      	cmp	r0, r6
 800ac10:	6842      	ldr	r2, [r0, #4]
 800ac12:	680d      	ldr	r5, [r1, #0]
 800ac14:	6884      	ldr	r4, [r0, #8]
 800ac16:	d00e      	beq.n	800ac36 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 800ac18:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ac1c:	432a      	orrs	r2, r5
 800ac1e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800ac22:	6042      	str	r2, [r0, #4]
 800ac24:	d00f      	beq.n	800ac46 <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 800ac26:	2000      	movs	r0, #0
 800ac28:	2201      	movs	r2, #1
 800ac2a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ac2e:	f883 003c 	strb.w	r0, [r3, #60]	@ 0x3c
 800ac32:	bc70      	pop	{r4, r5, r6}
 800ac34:	4770      	bx	lr
 800ac36:	684e      	ldr	r6, [r1, #4]
 800ac38:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800ac3c:	4332      	orrs	r2, r6
 800ac3e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ac42:	4315      	orrs	r5, r2
 800ac44:	6045      	str	r5, [r0, #4]
 800ac46:	688a      	ldr	r2, [r1, #8]
 800ac48:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
 800ac4c:	4314      	orrs	r4, r2
 800ac4e:	6084      	str	r4, [r0, #8]
 800ac50:	e7e9      	b.n	800ac26 <HAL_TIMEx_MasterConfigSynchronization+0x2e>
 800ac52:	2002      	movs	r0, #2
 800ac54:	4770      	bx	lr
 800ac56:	bf00      	nop
 800ac58:	40012c00 	.word	0x40012c00

0800ac5c <HAL_TIMEx_CommutCallback>:
 800ac5c:	4770      	bx	lr
 800ac5e:	bf00      	nop

0800ac60 <HAL_TIMEx_BreakCallback>:
 800ac60:	4770      	bx	lr
 800ac62:	bf00      	nop

0800ac64 <HAL_TIMEx_Break2Callback>:
 800ac64:	4770      	bx	lr
 800ac66:	bf00      	nop

0800ac68 <HAL_UART_Transmit_DMA>:
 800ac68:	b570      	push	{r4, r5, r6, lr}
 800ac6a:	f8d0 6088 	ldr.w	r6, [r0, #136]	@ 0x88
 800ac6e:	2e20      	cmp	r6, #32
 800ac70:	d124      	bne.n	800acbc <HAL_UART_Transmit_DMA+0x54>
 800ac72:	4604      	mov	r4, r0
 800ac74:	b301      	cbz	r1, 800acb8 <HAL_UART_Transmit_DMA+0x50>
 800ac76:	4613      	mov	r3, r2
 800ac78:	b1f2      	cbz	r2, 800acb8 <HAL_UART_Transmit_DMA+0x50>
 800ac7a:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
 800ac7e:	2200      	movs	r2, #0
 800ac80:	6501      	str	r1, [r0, #80]	@ 0x50
 800ac82:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 800ac86:	f8a0 3054 	strh.w	r3, [r0, #84]	@ 0x54
 800ac8a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 800ac8c:	2521      	movs	r5, #33	@ 0x21
 800ac8e:	f8c4 5088 	str.w	r5, [r4, #136]	@ 0x88
 800ac92:	6825      	ldr	r5, [r4, #0]
 800ac94:	b1a8      	cbz	r0, 800acc2 <HAL_UART_Transmit_DMA+0x5a>
 800ac96:	6382      	str	r2, [r0, #56]	@ 0x38
 800ac98:	f105 0228 	add.w	r2, r5, #40	@ 0x28
 800ac9c:	4d11      	ldr	r5, [pc, #68]	@ (800ace4 <HAL_UART_Transmit_DMA+0x7c>)
 800ac9e:	62c5      	str	r5, [r0, #44]	@ 0x2c
 800aca0:	4d11      	ldr	r5, [pc, #68]	@ (800ace8 <HAL_UART_Transmit_DMA+0x80>)
 800aca2:	6305      	str	r5, [r0, #48]	@ 0x30
 800aca4:	4d11      	ldr	r5, [pc, #68]	@ (800acec <HAL_UART_Transmit_DMA+0x84>)
 800aca6:	6345      	str	r5, [r0, #52]	@ 0x34
 800aca8:	f7fb fa6a 	bl	8006180 <HAL_DMA_Start_IT>
 800acac:	b140      	cbz	r0, 800acc0 <HAL_UART_Transmit_DMA+0x58>
 800acae:	2310      	movs	r3, #16
 800acb0:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800acb4:	f8c4 6088 	str.w	r6, [r4, #136]	@ 0x88
 800acb8:	2001      	movs	r0, #1
 800acba:	bd70      	pop	{r4, r5, r6, pc}
 800acbc:	2002      	movs	r0, #2
 800acbe:	bd70      	pop	{r4, r5, r6, pc}
 800acc0:	6825      	ldr	r5, [r4, #0]
 800acc2:	2340      	movs	r3, #64	@ 0x40
 800acc4:	622b      	str	r3, [r5, #32]
 800acc6:	f105 0308 	add.w	r3, r5, #8
 800acca:	e853 3f00 	ldrex	r3, [r3]
 800acce:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800acd2:	f105 0108 	add.w	r1, r5, #8
 800acd6:	e841 3200 	strex	r2, r3, [r1]
 800acda:	2a00      	cmp	r2, #0
 800acdc:	d1f3      	bne.n	800acc6 <HAL_UART_Transmit_DMA+0x5e>
 800acde:	2000      	movs	r0, #0
 800ace0:	bd70      	pop	{r4, r5, r6, pc}
 800ace2:	bf00      	nop
 800ace4:	0800ae1d 	.word	0x0800ae1d
 800ace8:	0800ae65 	.word	0x0800ae65
 800acec:	0800ae79 	.word	0x0800ae79

0800acf0 <HAL_UART_Abort>:
 800acf0:	6803      	ldr	r3, [r0, #0]
 800acf2:	b510      	push	{r4, lr}
 800acf4:	4604      	mov	r4, r0
 800acf6:	e853 2f00 	ldrex	r2, [r3]
 800acfa:	f422 72f0 	bic.w	r2, r2, #480	@ 0x1e0
 800acfe:	e843 2100 	strex	r1, r2, [r3]
 800ad02:	2900      	cmp	r1, #0
 800ad04:	d1f7      	bne.n	800acf6 <HAL_UART_Abort+0x6>
 800ad06:	4843      	ldr	r0, [pc, #268]	@ (800ae14 <HAL_UART_Abort+0x124>)
 800ad08:	f103 0208 	add.w	r2, r3, #8
 800ad0c:	e852 2f00 	ldrex	r2, [r2]
 800ad10:	4002      	ands	r2, r0
 800ad12:	f103 0c08 	add.w	ip, r3, #8
 800ad16:	e84c 2100 	strex	r1, r2, [ip]
 800ad1a:	2900      	cmp	r1, #0
 800ad1c:	d1f4      	bne.n	800ad08 <HAL_UART_Abort+0x18>
 800ad1e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800ad20:	2a01      	cmp	r2, #1
 800ad22:	d052      	beq.n	800adca <HAL_UART_Abort+0xda>
 800ad24:	6899      	ldr	r1, [r3, #8]
 800ad26:	0608      	lsls	r0, r1, #24
 800ad28:	461a      	mov	r2, r3
 800ad2a:	d420      	bmi.n	800ad6e <HAL_UART_Abort+0x7e>
 800ad2c:	6899      	ldr	r1, [r3, #8]
 800ad2e:	0649      	lsls	r1, r1, #25
 800ad30:	d435      	bmi.n	800ad9e <HAL_UART_Abort+0xae>
 800ad32:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 800ad34:	2300      	movs	r3, #0
 800ad36:	200f      	movs	r0, #15
 800ad38:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
 800ad3c:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
 800ad40:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800ad44:	6210      	str	r0, [r2, #32]
 800ad46:	d103      	bne.n	800ad50 <HAL_UART_Abort+0x60>
 800ad48:	6993      	ldr	r3, [r2, #24]
 800ad4a:	f043 0310 	orr.w	r3, r3, #16
 800ad4e:	6193      	str	r3, [r2, #24]
 800ad50:	6991      	ldr	r1, [r2, #24]
 800ad52:	2300      	movs	r3, #0
 800ad54:	2020      	movs	r0, #32
 800ad56:	f041 0108 	orr.w	r1, r1, #8
 800ad5a:	6191      	str	r1, [r2, #24]
 800ad5c:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800ad60:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800ad64:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800ad66:	4618      	mov	r0, r3
 800ad68:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800ad6c:	bd10      	pop	{r4, pc}
 800ad6e:	f103 0208 	add.w	r2, r3, #8
 800ad72:	e852 2f00 	ldrex	r2, [r2]
 800ad76:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800ad7a:	f103 0008 	add.w	r0, r3, #8
 800ad7e:	e840 2100 	strex	r1, r2, [r0]
 800ad82:	2900      	cmp	r1, #0
 800ad84:	d1f3      	bne.n	800ad6e <HAL_UART_Abort+0x7e>
 800ad86:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800ad88:	b128      	cbz	r0, 800ad96 <HAL_UART_Abort+0xa6>
 800ad8a:	2300      	movs	r3, #0
 800ad8c:	6383      	str	r3, [r0, #56]	@ 0x38
 800ad8e:	f7fb fa4f 	bl	8006230 <HAL_DMA_Abort>
 800ad92:	bb68      	cbnz	r0, 800adf0 <HAL_UART_Abort+0x100>
 800ad94:	6823      	ldr	r3, [r4, #0]
 800ad96:	6899      	ldr	r1, [r3, #8]
 800ad98:	0649      	lsls	r1, r1, #25
 800ad9a:	461a      	mov	r2, r3
 800ad9c:	d5c9      	bpl.n	800ad32 <HAL_UART_Abort+0x42>
 800ad9e:	f103 0208 	add.w	r2, r3, #8
 800ada2:	e852 2f00 	ldrex	r2, [r2]
 800ada6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800adaa:	f103 0008 	add.w	r0, r3, #8
 800adae:	e840 2100 	strex	r1, r2, [r0]
 800adb2:	2900      	cmp	r1, #0
 800adb4:	d1f3      	bne.n	800ad9e <HAL_UART_Abort+0xae>
 800adb6:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800adba:	b1b8      	cbz	r0, 800adec <HAL_UART_Abort+0xfc>
 800adbc:	2300      	movs	r3, #0
 800adbe:	6383      	str	r3, [r0, #56]	@ 0x38
 800adc0:	f7fb fa36 	bl	8006230 <HAL_DMA_Abort>
 800adc4:	b9f0      	cbnz	r0, 800ae04 <HAL_UART_Abort+0x114>
 800adc6:	6822      	ldr	r2, [r4, #0]
 800adc8:	e7b3      	b.n	800ad32 <HAL_UART_Abort+0x42>
 800adca:	e853 2f00 	ldrex	r2, [r3]
 800adce:	f022 0210 	bic.w	r2, r2, #16
 800add2:	e843 2100 	strex	r1, r2, [r3]
 800add6:	2900      	cmp	r1, #0
 800add8:	d0a4      	beq.n	800ad24 <HAL_UART_Abort+0x34>
 800adda:	e853 2f00 	ldrex	r2, [r3]
 800adde:	f022 0210 	bic.w	r2, r2, #16
 800ade2:	e843 2100 	strex	r1, r2, [r3]
 800ade6:	2900      	cmp	r1, #0
 800ade8:	d1ef      	bne.n	800adca <HAL_UART_Abort+0xda>
 800adea:	e79b      	b.n	800ad24 <HAL_UART_Abort+0x34>
 800adec:	461a      	mov	r2, r3
 800adee:	e7a0      	b.n	800ad32 <HAL_UART_Abort+0x42>
 800adf0:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800adf2:	f7fb fad9 	bl	80063a8 <HAL_DMA_GetError>
 800adf6:	2820      	cmp	r0, #32
 800adf8:	d1cc      	bne.n	800ad94 <HAL_UART_Abort+0xa4>
 800adfa:	2310      	movs	r3, #16
 800adfc:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800ae00:	2003      	movs	r0, #3
 800ae02:	bd10      	pop	{r4, pc}
 800ae04:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800ae08:	f7fb face 	bl	80063a8 <HAL_DMA_GetError>
 800ae0c:	2820      	cmp	r0, #32
 800ae0e:	d1da      	bne.n	800adc6 <HAL_UART_Abort+0xd6>
 800ae10:	e7f3      	b.n	800adfa <HAL_UART_Abort+0x10a>
 800ae12:	bf00      	nop
 800ae14:	ef7ffffe 	.word	0xef7ffffe

0800ae18 <HAL_UART_TxCpltCallback>:
 800ae18:	4770      	bx	lr
 800ae1a:	bf00      	nop

0800ae1c <UART_DMATransmitCplt>:
 800ae1c:	b508      	push	{r3, lr}
 800ae1e:	6803      	ldr	r3, [r0, #0]
 800ae20:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	f013 0320 	ands.w	r3, r3, #32
 800ae28:	d117      	bne.n	800ae5a <UART_DMATransmitCplt+0x3e>
 800ae2a:	6802      	ldr	r2, [r0, #0]
 800ae2c:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
 800ae30:	f102 0308 	add.w	r3, r2, #8
 800ae34:	e853 3f00 	ldrex	r3, [r3]
 800ae38:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ae3c:	f102 0008 	add.w	r0, r2, #8
 800ae40:	e840 3100 	strex	r1, r3, [r0]
 800ae44:	2900      	cmp	r1, #0
 800ae46:	d1f3      	bne.n	800ae30 <UART_DMATransmitCplt+0x14>
 800ae48:	e852 3f00 	ldrex	r3, [r2]
 800ae4c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ae50:	e842 3100 	strex	r1, r3, [r2]
 800ae54:	2900      	cmp	r1, #0
 800ae56:	d1f7      	bne.n	800ae48 <UART_DMATransmitCplt+0x2c>
 800ae58:	bd08      	pop	{r3, pc}
 800ae5a:	f7ff ffdd 	bl	800ae18 <HAL_UART_TxCpltCallback>
 800ae5e:	bd08      	pop	{r3, pc}

0800ae60 <HAL_UART_TxHalfCpltCallback>:
 800ae60:	4770      	bx	lr
 800ae62:	bf00      	nop

0800ae64 <UART_DMATxHalfCplt>:
 800ae64:	b508      	push	{r3, lr}
 800ae66:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ae68:	f7ff fffa 	bl	800ae60 <HAL_UART_TxHalfCpltCallback>
 800ae6c:	bd08      	pop	{r3, pc}
 800ae6e:	bf00      	nop

0800ae70 <HAL_UART_RxHalfCpltCallback>:
 800ae70:	4770      	bx	lr
 800ae72:	bf00      	nop

0800ae74 <HAL_UART_ErrorCallback>:
 800ae74:	4770      	bx	lr
 800ae76:	bf00      	nop

0800ae78 <UART_DMAError>:
 800ae78:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ae7a:	6803      	ldr	r3, [r0, #0]
 800ae7c:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 800ae80:	b510      	push	{r4, lr}
 800ae82:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
 800ae86:	689a      	ldr	r2, [r3, #8]
 800ae88:	0612      	lsls	r2, r2, #24
 800ae8a:	d501      	bpl.n	800ae90 <UART_DMAError+0x18>
 800ae8c:	2921      	cmp	r1, #33	@ 0x21
 800ae8e:	d00d      	beq.n	800aeac <UART_DMAError+0x34>
 800ae90:	689a      	ldr	r2, [r3, #8]
 800ae92:	0652      	lsls	r2, r2, #25
 800ae94:	d501      	bpl.n	800ae9a <UART_DMAError+0x22>
 800ae96:	2c22      	cmp	r4, #34	@ 0x22
 800ae98:	d023      	beq.n	800aee2 <UART_DMAError+0x6a>
 800ae9a:	f8d0 3090 	ldr.w	r3, [r0, #144]	@ 0x90
 800ae9e:	f043 0310 	orr.w	r3, r3, #16
 800aea2:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 800aea6:	f7ff ffe5 	bl	800ae74 <HAL_UART_ErrorCallback>
 800aeaa:	bd10      	pop	{r4, pc}
 800aeac:	2200      	movs	r2, #0
 800aeae:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
 800aeb2:	e853 2f00 	ldrex	r2, [r3]
 800aeb6:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 800aeba:	e843 2100 	strex	r1, r2, [r3]
 800aebe:	2900      	cmp	r1, #0
 800aec0:	d1f7      	bne.n	800aeb2 <UART_DMAError+0x3a>
 800aec2:	f103 0208 	add.w	r2, r3, #8
 800aec6:	e852 2f00 	ldrex	r2, [r2]
 800aeca:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800aece:	f103 0c08 	add.w	ip, r3, #8
 800aed2:	e84c 2100 	strex	r1, r2, [ip]
 800aed6:	2900      	cmp	r1, #0
 800aed8:	d1f3      	bne.n	800aec2 <UART_DMAError+0x4a>
 800aeda:	2220      	movs	r2, #32
 800aedc:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800aee0:	e7d6      	b.n	800ae90 <UART_DMAError+0x18>
 800aee2:	2200      	movs	r2, #0
 800aee4:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800aee8:	e853 2f00 	ldrex	r2, [r3]
 800aeec:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800aef0:	e843 2100 	strex	r1, r2, [r3]
 800aef4:	2900      	cmp	r1, #0
 800aef6:	d1f7      	bne.n	800aee8 <UART_DMAError+0x70>
 800aef8:	4c13      	ldr	r4, [pc, #76]	@ (800af48 <UART_DMAError+0xd0>)
 800aefa:	f103 0208 	add.w	r2, r3, #8
 800aefe:	e852 2f00 	ldrex	r2, [r2]
 800af02:	4022      	ands	r2, r4
 800af04:	f103 0c08 	add.w	ip, r3, #8
 800af08:	e84c 2100 	strex	r1, r2, [ip]
 800af0c:	2900      	cmp	r1, #0
 800af0e:	d1f4      	bne.n	800aefa <UART_DMAError+0x82>
 800af10:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800af12:	2a01      	cmp	r2, #1
 800af14:	d006      	beq.n	800af24 <UART_DMAError+0xac>
 800af16:	2300      	movs	r3, #0
 800af18:	2220      	movs	r2, #32
 800af1a:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800af1e:	6743      	str	r3, [r0, #116]	@ 0x74
 800af20:	66c3      	str	r3, [r0, #108]	@ 0x6c
 800af22:	e7ba      	b.n	800ae9a <UART_DMAError+0x22>
 800af24:	e853 2f00 	ldrex	r2, [r3]
 800af28:	f022 0210 	bic.w	r2, r2, #16
 800af2c:	e843 2100 	strex	r1, r2, [r3]
 800af30:	2900      	cmp	r1, #0
 800af32:	d0f0      	beq.n	800af16 <UART_DMAError+0x9e>
 800af34:	e853 2f00 	ldrex	r2, [r3]
 800af38:	f022 0210 	bic.w	r2, r2, #16
 800af3c:	e843 2100 	strex	r1, r2, [r3]
 800af40:	2900      	cmp	r1, #0
 800af42:	d1ef      	bne.n	800af24 <UART_DMAError+0xac>
 800af44:	e7e7      	b.n	800af16 <UART_DMAError+0x9e>
 800af46:	bf00      	nop
 800af48:	effffffe 	.word	0xeffffffe

0800af4c <UART_DMAAbortOnError>:
 800af4c:	b508      	push	{r3, lr}
 800af4e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800af50:	2300      	movs	r3, #0
 800af52:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
 800af56:	f7ff ff8d 	bl	800ae74 <HAL_UART_ErrorCallback>
 800af5a:	bd08      	pop	{r3, pc}

0800af5c <HAL_UARTEx_RxEventCallback>:
 800af5c:	4770      	bx	lr
 800af5e:	bf00      	nop

0800af60 <HAL_UART_IRQHandler>:
 800af60:	6803      	ldr	r3, [r0, #0]
 800af62:	69da      	ldr	r2, [r3, #28]
 800af64:	f640 0c0f 	movw	ip, #2063	@ 0x80f
 800af68:	ea12 0f0c 	tst.w	r2, ip
 800af6c:	b570      	push	{r4, r5, r6, lr}
 800af6e:	681d      	ldr	r5, [r3, #0]
 800af70:	6899      	ldr	r1, [r3, #8]
 800af72:	4604      	mov	r4, r0
 800af74:	d145      	bne.n	800b002 <HAL_UART_IRQHandler+0xa2>
 800af76:	0696      	lsls	r6, r2, #26
 800af78:	d507      	bpl.n	800af8a <HAL_UART_IRQHandler+0x2a>
 800af7a:	f005 0c20 	and.w	ip, r5, #32
 800af7e:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
 800af82:	ea5c 0c06 	orrs.w	ip, ip, r6
 800af86:	f040 80f7 	bne.w	800b178 <HAL_UART_IRQHandler+0x218>
 800af8a:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 800af8c:	2801      	cmp	r0, #1
 800af8e:	f000 80cb 	beq.w	800b128 <HAL_UART_IRQHandler+0x1c8>
 800af92:	02d0      	lsls	r0, r2, #11
 800af94:	d41d      	bmi.n	800afd2 <HAL_UART_IRQHandler+0x72>
 800af96:	0610      	lsls	r0, r2, #24
 800af98:	d506      	bpl.n	800afa8 <HAL_UART_IRQHandler+0x48>
 800af9a:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
 800af9e:	f005 0080 	and.w	r0, r5, #128	@ 0x80
 800afa2:	4308      	orrs	r0, r1
 800afa4:	f040 80ef 	bne.w	800b186 <HAL_UART_IRQHandler+0x226>
 800afa8:	0651      	lsls	r1, r2, #25
 800afaa:	d51c      	bpl.n	800afe6 <HAL_UART_IRQHandler+0x86>
 800afac:	066e      	lsls	r6, r5, #25
 800afae:	d51a      	bpl.n	800afe6 <HAL_UART_IRQHandler+0x86>
 800afb0:	e853 2f00 	ldrex	r2, [r3]
 800afb4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800afb8:	e843 2100 	strex	r1, r2, [r3]
 800afbc:	2900      	cmp	r1, #0
 800afbe:	d1f7      	bne.n	800afb0 <HAL_UART_IRQHandler+0x50>
 800afc0:	2220      	movs	r2, #32
 800afc2:	2300      	movs	r3, #0
 800afc4:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800afc8:	67a3      	str	r3, [r4, #120]	@ 0x78
 800afca:	4620      	mov	r0, r4
 800afcc:	f7ff ff24 	bl	800ae18 <HAL_UART_TxCpltCallback>
 800afd0:	bd70      	pop	{r4, r5, r6, pc}
 800afd2:	024e      	lsls	r6, r1, #9
 800afd4:	d5df      	bpl.n	800af96 <HAL_UART_IRQHandler+0x36>
 800afd6:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800afda:	4620      	mov	r0, r4
 800afdc:	621a      	str	r2, [r3, #32]
 800afde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800afe2:	f000 bd2f 	b.w	800ba44 <HAL_UARTEx_WakeupCallback>
 800afe6:	0210      	lsls	r0, r2, #8
 800afe8:	d502      	bpl.n	800aff0 <HAL_UART_IRQHandler+0x90>
 800afea:	0069      	lsls	r1, r5, #1
 800afec:	f100 8109 	bmi.w	800b202 <HAL_UART_IRQHandler+0x2a2>
 800aff0:	01d3      	lsls	r3, r2, #7
 800aff2:	d5ed      	bpl.n	800afd0 <HAL_UART_IRQHandler+0x70>
 800aff4:	2d00      	cmp	r5, #0
 800aff6:	daeb      	bge.n	800afd0 <HAL_UART_IRQHandler+0x70>
 800aff8:	4620      	mov	r0, r4
 800affa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800affe:	f000 bd23 	b.w	800ba48 <HAL_UARTEx_RxFifoFullCallback>
 800b002:	48b8      	ldr	r0, [pc, #736]	@ (800b2e4 <HAL_UART_IRQHandler+0x384>)
 800b004:	4008      	ands	r0, r1
 800b006:	f040 80f1 	bne.w	800b1ec <HAL_UART_IRQHandler+0x28c>
 800b00a:	4eb7      	ldr	r6, [pc, #732]	@ (800b2e8 <HAL_UART_IRQHandler+0x388>)
 800b00c:	4235      	tst	r5, r6
 800b00e:	d0bc      	beq.n	800af8a <HAL_UART_IRQHandler+0x2a>
 800b010:	07d6      	lsls	r6, r2, #31
 800b012:	d51a      	bpl.n	800b04a <HAL_UART_IRQHandler+0xea>
 800b014:	05ee      	lsls	r6, r5, #23
 800b016:	f140 80cf 	bpl.w	800b1b8 <HAL_UART_IRQHandler+0x258>
 800b01a:	2601      	movs	r6, #1
 800b01c:	621e      	str	r6, [r3, #32]
 800b01e:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800b022:	f046 0601 	orr.w	r6, r6, #1
 800b026:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800b02a:	0796      	lsls	r6, r2, #30
 800b02c:	f140 80c7 	bpl.w	800b1be <HAL_UART_IRQHandler+0x25e>
 800b030:	07ce      	lsls	r6, r1, #31
 800b032:	d50a      	bpl.n	800b04a <HAL_UART_IRQHandler+0xea>
 800b034:	2602      	movs	r6, #2
 800b036:	621e      	str	r6, [r3, #32]
 800b038:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800b03c:	f046 0604 	orr.w	r6, r6, #4
 800b040:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800b044:	0756      	lsls	r6, r2, #29
 800b046:	f100 80c0 	bmi.w	800b1ca <HAL_UART_IRQHandler+0x26a>
 800b04a:	0716      	lsls	r6, r2, #28
 800b04c:	d50b      	bpl.n	800b066 <HAL_UART_IRQHandler+0x106>
 800b04e:	f005 0620 	and.w	r6, r5, #32
 800b052:	4306      	orrs	r6, r0
 800b054:	d007      	beq.n	800b066 <HAL_UART_IRQHandler+0x106>
 800b056:	2008      	movs	r0, #8
 800b058:	6218      	str	r0, [r3, #32]
 800b05a:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800b05e:	f040 0008 	orr.w	r0, r0, #8
 800b062:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
 800b066:	0510      	lsls	r0, r2, #20
 800b068:	d50a      	bpl.n	800b080 <HAL_UART_IRQHandler+0x120>
 800b06a:	016e      	lsls	r6, r5, #5
 800b06c:	d508      	bpl.n	800b080 <HAL_UART_IRQHandler+0x120>
 800b06e:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 800b072:	6218      	str	r0, [r3, #32]
 800b074:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800b078:	f040 0020 	orr.w	r0, r0, #32
 800b07c:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
 800b080:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800b084:	2800      	cmp	r0, #0
 800b086:	d0a3      	beq.n	800afd0 <HAL_UART_IRQHandler+0x70>
 800b088:	0690      	lsls	r0, r2, #26
 800b08a:	d506      	bpl.n	800b09a <HAL_UART_IRQHandler+0x13a>
 800b08c:	f005 0520 	and.w	r5, r5, #32
 800b090:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
 800b094:	430d      	orrs	r5, r1
 800b096:	f040 80a1 	bne.w	800b1dc <HAL_UART_IRQHandler+0x27c>
 800b09a:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
 800b09e:	689a      	ldr	r2, [r3, #8]
 800b0a0:	f001 0128 	and.w	r1, r1, #40	@ 0x28
 800b0a4:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800b0a8:	ea52 0501 	orrs.w	r5, r2, r1
 800b0ac:	f000 80df 	beq.w	800b26e <HAL_UART_IRQHandler+0x30e>
 800b0b0:	e853 2f00 	ldrex	r2, [r3]
 800b0b4:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b0b8:	e843 2100 	strex	r1, r2, [r3]
 800b0bc:	2900      	cmp	r1, #0
 800b0be:	d1f7      	bne.n	800b0b0 <HAL_UART_IRQHandler+0x150>
 800b0c0:	488a      	ldr	r0, [pc, #552]	@ (800b2ec <HAL_UART_IRQHandler+0x38c>)
 800b0c2:	f103 0208 	add.w	r2, r3, #8
 800b0c6:	e852 2f00 	ldrex	r2, [r2]
 800b0ca:	4002      	ands	r2, r0
 800b0cc:	f103 0508 	add.w	r5, r3, #8
 800b0d0:	e845 2100 	strex	r1, r2, [r5]
 800b0d4:	2900      	cmp	r1, #0
 800b0d6:	d1f4      	bne.n	800b0c2 <HAL_UART_IRQHandler+0x162>
 800b0d8:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b0da:	2a01      	cmp	r2, #1
 800b0dc:	d05b      	beq.n	800b196 <HAL_UART_IRQHandler+0x236>
 800b0de:	2200      	movs	r2, #0
 800b0e0:	2120      	movs	r1, #32
 800b0e2:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b0e6:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b0e8:	6899      	ldr	r1, [r3, #8]
 800b0ea:	6762      	str	r2, [r4, #116]	@ 0x74
 800b0ec:	064a      	lsls	r2, r1, #25
 800b0ee:	f140 8084 	bpl.w	800b1fa <HAL_UART_IRQHandler+0x29a>
 800b0f2:	f103 0208 	add.w	r2, r3, #8
 800b0f6:	e852 2f00 	ldrex	r2, [r2]
 800b0fa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b0fe:	f103 0008 	add.w	r0, r3, #8
 800b102:	e840 2100 	strex	r1, r2, [r0]
 800b106:	2900      	cmp	r1, #0
 800b108:	d1f3      	bne.n	800b0f2 <HAL_UART_IRQHandler+0x192>
 800b10a:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800b10e:	2800      	cmp	r0, #0
 800b110:	d073      	beq.n	800b1fa <HAL_UART_IRQHandler+0x29a>
 800b112:	4b77      	ldr	r3, [pc, #476]	@ (800b2f0 <HAL_UART_IRQHandler+0x390>)
 800b114:	6383      	str	r3, [r0, #56]	@ 0x38
 800b116:	f7fb f8c3 	bl	80062a0 <HAL_DMA_Abort_IT>
 800b11a:	2800      	cmp	r0, #0
 800b11c:	f43f af58 	beq.w	800afd0 <HAL_UART_IRQHandler+0x70>
 800b120:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800b124:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800b126:	e02b      	b.n	800b180 <HAL_UART_IRQHandler+0x220>
 800b128:	06d6      	lsls	r6, r2, #27
 800b12a:	f57f af32 	bpl.w	800af92 <HAL_UART_IRQHandler+0x32>
 800b12e:	06e8      	lsls	r0, r5, #27
 800b130:	f57f af2f 	bpl.w	800af92 <HAL_UART_IRQHandler+0x32>
 800b134:	2210      	movs	r2, #16
 800b136:	621a      	str	r2, [r3, #32]
 800b138:	6899      	ldr	r1, [r3, #8]
 800b13a:	f8b4 205c 	ldrh.w	r2, [r4, #92]	@ 0x5c
 800b13e:	0649      	lsls	r1, r1, #25
 800b140:	f140 809b 	bpl.w	800b27a <HAL_UART_IRQHandler+0x31a>
 800b144:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800b148:	6805      	ldr	r5, [r0, #0]
 800b14a:	6869      	ldr	r1, [r5, #4]
 800b14c:	b289      	uxth	r1, r1
 800b14e:	2900      	cmp	r1, #0
 800b150:	f000 80d0 	beq.w	800b2f4 <HAL_UART_IRQHandler+0x394>
 800b154:	4291      	cmp	r1, r2
 800b156:	f080 80cd 	bcs.w	800b2f4 <HAL_UART_IRQHandler+0x394>
 800b15a:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
 800b15e:	6829      	ldr	r1, [r5, #0]
 800b160:	068e      	lsls	r6, r1, #26
 800b162:	d553      	bpl.n	800b20c <HAL_UART_IRQHandler+0x2ac>
 800b164:	2302      	movs	r3, #2
 800b166:	6723      	str	r3, [r4, #112]	@ 0x70
 800b168:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
 800b16c:	1a51      	subs	r1, r2, r1
 800b16e:	4620      	mov	r0, r4
 800b170:	b289      	uxth	r1, r1
 800b172:	f7ff fef3 	bl	800af5c <HAL_UARTEx_RxEventCallback>
 800b176:	bd70      	pop	{r4, r5, r6, pc}
 800b178:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 800b17a:	2b00      	cmp	r3, #0
 800b17c:	f43f af28 	beq.w	800afd0 <HAL_UART_IRQHandler+0x70>
 800b180:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b184:	4718      	bx	r3
 800b186:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800b188:	2b00      	cmp	r3, #0
 800b18a:	f43f af21 	beq.w	800afd0 <HAL_UART_IRQHandler+0x70>
 800b18e:	4620      	mov	r0, r4
 800b190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b194:	4718      	bx	r3
 800b196:	e853 2f00 	ldrex	r2, [r3]
 800b19a:	f022 0210 	bic.w	r2, r2, #16
 800b19e:	e843 2100 	strex	r1, r2, [r3]
 800b1a2:	2900      	cmp	r1, #0
 800b1a4:	d09b      	beq.n	800b0de <HAL_UART_IRQHandler+0x17e>
 800b1a6:	e853 2f00 	ldrex	r2, [r3]
 800b1aa:	f022 0210 	bic.w	r2, r2, #16
 800b1ae:	e843 2100 	strex	r1, r2, [r3]
 800b1b2:	2900      	cmp	r1, #0
 800b1b4:	d1ef      	bne.n	800b196 <HAL_UART_IRQHandler+0x236>
 800b1b6:	e792      	b.n	800b0de <HAL_UART_IRQHandler+0x17e>
 800b1b8:	0796      	lsls	r6, r2, #30
 800b1ba:	f53f af46 	bmi.w	800b04a <HAL_UART_IRQHandler+0xea>
 800b1be:	0756      	lsls	r6, r2, #29
 800b1c0:	f57f af43 	bpl.w	800b04a <HAL_UART_IRQHandler+0xea>
 800b1c4:	07ce      	lsls	r6, r1, #31
 800b1c6:	f57f af40 	bpl.w	800b04a <HAL_UART_IRQHandler+0xea>
 800b1ca:	2604      	movs	r6, #4
 800b1cc:	621e      	str	r6, [r3, #32]
 800b1ce:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800b1d2:	f046 0602 	orr.w	r6, r6, #2
 800b1d6:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800b1da:	e736      	b.n	800b04a <HAL_UART_IRQHandler+0xea>
 800b1dc:	6f62      	ldr	r2, [r4, #116]	@ 0x74
 800b1de:	2a00      	cmp	r2, #0
 800b1e0:	f43f af5b 	beq.w	800b09a <HAL_UART_IRQHandler+0x13a>
 800b1e4:	4620      	mov	r0, r4
 800b1e6:	4790      	blx	r2
 800b1e8:	6823      	ldr	r3, [r4, #0]
 800b1ea:	e756      	b.n	800b09a <HAL_UART_IRQHandler+0x13a>
 800b1ec:	07d6      	lsls	r6, r2, #31
 800b1ee:	f57f af1c 	bpl.w	800b02a <HAL_UART_IRQHandler+0xca>
 800b1f2:	05ee      	lsls	r6, r5, #23
 800b1f4:	f57f af19 	bpl.w	800b02a <HAL_UART_IRQHandler+0xca>
 800b1f8:	e70f      	b.n	800b01a <HAL_UART_IRQHandler+0xba>
 800b1fa:	4620      	mov	r0, r4
 800b1fc:	f7ff fe3a 	bl	800ae74 <HAL_UART_ErrorCallback>
 800b200:	bd70      	pop	{r4, r5, r6, pc}
 800b202:	4620      	mov	r0, r4
 800b204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b208:	f000 bc20 	b.w	800ba4c <HAL_UARTEx_TxFifoEmptyCallback>
 800b20c:	e853 2f00 	ldrex	r2, [r3]
 800b210:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b214:	e843 2100 	strex	r1, r2, [r3]
 800b218:	2900      	cmp	r1, #0
 800b21a:	d1f7      	bne.n	800b20c <HAL_UART_IRQHandler+0x2ac>
 800b21c:	f103 0208 	add.w	r2, r3, #8
 800b220:	e852 2f00 	ldrex	r2, [r2]
 800b224:	f022 0201 	bic.w	r2, r2, #1
 800b228:	f103 0508 	add.w	r5, r3, #8
 800b22c:	e845 2100 	strex	r1, r2, [r5]
 800b230:	2900      	cmp	r1, #0
 800b232:	d1f3      	bne.n	800b21c <HAL_UART_IRQHandler+0x2bc>
 800b234:	f103 0208 	add.w	r2, r3, #8
 800b238:	e852 2f00 	ldrex	r2, [r2]
 800b23c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b240:	f103 0508 	add.w	r5, r3, #8
 800b244:	e845 2100 	strex	r1, r2, [r5]
 800b248:	2900      	cmp	r1, #0
 800b24a:	d1f3      	bne.n	800b234 <HAL_UART_IRQHandler+0x2d4>
 800b24c:	2220      	movs	r2, #32
 800b24e:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b252:	66e1      	str	r1, [r4, #108]	@ 0x6c
 800b254:	e853 2f00 	ldrex	r2, [r3]
 800b258:	f022 0210 	bic.w	r2, r2, #16
 800b25c:	e843 2100 	strex	r1, r2, [r3]
 800b260:	2900      	cmp	r1, #0
 800b262:	d1f7      	bne.n	800b254 <HAL_UART_IRQHandler+0x2f4>
 800b264:	f7fa ffe4 	bl	8006230 <HAL_DMA_Abort>
 800b268:	f8b4 205c 	ldrh.w	r2, [r4, #92]	@ 0x5c
 800b26c:	e77a      	b.n	800b164 <HAL_UART_IRQHandler+0x204>
 800b26e:	4620      	mov	r0, r4
 800b270:	f7ff fe00 	bl	800ae74 <HAL_UART_ErrorCallback>
 800b274:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
 800b278:	bd70      	pop	{r4, r5, r6, pc}
 800b27a:	f8b4 005e 	ldrh.w	r0, [r4, #94]	@ 0x5e
 800b27e:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
 800b282:	b289      	uxth	r1, r1
 800b284:	b280      	uxth	r0, r0
 800b286:	2900      	cmp	r1, #0
 800b288:	f43f aea2 	beq.w	800afd0 <HAL_UART_IRQHandler+0x70>
 800b28c:	1a12      	subs	r2, r2, r0
 800b28e:	b291      	uxth	r1, r2
 800b290:	2900      	cmp	r1, #0
 800b292:	f43f ae9d 	beq.w	800afd0 <HAL_UART_IRQHandler+0x70>
 800b296:	e853 2f00 	ldrex	r2, [r3]
 800b29a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b29e:	e843 2000 	strex	r0, r2, [r3]
 800b2a2:	2800      	cmp	r0, #0
 800b2a4:	d1f7      	bne.n	800b296 <HAL_UART_IRQHandler+0x336>
 800b2a6:	4d11      	ldr	r5, [pc, #68]	@ (800b2ec <HAL_UART_IRQHandler+0x38c>)
 800b2a8:	f103 0208 	add.w	r2, r3, #8
 800b2ac:	e852 2f00 	ldrex	r2, [r2]
 800b2b0:	402a      	ands	r2, r5
 800b2b2:	f103 0608 	add.w	r6, r3, #8
 800b2b6:	e846 2000 	strex	r0, r2, [r6]
 800b2ba:	2800      	cmp	r0, #0
 800b2bc:	d1f4      	bne.n	800b2a8 <HAL_UART_IRQHandler+0x348>
 800b2be:	2220      	movs	r2, #32
 800b2c0:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b2c4:	6760      	str	r0, [r4, #116]	@ 0x74
 800b2c6:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800b2c8:	e853 2f00 	ldrex	r2, [r3]
 800b2cc:	f022 0210 	bic.w	r2, r2, #16
 800b2d0:	e843 2000 	strex	r0, r2, [r3]
 800b2d4:	2800      	cmp	r0, #0
 800b2d6:	d1f7      	bne.n	800b2c8 <HAL_UART_IRQHandler+0x368>
 800b2d8:	2302      	movs	r3, #2
 800b2da:	6723      	str	r3, [r4, #112]	@ 0x70
 800b2dc:	4620      	mov	r0, r4
 800b2de:	f7ff fe3d 	bl	800af5c <HAL_UARTEx_RxEventCallback>
 800b2e2:	bd70      	pop	{r4, r5, r6, pc}
 800b2e4:	10000001 	.word	0x10000001
 800b2e8:	04000120 	.word	0x04000120
 800b2ec:	effffffe 	.word	0xeffffffe
 800b2f0:	0800af4d 	.word	0x0800af4d
 800b2f4:	4291      	cmp	r1, r2
 800b2f6:	f47f ae6b 	bne.w	800afd0 <HAL_UART_IRQHandler+0x70>
 800b2fa:	682b      	ldr	r3, [r5, #0]
 800b2fc:	069d      	lsls	r5, r3, #26
 800b2fe:	d4eb      	bmi.n	800b2d8 <HAL_UART_IRQHandler+0x378>
 800b300:	bd70      	pop	{r4, r5, r6, pc}
 800b302:	bf00      	nop

0800b304 <UART_DMARxHalfCplt>:
 800b304:	b508      	push	{r3, lr}
 800b306:	4603      	mov	r3, r0
 800b308:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b30a:	2201      	movs	r2, #1
 800b30c:	6702      	str	r2, [r0, #112]	@ 0x70
 800b30e:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b310:	2a01      	cmp	r2, #1
 800b312:	d112      	bne.n	800b33a <UART_DMARxHalfCplt+0x36>
 800b314:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800b318:	681b      	ldr	r3, [r3, #0]
 800b31a:	084a      	lsrs	r2, r1, #1
 800b31c:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800b320:	685b      	ldr	r3, [r3, #4]
 800b322:	b29b      	uxth	r3, r3
 800b324:	4299      	cmp	r1, r3
 800b326:	bf28      	it	cs
 800b328:	f8a0 305e 	strhcs.w	r3, [r0, #94]	@ 0x5e
 800b32c:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
 800b330:	1ac9      	subs	r1, r1, r3
 800b332:	b289      	uxth	r1, r1
 800b334:	f7ff fe12 	bl	800af5c <HAL_UARTEx_RxEventCallback>
 800b338:	bd08      	pop	{r3, pc}
 800b33a:	f7ff fd99 	bl	800ae70 <HAL_UART_RxHalfCpltCallback>
 800b33e:	bd08      	pop	{r3, pc}

0800b340 <UART_DMAReceiveCplt>:
 800b340:	b510      	push	{r4, lr}
 800b342:	6804      	ldr	r4, [r0, #0]
 800b344:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b346:	6822      	ldr	r2, [r4, #0]
 800b348:	f012 0220 	ands.w	r2, r2, #32
 800b34c:	d128      	bne.n	800b3a0 <UART_DMAReceiveCplt+0x60>
 800b34e:	6803      	ldr	r3, [r0, #0]
 800b350:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800b354:	e853 2f00 	ldrex	r2, [r3]
 800b358:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b35c:	e843 2100 	strex	r1, r2, [r3]
 800b360:	2900      	cmp	r1, #0
 800b362:	d1f7      	bne.n	800b354 <UART_DMAReceiveCplt+0x14>
 800b364:	f103 0208 	add.w	r2, r3, #8
 800b368:	e852 2f00 	ldrex	r2, [r2]
 800b36c:	f022 0201 	bic.w	r2, r2, #1
 800b370:	f103 0c08 	add.w	ip, r3, #8
 800b374:	e84c 2100 	strex	r1, r2, [ip]
 800b378:	2900      	cmp	r1, #0
 800b37a:	d1f3      	bne.n	800b364 <UART_DMAReceiveCplt+0x24>
 800b37c:	f103 0208 	add.w	r2, r3, #8
 800b380:	e852 2f00 	ldrex	r2, [r2]
 800b384:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b388:	f103 0c08 	add.w	ip, r3, #8
 800b38c:	e84c 2100 	strex	r1, r2, [ip]
 800b390:	2900      	cmp	r1, #0
 800b392:	d1f3      	bne.n	800b37c <UART_DMAReceiveCplt+0x3c>
 800b394:	2220      	movs	r2, #32
 800b396:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800b39a:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b39c:	2a01      	cmp	r2, #1
 800b39e:	d015      	beq.n	800b3cc <UART_DMAReceiveCplt+0x8c>
 800b3a0:	2300      	movs	r3, #0
 800b3a2:	6703      	str	r3, [r0, #112]	@ 0x70
 800b3a4:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b3a6:	2a01      	cmp	r2, #1
 800b3a8:	d121      	bne.n	800b3ee <UART_DMAReceiveCplt+0xae>
 800b3aa:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
 800b3ae:	6863      	ldr	r3, [r4, #4]
 800b3b0:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800b3b4:	b29b      	uxth	r3, r3
 800b3b6:	4299      	cmp	r1, r3
 800b3b8:	bf88      	it	hi
 800b3ba:	f8a0 305e 	strhhi.w	r3, [r0, #94]	@ 0x5e
 800b3be:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
 800b3c2:	1ac9      	subs	r1, r1, r3
 800b3c4:	b289      	uxth	r1, r1
 800b3c6:	f7ff fdc9 	bl	800af5c <HAL_UARTEx_RxEventCallback>
 800b3ca:	bd10      	pop	{r4, pc}
 800b3cc:	e853 2f00 	ldrex	r2, [r3]
 800b3d0:	f022 0210 	bic.w	r2, r2, #16
 800b3d4:	e843 2100 	strex	r1, r2, [r3]
 800b3d8:	2900      	cmp	r1, #0
 800b3da:	d0e1      	beq.n	800b3a0 <UART_DMAReceiveCplt+0x60>
 800b3dc:	e853 2f00 	ldrex	r2, [r3]
 800b3e0:	f022 0210 	bic.w	r2, r2, #16
 800b3e4:	e843 2100 	strex	r1, r2, [r3]
 800b3e8:	2900      	cmp	r1, #0
 800b3ea:	d1ef      	bne.n	800b3cc <UART_DMAReceiveCplt+0x8c>
 800b3ec:	e7d8      	b.n	800b3a0 <UART_DMAReceiveCplt+0x60>
 800b3ee:	f7f9 ffb5 	bl	800535c <HAL_UART_RxCpltCallback>
 800b3f2:	bd10      	pop	{r4, pc}

0800b3f4 <UART_AdvFeatureConfig>:
 800b3f4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b3f6:	071a      	lsls	r2, r3, #28
 800b3f8:	b410      	push	{r4}
 800b3fa:	d506      	bpl.n	800b40a <UART_AdvFeatureConfig+0x16>
 800b3fc:	6801      	ldr	r1, [r0, #0]
 800b3fe:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 800b400:	684a      	ldr	r2, [r1, #4]
 800b402:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800b406:	4322      	orrs	r2, r4
 800b408:	604a      	str	r2, [r1, #4]
 800b40a:	07dc      	lsls	r4, r3, #31
 800b40c:	d506      	bpl.n	800b41c <UART_AdvFeatureConfig+0x28>
 800b40e:	6801      	ldr	r1, [r0, #0]
 800b410:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800b412:	684a      	ldr	r2, [r1, #4]
 800b414:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 800b418:	4322      	orrs	r2, r4
 800b41a:	604a      	str	r2, [r1, #4]
 800b41c:	0799      	lsls	r1, r3, #30
 800b41e:	d506      	bpl.n	800b42e <UART_AdvFeatureConfig+0x3a>
 800b420:	6801      	ldr	r1, [r0, #0]
 800b422:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 800b424:	684a      	ldr	r2, [r1, #4]
 800b426:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800b42a:	4322      	orrs	r2, r4
 800b42c:	604a      	str	r2, [r1, #4]
 800b42e:	075a      	lsls	r2, r3, #29
 800b430:	d506      	bpl.n	800b440 <UART_AdvFeatureConfig+0x4c>
 800b432:	6801      	ldr	r1, [r0, #0]
 800b434:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 800b436:	684a      	ldr	r2, [r1, #4]
 800b438:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800b43c:	4322      	orrs	r2, r4
 800b43e:	604a      	str	r2, [r1, #4]
 800b440:	06dc      	lsls	r4, r3, #27
 800b442:	d506      	bpl.n	800b452 <UART_AdvFeatureConfig+0x5e>
 800b444:	6801      	ldr	r1, [r0, #0]
 800b446:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800b448:	688a      	ldr	r2, [r1, #8]
 800b44a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800b44e:	4322      	orrs	r2, r4
 800b450:	608a      	str	r2, [r1, #8]
 800b452:	0699      	lsls	r1, r3, #26
 800b454:	d506      	bpl.n	800b464 <UART_AdvFeatureConfig+0x70>
 800b456:	6801      	ldr	r1, [r0, #0]
 800b458:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 800b45a:	688a      	ldr	r2, [r1, #8]
 800b45c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800b460:	4322      	orrs	r2, r4
 800b462:	608a      	str	r2, [r1, #8]
 800b464:	065a      	lsls	r2, r3, #25
 800b466:	d509      	bpl.n	800b47c <UART_AdvFeatureConfig+0x88>
 800b468:	6801      	ldr	r1, [r0, #0]
 800b46a:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 800b46c:	684a      	ldr	r2, [r1, #4]
 800b46e:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 800b472:	4322      	orrs	r2, r4
 800b474:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
 800b478:	604a      	str	r2, [r1, #4]
 800b47a:	d00b      	beq.n	800b494 <UART_AdvFeatureConfig+0xa0>
 800b47c:	061b      	lsls	r3, r3, #24
 800b47e:	d506      	bpl.n	800b48e <UART_AdvFeatureConfig+0x9a>
 800b480:	6802      	ldr	r2, [r0, #0]
 800b482:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 800b484:	6853      	ldr	r3, [r2, #4]
 800b486:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 800b48a:	430b      	orrs	r3, r1
 800b48c:	6053      	str	r3, [r2, #4]
 800b48e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b492:	4770      	bx	lr
 800b494:	684a      	ldr	r2, [r1, #4]
 800b496:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 800b498:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 800b49c:	4322      	orrs	r2, r4
 800b49e:	604a      	str	r2, [r1, #4]
 800b4a0:	e7ec      	b.n	800b47c <UART_AdvFeatureConfig+0x88>
 800b4a2:	bf00      	nop

0800b4a4 <UART_CheckIdleState>:
 800b4a4:	b538      	push	{r3, r4, r5, lr}
 800b4a6:	2300      	movs	r3, #0
 800b4a8:	4604      	mov	r4, r0
 800b4aa:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 800b4ae:	f7fa f949 	bl	8005744 <HAL_GetTick>
 800b4b2:	6822      	ldr	r2, [r4, #0]
 800b4b4:	6813      	ldr	r3, [r2, #0]
 800b4b6:	071b      	lsls	r3, r3, #28
 800b4b8:	4605      	mov	r5, r0
 800b4ba:	d40f      	bmi.n	800b4dc <UART_CheckIdleState+0x38>
 800b4bc:	6813      	ldr	r3, [r2, #0]
 800b4be:	0759      	lsls	r1, r3, #29
 800b4c0:	d431      	bmi.n	800b526 <UART_CheckIdleState+0x82>
 800b4c2:	2300      	movs	r3, #0
 800b4c4:	2220      	movs	r2, #32
 800b4c6:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800b4ca:	4618      	mov	r0, r3
 800b4cc:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b4d0:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800b4d2:	6723      	str	r3, [r4, #112]	@ 0x70
 800b4d4:	2300      	movs	r3, #0
 800b4d6:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800b4da:	bd38      	pop	{r3, r4, r5, pc}
 800b4dc:	69d3      	ldr	r3, [r2, #28]
 800b4de:	0298      	lsls	r0, r3, #10
 800b4e0:	d4ec      	bmi.n	800b4bc <UART_CheckIdleState+0x18>
 800b4e2:	e00c      	b.n	800b4fe <UART_CheckIdleState+0x5a>
 800b4e4:	6819      	ldr	r1, [r3, #0]
 800b4e6:	0749      	lsls	r1, r1, #29
 800b4e8:	461a      	mov	r2, r3
 800b4ea:	d505      	bpl.n	800b4f8 <UART_CheckIdleState+0x54>
 800b4ec:	69d9      	ldr	r1, [r3, #28]
 800b4ee:	0708      	lsls	r0, r1, #28
 800b4f0:	d44a      	bmi.n	800b588 <UART_CheckIdleState+0xe4>
 800b4f2:	69d9      	ldr	r1, [r3, #28]
 800b4f4:	0509      	lsls	r1, r1, #20
 800b4f6:	d475      	bmi.n	800b5e4 <UART_CheckIdleState+0x140>
 800b4f8:	69db      	ldr	r3, [r3, #28]
 800b4fa:	0298      	lsls	r0, r3, #10
 800b4fc:	d4de      	bmi.n	800b4bc <UART_CheckIdleState+0x18>
 800b4fe:	f7fa f921 	bl	8005744 <HAL_GetTick>
 800b502:	1b43      	subs	r3, r0, r5
 800b504:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800b508:	6823      	ldr	r3, [r4, #0]
 800b50a:	d3eb      	bcc.n	800b4e4 <UART_CheckIdleState+0x40>
 800b50c:	e853 2f00 	ldrex	r2, [r3]
 800b510:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800b514:	e843 2100 	strex	r1, r2, [r3]
 800b518:	2900      	cmp	r1, #0
 800b51a:	d1f7      	bne.n	800b50c <UART_CheckIdleState+0x68>
 800b51c:	2320      	movs	r3, #32
 800b51e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800b522:	2003      	movs	r0, #3
 800b524:	e7d6      	b.n	800b4d4 <UART_CheckIdleState+0x30>
 800b526:	69d3      	ldr	r3, [r2, #28]
 800b528:	025b      	lsls	r3, r3, #9
 800b52a:	d4ca      	bmi.n	800b4c2 <UART_CheckIdleState+0x1e>
 800b52c:	e00d      	b.n	800b54a <UART_CheckIdleState+0xa6>
 800b52e:	681a      	ldr	r2, [r3, #0]
 800b530:	0750      	lsls	r0, r2, #29
 800b532:	d507      	bpl.n	800b544 <UART_CheckIdleState+0xa0>
 800b534:	69da      	ldr	r2, [r3, #28]
 800b536:	0711      	lsls	r1, r2, #28
 800b538:	f100 8082 	bmi.w	800b640 <UART_CheckIdleState+0x19c>
 800b53c:	69da      	ldr	r2, [r3, #28]
 800b53e:	0512      	lsls	r2, r2, #20
 800b540:	f100 80ac 	bmi.w	800b69c <UART_CheckIdleState+0x1f8>
 800b544:	69db      	ldr	r3, [r3, #28]
 800b546:	025b      	lsls	r3, r3, #9
 800b548:	d4bb      	bmi.n	800b4c2 <UART_CheckIdleState+0x1e>
 800b54a:	f7fa f8fb 	bl	8005744 <HAL_GetTick>
 800b54e:	1b43      	subs	r3, r0, r5
 800b550:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800b554:	6823      	ldr	r3, [r4, #0]
 800b556:	d3ea      	bcc.n	800b52e <UART_CheckIdleState+0x8a>
 800b558:	e853 2f00 	ldrex	r2, [r3]
 800b55c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b560:	e843 2100 	strex	r1, r2, [r3]
 800b564:	2900      	cmp	r1, #0
 800b566:	d1f7      	bne.n	800b558 <UART_CheckIdleState+0xb4>
 800b568:	f103 0208 	add.w	r2, r3, #8
 800b56c:	e852 2f00 	ldrex	r2, [r2]
 800b570:	f022 0201 	bic.w	r2, r2, #1
 800b574:	f103 0008 	add.w	r0, r3, #8
 800b578:	e840 2100 	strex	r1, r2, [r0]
 800b57c:	2900      	cmp	r1, #0
 800b57e:	d1f3      	bne.n	800b568 <UART_CheckIdleState+0xc4>
 800b580:	2320      	movs	r3, #32
 800b582:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800b586:	e7cc      	b.n	800b522 <UART_CheckIdleState+0x7e>
 800b588:	2208      	movs	r2, #8
 800b58a:	621a      	str	r2, [r3, #32]
 800b58c:	e853 2f00 	ldrex	r2, [r3]
 800b590:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b594:	e843 2100 	strex	r1, r2, [r3]
 800b598:	2900      	cmp	r1, #0
 800b59a:	d1f7      	bne.n	800b58c <UART_CheckIdleState+0xe8>
 800b59c:	4856      	ldr	r0, [pc, #344]	@ (800b6f8 <UART_CheckIdleState+0x254>)
 800b59e:	f103 0208 	add.w	r2, r3, #8
 800b5a2:	e852 2f00 	ldrex	r2, [r2]
 800b5a6:	4002      	ands	r2, r0
 800b5a8:	f103 0508 	add.w	r5, r3, #8
 800b5ac:	e845 2100 	strex	r1, r2, [r5]
 800b5b0:	2900      	cmp	r1, #0
 800b5b2:	d1f4      	bne.n	800b59e <UART_CheckIdleState+0xfa>
 800b5b4:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b5b6:	2a01      	cmp	r2, #1
 800b5b8:	d00b      	beq.n	800b5d2 <UART_CheckIdleState+0x12e>
 800b5ba:	2200      	movs	r2, #0
 800b5bc:	2020      	movs	r0, #32
 800b5be:	2108      	movs	r1, #8
 800b5c0:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800b5c4:	6762      	str	r2, [r4, #116]	@ 0x74
 800b5c6:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b5c8:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b5cc:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b5d0:	e79c      	b.n	800b50c <UART_CheckIdleState+0x68>
 800b5d2:	e853 2f00 	ldrex	r2, [r3]
 800b5d6:	f022 0210 	bic.w	r2, r2, #16
 800b5da:	e843 2100 	strex	r1, r2, [r3]
 800b5de:	2900      	cmp	r1, #0
 800b5e0:	d1f7      	bne.n	800b5d2 <UART_CheckIdleState+0x12e>
 800b5e2:	e7ea      	b.n	800b5ba <UART_CheckIdleState+0x116>
 800b5e4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800b5e8:	621a      	str	r2, [r3, #32]
 800b5ea:	e853 2f00 	ldrex	r2, [r3]
 800b5ee:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b5f2:	e843 2100 	strex	r1, r2, [r3]
 800b5f6:	2900      	cmp	r1, #0
 800b5f8:	d1f7      	bne.n	800b5ea <UART_CheckIdleState+0x146>
 800b5fa:	483f      	ldr	r0, [pc, #252]	@ (800b6f8 <UART_CheckIdleState+0x254>)
 800b5fc:	f103 0208 	add.w	r2, r3, #8
 800b600:	e852 2f00 	ldrex	r2, [r2]
 800b604:	4002      	ands	r2, r0
 800b606:	f103 0508 	add.w	r5, r3, #8
 800b60a:	e845 2100 	strex	r1, r2, [r5]
 800b60e:	2900      	cmp	r1, #0
 800b610:	d1f4      	bne.n	800b5fc <UART_CheckIdleState+0x158>
 800b612:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b614:	2a01      	cmp	r2, #1
 800b616:	d00a      	beq.n	800b62e <UART_CheckIdleState+0x18a>
 800b618:	2200      	movs	r2, #0
 800b61a:	2120      	movs	r1, #32
 800b61c:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b620:	6762      	str	r2, [r4, #116]	@ 0x74
 800b622:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b624:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b628:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b62c:	e76e      	b.n	800b50c <UART_CheckIdleState+0x68>
 800b62e:	e853 2f00 	ldrex	r2, [r3]
 800b632:	f022 0210 	bic.w	r2, r2, #16
 800b636:	e843 2100 	strex	r1, r2, [r3]
 800b63a:	2900      	cmp	r1, #0
 800b63c:	d1f7      	bne.n	800b62e <UART_CheckIdleState+0x18a>
 800b63e:	e7eb      	b.n	800b618 <UART_CheckIdleState+0x174>
 800b640:	2208      	movs	r2, #8
 800b642:	621a      	str	r2, [r3, #32]
 800b644:	e853 2f00 	ldrex	r2, [r3]
 800b648:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b64c:	e843 2100 	strex	r1, r2, [r3]
 800b650:	2900      	cmp	r1, #0
 800b652:	d1f7      	bne.n	800b644 <UART_CheckIdleState+0x1a0>
 800b654:	4828      	ldr	r0, [pc, #160]	@ (800b6f8 <UART_CheckIdleState+0x254>)
 800b656:	f103 0208 	add.w	r2, r3, #8
 800b65a:	e852 2f00 	ldrex	r2, [r2]
 800b65e:	4002      	ands	r2, r0
 800b660:	f103 0508 	add.w	r5, r3, #8
 800b664:	e845 2100 	strex	r1, r2, [r5]
 800b668:	2900      	cmp	r1, #0
 800b66a:	d1f4      	bne.n	800b656 <UART_CheckIdleState+0x1b2>
 800b66c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b66e:	2a01      	cmp	r2, #1
 800b670:	d00b      	beq.n	800b68a <UART_CheckIdleState+0x1e6>
 800b672:	2200      	movs	r2, #0
 800b674:	2020      	movs	r0, #32
 800b676:	2108      	movs	r1, #8
 800b678:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800b67c:	6762      	str	r2, [r4, #116]	@ 0x74
 800b67e:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b680:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b684:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b688:	e766      	b.n	800b558 <UART_CheckIdleState+0xb4>
 800b68a:	e853 2f00 	ldrex	r2, [r3]
 800b68e:	f022 0210 	bic.w	r2, r2, #16
 800b692:	e843 2100 	strex	r1, r2, [r3]
 800b696:	2900      	cmp	r1, #0
 800b698:	d1f7      	bne.n	800b68a <UART_CheckIdleState+0x1e6>
 800b69a:	e7ea      	b.n	800b672 <UART_CheckIdleState+0x1ce>
 800b69c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800b6a0:	621a      	str	r2, [r3, #32]
 800b6a2:	e853 2f00 	ldrex	r2, [r3]
 800b6a6:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b6aa:	e843 2100 	strex	r1, r2, [r3]
 800b6ae:	2900      	cmp	r1, #0
 800b6b0:	d1f7      	bne.n	800b6a2 <UART_CheckIdleState+0x1fe>
 800b6b2:	4811      	ldr	r0, [pc, #68]	@ (800b6f8 <UART_CheckIdleState+0x254>)
 800b6b4:	f103 0208 	add.w	r2, r3, #8
 800b6b8:	e852 2f00 	ldrex	r2, [r2]
 800b6bc:	4002      	ands	r2, r0
 800b6be:	f103 0508 	add.w	r5, r3, #8
 800b6c2:	e845 2100 	strex	r1, r2, [r5]
 800b6c6:	2900      	cmp	r1, #0
 800b6c8:	d1f4      	bne.n	800b6b4 <UART_CheckIdleState+0x210>
 800b6ca:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b6cc:	2a01      	cmp	r2, #1
 800b6ce:	d00a      	beq.n	800b6e6 <UART_CheckIdleState+0x242>
 800b6d0:	2200      	movs	r2, #0
 800b6d2:	2120      	movs	r1, #32
 800b6d4:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b6d8:	6762      	str	r2, [r4, #116]	@ 0x74
 800b6da:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b6dc:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b6e0:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b6e4:	e738      	b.n	800b558 <UART_CheckIdleState+0xb4>
 800b6e6:	e853 2f00 	ldrex	r2, [r3]
 800b6ea:	f022 0210 	bic.w	r2, r2, #16
 800b6ee:	e843 2100 	strex	r1, r2, [r3]
 800b6f2:	2900      	cmp	r1, #0
 800b6f4:	d1f7      	bne.n	800b6e6 <UART_CheckIdleState+0x242>
 800b6f6:	e7eb      	b.n	800b6d0 <UART_CheckIdleState+0x22c>
 800b6f8:	effffffe 	.word	0xeffffffe

0800b6fc <HAL_UART_Init>:
 800b6fc:	2800      	cmp	r0, #0
 800b6fe:	f000 80fd 	beq.w	800b8fc <HAL_UART_Init+0x200>
 800b702:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 800b706:	b570      	push	{r4, r5, r6, lr}
 800b708:	4604      	mov	r4, r0
 800b70a:	2b00      	cmp	r3, #0
 800b70c:	f000 8081 	beq.w	800b812 <HAL_UART_Init+0x116>
 800b710:	6825      	ldr	r5, [r4, #0]
 800b712:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800b714:	2324      	movs	r3, #36	@ 0x24
 800b716:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800b71a:	682b      	ldr	r3, [r5, #0]
 800b71c:	f023 0301 	bic.w	r3, r3, #1
 800b720:	602b      	str	r3, [r5, #0]
 800b722:	2a00      	cmp	r2, #0
 800b724:	d171      	bne.n	800b80a <HAL_UART_Init+0x10e>
 800b726:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 800b72a:	68a3      	ldr	r3, [r4, #8]
 800b72c:	6829      	ldr	r1, [r5, #0]
 800b72e:	4303      	orrs	r3, r0
 800b730:	4313      	orrs	r3, r2
 800b732:	69e0      	ldr	r0, [r4, #28]
 800b734:	4a84      	ldr	r2, [pc, #528]	@ (800b948 <HAL_UART_Init+0x24c>)
 800b736:	4303      	orrs	r3, r0
 800b738:	400a      	ands	r2, r1
 800b73a:	4313      	orrs	r3, r2
 800b73c:	602b      	str	r3, [r5, #0]
 800b73e:	686b      	ldr	r3, [r5, #4]
 800b740:	68e2      	ldr	r2, [r4, #12]
 800b742:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b744:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800b748:	4313      	orrs	r3, r2
 800b74a:	4a80      	ldr	r2, [pc, #512]	@ (800b94c <HAL_UART_Init+0x250>)
 800b74c:	606b      	str	r3, [r5, #4]
 800b74e:	4295      	cmp	r5, r2
 800b750:	68aa      	ldr	r2, [r5, #8]
 800b752:	69a3      	ldr	r3, [r4, #24]
 800b754:	f022 426e 	bic.w	r2, r2, #3992977408	@ 0xee000000
 800b758:	f422 6230 	bic.w	r2, r2, #2816	@ 0xb00
 800b75c:	f000 8082 	beq.w	800b864 <HAL_UART_Init+0x168>
 800b760:	6a26      	ldr	r6, [r4, #32]
 800b762:	4333      	orrs	r3, r6
 800b764:	4313      	orrs	r3, r2
 800b766:	60ab      	str	r3, [r5, #8]
 800b768:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b76a:	f023 030f 	bic.w	r3, r3, #15
 800b76e:	430b      	orrs	r3, r1
 800b770:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800b772:	4b77      	ldr	r3, [pc, #476]	@ (800b950 <HAL_UART_Init+0x254>)
 800b774:	429d      	cmp	r5, r3
 800b776:	d007      	beq.n	800b788 <HAL_UART_Init+0x8c>
 800b778:	2300      	movs	r3, #0
 800b77a:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
 800b77e:	e9c4 331d 	strd	r3, r3, [r4, #116]	@ 0x74
 800b782:	66a2      	str	r2, [r4, #104]	@ 0x68
 800b784:	2001      	movs	r0, #1
 800b786:	bd70      	pop	{r4, r5, r6, pc}
 800b788:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800b78c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b790:	f003 0303 	and.w	r3, r3, #3
 800b794:	2b02      	cmp	r3, #2
 800b796:	d041      	beq.n	800b81c <HAL_UART_Init+0x120>
 800b798:	2b03      	cmp	r3, #3
 800b79a:	f000 80b7 	beq.w	800b90c <HAL_UART_Init+0x210>
 800b79e:	2b01      	cmp	r3, #1
 800b7a0:	f000 80ae 	beq.w	800b900 <HAL_UART_Init+0x204>
 800b7a4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b7a8:	f000 80c3 	beq.w	800b932 <HAL_UART_Init+0x236>
 800b7ac:	f7fd fbb6 	bl	8008f1c <HAL_RCC_GetPCLK2Freq>
 800b7b0:	2800      	cmp	r0, #0
 800b7b2:	f000 809c 	beq.w	800b8ee <HAL_UART_Init+0x1f2>
 800b7b6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b7b8:	6863      	ldr	r3, [r4, #4]
 800b7ba:	4a66      	ldr	r2, [pc, #408]	@ (800b954 <HAL_UART_Init+0x258>)
 800b7bc:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 800b7c0:	fbb0 f0f1 	udiv	r0, r0, r1
 800b7c4:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 800b7c8:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 800b7cc:	fbb0 f0f3 	udiv	r0, r0, r3
 800b7d0:	f1a0 0310 	sub.w	r3, r0, #16
 800b7d4:	4293      	cmp	r3, r2
 800b7d6:	d8cf      	bhi.n	800b778 <HAL_UART_Init+0x7c>
 800b7d8:	6822      	ldr	r2, [r4, #0]
 800b7da:	2300      	movs	r3, #0
 800b7dc:	60d0      	str	r0, [r2, #12]
 800b7de:	e9c4 331d 	strd	r3, r3, [r4, #116]	@ 0x74
 800b7e2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800b7e6:	66a1      	str	r1, [r4, #104]	@ 0x68
 800b7e8:	6853      	ldr	r3, [r2, #4]
 800b7ea:	f423 4390 	bic.w	r3, r3, #18432	@ 0x4800
 800b7ee:	6053      	str	r3, [r2, #4]
 800b7f0:	6893      	ldr	r3, [r2, #8]
 800b7f2:	f023 032a 	bic.w	r3, r3, #42	@ 0x2a
 800b7f6:	6093      	str	r3, [r2, #8]
 800b7f8:	6813      	ldr	r3, [r2, #0]
 800b7fa:	f043 0301 	orr.w	r3, r3, #1
 800b7fe:	4620      	mov	r0, r4
 800b800:	6013      	str	r3, [r2, #0]
 800b802:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b806:	f7ff be4d 	b.w	800b4a4 <UART_CheckIdleState>
 800b80a:	4620      	mov	r0, r4
 800b80c:	f7ff fdf2 	bl	800b3f4 <UART_AdvFeatureConfig>
 800b810:	e789      	b.n	800b726 <HAL_UART_Init+0x2a>
 800b812:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
 800b816:	f7f9 fd0f 	bl	8005238 <HAL_UART_MspInit>
 800b81a:	e779      	b.n	800b710 <HAL_UART_Init+0x14>
 800b81c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b820:	484d      	ldr	r0, [pc, #308]	@ (800b958 <HAL_UART_Init+0x25c>)
 800b822:	d1c9      	bne.n	800b7b8 <HAL_UART_Init+0xbc>
 800b824:	6865      	ldr	r5, [r4, #4]
 800b826:	4b4b      	ldr	r3, [pc, #300]	@ (800b954 <HAL_UART_Init+0x258>)
 800b828:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
 800b82c:	fbb0 f2f2 	udiv	r2, r0, r2
 800b830:	086b      	lsrs	r3, r5, #1
 800b832:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b836:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 800b83a:	fbb3 f3f5 	udiv	r3, r3, r5
 800b83e:	f1a3 0110 	sub.w	r1, r3, #16
 800b842:	4291      	cmp	r1, r2
 800b844:	d898      	bhi.n	800b778 <HAL_UART_Init+0x7c>
 800b846:	f023 010f 	bic.w	r1, r3, #15
 800b84a:	b289      	uxth	r1, r1
 800b84c:	6822      	ldr	r2, [r4, #0]
 800b84e:	f3c3 0342 	ubfx	r3, r3, #1, #3
 800b852:	430b      	orrs	r3, r1
 800b854:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 800b858:	2100      	movs	r1, #0
 800b85a:	60d3      	str	r3, [r2, #12]
 800b85c:	e9c4 111d 	strd	r1, r1, [r4, #116]	@ 0x74
 800b860:	66a0      	str	r0, [r4, #104]	@ 0x68
 800b862:	e7c1      	b.n	800b7e8 <HAL_UART_Init+0xec>
 800b864:	431a      	orrs	r2, r3
 800b866:	60aa      	str	r2, [r5, #8]
 800b868:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b86a:	f023 030f 	bic.w	r3, r3, #15
 800b86e:	430b      	orrs	r3, r1
 800b870:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800b874:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800b876:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 800b87a:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800b87e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b882:	d05e      	beq.n	800b942 <HAL_UART_Init+0x246>
 800b884:	d848      	bhi.n	800b918 <HAL_UART_Init+0x21c>
 800b886:	2b00      	cmp	r3, #0
 800b888:	d056      	beq.n	800b938 <HAL_UART_Init+0x23c>
 800b88a:	f7fd fadd 	bl	8008e48 <HAL_RCC_GetSysClockFreq>
 800b88e:	b370      	cbz	r0, 800b8ee <HAL_UART_Init+0x1f2>
 800b890:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b892:	4b30      	ldr	r3, [pc, #192]	@ (800b954 <HAL_UART_Init+0x258>)
 800b894:	6865      	ldr	r5, [r4, #4]
 800b896:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
 800b89a:	fbb0 f3f2 	udiv	r3, r0, r2
 800b89e:	eb05 0145 	add.w	r1, r5, r5, lsl #1
 800b8a2:	428b      	cmp	r3, r1
 800b8a4:	f4ff af68 	bcc.w	800b778 <HAL_UART_Init+0x7c>
 800b8a8:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
 800b8ac:	f63f af64 	bhi.w	800b778 <HAL_UART_Init+0x7c>
 800b8b0:	2600      	movs	r6, #0
 800b8b2:	4633      	mov	r3, r6
 800b8b4:	4631      	mov	r1, r6
 800b8b6:	f7f5 f9bf 	bl	8000c38 <__aeabi_uldivmod>
 800b8ba:	0209      	lsls	r1, r1, #8
 800b8bc:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
 800b8c0:	086b      	lsrs	r3, r5, #1
 800b8c2:	0200      	lsls	r0, r0, #8
 800b8c4:	18c0      	adds	r0, r0, r3
 800b8c6:	462a      	mov	r2, r5
 800b8c8:	f141 0100 	adc.w	r1, r1, #0
 800b8cc:	4633      	mov	r3, r6
 800b8ce:	f7f5 f9b3 	bl	8000c38 <__aeabi_uldivmod>
 800b8d2:	4b22      	ldr	r3, [pc, #136]	@ (800b95c <HAL_UART_Init+0x260>)
 800b8d4:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
 800b8d8:	429a      	cmp	r2, r3
 800b8da:	f63f af4d 	bhi.w	800b778 <HAL_UART_Init+0x7c>
 800b8de:	6822      	ldr	r2, [r4, #0]
 800b8e0:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
 800b8e4:	60d0      	str	r0, [r2, #12]
 800b8e6:	e9c4 661d 	strd	r6, r6, [r4, #116]	@ 0x74
 800b8ea:	66a3      	str	r3, [r4, #104]	@ 0x68
 800b8ec:	e77c      	b.n	800b7e8 <HAL_UART_Init+0xec>
 800b8ee:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
 800b8f2:	e9c4 001d 	strd	r0, r0, [r4, #116]	@ 0x74
 800b8f6:	6822      	ldr	r2, [r4, #0]
 800b8f8:	66a3      	str	r3, [r4, #104]	@ 0x68
 800b8fa:	e775      	b.n	800b7e8 <HAL_UART_Init+0xec>
 800b8fc:	2001      	movs	r0, #1
 800b8fe:	4770      	bx	lr
 800b900:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b904:	d00f      	beq.n	800b926 <HAL_UART_Init+0x22a>
 800b906:	f7fd fa9f 	bl	8008e48 <HAL_RCC_GetSysClockFreq>
 800b90a:	e751      	b.n	800b7b0 <HAL_UART_Init+0xb4>
 800b90c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b910:	d088      	beq.n	800b824 <HAL_UART_Init+0x128>
 800b912:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800b916:	e74f      	b.n	800b7b8 <HAL_UART_Init+0xbc>
 800b918:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800b91c:	f47f af2c 	bne.w	800b778 <HAL_UART_Init+0x7c>
 800b920:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800b924:	e7b5      	b.n	800b892 <HAL_UART_Init+0x196>
 800b926:	f7fd fa8f 	bl	8008e48 <HAL_RCC_GetSysClockFreq>
 800b92a:	2800      	cmp	r0, #0
 800b92c:	d0df      	beq.n	800b8ee <HAL_UART_Init+0x1f2>
 800b92e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b930:	e778      	b.n	800b824 <HAL_UART_Init+0x128>
 800b932:	f7fd faf3 	bl	8008f1c <HAL_RCC_GetPCLK2Freq>
 800b936:	e7f8      	b.n	800b92a <HAL_UART_Init+0x22e>
 800b938:	f7fd faae 	bl	8008e98 <HAL_RCC_GetPCLK1Freq>
 800b93c:	2800      	cmp	r0, #0
 800b93e:	d0d6      	beq.n	800b8ee <HAL_UART_Init+0x1f2>
 800b940:	e7a6      	b.n	800b890 <HAL_UART_Init+0x194>
 800b942:	4805      	ldr	r0, [pc, #20]	@ (800b958 <HAL_UART_Init+0x25c>)
 800b944:	e7a5      	b.n	800b892 <HAL_UART_Init+0x196>
 800b946:	bf00      	nop
 800b948:	cfff69f3 	.word	0xcfff69f3
 800b94c:	40008000 	.word	0x40008000
 800b950:	40013800 	.word	0x40013800
 800b954:	080183c0 	.word	0x080183c0
 800b958:	00f42400 	.word	0x00f42400
 800b95c:	000ffcff 	.word	0x000ffcff

0800b960 <UART_Start_Receive_DMA>:
 800b960:	b538      	push	{r3, r4, r5, lr}
 800b962:	4605      	mov	r5, r0
 800b964:	4613      	mov	r3, r2
 800b966:	2022      	movs	r0, #34	@ 0x22
 800b968:	2200      	movs	r2, #0
 800b96a:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 800b96e:	f8c5 008c 	str.w	r0, [r5, #140]	@ 0x8c
 800b972:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 800b976:	682c      	ldr	r4, [r5, #0]
 800b978:	65a9      	str	r1, [r5, #88]	@ 0x58
 800b97a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 800b97e:	b168      	cbz	r0, 800b99c <UART_Start_Receive_DMA+0x3c>
 800b980:	6382      	str	r2, [r0, #56]	@ 0x38
 800b982:	460a      	mov	r2, r1
 800b984:	f104 0124 	add.w	r1, r4, #36	@ 0x24
 800b988:	4c1a      	ldr	r4, [pc, #104]	@ (800b9f4 <UART_Start_Receive_DMA+0x94>)
 800b98a:	62c4      	str	r4, [r0, #44]	@ 0x2c
 800b98c:	4c1a      	ldr	r4, [pc, #104]	@ (800b9f8 <UART_Start_Receive_DMA+0x98>)
 800b98e:	6304      	str	r4, [r0, #48]	@ 0x30
 800b990:	4c1a      	ldr	r4, [pc, #104]	@ (800b9fc <UART_Start_Receive_DMA+0x9c>)
 800b992:	6344      	str	r4, [r0, #52]	@ 0x34
 800b994:	f7fa fbf4 	bl	8006180 <HAL_DMA_Start_IT>
 800b998:	bb18      	cbnz	r0, 800b9e2 <UART_Start_Receive_DMA+0x82>
 800b99a:	682c      	ldr	r4, [r5, #0]
 800b99c:	692b      	ldr	r3, [r5, #16]
 800b99e:	b13b      	cbz	r3, 800b9b0 <UART_Start_Receive_DMA+0x50>
 800b9a0:	e854 3f00 	ldrex	r3, [r4]
 800b9a4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b9a8:	e844 3200 	strex	r2, r3, [r4]
 800b9ac:	2a00      	cmp	r2, #0
 800b9ae:	d1f7      	bne.n	800b9a0 <UART_Start_Receive_DMA+0x40>
 800b9b0:	f104 0308 	add.w	r3, r4, #8
 800b9b4:	e853 3f00 	ldrex	r3, [r3]
 800b9b8:	f043 0301 	orr.w	r3, r3, #1
 800b9bc:	f104 0108 	add.w	r1, r4, #8
 800b9c0:	e841 3200 	strex	r2, r3, [r1]
 800b9c4:	2a00      	cmp	r2, #0
 800b9c6:	d1f3      	bne.n	800b9b0 <UART_Start_Receive_DMA+0x50>
 800b9c8:	f104 0308 	add.w	r3, r4, #8
 800b9cc:	e853 3f00 	ldrex	r3, [r3]
 800b9d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b9d4:	f104 0208 	add.w	r2, r4, #8
 800b9d8:	e842 3000 	strex	r0, r3, [r2]
 800b9dc:	2800      	cmp	r0, #0
 800b9de:	d1f3      	bne.n	800b9c8 <UART_Start_Receive_DMA+0x68>
 800b9e0:	bd38      	pop	{r3, r4, r5, pc}
 800b9e2:	2210      	movs	r2, #16
 800b9e4:	2320      	movs	r3, #32
 800b9e6:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 800b9ea:	2001      	movs	r0, #1
 800b9ec:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
 800b9f0:	bd38      	pop	{r3, r4, r5, pc}
 800b9f2:	bf00      	nop
 800b9f4:	0800b341 	.word	0x0800b341
 800b9f8:	0800b305 	.word	0x0800b305
 800b9fc:	0800ae79 	.word	0x0800ae79

0800ba00 <HAL_UART_Receive_DMA>:
 800ba00:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 800ba04:	2b20      	cmp	r3, #32
 800ba06:	d118      	bne.n	800ba3a <HAL_UART_Receive_DMA+0x3a>
 800ba08:	b101      	cbz	r1, 800ba0c <HAL_UART_Receive_DMA+0xc>
 800ba0a:	b90a      	cbnz	r2, 800ba10 <HAL_UART_Receive_DMA+0x10>
 800ba0c:	2001      	movs	r0, #1
 800ba0e:	4770      	bx	lr
 800ba10:	b430      	push	{r4, r5}
 800ba12:	4b0b      	ldr	r3, [pc, #44]	@ (800ba40 <HAL_UART_Receive_DMA+0x40>)
 800ba14:	6804      	ldr	r4, [r0, #0]
 800ba16:	2500      	movs	r5, #0
 800ba18:	429c      	cmp	r4, r3
 800ba1a:	66c5      	str	r5, [r0, #108]	@ 0x6c
 800ba1c:	d00a      	beq.n	800ba34 <HAL_UART_Receive_DMA+0x34>
 800ba1e:	6863      	ldr	r3, [r4, #4]
 800ba20:	021b      	lsls	r3, r3, #8
 800ba22:	d507      	bpl.n	800ba34 <HAL_UART_Receive_DMA+0x34>
 800ba24:	e854 3f00 	ldrex	r3, [r4]
 800ba28:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800ba2c:	e844 3500 	strex	r5, r3, [r4]
 800ba30:	2d00      	cmp	r5, #0
 800ba32:	d1f7      	bne.n	800ba24 <HAL_UART_Receive_DMA+0x24>
 800ba34:	bc30      	pop	{r4, r5}
 800ba36:	f7ff bf93 	b.w	800b960 <UART_Start_Receive_DMA>
 800ba3a:	2002      	movs	r0, #2
 800ba3c:	4770      	bx	lr
 800ba3e:	bf00      	nop
 800ba40:	40008000 	.word	0x40008000

0800ba44 <HAL_UARTEx_WakeupCallback>:
 800ba44:	4770      	bx	lr
 800ba46:	bf00      	nop

0800ba48 <HAL_UARTEx_RxFifoFullCallback>:
 800ba48:	4770      	bx	lr
 800ba4a:	bf00      	nop

0800ba4c <HAL_UARTEx_TxFifoEmptyCallback>:
 800ba4c:	4770      	bx	lr
 800ba4e:	bf00      	nop

0800ba50 <HAL_UARTEx_DisableFifoMode>:
 800ba50:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800ba54:	2b01      	cmp	r3, #1
 800ba56:	d017      	beq.n	800ba88 <HAL_UARTEx_DisableFifoMode+0x38>
 800ba58:	6802      	ldr	r2, [r0, #0]
 800ba5a:	2324      	movs	r3, #36	@ 0x24
 800ba5c:	b410      	push	{r4}
 800ba5e:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
 800ba62:	6811      	ldr	r1, [r2, #0]
 800ba64:	6814      	ldr	r4, [r2, #0]
 800ba66:	2300      	movs	r3, #0
 800ba68:	f024 0401 	bic.w	r4, r4, #1
 800ba6c:	f021 5100 	bic.w	r1, r1, #536870912	@ 0x20000000
 800ba70:	6014      	str	r4, [r2, #0]
 800ba72:	6643      	str	r3, [r0, #100]	@ 0x64
 800ba74:	6011      	str	r1, [r2, #0]
 800ba76:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
 800ba7a:	2220      	movs	r2, #32
 800ba7c:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800ba80:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba84:	4618      	mov	r0, r3
 800ba86:	4770      	bx	lr
 800ba88:	2002      	movs	r0, #2
 800ba8a:	4770      	bx	lr

0800ba8c <HAL_UARTEx_SetTxFifoThreshold>:
 800ba8c:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
 800ba90:	2a01      	cmp	r2, #1
 800ba92:	d037      	beq.n	800bb04 <HAL_UARTEx_SetTxFifoThreshold+0x78>
 800ba94:	4603      	mov	r3, r0
 800ba96:	6802      	ldr	r2, [r0, #0]
 800ba98:	2024      	movs	r0, #36	@ 0x24
 800ba9a:	b530      	push	{r4, r5, lr}
 800ba9c:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
 800baa0:	6814      	ldr	r4, [r2, #0]
 800baa2:	6810      	ldr	r0, [r2, #0]
 800baa4:	f020 0001 	bic.w	r0, r0, #1
 800baa8:	6010      	str	r0, [r2, #0]
 800baaa:	6890      	ldr	r0, [r2, #8]
 800baac:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
 800bab0:	4301      	orrs	r1, r0
 800bab2:	6e58      	ldr	r0, [r3, #100]	@ 0x64
 800bab4:	6091      	str	r1, [r2, #8]
 800bab6:	b310      	cbz	r0, 800bafe <HAL_UARTEx_SetTxFifoThreshold+0x72>
 800bab8:	6891      	ldr	r1, [r2, #8]
 800baba:	6890      	ldr	r0, [r2, #8]
 800babc:	4d12      	ldr	r5, [pc, #72]	@ (800bb08 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
 800babe:	f3c1 6c42 	ubfx	ip, r1, #25, #3
 800bac2:	ea4f 7e50 	mov.w	lr, r0, lsr #29
 800bac6:	4911      	ldr	r1, [pc, #68]	@ (800bb0c <HAL_UARTEx_SetTxFifoThreshold+0x80>)
 800bac8:	f811 000e 	ldrb.w	r0, [r1, lr]
 800bacc:	f811 100c 	ldrb.w	r1, [r1, ip]
 800bad0:	f815 e00e 	ldrb.w	lr, [r5, lr]
 800bad4:	f815 500c 	ldrb.w	r5, [r5, ip]
 800bad8:	00c0      	lsls	r0, r0, #3
 800bada:	00c9      	lsls	r1, r1, #3
 800badc:	fbb0 f0fe 	udiv	r0, r0, lr
 800bae0:	fbb1 f1f5 	udiv	r1, r1, r5
 800bae4:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
 800bae8:	2100      	movs	r1, #0
 800baea:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
 800baee:	2520      	movs	r5, #32
 800baf0:	6014      	str	r4, [r2, #0]
 800baf2:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
 800baf6:	4608      	mov	r0, r1
 800baf8:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
 800bafc:	bd30      	pop	{r4, r5, pc}
 800bafe:	2101      	movs	r1, #1
 800bb00:	4608      	mov	r0, r1
 800bb02:	e7ef      	b.n	800bae4 <HAL_UARTEx_SetTxFifoThreshold+0x58>
 800bb04:	2002      	movs	r0, #2
 800bb06:	4770      	bx	lr
 800bb08:	080183d8 	.word	0x080183d8
 800bb0c:	080183e0 	.word	0x080183e0

0800bb10 <HAL_UARTEx_SetRxFifoThreshold>:
 800bb10:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
 800bb14:	2a01      	cmp	r2, #1
 800bb16:	d037      	beq.n	800bb88 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 800bb18:	4603      	mov	r3, r0
 800bb1a:	6802      	ldr	r2, [r0, #0]
 800bb1c:	2024      	movs	r0, #36	@ 0x24
 800bb1e:	b530      	push	{r4, r5, lr}
 800bb20:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
 800bb24:	6814      	ldr	r4, [r2, #0]
 800bb26:	6810      	ldr	r0, [r2, #0]
 800bb28:	f020 0001 	bic.w	r0, r0, #1
 800bb2c:	6010      	str	r0, [r2, #0]
 800bb2e:	6890      	ldr	r0, [r2, #8]
 800bb30:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
 800bb34:	4301      	orrs	r1, r0
 800bb36:	6e58      	ldr	r0, [r3, #100]	@ 0x64
 800bb38:	6091      	str	r1, [r2, #8]
 800bb3a:	b310      	cbz	r0, 800bb82 <HAL_UARTEx_SetRxFifoThreshold+0x72>
 800bb3c:	6891      	ldr	r1, [r2, #8]
 800bb3e:	6890      	ldr	r0, [r2, #8]
 800bb40:	4d12      	ldr	r5, [pc, #72]	@ (800bb8c <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
 800bb42:	f3c1 6c42 	ubfx	ip, r1, #25, #3
 800bb46:	ea4f 7e50 	mov.w	lr, r0, lsr #29
 800bb4a:	4911      	ldr	r1, [pc, #68]	@ (800bb90 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 800bb4c:	f811 000e 	ldrb.w	r0, [r1, lr]
 800bb50:	f811 100c 	ldrb.w	r1, [r1, ip]
 800bb54:	f815 e00e 	ldrb.w	lr, [r5, lr]
 800bb58:	f815 500c 	ldrb.w	r5, [r5, ip]
 800bb5c:	00c0      	lsls	r0, r0, #3
 800bb5e:	00c9      	lsls	r1, r1, #3
 800bb60:	fbb0 f0fe 	udiv	r0, r0, lr
 800bb64:	fbb1 f1f5 	udiv	r1, r1, r5
 800bb68:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
 800bb6c:	2100      	movs	r1, #0
 800bb6e:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
 800bb72:	2520      	movs	r5, #32
 800bb74:	6014      	str	r4, [r2, #0]
 800bb76:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
 800bb7a:	4608      	mov	r0, r1
 800bb7c:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
 800bb80:	bd30      	pop	{r4, r5, pc}
 800bb82:	2101      	movs	r1, #1
 800bb84:	4608      	mov	r0, r1
 800bb86:	e7ef      	b.n	800bb68 <HAL_UARTEx_SetRxFifoThreshold+0x58>
 800bb88:	2002      	movs	r0, #2
 800bb8a:	4770      	bx	lr
 800bb8c:	080183d8 	.word	0x080183d8
 800bb90:	080183e0 	.word	0x080183e0

0800bb94 <USB_EnableGlobalInt>:
 800bb94:	4603      	mov	r3, r0
 800bb96:	f64b 7280 	movw	r2, #49024	@ 0xbf80
 800bb9a:	2000      	movs	r0, #0
 800bb9c:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 800bba0:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800bba4:	4770      	bx	lr
 800bba6:	bf00      	nop

0800bba8 <USB_DisableGlobalInt>:
 800bba8:	f8b0 1040 	ldrh.w	r1, [r0, #64]	@ 0x40
 800bbac:	4603      	mov	r3, r0
 800bbae:	f244 027f 	movw	r2, #16511	@ 0x407f
 800bbb2:	400a      	ands	r2, r1
 800bbb4:	2000      	movs	r0, #0
 800bbb6:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800bbba:	4770      	bx	lr

0800bbbc <USB_DevInit>:
 800bbbc:	4603      	mov	r3, r0
 800bbbe:	b082      	sub	sp, #8
 800bbc0:	f04f 0c01 	mov.w	ip, #1
 800bbc4:	2000      	movs	r0, #0
 800bbc6:	f8a3 c040 	strh.w	ip, [r3, #64]	@ 0x40
 800bbca:	f10d 0c08 	add.w	ip, sp, #8
 800bbce:	f8a3 0040 	strh.w	r0, [r3, #64]	@ 0x40
 800bbd2:	e90c 0006 	stmdb	ip, {r1, r2}
 800bbd6:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 800bbda:	f8a3 0050 	strh.w	r0, [r3, #80]	@ 0x50
 800bbde:	b002      	add	sp, #8
 800bbe0:	4770      	bx	lr
 800bbe2:	bf00      	nop

0800bbe4 <USB_ActivateEndpoint>:
 800bbe4:	b570      	push	{r4, r5, r6, lr}
 800bbe6:	780c      	ldrb	r4, [r1, #0]
 800bbe8:	f891 e003 	ldrb.w	lr, [r1, #3]
 800bbec:	fa0f fc84 	sxth.w	ip, r4
 800bbf0:	4603      	mov	r3, r0
 800bbf2:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 800bbf6:	f422 42ec 	bic.w	r2, r2, #30208	@ 0x7600
 800bbfa:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bbfe:	0412      	lsls	r2, r2, #16
 800bc00:	0c12      	lsrs	r2, r2, #16
 800bc02:	f1be 0f03 	cmp.w	lr, #3
 800bc06:	f200 81f1 	bhi.w	800bfec <USB_ActivateEndpoint+0x408>
 800bc0a:	e8df f01e 	tbh	[pc, lr, lsl #1]
 800bc0e:	00f2      	.short	0x00f2
 800bc10:	00ab00f5 	.word	0x00ab00f5
 800bc14:	0004      	.short	0x0004
 800bc16:	f442 62c0 	orr.w	r2, r2, #1536	@ 0x600
 800bc1a:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bc1e:	4302      	orrs	r2, r0
 800bc20:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc24:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc28:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bc2c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc30:	0412      	lsls	r2, r2, #16
 800bc32:	0c12      	lsrs	r2, r2, #16
 800bc34:	4322      	orrs	r2, r4
 800bc36:	4310      	orrs	r0, r2
 800bc38:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800bc3c:	7b0a      	ldrb	r2, [r1, #12]
 800bc3e:	2a00      	cmp	r2, #0
 800bc40:	f000 80a2 	beq.w	800bd88 <USB_ActivateEndpoint+0x1a4>
 800bc44:	2000      	movs	r0, #0
 800bc46:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc4a:	f422 42e2 	bic.w	r2, r2, #28928	@ 0x7100
 800bc4e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc52:	0412      	lsls	r2, r2, #16
 800bc54:	0c12      	lsrs	r2, r2, #16
 800bc56:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bc5a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bc5e:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc62:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bc66:	890a      	ldrh	r2, [r1, #8]
 800bc68:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800bc6c:	fa14 f585 	uxtah	r5, r4, r5
 800bc70:	0852      	lsrs	r2, r2, #1
 800bc72:	0052      	lsls	r2, r2, #1
 800bc74:	f8a5 2400 	strh.w	r2, [r5, #1024]	@ 0x400
 800bc78:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bc7c:	894a      	ldrh	r2, [r1, #10]
 800bc7e:	fa14 f585 	uxtah	r5, r4, r5
 800bc82:	0852      	lsrs	r2, r2, #1
 800bc84:	0052      	lsls	r2, r2, #1
 800bc86:	f8a5 2404 	strh.w	r2, [r5, #1028]	@ 0x404
 800bc8a:	784a      	ldrb	r2, [r1, #1]
 800bc8c:	2a00      	cmp	r2, #0
 800bc8e:	f040 8107 	bne.w	800bea0 <USB_ActivateEndpoint+0x2bc>
 800bc92:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc96:	0455      	lsls	r5, r2, #17
 800bc98:	d50d      	bpl.n	800bcb6 <USB_ActivateEndpoint+0xd2>
 800bc9a:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc9e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bca2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bca6:	0412      	lsls	r2, r2, #16
 800bca8:	0c12      	lsrs	r2, r2, #16
 800bcaa:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bcae:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bcb2:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bcb6:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bcba:	0652      	lsls	r2, r2, #25
 800bcbc:	d50d      	bpl.n	800bcda <USB_ActivateEndpoint+0xf6>
 800bcbe:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bcc2:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bcc6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bcca:	0412      	lsls	r2, r2, #16
 800bccc:	0c12      	lsrs	r2, r2, #16
 800bcce:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bcd2:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bcd6:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bcda:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800bcde:	690d      	ldr	r5, [r1, #16]
 800bce0:	fa14 f282 	uxtah	r2, r4, r2
 800bce4:	f204 4406 	addw	r4, r4, #1030	@ 0x406
 800bce8:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bcec:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bcf0:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bcf4:	2d00      	cmp	r5, #0
 800bcf6:	f000 8119 	beq.w	800bf2c <USB_ActivateEndpoint+0x348>
 800bcfa:	2d3e      	cmp	r5, #62	@ 0x3e
 800bcfc:	f200 8157 	bhi.w	800bfae <USB_ActivateEndpoint+0x3ca>
 800bd00:	0869      	lsrs	r1, r5, #1
 800bd02:	07ee      	lsls	r6, r5, #31
 800bd04:	bf48      	it	mi
 800bd06:	3101      	addmi	r1, #1
 800bd08:	028d      	lsls	r5, r1, #10
 800bd0a:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bd0e:	b2ad      	uxth	r5, r5
 800bd10:	b289      	uxth	r1, r1
 800bd12:	4329      	orrs	r1, r5
 800bd14:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bd18:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800bd1c:	b292      	uxth	r2, r2
 800bd1e:	5b11      	ldrh	r1, [r2, r4]
 800bd20:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bd24:	5311      	strh	r1, [r2, r4]
 800bd26:	5b11      	ldrh	r1, [r2, r4]
 800bd28:	b289      	uxth	r1, r1
 800bd2a:	430d      	orrs	r5, r1
 800bd2c:	5315      	strh	r5, [r2, r4]
 800bd2e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd32:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bd36:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bd3a:	0412      	lsls	r2, r2, #16
 800bd3c:	0c12      	lsrs	r2, r2, #16
 800bd3e:	f248 0180 	movw	r1, #32896	@ 0x8080
 800bd42:	f482 5240 	eor.w	r2, r2, #12288	@ 0x3000
 800bd46:	430a      	orrs	r2, r1
 800bd48:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bd4c:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd50:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bd54:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bd58:	0412      	lsls	r2, r2, #16
 800bd5a:	0c12      	lsrs	r2, r2, #16
 800bd5c:	4311      	orrs	r1, r2
 800bd5e:	f823 102c 	strh.w	r1, [r3, ip, lsl #2]
 800bd62:	bd70      	pop	{r4, r5, r6, pc}
 800bd64:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bd68:	4302      	orrs	r2, r0
 800bd6a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bd6e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd72:	4daa      	ldr	r5, [pc, #680]	@ (800c01c <USB_ActivateEndpoint+0x438>)
 800bd74:	b292      	uxth	r2, r2
 800bd76:	402a      	ands	r2, r5
 800bd78:	4322      	orrs	r2, r4
 800bd7a:	4310      	orrs	r0, r2
 800bd7c:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800bd80:	7b0a      	ldrb	r2, [r1, #12]
 800bd82:	2a00      	cmp	r2, #0
 800bd84:	f040 80f4 	bne.w	800bf70 <USB_ActivateEndpoint+0x38c>
 800bd88:	2000      	movs	r0, #0
 800bd8a:	88ca      	ldrh	r2, [r1, #6]
 800bd8c:	784e      	ldrb	r6, [r1, #1]
 800bd8e:	0852      	lsrs	r2, r2, #1
 800bd90:	0052      	lsls	r2, r2, #1
 800bd92:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800bd96:	b3de      	cbz	r6, 800be10 <USB_ActivateEndpoint+0x22c>
 800bd98:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bd9c:	fa15 f181 	uxtah	r1, r5, r1
 800bda0:	f8a1 2400 	strh.w	r2, [r1, #1024]	@ 0x400
 800bda4:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bda8:	0652      	lsls	r2, r2, #25
 800bdaa:	d50d      	bpl.n	800bdc8 <USB_ActivateEndpoint+0x1e4>
 800bdac:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bdb0:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bdb4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bdb8:	0412      	lsls	r2, r2, #16
 800bdba:	0c12      	lsrs	r2, r2, #16
 800bdbc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bdc0:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bdc4:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bdc8:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bdcc:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bdd0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bdd4:	0412      	lsls	r2, r2, #16
 800bdd6:	f1be 0f01 	cmp.w	lr, #1
 800bdda:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800bdde:	d010      	beq.n	800be02 <USB_ActivateEndpoint+0x21e>
 800bde0:	f082 0220 	eor.w	r2, r2, #32
 800bde4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bde8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bdec:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bdf0:	bd70      	pop	{r4, r5, r6, pc}
 800bdf2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800bdf6:	e710      	b.n	800bc1a <USB_ActivateEndpoint+0x36>
 800bdf8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800bdfc:	e70d      	b.n	800bc1a <USB_ActivateEndpoint+0x36>
 800bdfe:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 800be02:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800be06:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be0a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800be0e:	bd70      	pop	{r4, r5, r6, pc}
 800be10:	690e      	ldr	r6, [r1, #16]
 800be12:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800be16:	fa15 f181 	uxtah	r1, r5, r1
 800be1a:	f8a1 2404 	strh.w	r2, [r1, #1028]	@ 0x404
 800be1e:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800be22:	fa15 f282 	uxtah	r2, r5, r2
 800be26:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800be2a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800be2e:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800be32:	2e00      	cmp	r6, #0
 800be34:	f000 8092 	beq.w	800bf5c <USB_ActivateEndpoint+0x378>
 800be38:	2e3e      	cmp	r6, #62	@ 0x3e
 800be3a:	f200 80a5 	bhi.w	800bf88 <USB_ActivateEndpoint+0x3a4>
 800be3e:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800be42:	0875      	lsrs	r5, r6, #1
 800be44:	07f6      	lsls	r6, r6, #31
 800be46:	bf48      	it	mi
 800be48:	3501      	addmi	r5, #1
 800be4a:	b289      	uxth	r1, r1
 800be4c:	ea41 2185 	orr.w	r1, r1, r5, lsl #10
 800be50:	b289      	uxth	r1, r1
 800be52:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800be56:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800be5a:	0456      	lsls	r6, r2, #17
 800be5c:	d50d      	bpl.n	800be7a <USB_ActivateEndpoint+0x296>
 800be5e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800be62:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800be66:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be6a:	0412      	lsls	r2, r2, #16
 800be6c:	0c12      	lsrs	r2, r2, #16
 800be6e:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800be72:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be76:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800be7a:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800be7e:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800be82:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be86:	0412      	lsls	r2, r2, #16
 800be88:	0c12      	lsrs	r2, r2, #16
 800be8a:	2c00      	cmp	r4, #0
 800be8c:	d1b7      	bne.n	800bdfe <USB_ActivateEndpoint+0x21a>
 800be8e:	f482 5240 	eor.w	r2, r2, #12288	@ 0x3000
 800be92:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800be96:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be9a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800be9e:	bd70      	pop	{r4, r5, r6, pc}
 800bea0:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bea4:	0451      	lsls	r1, r2, #17
 800bea6:	d50d      	bpl.n	800bec4 <USB_ActivateEndpoint+0x2e0>
 800bea8:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800beac:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800beb0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800beb4:	0412      	lsls	r2, r2, #16
 800beb6:	0c12      	lsrs	r2, r2, #16
 800beb8:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bebc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bec0:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bec4:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bec8:	0652      	lsls	r2, r2, #25
 800beca:	d50d      	bpl.n	800bee8 <USB_ActivateEndpoint+0x304>
 800becc:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bed0:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bed4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bed8:	0412      	lsls	r2, r2, #16
 800beda:	0c12      	lsrs	r2, r2, #16
 800bedc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bee0:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bee4:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bee8:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800beec:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bef0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bef4:	0412      	lsls	r2, r2, #16
 800bef6:	0c12      	lsrs	r2, r2, #16
 800bef8:	f1be 0f01 	cmp.w	lr, #1
 800befc:	bf18      	it	ne
 800befe:	f082 0220 	eorne.w	r2, r2, #32
 800bf02:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bf06:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf0a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bf0e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bf12:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bf16:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bf1a:	0412      	lsls	r2, r2, #16
 800bf1c:	0c12      	lsrs	r2, r2, #16
 800bf1e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bf22:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf26:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bf2a:	bd70      	pop	{r4, r5, r6, pc}
 800bf2c:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bf30:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bf34:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bf38:	b289      	uxth	r1, r1
 800bf3a:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bf3e:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bf42:	b289      	uxth	r1, r1
 800bf44:	5b0a      	ldrh	r2, [r1, r4]
 800bf46:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bf4a:	530a      	strh	r2, [r1, r4]
 800bf4c:	5b0a      	ldrh	r2, [r1, r4]
 800bf4e:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800bf52:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 800bf56:	b292      	uxth	r2, r2
 800bf58:	530a      	strh	r2, [r1, r4]
 800bf5a:	e6e8      	b.n	800bd2e <USB_ActivateEndpoint+0x14a>
 800bf5c:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bf60:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bf64:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bf68:	b289      	uxth	r1, r1
 800bf6a:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bf6e:	e772      	b.n	800be56 <USB_ActivateEndpoint+0x272>
 800bf70:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bf74:	b292      	uxth	r2, r2
 800bf76:	402a      	ands	r2, r5
 800bf78:	f442 4201 	orr.w	r2, r2, #33024	@ 0x8100
 800bf7c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf80:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bf84:	2000      	movs	r0, #0
 800bf86:	e66c      	b.n	800bc62 <USB_ActivateEndpoint+0x7e>
 800bf88:	06f1      	lsls	r1, r6, #27
 800bf8a:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bf8e:	ea4f 1556 	mov.w	r5, r6, lsr #5
 800bf92:	bf08      	it	eq
 800bf94:	f105 35ff 	addeq.w	r5, r5, #4294967295
 800bf98:	b289      	uxth	r1, r1
 800bf9a:	ea41 2185 	orr.w	r1, r1, r5, lsl #10
 800bf9e:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bfa2:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bfa6:	b289      	uxth	r1, r1
 800bfa8:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bfac:	e753      	b.n	800be56 <USB_ActivateEndpoint+0x272>
 800bfae:	0969      	lsrs	r1, r5, #5
 800bfb0:	06ed      	lsls	r5, r5, #27
 800bfb2:	bf08      	it	eq
 800bfb4:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800bfb8:	f8b2 5402 	ldrh.w	r5, [r2, #1026]	@ 0x402
 800bfbc:	0289      	lsls	r1, r1, #10
 800bfbe:	b289      	uxth	r1, r1
 800bfc0:	b2ad      	uxth	r5, r5
 800bfc2:	430d      	orrs	r5, r1
 800bfc4:	f445 4500 	orr.w	r5, r5, #32768	@ 0x8000
 800bfc8:	f8a2 5402 	strh.w	r5, [r2, #1026]	@ 0x402
 800bfcc:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bfd0:	b2ad      	uxth	r5, r5
 800bfd2:	5b2a      	ldrh	r2, [r5, r4]
 800bfd4:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bfd8:	532a      	strh	r2, [r5, r4]
 800bfda:	5b2a      	ldrh	r2, [r5, r4]
 800bfdc:	430a      	orrs	r2, r1
 800bfde:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800bfe2:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 800bfe6:	b292      	uxth	r2, r2
 800bfe8:	532a      	strh	r2, [r5, r4]
 800bfea:	e6a0      	b.n	800bd2e <USB_ActivateEndpoint+0x14a>
 800bfec:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bff0:	4302      	orrs	r2, r0
 800bff2:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bff6:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bffa:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bffe:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c002:	0412      	lsls	r2, r2, #16
 800c004:	0c12      	lsrs	r2, r2, #16
 800c006:	4322      	orrs	r2, r4
 800c008:	4310      	orrs	r0, r2
 800c00a:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800c00e:	7b0a      	ldrb	r2, [r1, #12]
 800c010:	2001      	movs	r0, #1
 800c012:	2a00      	cmp	r2, #0
 800c014:	f47f ae17 	bne.w	800bc46 <USB_ActivateEndpoint+0x62>
 800c018:	e6b7      	b.n	800bd8a <USB_ActivateEndpoint+0x1a6>
 800c01a:	bf00      	nop
 800c01c:	ffff8f8f 	.word	0xffff8f8f

0800c020 <USB_DeactivateEndpoint>:
 800c020:	b410      	push	{r4}
 800c022:	7b0c      	ldrb	r4, [r1, #12]
 800c024:	784a      	ldrb	r2, [r1, #1]
 800c026:	780b      	ldrb	r3, [r1, #0]
 800c028:	b9cc      	cbnz	r4, 800c05e <USB_DeactivateEndpoint+0x3e>
 800c02a:	2a00      	cmp	r2, #0
 800c02c:	f000 80b5 	beq.w	800c19a <USB_DeactivateEndpoint+0x17a>
 800c030:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c034:	0654      	lsls	r4, r2, #25
 800c036:	f100 80c9 	bmi.w	800c1cc <USB_DeactivateEndpoint+0x1ac>
 800c03a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c03e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c042:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c046:	0412      	lsls	r2, r2, #16
 800c048:	0c12      	lsrs	r2, r2, #16
 800c04a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c04e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c052:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c056:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c05a:	2000      	movs	r0, #0
 800c05c:	4770      	bx	lr
 800c05e:	2a00      	cmp	r2, #0
 800c060:	d14d      	bne.n	800c0fe <USB_DeactivateEndpoint+0xde>
 800c062:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c066:	0452      	lsls	r2, r2, #17
 800c068:	d50d      	bpl.n	800c086 <USB_DeactivateEndpoint+0x66>
 800c06a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c06e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c072:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c076:	0412      	lsls	r2, r2, #16
 800c078:	0c12      	lsrs	r2, r2, #16
 800c07a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c07e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c082:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c086:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c08a:	0654      	lsls	r4, r2, #25
 800c08c:	d50d      	bpl.n	800c0aa <USB_DeactivateEndpoint+0x8a>
 800c08e:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c092:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c096:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c09a:	0412      	lsls	r2, r2, #16
 800c09c:	0c12      	lsrs	r2, r2, #16
 800c09e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c0a2:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c0a6:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c0aa:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c0b2:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c0b6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c0ba:	0412      	lsls	r2, r2, #16
 800c0bc:	0c12      	lsrs	r2, r2, #16
 800c0be:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c0c2:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c0c6:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c0ca:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0ce:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c0d2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c0d6:	0412      	lsls	r2, r2, #16
 800c0d8:	f248 0180 	movw	r1, #32896	@ 0x8080
 800c0dc:	0c12      	lsrs	r2, r2, #16
 800c0de:	430a      	orrs	r2, r1
 800c0e0:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c0e4:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0e8:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c0ec:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c0f0:	0412      	lsls	r2, r2, #16
 800c0f2:	0c12      	lsrs	r2, r2, #16
 800c0f4:	4311      	orrs	r1, r2
 800c0f6:	f820 1023 	strh.w	r1, [r0, r3, lsl #2]
 800c0fa:	2000      	movs	r0, #0
 800c0fc:	4770      	bx	lr
 800c0fe:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c102:	0451      	lsls	r1, r2, #17
 800c104:	d50d      	bpl.n	800c122 <USB_DeactivateEndpoint+0x102>
 800c106:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c10a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c10e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c112:	0412      	lsls	r2, r2, #16
 800c114:	0c12      	lsrs	r2, r2, #16
 800c116:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c11a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c11e:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c122:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c126:	0652      	lsls	r2, r2, #25
 800c128:	d50d      	bpl.n	800c146 <USB_DeactivateEndpoint+0x126>
 800c12a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c12e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c132:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c136:	0412      	lsls	r2, r2, #16
 800c138:	0c12      	lsrs	r2, r2, #16
 800c13a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c13e:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c142:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c146:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c14a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c14e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c152:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c156:	0412      	lsls	r2, r2, #16
 800c158:	0c12      	lsrs	r2, r2, #16
 800c15a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c15e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c162:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c166:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c16a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c16e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c172:	0412      	lsls	r2, r2, #16
 800c174:	f248 0180 	movw	r1, #32896	@ 0x8080
 800c178:	0c12      	lsrs	r2, r2, #16
 800c17a:	430a      	orrs	r2, r1
 800c17c:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c180:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c184:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c188:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c18c:	0412      	lsls	r2, r2, #16
 800c18e:	0c12      	lsrs	r2, r2, #16
 800c190:	4311      	orrs	r1, r2
 800c192:	f820 1023 	strh.w	r1, [r0, r3, lsl #2]
 800c196:	2000      	movs	r0, #0
 800c198:	4770      	bx	lr
 800c19a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c19e:	0451      	lsls	r1, r2, #17
 800c1a0:	d50d      	bpl.n	800c1be <USB_DeactivateEndpoint+0x19e>
 800c1a2:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1a6:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c1aa:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1ae:	0412      	lsls	r2, r2, #16
 800c1b0:	0c12      	lsrs	r2, r2, #16
 800c1b2:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c1b6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c1ba:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c1be:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1c2:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c1c6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1ca:	e73c      	b.n	800c046 <USB_DeactivateEndpoint+0x26>
 800c1cc:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1d0:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c1d4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1d8:	0412      	lsls	r2, r2, #16
 800c1da:	0c12      	lsrs	r2, r2, #16
 800c1dc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c1e0:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c1e4:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c1e8:	e727      	b.n	800c03a <USB_DeactivateEndpoint+0x1a>
 800c1ea:	bf00      	nop

0800c1ec <USB_EPStartXfer>:
 800c1ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1f0:	784b      	ldrb	r3, [r1, #1]
 800c1f2:	7b0c      	ldrb	r4, [r1, #12]
 800c1f4:	2b01      	cmp	r3, #1
 800c1f6:	b083      	sub	sp, #12
 800c1f8:	d036      	beq.n	800c268 <USB_EPStartXfer+0x7c>
 800c1fa:	b1f4      	cbz	r4, 800c23a <USB_EPStartXfer+0x4e>
 800c1fc:	78cb      	ldrb	r3, [r1, #3]
 800c1fe:	2b02      	cmp	r3, #2
 800c200:	f000 80a8 	beq.w	800c354 <USB_EPStartXfer+0x168>
 800c204:	2b01      	cmp	r3, #1
 800c206:	f040 80a1 	bne.w	800c34c <USB_EPStartXfer+0x160>
 800c20a:	2300      	movs	r3, #0
 800c20c:	780a      	ldrb	r2, [r1, #0]
 800c20e:	618b      	str	r3, [r1, #24]
 800c210:	b212      	sxth	r2, r2
 800c212:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c216:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c21a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c21e:	041b      	lsls	r3, r3, #16
 800c220:	0c1b      	lsrs	r3, r3, #16
 800c222:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 800c226:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c22a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c22e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c232:	2000      	movs	r0, #0
 800c234:	b003      	add	sp, #12
 800c236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c23a:	698a      	ldr	r2, [r1, #24]
 800c23c:	780c      	ldrb	r4, [r1, #0]
 800c23e:	2a00      	cmp	r2, #0
 800c240:	d16e      	bne.n	800c320 <USB_EPStartXfer+0x134>
 800c242:	78cb      	ldrb	r3, [r1, #3]
 800c244:	2b00      	cmp	r3, #0
 800c246:	f000 80a6 	beq.w	800c396 <USB_EPStartXfer+0x1aa>
 800c24a:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c24e:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800c252:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c256:	041b      	lsls	r3, r3, #16
 800c258:	0c1b      	lsrs	r3, r3, #16
 800c25a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c25e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c262:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c266:	e7d0      	b.n	800c20a <USB_EPStartXfer+0x1e>
 800c268:	690d      	ldr	r5, [r1, #16]
 800c26a:	698a      	ldr	r2, [r1, #24]
 800c26c:	694b      	ldr	r3, [r1, #20]
 800c26e:	42aa      	cmp	r2, r5
 800c270:	bf28      	it	cs
 800c272:	462a      	movcs	r2, r5
 800c274:	f500 6c80 	add.w	ip, r0, #1024	@ 0x400
 800c278:	bb54      	cbnz	r4, 800c2d0 <USB_EPStartXfer+0xe4>
 800c27a:	b295      	uxth	r5, r2
 800c27c:	88ce      	ldrh	r6, [r1, #6]
 800c27e:	3501      	adds	r5, #1
 800c280:	086d      	lsrs	r5, r5, #1
 800c282:	4466      	add	r6, ip
 800c284:	d007      	beq.n	800c296 <USB_EPStartXfer+0xaa>
 800c286:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 800c28a:	1af6      	subs	r6, r6, r3
 800c28c:	881c      	ldrh	r4, [r3, #0]
 800c28e:	539c      	strh	r4, [r3, r6]
 800c290:	3302      	adds	r3, #2
 800c292:	42ab      	cmp	r3, r5
 800c294:	d1fa      	bne.n	800c28c <USB_EPStartXfer+0xa0>
 800c296:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 800c29a:	780c      	ldrb	r4, [r1, #0]
 800c29c:	f200 4502 	addw	r5, r0, #1026	@ 0x402
 800c2a0:	fa15 f383 	uxtah	r3, r5, r3
 800c2a4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c2a8:	b292      	uxth	r2, r2
 800c2aa:	801a      	strh	r2, [r3, #0]
 800c2ac:	780a      	ldrb	r2, [r1, #0]
 800c2ae:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c2b2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c2b6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c2ba:	041b      	lsls	r3, r3, #16
 800c2bc:	0c1b      	lsrs	r3, r3, #16
 800c2be:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
 800c2c2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c2c6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c2ca:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c2ce:	e7b0      	b.n	800c232 <USB_EPStartXfer+0x46>
 800c2d0:	78ce      	ldrb	r6, [r1, #3]
 800c2d2:	6a0c      	ldr	r4, [r1, #32]
 800c2d4:	f891 e000 	ldrb.w	lr, [r1]
 800c2d8:	2e02      	cmp	r6, #2
 800c2da:	d06b      	beq.n	800c3b4 <USB_EPStartXfer+0x1c8>
 800c2dc:	1aa4      	subs	r4, r4, r2
 800c2de:	f830 502e 	ldrh.w	r5, [r0, lr, lsl #2]
 800c2e2:	620c      	str	r4, [r1, #32]
 800c2e4:	b294      	uxth	r4, r2
 800c2e6:	3401      	adds	r4, #1
 800c2e8:	f015 0f40 	tst.w	r5, #64	@ 0x40
 800c2ec:	b292      	uxth	r2, r2
 800c2ee:	f8b0 5050 	ldrh.w	r5, [r0, #80]	@ 0x50
 800c2f2:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800c2f6:	f000 80ae 	beq.w	800c456 <USB_EPStartXfer+0x26a>
 800c2fa:	f200 4606 	addw	r6, r0, #1030	@ 0x406
 800c2fe:	fa16 f585 	uxtah	r5, r6, r5
 800c302:	f825 203e 	strh.w	r2, [r5, lr, lsl #3]
 800c306:	894d      	ldrh	r5, [r1, #10]
 800c308:	4465      	add	r5, ip
 800c30a:	2c00      	cmp	r4, #0
 800c30c:	d0ce      	beq.n	800c2ac <USB_EPStartXfer+0xc0>
 800c30e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800c312:	1aed      	subs	r5, r5, r3
 800c314:	881a      	ldrh	r2, [r3, #0]
 800c316:	535a      	strh	r2, [r3, r5]
 800c318:	3302      	adds	r3, #2
 800c31a:	429c      	cmp	r4, r3
 800c31c:	d1fa      	bne.n	800c314 <USB_EPStartXfer+0x128>
 800c31e:	e7c5      	b.n	800c2ac <USB_EPStartXfer+0xc0>
 800c320:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c324:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800c328:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c32c:	041b      	lsls	r3, r3, #16
 800c32e:	0c1b      	lsrs	r3, r3, #16
 800c330:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c334:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c338:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c33c:	690b      	ldr	r3, [r1, #16]
 800c33e:	429a      	cmp	r2, r3
 800c340:	f67f af63 	bls.w	800c20a <USB_EPStartXfer+0x1e>
 800c344:	1ad3      	subs	r3, r2, r3
 800c346:	618b      	str	r3, [r1, #24]
 800c348:	780a      	ldrb	r2, [r1, #0]
 800c34a:	e761      	b.n	800c210 <USB_EPStartXfer+0x24>
 800c34c:	2001      	movs	r0, #1
 800c34e:	b003      	add	sp, #12
 800c350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c354:	69cb      	ldr	r3, [r1, #28]
 800c356:	780a      	ldrb	r2, [r1, #0]
 800c358:	2b00      	cmp	r3, #0
 800c35a:	f43f af59 	beq.w	800c210 <USB_EPStartXfer+0x24>
 800c35e:	b214      	sxth	r4, r2
 800c360:	f244 0340 	movw	r3, #16448	@ 0x4040
 800c364:	f830 5024 	ldrh.w	r5, [r0, r4, lsl #2]
 800c368:	ea03 0605 	and.w	r6, r3, r5
 800c36c:	43ab      	bics	r3, r5
 800c36e:	d002      	beq.n	800c376 <USB_EPStartXfer+0x18a>
 800c370:	2e00      	cmp	r6, #0
 800c372:	f47f af4d 	bne.w	800c210 <USB_EPStartXfer+0x24>
 800c376:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c37a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c37e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c382:	041b      	lsls	r3, r3, #16
 800c384:	0c1b      	lsrs	r3, r3, #16
 800c386:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c38a:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c38e:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c392:	780a      	ldrb	r2, [r1, #0]
 800c394:	e73c      	b.n	800c210 <USB_EPStartXfer+0x24>
 800c396:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c39a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c39e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c3a2:	041b      	lsls	r3, r3, #16
 800c3a4:	0c1b      	lsrs	r3, r3, #16
 800c3a6:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 800c3aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c3ae:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c3b2:	e72a      	b.n	800c20a <USB_EPStartXfer+0x1e>
 800c3b4:	42a5      	cmp	r5, r4
 800c3b6:	f200 4b02 	addw	fp, r0, #1026	@ 0x402
 800c3ba:	d260      	bcs.n	800c47e <USB_EPStartXfer+0x292>
 800c3bc:	f830 602e 	ldrh.w	r6, [r0, lr, lsl #2]
 800c3c0:	f426 46e0 	bic.w	r6, r6, #28672	@ 0x7000
 800c3c4:	f026 0670 	bic.w	r6, r6, #112	@ 0x70
 800c3c8:	0436      	lsls	r6, r6, #16
 800c3ca:	0c36      	lsrs	r6, r6, #16
 800c3cc:	f446 4601 	orr.w	r6, r6, #33024	@ 0x8100
 800c3d0:	f046 0680 	orr.w	r6, r6, #128	@ 0x80
 800c3d4:	f820 602e 	strh.w	r6, [r0, lr, lsl #2]
 800c3d8:	f830 602e 	ldrh.w	r6, [r0, lr, lsl #2]
 800c3dc:	b297      	uxth	r7, r2
 800c3de:	1aa4      	subs	r4, r4, r2
 800c3e0:	3701      	adds	r7, #1
 800c3e2:	f016 0f40 	tst.w	r6, #64	@ 0x40
 800c3e6:	620c      	str	r4, [r1, #32]
 800c3e8:	f8b0 6050 	ldrh.w	r6, [r0, #80]	@ 0x50
 800c3ec:	ea4f 0757 	mov.w	r7, r7, lsr #1
 800c3f0:	fa1f f882 	uxth.w	r8, r2
 800c3f4:	f200 4906 	addw	r9, r0, #1030	@ 0x406
 800c3f8:	d066      	beq.n	800c4c8 <USB_EPStartXfer+0x2dc>
 800c3fa:	fa19 f686 	uxtah	r6, r9, r6
 800c3fe:	f826 803e 	strh.w	r8, [r6, lr, lsl #3]
 800c402:	894e      	ldrh	r6, [r1, #10]
 800c404:	4466      	add	r6, ip
 800c406:	b167      	cbz	r7, 800c422 <USB_EPStartXfer+0x236>
 800c408:	eba6 0903 	sub.w	r9, r6, r3
 800c40c:	eb03 0a47 	add.w	sl, r3, r7, lsl #1
 800c410:	461e      	mov	r6, r3
 800c412:	9501      	str	r5, [sp, #4]
 800c414:	8835      	ldrh	r5, [r6, #0]
 800c416:	f826 5009 	strh.w	r5, [r6, r9]
 800c41a:	3602      	adds	r6, #2
 800c41c:	4556      	cmp	r6, sl
 800c41e:	d1f9      	bne.n	800c414 <USB_EPStartXfer+0x228>
 800c420:	9d01      	ldr	r5, [sp, #4]
 800c422:	4413      	add	r3, r2
 800c424:	42a5      	cmp	r5, r4
 800c426:	614b      	str	r3, [r1, #20]
 800c428:	d27c      	bcs.n	800c524 <USB_EPStartXfer+0x338>
 800c42a:	1aa2      	subs	r2, r4, r2
 800c42c:	620a      	str	r2, [r1, #32]
 800c42e:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c432:	fa1b f282 	uxtah	r2, fp, r2
 800c436:	f822 803e 	strh.w	r8, [r2, lr, lsl #3]
 800c43a:	890a      	ldrh	r2, [r1, #8]
 800c43c:	4462      	add	r2, ip
 800c43e:	2f00      	cmp	r7, #0
 800c440:	f43f af34 	beq.w	800c2ac <USB_EPStartXfer+0xc0>
 800c444:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 800c448:	1ad4      	subs	r4, r2, r3
 800c44a:	881a      	ldrh	r2, [r3, #0]
 800c44c:	531a      	strh	r2, [r3, r4]
 800c44e:	3302      	adds	r3, #2
 800c450:	42bb      	cmp	r3, r7
 800c452:	d1fa      	bne.n	800c44a <USB_EPStartXfer+0x25e>
 800c454:	e72a      	b.n	800c2ac <USB_EPStartXfer+0xc0>
 800c456:	f200 4602 	addw	r6, r0, #1026	@ 0x402
 800c45a:	fa16 f585 	uxtah	r5, r6, r5
 800c45e:	f825 203e 	strh.w	r2, [r5, lr, lsl #3]
 800c462:	890d      	ldrh	r5, [r1, #8]
 800c464:	4465      	add	r5, ip
 800c466:	2c00      	cmp	r4, #0
 800c468:	f43f af20 	beq.w	800c2ac <USB_EPStartXfer+0xc0>
 800c46c:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800c470:	1aed      	subs	r5, r5, r3
 800c472:	881a      	ldrh	r2, [r3, #0]
 800c474:	535a      	strh	r2, [r3, r5]
 800c476:	3302      	adds	r3, #2
 800c478:	429c      	cmp	r4, r3
 800c47a:	d1fa      	bne.n	800c472 <USB_EPStartXfer+0x286>
 800c47c:	e716      	b.n	800c2ac <USB_EPStartXfer+0xc0>
 800c47e:	f830 202e 	ldrh.w	r2, [r0, lr, lsl #2]
 800c482:	f422 42e2 	bic.w	r2, r2, #28928	@ 0x7100
 800c486:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c48a:	0412      	lsls	r2, r2, #16
 800c48c:	0c12      	lsrs	r2, r2, #16
 800c48e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c492:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c496:	f820 202e 	strh.w	r2, [r0, lr, lsl #2]
 800c49a:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c49e:	fa1b f282 	uxtah	r2, fp, r2
 800c4a2:	b2a5      	uxth	r5, r4
 800c4a4:	f822 503e 	strh.w	r5, [r2, lr, lsl #3]
 800c4a8:	462c      	mov	r4, r5
 800c4aa:	3401      	adds	r4, #1
 800c4ac:	890d      	ldrh	r5, [r1, #8]
 800c4ae:	0862      	lsrs	r2, r4, #1
 800c4b0:	4465      	add	r5, ip
 800c4b2:	f43f aefb 	beq.w	800c2ac <USB_EPStartXfer+0xc0>
 800c4b6:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800c4ba:	1aed      	subs	r5, r5, r3
 800c4bc:	881c      	ldrh	r4, [r3, #0]
 800c4be:	535c      	strh	r4, [r3, r5]
 800c4c0:	3302      	adds	r3, #2
 800c4c2:	429a      	cmp	r2, r3
 800c4c4:	d1fa      	bne.n	800c4bc <USB_EPStartXfer+0x2d0>
 800c4c6:	e6f1      	b.n	800c2ac <USB_EPStartXfer+0xc0>
 800c4c8:	fa1b f686 	uxtah	r6, fp, r6
 800c4cc:	f826 803e 	strh.w	r8, [r6, lr, lsl #3]
 800c4d0:	890e      	ldrh	r6, [r1, #8]
 800c4d2:	4466      	add	r6, ip
 800c4d4:	b167      	cbz	r7, 800c4f0 <USB_EPStartXfer+0x304>
 800c4d6:	eba6 0a03 	sub.w	sl, r6, r3
 800c4da:	eb03 0b47 	add.w	fp, r3, r7, lsl #1
 800c4de:	461e      	mov	r6, r3
 800c4e0:	9501      	str	r5, [sp, #4]
 800c4e2:	8835      	ldrh	r5, [r6, #0]
 800c4e4:	f826 500a 	strh.w	r5, [r6, sl]
 800c4e8:	3602      	adds	r6, #2
 800c4ea:	455e      	cmp	r6, fp
 800c4ec:	d1f9      	bne.n	800c4e2 <USB_EPStartXfer+0x2f6>
 800c4ee:	9d01      	ldr	r5, [sp, #4]
 800c4f0:	4413      	add	r3, r2
 800c4f2:	42a5      	cmp	r5, r4
 800c4f4:	614b      	str	r3, [r1, #20]
 800c4f6:	d21c      	bcs.n	800c532 <USB_EPStartXfer+0x346>
 800c4f8:	1aa4      	subs	r4, r4, r2
 800c4fa:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c4fe:	620c      	str	r4, [r1, #32]
 800c500:	fa19 f282 	uxtah	r2, r9, r2
 800c504:	f822 803e 	strh.w	r8, [r2, lr, lsl #3]
 800c508:	894a      	ldrh	r2, [r1, #10]
 800c50a:	4462      	add	r2, ip
 800c50c:	2f00      	cmp	r7, #0
 800c50e:	f43f aecd 	beq.w	800c2ac <USB_EPStartXfer+0xc0>
 800c512:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 800c516:	1ad4      	subs	r4, r2, r3
 800c518:	881a      	ldrh	r2, [r3, #0]
 800c51a:	531a      	strh	r2, [r3, r4]
 800c51c:	3302      	adds	r3, #2
 800c51e:	42bb      	cmp	r3, r7
 800c520:	d1fa      	bne.n	800c518 <USB_EPStartXfer+0x32c>
 800c522:	e6c3      	b.n	800c2ac <USB_EPStartXfer+0xc0>
 800c524:	b2a7      	uxth	r7, r4
 800c526:	3701      	adds	r7, #1
 800c528:	fa1f f884 	uxth.w	r8, r4
 800c52c:	087f      	lsrs	r7, r7, #1
 800c52e:	2200      	movs	r2, #0
 800c530:	e77c      	b.n	800c42c <USB_EPStartXfer+0x240>
 800c532:	b2a7      	uxth	r7, r4
 800c534:	3701      	adds	r7, #1
 800c536:	fa1f f884 	uxth.w	r8, r4
 800c53a:	087f      	lsrs	r7, r7, #1
 800c53c:	2400      	movs	r4, #0
 800c53e:	e7dc      	b.n	800c4fa <USB_EPStartXfer+0x30e>

0800c540 <USB_EPSetStall>:
 800c540:	784b      	ldrb	r3, [r1, #1]
 800c542:	780a      	ldrb	r2, [r1, #0]
 800c544:	b18b      	cbz	r3, 800c56a <USB_EPSetStall+0x2a>
 800c546:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c54a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c54e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c552:	041b      	lsls	r3, r3, #16
 800c554:	0c1b      	lsrs	r3, r3, #16
 800c556:	f083 0310 	eor.w	r3, r3, #16
 800c55a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c55e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c562:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c566:	2000      	movs	r0, #0
 800c568:	4770      	bx	lr
 800c56a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c56e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c572:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c576:	041b      	lsls	r3, r3, #16
 800c578:	0c1b      	lsrs	r3, r3, #16
 800c57a:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800c57e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c582:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c586:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c58a:	2000      	movs	r0, #0
 800c58c:	4770      	bx	lr
 800c58e:	bf00      	nop

0800c590 <USB_EPClearStall>:
 800c590:	784b      	ldrb	r3, [r1, #1]
 800c592:	780a      	ldrb	r2, [r1, #0]
 800c594:	b333      	cbz	r3, 800c5e4 <USB_EPClearStall+0x54>
 800c596:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c59a:	065b      	lsls	r3, r3, #25
 800c59c:	d50d      	bpl.n	800c5ba <USB_EPClearStall+0x2a>
 800c59e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5a2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c5a6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c5aa:	041b      	lsls	r3, r3, #16
 800c5ac:	0c1b      	lsrs	r3, r3, #16
 800c5ae:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c5b2:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c5b6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c5ba:	78cb      	ldrb	r3, [r1, #3]
 800c5bc:	2b01      	cmp	r3, #1
 800c5be:	d00f      	beq.n	800c5e0 <USB_EPClearStall+0x50>
 800c5c0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5c4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c5c8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c5cc:	041b      	lsls	r3, r3, #16
 800c5ce:	0c1b      	lsrs	r3, r3, #16
 800c5d0:	f083 0320 	eor.w	r3, r3, #32
 800c5d4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c5d8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c5dc:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c5e0:	2000      	movs	r0, #0
 800c5e2:	4770      	bx	lr
 800c5e4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5e8:	045b      	lsls	r3, r3, #17
 800c5ea:	d50d      	bpl.n	800c608 <USB_EPClearStall+0x78>
 800c5ec:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5f0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c5f4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c5f8:	041b      	lsls	r3, r3, #16
 800c5fa:	0c1b      	lsrs	r3, r3, #16
 800c5fc:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800c600:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c604:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c608:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c60c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c610:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c614:	041b      	lsls	r3, r3, #16
 800c616:	0c1b      	lsrs	r3, r3, #16
 800c618:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 800c61c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c620:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c624:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c628:	2000      	movs	r0, #0
 800c62a:	4770      	bx	lr

0800c62c <USB_SetDevAddress>:
 800c62c:	b911      	cbnz	r1, 800c634 <USB_SetDevAddress+0x8>
 800c62e:	2380      	movs	r3, #128	@ 0x80
 800c630:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
 800c634:	2000      	movs	r0, #0
 800c636:	4770      	bx	lr

0800c638 <USB_DevConnect>:
 800c638:	4602      	mov	r2, r0
 800c63a:	2000      	movs	r0, #0
 800c63c:	f8b2 3058 	ldrh.w	r3, [r2, #88]	@ 0x58
 800c640:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800c644:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800c648:	b29b      	uxth	r3, r3
 800c64a:	f8a2 3058 	strh.w	r3, [r2, #88]	@ 0x58
 800c64e:	4770      	bx	lr

0800c650 <USB_ReadInterrupts>:
 800c650:	f8b0 0044 	ldrh.w	r0, [r0, #68]	@ 0x44
 800c654:	b280      	uxth	r0, r0
 800c656:	4770      	bx	lr

0800c658 <USB_WritePMA>:
 800c658:	3301      	adds	r3, #1
 800c65a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c65e:	085b      	lsrs	r3, r3, #1
 800c660:	4410      	add	r0, r2
 800c662:	d008      	beq.n	800c676 <USB_WritePMA+0x1e>
 800c664:	460a      	mov	r2, r1
 800c666:	1a80      	subs	r0, r0, r2
 800c668:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800c66c:	8813      	ldrh	r3, [r2, #0]
 800c66e:	5213      	strh	r3, [r2, r0]
 800c670:	3202      	adds	r2, #2
 800c672:	428a      	cmp	r2, r1
 800c674:	d1fa      	bne.n	800c66c <USB_WritePMA+0x14>
 800c676:	4770      	bx	lr

0800c678 <USB_ReadPMA>:
 800c678:	b570      	push	{r4, r5, r6, lr}
 800c67a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c67e:	085e      	lsrs	r6, r3, #1
 800c680:	eb00 0502 	add.w	r5, r0, r2
 800c684:	d01c      	beq.n	800c6c0 <USB_ReadPMA+0x48>
 800c686:	f06f 0401 	mvn.w	r4, #1
 800c68a:	1a64      	subs	r4, r4, r1
 800c68c:	1c8a      	adds	r2, r1, #2
 800c68e:	442c      	add	r4, r5
 800c690:	46b6      	mov	lr, r6
 800c692:	f834 c002 	ldrh.w	ip, [r4, r2]
 800c696:	3202      	adds	r2, #2
 800c698:	fa1f fc8c 	uxth.w	ip, ip
 800c69c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 800c6a0:	f1be 0e01 	subs.w	lr, lr, #1
 800c6a4:	f802 cc04 	strb.w	ip, [r2, #-4]
 800c6a8:	f802 0c03 	strb.w	r0, [r2, #-3]
 800c6ac:	d1f1      	bne.n	800c692 <USB_ReadPMA+0x1a>
 800c6ae:	eb05 0246 	add.w	r2, r5, r6, lsl #1
 800c6b2:	07db      	lsls	r3, r3, #31
 800c6b4:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 800c6b8:	bf44      	itt	mi
 800c6ba:	8813      	ldrhmi	r3, [r2, #0]
 800c6bc:	700b      	strbmi	r3, [r1, #0]
 800c6be:	bd70      	pop	{r4, r5, r6, pc}
 800c6c0:	462a      	mov	r2, r5
 800c6c2:	07db      	lsls	r3, r3, #31
 800c6c4:	bf44      	itt	mi
 800c6c6:	8813      	ldrhmi	r3, [r2, #0]
 800c6c8:	700b      	strbmi	r3, [r1, #0]
 800c6ca:	bd70      	pop	{r4, r5, r6, pc}

0800c6cc <USBD_CDC_EP0_RxReady>:
 800c6cc:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c6d0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800c6d4:	b510      	push	{r4, lr}
 800c6d6:	f8d0 42c0 	ldr.w	r4, [r0, #704]	@ 0x2c0
 800c6da:	b184      	cbz	r4, 800c6fe <USBD_CDC_EP0_RxReady+0x32>
 800c6dc:	f8d0 32c4 	ldr.w	r3, [r0, #708]	@ 0x2c4
 800c6e0:	b15b      	cbz	r3, 800c6fa <USBD_CDC_EP0_RxReady+0x2e>
 800c6e2:	f894 0200 	ldrb.w	r0, [r4, #512]	@ 0x200
 800c6e6:	28ff      	cmp	r0, #255	@ 0xff
 800c6e8:	d007      	beq.n	800c6fa <USBD_CDC_EP0_RxReady+0x2e>
 800c6ea:	689b      	ldr	r3, [r3, #8]
 800c6ec:	f894 2201 	ldrb.w	r2, [r4, #513]	@ 0x201
 800c6f0:	4621      	mov	r1, r4
 800c6f2:	4798      	blx	r3
 800c6f4:	23ff      	movs	r3, #255	@ 0xff
 800c6f6:	f884 3200 	strb.w	r3, [r4, #512]	@ 0x200
 800c6fa:	2000      	movs	r0, #0
 800c6fc:	bd10      	pop	{r4, pc}
 800c6fe:	2003      	movs	r0, #3
 800c700:	bd10      	pop	{r4, pc}
 800c702:	bf00      	nop

0800c704 <USBD_CDC_GetDeviceQualifierDescriptor>:
 800c704:	230a      	movs	r3, #10
 800c706:	8003      	strh	r3, [r0, #0]
 800c708:	4800      	ldr	r0, [pc, #0]	@ (800c70c <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 800c70a:	4770      	bx	lr
 800c70c:	200000bc 	.word	0x200000bc

0800c710 <USBD_CDC_GetFSCfgDesc>:
 800c710:	b570      	push	{r4, r5, r6, lr}
 800c712:	2182      	movs	r1, #130	@ 0x82
 800c714:	4606      	mov	r6, r0
 800c716:	480f      	ldr	r0, [pc, #60]	@ (800c754 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c718:	f000 fb92 	bl	800ce40 <USBD_GetEpDesc>
 800c71c:	2101      	movs	r1, #1
 800c71e:	4605      	mov	r5, r0
 800c720:	480c      	ldr	r0, [pc, #48]	@ (800c754 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c722:	f000 fb8d 	bl	800ce40 <USBD_GetEpDesc>
 800c726:	2181      	movs	r1, #129	@ 0x81
 800c728:	4604      	mov	r4, r0
 800c72a:	480a      	ldr	r0, [pc, #40]	@ (800c754 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c72c:	f000 fb88 	bl	800ce40 <USBD_GetEpDesc>
 800c730:	b10d      	cbz	r5, 800c736 <USBD_CDC_GetFSCfgDesc+0x26>
 800c732:	2210      	movs	r2, #16
 800c734:	71aa      	strb	r2, [r5, #6]
 800c736:	b11c      	cbz	r4, 800c740 <USBD_CDC_GetFSCfgDesc+0x30>
 800c738:	2200      	movs	r2, #0
 800c73a:	2140      	movs	r1, #64	@ 0x40
 800c73c:	7121      	strb	r1, [r4, #4]
 800c73e:	7162      	strb	r2, [r4, #5]
 800c740:	b118      	cbz	r0, 800c74a <USBD_CDC_GetFSCfgDesc+0x3a>
 800c742:	2200      	movs	r2, #0
 800c744:	2140      	movs	r1, #64	@ 0x40
 800c746:	7101      	strb	r1, [r0, #4]
 800c748:	7142      	strb	r2, [r0, #5]
 800c74a:	2343      	movs	r3, #67	@ 0x43
 800c74c:	4801      	ldr	r0, [pc, #4]	@ (800c754 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c74e:	8033      	strh	r3, [r6, #0]
 800c750:	bd70      	pop	{r4, r5, r6, pc}
 800c752:	bf00      	nop
 800c754:	20000040 	.word	0x20000040

0800c758 <USBD_CDC_GetHSCfgDesc>:
 800c758:	b570      	push	{r4, r5, r6, lr}
 800c75a:	2182      	movs	r1, #130	@ 0x82
 800c75c:	4606      	mov	r6, r0
 800c75e:	480f      	ldr	r0, [pc, #60]	@ (800c79c <USBD_CDC_GetHSCfgDesc+0x44>)
 800c760:	f000 fb6e 	bl	800ce40 <USBD_GetEpDesc>
 800c764:	2101      	movs	r1, #1
 800c766:	4605      	mov	r5, r0
 800c768:	480c      	ldr	r0, [pc, #48]	@ (800c79c <USBD_CDC_GetHSCfgDesc+0x44>)
 800c76a:	f000 fb69 	bl	800ce40 <USBD_GetEpDesc>
 800c76e:	2181      	movs	r1, #129	@ 0x81
 800c770:	4604      	mov	r4, r0
 800c772:	480a      	ldr	r0, [pc, #40]	@ (800c79c <USBD_CDC_GetHSCfgDesc+0x44>)
 800c774:	f000 fb64 	bl	800ce40 <USBD_GetEpDesc>
 800c778:	b10d      	cbz	r5, 800c77e <USBD_CDC_GetHSCfgDesc+0x26>
 800c77a:	2210      	movs	r2, #16
 800c77c:	71aa      	strb	r2, [r5, #6]
 800c77e:	b11c      	cbz	r4, 800c788 <USBD_CDC_GetHSCfgDesc+0x30>
 800c780:	2100      	movs	r1, #0
 800c782:	2202      	movs	r2, #2
 800c784:	7121      	strb	r1, [r4, #4]
 800c786:	7162      	strb	r2, [r4, #5]
 800c788:	b118      	cbz	r0, 800c792 <USBD_CDC_GetHSCfgDesc+0x3a>
 800c78a:	2100      	movs	r1, #0
 800c78c:	2202      	movs	r2, #2
 800c78e:	7101      	strb	r1, [r0, #4]
 800c790:	7142      	strb	r2, [r0, #5]
 800c792:	2343      	movs	r3, #67	@ 0x43
 800c794:	4801      	ldr	r0, [pc, #4]	@ (800c79c <USBD_CDC_GetHSCfgDesc+0x44>)
 800c796:	8033      	strh	r3, [r6, #0]
 800c798:	bd70      	pop	{r4, r5, r6, pc}
 800c79a:	bf00      	nop
 800c79c:	20000040 	.word	0x20000040

0800c7a0 <USBD_CDC_DataOut>:
 800c7a0:	b538      	push	{r3, r4, r5, lr}
 800c7a2:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c7a6:	33b0      	adds	r3, #176	@ 0xb0
 800c7a8:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
 800c7ac:	b195      	cbz	r5, 800c7d4 <USBD_CDC_DataOut+0x34>
 800c7ae:	4604      	mov	r4, r0
 800c7b0:	f002 fde8 	bl	800f384 <USBD_LL_GetRxDataSize>
 800c7b4:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c7b8:	f8c5 020c 	str.w	r0, [r5, #524]	@ 0x20c
 800c7bc:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800c7c0:	f8d5 0204 	ldr.w	r0, [r5, #516]	@ 0x204
 800c7c4:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
 800c7c8:	f505 7103 	add.w	r1, r5, #524	@ 0x20c
 800c7cc:	68db      	ldr	r3, [r3, #12]
 800c7ce:	4798      	blx	r3
 800c7d0:	2000      	movs	r0, #0
 800c7d2:	bd38      	pop	{r3, r4, r5, pc}
 800c7d4:	2003      	movs	r0, #3
 800c7d6:	bd38      	pop	{r3, r4, r5, pc}

0800c7d8 <USBD_CDC_DataIn>:
 800c7d8:	b570      	push	{r4, r5, r6, lr}
 800c7da:	f8d0 42d4 	ldr.w	r4, [r0, #724]	@ 0x2d4
 800c7de:	f8d0 62c8 	ldr.w	r6, [r0, #712]	@ 0x2c8
 800c7e2:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 800c7e6:	f8d4 52c0 	ldr.w	r5, [r4, #704]	@ 0x2c0
 800c7ea:	b335      	cbz	r5, 800c83a <USBD_CDC_DataIn+0x62>
 800c7ec:	f001 0c0f 	and.w	ip, r1, #15
 800c7f0:	eb0c 0e8c 	add.w	lr, ip, ip, lsl #2
 800c7f4:	eb00 0c8e 	add.w	ip, r0, lr, lsl #2
 800c7f8:	460a      	mov	r2, r1
 800c7fa:	f8dc 3018 	ldr.w	r3, [ip, #24]
 800c7fe:	b96b      	cbnz	r3, 800c81c <USBD_CDC_DataIn+0x44>
 800c800:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
 800c804:	691b      	ldr	r3, [r3, #16]
 800c806:	2100      	movs	r1, #0
 800c808:	f8c5 1214 	str.w	r1, [r5, #532]	@ 0x214
 800c80c:	b123      	cbz	r3, 800c818 <USBD_CDC_DataIn+0x40>
 800c80e:	f8d5 0208 	ldr.w	r0, [r5, #520]	@ 0x208
 800c812:	f505 7104 	add.w	r1, r5, #528	@ 0x210
 800c816:	4798      	blx	r3
 800c818:	2000      	movs	r0, #0
 800c81a:	bd70      	pop	{r4, r5, r6, pc}
 800c81c:	eb06 06ce 	add.w	r6, r6, lr, lsl #3
 800c820:	6a36      	ldr	r6, [r6, #32]
 800c822:	fbb3 fef6 	udiv	lr, r3, r6
 800c826:	fb06 331e 	mls	r3, r6, lr, r3
 800c82a:	2b00      	cmp	r3, #0
 800c82c:	d1e8      	bne.n	800c800 <USBD_CDC_DataIn+0x28>
 800c82e:	f8cc 3018 	str.w	r3, [ip, #24]
 800c832:	461a      	mov	r2, r3
 800c834:	f002 fd8e 	bl	800f354 <USBD_LL_Transmit>
 800c838:	e7ee      	b.n	800c818 <USBD_CDC_DataIn+0x40>
 800c83a:	2003      	movs	r0, #3
 800c83c:	bd70      	pop	{r4, r5, r6, pc}
 800c83e:	bf00      	nop

0800c840 <USBD_CDC_Setup>:
 800c840:	b570      	push	{r4, r5, r6, lr}
 800c842:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c846:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c84a:	b082      	sub	sp, #8
 800c84c:	f8d3 62c0 	ldr.w	r6, [r3, #704]	@ 0x2c0
 800c850:	2200      	movs	r2, #0
 800c852:	f88d 2005 	strb.w	r2, [sp, #5]
 800c856:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c85a:	b166      	cbz	r6, 800c876 <USBD_CDC_Setup+0x36>
 800c85c:	f891 c000 	ldrb.w	ip, [r1]
 800c860:	f01c 0260 	ands.w	r2, ip, #96	@ 0x60
 800c864:	4604      	mov	r4, r0
 800c866:	460d      	mov	r5, r1
 800c868:	d01e      	beq.n	800c8a8 <USBD_CDC_Setup+0x68>
 800c86a:	2a20      	cmp	r2, #32
 800c86c:	d006      	beq.n	800c87c <USBD_CDC_Setup+0x3c>
 800c86e:	4629      	mov	r1, r5
 800c870:	4620      	mov	r0, r4
 800c872:	f000 fdb9 	bl	800d3e8 <USBD_CtlError>
 800c876:	2003      	movs	r0, #3
 800c878:	b002      	add	sp, #8
 800c87a:	bd70      	pop	{r4, r5, r6, pc}
 800c87c:	88ca      	ldrh	r2, [r1, #6]
 800c87e:	f891 e001 	ldrb.w	lr, [r1, #1]
 800c882:	b37a      	cbz	r2, 800c8e4 <USBD_CDC_Setup+0xa4>
 800c884:	f01c 0f80 	tst.w	ip, #128	@ 0x80
 800c888:	d04c      	beq.n	800c924 <USBD_CDC_Setup+0xe4>
 800c88a:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c88e:	4631      	mov	r1, r6
 800c890:	689b      	ldr	r3, [r3, #8]
 800c892:	4670      	mov	r0, lr
 800c894:	4798      	blx	r3
 800c896:	88ea      	ldrh	r2, [r5, #6]
 800c898:	2a07      	cmp	r2, #7
 800c89a:	4631      	mov	r1, r6
 800c89c:	bf28      	it	cs
 800c89e:	2207      	movcs	r2, #7
 800c8a0:	4620      	mov	r0, r4
 800c8a2:	f000 fdd9 	bl	800d458 <USBD_CtlSendData>
 800c8a6:	e022      	b.n	800c8ee <USBD_CDC_Setup+0xae>
 800c8a8:	784b      	ldrb	r3, [r1, #1]
 800c8aa:	2b0b      	cmp	r3, #11
 800c8ac:	d8df      	bhi.n	800c86e <USBD_CDC_Setup+0x2e>
 800c8ae:	a201      	add	r2, pc, #4	@ (adr r2, 800c8b4 <USBD_CDC_Setup+0x74>)
 800c8b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8b4:	0800c8fd 	.word	0x0800c8fd
 800c8b8:	0800c8ef 	.word	0x0800c8ef
 800c8bc:	0800c86f 	.word	0x0800c86f
 800c8c0:	0800c86f 	.word	0x0800c86f
 800c8c4:	0800c86f 	.word	0x0800c86f
 800c8c8:	0800c86f 	.word	0x0800c86f
 800c8cc:	0800c86f 	.word	0x0800c86f
 800c8d0:	0800c86f 	.word	0x0800c86f
 800c8d4:	0800c86f 	.word	0x0800c86f
 800c8d8:	0800c86f 	.word	0x0800c86f
 800c8dc:	0800c911 	.word	0x0800c911
 800c8e0:	0800c8f3 	.word	0x0800c8f3
 800c8e4:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c8e8:	4670      	mov	r0, lr
 800c8ea:	689b      	ldr	r3, [r3, #8]
 800c8ec:	4798      	blx	r3
 800c8ee:	2000      	movs	r0, #0
 800c8f0:	e7c2      	b.n	800c878 <USBD_CDC_Setup+0x38>
 800c8f2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c8f6:	2b03      	cmp	r3, #3
 800c8f8:	d0f9      	beq.n	800c8ee <USBD_CDC_Setup+0xae>
 800c8fa:	e7b8      	b.n	800c86e <USBD_CDC_Setup+0x2e>
 800c8fc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c900:	2b03      	cmp	r3, #3
 800c902:	d1b4      	bne.n	800c86e <USBD_CDC_Setup+0x2e>
 800c904:	2202      	movs	r2, #2
 800c906:	f10d 0106 	add.w	r1, sp, #6
 800c90a:	f000 fda5 	bl	800d458 <USBD_CtlSendData>
 800c90e:	e7ee      	b.n	800c8ee <USBD_CDC_Setup+0xae>
 800c910:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c914:	2b03      	cmp	r3, #3
 800c916:	d1aa      	bne.n	800c86e <USBD_CDC_Setup+0x2e>
 800c918:	2201      	movs	r2, #1
 800c91a:	f10d 0105 	add.w	r1, sp, #5
 800c91e:	f000 fd9b 	bl	800d458 <USBD_CtlSendData>
 800c922:	e7e4      	b.n	800c8ee <USBD_CDC_Setup+0xae>
 800c924:	2a40      	cmp	r2, #64	@ 0x40
 800c926:	bf28      	it	cs
 800c928:	2240      	movcs	r2, #64	@ 0x40
 800c92a:	f886 e200 	strb.w	lr, [r6, #512]	@ 0x200
 800c92e:	f886 2201 	strb.w	r2, [r6, #513]	@ 0x201
 800c932:	4631      	mov	r1, r6
 800c934:	f000 fda6 	bl	800d484 <USBD_CtlPrepareRx>
 800c938:	e7d9      	b.n	800c8ee <USBD_CDC_Setup+0xae>
 800c93a:	bf00      	nop

0800c93c <USBD_CDC_DeInit>:
 800c93c:	b538      	push	{r3, r4, r5, lr}
 800c93e:	4604      	mov	r4, r0
 800c940:	2500      	movs	r5, #0
 800c942:	2181      	movs	r1, #129	@ 0x81
 800c944:	f002 fcc2 	bl	800f2cc <USBD_LL_CloseEP>
 800c948:	2101      	movs	r1, #1
 800c94a:	8725      	strh	r5, [r4, #56]	@ 0x38
 800c94c:	4620      	mov	r0, r4
 800c94e:	f002 fcbd 	bl	800f2cc <USBD_LL_CloseEP>
 800c952:	2182      	movs	r1, #130	@ 0x82
 800c954:	f8a4 5178 	strh.w	r5, [r4, #376]	@ 0x178
 800c958:	4620      	mov	r0, r4
 800c95a:	f002 fcb7 	bl	800f2cc <USBD_LL_CloseEP>
 800c95e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c962:	64e5      	str	r5, [r4, #76]	@ 0x4c
 800c964:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800c968:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
 800c96c:	b18a      	cbz	r2, 800c992 <USBD_CDC_DeInit+0x56>
 800c96e:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c972:	685b      	ldr	r3, [r3, #4]
 800c974:	4798      	blx	r3
 800c976:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c97a:	33b0      	adds	r3, #176	@ 0xb0
 800c97c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800c980:	f002 fd32 	bl	800f3e8 <USBD_static_free>
 800c984:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c988:	33b0      	adds	r3, #176	@ 0xb0
 800c98a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c98e:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
 800c992:	2000      	movs	r0, #0
 800c994:	bd38      	pop	{r3, r4, r5, pc}
 800c996:	bf00      	nop

0800c998 <USBD_CDC_Init>:
 800c998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c99a:	4604      	mov	r4, r0
 800c99c:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 800c9a0:	f002 fd1e 	bl	800f3e0 <USBD_static_malloc>
 800c9a4:	4605      	mov	r5, r0
 800c9a6:	2800      	cmp	r0, #0
 800c9a8:	d05a      	beq.n	800ca60 <USBD_CDC_Init+0xc8>
 800c9aa:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 800c9ae:	2100      	movs	r1, #0
 800c9b0:	f003 fd59 	bl	8010466 <memset>
 800c9b4:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c9b8:	33b0      	adds	r3, #176	@ 0xb0
 800c9ba:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c9be:	7c23      	ldrb	r3, [r4, #16]
 800c9c0:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
 800c9c4:	b3b3      	cbz	r3, 800ca34 <USBD_CDC_Init+0x9c>
 800c9c6:	2340      	movs	r3, #64	@ 0x40
 800c9c8:	2202      	movs	r2, #2
 800c9ca:	2181      	movs	r1, #129	@ 0x81
 800c9cc:	4620      	mov	r0, r4
 800c9ce:	f002 fc6f 	bl	800f2b0 <USBD_LL_OpenEP>
 800c9d2:	2101      	movs	r1, #1
 800c9d4:	2340      	movs	r3, #64	@ 0x40
 800c9d6:	8721      	strh	r1, [r4, #56]	@ 0x38
 800c9d8:	2202      	movs	r2, #2
 800c9da:	4620      	mov	r0, r4
 800c9dc:	f002 fc68 	bl	800f2b0 <USBD_LL_OpenEP>
 800c9e0:	2701      	movs	r7, #1
 800c9e2:	2310      	movs	r3, #16
 800c9e4:	2203      	movs	r2, #3
 800c9e6:	f8a4 304e 	strh.w	r3, [r4, #78]	@ 0x4e
 800c9ea:	2182      	movs	r1, #130	@ 0x82
 800c9ec:	2308      	movs	r3, #8
 800c9ee:	f8a4 7178 	strh.w	r7, [r4, #376]	@ 0x178
 800c9f2:	4620      	mov	r0, r4
 800c9f4:	f002 fc5c 	bl	800f2b0 <USBD_LL_OpenEP>
 800c9f8:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c9fc:	f8a4 704c 	strh.w	r7, [r4, #76]	@ 0x4c
 800ca00:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800ca04:	2600      	movs	r6, #0
 800ca06:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800ca0a:	f8c5 6204 	str.w	r6, [r5, #516]	@ 0x204
 800ca0e:	681b      	ldr	r3, [r3, #0]
 800ca10:	4798      	blx	r3
 800ca12:	f8d5 2204 	ldr.w	r2, [r5, #516]	@ 0x204
 800ca16:	f8c5 6214 	str.w	r6, [r5, #532]	@ 0x214
 800ca1a:	f8c5 6218 	str.w	r6, [r5, #536]	@ 0x218
 800ca1e:	b322      	cbz	r2, 800ca6a <USBD_CDC_Init+0xd2>
 800ca20:	7c23      	ldrb	r3, [r4, #16]
 800ca22:	b9bb      	cbnz	r3, 800ca54 <USBD_CDC_Init+0xbc>
 800ca24:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca28:	4639      	mov	r1, r7
 800ca2a:	4620      	mov	r0, r4
 800ca2c:	f002 fc9e 	bl	800f36c <USBD_LL_PrepareReceive>
 800ca30:	2000      	movs	r0, #0
 800ca32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca34:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca38:	2202      	movs	r2, #2
 800ca3a:	2181      	movs	r1, #129	@ 0x81
 800ca3c:	4620      	mov	r0, r4
 800ca3e:	f002 fc37 	bl	800f2b0 <USBD_LL_OpenEP>
 800ca42:	2101      	movs	r1, #1
 800ca44:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca48:	8721      	strh	r1, [r4, #56]	@ 0x38
 800ca4a:	2202      	movs	r2, #2
 800ca4c:	4620      	mov	r0, r4
 800ca4e:	f002 fc2f 	bl	800f2b0 <USBD_LL_OpenEP>
 800ca52:	e7c5      	b.n	800c9e0 <USBD_CDC_Init+0x48>
 800ca54:	2340      	movs	r3, #64	@ 0x40
 800ca56:	4639      	mov	r1, r7
 800ca58:	4620      	mov	r0, r4
 800ca5a:	f002 fc87 	bl	800f36c <USBD_LL_PrepareReceive>
 800ca5e:	e7e7      	b.n	800ca30 <USBD_CDC_Init+0x98>
 800ca60:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ca64:	33b0      	adds	r3, #176	@ 0xb0
 800ca66:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 800ca6a:	2002      	movs	r0, #2
 800ca6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca6e:	bf00      	nop

0800ca70 <USBD_CDC_GetOtherSpeedCfgDesc>:
 800ca70:	b570      	push	{r4, r5, r6, lr}
 800ca72:	2182      	movs	r1, #130	@ 0x82
 800ca74:	4606      	mov	r6, r0
 800ca76:	480f      	ldr	r0, [pc, #60]	@ (800cab4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800ca78:	f000 f9e2 	bl	800ce40 <USBD_GetEpDesc>
 800ca7c:	2101      	movs	r1, #1
 800ca7e:	4605      	mov	r5, r0
 800ca80:	480c      	ldr	r0, [pc, #48]	@ (800cab4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800ca82:	f000 f9dd 	bl	800ce40 <USBD_GetEpDesc>
 800ca86:	2181      	movs	r1, #129	@ 0x81
 800ca88:	4604      	mov	r4, r0
 800ca8a:	480a      	ldr	r0, [pc, #40]	@ (800cab4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800ca8c:	f000 f9d8 	bl	800ce40 <USBD_GetEpDesc>
 800ca90:	b10d      	cbz	r5, 800ca96 <USBD_CDC_GetOtherSpeedCfgDesc+0x26>
 800ca92:	2210      	movs	r2, #16
 800ca94:	71aa      	strb	r2, [r5, #6]
 800ca96:	b11c      	cbz	r4, 800caa0 <USBD_CDC_GetOtherSpeedCfgDesc+0x30>
 800ca98:	2200      	movs	r2, #0
 800ca9a:	2140      	movs	r1, #64	@ 0x40
 800ca9c:	7121      	strb	r1, [r4, #4]
 800ca9e:	7162      	strb	r2, [r4, #5]
 800caa0:	b118      	cbz	r0, 800caaa <USBD_CDC_GetOtherSpeedCfgDesc+0x3a>
 800caa2:	2200      	movs	r2, #0
 800caa4:	2140      	movs	r1, #64	@ 0x40
 800caa6:	7101      	strb	r1, [r0, #4]
 800caa8:	7142      	strb	r2, [r0, #5]
 800caaa:	2343      	movs	r3, #67	@ 0x43
 800caac:	4801      	ldr	r0, [pc, #4]	@ (800cab4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800caae:	8033      	strh	r3, [r6, #0]
 800cab0:	bd70      	pop	{r4, r5, r6, pc}
 800cab2:	bf00      	nop
 800cab4:	20000040 	.word	0x20000040

0800cab8 <USBD_CDC_RegisterInterface>:
 800cab8:	4603      	mov	r3, r0
 800caba:	b139      	cbz	r1, 800cacc <USBD_CDC_RegisterInterface+0x14>
 800cabc:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800cac0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800cac4:	2000      	movs	r0, #0
 800cac6:	f8c3 12c4 	str.w	r1, [r3, #708]	@ 0x2c4
 800caca:	4770      	bx	lr
 800cacc:	2003      	movs	r0, #3
 800cace:	4770      	bx	lr

0800cad0 <USBD_CDC_SetTxBuffer>:
 800cad0:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800cad4:	33b0      	adds	r3, #176	@ 0xb0
 800cad6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800cada:	b12b      	cbz	r3, 800cae8 <USBD_CDC_SetTxBuffer+0x18>
 800cadc:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
 800cae0:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 800cae4:	2000      	movs	r0, #0
 800cae6:	4770      	bx	lr
 800cae8:	2003      	movs	r0, #3
 800caea:	4770      	bx	lr

0800caec <USBD_CDC_SetRxBuffer>:
 800caec:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800caf0:	33b0      	adds	r3, #176	@ 0xb0
 800caf2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800caf6:	b11b      	cbz	r3, 800cb00 <USBD_CDC_SetRxBuffer+0x14>
 800caf8:	f8c3 1204 	str.w	r1, [r3, #516]	@ 0x204
 800cafc:	2000      	movs	r0, #0
 800cafe:	4770      	bx	lr
 800cb00:	2003      	movs	r0, #3
 800cb02:	4770      	bx	lr

0800cb04 <USBD_CDC_TransmitPacket>:
 800cb04:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800cb08:	33b0      	adds	r3, #176	@ 0xb0
 800cb0a:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800cb0e:	b192      	cbz	r2, 800cb36 <USBD_CDC_TransmitPacket+0x32>
 800cb10:	b510      	push	{r4, lr}
 800cb12:	f8d2 4214 	ldr.w	r4, [r2, #532]	@ 0x214
 800cb16:	b10c      	cbz	r4, 800cb1c <USBD_CDC_TransmitPacket+0x18>
 800cb18:	2001      	movs	r0, #1
 800cb1a:	bd10      	pop	{r4, pc}
 800cb1c:	2301      	movs	r3, #1
 800cb1e:	f8c2 3214 	str.w	r3, [r2, #532]	@ 0x214
 800cb22:	f8d2 3210 	ldr.w	r3, [r2, #528]	@ 0x210
 800cb26:	f8d2 2208 	ldr.w	r2, [r2, #520]	@ 0x208
 800cb2a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800cb2c:	2181      	movs	r1, #129	@ 0x81
 800cb2e:	f002 fc11 	bl	800f354 <USBD_LL_Transmit>
 800cb32:	4620      	mov	r0, r4
 800cb34:	bd10      	pop	{r4, pc}
 800cb36:	2003      	movs	r0, #3
 800cb38:	4770      	bx	lr
 800cb3a:	bf00      	nop

0800cb3c <USBD_CDC_ReceivePacket>:
 800cb3c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800cb40:	32b0      	adds	r2, #176	@ 0xb0
 800cb42:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800cb46:	b18a      	cbz	r2, 800cb6c <USBD_CDC_ReceivePacket+0x30>
 800cb48:	b508      	push	{r3, lr}
 800cb4a:	7c03      	ldrb	r3, [r0, #16]
 800cb4c:	f8d2 2204 	ldr.w	r2, [r2, #516]	@ 0x204
 800cb50:	b12b      	cbz	r3, 800cb5e <USBD_CDC_ReceivePacket+0x22>
 800cb52:	2340      	movs	r3, #64	@ 0x40
 800cb54:	2101      	movs	r1, #1
 800cb56:	f002 fc09 	bl	800f36c <USBD_LL_PrepareReceive>
 800cb5a:	2000      	movs	r0, #0
 800cb5c:	bd08      	pop	{r3, pc}
 800cb5e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800cb62:	2101      	movs	r1, #1
 800cb64:	f002 fc02 	bl	800f36c <USBD_LL_PrepareReceive>
 800cb68:	2000      	movs	r0, #0
 800cb6a:	bd08      	pop	{r3, pc}
 800cb6c:	2003      	movs	r0, #3
 800cb6e:	4770      	bx	lr

0800cb70 <USBD_Init>:
 800cb70:	b178      	cbz	r0, 800cb92 <USBD_Init+0x22>
 800cb72:	2300      	movs	r3, #0
 800cb74:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
 800cb78:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
 800cb7c:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0
 800cb80:	b109      	cbz	r1, 800cb86 <USBD_Init+0x16>
 800cb82:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
 800cb86:	2301      	movs	r3, #1
 800cb88:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800cb8c:	7002      	strb	r2, [r0, #0]
 800cb8e:	f002 bb3d 	b.w	800f20c <USBD_LL_Init>
 800cb92:	2003      	movs	r0, #3
 800cb94:	4770      	bx	lr
 800cb96:	bf00      	nop

0800cb98 <USBD_RegisterClass>:
 800cb98:	b510      	push	{r4, lr}
 800cb9a:	b082      	sub	sp, #8
 800cb9c:	2300      	movs	r3, #0
 800cb9e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cba2:	b189      	cbz	r1, 800cbc8 <USBD_RegisterClass+0x30>
 800cba4:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800cba6:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
 800cbaa:	4604      	mov	r4, r0
 800cbac:	b123      	cbz	r3, 800cbb8 <USBD_RegisterClass+0x20>
 800cbae:	f10d 0006 	add.w	r0, sp, #6
 800cbb2:	4798      	blx	r3
 800cbb4:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
 800cbb8:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800cbbc:	2000      	movs	r0, #0
 800cbbe:	3301      	adds	r3, #1
 800cbc0:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
 800cbc4:	b002      	add	sp, #8
 800cbc6:	bd10      	pop	{r4, pc}
 800cbc8:	2003      	movs	r0, #3
 800cbca:	b002      	add	sp, #8
 800cbcc:	bd10      	pop	{r4, pc}
 800cbce:	bf00      	nop

0800cbd0 <USBD_Start>:
 800cbd0:	f002 bb62 	b.w	800f298 <USBD_LL_Start>

0800cbd4 <USBD_SetClassConfig>:
 800cbd4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cbd8:	b10b      	cbz	r3, 800cbde <USBD_SetClassConfig+0xa>
 800cbda:	681b      	ldr	r3, [r3, #0]
 800cbdc:	4718      	bx	r3
 800cbde:	4618      	mov	r0, r3
 800cbe0:	4770      	bx	lr
 800cbe2:	bf00      	nop

0800cbe4 <USBD_ClrClassConfig>:
 800cbe4:	b508      	push	{r3, lr}
 800cbe6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cbea:	685b      	ldr	r3, [r3, #4]
 800cbec:	4798      	blx	r3
 800cbee:	2800      	cmp	r0, #0
 800cbf0:	bf18      	it	ne
 800cbf2:	2003      	movne	r0, #3
 800cbf4:	bd08      	pop	{r3, pc}
 800cbf6:	bf00      	nop

0800cbf8 <USBD_LL_SetupStage>:
 800cbf8:	b538      	push	{r3, r4, r5, lr}
 800cbfa:	4604      	mov	r4, r0
 800cbfc:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 800cc00:	4628      	mov	r0, r5
 800cc02:	f000 fbe5 	bl	800d3d0 <USBD_ParseSetupRequest>
 800cc06:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
 800cc0a:	f8b4 22b0 	ldrh.w	r2, [r4, #688]	@ 0x2b0
 800cc0e:	f8c4 2298 	str.w	r2, [r4, #664]	@ 0x298
 800cc12:	2301      	movs	r3, #1
 800cc14:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
 800cc18:	f001 031f 	and.w	r3, r1, #31
 800cc1c:	2b01      	cmp	r3, #1
 800cc1e:	d00e      	beq.n	800cc3e <USBD_LL_SetupStage+0x46>
 800cc20:	2b02      	cmp	r3, #2
 800cc22:	d006      	beq.n	800cc32 <USBD_LL_SetupStage+0x3a>
 800cc24:	b98b      	cbnz	r3, 800cc4a <USBD_LL_SetupStage+0x52>
 800cc26:	4629      	mov	r1, r5
 800cc28:	4620      	mov	r0, r4
 800cc2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc2e:	f000 b91d 	b.w	800ce6c <USBD_StdDevReq>
 800cc32:	4629      	mov	r1, r5
 800cc34:	4620      	mov	r0, r4
 800cc36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc3a:	f000 bb19 	b.w	800d270 <USBD_StdEPReq>
 800cc3e:	4629      	mov	r1, r5
 800cc40:	4620      	mov	r0, r4
 800cc42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc46:	f000 bad3 	b.w	800d1f0 <USBD_StdItfReq>
 800cc4a:	4620      	mov	r0, r4
 800cc4c:	f001 0180 	and.w	r1, r1, #128	@ 0x80
 800cc50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc54:	f002 bb46 	b.w	800f2e4 <USBD_LL_StallEP>

0800cc58 <USBD_LL_DataOutStage>:
 800cc58:	b510      	push	{r4, lr}
 800cc5a:	4604      	mov	r4, r0
 800cc5c:	b931      	cbnz	r1, 800cc6c <USBD_LL_DataOutStage+0x14>
 800cc5e:	4694      	mov	ip, r2
 800cc60:	f8d0 2294 	ldr.w	r2, [r0, #660]	@ 0x294
 800cc64:	2a03      	cmp	r2, #3
 800cc66:	d010      	beq.n	800cc8a <USBD_LL_DataOutStage+0x32>
 800cc68:	2000      	movs	r0, #0
 800cc6a:	bd10      	pop	{r4, pc}
 800cc6c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cc70:	2b03      	cmp	r3, #3
 800cc72:	d1f9      	bne.n	800cc68 <USBD_LL_DataOutStage+0x10>
 800cc74:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cc78:	699b      	ldr	r3, [r3, #24]
 800cc7a:	2b00      	cmp	r3, #0
 800cc7c:	d0f4      	beq.n	800cc68 <USBD_LL_DataOutStage+0x10>
 800cc7e:	2200      	movs	r2, #0
 800cc80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc84:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
 800cc88:	4718      	bx	r3
 800cc8a:	460b      	mov	r3, r1
 800cc8c:	e9d0 1257 	ldrd	r1, r2, [r0, #348]	@ 0x15c
 800cc90:	4291      	cmp	r1, r2
 800cc92:	d808      	bhi.n	800cca6 <USBD_LL_DataOutStage+0x4e>
 800cc94:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800cc98:	2a03      	cmp	r2, #3
 800cc9a:	d00e      	beq.n	800ccba <USBD_LL_DataOutStage+0x62>
 800cc9c:	4620      	mov	r0, r4
 800cc9e:	f000 fc07 	bl	800d4b0 <USBD_CtlSendStatus>
 800cca2:	2000      	movs	r0, #0
 800cca4:	bd10      	pop	{r4, pc}
 800cca6:	1a89      	subs	r1, r1, r2
 800cca8:	428a      	cmp	r2, r1
 800ccaa:	bf28      	it	cs
 800ccac:	460a      	movcs	r2, r1
 800ccae:	f8c0 115c 	str.w	r1, [r0, #348]	@ 0x15c
 800ccb2:	4661      	mov	r1, ip
 800ccb4:	f000 fbf4 	bl	800d4a0 <USBD_CtlContinueRx>
 800ccb8:	e7d6      	b.n	800cc68 <USBD_LL_DataOutStage+0x10>
 800ccba:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800ccbe:	6912      	ldr	r2, [r2, #16]
 800ccc0:	2a00      	cmp	r2, #0
 800ccc2:	d0eb      	beq.n	800cc9c <USBD_LL_DataOutStage+0x44>
 800ccc4:	f8c0 32d4 	str.w	r3, [r0, #724]	@ 0x2d4
 800ccc8:	4790      	blx	r2
 800ccca:	e7e7      	b.n	800cc9c <USBD_LL_DataOutStage+0x44>

0800cccc <USBD_LL_DataInStage>:
 800cccc:	b570      	push	{r4, r5, r6, lr}
 800ccce:	4604      	mov	r4, r0
 800ccd0:	b961      	cbnz	r1, 800ccec <USBD_LL_DataInStage+0x20>
 800ccd2:	4613      	mov	r3, r2
 800ccd4:	f8d0 2294 	ldr.w	r2, [r0, #660]	@ 0x294
 800ccd8:	2a02      	cmp	r2, #2
 800ccda:	d016      	beq.n	800cd0a <USBD_LL_DataInStage+0x3e>
 800ccdc:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800cce0:	b113      	cbz	r3, 800cce8 <USBD_LL_DataInStage+0x1c>
 800cce2:	2300      	movs	r3, #0
 800cce4:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
 800cce8:	2000      	movs	r0, #0
 800ccea:	bd70      	pop	{r4, r5, r6, pc}
 800ccec:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ccf0:	2b03      	cmp	r3, #3
 800ccf2:	d1f9      	bne.n	800cce8 <USBD_LL_DataInStage+0x1c>
 800ccf4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ccf8:	695b      	ldr	r3, [r3, #20]
 800ccfa:	2b00      	cmp	r3, #0
 800ccfc:	d0f4      	beq.n	800cce8 <USBD_LL_DataInStage+0x1c>
 800ccfe:	2200      	movs	r2, #0
 800cd00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd04:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
 800cd08:	4718      	bx	r3
 800cd0a:	e9d0 2607 	ldrd	r2, r6, [r0, #28]
 800cd0e:	42b2      	cmp	r2, r6
 800cd10:	460d      	mov	r5, r1
 800cd12:	d810      	bhi.n	800cd36 <USBD_LL_DataInStage+0x6a>
 800cd14:	d01b      	beq.n	800cd4e <USBD_LL_DataInStage+0x82>
 800cd16:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800cd1a:	2b03      	cmp	r3, #3
 800cd1c:	d024      	beq.n	800cd68 <USBD_LL_DataInStage+0x9c>
 800cd1e:	2180      	movs	r1, #128	@ 0x80
 800cd20:	4620      	mov	r0, r4
 800cd22:	f002 fadf 	bl	800f2e4 <USBD_LL_StallEP>
 800cd26:	4620      	mov	r0, r4
 800cd28:	f000 fbce 	bl	800d4c8 <USBD_CtlReceiveStatus>
 800cd2c:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800cd30:	2b00      	cmp	r3, #0
 800cd32:	d0d9      	beq.n	800cce8 <USBD_LL_DataInStage+0x1c>
 800cd34:	e7d5      	b.n	800cce2 <USBD_LL_DataInStage+0x16>
 800cd36:	1b92      	subs	r2, r2, r6
 800cd38:	61c2      	str	r2, [r0, #28]
 800cd3a:	4619      	mov	r1, r3
 800cd3c:	f000 fb9a 	bl	800d474 <USBD_CtlContinueSendData>
 800cd40:	462b      	mov	r3, r5
 800cd42:	462a      	mov	r2, r5
 800cd44:	4629      	mov	r1, r5
 800cd46:	4620      	mov	r0, r4
 800cd48:	f002 fb10 	bl	800f36c <USBD_LL_PrepareReceive>
 800cd4c:	e7c6      	b.n	800ccdc <USBD_LL_DataInStage+0x10>
 800cd4e:	6983      	ldr	r3, [r0, #24]
 800cd50:	429a      	cmp	r2, r3
 800cd52:	d8e0      	bhi.n	800cd16 <USBD_LL_DataInStage+0x4a>
 800cd54:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 800cd58:	4293      	cmp	r3, r2
 800cd5a:	d2dc      	bcs.n	800cd16 <USBD_LL_DataInStage+0x4a>
 800cd5c:	460a      	mov	r2, r1
 800cd5e:	f000 fb89 	bl	800d474 <USBD_CtlContinueSendData>
 800cd62:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800cd66:	e7eb      	b.n	800cd40 <USBD_LL_DataInStage+0x74>
 800cd68:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800cd6c:	68db      	ldr	r3, [r3, #12]
 800cd6e:	2b00      	cmp	r3, #0
 800cd70:	d0d5      	beq.n	800cd1e <USBD_LL_DataInStage+0x52>
 800cd72:	2200      	movs	r2, #0
 800cd74:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
 800cd78:	4620      	mov	r0, r4
 800cd7a:	4798      	blx	r3
 800cd7c:	e7cf      	b.n	800cd1e <USBD_LL_DataInStage+0x52>
 800cd7e:	bf00      	nop

0800cd80 <USBD_LL_Reset>:
 800cd80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd82:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cd86:	2100      	movs	r1, #0
 800cd88:	2201      	movs	r2, #1
 800cd8a:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
 800cd8e:	4604      	mov	r4, r0
 800cd90:	6041      	str	r1, [r0, #4]
 800cd92:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800cd96:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
 800cd9a:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
 800cd9e:	b11b      	cbz	r3, 800cda8 <USBD_LL_Reset+0x28>
 800cda0:	685b      	ldr	r3, [r3, #4]
 800cda2:	b10b      	cbz	r3, 800cda8 <USBD_LL_Reset+0x28>
 800cda4:	4798      	blx	r3
 800cda6:	b9b0      	cbnz	r0, 800cdd6 <USBD_LL_Reset+0x56>
 800cda8:	2700      	movs	r7, #0
 800cdaa:	2200      	movs	r2, #0
 800cdac:	2540      	movs	r5, #64	@ 0x40
 800cdae:	4611      	mov	r1, r2
 800cdb0:	2601      	movs	r6, #1
 800cdb2:	2340      	movs	r3, #64	@ 0x40
 800cdb4:	4620      	mov	r0, r4
 800cdb6:	f002 fa7b 	bl	800f2b0 <USBD_LL_OpenEP>
 800cdba:	f8a4 6164 	strh.w	r6, [r4, #356]	@ 0x164
 800cdbe:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
 800cdc2:	462b      	mov	r3, r5
 800cdc4:	2200      	movs	r2, #0
 800cdc6:	2180      	movs	r1, #128	@ 0x80
 800cdc8:	4620      	mov	r0, r4
 800cdca:	f002 fa71 	bl	800f2b0 <USBD_LL_OpenEP>
 800cdce:	84a6      	strh	r6, [r4, #36]	@ 0x24
 800cdd0:	6225      	str	r5, [r4, #32]
 800cdd2:	4638      	mov	r0, r7
 800cdd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdd6:	2703      	movs	r7, #3
 800cdd8:	e7e7      	b.n	800cdaa <USBD_LL_Reset+0x2a>
 800cdda:	bf00      	nop

0800cddc <USBD_LL_SetSpeed>:
 800cddc:	7401      	strb	r1, [r0, #16]
 800cdde:	2000      	movs	r0, #0
 800cde0:	4770      	bx	lr
 800cde2:	bf00      	nop

0800cde4 <USBD_LL_Suspend>:
 800cde4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cde8:	2b04      	cmp	r3, #4
 800cdea:	d004      	beq.n	800cdf6 <USBD_LL_Suspend+0x12>
 800cdec:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cdf0:	b2db      	uxtb	r3, r3
 800cdf2:	f880 329d 	strb.w	r3, [r0, #669]	@ 0x29d
 800cdf6:	2304      	movs	r3, #4
 800cdf8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800cdfc:	2000      	movs	r0, #0
 800cdfe:	4770      	bx	lr

0800ce00 <USBD_LL_Resume>:
 800ce00:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ce04:	2b04      	cmp	r3, #4
 800ce06:	d104      	bne.n	800ce12 <USBD_LL_Resume+0x12>
 800ce08:	f890 329d 	ldrb.w	r3, [r0, #669]	@ 0x29d
 800ce0c:	b2db      	uxtb	r3, r3
 800ce0e:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800ce12:	2000      	movs	r0, #0
 800ce14:	4770      	bx	lr
 800ce16:	bf00      	nop

0800ce18 <USBD_LL_SOF>:
 800ce18:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ce1c:	2a03      	cmp	r2, #3
 800ce1e:	d001      	beq.n	800ce24 <USBD_LL_SOF+0xc>
 800ce20:	2000      	movs	r0, #0
 800ce22:	4770      	bx	lr
 800ce24:	b508      	push	{r3, lr}
 800ce26:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ce2a:	b113      	cbz	r3, 800ce32 <USBD_LL_SOF+0x1a>
 800ce2c:	69db      	ldr	r3, [r3, #28]
 800ce2e:	b103      	cbz	r3, 800ce32 <USBD_LL_SOF+0x1a>
 800ce30:	4798      	blx	r3
 800ce32:	2000      	movs	r0, #0
 800ce34:	bd08      	pop	{r3, pc}
 800ce36:	bf00      	nop

0800ce38 <USBD_CoreFindIF>:
 800ce38:	2000      	movs	r0, #0
 800ce3a:	4770      	bx	lr

0800ce3c <USBD_CoreFindEP>:
 800ce3c:	2000      	movs	r0, #0
 800ce3e:	4770      	bx	lr

0800ce40 <USBD_GetEpDesc>:
 800ce40:	7802      	ldrb	r2, [r0, #0]
 800ce42:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 800ce46:	4594      	cmp	ip, r2
 800ce48:	4613      	mov	r3, r2
 800ce4a:	d803      	bhi.n	800ce54 <USBD_GetEpDesc+0x14>
 800ce4c:	e00c      	b.n	800ce68 <USBD_GetEpDesc+0x28>
 800ce4e:	459c      	cmp	ip, r3
 800ce50:	d90a      	bls.n	800ce68 <USBD_GetEpDesc+0x28>
 800ce52:	7802      	ldrb	r2, [r0, #0]
 800ce54:	4410      	add	r0, r2
 800ce56:	4413      	add	r3, r2
 800ce58:	7842      	ldrb	r2, [r0, #1]
 800ce5a:	2a05      	cmp	r2, #5
 800ce5c:	b29b      	uxth	r3, r3
 800ce5e:	d1f6      	bne.n	800ce4e <USBD_GetEpDesc+0xe>
 800ce60:	7882      	ldrb	r2, [r0, #2]
 800ce62:	428a      	cmp	r2, r1
 800ce64:	d1f3      	bne.n	800ce4e <USBD_GetEpDesc+0xe>
 800ce66:	4770      	bx	lr
 800ce68:	2000      	movs	r0, #0
 800ce6a:	4770      	bx	lr

0800ce6c <USBD_StdDevReq>:
 800ce6c:	b570      	push	{r4, r5, r6, lr}
 800ce6e:	780b      	ldrb	r3, [r1, #0]
 800ce70:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ce74:	2b20      	cmp	r3, #32
 800ce76:	b082      	sub	sp, #8
 800ce78:	460d      	mov	r5, r1
 800ce7a:	4604      	mov	r4, r0
 800ce7c:	d028      	beq.n	800ced0 <USBD_StdDevReq+0x64>
 800ce7e:	2b40      	cmp	r3, #64	@ 0x40
 800ce80:	d026      	beq.n	800ced0 <USBD_StdDevReq+0x64>
 800ce82:	b15b      	cbz	r3, 800ce9c <USBD_StdDevReq+0x30>
 800ce84:	2180      	movs	r1, #128	@ 0x80
 800ce86:	4620      	mov	r0, r4
 800ce88:	f002 fa2c 	bl	800f2e4 <USBD_LL_StallEP>
 800ce8c:	2100      	movs	r1, #0
 800ce8e:	4620      	mov	r0, r4
 800ce90:	f002 fa28 	bl	800f2e4 <USBD_LL_StallEP>
 800ce94:	2500      	movs	r5, #0
 800ce96:	4628      	mov	r0, r5
 800ce98:	b002      	add	sp, #8
 800ce9a:	bd70      	pop	{r4, r5, r6, pc}
 800ce9c:	784b      	ldrb	r3, [r1, #1]
 800ce9e:	2b09      	cmp	r3, #9
 800cea0:	d8f0      	bhi.n	800ce84 <USBD_StdDevReq+0x18>
 800cea2:	a201      	add	r2, pc, #4	@ (adr r2, 800cea8 <USBD_StdDevReq+0x3c>)
 800cea4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cea8:	0800cf21 	.word	0x0800cf21
 800ceac:	0800cf49 	.word	0x0800cf49
 800ceb0:	0800ce85 	.word	0x0800ce85
 800ceb4:	0800cf67 	.word	0x0800cf67
 800ceb8:	0800ce85 	.word	0x0800ce85
 800cebc:	0800cf7f 	.word	0x0800cf7f
 800cec0:	0800cfc1 	.word	0x0800cfc1
 800cec4:	0800ce85 	.word	0x0800ce85
 800cec8:	0800d015 	.word	0x0800d015
 800cecc:	0800cee9 	.word	0x0800cee9
 800ced0:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ced4:	33ae      	adds	r3, #174	@ 0xae
 800ced6:	4629      	mov	r1, r5
 800ced8:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800cedc:	689b      	ldr	r3, [r3, #8]
 800cede:	4620      	mov	r0, r4
 800cee0:	b002      	add	sp, #8
 800cee2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cee6:	4718      	bx	r3
 800cee8:	7889      	ldrb	r1, [r1, #2]
 800ceea:	4db7      	ldr	r5, [pc, #732]	@ (800d1c8 <USBD_StdDevReq+0x35c>)
 800ceec:	2901      	cmp	r1, #1
 800ceee:	7029      	strb	r1, [r5, #0]
 800cef0:	f200 8157 	bhi.w	800d1a2 <USBD_StdDevReq+0x336>
 800cef4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cef8:	2b02      	cmp	r3, #2
 800cefa:	b2de      	uxtb	r6, r3
 800cefc:	f000 8136 	beq.w	800d16c <USBD_StdDevReq+0x300>
 800cf00:	2e03      	cmp	r6, #3
 800cf02:	f000 8111 	beq.w	800d128 <USBD_StdDevReq+0x2bc>
 800cf06:	2180      	movs	r1, #128	@ 0x80
 800cf08:	f002 f9ec 	bl	800f2e4 <USBD_LL_StallEP>
 800cf0c:	2100      	movs	r1, #0
 800cf0e:	4620      	mov	r0, r4
 800cf10:	f002 f9e8 	bl	800f2e4 <USBD_LL_StallEP>
 800cf14:	7829      	ldrb	r1, [r5, #0]
 800cf16:	4620      	mov	r0, r4
 800cf18:	f7ff fe64 	bl	800cbe4 <USBD_ClrClassConfig>
 800cf1c:	2503      	movs	r5, #3
 800cf1e:	e7ba      	b.n	800ce96 <USBD_StdDevReq+0x2a>
 800cf20:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cf24:	3b01      	subs	r3, #1
 800cf26:	2b02      	cmp	r3, #2
 800cf28:	d8ac      	bhi.n	800ce84 <USBD_StdDevReq+0x18>
 800cf2a:	88ca      	ldrh	r2, [r1, #6]
 800cf2c:	2a02      	cmp	r2, #2
 800cf2e:	d1a9      	bne.n	800ce84 <USBD_StdDevReq+0x18>
 800cf30:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800cf34:	4601      	mov	r1, r0
 800cf36:	2b00      	cmp	r3, #0
 800cf38:	bf0c      	ite	eq
 800cf3a:	2301      	moveq	r3, #1
 800cf3c:	2303      	movne	r3, #3
 800cf3e:	f841 3f0c 	str.w	r3, [r1, #12]!
 800cf42:	f000 fa89 	bl	800d458 <USBD_CtlSendData>
 800cf46:	e7a5      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800cf48:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cf4c:	3b01      	subs	r3, #1
 800cf4e:	2b02      	cmp	r3, #2
 800cf50:	d898      	bhi.n	800ce84 <USBD_StdDevReq+0x18>
 800cf52:	884b      	ldrh	r3, [r1, #2]
 800cf54:	2b01      	cmp	r3, #1
 800cf56:	d19d      	bne.n	800ce94 <USBD_StdDevReq+0x28>
 800cf58:	2300      	movs	r3, #0
 800cf5a:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800cf5e:	4620      	mov	r0, r4
 800cf60:	f000 faa6 	bl	800d4b0 <USBD_CtlSendStatus>
 800cf64:	e796      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800cf66:	884b      	ldrh	r3, [r1, #2]
 800cf68:	2b01      	cmp	r3, #1
 800cf6a:	d0f6      	beq.n	800cf5a <USBD_StdDevReq+0xee>
 800cf6c:	2b02      	cmp	r3, #2
 800cf6e:	d189      	bne.n	800ce84 <USBD_StdDevReq+0x18>
 800cf70:	888b      	ldrh	r3, [r1, #4]
 800cf72:	0a1b      	lsrs	r3, r3, #8
 800cf74:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
 800cf78:	f000 fa9a 	bl	800d4b0 <USBD_CtlSendStatus>
 800cf7c:	e78a      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800cf7e:	888b      	ldrh	r3, [r1, #4]
 800cf80:	2b00      	cmp	r3, #0
 800cf82:	f47f af7f 	bne.w	800ce84 <USBD_StdDevReq+0x18>
 800cf86:	88cb      	ldrh	r3, [r1, #6]
 800cf88:	2b00      	cmp	r3, #0
 800cf8a:	f47f af7b 	bne.w	800ce84 <USBD_StdDevReq+0x18>
 800cf8e:	884b      	ldrh	r3, [r1, #2]
 800cf90:	2b7f      	cmp	r3, #127	@ 0x7f
 800cf92:	f63f af77 	bhi.w	800ce84 <USBD_StdDevReq+0x18>
 800cf96:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800cf9a:	2a03      	cmp	r2, #3
 800cf9c:	f43f af72 	beq.w	800ce84 <USBD_StdDevReq+0x18>
 800cfa0:	b2dd      	uxtb	r5, r3
 800cfa2:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
 800cfa6:	4629      	mov	r1, r5
 800cfa8:	f002 f9c8 	bl	800f33c <USBD_LL_SetUSBAddress>
 800cfac:	4620      	mov	r0, r4
 800cfae:	f000 fa7f 	bl	800d4b0 <USBD_CtlSendStatus>
 800cfb2:	2d00      	cmp	r5, #0
 800cfb4:	f000 8118 	beq.w	800d1e8 <USBD_StdDevReq+0x37c>
 800cfb8:	2302      	movs	r3, #2
 800cfba:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800cfbe:	e769      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800cfc0:	884a      	ldrh	r2, [r1, #2]
 800cfc2:	0a13      	lsrs	r3, r2, #8
 800cfc4:	2100      	movs	r1, #0
 800cfc6:	3b01      	subs	r3, #1
 800cfc8:	f8ad 1006 	strh.w	r1, [sp, #6]
 800cfcc:	2b0e      	cmp	r3, #14
 800cfce:	f63f af59 	bhi.w	800ce84 <USBD_StdDevReq+0x18>
 800cfd2:	a101      	add	r1, pc, #4	@ (adr r1, 800cfd8 <USBD_StdDevReq+0x16c>)
 800cfd4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800cfd8:	0800d0b7 	.word	0x0800d0b7
 800cfdc:	0800d09d 	.word	0x0800d09d
 800cfe0:	0800d08b 	.word	0x0800d08b
 800cfe4:	0800ce85 	.word	0x0800ce85
 800cfe8:	0800ce85 	.word	0x0800ce85
 800cfec:	0800d075 	.word	0x0800d075
 800cff0:	0800d0c7 	.word	0x0800d0c7
 800cff4:	0800ce85 	.word	0x0800ce85
 800cff8:	0800ce85 	.word	0x0800ce85
 800cffc:	0800ce85 	.word	0x0800ce85
 800d000:	0800ce85 	.word	0x0800ce85
 800d004:	0800ce85 	.word	0x0800ce85
 800d008:	0800ce85 	.word	0x0800ce85
 800d00c:	0800ce85 	.word	0x0800ce85
 800d010:	0800d03d 	.word	0x0800d03d
 800d014:	88ca      	ldrh	r2, [r1, #6]
 800d016:	2a01      	cmp	r2, #1
 800d018:	f47f af34 	bne.w	800ce84 <USBD_StdDevReq+0x18>
 800d01c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d020:	2b02      	cmp	r3, #2
 800d022:	b2d9      	uxtb	r1, r3
 800d024:	f200 80b6 	bhi.w	800d194 <USBD_StdDevReq+0x328>
 800d028:	2900      	cmp	r1, #0
 800d02a:	f43f af2b 	beq.w	800ce84 <USBD_StdDevReq+0x18>
 800d02e:	4601      	mov	r1, r0
 800d030:	2300      	movs	r3, #0
 800d032:	f841 3f08 	str.w	r3, [r1, #8]!
 800d036:	f000 fa0f 	bl	800d458 <USBD_CtlSendData>
 800d03a:	e72b      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800d03c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d040:	69db      	ldr	r3, [r3, #28]
 800d042:	2b00      	cmp	r3, #0
 800d044:	f43f af1e 	beq.w	800ce84 <USBD_StdDevReq+0x18>
 800d048:	7c20      	ldrb	r0, [r4, #16]
 800d04a:	f10d 0106 	add.w	r1, sp, #6
 800d04e:	4798      	blx	r3
 800d050:	88eb      	ldrh	r3, [r5, #6]
 800d052:	2b00      	cmp	r3, #0
 800d054:	d083      	beq.n	800cf5e <USBD_StdDevReq+0xf2>
 800d056:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d05a:	2a00      	cmp	r2, #0
 800d05c:	f43f af12 	beq.w	800ce84 <USBD_StdDevReq+0x18>
 800d060:	429a      	cmp	r2, r3
 800d062:	bf28      	it	cs
 800d064:	461a      	movcs	r2, r3
 800d066:	4601      	mov	r1, r0
 800d068:	4620      	mov	r0, r4
 800d06a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d06e:	f000 f9f3 	bl	800d458 <USBD_CtlSendData>
 800d072:	e70f      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800d074:	7c03      	ldrb	r3, [r0, #16]
 800d076:	2b00      	cmp	r3, #0
 800d078:	f47f af04 	bne.w	800ce84 <USBD_StdDevReq+0x18>
 800d07c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800d080:	f10d 0006 	add.w	r0, sp, #6
 800d084:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d086:	4798      	blx	r3
 800d088:	e7e2      	b.n	800d050 <USBD_StdDevReq+0x1e4>
 800d08a:	b2d2      	uxtb	r2, r2
 800d08c:	2a05      	cmp	r2, #5
 800d08e:	f63f aef9 	bhi.w	800ce84 <USBD_StdDevReq+0x18>
 800d092:	e8df f002 	tbb	[pc, r2]
 800d096:	3d43      	.short	0x3d43
 800d098:	252b3137 	.word	0x252b3137
 800d09c:	7c02      	ldrb	r2, [r0, #16]
 800d09e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800d0a2:	2a00      	cmp	r2, #0
 800d0a4:	f040 8092 	bne.w	800d1cc <USBD_StdDevReq+0x360>
 800d0a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d0aa:	f10d 0006 	add.w	r0, sp, #6
 800d0ae:	4798      	blx	r3
 800d0b0:	2302      	movs	r3, #2
 800d0b2:	7043      	strb	r3, [r0, #1]
 800d0b4:	e7cc      	b.n	800d050 <USBD_StdDevReq+0x1e4>
 800d0b6:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d0ba:	7c00      	ldrb	r0, [r0, #16]
 800d0bc:	681b      	ldr	r3, [r3, #0]
 800d0be:	f10d 0106 	add.w	r1, sp, #6
 800d0c2:	4798      	blx	r3
 800d0c4:	e7c4      	b.n	800d050 <USBD_StdDevReq+0x1e4>
 800d0c6:	7c03      	ldrb	r3, [r0, #16]
 800d0c8:	2b00      	cmp	r3, #0
 800d0ca:	f47f aedb 	bne.w	800ce84 <USBD_StdDevReq+0x18>
 800d0ce:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800d0d2:	f10d 0006 	add.w	r0, sp, #6
 800d0d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d0d8:	4798      	blx	r3
 800d0da:	2307      	movs	r3, #7
 800d0dc:	7043      	strb	r3, [r0, #1]
 800d0de:	e7b7      	b.n	800d050 <USBD_StdDevReq+0x1e4>
 800d0e0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d0e4:	699b      	ldr	r3, [r3, #24]
 800d0e6:	2b00      	cmp	r3, #0
 800d0e8:	d1ae      	bne.n	800d048 <USBD_StdDevReq+0x1dc>
 800d0ea:	e6cb      	b.n	800ce84 <USBD_StdDevReq+0x18>
 800d0ec:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d0f0:	695b      	ldr	r3, [r3, #20]
 800d0f2:	2b00      	cmp	r3, #0
 800d0f4:	d1a8      	bne.n	800d048 <USBD_StdDevReq+0x1dc>
 800d0f6:	e6c5      	b.n	800ce84 <USBD_StdDevReq+0x18>
 800d0f8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d0fc:	691b      	ldr	r3, [r3, #16]
 800d0fe:	2b00      	cmp	r3, #0
 800d100:	d1a2      	bne.n	800d048 <USBD_StdDevReq+0x1dc>
 800d102:	e6bf      	b.n	800ce84 <USBD_StdDevReq+0x18>
 800d104:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d108:	68db      	ldr	r3, [r3, #12]
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d19c      	bne.n	800d048 <USBD_StdDevReq+0x1dc>
 800d10e:	e6b9      	b.n	800ce84 <USBD_StdDevReq+0x18>
 800d110:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d114:	689b      	ldr	r3, [r3, #8]
 800d116:	2b00      	cmp	r3, #0
 800d118:	d196      	bne.n	800d048 <USBD_StdDevReq+0x1dc>
 800d11a:	e6b3      	b.n	800ce84 <USBD_StdDevReq+0x18>
 800d11c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d120:	685b      	ldr	r3, [r3, #4]
 800d122:	2b00      	cmp	r3, #0
 800d124:	d190      	bne.n	800d048 <USBD_StdDevReq+0x1dc>
 800d126:	e6ad      	b.n	800ce84 <USBD_StdDevReq+0x18>
 800d128:	2900      	cmp	r1, #0
 800d12a:	d042      	beq.n	800d1b2 <USBD_StdDevReq+0x346>
 800d12c:	6841      	ldr	r1, [r0, #4]
 800d12e:	2901      	cmp	r1, #1
 800d130:	f43f af15 	beq.w	800cf5e <USBD_StdDevReq+0xf2>
 800d134:	b2c9      	uxtb	r1, r1
 800d136:	f7ff fd55 	bl	800cbe4 <USBD_ClrClassConfig>
 800d13a:	7829      	ldrb	r1, [r5, #0]
 800d13c:	6061      	str	r1, [r4, #4]
 800d13e:	4620      	mov	r0, r4
 800d140:	f7ff fd48 	bl	800cbd4 <USBD_SetClassConfig>
 800d144:	4605      	mov	r5, r0
 800d146:	2800      	cmp	r0, #0
 800d148:	f43f af09 	beq.w	800cf5e <USBD_StdDevReq+0xf2>
 800d14c:	2180      	movs	r1, #128	@ 0x80
 800d14e:	4620      	mov	r0, r4
 800d150:	f002 f8c8 	bl	800f2e4 <USBD_LL_StallEP>
 800d154:	2100      	movs	r1, #0
 800d156:	4620      	mov	r0, r4
 800d158:	f002 f8c4 	bl	800f2e4 <USBD_LL_StallEP>
 800d15c:	7921      	ldrb	r1, [r4, #4]
 800d15e:	4620      	mov	r0, r4
 800d160:	f7ff fd40 	bl	800cbe4 <USBD_ClrClassConfig>
 800d164:	2302      	movs	r3, #2
 800d166:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800d16a:	e694      	b.n	800ce96 <USBD_StdDevReq+0x2a>
 800d16c:	2900      	cmp	r1, #0
 800d16e:	f43f aef6 	beq.w	800cf5e <USBD_StdDevReq+0xf2>
 800d172:	2101      	movs	r1, #1
 800d174:	6041      	str	r1, [r0, #4]
 800d176:	f7ff fd2d 	bl	800cbd4 <USBD_SetClassConfig>
 800d17a:	4605      	mov	r5, r0
 800d17c:	b368      	cbz	r0, 800d1da <USBD_StdDevReq+0x36e>
 800d17e:	2180      	movs	r1, #128	@ 0x80
 800d180:	4620      	mov	r0, r4
 800d182:	f002 f8af 	bl	800f2e4 <USBD_LL_StallEP>
 800d186:	2100      	movs	r1, #0
 800d188:	4620      	mov	r0, r4
 800d18a:	f002 f8ab 	bl	800f2e4 <USBD_LL_StallEP>
 800d18e:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800d192:	e680      	b.n	800ce96 <USBD_StdDevReq+0x2a>
 800d194:	2903      	cmp	r1, #3
 800d196:	f47f ae75 	bne.w	800ce84 <USBD_StdDevReq+0x18>
 800d19a:	1d01      	adds	r1, r0, #4
 800d19c:	f000 f95c 	bl	800d458 <USBD_CtlSendData>
 800d1a0:	e678      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800d1a2:	2180      	movs	r1, #128	@ 0x80
 800d1a4:	f002 f89e 	bl	800f2e4 <USBD_LL_StallEP>
 800d1a8:	2100      	movs	r1, #0
 800d1aa:	4620      	mov	r0, r4
 800d1ac:	f002 f89a 	bl	800f2e4 <USBD_LL_StallEP>
 800d1b0:	e6b4      	b.n	800cf1c <USBD_StdDevReq+0xb0>
 800d1b2:	2302      	movs	r3, #2
 800d1b4:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800d1b8:	6041      	str	r1, [r0, #4]
 800d1ba:	f7ff fd13 	bl	800cbe4 <USBD_ClrClassConfig>
 800d1be:	4620      	mov	r0, r4
 800d1c0:	f000 f976 	bl	800d4b0 <USBD_CtlSendStatus>
 800d1c4:	e666      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800d1c6:	bf00      	nop
 800d1c8:	20001808 	.word	0x20001808
 800d1cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d1ce:	f10d 0006 	add.w	r0, sp, #6
 800d1d2:	4798      	blx	r3
 800d1d4:	2302      	movs	r3, #2
 800d1d6:	7043      	strb	r3, [r0, #1]
 800d1d8:	e73a      	b.n	800d050 <USBD_StdDevReq+0x1e4>
 800d1da:	4620      	mov	r0, r4
 800d1dc:	f000 f968 	bl	800d4b0 <USBD_CtlSendStatus>
 800d1e0:	2303      	movs	r3, #3
 800d1e2:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800d1e6:	e655      	b.n	800ce94 <USBD_StdDevReq+0x28>
 800d1e8:	2301      	movs	r3, #1
 800d1ea:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800d1ee:	e651      	b.n	800ce94 <USBD_StdDevReq+0x28>

0800d1f0 <USBD_StdItfReq>:
 800d1f0:	b570      	push	{r4, r5, r6, lr}
 800d1f2:	780b      	ldrb	r3, [r1, #0]
 800d1f4:	065a      	lsls	r2, r3, #25
 800d1f6:	460d      	mov	r5, r1
 800d1f8:	4604      	mov	r4, r0
 800d1fa:	d50d      	bpl.n	800d218 <USBD_StdItfReq+0x28>
 800d1fc:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800d200:	2a40      	cmp	r2, #64	@ 0x40
 800d202:	d009      	beq.n	800d218 <USBD_StdItfReq+0x28>
 800d204:	2180      	movs	r1, #128	@ 0x80
 800d206:	f002 f86d 	bl	800f2e4 <USBD_LL_StallEP>
 800d20a:	2100      	movs	r1, #0
 800d20c:	4620      	mov	r0, r4
 800d20e:	f002 f869 	bl	800f2e4 <USBD_LL_StallEP>
 800d212:	2600      	movs	r6, #0
 800d214:	4630      	mov	r0, r6
 800d216:	bd70      	pop	{r4, r5, r6, pc}
 800d218:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800d21c:	3b01      	subs	r3, #1
 800d21e:	2b02      	cmp	r3, #2
 800d220:	d802      	bhi.n	800d228 <USBD_StdItfReq+0x38>
 800d222:	7929      	ldrb	r1, [r5, #4]
 800d224:	2901      	cmp	r1, #1
 800d226:	d908      	bls.n	800d23a <USBD_StdItfReq+0x4a>
 800d228:	2180      	movs	r1, #128	@ 0x80
 800d22a:	4620      	mov	r0, r4
 800d22c:	f002 f85a 	bl	800f2e4 <USBD_LL_StallEP>
 800d230:	2100      	movs	r1, #0
 800d232:	4620      	mov	r0, r4
 800d234:	f002 f856 	bl	800f2e4 <USBD_LL_StallEP>
 800d238:	e7eb      	b.n	800d212 <USBD_StdItfReq+0x22>
 800d23a:	4620      	mov	r0, r4
 800d23c:	f7ff fdfc 	bl	800ce38 <USBD_CoreFindIF>
 800d240:	b990      	cbnz	r0, 800d268 <USBD_StdItfReq+0x78>
 800d242:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800d246:	689b      	ldr	r3, [r3, #8]
 800d248:	b173      	cbz	r3, 800d268 <USBD_StdItfReq+0x78>
 800d24a:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
 800d24e:	4629      	mov	r1, r5
 800d250:	4620      	mov	r0, r4
 800d252:	4798      	blx	r3
 800d254:	88eb      	ldrh	r3, [r5, #6]
 800d256:	4606      	mov	r6, r0
 800d258:	2b00      	cmp	r3, #0
 800d25a:	d1db      	bne.n	800d214 <USBD_StdItfReq+0x24>
 800d25c:	2800      	cmp	r0, #0
 800d25e:	d1d9      	bne.n	800d214 <USBD_StdItfReq+0x24>
 800d260:	4620      	mov	r0, r4
 800d262:	f000 f925 	bl	800d4b0 <USBD_CtlSendStatus>
 800d266:	e7d5      	b.n	800d214 <USBD_StdItfReq+0x24>
 800d268:	2603      	movs	r6, #3
 800d26a:	4630      	mov	r0, r6
 800d26c:	bd70      	pop	{r4, r5, r6, pc}
 800d26e:	bf00      	nop

0800d270 <USBD_StdEPReq>:
 800d270:	b530      	push	{r4, r5, lr}
 800d272:	460c      	mov	r4, r1
 800d274:	888a      	ldrh	r2, [r1, #4]
 800d276:	7823      	ldrb	r3, [r4, #0]
 800d278:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800d27c:	2b20      	cmp	r3, #32
 800d27e:	b083      	sub	sp, #12
 800d280:	4605      	mov	r5, r0
 800d282:	b2d1      	uxtb	r1, r2
 800d284:	d04c      	beq.n	800d320 <USBD_StdEPReq+0xb0>
 800d286:	2b40      	cmp	r3, #64	@ 0x40
 800d288:	d04a      	beq.n	800d320 <USBD_StdEPReq+0xb0>
 800d28a:	b153      	cbz	r3, 800d2a2 <USBD_StdEPReq+0x32>
 800d28c:	2180      	movs	r1, #128	@ 0x80
 800d28e:	4628      	mov	r0, r5
 800d290:	f002 f828 	bl	800f2e4 <USBD_LL_StallEP>
 800d294:	2100      	movs	r1, #0
 800d296:	4628      	mov	r0, r5
 800d298:	f002 f824 	bl	800f2e4 <USBD_LL_StallEP>
 800d29c:	2000      	movs	r0, #0
 800d29e:	b003      	add	sp, #12
 800d2a0:	bd30      	pop	{r4, r5, pc}
 800d2a2:	7863      	ldrb	r3, [r4, #1]
 800d2a4:	2b01      	cmp	r3, #1
 800d2a6:	d02a      	beq.n	800d2fe <USBD_StdEPReq+0x8e>
 800d2a8:	2b03      	cmp	r3, #3
 800d2aa:	d04b      	beq.n	800d344 <USBD_StdEPReq+0xd4>
 800d2ac:	2b00      	cmp	r3, #0
 800d2ae:	d1ed      	bne.n	800d28c <USBD_StdEPReq+0x1c>
 800d2b0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d2b4:	2b02      	cmp	r3, #2
 800d2b6:	b2d8      	uxtb	r0, r3
 800d2b8:	d05f      	beq.n	800d37a <USBD_StdEPReq+0x10a>
 800d2ba:	2803      	cmp	r0, #3
 800d2bc:	d1e6      	bne.n	800d28c <USBD_StdEPReq+0x1c>
 800d2be:	f001 030f 	and.w	r3, r1, #15
 800d2c2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d2c6:	0612      	lsls	r2, r2, #24
 800d2c8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800d2cc:	d464      	bmi.n	800d398 <USBD_StdEPReq+0x128>
 800d2ce:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 800d2d2:	2b00      	cmp	r3, #0
 800d2d4:	d0da      	beq.n	800d28c <USBD_StdEPReq+0x1c>
 800d2d6:	2414      	movs	r4, #20
 800d2d8:	fb04 5401 	mla	r4, r4, r1, r5
 800d2dc:	f504 74aa 	add.w	r4, r4, #340	@ 0x154
 800d2e0:	2900      	cmp	r1, #0
 800d2e2:	d066      	beq.n	800d3b2 <USBD_StdEPReq+0x142>
 800d2e4:	4628      	mov	r0, r5
 800d2e6:	f002 f815 	bl	800f314 <USBD_LL_IsStallEP>
 800d2ea:	2800      	cmp	r0, #0
 800d2ec:	d069      	beq.n	800d3c2 <USBD_StdEPReq+0x152>
 800d2ee:	2301      	movs	r3, #1
 800d2f0:	6023      	str	r3, [r4, #0]
 800d2f2:	2202      	movs	r2, #2
 800d2f4:	4621      	mov	r1, r4
 800d2f6:	4628      	mov	r0, r5
 800d2f8:	f000 f8ae 	bl	800d458 <USBD_CtlSendData>
 800d2fc:	e7ce      	b.n	800d29c <USBD_StdEPReq+0x2c>
 800d2fe:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d302:	2b02      	cmp	r3, #2
 800d304:	b2da      	uxtb	r2, r3
 800d306:	d02f      	beq.n	800d368 <USBD_StdEPReq+0xf8>
 800d308:	2a03      	cmp	r2, #3
 800d30a:	d1bf      	bne.n	800d28c <USBD_StdEPReq+0x1c>
 800d30c:	8863      	ldrh	r3, [r4, #2]
 800d30e:	2b00      	cmp	r3, #0
 800d310:	d1c4      	bne.n	800d29c <USBD_StdEPReq+0x2c>
 800d312:	064b      	lsls	r3, r1, #25
 800d314:	d150      	bne.n	800d3b8 <USBD_StdEPReq+0x148>
 800d316:	4628      	mov	r0, r5
 800d318:	9101      	str	r1, [sp, #4]
 800d31a:	f000 f8c9 	bl	800d4b0 <USBD_CtlSendStatus>
 800d31e:	9901      	ldr	r1, [sp, #4]
 800d320:	4628      	mov	r0, r5
 800d322:	f7ff fd8b 	bl	800ce3c <USBD_CoreFindEP>
 800d326:	2800      	cmp	r0, #0
 800d328:	d1b8      	bne.n	800d29c <USBD_StdEPReq+0x2c>
 800d32a:	f8d5 32b8 	ldr.w	r3, [r5, #696]	@ 0x2b8
 800d32e:	f8c5 02d4 	str.w	r0, [r5, #724]	@ 0x2d4
 800d332:	689b      	ldr	r3, [r3, #8]
 800d334:	2b00      	cmp	r3, #0
 800d336:	d0b1      	beq.n	800d29c <USBD_StdEPReq+0x2c>
 800d338:	4621      	mov	r1, r4
 800d33a:	4628      	mov	r0, r5
 800d33c:	b003      	add	sp, #12
 800d33e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d342:	4718      	bx	r3
 800d344:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d348:	2b02      	cmp	r3, #2
 800d34a:	b2da      	uxtb	r2, r3
 800d34c:	d00c      	beq.n	800d368 <USBD_StdEPReq+0xf8>
 800d34e:	2a03      	cmp	r2, #3
 800d350:	d19c      	bne.n	800d28c <USBD_StdEPReq+0x1c>
 800d352:	8863      	ldrh	r3, [r4, #2]
 800d354:	b923      	cbnz	r3, 800d360 <USBD_StdEPReq+0xf0>
 800d356:	0648      	lsls	r0, r1, #25
 800d358:	d002      	beq.n	800d360 <USBD_StdEPReq+0xf0>
 800d35a:	88e3      	ldrh	r3, [r4, #6]
 800d35c:	2b00      	cmp	r3, #0
 800d35e:	d032      	beq.n	800d3c6 <USBD_StdEPReq+0x156>
 800d360:	4628      	mov	r0, r5
 800d362:	f000 f8a5 	bl	800d4b0 <USBD_CtlSendStatus>
 800d366:	e799      	b.n	800d29c <USBD_StdEPReq+0x2c>
 800d368:	064a      	lsls	r2, r1, #25
 800d36a:	d08f      	beq.n	800d28c <USBD_StdEPReq+0x1c>
 800d36c:	f001 ffba 	bl	800f2e4 <USBD_LL_StallEP>
 800d370:	2180      	movs	r1, #128	@ 0x80
 800d372:	4628      	mov	r0, r5
 800d374:	f001 ffb6 	bl	800f2e4 <USBD_LL_StallEP>
 800d378:	e790      	b.n	800d29c <USBD_StdEPReq+0x2c>
 800d37a:	0648      	lsls	r0, r1, #25
 800d37c:	d186      	bne.n	800d28c <USBD_StdEPReq+0x1c>
 800d37e:	0611      	lsls	r1, r2, #24
 800d380:	bf4c      	ite	mi
 800d382:	f105 0114 	addmi.w	r1, r5, #20
 800d386:	f505 71aa 	addpl.w	r1, r5, #340	@ 0x154
 800d38a:	2300      	movs	r3, #0
 800d38c:	600b      	str	r3, [r1, #0]
 800d38e:	2202      	movs	r2, #2
 800d390:	4628      	mov	r0, r5
 800d392:	f000 f861 	bl	800d458 <USBD_CtlSendData>
 800d396:	e781      	b.n	800d29c <USBD_StdEPReq+0x2c>
 800d398:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800d39a:	2b00      	cmp	r3, #0
 800d39c:	f43f af76 	beq.w	800d28c <USBD_StdEPReq+0x1c>
 800d3a0:	f001 047f 	and.w	r4, r1, #127	@ 0x7f
 800d3a4:	3401      	adds	r4, #1
 800d3a6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800d3aa:	2980      	cmp	r1, #128	@ 0x80
 800d3ac:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800d3b0:	d198      	bne.n	800d2e4 <USBD_StdEPReq+0x74>
 800d3b2:	2300      	movs	r3, #0
 800d3b4:	6023      	str	r3, [r4, #0]
 800d3b6:	e79c      	b.n	800d2f2 <USBD_StdEPReq+0x82>
 800d3b8:	9101      	str	r1, [sp, #4]
 800d3ba:	f001 ff9f 	bl	800f2fc <USBD_LL_ClearStallEP>
 800d3be:	9901      	ldr	r1, [sp, #4]
 800d3c0:	e7a9      	b.n	800d316 <USBD_StdEPReq+0xa6>
 800d3c2:	6020      	str	r0, [r4, #0]
 800d3c4:	e795      	b.n	800d2f2 <USBD_StdEPReq+0x82>
 800d3c6:	4628      	mov	r0, r5
 800d3c8:	f001 ff8c 	bl	800f2e4 <USBD_LL_StallEP>
 800d3cc:	e7c8      	b.n	800d360 <USBD_StdEPReq+0xf0>
 800d3ce:	bf00      	nop

0800d3d0 <USBD_ParseSetupRequest>:
 800d3d0:	780b      	ldrb	r3, [r1, #0]
 800d3d2:	7003      	strb	r3, [r0, #0]
 800d3d4:	784b      	ldrb	r3, [r1, #1]
 800d3d6:	7043      	strb	r3, [r0, #1]
 800d3d8:	884b      	ldrh	r3, [r1, #2]
 800d3da:	8043      	strh	r3, [r0, #2]
 800d3dc:	888b      	ldrh	r3, [r1, #4]
 800d3de:	8083      	strh	r3, [r0, #4]
 800d3e0:	88cb      	ldrh	r3, [r1, #6]
 800d3e2:	80c3      	strh	r3, [r0, #6]
 800d3e4:	4770      	bx	lr
 800d3e6:	bf00      	nop

0800d3e8 <USBD_CtlError>:
 800d3e8:	b510      	push	{r4, lr}
 800d3ea:	2180      	movs	r1, #128	@ 0x80
 800d3ec:	4604      	mov	r4, r0
 800d3ee:	f001 ff79 	bl	800f2e4 <USBD_LL_StallEP>
 800d3f2:	4620      	mov	r0, r4
 800d3f4:	2100      	movs	r1, #0
 800d3f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d3fa:	f001 bf73 	b.w	800f2e4 <USBD_LL_StallEP>
 800d3fe:	bf00      	nop

0800d400 <USBD_GetString>:
 800d400:	b330      	cbz	r0, 800d450 <USBD_GetString+0x50>
 800d402:	b570      	push	{r4, r5, r6, lr}
 800d404:	7803      	ldrb	r3, [r0, #0]
 800d406:	460e      	mov	r6, r1
 800d408:	4614      	mov	r4, r2
 800d40a:	4605      	mov	r5, r0
 800d40c:	b30b      	cbz	r3, 800d452 <USBD_GetString+0x52>
 800d40e:	4603      	mov	r3, r0
 800d410:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d414:	2900      	cmp	r1, #0
 800d416:	d1fb      	bne.n	800d410 <USBD_GetString+0x10>
 800d418:	1c68      	adds	r0, r5, #1
 800d41a:	f7f2 ff01 	bl	8000220 <strlen>
 800d41e:	1c43      	adds	r3, r0, #1
 800d420:	b2db      	uxtb	r3, r3
 800d422:	3301      	adds	r3, #1
 800d424:	005b      	lsls	r3, r3, #1
 800d426:	b2da      	uxtb	r2, r3
 800d428:	8023      	strh	r3, [r4, #0]
 800d42a:	2303      	movs	r3, #3
 800d42c:	7032      	strb	r2, [r6, #0]
 800d42e:	7073      	strb	r3, [r6, #1]
 800d430:	782c      	ldrb	r4, [r5, #0]
 800d432:	b164      	cbz	r4, 800d44e <USBD_GetString+0x4e>
 800d434:	4628      	mov	r0, r5
 800d436:	2302      	movs	r3, #2
 800d438:	2100      	movs	r1, #0
 800d43a:	1c5a      	adds	r2, r3, #1
 800d43c:	b2d2      	uxtb	r2, r2
 800d43e:	54f4      	strb	r4, [r6, r3]
 800d440:	54b1      	strb	r1, [r6, r2]
 800d442:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800d446:	3302      	adds	r3, #2
 800d448:	b2db      	uxtb	r3, r3
 800d44a:	2c00      	cmp	r4, #0
 800d44c:	d1f5      	bne.n	800d43a <USBD_GetString+0x3a>
 800d44e:	bd70      	pop	{r4, r5, r6, pc}
 800d450:	4770      	bx	lr
 800d452:	2202      	movs	r2, #2
 800d454:	4613      	mov	r3, r2
 800d456:	e7e7      	b.n	800d428 <USBD_GetString+0x28>

0800d458 <USBD_CtlSendData>:
 800d458:	b508      	push	{r3, lr}
 800d45a:	4613      	mov	r3, r2
 800d45c:	460a      	mov	r2, r1
 800d45e:	2102      	movs	r1, #2
 800d460:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800d464:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d468:	2100      	movs	r1, #0
 800d46a:	f001 ff73 	bl	800f354 <USBD_LL_Transmit>
 800d46e:	2000      	movs	r0, #0
 800d470:	bd08      	pop	{r3, pc}
 800d472:	bf00      	nop

0800d474 <USBD_CtlContinueSendData>:
 800d474:	b508      	push	{r3, lr}
 800d476:	4613      	mov	r3, r2
 800d478:	460a      	mov	r2, r1
 800d47a:	2100      	movs	r1, #0
 800d47c:	f001 ff6a 	bl	800f354 <USBD_LL_Transmit>
 800d480:	2000      	movs	r0, #0
 800d482:	bd08      	pop	{r3, pc}

0800d484 <USBD_CtlPrepareRx>:
 800d484:	b508      	push	{r3, lr}
 800d486:	4613      	mov	r3, r2
 800d488:	460a      	mov	r2, r1
 800d48a:	2103      	movs	r1, #3
 800d48c:	e9c0 3356 	strd	r3, r3, [r0, #344]	@ 0x158
 800d490:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d494:	2100      	movs	r1, #0
 800d496:	f001 ff69 	bl	800f36c <USBD_LL_PrepareReceive>
 800d49a:	2000      	movs	r0, #0
 800d49c:	bd08      	pop	{r3, pc}
 800d49e:	bf00      	nop

0800d4a0 <USBD_CtlContinueRx>:
 800d4a0:	b508      	push	{r3, lr}
 800d4a2:	4613      	mov	r3, r2
 800d4a4:	460a      	mov	r2, r1
 800d4a6:	2100      	movs	r1, #0
 800d4a8:	f001 ff60 	bl	800f36c <USBD_LL_PrepareReceive>
 800d4ac:	2000      	movs	r0, #0
 800d4ae:	bd08      	pop	{r3, pc}

0800d4b0 <USBD_CtlSendStatus>:
 800d4b0:	b508      	push	{r3, lr}
 800d4b2:	2104      	movs	r1, #4
 800d4b4:	2300      	movs	r3, #0
 800d4b6:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d4ba:	461a      	mov	r2, r3
 800d4bc:	4619      	mov	r1, r3
 800d4be:	f001 ff49 	bl	800f354 <USBD_LL_Transmit>
 800d4c2:	2000      	movs	r0, #0
 800d4c4:	bd08      	pop	{r3, pc}
 800d4c6:	bf00      	nop

0800d4c8 <USBD_CtlReceiveStatus>:
 800d4c8:	b508      	push	{r3, lr}
 800d4ca:	2105      	movs	r1, #5
 800d4cc:	2300      	movs	r3, #0
 800d4ce:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d4d2:	461a      	mov	r2, r3
 800d4d4:	4619      	mov	r1, r3
 800d4d6:	f001 ff49 	bl	800f36c <USBD_LL_PrepareReceive>
 800d4da:	2000      	movs	r0, #0
 800d4dc:	bd08      	pop	{r3, pc}
 800d4de:	bf00      	nop

0800d4e0 <osKernelStart>:
 800d4e0:	b508      	push	{r3, lr}
 800d4e2:	f000 fcc1 	bl	800de68 <vTaskStartScheduler>
 800d4e6:	2000      	movs	r0, #0
 800d4e8:	bd08      	pop	{r3, pc}
 800d4ea:	bf00      	nop

0800d4ec <osThreadCreate>:
 800d4ec:	b510      	push	{r4, lr}
 800d4ee:	4684      	mov	ip, r0
 800d4f0:	460b      	mov	r3, r1
 800d4f2:	f8bc 2010 	ldrh.w	r2, [ip, #16]
 800d4f6:	f8dc 1000 	ldr.w	r1, [ip]
 800d4fa:	f9bc c008 	ldrsh.w	ip, [ip, #8]
 800d4fe:	6840      	ldr	r0, [r0, #4]
 800d500:	b084      	sub	sp, #16
 800d502:	f1bc 0f84 	cmp.w	ip, #132	@ 0x84
 800d506:	bf14      	ite	ne
 800d508:	f10c 0403 	addne.w	r4, ip, #3
 800d50c:	2400      	moveq	r4, #0
 800d50e:	9400      	str	r4, [sp, #0]
 800d510:	ac03      	add	r4, sp, #12
 800d512:	9401      	str	r4, [sp, #4]
 800d514:	f000 fa56 	bl	800d9c4 <xTaskCreate>
 800d518:	2801      	cmp	r0, #1
 800d51a:	bf0c      	ite	eq
 800d51c:	9803      	ldreq	r0, [sp, #12]
 800d51e:	2000      	movne	r0, #0
 800d520:	b004      	add	sp, #16
 800d522:	bd10      	pop	{r4, pc}

0800d524 <osThreadSetPriority>:
 800d524:	b508      	push	{r3, lr}
 800d526:	2984      	cmp	r1, #132	@ 0x84
 800d528:	bf14      	ite	ne
 800d52a:	3103      	addne	r1, #3
 800d52c:	2100      	moveq	r1, #0
 800d52e:	f000 fb87 	bl	800dc40 <vTaskPrioritySet>
 800d532:	2000      	movs	r0, #0
 800d534:	bd08      	pop	{r3, pc}
 800d536:	bf00      	nop

0800d538 <osDelay>:
 800d538:	b508      	push	{r3, lr}
 800d53a:	2801      	cmp	r0, #1
 800d53c:	bf38      	it	cc
 800d53e:	2001      	movcc	r0, #1
 800d540:	f000 fb4e 	bl	800dbe0 <vTaskDelay>
 800d544:	2000      	movs	r0, #0
 800d546:	bd08      	pop	{r3, pc}

0800d548 <osThreadSuspend>:
 800d548:	b508      	push	{r3, lr}
 800d54a:	f000 fdd3 	bl	800e0f4 <vTaskSuspend>
 800d54e:	2000      	movs	r0, #0
 800d550:	bd08      	pop	{r3, pc}
 800d552:	bf00      	nop

0800d554 <osThreadResume>:
 800d554:	b508      	push	{r3, lr}
 800d556:	f3ef 8305 	mrs	r3, IPSR
 800d55a:	b12b      	cbz	r3, 800d568 <osThreadResume+0x14>
 800d55c:	f000 fc2e 	bl	800ddbc <xTaskResumeFromISR>
 800d560:	2801      	cmp	r0, #1
 800d562:	d005      	beq.n	800d570 <osThreadResume+0x1c>
 800d564:	2000      	movs	r0, #0
 800d566:	bd08      	pop	{r3, pc}
 800d568:	f000 fbda 	bl	800dd20 <vTaskResume>
 800d56c:	2000      	movs	r0, #0
 800d56e:	bd08      	pop	{r3, pc}
 800d570:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d574:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d578:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d57c:	f3bf 8f4f 	dsb	sy
 800d580:	f3bf 8f6f 	isb	sy
 800d584:	2000      	movs	r0, #0
 800d586:	bd08      	pop	{r3, pc}

0800d588 <vListInitialise>:
 800d588:	f100 0308 	add.w	r3, r0, #8
 800d58c:	f04f 31ff 	mov.w	r1, #4294967295
 800d590:	2200      	movs	r2, #0
 800d592:	e9c0 3101 	strd	r3, r1, [r0, #4]
 800d596:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d59a:	6002      	str	r2, [r0, #0]
 800d59c:	4770      	bx	lr
 800d59e:	bf00      	nop

0800d5a0 <vListInitialiseItem>:
 800d5a0:	2300      	movs	r3, #0
 800d5a2:	6103      	str	r3, [r0, #16]
 800d5a4:	4770      	bx	lr
 800d5a6:	bf00      	nop

0800d5a8 <vListInsertEnd>:
 800d5a8:	6842      	ldr	r2, [r0, #4]
 800d5aa:	6803      	ldr	r3, [r0, #0]
 800d5ac:	b410      	push	{r4}
 800d5ae:	6894      	ldr	r4, [r2, #8]
 800d5b0:	3301      	adds	r3, #1
 800d5b2:	e9c1 2401 	strd	r2, r4, [r1, #4]
 800d5b6:	6061      	str	r1, [r4, #4]
 800d5b8:	6091      	str	r1, [r2, #8]
 800d5ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d5be:	6108      	str	r0, [r1, #16]
 800d5c0:	6003      	str	r3, [r0, #0]
 800d5c2:	4770      	bx	lr

0800d5c4 <vListInsert>:
 800d5c4:	b430      	push	{r4, r5}
 800d5c6:	680d      	ldr	r5, [r1, #0]
 800d5c8:	1c6b      	adds	r3, r5, #1
 800d5ca:	d010      	beq.n	800d5ee <vListInsert+0x2a>
 800d5cc:	f100 0308 	add.w	r3, r0, #8
 800d5d0:	461c      	mov	r4, r3
 800d5d2:	685b      	ldr	r3, [r3, #4]
 800d5d4:	681a      	ldr	r2, [r3, #0]
 800d5d6:	42aa      	cmp	r2, r5
 800d5d8:	d9fa      	bls.n	800d5d0 <vListInsert+0xc>
 800d5da:	6802      	ldr	r2, [r0, #0]
 800d5dc:	604b      	str	r3, [r1, #4]
 800d5de:	3201      	adds	r2, #1
 800d5e0:	6099      	str	r1, [r3, #8]
 800d5e2:	608c      	str	r4, [r1, #8]
 800d5e4:	6061      	str	r1, [r4, #4]
 800d5e6:	6108      	str	r0, [r1, #16]
 800d5e8:	bc30      	pop	{r4, r5}
 800d5ea:	6002      	str	r2, [r0, #0]
 800d5ec:	4770      	bx	lr
 800d5ee:	6904      	ldr	r4, [r0, #16]
 800d5f0:	6863      	ldr	r3, [r4, #4]
 800d5f2:	e7f2      	b.n	800d5da <vListInsert+0x16>

0800d5f4 <uxListRemove>:
 800d5f4:	6903      	ldr	r3, [r0, #16]
 800d5f6:	b410      	push	{r4}
 800d5f8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800d5fc:	685c      	ldr	r4, [r3, #4]
 800d5fe:	608a      	str	r2, [r1, #8]
 800d600:	4284      	cmp	r4, r0
 800d602:	6051      	str	r1, [r2, #4]
 800d604:	bf08      	it	eq
 800d606:	605a      	streq	r2, [r3, #4]
 800d608:	681a      	ldr	r2, [r3, #0]
 800d60a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d60e:	2100      	movs	r1, #0
 800d610:	3a01      	subs	r2, #1
 800d612:	6101      	str	r1, [r0, #16]
 800d614:	601a      	str	r2, [r3, #0]
 800d616:	6818      	ldr	r0, [r3, #0]
 800d618:	4770      	bx	lr
 800d61a:	bf00      	nop

0800d61c <prvIdleTask>:
 800d61c:	b580      	push	{r7, lr}
 800d61e:	4d16      	ldr	r5, [pc, #88]	@ (800d678 <prvIdleTask+0x5c>)
 800d620:	4f16      	ldr	r7, [pc, #88]	@ (800d67c <prvIdleTask+0x60>)
 800d622:	4e17      	ldr	r6, [pc, #92]	@ (800d680 <prvIdleTask+0x64>)
 800d624:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 800d684 <prvIdleTask+0x68>
 800d628:	f04f 2ae0 	mov.w	sl, #3758153728	@ 0xe000e000
 800d62c:	f04f 5980 	mov.w	r9, #268435456	@ 0x10000000
 800d630:	e014      	b.n	800d65c <prvIdleTask+0x40>
 800d632:	f000 fe4f 	bl	800e2d4 <vPortEnterCritical>
 800d636:	68fb      	ldr	r3, [r7, #12]
 800d638:	68dc      	ldr	r4, [r3, #12]
 800d63a:	1d20      	adds	r0, r4, #4
 800d63c:	f7ff ffda 	bl	800d5f4 <uxListRemove>
 800d640:	6833      	ldr	r3, [r6, #0]
 800d642:	3b01      	subs	r3, #1
 800d644:	6033      	str	r3, [r6, #0]
 800d646:	682b      	ldr	r3, [r5, #0]
 800d648:	3b01      	subs	r3, #1
 800d64a:	602b      	str	r3, [r5, #0]
 800d64c:	f000 fe64 	bl	800e318 <vPortExitCritical>
 800d650:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d652:	f001 f85d 	bl	800e710 <vPortFree>
 800d656:	4620      	mov	r0, r4
 800d658:	f001 f85a 	bl	800e710 <vPortFree>
 800d65c:	682b      	ldr	r3, [r5, #0]
 800d65e:	2b00      	cmp	r3, #0
 800d660:	d1e7      	bne.n	800d632 <prvIdleTask+0x16>
 800d662:	f8d8 3000 	ldr.w	r3, [r8]
 800d666:	2b01      	cmp	r3, #1
 800d668:	d9f8      	bls.n	800d65c <prvIdleTask+0x40>
 800d66a:	f8ca 9d04 	str.w	r9, [sl, #3332]	@ 0xd04
 800d66e:	f3bf 8f4f 	dsb	sy
 800d672:	f3bf 8f6f 	isb	sy
 800d676:	e7f1      	b.n	800d65c <prvIdleTask+0x40>
 800d678:	2000184c 	.word	0x2000184c
 800d67c:	20001850 	.word	0x20001850
 800d680:	20001834 	.word	0x20001834
 800d684:	200018a8 	.word	0x200018a8

0800d688 <prvAddCurrentTaskToDelayedList>:
 800d688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d68a:	4b21      	ldr	r3, [pc, #132]	@ (800d710 <prvAddCurrentTaskToDelayedList+0x88>)
 800d68c:	4d21      	ldr	r5, [pc, #132]	@ (800d714 <prvAddCurrentTaskToDelayedList+0x8c>)
 800d68e:	681e      	ldr	r6, [r3, #0]
 800d690:	682b      	ldr	r3, [r5, #0]
 800d692:	4604      	mov	r4, r0
 800d694:	1d18      	adds	r0, r3, #4
 800d696:	460f      	mov	r7, r1
 800d698:	f7ff ffac 	bl	800d5f4 <uxListRemove>
 800d69c:	b940      	cbnz	r0, 800d6b0 <prvAddCurrentTaskToDelayedList+0x28>
 800d69e:	682b      	ldr	r3, [r5, #0]
 800d6a0:	491d      	ldr	r1, [pc, #116]	@ (800d718 <prvAddCurrentTaskToDelayedList+0x90>)
 800d6a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d6a4:	2201      	movs	r2, #1
 800d6a6:	409a      	lsls	r2, r3
 800d6a8:	680b      	ldr	r3, [r1, #0]
 800d6aa:	ea23 0302 	bic.w	r3, r3, r2
 800d6ae:	600b      	str	r3, [r1, #0]
 800d6b0:	1c63      	adds	r3, r4, #1
 800d6b2:	d00f      	beq.n	800d6d4 <prvAddCurrentTaskToDelayedList+0x4c>
 800d6b4:	682b      	ldr	r3, [r5, #0]
 800d6b6:	1934      	adds	r4, r6, r4
 800d6b8:	605c      	str	r4, [r3, #4]
 800d6ba:	d210      	bcs.n	800d6de <prvAddCurrentTaskToDelayedList+0x56>
 800d6bc:	4b17      	ldr	r3, [pc, #92]	@ (800d71c <prvAddCurrentTaskToDelayedList+0x94>)
 800d6be:	6818      	ldr	r0, [r3, #0]
 800d6c0:	6829      	ldr	r1, [r5, #0]
 800d6c2:	3104      	adds	r1, #4
 800d6c4:	f7ff ff7e 	bl	800d5c4 <vListInsert>
 800d6c8:	4b15      	ldr	r3, [pc, #84]	@ (800d720 <prvAddCurrentTaskToDelayedList+0x98>)
 800d6ca:	681a      	ldr	r2, [r3, #0]
 800d6cc:	42a2      	cmp	r2, r4
 800d6ce:	d900      	bls.n	800d6d2 <prvAddCurrentTaskToDelayedList+0x4a>
 800d6d0:	601c      	str	r4, [r3, #0]
 800d6d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d6d4:	b9a7      	cbnz	r7, 800d700 <prvAddCurrentTaskToDelayedList+0x78>
 800d6d6:	682b      	ldr	r3, [r5, #0]
 800d6d8:	1e72      	subs	r2, r6, #1
 800d6da:	605a      	str	r2, [r3, #4]
 800d6dc:	b13e      	cbz	r6, 800d6ee <prvAddCurrentTaskToDelayedList+0x66>
 800d6de:	4b11      	ldr	r3, [pc, #68]	@ (800d724 <prvAddCurrentTaskToDelayedList+0x9c>)
 800d6e0:	6818      	ldr	r0, [r3, #0]
 800d6e2:	6829      	ldr	r1, [r5, #0]
 800d6e4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d6e8:	3104      	adds	r1, #4
 800d6ea:	f7ff bf6b 	b.w	800d5c4 <vListInsert>
 800d6ee:	4b0b      	ldr	r3, [pc, #44]	@ (800d71c <prvAddCurrentTaskToDelayedList+0x94>)
 800d6f0:	6818      	ldr	r0, [r3, #0]
 800d6f2:	6829      	ldr	r1, [r5, #0]
 800d6f4:	3104      	adds	r1, #4
 800d6f6:	f7ff ff65 	bl	800d5c4 <vListInsert>
 800d6fa:	4b09      	ldr	r3, [pc, #36]	@ (800d720 <prvAddCurrentTaskToDelayedList+0x98>)
 800d6fc:	681b      	ldr	r3, [r3, #0]
 800d6fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d700:	6829      	ldr	r1, [r5, #0]
 800d702:	4809      	ldr	r0, [pc, #36]	@ (800d728 <prvAddCurrentTaskToDelayedList+0xa0>)
 800d704:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d708:	3104      	adds	r1, #4
 800d70a:	f7ff bf4d 	b.w	800d5a8 <vListInsertEnd>
 800d70e:	bf00      	nop
 800d710:	20001830 	.word	0x20001830
 800d714:	20001934 	.word	0x20001934
 800d718:	2000182c 	.word	0x2000182c
 800d71c:	2000187c 	.word	0x2000187c
 800d720:	20001814 	.word	0x20001814
 800d724:	20001878 	.word	0x20001878
 800d728:	20001838 	.word	0x20001838

0800d72c <xTaskIncrementTick.part.0>:
 800d72c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d730:	4b48      	ldr	r3, [pc, #288]	@ (800d854 <xTaskIncrementTick.part.0+0x128>)
 800d732:	681d      	ldr	r5, [r3, #0]
 800d734:	3501      	adds	r5, #1
 800d736:	b083      	sub	sp, #12
 800d738:	601d      	str	r5, [r3, #0]
 800d73a:	2d00      	cmp	r5, #0
 800d73c:	d041      	beq.n	800d7c2 <xTaskIncrementTick.part.0+0x96>
 800d73e:	4b46      	ldr	r3, [pc, #280]	@ (800d858 <xTaskIncrementTick.part.0+0x12c>)
 800d740:	9301      	str	r3, [sp, #4]
 800d742:	681b      	ldr	r3, [r3, #0]
 800d744:	429d      	cmp	r5, r3
 800d746:	d349      	bcc.n	800d7dc <xTaskIncrementTick.part.0+0xb0>
 800d748:	4e44      	ldr	r6, [pc, #272]	@ (800d85c <xTaskIncrementTick.part.0+0x130>)
 800d74a:	f8df 8124 	ldr.w	r8, [pc, #292]	@ 800d870 <xTaskIncrementTick.part.0+0x144>
 800d74e:	6833      	ldr	r3, [r6, #0]
 800d750:	f8df 9120 	ldr.w	r9, [pc, #288]	@ 800d874 <xTaskIncrementTick.part.0+0x148>
 800d754:	681c      	ldr	r4, [r3, #0]
 800d756:	2c00      	cmp	r4, #0
 800d758:	d076      	beq.n	800d848 <xTaskIncrementTick.part.0+0x11c>
 800d75a:	4f41      	ldr	r7, [pc, #260]	@ (800d860 <xTaskIncrementTick.part.0+0x134>)
 800d75c:	2400      	movs	r4, #0
 800d75e:	e022      	b.n	800d7a6 <xTaskIncrementTick.part.0+0x7a>
 800d760:	f7ff ff48 	bl	800d5f4 <uxListRemove>
 800d764:	f8db 2028 	ldr.w	r2, [fp, #40]	@ 0x28
 800d768:	f10b 0018 	add.w	r0, fp, #24
 800d76c:	b10a      	cbz	r2, 800d772 <xTaskIncrementTick.part.0+0x46>
 800d76e:	f7ff ff41 	bl	800d5f4 <uxListRemove>
 800d772:	f8db 002c 	ldr.w	r0, [fp, #44]	@ 0x2c
 800d776:	683b      	ldr	r3, [r7, #0]
 800d778:	2201      	movs	r2, #1
 800d77a:	4082      	lsls	r2, r0
 800d77c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d780:	431a      	orrs	r2, r3
 800d782:	4651      	mov	r1, sl
 800d784:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d788:	603a      	str	r2, [r7, #0]
 800d78a:	f7ff ff0d 	bl	800d5a8 <vListInsertEnd>
 800d78e:	f8d9 2000 	ldr.w	r2, [r9]
 800d792:	6830      	ldr	r0, [r6, #0]
 800d794:	f8db 102c 	ldr.w	r1, [fp, #44]	@ 0x2c
 800d798:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d79a:	6803      	ldr	r3, [r0, #0]
 800d79c:	4291      	cmp	r1, r2
 800d79e:	bf28      	it	cs
 800d7a0:	2401      	movcs	r4, #1
 800d7a2:	2b00      	cmp	r3, #0
 800d7a4:	d050      	beq.n	800d848 <xTaskIncrementTick.part.0+0x11c>
 800d7a6:	6833      	ldr	r3, [r6, #0]
 800d7a8:	68db      	ldr	r3, [r3, #12]
 800d7aa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 800d7ae:	f8db 2004 	ldr.w	r2, [fp, #4]
 800d7b2:	f10b 0a04 	add.w	sl, fp, #4
 800d7b6:	4295      	cmp	r5, r2
 800d7b8:	4650      	mov	r0, sl
 800d7ba:	d2d1      	bcs.n	800d760 <xTaskIncrementTick.part.0+0x34>
 800d7bc:	9b01      	ldr	r3, [sp, #4]
 800d7be:	601a      	str	r2, [r3, #0]
 800d7c0:	e011      	b.n	800d7e6 <xTaskIncrementTick.part.0+0xba>
 800d7c2:	4b26      	ldr	r3, [pc, #152]	@ (800d85c <xTaskIncrementTick.part.0+0x130>)
 800d7c4:	681a      	ldr	r2, [r3, #0]
 800d7c6:	6812      	ldr	r2, [r2, #0]
 800d7c8:	b30a      	cbz	r2, 800d80e <xTaskIncrementTick.part.0+0xe2>
 800d7ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d7ce:	f383 8811 	msr	BASEPRI, r3
 800d7d2:	f3bf 8f6f 	isb	sy
 800d7d6:	f3bf 8f4f 	dsb	sy
 800d7da:	e7fe      	b.n	800d7da <xTaskIncrementTick.part.0+0xae>
 800d7dc:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 800d870 <xTaskIncrementTick.part.0+0x144>
 800d7e0:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 800d874 <xTaskIncrementTick.part.0+0x148>
 800d7e4:	2400      	movs	r4, #0
 800d7e6:	f8d9 3000 	ldr.w	r3, [r9]
 800d7ea:	491e      	ldr	r1, [pc, #120]	@ (800d864 <xTaskIncrementTick.part.0+0x138>)
 800d7ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d7ee:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d7f2:	009b      	lsls	r3, r3, #2
 800d7f4:	f858 2003 	ldr.w	r2, [r8, r3]
 800d7f8:	680b      	ldr	r3, [r1, #0]
 800d7fa:	2a02      	cmp	r2, #2
 800d7fc:	bf28      	it	cs
 800d7fe:	2401      	movcs	r4, #1
 800d800:	2b00      	cmp	r3, #0
 800d802:	bf0c      	ite	eq
 800d804:	4620      	moveq	r0, r4
 800d806:	2001      	movne	r0, #1
 800d808:	b003      	add	sp, #12
 800d80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d80e:	4a16      	ldr	r2, [pc, #88]	@ (800d868 <xTaskIncrementTick.part.0+0x13c>)
 800d810:	6818      	ldr	r0, [r3, #0]
 800d812:	6811      	ldr	r1, [r2, #0]
 800d814:	6019      	str	r1, [r3, #0]
 800d816:	4915      	ldr	r1, [pc, #84]	@ (800d86c <xTaskIncrementTick.part.0+0x140>)
 800d818:	6010      	str	r0, [r2, #0]
 800d81a:	680a      	ldr	r2, [r1, #0]
 800d81c:	3201      	adds	r2, #1
 800d81e:	600a      	str	r2, [r1, #0]
 800d820:	681a      	ldr	r2, [r3, #0]
 800d822:	6812      	ldr	r2, [r2, #0]
 800d824:	b93a      	cbnz	r2, 800d836 <xTaskIncrementTick.part.0+0x10a>
 800d826:	4b0c      	ldr	r3, [pc, #48]	@ (800d858 <xTaskIncrementTick.part.0+0x12c>)
 800d828:	9301      	str	r3, [sp, #4]
 800d82a:	461a      	mov	r2, r3
 800d82c:	f04f 33ff 	mov.w	r3, #4294967295
 800d830:	6013      	str	r3, [r2, #0]
 800d832:	4613      	mov	r3, r2
 800d834:	e785      	b.n	800d742 <xTaskIncrementTick.part.0+0x16>
 800d836:	681b      	ldr	r3, [r3, #0]
 800d838:	4a07      	ldr	r2, [pc, #28]	@ (800d858 <xTaskIncrementTick.part.0+0x12c>)
 800d83a:	68db      	ldr	r3, [r3, #12]
 800d83c:	9201      	str	r2, [sp, #4]
 800d83e:	68db      	ldr	r3, [r3, #12]
 800d840:	685b      	ldr	r3, [r3, #4]
 800d842:	6013      	str	r3, [r2, #0]
 800d844:	4613      	mov	r3, r2
 800d846:	e77c      	b.n	800d742 <xTaskIncrementTick.part.0+0x16>
 800d848:	9a01      	ldr	r2, [sp, #4]
 800d84a:	f04f 33ff 	mov.w	r3, #4294967295
 800d84e:	6013      	str	r3, [r2, #0]
 800d850:	e7c9      	b.n	800d7e6 <xTaskIncrementTick.part.0+0xba>
 800d852:	bf00      	nop
 800d854:	20001830 	.word	0x20001830
 800d858:	20001814 	.word	0x20001814
 800d85c:	2000187c 	.word	0x2000187c
 800d860:	2000182c 	.word	0x2000182c
 800d864:	20001820 	.word	0x20001820
 800d868:	20001878 	.word	0x20001878
 800d86c:	2000181c 	.word	0x2000181c
 800d870:	200018a8 	.word	0x200018a8
 800d874:	20001934 	.word	0x20001934

0800d878 <xTaskResumeAll.part.0>:
 800d878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d87c:	4c47      	ldr	r4, [pc, #284]	@ (800d99c <xTaskResumeAll.part.0+0x124>)
 800d87e:	b083      	sub	sp, #12
 800d880:	f000 fd28 	bl	800e2d4 <vPortEnterCritical>
 800d884:	6823      	ldr	r3, [r4, #0]
 800d886:	3b01      	subs	r3, #1
 800d888:	6023      	str	r3, [r4, #0]
 800d88a:	6823      	ldr	r3, [r4, #0]
 800d88c:	2b00      	cmp	r3, #0
 800d88e:	d16c      	bne.n	800d96a <xTaskResumeAll.part.0+0xf2>
 800d890:	4b43      	ldr	r3, [pc, #268]	@ (800d9a0 <xTaskResumeAll.part.0+0x128>)
 800d892:	681b      	ldr	r3, [r3, #0]
 800d894:	2b00      	cmp	r3, #0
 800d896:	d068      	beq.n	800d96a <xTaskResumeAll.part.0+0xf2>
 800d898:	f8df b120 	ldr.w	fp, [pc, #288]	@ 800d9bc <xTaskResumeAll.part.0+0x144>
 800d89c:	f8db 3000 	ldr.w	r3, [fp]
 800d8a0:	2b00      	cmp	r3, #0
 800d8a2:	d077      	beq.n	800d994 <xTaskResumeAll.part.0+0x11c>
 800d8a4:	4b3f      	ldr	r3, [pc, #252]	@ (800d9a4 <xTaskResumeAll.part.0+0x12c>)
 800d8a6:	4d40      	ldr	r5, [pc, #256]	@ (800d9a8 <xTaskResumeAll.part.0+0x130>)
 800d8a8:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 800d9c0 <xTaskResumeAll.part.0+0x148>
 800d8ac:	4f3f      	ldr	r7, [pc, #252]	@ (800d9ac <xTaskResumeAll.part.0+0x134>)
 800d8ae:	9301      	str	r3, [sp, #4]
 800d8b0:	2601      	movs	r6, #1
 800d8b2:	f8db 300c 	ldr.w	r3, [fp, #12]
 800d8b6:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800d8ba:	f10a 0904 	add.w	r9, sl, #4
 800d8be:	f10a 0018 	add.w	r0, sl, #24
 800d8c2:	f7ff fe97 	bl	800d5f4 <uxListRemove>
 800d8c6:	4648      	mov	r0, r9
 800d8c8:	f7ff fe94 	bl	800d5f4 <uxListRemove>
 800d8cc:	f8da 002c 	ldr.w	r0, [sl, #44]	@ 0x2c
 800d8d0:	682a      	ldr	r2, [r5, #0]
 800d8d2:	fa06 f300 	lsl.w	r3, r6, r0
 800d8d6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d8da:	4313      	orrs	r3, r2
 800d8dc:	4649      	mov	r1, r9
 800d8de:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d8e2:	602b      	str	r3, [r5, #0]
 800d8e4:	f7ff fe60 	bl	800d5a8 <vListInsertEnd>
 800d8e8:	683b      	ldr	r3, [r7, #0]
 800d8ea:	f8da 202c 	ldr.w	r2, [sl, #44]	@ 0x2c
 800d8ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d8f0:	429a      	cmp	r2, r3
 800d8f2:	d341      	bcc.n	800d978 <xTaskResumeAll.part.0+0x100>
 800d8f4:	9b01      	ldr	r3, [sp, #4]
 800d8f6:	601e      	str	r6, [r3, #0]
 800d8f8:	f8db 3000 	ldr.w	r3, [fp]
 800d8fc:	2b00      	cmp	r3, #0
 800d8fe:	d1d8      	bne.n	800d8b2 <xTaskResumeAll.part.0+0x3a>
 800d900:	4b2b      	ldr	r3, [pc, #172]	@ (800d9b0 <xTaskResumeAll.part.0+0x138>)
 800d902:	681a      	ldr	r2, [r3, #0]
 800d904:	6812      	ldr	r2, [r2, #0]
 800d906:	2a00      	cmp	r2, #0
 800d908:	d03f      	beq.n	800d98a <xTaskResumeAll.part.0+0x112>
 800d90a:	681a      	ldr	r2, [r3, #0]
 800d90c:	4b29      	ldr	r3, [pc, #164]	@ (800d9b4 <xTaskResumeAll.part.0+0x13c>)
 800d90e:	68d2      	ldr	r2, [r2, #12]
 800d910:	68d2      	ldr	r2, [r2, #12]
 800d912:	6852      	ldr	r2, [r2, #4]
 800d914:	601a      	str	r2, [r3, #0]
 800d916:	4e28      	ldr	r6, [pc, #160]	@ (800d9b8 <xTaskResumeAll.part.0+0x140>)
 800d918:	6835      	ldr	r5, [r6, #0]
 800d91a:	b195      	cbz	r5, 800d942 <xTaskResumeAll.part.0+0xca>
 800d91c:	2701      	movs	r7, #1
 800d91e:	e006      	b.n	800d92e <xTaskResumeAll.part.0+0xb6>
 800d920:	f7ff ff04 	bl	800d72c <xTaskIncrementTick.part.0>
 800d924:	b108      	cbz	r0, 800d92a <xTaskResumeAll.part.0+0xb2>
 800d926:	9b01      	ldr	r3, [sp, #4]
 800d928:	601f      	str	r7, [r3, #0]
 800d92a:	3d01      	subs	r5, #1
 800d92c:	d008      	beq.n	800d940 <xTaskResumeAll.part.0+0xc8>
 800d92e:	6823      	ldr	r3, [r4, #0]
 800d930:	2b00      	cmp	r3, #0
 800d932:	d0f5      	beq.n	800d920 <xTaskResumeAll.part.0+0xa8>
 800d934:	6833      	ldr	r3, [r6, #0]
 800d936:	3d01      	subs	r5, #1
 800d938:	f103 0301 	add.w	r3, r3, #1
 800d93c:	6033      	str	r3, [r6, #0]
 800d93e:	d1f6      	bne.n	800d92e <xTaskResumeAll.part.0+0xb6>
 800d940:	6035      	str	r5, [r6, #0]
 800d942:	9b01      	ldr	r3, [sp, #4]
 800d944:	681b      	ldr	r3, [r3, #0]
 800d946:	b183      	cbz	r3, 800d96a <xTaskResumeAll.part.0+0xf2>
 800d948:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d94c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d950:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d954:	f3bf 8f4f 	dsb	sy
 800d958:	f3bf 8f6f 	isb	sy
 800d95c:	f000 fcdc 	bl	800e318 <vPortExitCritical>
 800d960:	2401      	movs	r4, #1
 800d962:	4620      	mov	r0, r4
 800d964:	b003      	add	sp, #12
 800d966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d96a:	f000 fcd5 	bl	800e318 <vPortExitCritical>
 800d96e:	2400      	movs	r4, #0
 800d970:	4620      	mov	r0, r4
 800d972:	b003      	add	sp, #12
 800d974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d978:	f8db 3000 	ldr.w	r3, [fp]
 800d97c:	2b00      	cmp	r3, #0
 800d97e:	d198      	bne.n	800d8b2 <xTaskResumeAll.part.0+0x3a>
 800d980:	4b0b      	ldr	r3, [pc, #44]	@ (800d9b0 <xTaskResumeAll.part.0+0x138>)
 800d982:	681a      	ldr	r2, [r3, #0]
 800d984:	6812      	ldr	r2, [r2, #0]
 800d986:	2a00      	cmp	r2, #0
 800d988:	d1bf      	bne.n	800d90a <xTaskResumeAll.part.0+0x92>
 800d98a:	4b0a      	ldr	r3, [pc, #40]	@ (800d9b4 <xTaskResumeAll.part.0+0x13c>)
 800d98c:	f04f 32ff 	mov.w	r2, #4294967295
 800d990:	601a      	str	r2, [r3, #0]
 800d992:	e7c0      	b.n	800d916 <xTaskResumeAll.part.0+0x9e>
 800d994:	4b03      	ldr	r3, [pc, #12]	@ (800d9a4 <xTaskResumeAll.part.0+0x12c>)
 800d996:	9301      	str	r3, [sp, #4]
 800d998:	e7bd      	b.n	800d916 <xTaskResumeAll.part.0+0x9e>
 800d99a:	bf00      	nop
 800d99c:	2000180c 	.word	0x2000180c
 800d9a0:	20001834 	.word	0x20001834
 800d9a4:	20001820 	.word	0x20001820
 800d9a8:	2000182c 	.word	0x2000182c
 800d9ac:	20001934 	.word	0x20001934
 800d9b0:	2000187c 	.word	0x2000187c
 800d9b4:	20001814 	.word	0x20001814
 800d9b8:	20001824 	.word	0x20001824
 800d9bc:	20001864 	.word	0x20001864
 800d9c0:	200018a8 	.word	0x200018a8

0800d9c4 <xTaskCreate>:
 800d9c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d9c8:	0095      	lsls	r5, r2, #2
 800d9ca:	4680      	mov	r8, r0
 800d9cc:	4628      	mov	r0, r5
 800d9ce:	460e      	mov	r6, r1
 800d9d0:	4699      	mov	r9, r3
 800d9d2:	f000 fddf 	bl	800e594 <pvPortMalloc>
 800d9d6:	2800      	cmp	r0, #0
 800d9d8:	f000 80ac 	beq.w	800db34 <xTaskCreate+0x170>
 800d9dc:	4607      	mov	r7, r0
 800d9de:	2054      	movs	r0, #84	@ 0x54
 800d9e0:	f000 fdd8 	bl	800e594 <pvPortMalloc>
 800d9e4:	4604      	mov	r4, r0
 800d9e6:	2800      	cmp	r0, #0
 800d9e8:	f000 80a1 	beq.w	800db2e <xTaskCreate+0x16a>
 800d9ec:	3d04      	subs	r5, #4
 800d9ee:	443d      	add	r5, r7
 800d9f0:	6307      	str	r7, [r0, #48]	@ 0x30
 800d9f2:	f025 0507 	bic.w	r5, r5, #7
 800d9f6:	2e00      	cmp	r6, #0
 800d9f8:	f000 80af 	beq.w	800db5a <xTaskCreate+0x196>
 800d9fc:	7833      	ldrb	r3, [r6, #0]
 800d9fe:	f880 3034 	strb.w	r3, [r0, #52]	@ 0x34
 800da02:	2b00      	cmp	r3, #0
 800da04:	d036      	beq.n	800da74 <xTaskCreate+0xb0>
 800da06:	7873      	ldrb	r3, [r6, #1]
 800da08:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800da0c:	b393      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da0e:	78b3      	ldrb	r3, [r6, #2]
 800da10:	f880 3036 	strb.w	r3, [r0, #54]	@ 0x36
 800da14:	b373      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da16:	78f3      	ldrb	r3, [r6, #3]
 800da18:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800da1c:	b353      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da1e:	7933      	ldrb	r3, [r6, #4]
 800da20:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
 800da24:	b333      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da26:	7973      	ldrb	r3, [r6, #5]
 800da28:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 800da2c:	b313      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da2e:	79b3      	ldrb	r3, [r6, #6]
 800da30:	f880 303a 	strb.w	r3, [r0, #58]	@ 0x3a
 800da34:	b1f3      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da36:	79f3      	ldrb	r3, [r6, #7]
 800da38:	f880 303b 	strb.w	r3, [r0, #59]	@ 0x3b
 800da3c:	b1d3      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da3e:	7a33      	ldrb	r3, [r6, #8]
 800da40:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
 800da44:	b1b3      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da46:	7a73      	ldrb	r3, [r6, #9]
 800da48:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800da4c:	b193      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da4e:	7ab3      	ldrb	r3, [r6, #10]
 800da50:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
 800da54:	b173      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da56:	7af3      	ldrb	r3, [r6, #11]
 800da58:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
 800da5c:	b153      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da5e:	7b33      	ldrb	r3, [r6, #12]
 800da60:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
 800da64:	b133      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da66:	7b73      	ldrb	r3, [r6, #13]
 800da68:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
 800da6c:	b113      	cbz	r3, 800da74 <xTaskCreate+0xb0>
 800da6e:	7bb3      	ldrb	r3, [r6, #14]
 800da70:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
 800da74:	2300      	movs	r3, #0
 800da76:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800da7a:	9e08      	ldr	r6, [sp, #32]
 800da7c:	2e06      	cmp	r6, #6
 800da7e:	bf28      	it	cs
 800da80:	2606      	movcs	r6, #6
 800da82:	f04f 0a00 	mov.w	sl, #0
 800da86:	1d27      	adds	r7, r4, #4
 800da88:	62e6      	str	r6, [r4, #44]	@ 0x2c
 800da8a:	6466      	str	r6, [r4, #68]	@ 0x44
 800da8c:	4638      	mov	r0, r7
 800da8e:	f8c4 a048 	str.w	sl, [r4, #72]	@ 0x48
 800da92:	f7ff fd85 	bl	800d5a0 <vListInitialiseItem>
 800da96:	f1c6 0607 	rsb	r6, r6, #7
 800da9a:	f104 0018 	add.w	r0, r4, #24
 800da9e:	f7ff fd7f 	bl	800d5a0 <vListInitialiseItem>
 800daa2:	f8c4 a04c 	str.w	sl, [r4, #76]	@ 0x4c
 800daa6:	61a6      	str	r6, [r4, #24]
 800daa8:	f884 a050 	strb.w	sl, [r4, #80]	@ 0x50
 800daac:	6124      	str	r4, [r4, #16]
 800daae:	6264      	str	r4, [r4, #36]	@ 0x24
 800dab0:	464a      	mov	r2, r9
 800dab2:	4641      	mov	r1, r8
 800dab4:	4628      	mov	r0, r5
 800dab6:	f000 fbe1 	bl	800e27c <pxPortInitialiseStack>
 800daba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dabc:	6020      	str	r0, [r4, #0]
 800dabe:	b103      	cbz	r3, 800dac2 <xTaskCreate+0xfe>
 800dac0:	601c      	str	r4, [r3, #0]
 800dac2:	f000 fc07 	bl	800e2d4 <vPortEnterCritical>
 800dac6:	4a39      	ldr	r2, [pc, #228]	@ (800dbac <xTaskCreate+0x1e8>)
 800dac8:	4d39      	ldr	r5, [pc, #228]	@ (800dbb0 <xTaskCreate+0x1ec>)
 800daca:	6813      	ldr	r3, [r2, #0]
 800dacc:	3301      	adds	r3, #1
 800dace:	6013      	str	r3, [r2, #0]
 800dad0:	682b      	ldr	r3, [r5, #0]
 800dad2:	2b00      	cmp	r3, #0
 800dad4:	d038      	beq.n	800db48 <xTaskCreate+0x184>
 800dad6:	4e37      	ldr	r6, [pc, #220]	@ (800dbb4 <xTaskCreate+0x1f0>)
 800dad8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dada:	6833      	ldr	r3, [r6, #0]
 800dadc:	b373      	cbz	r3, 800db3c <xTaskCreate+0x178>
 800dade:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 800dbd8 <xTaskCreate+0x214>
 800dae2:	4a35      	ldr	r2, [pc, #212]	@ (800dbb8 <xTaskCreate+0x1f4>)
 800dae4:	4639      	mov	r1, r7
 800dae6:	4f35      	ldr	r7, [pc, #212]	@ (800dbbc <xTaskCreate+0x1f8>)
 800dae8:	683b      	ldr	r3, [r7, #0]
 800daea:	3301      	adds	r3, #1
 800daec:	603b      	str	r3, [r7, #0]
 800daee:	6817      	ldr	r7, [r2, #0]
 800daf0:	2301      	movs	r3, #1
 800daf2:	4083      	lsls	r3, r0
 800daf4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800daf8:	433b      	orrs	r3, r7
 800dafa:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800dafe:	6013      	str	r3, [r2, #0]
 800db00:	f7ff fd52 	bl	800d5a8 <vListInsertEnd>
 800db04:	f000 fc08 	bl	800e318 <vPortExitCritical>
 800db08:	6833      	ldr	r3, [r6, #0]
 800db0a:	b173      	cbz	r3, 800db2a <xTaskCreate+0x166>
 800db0c:	682a      	ldr	r2, [r5, #0]
 800db0e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800db10:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800db12:	429a      	cmp	r2, r3
 800db14:	d209      	bcs.n	800db2a <xTaskCreate+0x166>
 800db16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800db1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800db1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800db22:	f3bf 8f4f 	dsb	sy
 800db26:	f3bf 8f6f 	isb	sy
 800db2a:	2001      	movs	r0, #1
 800db2c:	e004      	b.n	800db38 <xTaskCreate+0x174>
 800db2e:	4638      	mov	r0, r7
 800db30:	f000 fdee 	bl	800e710 <vPortFree>
 800db34:	f04f 30ff 	mov.w	r0, #4294967295
 800db38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db3c:	682b      	ldr	r3, [r5, #0]
 800db3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db40:	4283      	cmp	r3, r0
 800db42:	bf98      	it	ls
 800db44:	602c      	strls	r4, [r5, #0]
 800db46:	e7ca      	b.n	800dade <xTaskCreate+0x11a>
 800db48:	602c      	str	r4, [r5, #0]
 800db4a:	6813      	ldr	r3, [r2, #0]
 800db4c:	2b01      	cmp	r3, #1
 800db4e:	d007      	beq.n	800db60 <xTaskCreate+0x19c>
 800db50:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800db52:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 800dbd8 <xTaskCreate+0x214>
 800db56:	4e17      	ldr	r6, [pc, #92]	@ (800dbb4 <xTaskCreate+0x1f0>)
 800db58:	e7c3      	b.n	800dae2 <xTaskCreate+0x11e>
 800db5a:	f880 6034 	strb.w	r6, [r0, #52]	@ 0x34
 800db5e:	e78c      	b.n	800da7a <xTaskCreate+0xb6>
 800db60:	f8df 8074 	ldr.w	r8, [pc, #116]	@ 800dbd8 <xTaskCreate+0x214>
 800db64:	4646      	mov	r6, r8
 800db66:	f108 098c 	add.w	r9, r8, #140	@ 0x8c
 800db6a:	4630      	mov	r0, r6
 800db6c:	3614      	adds	r6, #20
 800db6e:	f7ff fd0b 	bl	800d588 <vListInitialise>
 800db72:	45b1      	cmp	r9, r6
 800db74:	d1f9      	bne.n	800db6a <xTaskCreate+0x1a6>
 800db76:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 800dbdc <xTaskCreate+0x218>
 800db7a:	4e11      	ldr	r6, [pc, #68]	@ (800dbc0 <xTaskCreate+0x1fc>)
 800db7c:	4648      	mov	r0, r9
 800db7e:	f7ff fd03 	bl	800d588 <vListInitialise>
 800db82:	4630      	mov	r0, r6
 800db84:	f7ff fd00 	bl	800d588 <vListInitialise>
 800db88:	480e      	ldr	r0, [pc, #56]	@ (800dbc4 <xTaskCreate+0x200>)
 800db8a:	f7ff fcfd 	bl	800d588 <vListInitialise>
 800db8e:	480e      	ldr	r0, [pc, #56]	@ (800dbc8 <xTaskCreate+0x204>)
 800db90:	f7ff fcfa 	bl	800d588 <vListInitialise>
 800db94:	480d      	ldr	r0, [pc, #52]	@ (800dbcc <xTaskCreate+0x208>)
 800db96:	f7ff fcf7 	bl	800d588 <vListInitialise>
 800db9a:	4b0d      	ldr	r3, [pc, #52]	@ (800dbd0 <xTaskCreate+0x20c>)
 800db9c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800db9e:	f8c3 9000 	str.w	r9, [r3]
 800dba2:	4b0c      	ldr	r3, [pc, #48]	@ (800dbd4 <xTaskCreate+0x210>)
 800dba4:	601e      	str	r6, [r3, #0]
 800dba6:	4e03      	ldr	r6, [pc, #12]	@ (800dbb4 <xTaskCreate+0x1f0>)
 800dba8:	e79b      	b.n	800dae2 <xTaskCreate+0x11e>
 800dbaa:	bf00      	nop
 800dbac:	20001834 	.word	0x20001834
 800dbb0:	20001934 	.word	0x20001934
 800dbb4:	20001828 	.word	0x20001828
 800dbb8:	2000182c 	.word	0x2000182c
 800dbbc:	20001818 	.word	0x20001818
 800dbc0:	20001880 	.word	0x20001880
 800dbc4:	20001864 	.word	0x20001864
 800dbc8:	20001850 	.word	0x20001850
 800dbcc:	20001838 	.word	0x20001838
 800dbd0:	2000187c 	.word	0x2000187c
 800dbd4:	20001878 	.word	0x20001878
 800dbd8:	200018a8 	.word	0x200018a8
 800dbdc:	20001894 	.word	0x20001894

0800dbe0 <vTaskDelay>:
 800dbe0:	b510      	push	{r4, lr}
 800dbe2:	b950      	cbnz	r0, 800dbfa <vTaskDelay+0x1a>
 800dbe4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dbe8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dbec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dbf0:	f3bf 8f4f 	dsb	sy
 800dbf4:	f3bf 8f6f 	isb	sy
 800dbf8:	bd10      	pop	{r4, pc}
 800dbfa:	4c10      	ldr	r4, [pc, #64]	@ (800dc3c <vTaskDelay+0x5c>)
 800dbfc:	6821      	ldr	r1, [r4, #0]
 800dbfe:	b141      	cbz	r1, 800dc12 <vTaskDelay+0x32>
 800dc00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc04:	f383 8811 	msr	BASEPRI, r3
 800dc08:	f3bf 8f6f 	isb	sy
 800dc0c:	f3bf 8f4f 	dsb	sy
 800dc10:	e7fe      	b.n	800dc10 <vTaskDelay+0x30>
 800dc12:	6823      	ldr	r3, [r4, #0]
 800dc14:	3301      	adds	r3, #1
 800dc16:	6023      	str	r3, [r4, #0]
 800dc18:	f7ff fd36 	bl	800d688 <prvAddCurrentTaskToDelayedList>
 800dc1c:	6823      	ldr	r3, [r4, #0]
 800dc1e:	b943      	cbnz	r3, 800dc32 <vTaskDelay+0x52>
 800dc20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc24:	f383 8811 	msr	BASEPRI, r3
 800dc28:	f3bf 8f6f 	isb	sy
 800dc2c:	f3bf 8f4f 	dsb	sy
 800dc30:	e7fe      	b.n	800dc30 <vTaskDelay+0x50>
 800dc32:	f7ff fe21 	bl	800d878 <xTaskResumeAll.part.0>
 800dc36:	2800      	cmp	r0, #0
 800dc38:	d0d4      	beq.n	800dbe4 <vTaskDelay+0x4>
 800dc3a:	bd10      	pop	{r4, pc}
 800dc3c:	2000180c 	.word	0x2000180c

0800dc40 <vTaskPrioritySet>:
 800dc40:	2906      	cmp	r1, #6
 800dc42:	d908      	bls.n	800dc56 <vTaskPrioritySet+0x16>
 800dc44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc48:	f383 8811 	msr	BASEPRI, r3
 800dc4c:	f3bf 8f6f 	isb	sy
 800dc50:	f3bf 8f4f 	dsb	sy
 800dc54:	e7fe      	b.n	800dc54 <vTaskPrioritySet+0x14>
 800dc56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc5a:	4604      	mov	r4, r0
 800dc5c:	460d      	mov	r5, r1
 800dc5e:	f000 fb39 	bl	800e2d4 <vPortEnterCritical>
 800dc62:	2c00      	cmp	r4, #0
 800dc64:	d035      	beq.n	800dcd2 <vTaskPrioritySet+0x92>
 800dc66:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800dc68:	429d      	cmp	r5, r3
 800dc6a:	d02e      	beq.n	800dcca <vTaskPrioritySet+0x8a>
 800dc6c:	4a29      	ldr	r2, [pc, #164]	@ (800dd14 <vTaskPrioritySet+0xd4>)
 800dc6e:	d909      	bls.n	800dc84 <vTaskPrioritySet+0x44>
 800dc70:	6811      	ldr	r1, [r2, #0]
 800dc72:	42a1      	cmp	r1, r4
 800dc74:	d04b      	beq.n	800dd0e <vTaskPrioritySet+0xce>
 800dc76:	6812      	ldr	r2, [r2, #0]
 800dc78:	6ad7      	ldr	r7, [r2, #44]	@ 0x2c
 800dc7a:	42af      	cmp	r7, r5
 800dc7c:	bf8c      	ite	hi
 800dc7e:	2700      	movhi	r7, #0
 800dc80:	2701      	movls	r7, #1
 800dc82:	e004      	b.n	800dc8e <vTaskPrioritySet+0x4e>
 800dc84:	6817      	ldr	r7, [r2, #0]
 800dc86:	1b3f      	subs	r7, r7, r4
 800dc88:	fab7 f787 	clz	r7, r7
 800dc8c:	097f      	lsrs	r7, r7, #5
 800dc8e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800dc90:	6465      	str	r5, [r4, #68]	@ 0x44
 800dc92:	42b3      	cmp	r3, r6
 800dc94:	69a3      	ldr	r3, [r4, #24]
 800dc96:	bf08      	it	eq
 800dc98:	62e5      	streq	r5, [r4, #44]	@ 0x2c
 800dc9a:	2b00      	cmp	r3, #0
 800dc9c:	bfa4      	itt	ge
 800dc9e:	f1c5 0507 	rsbge	r5, r5, #7
 800dca2:	61a5      	strge	r5, [r4, #24]
 800dca4:	4d1c      	ldr	r5, [pc, #112]	@ (800dd18 <vTaskPrioritySet+0xd8>)
 800dca6:	6962      	ldr	r2, [r4, #20]
 800dca8:	eb06 0386 	add.w	r3, r6, r6, lsl #2
 800dcac:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800dcb0:	429a      	cmp	r2, r3
 800dcb2:	d011      	beq.n	800dcd8 <vTaskPrioritySet+0x98>
 800dcb4:	b14f      	cbz	r7, 800dcca <vTaskPrioritySet+0x8a>
 800dcb6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dcba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dcbe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dcc2:	f3bf 8f4f 	dsb	sy
 800dcc6:	f3bf 8f6f 	isb	sy
 800dcca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dcce:	f000 bb23 	b.w	800e318 <vPortExitCritical>
 800dcd2:	4b10      	ldr	r3, [pc, #64]	@ (800dd14 <vTaskPrioritySet+0xd4>)
 800dcd4:	681c      	ldr	r4, [r3, #0]
 800dcd6:	e7c6      	b.n	800dc66 <vTaskPrioritySet+0x26>
 800dcd8:	f104 0804 	add.w	r8, r4, #4
 800dcdc:	4640      	mov	r0, r8
 800dcde:	f7ff fc89 	bl	800d5f4 <uxListRemove>
 800dce2:	4b0e      	ldr	r3, [pc, #56]	@ (800dd1c <vTaskPrioritySet+0xdc>)
 800dce4:	b928      	cbnz	r0, 800dcf2 <vTaskPrioritySet+0xb2>
 800dce6:	681a      	ldr	r2, [r3, #0]
 800dce8:	2001      	movs	r0, #1
 800dcea:	40b0      	lsls	r0, r6
 800dcec:	ea22 0200 	bic.w	r2, r2, r0
 800dcf0:	601a      	str	r2, [r3, #0]
 800dcf2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dcf4:	681c      	ldr	r4, [r3, #0]
 800dcf6:	2201      	movs	r2, #1
 800dcf8:	4082      	lsls	r2, r0
 800dcfa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800dcfe:	4322      	orrs	r2, r4
 800dd00:	4641      	mov	r1, r8
 800dd02:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 800dd06:	601a      	str	r2, [r3, #0]
 800dd08:	f7ff fc4e 	bl	800d5a8 <vListInsertEnd>
 800dd0c:	e7d2      	b.n	800dcb4 <vTaskPrioritySet+0x74>
 800dd0e:	2700      	movs	r7, #0
 800dd10:	e7bd      	b.n	800dc8e <vTaskPrioritySet+0x4e>
 800dd12:	bf00      	nop
 800dd14:	20001934 	.word	0x20001934
 800dd18:	200018a8 	.word	0x200018a8
 800dd1c:	2000182c 	.word	0x2000182c

0800dd20 <vTaskResume>:
 800dd20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd22:	b178      	cbz	r0, 800dd44 <vTaskResume+0x24>
 800dd24:	4d20      	ldr	r5, [pc, #128]	@ (800dda8 <vTaskResume+0x88>)
 800dd26:	682b      	ldr	r3, [r5, #0]
 800dd28:	4283      	cmp	r3, r0
 800dd2a:	4604      	mov	r4, r0
 800dd2c:	d009      	beq.n	800dd42 <vTaskResume+0x22>
 800dd2e:	f000 fad1 	bl	800e2d4 <vPortEnterCritical>
 800dd32:	4b1e      	ldr	r3, [pc, #120]	@ (800ddac <vTaskResume+0x8c>)
 800dd34:	6962      	ldr	r2, [r4, #20]
 800dd36:	429a      	cmp	r2, r3
 800dd38:	d00d      	beq.n	800dd56 <vTaskResume+0x36>
 800dd3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dd3e:	f000 baeb 	b.w	800e318 <vPortExitCritical>
 800dd42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dd44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd48:	f383 8811 	msr	BASEPRI, r3
 800dd4c:	f3bf 8f6f 	isb	sy
 800dd50:	f3bf 8f4f 	dsb	sy
 800dd54:	e7fe      	b.n	800dd54 <vTaskResume+0x34>
 800dd56:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800dd58:	4a15      	ldr	r2, [pc, #84]	@ (800ddb0 <vTaskResume+0x90>)
 800dd5a:	4293      	cmp	r3, r2
 800dd5c:	d0ed      	beq.n	800dd3a <vTaskResume+0x1a>
 800dd5e:	2b00      	cmp	r3, #0
 800dd60:	d1eb      	bne.n	800dd3a <vTaskResume+0x1a>
 800dd62:	1d26      	adds	r6, r4, #4
 800dd64:	4630      	mov	r0, r6
 800dd66:	f7ff fc45 	bl	800d5f4 <uxListRemove>
 800dd6a:	4812      	ldr	r0, [pc, #72]	@ (800ddb4 <vTaskResume+0x94>)
 800dd6c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dd6e:	6807      	ldr	r7, [r0, #0]
 800dd70:	2201      	movs	r2, #1
 800dd72:	4631      	mov	r1, r6
 800dd74:	409a      	lsls	r2, r3
 800dd76:	4e10      	ldr	r6, [pc, #64]	@ (800ddb8 <vTaskResume+0x98>)
 800dd78:	433a      	orrs	r2, r7
 800dd7a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dd7e:	6002      	str	r2, [r0, #0]
 800dd80:	eb06 0083 	add.w	r0, r6, r3, lsl #2
 800dd84:	f7ff fc10 	bl	800d5a8 <vListInsertEnd>
 800dd88:	682b      	ldr	r3, [r5, #0]
 800dd8a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800dd8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dd8e:	429a      	cmp	r2, r3
 800dd90:	d3d3      	bcc.n	800dd3a <vTaskResume+0x1a>
 800dd92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dd96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dd9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dd9e:	f3bf 8f4f 	dsb	sy
 800dda2:	f3bf 8f6f 	isb	sy
 800dda6:	e7c8      	b.n	800dd3a <vTaskResume+0x1a>
 800dda8:	20001934 	.word	0x20001934
 800ddac:	20001838 	.word	0x20001838
 800ddb0:	20001864 	.word	0x20001864
 800ddb4:	2000182c 	.word	0x2000182c
 800ddb8:	200018a8 	.word	0x200018a8

0800ddbc <xTaskResumeFromISR>:
 800ddbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ddbe:	b1d0      	cbz	r0, 800ddf6 <xTaskResumeFromISR+0x3a>
 800ddc0:	4604      	mov	r4, r0
 800ddc2:	f000 fbb9 	bl	800e538 <vPortValidateInterruptPriority>
 800ddc6:	f3ef 8511 	mrs	r5, BASEPRI
 800ddca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ddce:	f383 8811 	msr	BASEPRI, r3
 800ddd2:	f3bf 8f6f 	isb	sy
 800ddd6:	f3bf 8f4f 	dsb	sy
 800ddda:	4b1d      	ldr	r3, [pc, #116]	@ (800de50 <xTaskResumeFromISR+0x94>)
 800dddc:	6962      	ldr	r2, [r4, #20]
 800ddde:	429a      	cmp	r2, r3
 800dde0:	d104      	bne.n	800ddec <xTaskResumeFromISR+0x30>
 800dde2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800dde4:	481b      	ldr	r0, [pc, #108]	@ (800de54 <xTaskResumeFromISR+0x98>)
 800dde6:	4283      	cmp	r3, r0
 800dde8:	d000      	beq.n	800ddec <xTaskResumeFromISR+0x30>
 800ddea:	b16b      	cbz	r3, 800de08 <xTaskResumeFromISR+0x4c>
 800ddec:	2600      	movs	r6, #0
 800ddee:	f385 8811 	msr	BASEPRI, r5
 800ddf2:	4630      	mov	r0, r6
 800ddf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ddf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ddfa:	f383 8811 	msr	BASEPRI, r3
 800ddfe:	f3bf 8f6f 	isb	sy
 800de02:	f3bf 8f4f 	dsb	sy
 800de06:	e7fe      	b.n	800de06 <xTaskResumeFromISR+0x4a>
 800de08:	4b13      	ldr	r3, [pc, #76]	@ (800de58 <xTaskResumeFromISR+0x9c>)
 800de0a:	681b      	ldr	r3, [r3, #0]
 800de0c:	b9db      	cbnz	r3, 800de46 <xTaskResumeFromISR+0x8a>
 800de0e:	4b13      	ldr	r3, [pc, #76]	@ (800de5c <xTaskResumeFromISR+0xa0>)
 800de10:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800de12:	681b      	ldr	r3, [r3, #0]
 800de14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de16:	1d27      	adds	r7, r4, #4
 800de18:	429e      	cmp	r6, r3
 800de1a:	4638      	mov	r0, r7
 800de1c:	bf34      	ite	cc
 800de1e:	2600      	movcc	r6, #0
 800de20:	2601      	movcs	r6, #1
 800de22:	f7ff fbe7 	bl	800d5f4 <uxListRemove>
 800de26:	480e      	ldr	r0, [pc, #56]	@ (800de60 <xTaskResumeFromISR+0xa4>)
 800de28:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800de2a:	4c0e      	ldr	r4, [pc, #56]	@ (800de64 <xTaskResumeFromISR+0xa8>)
 800de2c:	4639      	mov	r1, r7
 800de2e:	2201      	movs	r2, #1
 800de30:	6807      	ldr	r7, [r0, #0]
 800de32:	409a      	lsls	r2, r3
 800de34:	433a      	orrs	r2, r7
 800de36:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800de3a:	6002      	str	r2, [r0, #0]
 800de3c:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 800de40:	f7ff fbb2 	bl	800d5a8 <vListInsertEnd>
 800de44:	e7d3      	b.n	800ddee <xTaskResumeFromISR+0x32>
 800de46:	f104 0118 	add.w	r1, r4, #24
 800de4a:	f7ff fbad 	bl	800d5a8 <vListInsertEnd>
 800de4e:	e7cd      	b.n	800ddec <xTaskResumeFromISR+0x30>
 800de50:	20001838 	.word	0x20001838
 800de54:	20001864 	.word	0x20001864
 800de58:	2000180c 	.word	0x2000180c
 800de5c:	20001934 	.word	0x20001934
 800de60:	2000182c 	.word	0x2000182c
 800de64:	200018a8 	.word	0x200018a8

0800de68 <vTaskStartScheduler>:
 800de68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800de6c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800de70:	f000 fb90 	bl	800e594 <pvPortMalloc>
 800de74:	2800      	cmp	r0, #0
 800de76:	d07e      	beq.n	800df76 <vTaskStartScheduler+0x10e>
 800de78:	4605      	mov	r5, r0
 800de7a:	2054      	movs	r0, #84	@ 0x54
 800de7c:	f000 fb8a 	bl	800e594 <pvPortMalloc>
 800de80:	4604      	mov	r4, r0
 800de82:	2800      	cmp	r0, #0
 800de84:	d074      	beq.n	800df70 <vTaskStartScheduler+0x108>
 800de86:	4a59      	ldr	r2, [pc, #356]	@ (800dfec <vTaskStartScheduler+0x184>)
 800de88:	2600      	movs	r6, #0
 800de8a:	f100 0804 	add.w	r8, r0, #4
 800de8e:	e9c0 520c 	strd	r5, r2, [r0, #48]	@ 0x30
 800de92:	f505 73fe 	add.w	r3, r5, #508	@ 0x1fc
 800de96:	e9c0 6611 	strd	r6, r6, [r0, #68]	@ 0x44
 800de9a:	f880 6038 	strb.w	r6, [r0, #56]	@ 0x38
 800de9e:	f880 6043 	strb.w	r6, [r0, #67]	@ 0x43
 800dea2:	62c6      	str	r6, [r0, #44]	@ 0x2c
 800dea4:	4640      	mov	r0, r8
 800dea6:	f023 0507 	bic.w	r5, r3, #7
 800deaa:	f7ff fb79 	bl	800d5a0 <vListInitialiseItem>
 800deae:	f104 0018 	add.w	r0, r4, #24
 800deb2:	f7ff fb75 	bl	800d5a0 <vListInitialiseItem>
 800deb6:	2307      	movs	r3, #7
 800deb8:	4632      	mov	r2, r6
 800deba:	64e6      	str	r6, [r4, #76]	@ 0x4c
 800debc:	494c      	ldr	r1, [pc, #304]	@ (800dff0 <vTaskStartScheduler+0x188>)
 800debe:	61a3      	str	r3, [r4, #24]
 800dec0:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 800dec4:	6124      	str	r4, [r4, #16]
 800dec6:	6264      	str	r4, [r4, #36]	@ 0x24
 800dec8:	4628      	mov	r0, r5
 800deca:	f000 f9d7 	bl	800e27c <pxPortInitialiseStack>
 800dece:	4b49      	ldr	r3, [pc, #292]	@ (800dff4 <vTaskStartScheduler+0x18c>)
 800ded0:	6020      	str	r0, [r4, #0]
 800ded2:	601c      	str	r4, [r3, #0]
 800ded4:	f000 f9fe 	bl	800e2d4 <vPortEnterCritical>
 800ded8:	4a47      	ldr	r2, [pc, #284]	@ (800dff8 <vTaskStartScheduler+0x190>)
 800deda:	4e48      	ldr	r6, [pc, #288]	@ (800dffc <vTaskStartScheduler+0x194>)
 800dedc:	6813      	ldr	r3, [r2, #0]
 800dede:	3301      	adds	r3, #1
 800dee0:	6013      	str	r3, [r2, #0]
 800dee2:	6833      	ldr	r3, [r6, #0]
 800dee4:	2b00      	cmp	r3, #0
 800dee6:	d055      	beq.n	800df94 <vTaskStartScheduler+0x12c>
 800dee8:	4d45      	ldr	r5, [pc, #276]	@ (800e000 <vTaskStartScheduler+0x198>)
 800deea:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800deec:	682b      	ldr	r3, [r5, #0]
 800deee:	2b00      	cmp	r3, #0
 800def0:	d04a      	beq.n	800df88 <vTaskStartScheduler+0x120>
 800def2:	4f44      	ldr	r7, [pc, #272]	@ (800e004 <vTaskStartScheduler+0x19c>)
 800def4:	f8df c134 	ldr.w	ip, [pc, #308]	@ 800e02c <vTaskStartScheduler+0x1c4>
 800def8:	4a43      	ldr	r2, [pc, #268]	@ (800e008 <vTaskStartScheduler+0x1a0>)
 800defa:	f8dc 3000 	ldr.w	r3, [ip]
 800defe:	3301      	adds	r3, #1
 800df00:	f8cc 3000 	str.w	r3, [ip]
 800df04:	f8d2 c000 	ldr.w	ip, [r2]
 800df08:	2301      	movs	r3, #1
 800df0a:	4083      	lsls	r3, r0
 800df0c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800df10:	ea43 030c 	orr.w	r3, r3, ip
 800df14:	4641      	mov	r1, r8
 800df16:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800df1a:	6013      	str	r3, [r2, #0]
 800df1c:	f7ff fb44 	bl	800d5a8 <vListInsertEnd>
 800df20:	f000 f9fa 	bl	800e318 <vPortExitCritical>
 800df24:	682b      	ldr	r3, [r5, #0]
 800df26:	b173      	cbz	r3, 800df46 <vTaskStartScheduler+0xde>
 800df28:	6832      	ldr	r2, [r6, #0]
 800df2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800df2c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800df2e:	429a      	cmp	r2, r3
 800df30:	d209      	bcs.n	800df46 <vTaskStartScheduler+0xde>
 800df32:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800df36:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800df3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800df3e:	f3bf 8f4f 	dsb	sy
 800df42:	f3bf 8f6f 	isb	sy
 800df46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df4a:	f383 8811 	msr	BASEPRI, r3
 800df4e:	f3bf 8f6f 	isb	sy
 800df52:	f3bf 8f4f 	dsb	sy
 800df56:	4a2d      	ldr	r2, [pc, #180]	@ (800e00c <vTaskStartScheduler+0x1a4>)
 800df58:	4b2d      	ldr	r3, [pc, #180]	@ (800e010 <vTaskStartScheduler+0x1a8>)
 800df5a:	f04f 30ff 	mov.w	r0, #4294967295
 800df5e:	6010      	str	r0, [r2, #0]
 800df60:	2101      	movs	r1, #1
 800df62:	2200      	movs	r2, #0
 800df64:	6029      	str	r1, [r5, #0]
 800df66:	601a      	str	r2, [r3, #0]
 800df68:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df6c:	f000 ba44 	b.w	800e3f8 <xPortStartScheduler>
 800df70:	4628      	mov	r0, r5
 800df72:	f000 fbcd 	bl	800e710 <vPortFree>
 800df76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df7a:	f383 8811 	msr	BASEPRI, r3
 800df7e:	f3bf 8f6f 	isb	sy
 800df82:	f3bf 8f4f 	dsb	sy
 800df86:	e7fe      	b.n	800df86 <vTaskStartScheduler+0x11e>
 800df88:	6833      	ldr	r3, [r6, #0]
 800df8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800df8c:	4283      	cmp	r3, r0
 800df8e:	bf98      	it	ls
 800df90:	6034      	strls	r4, [r6, #0]
 800df92:	e7ae      	b.n	800def2 <vTaskStartScheduler+0x8a>
 800df94:	6034      	str	r4, [r6, #0]
 800df96:	6813      	ldr	r3, [r2, #0]
 800df98:	2b01      	cmp	r3, #1
 800df9a:	d003      	beq.n	800dfa4 <vTaskStartScheduler+0x13c>
 800df9c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800df9e:	4f19      	ldr	r7, [pc, #100]	@ (800e004 <vTaskStartScheduler+0x19c>)
 800dfa0:	4d17      	ldr	r5, [pc, #92]	@ (800e000 <vTaskStartScheduler+0x198>)
 800dfa2:	e7a7      	b.n	800def4 <vTaskStartScheduler+0x8c>
 800dfa4:	4f17      	ldr	r7, [pc, #92]	@ (800e004 <vTaskStartScheduler+0x19c>)
 800dfa6:	463d      	mov	r5, r7
 800dfa8:	f107 098c 	add.w	r9, r7, #140	@ 0x8c
 800dfac:	4628      	mov	r0, r5
 800dfae:	3514      	adds	r5, #20
 800dfb0:	f7ff faea 	bl	800d588 <vListInitialise>
 800dfb4:	454d      	cmp	r5, r9
 800dfb6:	d1f9      	bne.n	800dfac <vTaskStartScheduler+0x144>
 800dfb8:	f8df 9074 	ldr.w	r9, [pc, #116]	@ 800e030 <vTaskStartScheduler+0x1c8>
 800dfbc:	4d15      	ldr	r5, [pc, #84]	@ (800e014 <vTaskStartScheduler+0x1ac>)
 800dfbe:	4648      	mov	r0, r9
 800dfc0:	f7ff fae2 	bl	800d588 <vListInitialise>
 800dfc4:	4628      	mov	r0, r5
 800dfc6:	f7ff fadf 	bl	800d588 <vListInitialise>
 800dfca:	4813      	ldr	r0, [pc, #76]	@ (800e018 <vTaskStartScheduler+0x1b0>)
 800dfcc:	f7ff fadc 	bl	800d588 <vListInitialise>
 800dfd0:	4812      	ldr	r0, [pc, #72]	@ (800e01c <vTaskStartScheduler+0x1b4>)
 800dfd2:	f7ff fad9 	bl	800d588 <vListInitialise>
 800dfd6:	4812      	ldr	r0, [pc, #72]	@ (800e020 <vTaskStartScheduler+0x1b8>)
 800dfd8:	f7ff fad6 	bl	800d588 <vListInitialise>
 800dfdc:	4b11      	ldr	r3, [pc, #68]	@ (800e024 <vTaskStartScheduler+0x1bc>)
 800dfde:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dfe0:	f8c3 9000 	str.w	r9, [r3]
 800dfe4:	4b10      	ldr	r3, [pc, #64]	@ (800e028 <vTaskStartScheduler+0x1c0>)
 800dfe6:	601d      	str	r5, [r3, #0]
 800dfe8:	4d05      	ldr	r5, [pc, #20]	@ (800e000 <vTaskStartScheduler+0x198>)
 800dfea:	e783      	b.n	800def4 <vTaskStartScheduler+0x8c>
 800dfec:	454c4449 	.word	0x454c4449
 800dff0:	0800d61d 	.word	0x0800d61d
 800dff4:	20001810 	.word	0x20001810
 800dff8:	20001834 	.word	0x20001834
 800dffc:	20001934 	.word	0x20001934
 800e000:	20001828 	.word	0x20001828
 800e004:	200018a8 	.word	0x200018a8
 800e008:	2000182c 	.word	0x2000182c
 800e00c:	20001814 	.word	0x20001814
 800e010:	20001830 	.word	0x20001830
 800e014:	20001880 	.word	0x20001880
 800e018:	20001864 	.word	0x20001864
 800e01c:	20001850 	.word	0x20001850
 800e020:	20001838 	.word	0x20001838
 800e024:	2000187c 	.word	0x2000187c
 800e028:	20001878 	.word	0x20001878
 800e02c:	20001818 	.word	0x20001818
 800e030:	20001894 	.word	0x20001894

0800e034 <vTaskSuspendAll>:
 800e034:	4a02      	ldr	r2, [pc, #8]	@ (800e040 <vTaskSuspendAll+0xc>)
 800e036:	6813      	ldr	r3, [r2, #0]
 800e038:	3301      	adds	r3, #1
 800e03a:	6013      	str	r3, [r2, #0]
 800e03c:	4770      	bx	lr
 800e03e:	bf00      	nop
 800e040:	2000180c 	.word	0x2000180c

0800e044 <xTaskResumeAll>:
 800e044:	4b06      	ldr	r3, [pc, #24]	@ (800e060 <xTaskResumeAll+0x1c>)
 800e046:	681b      	ldr	r3, [r3, #0]
 800e048:	b943      	cbnz	r3, 800e05c <xTaskResumeAll+0x18>
 800e04a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e04e:	f383 8811 	msr	BASEPRI, r3
 800e052:	f3bf 8f6f 	isb	sy
 800e056:	f3bf 8f4f 	dsb	sy
 800e05a:	e7fe      	b.n	800e05a <xTaskResumeAll+0x16>
 800e05c:	f7ff bc0c 	b.w	800d878 <xTaskResumeAll.part.0>
 800e060:	2000180c 	.word	0x2000180c

0800e064 <xTaskIncrementTick>:
 800e064:	4b05      	ldr	r3, [pc, #20]	@ (800e07c <xTaskIncrementTick+0x18>)
 800e066:	681b      	ldr	r3, [r3, #0]
 800e068:	b90b      	cbnz	r3, 800e06e <xTaskIncrementTick+0xa>
 800e06a:	f7ff bb5f 	b.w	800d72c <xTaskIncrementTick.part.0>
 800e06e:	4a04      	ldr	r2, [pc, #16]	@ (800e080 <xTaskIncrementTick+0x1c>)
 800e070:	6813      	ldr	r3, [r2, #0]
 800e072:	3301      	adds	r3, #1
 800e074:	2000      	movs	r0, #0
 800e076:	6013      	str	r3, [r2, #0]
 800e078:	4770      	bx	lr
 800e07a:	bf00      	nop
 800e07c:	2000180c 	.word	0x2000180c
 800e080:	20001824 	.word	0x20001824

0800e084 <vTaskSwitchContext>:
 800e084:	4b16      	ldr	r3, [pc, #88]	@ (800e0e0 <vTaskSwitchContext+0x5c>)
 800e086:	681b      	ldr	r3, [r3, #0]
 800e088:	b11b      	cbz	r3, 800e092 <vTaskSwitchContext+0xe>
 800e08a:	4b16      	ldr	r3, [pc, #88]	@ (800e0e4 <vTaskSwitchContext+0x60>)
 800e08c:	2201      	movs	r2, #1
 800e08e:	601a      	str	r2, [r3, #0]
 800e090:	4770      	bx	lr
 800e092:	4914      	ldr	r1, [pc, #80]	@ (800e0e4 <vTaskSwitchContext+0x60>)
 800e094:	4a14      	ldr	r2, [pc, #80]	@ (800e0e8 <vTaskSwitchContext+0x64>)
 800e096:	600b      	str	r3, [r1, #0]
 800e098:	6813      	ldr	r3, [r2, #0]
 800e09a:	fab3 f383 	clz	r3, r3
 800e09e:	b2db      	uxtb	r3, r3
 800e0a0:	f1c3 031f 	rsb	r3, r3, #31
 800e0a4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e0a8:	4910      	ldr	r1, [pc, #64]	@ (800e0ec <vTaskSwitchContext+0x68>)
 800e0aa:	009a      	lsls	r2, r3, #2
 800e0ac:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800e0b0:	5888      	ldr	r0, [r1, r2]
 800e0b2:	b940      	cbnz	r0, 800e0c6 <vTaskSwitchContext+0x42>
 800e0b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e0b8:	f383 8811 	msr	BASEPRI, r3
 800e0bc:	f3bf 8f6f 	isb	sy
 800e0c0:	f3bf 8f4f 	dsb	sy
 800e0c4:	e7fe      	b.n	800e0c4 <vTaskSwitchContext+0x40>
 800e0c6:	6858      	ldr	r0, [r3, #4]
 800e0c8:	3208      	adds	r2, #8
 800e0ca:	6840      	ldr	r0, [r0, #4]
 800e0cc:	6058      	str	r0, [r3, #4]
 800e0ce:	440a      	add	r2, r1
 800e0d0:	4290      	cmp	r0, r2
 800e0d2:	bf04      	itt	eq
 800e0d4:	6840      	ldreq	r0, [r0, #4]
 800e0d6:	6058      	streq	r0, [r3, #4]
 800e0d8:	4b05      	ldr	r3, [pc, #20]	@ (800e0f0 <vTaskSwitchContext+0x6c>)
 800e0da:	68c2      	ldr	r2, [r0, #12]
 800e0dc:	601a      	str	r2, [r3, #0]
 800e0de:	4770      	bx	lr
 800e0e0:	2000180c 	.word	0x2000180c
 800e0e4:	20001820 	.word	0x20001820
 800e0e8:	2000182c 	.word	0x2000182c
 800e0ec:	200018a8 	.word	0x200018a8
 800e0f0:	20001934 	.word	0x20001934

0800e0f4 <vTaskSuspend>:
 800e0f4:	b570      	push	{r4, r5, r6, lr}
 800e0f6:	4604      	mov	r4, r0
 800e0f8:	4e38      	ldr	r6, [pc, #224]	@ (800e1dc <vTaskSuspend+0xe8>)
 800e0fa:	f000 f8eb 	bl	800e2d4 <vPortEnterCritical>
 800e0fe:	2c00      	cmp	r4, #0
 800e100:	d04d      	beq.n	800e19e <vTaskSuspend+0xaa>
 800e102:	1d25      	adds	r5, r4, #4
 800e104:	4628      	mov	r0, r5
 800e106:	f7ff fa75 	bl	800d5f4 <uxListRemove>
 800e10a:	b930      	cbnz	r0, 800e11a <vTaskSuspend+0x26>
 800e10c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e10e:	4934      	ldr	r1, [pc, #208]	@ (800e1e0 <vTaskSuspend+0xec>)
 800e110:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800e114:	009b      	lsls	r3, r3, #2
 800e116:	58cb      	ldr	r3, [r1, r3]
 800e118:	b34b      	cbz	r3, 800e16e <vTaskSuspend+0x7a>
 800e11a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e11c:	b11b      	cbz	r3, 800e126 <vTaskSuspend+0x32>
 800e11e:	f104 0018 	add.w	r0, r4, #24
 800e122:	f7ff fa67 	bl	800d5f4 <uxListRemove>
 800e126:	4629      	mov	r1, r5
 800e128:	482e      	ldr	r0, [pc, #184]	@ (800e1e4 <vTaskSuspend+0xf0>)
 800e12a:	4d2f      	ldr	r5, [pc, #188]	@ (800e1e8 <vTaskSuspend+0xf4>)
 800e12c:	f7ff fa3c 	bl	800d5a8 <vListInsertEnd>
 800e130:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800e134:	2b01      	cmp	r3, #1
 800e136:	bf04      	itt	eq
 800e138:	2300      	moveq	r3, #0
 800e13a:	f884 3050 	strbeq.w	r3, [r4, #80]	@ 0x50
 800e13e:	f000 f8eb 	bl	800e318 <vPortExitCritical>
 800e142:	682b      	ldr	r3, [r5, #0]
 800e144:	b9e3      	cbnz	r3, 800e180 <vTaskSuspend+0x8c>
 800e146:	6833      	ldr	r3, [r6, #0]
 800e148:	42a3      	cmp	r3, r4
 800e14a:	d000      	beq.n	800e14e <vTaskSuspend+0x5a>
 800e14c:	bd70      	pop	{r4, r5, r6, pc}
 800e14e:	682b      	ldr	r3, [r5, #0]
 800e150:	2b00      	cmp	r3, #0
 800e152:	d02b      	beq.n	800e1ac <vTaskSuspend+0xb8>
 800e154:	4b25      	ldr	r3, [pc, #148]	@ (800e1ec <vTaskSuspend+0xf8>)
 800e156:	681b      	ldr	r3, [r3, #0]
 800e158:	2b00      	cmp	r3, #0
 800e15a:	d02f      	beq.n	800e1bc <vTaskSuspend+0xc8>
 800e15c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e160:	f383 8811 	msr	BASEPRI, r3
 800e164:	f3bf 8f6f 	isb	sy
 800e168:	f3bf 8f4f 	dsb	sy
 800e16c:	e7fe      	b.n	800e16c <vTaskSuspend+0x78>
 800e16e:	4920      	ldr	r1, [pc, #128]	@ (800e1f0 <vTaskSuspend+0xfc>)
 800e170:	2301      	movs	r3, #1
 800e172:	fa03 f202 	lsl.w	r2, r3, r2
 800e176:	680b      	ldr	r3, [r1, #0]
 800e178:	ea23 0302 	bic.w	r3, r3, r2
 800e17c:	600b      	str	r3, [r1, #0]
 800e17e:	e7cc      	b.n	800e11a <vTaskSuspend+0x26>
 800e180:	f000 f8a8 	bl	800e2d4 <vPortEnterCritical>
 800e184:	4b1b      	ldr	r3, [pc, #108]	@ (800e1f4 <vTaskSuspend+0x100>)
 800e186:	681a      	ldr	r2, [r3, #0]
 800e188:	6812      	ldr	r2, [r2, #0]
 800e18a:	b152      	cbz	r2, 800e1a2 <vTaskSuspend+0xae>
 800e18c:	681a      	ldr	r2, [r3, #0]
 800e18e:	4b1a      	ldr	r3, [pc, #104]	@ (800e1f8 <vTaskSuspend+0x104>)
 800e190:	68d2      	ldr	r2, [r2, #12]
 800e192:	68d2      	ldr	r2, [r2, #12]
 800e194:	6852      	ldr	r2, [r2, #4]
 800e196:	601a      	str	r2, [r3, #0]
 800e198:	f000 f8be 	bl	800e318 <vPortExitCritical>
 800e19c:	e7d3      	b.n	800e146 <vTaskSuspend+0x52>
 800e19e:	6834      	ldr	r4, [r6, #0]
 800e1a0:	e7af      	b.n	800e102 <vTaskSuspend+0xe>
 800e1a2:	4b15      	ldr	r3, [pc, #84]	@ (800e1f8 <vTaskSuspend+0x104>)
 800e1a4:	f04f 32ff 	mov.w	r2, #4294967295
 800e1a8:	601a      	str	r2, [r3, #0]
 800e1aa:	e7f5      	b.n	800e198 <vTaskSuspend+0xa4>
 800e1ac:	490d      	ldr	r1, [pc, #52]	@ (800e1e4 <vTaskSuspend+0xf0>)
 800e1ae:	4a13      	ldr	r2, [pc, #76]	@ (800e1fc <vTaskSuspend+0x108>)
 800e1b0:	6809      	ldr	r1, [r1, #0]
 800e1b2:	6812      	ldr	r2, [r2, #0]
 800e1b4:	4291      	cmp	r1, r2
 800e1b6:	d10c      	bne.n	800e1d2 <vTaskSuspend+0xde>
 800e1b8:	6033      	str	r3, [r6, #0]
 800e1ba:	bd70      	pop	{r4, r5, r6, pc}
 800e1bc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e1c0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e1c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e1c8:	f3bf 8f4f 	dsb	sy
 800e1cc:	f3bf 8f6f 	isb	sy
 800e1d0:	bd70      	pop	{r4, r5, r6, pc}
 800e1d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1d6:	f7ff bf55 	b.w	800e084 <vTaskSwitchContext>
 800e1da:	bf00      	nop
 800e1dc:	20001934 	.word	0x20001934
 800e1e0:	200018a8 	.word	0x200018a8
 800e1e4:	20001838 	.word	0x20001838
 800e1e8:	20001828 	.word	0x20001828
 800e1ec:	2000180c 	.word	0x2000180c
 800e1f0:	2000182c 	.word	0x2000182c
 800e1f4:	2000187c 	.word	0x2000187c
 800e1f8:	20001814 	.word	0x20001814
 800e1fc:	20001834 	.word	0x20001834

0800e200 <prvPortStartFirstTask>:
 800e200:	4808      	ldr	r0, [pc, #32]	@ (800e224 <prvPortStartFirstTask+0x24>)
 800e202:	6800      	ldr	r0, [r0, #0]
 800e204:	6800      	ldr	r0, [r0, #0]
 800e206:	f380 8808 	msr	MSP, r0
 800e20a:	f04f 0000 	mov.w	r0, #0
 800e20e:	f380 8814 	msr	CONTROL, r0
 800e212:	b662      	cpsie	i
 800e214:	b661      	cpsie	f
 800e216:	f3bf 8f4f 	dsb	sy
 800e21a:	f3bf 8f6f 	isb	sy
 800e21e:	df00      	svc	0
 800e220:	bf00      	nop
 800e222:	0000      	.short	0x0000
 800e224:	e000ed08 	.word	0xe000ed08

0800e228 <vPortEnableVFP>:
 800e228:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800e238 <vPortEnableVFP+0x10>
 800e22c:	6801      	ldr	r1, [r0, #0]
 800e22e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800e232:	6001      	str	r1, [r0, #0]
 800e234:	4770      	bx	lr
 800e236:	0000      	.short	0x0000
 800e238:	e000ed88 	.word	0xe000ed88

0800e23c <prvTaskExitError>:
 800e23c:	4b0e      	ldr	r3, [pc, #56]	@ (800e278 <prvTaskExitError+0x3c>)
 800e23e:	681b      	ldr	r3, [r3, #0]
 800e240:	b082      	sub	sp, #8
 800e242:	2200      	movs	r2, #0
 800e244:	3301      	adds	r3, #1
 800e246:	9201      	str	r2, [sp, #4]
 800e248:	d008      	beq.n	800e25c <prvTaskExitError+0x20>
 800e24a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e24e:	f383 8811 	msr	BASEPRI, r3
 800e252:	f3bf 8f6f 	isb	sy
 800e256:	f3bf 8f4f 	dsb	sy
 800e25a:	e7fe      	b.n	800e25a <prvTaskExitError+0x1e>
 800e25c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e260:	f383 8811 	msr	BASEPRI, r3
 800e264:	f3bf 8f6f 	isb	sy
 800e268:	f3bf 8f4f 	dsb	sy
 800e26c:	9b01      	ldr	r3, [sp, #4]
 800e26e:	2b00      	cmp	r3, #0
 800e270:	d0fc      	beq.n	800e26c <prvTaskExitError+0x30>
 800e272:	b002      	add	sp, #8
 800e274:	4770      	bx	lr
 800e276:	bf00      	nop
 800e278:	200000c8 	.word	0x200000c8

0800e27c <pxPortInitialiseStack>:
 800e27c:	b410      	push	{r4}
 800e27e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800e282:	4c07      	ldr	r4, [pc, #28]	@ (800e2a0 <pxPortInitialiseStack+0x24>)
 800e284:	f840 3c04 	str.w	r3, [r0, #-4]
 800e288:	f021 0101 	bic.w	r1, r1, #1
 800e28c:	f06f 0302 	mvn.w	r3, #2
 800e290:	e940 4103 	strd	r4, r1, [r0, #-12]
 800e294:	e940 3209 	strd	r3, r2, [r0, #-36]	@ 0x24
 800e298:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e29c:	3844      	subs	r0, #68	@ 0x44
 800e29e:	4770      	bx	lr
 800e2a0:	0800e23d 	.word	0x0800e23d
	...

0800e2b0 <SVC_Handler>:
 800e2b0:	4b07      	ldr	r3, [pc, #28]	@ (800e2d0 <pxCurrentTCBConst2>)
 800e2b2:	6819      	ldr	r1, [r3, #0]
 800e2b4:	6808      	ldr	r0, [r1, #0]
 800e2b6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2ba:	f380 8809 	msr	PSP, r0
 800e2be:	f3bf 8f6f 	isb	sy
 800e2c2:	f04f 0000 	mov.w	r0, #0
 800e2c6:	f380 8811 	msr	BASEPRI, r0
 800e2ca:	4770      	bx	lr
 800e2cc:	f3af 8000 	nop.w

0800e2d0 <pxCurrentTCBConst2>:
 800e2d0:	20001934 	.word	0x20001934

0800e2d4 <vPortEnterCritical>:
 800e2d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e2d8:	f383 8811 	msr	BASEPRI, r3
 800e2dc:	f3bf 8f6f 	isb	sy
 800e2e0:	f3bf 8f4f 	dsb	sy
 800e2e4:	4a0b      	ldr	r2, [pc, #44]	@ (800e314 <vPortEnterCritical+0x40>)
 800e2e6:	6813      	ldr	r3, [r2, #0]
 800e2e8:	3301      	adds	r3, #1
 800e2ea:	2b01      	cmp	r3, #1
 800e2ec:	6013      	str	r3, [r2, #0]
 800e2ee:	d000      	beq.n	800e2f2 <vPortEnterCritical+0x1e>
 800e2f0:	4770      	bx	lr
 800e2f2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e2f6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800e2fa:	b2db      	uxtb	r3, r3
 800e2fc:	2b00      	cmp	r3, #0
 800e2fe:	d0f7      	beq.n	800e2f0 <vPortEnterCritical+0x1c>
 800e300:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e304:	f383 8811 	msr	BASEPRI, r3
 800e308:	f3bf 8f6f 	isb	sy
 800e30c:	f3bf 8f4f 	dsb	sy
 800e310:	e7fe      	b.n	800e310 <vPortEnterCritical+0x3c>
 800e312:	bf00      	nop
 800e314:	200000c8 	.word	0x200000c8

0800e318 <vPortExitCritical>:
 800e318:	4a08      	ldr	r2, [pc, #32]	@ (800e33c <vPortExitCritical+0x24>)
 800e31a:	6813      	ldr	r3, [r2, #0]
 800e31c:	b943      	cbnz	r3, 800e330 <vPortExitCritical+0x18>
 800e31e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e322:	f383 8811 	msr	BASEPRI, r3
 800e326:	f3bf 8f6f 	isb	sy
 800e32a:	f3bf 8f4f 	dsb	sy
 800e32e:	e7fe      	b.n	800e32e <vPortExitCritical+0x16>
 800e330:	3b01      	subs	r3, #1
 800e332:	6013      	str	r3, [r2, #0]
 800e334:	b90b      	cbnz	r3, 800e33a <vPortExitCritical+0x22>
 800e336:	f383 8811 	msr	BASEPRI, r3
 800e33a:	4770      	bx	lr
 800e33c:	200000c8 	.word	0x200000c8

0800e340 <PendSV_Handler>:
 800e340:	f3ef 8009 	mrs	r0, PSP
 800e344:	f3bf 8f6f 	isb	sy
 800e348:	4b15      	ldr	r3, [pc, #84]	@ (800e3a0 <pxCurrentTCBConst>)
 800e34a:	681a      	ldr	r2, [r3, #0]
 800e34c:	f01e 0f10 	tst.w	lr, #16
 800e350:	bf08      	it	eq
 800e352:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e356:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e35a:	6010      	str	r0, [r2, #0]
 800e35c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e360:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800e364:	f380 8811 	msr	BASEPRI, r0
 800e368:	f3bf 8f4f 	dsb	sy
 800e36c:	f3bf 8f6f 	isb	sy
 800e370:	f7ff fe88 	bl	800e084 <vTaskSwitchContext>
 800e374:	f04f 0000 	mov.w	r0, #0
 800e378:	f380 8811 	msr	BASEPRI, r0
 800e37c:	bc09      	pop	{r0, r3}
 800e37e:	6819      	ldr	r1, [r3, #0]
 800e380:	6808      	ldr	r0, [r1, #0]
 800e382:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e386:	f01e 0f10 	tst.w	lr, #16
 800e38a:	bf08      	it	eq
 800e38c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e390:	f380 8809 	msr	PSP, r0
 800e394:	f3bf 8f6f 	isb	sy
 800e398:	4770      	bx	lr
 800e39a:	bf00      	nop
 800e39c:	f3af 8000 	nop.w

0800e3a0 <pxCurrentTCBConst>:
 800e3a0:	20001934 	.word	0x20001934

0800e3a4 <SysTick_Handler>:
 800e3a4:	b508      	push	{r3, lr}
 800e3a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e3aa:	f383 8811 	msr	BASEPRI, r3
 800e3ae:	f3bf 8f6f 	isb	sy
 800e3b2:	f3bf 8f4f 	dsb	sy
 800e3b6:	f7ff fe55 	bl	800e064 <xTaskIncrementTick>
 800e3ba:	b128      	cbz	r0, 800e3c8 <SysTick_Handler+0x24>
 800e3bc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e3c0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e3c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e3c8:	2300      	movs	r3, #0
 800e3ca:	f383 8811 	msr	BASEPRI, r3
 800e3ce:	bd08      	pop	{r3, pc}

0800e3d0 <vPortSetupTimerInterrupt>:
 800e3d0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800e3d4:	2300      	movs	r3, #0
 800e3d6:	4906      	ldr	r1, [pc, #24]	@ (800e3f0 <vPortSetupTimerInterrupt+0x20>)
 800e3d8:	6113      	str	r3, [r2, #16]
 800e3da:	6193      	str	r3, [r2, #24]
 800e3dc:	680b      	ldr	r3, [r1, #0]
 800e3de:	4905      	ldr	r1, [pc, #20]	@ (800e3f4 <vPortSetupTimerInterrupt+0x24>)
 800e3e0:	fba1 1303 	umull	r1, r3, r1, r3
 800e3e4:	099b      	lsrs	r3, r3, #6
 800e3e6:	2007      	movs	r0, #7
 800e3e8:	3b01      	subs	r3, #1
 800e3ea:	6153      	str	r3, [r2, #20]
 800e3ec:	6110      	str	r0, [r2, #16]
 800e3ee:	4770      	bx	lr
 800e3f0:	20000034 	.word	0x20000034
 800e3f4:	10624dd3 	.word	0x10624dd3

0800e3f8 <xPortStartScheduler>:
 800e3f8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e3fc:	4a48      	ldr	r2, [pc, #288]	@ (800e520 <xPortStartScheduler+0x128>)
 800e3fe:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800e402:	4291      	cmp	r1, r2
 800e404:	d041      	beq.n	800e48a <xPortStartScheduler+0x92>
 800e406:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800e40a:	4b46      	ldr	r3, [pc, #280]	@ (800e524 <xPortStartScheduler+0x12c>)
 800e40c:	429a      	cmp	r2, r3
 800e40e:	d033      	beq.n	800e478 <xPortStartScheduler+0x80>
 800e410:	b570      	push	{r4, r5, r6, lr}
 800e412:	4b45      	ldr	r3, [pc, #276]	@ (800e528 <xPortStartScheduler+0x130>)
 800e414:	4c45      	ldr	r4, [pc, #276]	@ (800e52c <xPortStartScheduler+0x134>)
 800e416:	781a      	ldrb	r2, [r3, #0]
 800e418:	4845      	ldr	r0, [pc, #276]	@ (800e530 <xPortStartScheduler+0x138>)
 800e41a:	b084      	sub	sp, #16
 800e41c:	21ff      	movs	r1, #255	@ 0xff
 800e41e:	b2d2      	uxtb	r2, r2
 800e420:	9202      	str	r2, [sp, #8]
 800e422:	7019      	strb	r1, [r3, #0]
 800e424:	781b      	ldrb	r3, [r3, #0]
 800e426:	b2db      	uxtb	r3, r3
 800e428:	f88d 3007 	strb.w	r3, [sp, #7]
 800e42c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e430:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e434:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800e438:	2107      	movs	r1, #7
 800e43a:	0612      	lsls	r2, r2, #24
 800e43c:	7023      	strb	r3, [r4, #0]
 800e43e:	6001      	str	r1, [r0, #0]
 800e440:	bf48      	it	mi
 800e442:	2206      	movmi	r2, #6
 800e444:	d50f      	bpl.n	800e466 <xPortStartScheduler+0x6e>
 800e446:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e44a:	005b      	lsls	r3, r3, #1
 800e44c:	b2db      	uxtb	r3, r3
 800e44e:	f88d 3007 	strb.w	r3, [sp, #7]
 800e452:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e456:	061b      	lsls	r3, r3, #24
 800e458:	4611      	mov	r1, r2
 800e45a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e45e:	d4f2      	bmi.n	800e446 <xPortStartScheduler+0x4e>
 800e460:	2903      	cmp	r1, #3
 800e462:	d01b      	beq.n	800e49c <xPortStartScheduler+0xa4>
 800e464:	6001      	str	r1, [r0, #0]
 800e466:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e46a:	f383 8811 	msr	BASEPRI, r3
 800e46e:	f3bf 8f6f 	isb	sy
 800e472:	f3bf 8f4f 	dsb	sy
 800e476:	e7fe      	b.n	800e476 <xPortStartScheduler+0x7e>
 800e478:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e47c:	f383 8811 	msr	BASEPRI, r3
 800e480:	f3bf 8f6f 	isb	sy
 800e484:	f3bf 8f4f 	dsb	sy
 800e488:	e7fe      	b.n	800e488 <xPortStartScheduler+0x90>
 800e48a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e48e:	f383 8811 	msr	BASEPRI, r3
 800e492:	f3bf 8f6f 	isb	sy
 800e496:	f3bf 8f4f 	dsb	sy
 800e49a:	e7fe      	b.n	800e49a <xPortStartScheduler+0xa2>
 800e49c:	9b02      	ldr	r3, [sp, #8]
 800e49e:	4a22      	ldr	r2, [pc, #136]	@ (800e528 <xPortStartScheduler+0x130>)
 800e4a0:	4e24      	ldr	r6, [pc, #144]	@ (800e534 <xPortStartScheduler+0x13c>)
 800e4a2:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
 800e4a6:	f44f 7140 	mov.w	r1, #768	@ 0x300
 800e4aa:	b2db      	uxtb	r3, r3
 800e4ac:	6001      	str	r1, [r0, #0]
 800e4ae:	7013      	strb	r3, [r2, #0]
 800e4b0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e4b4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800e4b8:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 800e4bc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e4c0:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800e4c4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 800e4c8:	2500      	movs	r5, #0
 800e4ca:	f7ff ff81 	bl	800e3d0 <vPortSetupTimerInterrupt>
 800e4ce:	6035      	str	r5, [r6, #0]
 800e4d0:	f7ff feaa 	bl	800e228 <vPortEnableVFP>
 800e4d4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800e4d8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800e4dc:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
 800e4e0:	f7ff fe8e 	bl	800e200 <prvPortStartFirstTask>
 800e4e4:	f7ff fdce 	bl	800e084 <vTaskSwitchContext>
 800e4e8:	6833      	ldr	r3, [r6, #0]
 800e4ea:	9503      	str	r5, [sp, #12]
 800e4ec:	3301      	adds	r3, #1
 800e4ee:	d008      	beq.n	800e502 <xPortStartScheduler+0x10a>
 800e4f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4f4:	f383 8811 	msr	BASEPRI, r3
 800e4f8:	f3bf 8f6f 	isb	sy
 800e4fc:	f3bf 8f4f 	dsb	sy
 800e500:	e7fe      	b.n	800e500 <xPortStartScheduler+0x108>
 800e502:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e506:	f383 8811 	msr	BASEPRI, r3
 800e50a:	f3bf 8f6f 	isb	sy
 800e50e:	f3bf 8f4f 	dsb	sy
 800e512:	9b03      	ldr	r3, [sp, #12]
 800e514:	2b00      	cmp	r3, #0
 800e516:	d0fc      	beq.n	800e512 <xPortStartScheduler+0x11a>
 800e518:	2000      	movs	r0, #0
 800e51a:	b004      	add	sp, #16
 800e51c:	bd70      	pop	{r4, r5, r6, pc}
 800e51e:	bf00      	nop
 800e520:	410fc271 	.word	0x410fc271
 800e524:	410fc270 	.word	0x410fc270
 800e528:	e000e400 	.word	0xe000e400
 800e52c:	2000193c 	.word	0x2000193c
 800e530:	20001938 	.word	0x20001938
 800e534:	200000c8 	.word	0x200000c8

0800e538 <vPortValidateInterruptPriority>:
 800e538:	f3ef 8305 	mrs	r3, IPSR
 800e53c:	2b0f      	cmp	r3, #15
 800e53e:	d90e      	bls.n	800e55e <vPortValidateInterruptPriority+0x26>
 800e540:	4911      	ldr	r1, [pc, #68]	@ (800e588 <vPortValidateInterruptPriority+0x50>)
 800e542:	4a12      	ldr	r2, [pc, #72]	@ (800e58c <vPortValidateInterruptPriority+0x54>)
 800e544:	5c5b      	ldrb	r3, [r3, r1]
 800e546:	7812      	ldrb	r2, [r2, #0]
 800e548:	429a      	cmp	r2, r3
 800e54a:	d908      	bls.n	800e55e <vPortValidateInterruptPriority+0x26>
 800e54c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e550:	f383 8811 	msr	BASEPRI, r3
 800e554:	f3bf 8f6f 	isb	sy
 800e558:	f3bf 8f4f 	dsb	sy
 800e55c:	e7fe      	b.n	800e55c <vPortValidateInterruptPriority+0x24>
 800e55e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e562:	4a0b      	ldr	r2, [pc, #44]	@ (800e590 <vPortValidateInterruptPriority+0x58>)
 800e564:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800e568:	6812      	ldr	r2, [r2, #0]
 800e56a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800e56e:	4293      	cmp	r3, r2
 800e570:	d908      	bls.n	800e584 <vPortValidateInterruptPriority+0x4c>
 800e572:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e576:	f383 8811 	msr	BASEPRI, r3
 800e57a:	f3bf 8f6f 	isb	sy
 800e57e:	f3bf 8f4f 	dsb	sy
 800e582:	e7fe      	b.n	800e582 <vPortValidateInterruptPriority+0x4a>
 800e584:	4770      	bx	lr
 800e586:	bf00      	nop
 800e588:	e000e3f0 	.word	0xe000e3f0
 800e58c:	2000193c 	.word	0x2000193c
 800e590:	20001938 	.word	0x20001938

0800e594 <pvPortMalloc>:
 800e594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e598:	4605      	mov	r5, r0
 800e59a:	f7ff fd4b 	bl	800e034 <vTaskSuspendAll>
 800e59e:	4a54      	ldr	r2, [pc, #336]	@ (800e6f0 <pvPortMalloc+0x15c>)
 800e5a0:	6816      	ldr	r6, [r2, #0]
 800e5a2:	2e00      	cmp	r6, #0
 800e5a4:	d035      	beq.n	800e612 <pvPortMalloc+0x7e>
 800e5a6:	4b53      	ldr	r3, [pc, #332]	@ (800e6f4 <pvPortMalloc+0x160>)
 800e5a8:	681f      	ldr	r7, [r3, #0]
 800e5aa:	423d      	tst	r5, r7
 800e5ac:	d12b      	bne.n	800e606 <pvPortMalloc+0x72>
 800e5ae:	b355      	cbz	r5, 800e606 <pvPortMalloc+0x72>
 800e5b0:	f105 0408 	add.w	r4, r5, #8
 800e5b4:	0768      	lsls	r0, r5, #29
 800e5b6:	bf1c      	itt	ne
 800e5b8:	f024 0407 	bicne.w	r4, r4, #7
 800e5bc:	3408      	addne	r4, #8
 800e5be:	b314      	cbz	r4, 800e606 <pvPortMalloc+0x72>
 800e5c0:	f8df c144 	ldr.w	ip, [pc, #324]	@ 800e708 <pvPortMalloc+0x174>
 800e5c4:	f8dc 5000 	ldr.w	r5, [ip]
 800e5c8:	42a5      	cmp	r5, r4
 800e5ca:	d31c      	bcc.n	800e606 <pvPortMalloc+0x72>
 800e5cc:	484a      	ldr	r0, [pc, #296]	@ (800e6f8 <pvPortMalloc+0x164>)
 800e5ce:	6803      	ldr	r3, [r0, #0]
 800e5d0:	e003      	b.n	800e5da <pvPortMalloc+0x46>
 800e5d2:	681a      	ldr	r2, [r3, #0]
 800e5d4:	b122      	cbz	r2, 800e5e0 <pvPortMalloc+0x4c>
 800e5d6:	4618      	mov	r0, r3
 800e5d8:	4613      	mov	r3, r2
 800e5da:	6859      	ldr	r1, [r3, #4]
 800e5dc:	42a1      	cmp	r1, r4
 800e5de:	d3f8      	bcc.n	800e5d2 <pvPortMalloc+0x3e>
 800e5e0:	42b3      	cmp	r3, r6
 800e5e2:	d010      	beq.n	800e606 <pvPortMalloc+0x72>
 800e5e4:	681a      	ldr	r2, [r3, #0]
 800e5e6:	6002      	str	r2, [r0, #0]
 800e5e8:	1b08      	subs	r0, r1, r4
 800e5ea:	2810      	cmp	r0, #16
 800e5ec:	d947      	bls.n	800e67e <pvPortMalloc+0xea>
 800e5ee:	191a      	adds	r2, r3, r4
 800e5f0:	0751      	lsls	r1, r2, #29
 800e5f2:	d02c      	beq.n	800e64e <pvPortMalloc+0xba>
 800e5f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e5f8:	f383 8811 	msr	BASEPRI, r3
 800e5fc:	f3bf 8f6f 	isb	sy
 800e600:	f3bf 8f4f 	dsb	sy
 800e604:	e7fe      	b.n	800e604 <pvPortMalloc+0x70>
 800e606:	f7ff fd1d 	bl	800e044 <xTaskResumeAll>
 800e60a:	2400      	movs	r4, #0
 800e60c:	4620      	mov	r0, r4
 800e60e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e612:	4b3a      	ldr	r3, [pc, #232]	@ (800e6fc <pvPortMalloc+0x168>)
 800e614:	4e3a      	ldr	r6, [pc, #232]	@ (800e700 <pvPortMalloc+0x16c>)
 800e616:	4838      	ldr	r0, [pc, #224]	@ (800e6f8 <pvPortMalloc+0x164>)
 800e618:	075c      	lsls	r4, r3, #29
 800e61a:	bf18      	it	ne
 800e61c:	3307      	addne	r3, #7
 800e61e:	f026 0607 	bic.w	r6, r6, #7
 800e622:	bf18      	it	ne
 800e624:	f023 0307 	bicne.w	r3, r3, #7
 800e628:	6016      	str	r6, [r2, #0]
 800e62a:	4a36      	ldr	r2, [pc, #216]	@ (800e704 <pvPortMalloc+0x170>)
 800e62c:	6003      	str	r3, [r0, #0]
 800e62e:	4619      	mov	r1, r3
 800e630:	1af3      	subs	r3, r6, r3
 800e632:	6013      	str	r3, [r2, #0]
 800e634:	4a34      	ldr	r2, [pc, #208]	@ (800e708 <pvPortMalloc+0x174>)
 800e636:	4c2f      	ldr	r4, [pc, #188]	@ (800e6f4 <pvPortMalloc+0x160>)
 800e638:	6013      	str	r3, [r2, #0]
 800e63a:	f04f 4700 	mov.w	r7, #2147483648	@ 0x80000000
 800e63e:	2200      	movs	r2, #0
 800e640:	6042      	str	r2, [r0, #4]
 800e642:	6027      	str	r7, [r4, #0]
 800e644:	e9c6 2200 	strd	r2, r2, [r6]
 800e648:	e9c1 6300 	strd	r6, r3, [r1]
 800e64c:	e7ad      	b.n	800e5aa <pvPortMalloc+0x16>
 800e64e:	492a      	ldr	r1, [pc, #168]	@ (800e6f8 <pvPortMalloc+0x164>)
 800e650:	6050      	str	r0, [r2, #4]
 800e652:	605c      	str	r4, [r3, #4]
 800e654:	4608      	mov	r0, r1
 800e656:	6809      	ldr	r1, [r1, #0]
 800e658:	428a      	cmp	r2, r1
 800e65a:	d8fb      	bhi.n	800e654 <pvPortMalloc+0xc0>
 800e65c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800e660:	f8d2 8004 	ldr.w	r8, [r2, #4]
 800e664:	eb00 090e 	add.w	r9, r0, lr
 800e668:	454a      	cmp	r2, r9
 800e66a:	d027      	beq.n	800e6bc <pvPortMalloc+0x128>
 800e66c:	eb02 0e08 	add.w	lr, r2, r8
 800e670:	4571      	cmp	r1, lr
 800e672:	d02b      	beq.n	800e6cc <pvPortMalloc+0x138>
 800e674:	6011      	str	r1, [r2, #0]
 800e676:	4621      	mov	r1, r4
 800e678:	4282      	cmp	r2, r0
 800e67a:	bf18      	it	ne
 800e67c:	6002      	strne	r2, [r0, #0]
 800e67e:	4a21      	ldr	r2, [pc, #132]	@ (800e704 <pvPortMalloc+0x170>)
 800e680:	6810      	ldr	r0, [r2, #0]
 800e682:	1a6d      	subs	r5, r5, r1
 800e684:	4285      	cmp	r5, r0
 800e686:	4821      	ldr	r0, [pc, #132]	@ (800e70c <pvPortMalloc+0x178>)
 800e688:	bf38      	it	cc
 800e68a:	6015      	strcc	r5, [r2, #0]
 800e68c:	430f      	orrs	r7, r1
 800e68e:	6801      	ldr	r1, [r0, #0]
 800e690:	f8cc 5000 	str.w	r5, [ip]
 800e694:	2400      	movs	r4, #0
 800e696:	e9c3 4700 	strd	r4, r7, [r3]
 800e69a:	3101      	adds	r1, #1
 800e69c:	f103 0408 	add.w	r4, r3, #8
 800e6a0:	6001      	str	r1, [r0, #0]
 800e6a2:	f7ff fccf 	bl	800e044 <xTaskResumeAll>
 800e6a6:	0763      	lsls	r3, r4, #29
 800e6a8:	d0b0      	beq.n	800e60c <pvPortMalloc+0x78>
 800e6aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6ae:	f383 8811 	msr	BASEPRI, r3
 800e6b2:	f3bf 8f6f 	isb	sy
 800e6b6:	f3bf 8f4f 	dsb	sy
 800e6ba:	e7fe      	b.n	800e6ba <pvPortMalloc+0x126>
 800e6bc:	eb0e 0208 	add.w	r2, lr, r8
 800e6c0:	1884      	adds	r4, r0, r2
 800e6c2:	42a1      	cmp	r1, r4
 800e6c4:	6042      	str	r2, [r0, #4]
 800e6c6:	d00a      	beq.n	800e6de <pvPortMalloc+0x14a>
 800e6c8:	6859      	ldr	r1, [r3, #4]
 800e6ca:	e7d8      	b.n	800e67e <pvPortMalloc+0xea>
 800e6cc:	42b1      	cmp	r1, r6
 800e6ce:	d0d1      	beq.n	800e674 <pvPortMalloc+0xe0>
 800e6d0:	684c      	ldr	r4, [r1, #4]
 800e6d2:	6809      	ldr	r1, [r1, #0]
 800e6d4:	6011      	str	r1, [r2, #0]
 800e6d6:	4444      	add	r4, r8
 800e6d8:	6054      	str	r4, [r2, #4]
 800e6da:	6859      	ldr	r1, [r3, #4]
 800e6dc:	e7cc      	b.n	800e678 <pvPortMalloc+0xe4>
 800e6de:	42b1      	cmp	r1, r6
 800e6e0:	d0f2      	beq.n	800e6c8 <pvPortMalloc+0x134>
 800e6e2:	684c      	ldr	r4, [r1, #4]
 800e6e4:	4414      	add	r4, r2
 800e6e6:	680a      	ldr	r2, [r1, #0]
 800e6e8:	6044      	str	r4, [r0, #4]
 800e6ea:	6002      	str	r2, [r0, #0]
 800e6ec:	e7ec      	b.n	800e6c8 <pvPortMalloc+0x134>
 800e6ee:	bf00      	nop
 800e6f0:	20001954 	.word	0x20001954
 800e6f4:	20001940 	.word	0x20001940
 800e6f8:	20001958 	.word	0x20001958
 800e6fc:	20001960 	.word	0x20001960
 800e700:	20004068 	.word	0x20004068
 800e704:	2000194c 	.word	0x2000194c
 800e708:	20001950 	.word	0x20001950
 800e70c:	20001948 	.word	0x20001948

0800e710 <vPortFree>:
 800e710:	b1d0      	cbz	r0, 800e748 <vPortFree+0x38>
 800e712:	4a2f      	ldr	r2, [pc, #188]	@ (800e7d0 <vPortFree+0xc0>)
 800e714:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e718:	6812      	ldr	r2, [r2, #0]
 800e71a:	4213      	tst	r3, r2
 800e71c:	d00b      	beq.n	800e736 <vPortFree+0x26>
 800e71e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e722:	b191      	cbz	r1, 800e74a <vPortFree+0x3a>
 800e724:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e728:	f383 8811 	msr	BASEPRI, r3
 800e72c:	f3bf 8f6f 	isb	sy
 800e730:	f3bf 8f4f 	dsb	sy
 800e734:	e7fe      	b.n	800e734 <vPortFree+0x24>
 800e736:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e73a:	f383 8811 	msr	BASEPRI, r3
 800e73e:	f3bf 8f6f 	isb	sy
 800e742:	f3bf 8f4f 	dsb	sy
 800e746:	e7fe      	b.n	800e746 <vPortFree+0x36>
 800e748:	4770      	bx	lr
 800e74a:	b530      	push	{r4, r5, lr}
 800e74c:	ea23 0302 	bic.w	r3, r3, r2
 800e750:	b083      	sub	sp, #12
 800e752:	f840 3c04 	str.w	r3, [r0, #-4]
 800e756:	4d1f      	ldr	r5, [pc, #124]	@ (800e7d4 <vPortFree+0xc4>)
 800e758:	9001      	str	r0, [sp, #4]
 800e75a:	f1a0 0408 	sub.w	r4, r0, #8
 800e75e:	f7ff fc69 	bl	800e034 <vTaskSuspendAll>
 800e762:	9801      	ldr	r0, [sp, #4]
 800e764:	682a      	ldr	r2, [r5, #0]
 800e766:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800e76a:	4b1b      	ldr	r3, [pc, #108]	@ (800e7d8 <vPortFree+0xc8>)
 800e76c:	440a      	add	r2, r1
 800e76e:	602a      	str	r2, [r5, #0]
 800e770:	461a      	mov	r2, r3
 800e772:	681b      	ldr	r3, [r3, #0]
 800e774:	429c      	cmp	r4, r3
 800e776:	d8fb      	bhi.n	800e770 <vPortFree+0x60>
 800e778:	6855      	ldr	r5, [r2, #4]
 800e77a:	eb02 0e05 	add.w	lr, r2, r5
 800e77e:	4574      	cmp	r4, lr
 800e780:	d011      	beq.n	800e7a6 <vPortFree+0x96>
 800e782:	eb04 0c01 	add.w	ip, r4, r1
 800e786:	4563      	cmp	r3, ip
 800e788:	d01d      	beq.n	800e7c6 <vPortFree+0xb6>
 800e78a:	f840 3c08 	str.w	r3, [r0, #-8]
 800e78e:	42a2      	cmp	r2, r4
 800e790:	bf18      	it	ne
 800e792:	6014      	strne	r4, [r2, #0]
 800e794:	4a11      	ldr	r2, [pc, #68]	@ (800e7dc <vPortFree+0xcc>)
 800e796:	6813      	ldr	r3, [r2, #0]
 800e798:	3301      	adds	r3, #1
 800e79a:	6013      	str	r3, [r2, #0]
 800e79c:	b003      	add	sp, #12
 800e79e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e7a2:	f7ff bc4f 	b.w	800e044 <xTaskResumeAll>
 800e7a6:	4429      	add	r1, r5
 800e7a8:	1850      	adds	r0, r2, r1
 800e7aa:	4283      	cmp	r3, r0
 800e7ac:	6051      	str	r1, [r2, #4]
 800e7ae:	d1f1      	bne.n	800e794 <vPortFree+0x84>
 800e7b0:	480b      	ldr	r0, [pc, #44]	@ (800e7e0 <vPortFree+0xd0>)
 800e7b2:	6800      	ldr	r0, [r0, #0]
 800e7b4:	4283      	cmp	r3, r0
 800e7b6:	d0ed      	beq.n	800e794 <vPortFree+0x84>
 800e7b8:	4614      	mov	r4, r2
 800e7ba:	e9d3 3000 	ldrd	r3, r0, [r3]
 800e7be:	4401      	add	r1, r0
 800e7c0:	6023      	str	r3, [r4, #0]
 800e7c2:	6061      	str	r1, [r4, #4]
 800e7c4:	e7e3      	b.n	800e78e <vPortFree+0x7e>
 800e7c6:	4d06      	ldr	r5, [pc, #24]	@ (800e7e0 <vPortFree+0xd0>)
 800e7c8:	682d      	ldr	r5, [r5, #0]
 800e7ca:	42ab      	cmp	r3, r5
 800e7cc:	d1f5      	bne.n	800e7ba <vPortFree+0xaa>
 800e7ce:	e7dc      	b.n	800e78a <vPortFree+0x7a>
 800e7d0:	20001940 	.word	0x20001940
 800e7d4:	20001950 	.word	0x20001950
 800e7d8:	20001958 	.word	0x20001958
 800e7dc:	20001944 	.word	0x20001944
 800e7e0:	20001954 	.word	0x20001954

0800e7e4 <SPIF_WaitForWriting>:
}

/***********************************************************************************************************/

bool SPIF_WaitForWriting(SPIF_HandleTypeDef *Handle, uint32_t Timeout)
{
 800e7e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7e8:	b084      	sub	sp, #16
 800e7ea:	4604      	mov	r4, r0
 800e7ec:	460e      	mov	r6, r1
  bool retVal = false;
  uint32_t startTime = HAL_GetTick();
 800e7ee:	f7f6 ffa9 	bl	8005744 <HAL_GetTick>
  uint8_t tx[2] = {SPIF_CMD_READSTATUS1, SPIF_DUMMY_BYTE};
 800e7f2:	f24a 5705 	movw	r7, #42245	@ 0xa505
  uint32_t startTime = HAL_GetTick();
 800e7f6:	4605      	mov	r5, r0
  osDelay(d);
 800e7f8:	2001      	movs	r0, #1
 800e7fa:	f7fe fe9d 	bl	800d538 <osDelay>
  while (1)
  {
    SPIF_Delay(1);
    if (HAL_GetTick() - startTime >= Timeout)
 800e7fe:	f7f6 ffa1 	bl	8005744 <HAL_GetTick>
 800e802:	1b40      	subs	r0, r0, r5
 800e804:	42b0      	cmp	r0, r6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e806:	f04f 0200 	mov.w	r2, #0
    if (HAL_GetTick() - startTime >= Timeout)
 800e80a:	d220      	bcs.n	800e84e <SPIF_WaitForWriting+0x6a>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e80c:	8a21      	ldrh	r1, [r4, #16]
 800e80e:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[2] = {SPIF_CMD_READSTATUS1, SPIF_DUMMY_BYTE};
 800e810:	f8ad 7008 	strh.w	r7, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e814:	f7f7 ff6c 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e818:	2264      	movs	r2, #100	@ 0x64
 800e81a:	6820      	ldr	r0, [r4, #0]
 800e81c:	9200      	str	r2, [sp, #0]
 800e81e:	a902      	add	r1, sp, #8
 800e820:	aa03      	add	r2, sp, #12
 800e822:	2302      	movs	r3, #2
 800e824:	f7fb fb82 	bl	8009f2c <HAL_SPI_TransmitReceive>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e828:	8a21      	ldrh	r1, [r4, #16]
 800e82a:	2201      	movs	r2, #1
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e82c:	b130      	cbz	r0, 800e83c <SPIF_WaitForWriting+0x58>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e82e:	6860      	ldr	r0, [r4, #4]
 800e830:	f7f7 ff5e 	bl	80066f0 <HAL_GPIO_WritePin>
      dprintf("SPIF_WaitForWriting() TIMEOUT\r\n");
      break;
    }
    if ((SPIF_ReadReg1(Handle) & SPIF_STATUS1_BUSY) == 0)
    {
      retVal = true;
 800e834:	2001      	movs	r0, #1
      break;
    }
  }
  return retVal;
}
 800e836:	b004      	add	sp, #16
 800e838:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    retVal = rx[1];
 800e83c:	f89d 800d 	ldrb.w	r8, [sp, #13]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e840:	6860      	ldr	r0, [r4, #4]
 800e842:	f7f7 ff55 	bl	80066f0 <HAL_GPIO_WritePin>
    if ((SPIF_ReadReg1(Handle) & SPIF_STATUS1_BUSY) == 0)
 800e846:	f018 0f01 	tst.w	r8, #1
 800e84a:	d1d5      	bne.n	800e7f8 <SPIF_WaitForWriting+0x14>
 800e84c:	e7f2      	b.n	800e834 <SPIF_WaitForWriting+0x50>
  bool retVal = false;
 800e84e:	2000      	movs	r0, #0
}
 800e850:	b004      	add	sp, #16
 800e852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e856:	bf00      	nop

0800e858 <SPIF_FindChip>:

/***********************************************************************************************************/

bool SPIF_FindChip(SPIF_HandleTypeDef *Handle)
{
 800e858:	b510      	push	{r4, lr}
 800e85a:	b084      	sub	sp, #16
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e85c:	8a01      	ldrh	r1, [r0, #16]
{
 800e85e:	4604      	mov	r4, r0
  uint8_t tx[4] = {SPIF_CMD_JEDECID, 0xFF, 0xFF, 0xFF};
 800e860:	f06f 0360 	mvn.w	r3, #96	@ 0x60
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e864:	6840      	ldr	r0, [r0, #4]
  uint8_t tx[4] = {SPIF_CMD_JEDECID, 0xFF, 0xFF, 0xFF};
 800e866:	9302      	str	r3, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e868:	2200      	movs	r2, #0
 800e86a:	f7f7 ff41 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e86e:	2264      	movs	r2, #100	@ 0x64
 800e870:	9200      	str	r2, [sp, #0]
 800e872:	a902      	add	r1, sp, #8
 800e874:	6820      	ldr	r0, [r4, #0]
 800e876:	2304      	movs	r3, #4
 800e878:	aa03      	add	r2, sp, #12
 800e87a:	f7fb fb57 	bl	8009f2c <HAL_SPI_TransmitReceive>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e87e:	8a21      	ldrh	r1, [r4, #16]
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e880:	b130      	cbz	r0, 800e890 <SPIF_FindChip+0x38>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e882:	6860      	ldr	r0, [r4, #4]
 800e884:	2201      	movs	r2, #1
 800e886:	f7f7 ff33 	bl	80066f0 <HAL_GPIO_WritePin>
  uint8_t rx[4];
  bool retVal = false;
 800e88a:	2000      	movs	r0, #0
    retVal = true;

  } while (0);

  return retVal;
}
 800e88c:	b004      	add	sp, #16
 800e88e:	bd10      	pop	{r4, pc}
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e890:	2201      	movs	r2, #1
 800e892:	6860      	ldr	r0, [r4, #4]
 800e894:	f7f7 ff2c 	bl	80066f0 <HAL_GPIO_WritePin>
    Handle->Manufactor = rx[1];
 800e898:	f89d 300d 	ldrb.w	r3, [sp, #13]
    Handle->MemType = rx[2];
 800e89c:	f89d 100e 	ldrb.w	r1, [sp, #14]
    Handle->Size = rx[3];
 800e8a0:	f89d 200f 	ldrb.w	r2, [sp, #15]
    Handle->Manufactor = rx[1];
 800e8a4:	7223      	strb	r3, [r4, #8]
    switch (Handle->Manufactor)
 800e8a6:	2ba1      	cmp	r3, #161	@ 0xa1
    Handle->MemType = rx[2];
 800e8a8:	72e1      	strb	r1, [r4, #11]
    Handle->Size = rx[3];
 800e8aa:	7262      	strb	r2, [r4, #9]
    switch (Handle->Manufactor)
 800e8ac:	d81c      	bhi.n	800e8e8 <SPIF_FindChip+0x90>
 800e8ae:	2b84      	cmp	r3, #132	@ 0x84
 800e8b0:	d826      	bhi.n	800e900 <SPIF_FindChip+0xa8>
 800e8b2:	2b37      	cmp	r3, #55	@ 0x37
 800e8b4:	d815      	bhi.n	800e8e2 <SPIF_FindChip+0x8a>
 800e8b6:	2b1b      	cmp	r3, #27
 800e8b8:	d82a      	bhi.n	800e910 <SPIF_FindChip+0xb8>
 800e8ba:	2b01      	cmp	r3, #1
 800e8bc:	d003      	beq.n	800e8c6 <SPIF_FindChip+0x6e>
 800e8be:	2b04      	cmp	r3, #4
 800e8c0:	d001      	beq.n	800e8c6 <SPIF_FindChip+0x6e>
      Handle->Manufactor = SPIF_MANUFACTOR_ERROR;
 800e8c2:	2300      	movs	r3, #0
 800e8c4:	7223      	strb	r3, [r4, #8]
    switch (Handle->Size)
 800e8c6:	f1a2 0311 	sub.w	r3, r2, #17
 800e8ca:	2b0f      	cmp	r3, #15
 800e8cc:	d828      	bhi.n	800e920 <SPIF_FindChip+0xc8>
 800e8ce:	e8df f003 	tbb	[pc, r3]
 800e8d2:	6c72      	.short	0x6c72
 800e8d4:	51585f66 	.word	0x51585f66
 800e8d8:	273a424a 	.word	0x273a424a
 800e8dc:	27272727 	.word	0x27272727
 800e8e0:	3227      	.short	0x3227
    switch (Handle->Manufactor)
 800e8e2:	2b62      	cmp	r3, #98	@ 0x62
 800e8e4:	d1ed      	bne.n	800e8c2 <SPIF_FindChip+0x6a>
 800e8e6:	e7ee      	b.n	800e8c6 <SPIF_FindChip+0x6e>
 800e8e8:	2bc8      	cmp	r3, #200	@ 0xc8
 800e8ea:	d86a      	bhi.n	800e9c2 <SPIF_FindChip+0x16a>
 800e8ec:	2bac      	cmp	r3, #172	@ 0xac
 800e8ee:	d9e8      	bls.n	800e8c2 <SPIF_FindChip+0x6a>
 800e8f0:	4936      	ldr	r1, [pc, #216]	@ (800e9cc <SPIF_FindChip+0x174>)
 800e8f2:	3353      	adds	r3, #83	@ 0x53
 800e8f4:	b2db      	uxtb	r3, r3
 800e8f6:	fa21 f303 	lsr.w	r3, r1, r3
 800e8fa:	07d8      	lsls	r0, r3, #31
 800e8fc:	d4e3      	bmi.n	800e8c6 <SPIF_FindChip+0x6e>
 800e8fe:	e7e0      	b.n	800e8c2 <SPIF_FindChip+0x6a>
 800e900:	4933      	ldr	r1, [pc, #204]	@ (800e9d0 <SPIF_FindChip+0x178>)
 800e902:	337b      	adds	r3, #123	@ 0x7b
 800e904:	b2db      	uxtb	r3, r3
 800e906:	fa21 f303 	lsr.w	r3, r1, r3
 800e90a:	07d9      	lsls	r1, r3, #31
 800e90c:	d5d9      	bpl.n	800e8c2 <SPIF_FindChip+0x6a>
 800e90e:	e7da      	b.n	800e8c6 <SPIF_FindChip+0x6e>
 800e910:	4930      	ldr	r1, [pc, #192]	@ (800e9d4 <SPIF_FindChip+0x17c>)
 800e912:	3b1c      	subs	r3, #28
 800e914:	b2db      	uxtb	r3, r3
 800e916:	fa21 f303 	lsr.w	r3, r1, r3
 800e91a:	07db      	lsls	r3, r3, #31
 800e91c:	d5d1      	bpl.n	800e8c2 <SPIF_FindChip+0x6a>
 800e91e:	e7d2      	b.n	800e8c6 <SPIF_FindChip+0x6e>
    Handle->SectorCnt = Handle->BlockCnt * 16;
 800e920:	69e3      	ldr	r3, [r4, #28]
      Handle->Size = SPIF_SIZE_ERROR;
 800e922:	2100      	movs	r1, #0
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e924:	041a      	lsls	r2, r3, #16
      Handle->Size = SPIF_SIZE_ERROR;
 800e926:	7261      	strb	r1, [r4, #9]
    Handle->SectorCnt = Handle->BlockCnt * 16;
 800e928:	011b      	lsls	r3, r3, #4
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e92a:	0a12      	lsrs	r2, r2, #8
    retVal = true;
 800e92c:	2001      	movs	r0, #1
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e92e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
 800e932:	b004      	add	sp, #16
 800e934:	bd10      	pop	{r4, pc}
      Handle->BlockCnt = 1024;
 800e936:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e93a:	61e3      	str	r3, [r4, #28]
      break;
 800e93c:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 800e940:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800e944:	e7f2      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 512;
 800e946:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e94a:	61e3      	str	r3, [r4, #28]
      break;
 800e94c:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800e950:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800e954:	e7ea      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 256;
 800e956:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e95a:	61e3      	str	r3, [r4, #28]
      break;
 800e95c:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800e960:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800e964:	e7e2      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 128;
 800e966:	2380      	movs	r3, #128	@ 0x80
 800e968:	61e3      	str	r3, [r4, #28]
      break;
 800e96a:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800e96e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e972:	e7db      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 64;
 800e974:	2340      	movs	r3, #64	@ 0x40
 800e976:	61e3      	str	r3, [r4, #28]
      break;
 800e978:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800e97c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e980:	e7d4      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 32;
 800e982:	2320      	movs	r3, #32
 800e984:	61e3      	str	r3, [r4, #28]
      break;
 800e986:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800e98a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e98e:	e7cd      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 16;
 800e990:	2310      	movs	r3, #16
 800e992:	61e3      	str	r3, [r4, #28]
      break;
 800e994:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800e998:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e99c:	e7c6      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 8;
 800e99e:	2308      	movs	r3, #8
 800e9a0:	61e3      	str	r3, [r4, #28]
      break;
 800e9a2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800e9a6:	2380      	movs	r3, #128	@ 0x80
 800e9a8:	e7c0      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 4;
 800e9aa:	2304      	movs	r3, #4
 800e9ac:	61e3      	str	r3, [r4, #28]
      break;
 800e9ae:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800e9b2:	2340      	movs	r3, #64	@ 0x40
 800e9b4:	e7ba      	b.n	800e92c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 2;
 800e9b6:	2302      	movs	r3, #2
 800e9b8:	61e3      	str	r3, [r4, #28]
      break;
 800e9ba:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e9be:	2320      	movs	r3, #32
 800e9c0:	e7b4      	b.n	800e92c <SPIF_FindChip+0xd4>
    switch (Handle->Manufactor)
 800e9c2:	2bef      	cmp	r3, #239	@ 0xef
 800e9c4:	f47f af7d 	bne.w	800e8c2 <SPIF_FindChip+0x6a>
 800e9c8:	e77d      	b.n	800e8c6 <SPIF_FindChip+0x6e>
 800e9ca:	bf00      	nop
 800e9cc:	08240001 	.word	0x08240001
 800e9d0:	11000091 	.word	0x11000091
 800e9d4:	08000011 	.word	0x08000011

0800e9d8 <SPIF_WriteFn>:

/***********************************************************************************************************/

bool SPIF_WriteFn(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800e9d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9dc:	4604      	mov	r4, r0
  {
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_WritePage() START PAGE %ld\r\n", PageNumber);
    if (PageNumber >= Handle->PageCnt)
 800e9de:	6940      	ldr	r0, [r0, #20]
 800e9e0:	4288      	cmp	r0, r1
{
 800e9e2:	b084      	sub	sp, #16
    if (PageNumber >= Handle->PageCnt)
 800e9e4:	d817      	bhi.n	800ea16 <SPIF_WriteFn+0x3e>
  bool retVal = false;
 800e9e6:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9e8:	8a21      	ldrh	r1, [r4, #16]
 800e9ea:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e9ec:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9ee:	2200      	movs	r2, #0
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e9f0:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9f4:	f7f7 fe7c 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e9f8:	2364      	movs	r3, #100	@ 0x64
 800e9fa:	a901      	add	r1, sp, #4
 800e9fc:	6820      	ldr	r0, [r4, #0]
 800e9fe:	2201      	movs	r2, #1
 800ea00:	f7fb f96c 	bl	8009cdc <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea04:	6860      	ldr	r0, [r4, #4]
 800ea06:	8a21      	ldrh	r1, [r4, #16]
 800ea08:	2201      	movs	r2, #1
 800ea0a:	f7f7 fe71 	bl	80066f0 <HAL_GPIO_WritePin>

  } while (0);

  SPIF_WriteDisable(Handle);
  return retVal;
}
 800ea0e:	4628      	mov	r0, r5
 800ea10:	b004      	add	sp, #16
 800ea12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea16:	461f      	mov	r7, r3
    if (Offset >= SPIF_PAGE_SIZE)
 800ea18:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ea1a:	2bff      	cmp	r3, #255	@ 0xff
 800ea1c:	d8e3      	bhi.n	800e9e6 <SPIF_WriteFn+0xe>
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ea1e:	2306      	movs	r3, #6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea20:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ea22:	f88d 3008 	strb.w	r3, [sp, #8]
 800ea26:	460d      	mov	r5, r1
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea28:	4616      	mov	r6, r2
 800ea2a:	8a21      	ldrh	r1, [r4, #16]
 800ea2c:	2200      	movs	r2, #0
 800ea2e:	f7f7 fe5f 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea32:	6820      	ldr	r0, [r4, #0]
 800ea34:	2364      	movs	r3, #100	@ 0x64
 800ea36:	2201      	movs	r2, #1
 800ea38:	a902      	add	r1, sp, #8
 800ea3a:	f7fb f94f 	bl	8009cdc <HAL_SPI_Transmit>
 800ea3e:	4680      	mov	r8, r0
 800ea40:	2800      	cmp	r0, #0
 800ea42:	d151      	bne.n	800eae8 <SPIF_WriteFn+0x110>
    address = SPIF_PageToAddress(PageNumber) + Offset;
 800ea44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea46:	8a21      	ldrh	r1, [r4, #16]
 800ea48:	6860      	ldr	r0, [r4, #4]
 800ea4a:	2201      	movs	r2, #1
    address = SPIF_PageToAddress(PageNumber) + Offset;
 800ea4c:	eb03 2505 	add.w	r5, r3, r5, lsl #8
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea50:	f7f7 fe4e 	bl	80066f0 <HAL_GPIO_WritePin>
 800ea54:	8a21      	ldrh	r1, [r4, #16]
 800ea56:	6860      	ldr	r0, [r4, #4]
 800ea58:	4642      	mov	r2, r8
 800ea5a:	f7f7 fe49 	bl	80066f0 <HAL_GPIO_WritePin>
    if (Handle->BlockCnt >= 512)
 800ea5e:	69e3      	ldr	r3, [r4, #28]
 800ea60:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
      tx[2] = (address & 0x00FF0000) >> 16;
 800ea64:	f3c5 4207 	ubfx	r2, r5, #16, #8
      tx[3] = (address & 0x0000FF00) >> 8;
 800ea68:	f3c5 2007 	ubfx	r0, r5, #8, #8
      tx[4] = (address & 0x000000FF);
 800ea6c:	b2e9      	uxtb	r1, r5
    if (Handle->BlockCnt >= 512)
 800ea6e:	d227      	bcs.n	800eac0 <SPIF_WriteFn+0xe8>
      tx[1] = (address & 0x00FF0000) >> 16;
 800ea70:	f88d 2009 	strb.w	r2, [sp, #9]
      tx[0] = SPIF_CMD_PAGEPROG3ADD;
 800ea74:	2202      	movs	r2, #2
      tx[2] = (address & 0x0000FF00) >> 8;
 800ea76:	ba6d      	rev16	r5, r5
      tx[0] = SPIF_CMD_PAGEPROG3ADD;
 800ea78:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea7c:	6820      	ldr	r0, [r4, #0]
      tx[2] = (address & 0x0000FF00) >> 8;
 800ea7e:	f8ad 500a 	strh.w	r5, [sp, #10]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea82:	a902      	add	r1, sp, #8
 800ea84:	2364      	movs	r3, #100	@ 0x64
 800ea86:	2204      	movs	r2, #4
 800ea88:	f7fb f928 	bl	8009cdc <HAL_SPI_Transmit>
 800ea8c:	bb60      	cbnz	r0, 800eae8 <SPIF_WriteFn+0x110>
  uint32_t address = 0, maximum = SPIF_PAGE_SIZE - Offset;
 800ea8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea90:	6820      	ldr	r0, [r4, #0]
  uint32_t address = 0, maximum = SPIF_PAGE_SIZE - Offset;
 800ea92:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
    if (Size > maximum)
 800ea96:	42ba      	cmp	r2, r7
 800ea98:	bf28      	it	cs
 800ea9a:	463a      	movcs	r2, r7
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea9c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800eaa0:	b292      	uxth	r2, r2
 800eaa2:	4631      	mov	r1, r6
 800eaa4:	f7fb f91a 	bl	8009cdc <HAL_SPI_Transmit>
 800eaa8:	b9f0      	cbnz	r0, 800eae8 <SPIF_WriteFn+0x110>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eaaa:	8a21      	ldrh	r1, [r4, #16]
 800eaac:	6860      	ldr	r0, [r4, #4]
 800eaae:	2201      	movs	r2, #1
 800eab0:	f7f7 fe1e 	bl	80066f0 <HAL_GPIO_WritePin>
    if (SPIF_WaitForWriting(Handle, 100))
 800eab4:	2164      	movs	r1, #100	@ 0x64
 800eab6:	4620      	mov	r0, r4
 800eab8:	f7ff fe94 	bl	800e7e4 <SPIF_WaitForWriting>
 800eabc:	4605      	mov	r5, r0
 800eabe:	e793      	b.n	800e9e8 <SPIF_WriteFn+0x10>
      tx[2] = (address & 0x00FF0000) >> 16;
 800eac0:	f88d 200a 	strb.w	r2, [sp, #10]
      tx[0] = SPIF_CMD_PAGEPROG4ADD;
 800eac4:	2212      	movs	r2, #18
      tx[3] = (address & 0x0000FF00) >> 8;
 800eac6:	f88d 000b 	strb.w	r0, [sp, #11]
      tx[4] = (address & 0x000000FF);
 800eaca:	f88d 100c 	strb.w	r1, [sp, #12]
      tx[1] = (address & 0xFF000000) >> 24;
 800eace:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_PAGEPROG4ADD;
 800ead0:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ead4:	6820      	ldr	r0, [r4, #0]
      tx[1] = (address & 0xFF000000) >> 24;
 800ead6:	f88d 5009 	strb.w	r5, [sp, #9]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eada:	2364      	movs	r3, #100	@ 0x64
 800eadc:	a902      	add	r1, sp, #8
 800eade:	2205      	movs	r2, #5
 800eae0:	f7fb f8fc 	bl	8009cdc <HAL_SPI_Transmit>
 800eae4:	2800      	cmp	r0, #0
 800eae6:	d0d2      	beq.n	800ea8e <SPIF_WriteFn+0xb6>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eae8:	8a21      	ldrh	r1, [r4, #16]
 800eaea:	6860      	ldr	r0, [r4, #4]
 800eaec:	2201      	movs	r2, #1
 800eaee:	f7f7 fdff 	bl	80066f0 <HAL_GPIO_WritePin>
}
 800eaf2:	e778      	b.n	800e9e6 <SPIF_WriteFn+0xe>

0800eaf4 <SPIF_ReadFn>:

/***********************************************************************************************************/

bool SPIF_ReadFn(SPIF_HandleTypeDef *Handle, uint32_t Address, uint8_t *Data, uint32_t Size)
{
 800eaf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eaf6:	4604      	mov	r4, r0
 800eaf8:	460d      	mov	r5, r1
 800eafa:	b083      	sub	sp, #12
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eafc:	8a01      	ldrh	r1, [r0, #16]
 800eafe:	6840      	ldr	r0, [r0, #4]
{
 800eb00:	4617      	mov	r7, r2
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb02:	2200      	movs	r2, #0
{
 800eb04:	461e      	mov	r6, r3
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb06:	f7f7 fdf3 	bl	80066f0 <HAL_GPIO_WritePin>
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_ReadAddress() START ADDRESS %ld\r\n", Address);
    SPIF_CsPin(Handle, 0);
    if (Handle->BlockCnt >= 512)
 800eb0a:	69e1      	ldr	r1, [r4, #28]
 800eb0c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
    {
      tx[0] = SPIF_CMD_READDATA4ADD;
      tx[1] = (Address & 0xFF000000) >> 24;
      tx[2] = (Address & 0x00FF0000) >> 16;
 800eb10:	f3c5 4007 	ubfx	r0, r5, #16, #8
      tx[3] = (Address & 0x0000FF00) >> 8;
 800eb14:	f3c5 2307 	ubfx	r3, r5, #8, #8
    if (Handle->BlockCnt >= 512)
 800eb18:	d31b      	bcc.n	800eb52 <SPIF_ReadFn+0x5e>
      tx[0] = SPIF_CMD_READDATA4ADD;
 800eb1a:	b2ea      	uxtb	r2, r5
      tx[4] = (Address & 0x000000FF);
 800eb1c:	f88d 2004 	strb.w	r2, [sp, #4]
      tx[0] = SPIF_CMD_READDATA4ADD;
 800eb20:	2213      	movs	r2, #19
      tx[2] = (Address & 0x00FF0000) >> 16;
 800eb22:	f88d 0002 	strb.w	r0, [sp, #2]
      tx[3] = (Address & 0x0000FF00) >> 8;
 800eb26:	f88d 3003 	strb.w	r3, [sp, #3]
      tx[1] = (Address & 0xFF000000) >> 24;
 800eb2a:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_READDATA4ADD;
 800eb2c:	f88d 2000 	strb.w	r2, [sp]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb30:	6820      	ldr	r0, [r4, #0]
      tx[1] = (Address & 0xFF000000) >> 24;
 800eb32:	f88d 5001 	strb.w	r5, [sp, #1]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb36:	2364      	movs	r3, #100	@ 0x64
 800eb38:	2205      	movs	r2, #5
 800eb3a:	4669      	mov	r1, sp
 800eb3c:	f7fb f8ce 	bl	8009cdc <HAL_SPI_Transmit>
 800eb40:	b1b8      	cbz	r0, 800eb72 <SPIF_ReadFn+0x7e>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb42:	6860      	ldr	r0, [r4, #4]
 800eb44:	8a21      	ldrh	r1, [r4, #16]
 800eb46:	2201      	movs	r2, #1
 800eb48:	f7f7 fdd2 	bl	80066f0 <HAL_GPIO_WritePin>
  bool retVal = false;
 800eb4c:	2000      	movs	r0, #0
    retVal = true;

  } while (0);

  return retVal;
}
 800eb4e:	b003      	add	sp, #12
 800eb50:	bdf0      	pop	{r4, r5, r6, r7, pc}
      tx[0] = SPIF_CMD_READDATA3ADD;
 800eb52:	2203      	movs	r2, #3
      tx[1] = (Address & 0x00FF0000) >> 16;
 800eb54:	f88d 0001 	strb.w	r0, [sp, #1]
      tx[2] = (Address & 0x0000FF00) >> 8;
 800eb58:	ba6d      	rev16	r5, r5
      tx[0] = SPIF_CMD_READDATA3ADD;
 800eb5a:	f88d 2000 	strb.w	r2, [sp]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb5e:	6820      	ldr	r0, [r4, #0]
      tx[2] = (Address & 0x0000FF00) >> 8;
 800eb60:	f8ad 5002 	strh.w	r5, [sp, #2]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb64:	2364      	movs	r3, #100	@ 0x64
 800eb66:	2204      	movs	r2, #4
 800eb68:	4669      	mov	r1, sp
 800eb6a:	f7fb f8b7 	bl	8009cdc <HAL_SPI_Transmit>
 800eb6e:	2800      	cmp	r0, #0
 800eb70:	d1e7      	bne.n	800eb42 <SPIF_ReadFn+0x4e>
  if (HAL_SPI_Receive(Handle->HSpi, Rx, Size, Timeout) == HAL_OK)
 800eb72:	6820      	ldr	r0, [r4, #0]
 800eb74:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 800eb78:	b2b2      	uxth	r2, r6
 800eb7a:	4639      	mov	r1, r7
 800eb7c:	f7fb fbc6 	bl	800a30c <HAL_SPI_Receive>
 800eb80:	2800      	cmp	r0, #0
 800eb82:	d1de      	bne.n	800eb42 <SPIF_ReadFn+0x4e>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb84:	6860      	ldr	r0, [r4, #4]
 800eb86:	8a21      	ldrh	r1, [r4, #16]
 800eb88:	2201      	movs	r2, #1
 800eb8a:	f7f7 fdb1 	bl	80066f0 <HAL_GPIO_WritePin>
    retVal = true;
 800eb8e:	2001      	movs	r0, #1
}
 800eb90:	b003      	add	sp, #12
 800eb92:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eb94 <SPIF_Init>:
bool SPIF_Init(SPIF_HandleTypeDef *Handle, SPI_HandleTypeDef *HSpi, GPIO_TypeDef *Gpio, uint16_t Pin)
{
  bool retVal = false;
  do
  {
    if ((Handle == NULL) || (HSpi == NULL) || (Gpio == NULL) || (Handle->Inited == 1))
 800eb94:	2800      	cmp	r0, #0
 800eb96:	d044      	beq.n	800ec22 <SPIF_Init+0x8e>
 800eb98:	2900      	cmp	r1, #0
 800eb9a:	d042      	beq.n	800ec22 <SPIF_Init+0x8e>
{
 800eb9c:	b530      	push	{r4, r5, lr}
 800eb9e:	4615      	mov	r5, r2
 800eba0:	b083      	sub	sp, #12
    if ((Handle == NULL) || (HSpi == NULL) || (Gpio == NULL) || (Handle->Inited == 1))
 800eba2:	b11a      	cbz	r2, 800ebac <SPIF_Init+0x18>
 800eba4:	7a82      	ldrb	r2, [r0, #10]
 800eba6:	2a01      	cmp	r2, #1
 800eba8:	4604      	mov	r4, r0
 800ebaa:	d102      	bne.n	800ebb2 <SPIF_Init+0x1e>
  bool retVal = false;
 800ebac:	2000      	movs	r0, #0
    }

  } while (0);

  return retVal;
}
 800ebae:	b003      	add	sp, #12
 800ebb0:	bd30      	pop	{r4, r5, pc}
    memset(Handle, 0, sizeof(SPIF_HandleTypeDef));
 800ebb2:	2200      	movs	r2, #0
    Handle->Gpio = Gpio;
 800ebb4:	e9c0 1500 	strd	r1, r5, [r0]
    memset(Handle, 0, sizeof(SPIF_HandleTypeDef));
 800ebb8:	6082      	str	r2, [r0, #8]
 800ebba:	60c2      	str	r2, [r0, #12]
 800ebbc:	6142      	str	r2, [r0, #20]
 800ebbe:	6182      	str	r2, [r0, #24]
 800ebc0:	61c2      	str	r2, [r0, #28]
    Handle->Pin = Pin;
 800ebc2:	6103      	str	r3, [r0, #16]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ebc4:	2201      	movs	r2, #1
 800ebc6:	4619      	mov	r1, r3
 800ebc8:	4628      	mov	r0, r5
 800ebca:	f7f7 fd91 	bl	80066f0 <HAL_GPIO_WritePin>
}
 800ebce:	e001      	b.n	800ebd4 <SPIF_Init+0x40>
  osDelay(d);
 800ebd0:	f7fe fcb2 	bl	800d538 <osDelay>
    while (HAL_GetTick() < 20)
 800ebd4:	f7f6 fdb6 	bl	8005744 <HAL_GetTick>
 800ebd8:	2813      	cmp	r0, #19
  osDelay(d);
 800ebda:	f04f 0001 	mov.w	r0, #1
    while (HAL_GetTick() < 20)
 800ebde:	d9f7      	bls.n	800ebd0 <SPIF_Init+0x3c>
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ebe0:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ebe2:	8a21      	ldrh	r1, [r4, #16]
 800ebe4:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ebe6:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ebea:	2200      	movs	r2, #0
 800ebec:	f7f7 fd80 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ebf0:	a901      	add	r1, sp, #4
 800ebf2:	6820      	ldr	r0, [r4, #0]
 800ebf4:	2364      	movs	r3, #100	@ 0x64
 800ebf6:	2201      	movs	r2, #1
 800ebf8:	f7fb f870 	bl	8009cdc <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ebfc:	8a21      	ldrh	r1, [r4, #16]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ebfe:	b120      	cbz	r0, 800ec0a <SPIF_Init+0x76>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec00:	6860      	ldr	r0, [r4, #4]
 800ec02:	2201      	movs	r2, #1
 800ec04:	f7f7 fd74 	bl	80066f0 <HAL_GPIO_WritePin>
  return retVal;
 800ec08:	e7d0      	b.n	800ebac <SPIF_Init+0x18>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec0a:	6860      	ldr	r0, [r4, #4]
 800ec0c:	2201      	movs	r2, #1
 800ec0e:	f7f7 fd6f 	bl	80066f0 <HAL_GPIO_WritePin>
    retVal = SPIF_FindChip(Handle);
 800ec12:	4620      	mov	r0, r4
 800ec14:	f7ff fe20 	bl	800e858 <SPIF_FindChip>
    if (retVal)
 800ec18:	2800      	cmp	r0, #0
 800ec1a:	d0c7      	beq.n	800ebac <SPIF_Init+0x18>
      Handle->Inited = 1;
 800ec1c:	2301      	movs	r3, #1
 800ec1e:	72a3      	strb	r3, [r4, #10]
 800ec20:	e7c5      	b.n	800ebae <SPIF_Init+0x1a>
  bool retVal = false;
 800ec22:	2000      	movs	r0, #0
}
 800ec24:	4770      	bx	lr
 800ec26:	bf00      	nop

0800ec28 <SPIF_EraseSector>:
  * @param  Sector: Selected Sector
  *
  * @retval bool: true or false
  */
bool SPIF_EraseSector(SPIF_HandleTypeDef *Handle, uint32_t Sector)
{
 800ec28:	b5f0      	push	{r4, r5, r6, r7, lr}
  while (Handle->Lock)
 800ec2a:	7b03      	ldrb	r3, [r0, #12]
{
 800ec2c:	b085      	sub	sp, #20
 800ec2e:	4604      	mov	r4, r0
 800ec30:	460d      	mov	r5, r1
  while (Handle->Lock)
 800ec32:	b12b      	cbz	r3, 800ec40 <SPIF_EraseSector+0x18>
  osDelay(d);
 800ec34:	2001      	movs	r0, #1
 800ec36:	f7fe fc7f 	bl	800d538 <osDelay>
  while (Handle->Lock)
 800ec3a:	7b23      	ldrb	r3, [r4, #12]
 800ec3c:	2b00      	cmp	r3, #0
 800ec3e:	d1f9      	bne.n	800ec34 <SPIF_EraseSector+0xc>
  {
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_EraseSector() START SECTOR %ld\r\n", Sector);
    if (Sector >= Handle->SectorCnt)
 800ec40:	69a3      	ldr	r3, [r4, #24]
  Handle->Lock = 1;
 800ec42:	2601      	movs	r6, #1
    if (Sector >= Handle->SectorCnt)
 800ec44:	42ab      	cmp	r3, r5
  Handle->Lock = 1;
 800ec46:	7326      	strb	r6, [r4, #12]
    if (Sector >= Handle->SectorCnt)
 800ec48:	d818      	bhi.n	800ec7c <SPIF_EraseSector+0x54>
  bool retVal = false;
 800ec4a:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec4c:	8a21      	ldrh	r1, [r4, #16]
 800ec4e:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ec50:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec52:	2200      	movs	r2, #0
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ec54:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec58:	f7f7 fd4a 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ec5c:	2364      	movs	r3, #100	@ 0x64
 800ec5e:	a901      	add	r1, sp, #4
 800ec60:	6820      	ldr	r0, [r4, #0]
 800ec62:	2201      	movs	r2, #1
 800ec64:	f7fb f83a 	bl	8009cdc <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec68:	6860      	ldr	r0, [r4, #4]
 800ec6a:	8a21      	ldrh	r1, [r4, #16]
 800ec6c:	2201      	movs	r2, #1
 800ec6e:	f7f7 fd3f 	bl	80066f0 <HAL_GPIO_WritePin>
  Handle->Lock = 0;
 800ec72:	2300      	movs	r3, #0
  } while (0);

  SPIF_WriteDisable(Handle);
  SPIF_UnLock(Handle);
  return retVal;
}
 800ec74:	4628      	mov	r0, r5
  Handle->Lock = 0;
 800ec76:	7323      	strb	r3, [r4, #12]
}
 800ec78:	b005      	add	sp, #20
 800ec7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ec7c:	2306      	movs	r3, #6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec7e:	8a21      	ldrh	r1, [r4, #16]
 800ec80:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ec82:	f88d 3008 	strb.w	r3, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec86:	2200      	movs	r2, #0
 800ec88:	f7f7 fd32 	bl	80066f0 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ec8c:	6820      	ldr	r0, [r4, #0]
 800ec8e:	2364      	movs	r3, #100	@ 0x64
 800ec90:	4632      	mov	r2, r6
 800ec92:	a902      	add	r1, sp, #8
 800ec94:	f7fb f822 	bl	8009cdc <HAL_SPI_Transmit>
 800ec98:	4607      	mov	r7, r0
 800ec9a:	2800      	cmp	r0, #0
 800ec9c:	d142      	bne.n	800ed24 <SPIF_EraseSector+0xfc>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec9e:	8a21      	ldrh	r1, [r4, #16]
 800eca0:	6860      	ldr	r0, [r4, #4]
 800eca2:	4632      	mov	r2, r6
 800eca4:	f7f7 fd24 	bl	80066f0 <HAL_GPIO_WritePin>
 800eca8:	8a21      	ldrh	r1, [r4, #16]
 800ecaa:	6860      	ldr	r0, [r4, #4]
 800ecac:	463a      	mov	r2, r7
 800ecae:	f7f7 fd1f 	bl	80066f0 <HAL_GPIO_WritePin>
    if (Handle->BlockCnt >= 512)
 800ecb2:	69e2      	ldr	r2, [r4, #28]
  uint32_t address = Sector * SPIF_SECTOR_SIZE;
 800ecb4:	032d      	lsls	r5, r5, #12
      tx[3] = (address & 0x0000FF00) >> 8;
 800ecb6:	0a2b      	lsrs	r3, r5, #8
    if (Handle->BlockCnt >= 512)
 800ecb8:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
      tx[3] = (address & 0x0000FF00) >> 8;
 800ecbc:	b2db      	uxtb	r3, r3
      tx[2] = (address & 0x00FF0000) >> 16;
 800ecbe:	f3c5 4107 	ubfx	r1, r5, #16, #8
    if (Handle->BlockCnt >= 512)
 800ecc2:	d31e      	bcc.n	800ed02 <SPIF_EraseSector+0xda>
      tx[0] = SPIF_CMD_SECTORERASE4ADD;
 800ecc4:	2221      	movs	r2, #33	@ 0x21
      tx[2] = (address & 0x00FF0000) >> 16;
 800ecc6:	f88d 100a 	strb.w	r1, [sp, #10]
      tx[3] = (address & 0x0000FF00) >> 8;
 800ecca:	f88d 300b 	strb.w	r3, [sp, #11]
      tx[1] = (address & 0xFF000000) >> 24;
 800ecce:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_SECTORERASE4ADD;
 800ecd0:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ecd4:	6820      	ldr	r0, [r4, #0]
      tx[1] = (address & 0xFF000000) >> 24;
 800ecd6:	f88d 5009 	strb.w	r5, [sp, #9]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ecda:	2364      	movs	r3, #100	@ 0x64
 800ecdc:	a902      	add	r1, sp, #8
 800ecde:	2205      	movs	r2, #5
      tx[4] = (address & 0x000000FF);
 800ece0:	f88d 700c 	strb.w	r7, [sp, #12]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ece4:	f7fa fffa 	bl	8009cdc <HAL_SPI_Transmit>
 800ece8:	b9e0      	cbnz	r0, 800ed24 <SPIF_EraseSector+0xfc>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ecea:	8a21      	ldrh	r1, [r4, #16]
 800ecec:	6860      	ldr	r0, [r4, #4]
 800ecee:	2201      	movs	r2, #1
 800ecf0:	f7f7 fcfe 	bl	80066f0 <HAL_GPIO_WritePin>
    if (SPIF_WaitForWriting(Handle, 1000))
 800ecf4:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800ecf8:	4620      	mov	r0, r4
 800ecfa:	f7ff fd73 	bl	800e7e4 <SPIF_WaitForWriting>
 800ecfe:	4605      	mov	r5, r0
 800ed00:	e7a4      	b.n	800ec4c <SPIF_EraseSector+0x24>
      tx[0] = SPIF_CMD_SECTORERASE3ADD;
 800ed02:	2220      	movs	r2, #32
      tx[1] = (address & 0x00FF0000) >> 16;
 800ed04:	f88d 1009 	strb.w	r1, [sp, #9]
      tx[2] = (address & 0x0000FF00) >> 8;
 800ed08:	f88d 300a 	strb.w	r3, [sp, #10]
      tx[0] = SPIF_CMD_SECTORERASE3ADD;
 800ed0c:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ed10:	6820      	ldr	r0, [r4, #0]
      tx[3] = (address & 0x000000FF);
 800ed12:	f88d 700b 	strb.w	r7, [sp, #11]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ed16:	a902      	add	r1, sp, #8
 800ed18:	2364      	movs	r3, #100	@ 0x64
 800ed1a:	2204      	movs	r2, #4
 800ed1c:	f7fa ffde 	bl	8009cdc <HAL_SPI_Transmit>
 800ed20:	2800      	cmp	r0, #0
 800ed22:	d0e2      	beq.n	800ecea <SPIF_EraseSector+0xc2>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ed24:	8a21      	ldrh	r1, [r4, #16]
 800ed26:	6860      	ldr	r0, [r4, #4]
 800ed28:	4632      	mov	r2, r6
 800ed2a:	f7f7 fce1 	bl	80066f0 <HAL_GPIO_WritePin>
  return retVal;
 800ed2e:	e78c      	b.n	800ec4a <SPIF_EraseSector+0x22>

0800ed30 <SPIF_WritePage>:
  * @param  Offset: The start point for writing data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_WritePage(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800ed30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed34:	4698      	mov	r8, r3
  while (Handle->Lock)
 800ed36:	7b03      	ldrb	r3, [r0, #12]
{
 800ed38:	b082      	sub	sp, #8
 800ed3a:	4605      	mov	r5, r0
 800ed3c:	460e      	mov	r6, r1
 800ed3e:	4617      	mov	r7, r2
  while (Handle->Lock)
 800ed40:	b12b      	cbz	r3, 800ed4e <SPIF_WritePage+0x1e>
  osDelay(d);
 800ed42:	2001      	movs	r0, #1
 800ed44:	f7fe fbf8 	bl	800d538 <osDelay>
  while (Handle->Lock)
 800ed48:	7b2c      	ldrb	r4, [r5, #12]
 800ed4a:	2c00      	cmp	r4, #0
 800ed4c:	d1f9      	bne.n	800ed42 <SPIF_WritePage+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800ed4e:	9b08      	ldr	r3, [sp, #32]
 800ed50:	9300      	str	r3, [sp, #0]
  Handle->Lock = 1;
 800ed52:	2401      	movs	r4, #1
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800ed54:	4643      	mov	r3, r8
 800ed56:	463a      	mov	r2, r7
 800ed58:	4631      	mov	r1, r6
 800ed5a:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800ed5c:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800ed5e:	f7ff fe3b 	bl	800e9d8 <SPIF_WriteFn>
  Handle->Lock = 0;
 800ed62:	2300      	movs	r3, #0
 800ed64:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800ed66:	b002      	add	sp, #8
 800ed68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed6c <SPIF_ReadPage>:
  * @param  Offset: The start point for Reading data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_ReadPage(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800ed6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ed70:	461f      	mov	r7, r3
  while (Handle->Lock)
 800ed72:	7b03      	ldrb	r3, [r0, #12]
{
 800ed74:	9e08      	ldr	r6, [sp, #32]
 800ed76:	4605      	mov	r5, r0
 800ed78:	4688      	mov	r8, r1
 800ed7a:	4691      	mov	r9, r2
  while (Handle->Lock)
 800ed7c:	b12b      	cbz	r3, 800ed8a <SPIF_ReadPage+0x1e>
  osDelay(d);
 800ed7e:	2001      	movs	r0, #1
 800ed80:	f7fe fbda 	bl	800d538 <osDelay>
  while (Handle->Lock)
 800ed84:	7b2c      	ldrb	r4, [r5, #12]
 800ed86:	2c00      	cmp	r4, #0
 800ed88:	d1f9      	bne.n	800ed7e <SPIF_ReadPage+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  uint32_t address = SPIF_PageToAddress(PageNumber) + Offset;
  uint32_t maximum = SPIF_PAGE_SIZE - Offset;
 800ed8a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
  if (Size > maximum)
  {
    Size = maximum;
  }
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800ed8e:	42bb      	cmp	r3, r7
  Handle->Lock = 1;
 800ed90:	f04f 0401 	mov.w	r4, #1
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800ed94:	bf28      	it	cs
 800ed96:	463b      	movcs	r3, r7
 800ed98:	464a      	mov	r2, r9
 800ed9a:	eb06 2108 	add.w	r1, r6, r8, lsl #8
 800ed9e:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800eda0:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eda2:	f7ff fea7 	bl	800eaf4 <SPIF_ReadFn>
  Handle->Lock = 0;
 800eda6:	2300      	movs	r3, #0
 800eda8:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800edaa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edae:	bf00      	nop

0800edb0 <SPIF_ReadSector>:
  * @param  Offset: The start point for Reading data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_ReadSector(SPIF_HandleTypeDef *Handle, uint32_t SectorNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800edb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800edb4:	461f      	mov	r7, r3
  while (Handle->Lock)
 800edb6:	7b03      	ldrb	r3, [r0, #12]
{
 800edb8:	9e08      	ldr	r6, [sp, #32]
 800edba:	4605      	mov	r5, r0
 800edbc:	4688      	mov	r8, r1
 800edbe:	4691      	mov	r9, r2
  while (Handle->Lock)
 800edc0:	b12b      	cbz	r3, 800edce <SPIF_ReadSector+0x1e>
  osDelay(d);
 800edc2:	2001      	movs	r0, #1
 800edc4:	f7fe fbb8 	bl	800d538 <osDelay>
  while (Handle->Lock)
 800edc8:	7b2c      	ldrb	r4, [r5, #12]
 800edca:	2c00      	cmp	r4, #0
 800edcc:	d1f9      	bne.n	800edc2 <SPIF_ReadSector+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  uint32_t address = SPIF_SectorToAddress(SectorNumber) + Offset;
  uint32_t maximum = SPIF_SECTOR_SIZE - Offset;
 800edce:	f5c6 5380 	rsb	r3, r6, #4096	@ 0x1000
  if (Size > maximum)
  {
    Size = maximum;
  }
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edd2:	42bb      	cmp	r3, r7
  Handle->Lock = 1;
 800edd4:	f04f 0401 	mov.w	r4, #1
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edd8:	bf28      	it	cs
 800edda:	463b      	movcs	r3, r7
 800eddc:	464a      	mov	r2, r9
 800edde:	eb06 3108 	add.w	r1, r6, r8, lsl #12
 800ede2:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800ede4:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800ede6:	f7ff fe85 	bl	800eaf4 <SPIF_ReadFn>
  Handle->Lock = 0;
 800edea:	2300      	movs	r3, #0
 800edec:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800edee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edf2:	bf00      	nop

0800edf4 <MX_USB_Device_Init>:
 800edf4:	b508      	push	{r3, lr}
 800edf6:	4918      	ldr	r1, [pc, #96]	@ (800ee58 <MX_USB_Device_Init+0x64>)
 800edf8:	4818      	ldr	r0, [pc, #96]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800edfa:	2200      	movs	r2, #0
 800edfc:	f7fd feb8 	bl	800cb70 <USBD_Init>
 800ee00:	b970      	cbnz	r0, 800ee20 <MX_USB_Device_Init+0x2c>
 800ee02:	4917      	ldr	r1, [pc, #92]	@ (800ee60 <MX_USB_Device_Init+0x6c>)
 800ee04:	4815      	ldr	r0, [pc, #84]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800ee06:	f7fd fec7 	bl	800cb98 <USBD_RegisterClass>
 800ee0a:	b988      	cbnz	r0, 800ee30 <MX_USB_Device_Init+0x3c>
 800ee0c:	4915      	ldr	r1, [pc, #84]	@ (800ee64 <MX_USB_Device_Init+0x70>)
 800ee0e:	4813      	ldr	r0, [pc, #76]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800ee10:	f7fd fe52 	bl	800cab8 <USBD_CDC_RegisterInterface>
 800ee14:	b9a0      	cbnz	r0, 800ee40 <MX_USB_Device_Init+0x4c>
 800ee16:	4811      	ldr	r0, [pc, #68]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800ee18:	f7fd feda 	bl	800cbd0 <USBD_Start>
 800ee1c:	b9b8      	cbnz	r0, 800ee4e <MX_USB_Device_Init+0x5a>
 800ee1e:	bd08      	pop	{r3, pc}
 800ee20:	f7f3 fa22 	bl	8002268 <Error_Handler>
 800ee24:	490e      	ldr	r1, [pc, #56]	@ (800ee60 <MX_USB_Device_Init+0x6c>)
 800ee26:	480d      	ldr	r0, [pc, #52]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800ee28:	f7fd feb6 	bl	800cb98 <USBD_RegisterClass>
 800ee2c:	2800      	cmp	r0, #0
 800ee2e:	d0ed      	beq.n	800ee0c <MX_USB_Device_Init+0x18>
 800ee30:	f7f3 fa1a 	bl	8002268 <Error_Handler>
 800ee34:	490b      	ldr	r1, [pc, #44]	@ (800ee64 <MX_USB_Device_Init+0x70>)
 800ee36:	4809      	ldr	r0, [pc, #36]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800ee38:	f7fd fe3e 	bl	800cab8 <USBD_CDC_RegisterInterface>
 800ee3c:	2800      	cmp	r0, #0
 800ee3e:	d0ea      	beq.n	800ee16 <MX_USB_Device_Init+0x22>
 800ee40:	f7f3 fa12 	bl	8002268 <Error_Handler>
 800ee44:	4805      	ldr	r0, [pc, #20]	@ (800ee5c <MX_USB_Device_Init+0x68>)
 800ee46:	f7fd fec3 	bl	800cbd0 <USBD_Start>
 800ee4a:	2800      	cmp	r0, #0
 800ee4c:	d0e7      	beq.n	800ee1e <MX_USB_Device_Init+0x2a>
 800ee4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ee52:	f7f3 ba09 	b.w	8002268 <Error_Handler>
 800ee56:	bf00      	nop
 800ee58:	20000114 	.word	0x20000114
 800ee5c:	20004070 	.word	0x20004070
 800ee60:	20000084 	.word	0x20000084
 800ee64:	200000cc 	.word	0x200000cc

0800ee68 <CDC_DeInit_FS>:
 800ee68:	2000      	movs	r0, #0
 800ee6a:	4770      	bx	lr

0800ee6c <CDC_Control_FS>:
 800ee6c:	2000      	movs	r0, #0
 800ee6e:	4770      	bx	lr

0800ee70 <CDC_TransmitCplt_FS>:
 800ee70:	2000      	movs	r0, #0
 800ee72:	4770      	bx	lr

0800ee74 <CDC_Receive_FS>:
 800ee74:	b570      	push	{r4, r5, r6, lr}
 800ee76:	4e0e      	ldr	r6, [pc, #56]	@ (800eeb0 <CDC_Receive_FS+0x3c>)
 800ee78:	4604      	mov	r4, r0
 800ee7a:	460d      	mov	r5, r1
 800ee7c:	4630      	mov	r0, r6
 800ee7e:	4621      	mov	r1, r4
 800ee80:	f7fd fe34 	bl	800caec <USBD_CDC_SetRxBuffer>
 800ee84:	4630      	mov	r0, r6
 800ee86:	f7fd fe59 	bl	800cb3c <USBD_CDC_ReceivePacket>
 800ee8a:	4b0a      	ldr	r3, [pc, #40]	@ (800eeb4 <CDC_Receive_FS+0x40>)
 800ee8c:	2240      	movs	r2, #64	@ 0x40
 800ee8e:	4618      	mov	r0, r3
 800ee90:	2100      	movs	r1, #0
 800ee92:	f001 fae8 	bl	8010466 <memset>
 800ee96:	782d      	ldrb	r5, [r5, #0]
 800ee98:	4621      	mov	r1, r4
 800ee9a:	462a      	mov	r2, r5
 800ee9c:	f001 fb63 	bl	8010566 <memcpy>
 800eea0:	462a      	mov	r2, r5
 800eea2:	2100      	movs	r1, #0
 800eea4:	4620      	mov	r0, r4
 800eea6:	f001 fade 	bl	8010466 <memset>
 800eeaa:	2000      	movs	r0, #0
 800eeac:	bd70      	pop	{r4, r5, r6, pc}
 800eeae:	bf00      	nop
 800eeb0:	20004070 	.word	0x20004070
 800eeb4:	20000640 	.word	0x20000640

0800eeb8 <CDC_Init_FS>:
 800eeb8:	b510      	push	{r4, lr}
 800eeba:	4c06      	ldr	r4, [pc, #24]	@ (800eed4 <CDC_Init_FS+0x1c>)
 800eebc:	4906      	ldr	r1, [pc, #24]	@ (800eed8 <CDC_Init_FS+0x20>)
 800eebe:	2200      	movs	r2, #0
 800eec0:	4620      	mov	r0, r4
 800eec2:	f7fd fe05 	bl	800cad0 <USBD_CDC_SetTxBuffer>
 800eec6:	4905      	ldr	r1, [pc, #20]	@ (800eedc <CDC_Init_FS+0x24>)
 800eec8:	4620      	mov	r0, r4
 800eeca:	f7fd fe0f 	bl	800caec <USBD_CDC_SetRxBuffer>
 800eece:	2000      	movs	r0, #0
 800eed0:	bd10      	pop	{r4, pc}
 800eed2:	bf00      	nop
 800eed4:	20004070 	.word	0x20004070
 800eed8:	2000434c 	.word	0x2000434c
 800eedc:	20004b4c 	.word	0x20004b4c

0800eee0 <CDC_Transmit_FS>:
 800eee0:	b510      	push	{r4, lr}
 800eee2:	4c09      	ldr	r4, [pc, #36]	@ (800ef08 <CDC_Transmit_FS+0x28>)
 800eee4:	f8d4 32bc 	ldr.w	r3, [r4, #700]	@ 0x2bc
 800eee8:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 800eeec:	b10b      	cbz	r3, 800eef2 <CDC_Transmit_FS+0x12>
 800eeee:	2001      	movs	r0, #1
 800eef0:	bd10      	pop	{r4, pc}
 800eef2:	460a      	mov	r2, r1
 800eef4:	4601      	mov	r1, r0
 800eef6:	4620      	mov	r0, r4
 800eef8:	f7fd fdea 	bl	800cad0 <USBD_CDC_SetTxBuffer>
 800eefc:	4620      	mov	r0, r4
 800eefe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef02:	f7fd bdff 	b.w	800cb04 <USBD_CDC_TransmitPacket>
 800ef06:	bf00      	nop
 800ef08:	20004070 	.word	0x20004070

0800ef0c <USBD_CDC_DeviceDescriptor>:
 800ef0c:	2312      	movs	r3, #18
 800ef0e:	4801      	ldr	r0, [pc, #4]	@ (800ef14 <USBD_CDC_DeviceDescriptor+0x8>)
 800ef10:	800b      	strh	r3, [r1, #0]
 800ef12:	4770      	bx	lr
 800ef14:	20000100 	.word	0x20000100

0800ef18 <USBD_CDC_LangIDStrDescriptor>:
 800ef18:	2304      	movs	r3, #4
 800ef1a:	4801      	ldr	r0, [pc, #4]	@ (800ef20 <USBD_CDC_LangIDStrDescriptor+0x8>)
 800ef1c:	800b      	strh	r3, [r1, #0]
 800ef1e:	4770      	bx	lr
 800ef20:	200000fc 	.word	0x200000fc

0800ef24 <USBD_CDC_ManufacturerStrDescriptor>:
 800ef24:	b510      	push	{r4, lr}
 800ef26:	4c04      	ldr	r4, [pc, #16]	@ (800ef38 <USBD_CDC_ManufacturerStrDescriptor+0x14>)
 800ef28:	4804      	ldr	r0, [pc, #16]	@ (800ef3c <USBD_CDC_ManufacturerStrDescriptor+0x18>)
 800ef2a:	460a      	mov	r2, r1
 800ef2c:	4621      	mov	r1, r4
 800ef2e:	f7fe fa67 	bl	800d400 <USBD_GetString>
 800ef32:	4620      	mov	r0, r4
 800ef34:	bd10      	pop	{r4, pc}
 800ef36:	bf00      	nop
 800ef38:	2000534c 	.word	0x2000534c
 800ef3c:	080162ac 	.word	0x080162ac

0800ef40 <USBD_CDC_ProductStrDescriptor>:
 800ef40:	b510      	push	{r4, lr}
 800ef42:	4c04      	ldr	r4, [pc, #16]	@ (800ef54 <USBD_CDC_ProductStrDescriptor+0x14>)
 800ef44:	4804      	ldr	r0, [pc, #16]	@ (800ef58 <USBD_CDC_ProductStrDescriptor+0x18>)
 800ef46:	460a      	mov	r2, r1
 800ef48:	4621      	mov	r1, r4
 800ef4a:	f7fe fa59 	bl	800d400 <USBD_GetString>
 800ef4e:	4620      	mov	r0, r4
 800ef50:	bd10      	pop	{r4, pc}
 800ef52:	bf00      	nop
 800ef54:	2000534c 	.word	0x2000534c
 800ef58:	080162c0 	.word	0x080162c0

0800ef5c <USBD_CDC_ConfigStrDescriptor>:
 800ef5c:	b510      	push	{r4, lr}
 800ef5e:	4c04      	ldr	r4, [pc, #16]	@ (800ef70 <USBD_CDC_ConfigStrDescriptor+0x14>)
 800ef60:	4804      	ldr	r0, [pc, #16]	@ (800ef74 <USBD_CDC_ConfigStrDescriptor+0x18>)
 800ef62:	460a      	mov	r2, r1
 800ef64:	4621      	mov	r1, r4
 800ef66:	f7fe fa4b 	bl	800d400 <USBD_GetString>
 800ef6a:	4620      	mov	r0, r4
 800ef6c:	bd10      	pop	{r4, pc}
 800ef6e:	bf00      	nop
 800ef70:	2000534c 	.word	0x2000534c
 800ef74:	080162d8 	.word	0x080162d8

0800ef78 <USBD_CDC_InterfaceStrDescriptor>:
 800ef78:	b510      	push	{r4, lr}
 800ef7a:	4c04      	ldr	r4, [pc, #16]	@ (800ef8c <USBD_CDC_InterfaceStrDescriptor+0x14>)
 800ef7c:	4804      	ldr	r0, [pc, #16]	@ (800ef90 <USBD_CDC_InterfaceStrDescriptor+0x18>)
 800ef7e:	460a      	mov	r2, r1
 800ef80:	4621      	mov	r1, r4
 800ef82:	f7fe fa3d 	bl	800d400 <USBD_GetString>
 800ef86:	4620      	mov	r0, r4
 800ef88:	bd10      	pop	{r4, pc}
 800ef8a:	bf00      	nop
 800ef8c:	2000534c 	.word	0x2000534c
 800ef90:	080162e4 	.word	0x080162e4

0800ef94 <USBD_CDC_SerialStrDescriptor>:
 800ef94:	4a51      	ldr	r2, [pc, #324]	@ (800f0dc <USBD_CDC_SerialStrDescriptor+0x148>)
 800ef96:	f8d2 3590 	ldr.w	r3, [r2, #1424]	@ 0x590
 800ef9a:	f8d2 0598 	ldr.w	r0, [r2, #1432]	@ 0x598
 800ef9e:	f04f 0c1a 	mov.w	ip, #26
 800efa2:	181b      	adds	r3, r3, r0
 800efa4:	f8a1 c000 	strh.w	ip, [r1]
 800efa8:	d101      	bne.n	800efae <USBD_CDC_SerialStrDescriptor+0x1a>
 800efaa:	484d      	ldr	r0, [pc, #308]	@ (800f0e0 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800efac:	4770      	bx	lr
 800efae:	f8d2 1594 	ldr.w	r1, [r2, #1428]	@ 0x594
 800efb2:	4a4b      	ldr	r2, [pc, #300]	@ (800f0e0 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800efb4:	0f18      	lsrs	r0, r3, #28
 800efb6:	f1b3 4f20 	cmp.w	r3, #2684354560	@ 0xa0000000
 800efba:	f04f 0c00 	mov.w	ip, #0
 800efbe:	bf2c      	ite	cs
 800efc0:	3037      	addcs	r0, #55	@ 0x37
 800efc2:	3030      	addcc	r0, #48	@ 0x30
 800efc4:	f882 c003 	strb.w	ip, [r2, #3]
 800efc8:	f3c3 6c03 	ubfx	ip, r3, #24, #4
 800efcc:	f1bc 0f09 	cmp.w	ip, #9
 800efd0:	7090      	strb	r0, [r2, #2]
 800efd2:	4660      	mov	r0, ip
 800efd4:	f04f 0c00 	mov.w	ip, #0
 800efd8:	bf8c      	ite	hi
 800efda:	3037      	addhi	r0, #55	@ 0x37
 800efdc:	3030      	addls	r0, #48	@ 0x30
 800efde:	f882 c005 	strb.w	ip, [r2, #5]
 800efe2:	f3c3 5c03 	ubfx	ip, r3, #20, #4
 800efe6:	f1bc 0f09 	cmp.w	ip, #9
 800efea:	7110      	strb	r0, [r2, #4]
 800efec:	4660      	mov	r0, ip
 800efee:	f04f 0c00 	mov.w	ip, #0
 800eff2:	bf8c      	ite	hi
 800eff4:	3037      	addhi	r0, #55	@ 0x37
 800eff6:	3030      	addls	r0, #48	@ 0x30
 800eff8:	f882 c007 	strb.w	ip, [r2, #7]
 800effc:	f3c3 4c03 	ubfx	ip, r3, #16, #4
 800f000:	f1bc 0f09 	cmp.w	ip, #9
 800f004:	7190      	strb	r0, [r2, #6]
 800f006:	4660      	mov	r0, ip
 800f008:	f04f 0c00 	mov.w	ip, #0
 800f00c:	bf8c      	ite	hi
 800f00e:	3037      	addhi	r0, #55	@ 0x37
 800f010:	3030      	addls	r0, #48	@ 0x30
 800f012:	f882 c009 	strb.w	ip, [r2, #9]
 800f016:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 800f01a:	f1bc 0f09 	cmp.w	ip, #9
 800f01e:	7210      	strb	r0, [r2, #8]
 800f020:	4660      	mov	r0, ip
 800f022:	f04f 0c00 	mov.w	ip, #0
 800f026:	bf8c      	ite	hi
 800f028:	3037      	addhi	r0, #55	@ 0x37
 800f02a:	3030      	addls	r0, #48	@ 0x30
 800f02c:	f882 c00b 	strb.w	ip, [r2, #11]
 800f030:	f3c3 2c03 	ubfx	ip, r3, #8, #4
 800f034:	f1bc 0f09 	cmp.w	ip, #9
 800f038:	7290      	strb	r0, [r2, #10]
 800f03a:	4660      	mov	r0, ip
 800f03c:	f04f 0c00 	mov.w	ip, #0
 800f040:	bf8c      	ite	hi
 800f042:	3037      	addhi	r0, #55	@ 0x37
 800f044:	3030      	addls	r0, #48	@ 0x30
 800f046:	f882 c00d 	strb.w	ip, [r2, #13]
 800f04a:	f3c3 1c03 	ubfx	ip, r3, #4, #4
 800f04e:	f1bc 0f09 	cmp.w	ip, #9
 800f052:	7310      	strb	r0, [r2, #12]
 800f054:	4660      	mov	r0, ip
 800f056:	bf8c      	ite	hi
 800f058:	3037      	addhi	r0, #55	@ 0x37
 800f05a:	3030      	addls	r0, #48	@ 0x30
 800f05c:	7390      	strb	r0, [r2, #14]
 800f05e:	f003 000f 	and.w	r0, r3, #15
 800f062:	4603      	mov	r3, r0
 800f064:	2809      	cmp	r0, #9
 800f066:	bf94      	ite	ls
 800f068:	3330      	addls	r3, #48	@ 0x30
 800f06a:	3337      	addhi	r3, #55	@ 0x37
 800f06c:	2000      	movs	r0, #0
 800f06e:	f1b1 4f20 	cmp.w	r1, #2684354560	@ 0xa0000000
 800f072:	7413      	strb	r3, [r2, #16]
 800f074:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800f078:	bf2c      	ite	cs
 800f07a:	3337      	addcs	r3, #55	@ 0x37
 800f07c:	3330      	addcc	r3, #48	@ 0x30
 800f07e:	7450      	strb	r0, [r2, #17]
 800f080:	f3c1 6003 	ubfx	r0, r1, #24, #4
 800f084:	2809      	cmp	r0, #9
 800f086:	7493      	strb	r3, [r2, #18]
 800f088:	4603      	mov	r3, r0
 800f08a:	bf8c      	ite	hi
 800f08c:	3337      	addhi	r3, #55	@ 0x37
 800f08e:	3330      	addls	r3, #48	@ 0x30
 800f090:	f3c1 5003 	ubfx	r0, r1, #20, #4
 800f094:	2809      	cmp	r0, #9
 800f096:	f04f 0c00 	mov.w	ip, #0
 800f09a:	7513      	strb	r3, [r2, #20]
 800f09c:	4603      	mov	r3, r0
 800f09e:	bf8c      	ite	hi
 800f0a0:	3337      	addhi	r3, #55	@ 0x37
 800f0a2:	3330      	addls	r3, #48	@ 0x30
 800f0a4:	f3c1 4003 	ubfx	r0, r1, #16, #4
 800f0a8:	f882 c00f 	strb.w	ip, [r2, #15]
 800f0ac:	f04f 0c00 	mov.w	ip, #0
 800f0b0:	2809      	cmp	r0, #9
 800f0b2:	f882 c013 	strb.w	ip, [r2, #19]
 800f0b6:	7593      	strb	r3, [r2, #22]
 800f0b8:	f04f 0c00 	mov.w	ip, #0
 800f0bc:	4603      	mov	r3, r0
 800f0be:	f882 c015 	strb.w	ip, [r2, #21]
 800f0c2:	bf98      	it	ls
 800f0c4:	3330      	addls	r3, #48	@ 0x30
 800f0c6:	f04f 0c00 	mov.w	ip, #0
 800f0ca:	bf88      	it	hi
 800f0cc:	3337      	addhi	r3, #55	@ 0x37
 800f0ce:	2100      	movs	r1, #0
 800f0d0:	4803      	ldr	r0, [pc, #12]	@ (800f0e0 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800f0d2:	f882 c017 	strb.w	ip, [r2, #23]
 800f0d6:	7613      	strb	r3, [r2, #24]
 800f0d8:	7651      	strb	r1, [r2, #25]
 800f0da:	4770      	bx	lr
 800f0dc:	1fff7000 	.word	0x1fff7000
 800f0e0:	200000e0 	.word	0x200000e0

0800f0e4 <HAL_PCD_MspInit>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
#else
void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f0e4:	b530      	push	{r4, r5, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(pcdHandle->Instance==USB)
 800f0e6:	4b1b      	ldr	r3, [pc, #108]	@ (800f154 <HAL_PCD_MspInit+0x70>)
 800f0e8:	6802      	ldr	r2, [r0, #0]
{
 800f0ea:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800f0ec:	2400      	movs	r4, #0
  if(pcdHandle->Instance==USB)
 800f0ee:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800f0f0:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800f0f4:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800f0f8:	9406      	str	r4, [sp, #24]
  if(pcdHandle->Instance==USB)
 800f0fa:	d001      	beq.n	800f100 <HAL_PCD_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(USB_LP_IRQn);
  /* USER CODE BEGIN USB_MspInit 1 */

  /* USER CODE END USB_MspInit 1 */
  }
}
 800f0fc:	b009      	add	sp, #36	@ 0x24
 800f0fe:	bd30      	pop	{r4, r5, pc}
  SET_BIT(RCC->AHB2ENR, Periphs);
 800f100:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 800f104:	f44f 52c0 	mov.w	r2, #6144	@ 0x1800
 800f108:	6ceb      	ldr	r3, [r5, #76]	@ 0x4c
 800f10a:	f043 0301 	orr.w	r3, r3, #1
 800f10e:	64eb      	str	r3, [r5, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800f110:	6ceb      	ldr	r3, [r5, #76]	@ 0x4c
 800f112:	f003 0301 	and.w	r3, r3, #1
 800f116:	9301      	str	r3, [sp, #4]
 800f118:	2302      	movs	r3, #2
 800f11a:	e9cd 2302 	strd	r2, r3, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800f11e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF10_USB;
 800f120:	230a      	movs	r3, #10
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800f122:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 800f126:	9a01      	ldr	r2, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF10_USB;
 800f128:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800f12a:	f7f7 f93f 	bl	80063ac <HAL_GPIO_Init>
  SET_BIT(RCC->APB1ENR1, Periphs);
 800f12e:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 800f130:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800f134:	65ab      	str	r3, [r5, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800f136:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 800f138:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
    HAL_NVIC_SetPriority(USB_LP_IRQn, 5, 0);
 800f13c:	2105      	movs	r1, #5
 800f13e:	4622      	mov	r2, r4
 800f140:	9300      	str	r3, [sp, #0]
 800f142:	2014      	movs	r0, #20
  (void)tmpreg;
 800f144:	9b00      	ldr	r3, [sp, #0]
 800f146:	f7f6 ff3f 	bl	8005fc8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_IRQn);
 800f14a:	2014      	movs	r0, #20
 800f14c:	f7f6 ff78 	bl	8006040 <HAL_NVIC_EnableIRQ>
}
 800f150:	b009      	add	sp, #36	@ 0x24
 800f152:	bd30      	pop	{r4, r5, pc}
 800f154:	40006800 	.word	0x40006800

0800f158 <HAL_PCD_SetupStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_SetupStageCallback_PreTreatment */

  /* USER CODE END  HAL_PCD_SetupStageCallback_PreTreatment */
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800f158:	f500 7126 	add.w	r1, r0, #664	@ 0x298
 800f15c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f160:	f7fd bd4a 	b.w	800cbf8 <USBD_LL_SetupStage>

0800f164 <HAL_PCD_DataOutStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_DataOutStageCallback_PreTreatment */

  /* USER CODE END HAL_PCD_DataOutStageCallback_PreTreatment */
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 800f164:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800f168:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f16c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f170:	f8d3 2164 	ldr.w	r2, [r3, #356]	@ 0x164
 800f174:	f7fd bd70 	b.w	800cc58 <USBD_LL_DataOutStage>

0800f178 <HAL_PCD_DataInStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_DataInStageCallback_PreTreatment */

  /* USER CODE END HAL_PCD_DataInStageCallback_PreTreatment */
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800f178:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800f17c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f180:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f184:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800f186:	f7fd bda1 	b.w	800cccc <USBD_LL_DataInStage>
 800f18a:	bf00      	nop

0800f18c <HAL_PCD_SOFCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_SOFCallback_PreTreatment */

  /* USER CODE END HAL_PCD_SOFCallback_PreTreatment */
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800f18c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f190:	f7fd be42 	b.w	800ce18 <USBD_LL_SOF>

0800f194 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f194:	b510      	push	{r4, lr}
  /* USER CODE BEGIN HAL_PCD_ResetCallback_PreTreatment */

  /* USER CODE END HAL_PCD_ResetCallback_PreTreatment */
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800f196:	7943      	ldrb	r3, [r0, #5]
 800f198:	2b02      	cmp	r3, #2
{
 800f19a:	4604      	mov	r4, r0
  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800f19c:	d001      	beq.n	800f1a2 <HAL_PCD_ResetCallback+0xe>
  {
    Error_Handler();
 800f19e:	f7f3 f863 	bl	8002268 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800f1a2:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
 800f1a6:	2101      	movs	r1, #1
 800f1a8:	f7fd fe18 	bl	800cddc <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800f1ac:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
  /* USER CODE BEGIN HAL_PCD_ResetCallback_PostTreatment */

  /* USER CODE END HAL_PCD_ResetCallback_PostTreatment */
}
 800f1b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800f1b4:	f7fd bde4 	b.w	800cd80 <USBD_LL_Reset>

0800f1b8 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f1b8:	b510      	push	{r4, lr}
 800f1ba:	4604      	mov	r4, r0
  /* USER CODE BEGIN HAL_PCD_SuspendCallback_PreTreatment */

  /* USER CODE END HAL_PCD_SuspendCallback_PreTreatment */
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800f1bc:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f1c0:	f7fd fe10 	bl	800cde4 <USBD_LL_Suspend>
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 800f1c4:	7a63      	ldrb	r3, [r4, #9]
 800f1c6:	b123      	cbz	r3, 800f1d2 <HAL_PCD_SuspendCallback+0x1a>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f1c8:	4a02      	ldr	r2, [pc, #8]	@ (800f1d4 <HAL_PCD_SuspendCallback+0x1c>)
 800f1ca:	6913      	ldr	r3, [r2, #16]
 800f1cc:	f043 0306 	orr.w	r3, r3, #6
 800f1d0:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
  /* USER CODE BEGIN HAL_PCD_SuspendCallback_PostTreatment */

  /* USER CODE END HAL_PCD_SuspendCallback_PostTreatment */
}
 800f1d2:	bd10      	pop	{r4, pc}
 800f1d4:	e000ed00 	.word	0xe000ed00

0800f1d8 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f1d8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN HAL_PCD_ResumeCallback_PreTreatment */

  /* USER CODE END HAL_PCD_ResumeCallback_PreTreatment */

  /* USER CODE BEGIN 3 */
  if (hpcd->Init.low_power_enable)
 800f1da:	7a43      	ldrb	r3, [r0, #9]
{
 800f1dc:	4604      	mov	r4, r0
  if (hpcd->Init.low_power_enable)
 800f1de:	b92b      	cbnz	r3, 800f1ec <HAL_PCD_ResumeCallback+0x14>
    SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
    SystemClockConfig_Resume();
  }
  /* USER CODE END 3 */

  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f1e0:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
  /* USER CODE BEGIN HAL_PCD_ResumeCallback_PostTreatment */

  /* USER CODE END HAL_PCD_ResumeCallback_PostTreatment */
}
 800f1e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f1e8:	f7fd be0a 	b.w	800ce00 <USBD_LL_Resume>
    SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f1ec:	4a06      	ldr	r2, [pc, #24]	@ (800f208 <HAL_PCD_ResumeCallback+0x30>)
 800f1ee:	6913      	ldr	r3, [r2, #16]
 800f1f0:	f023 0306 	bic.w	r3, r3, #6
 800f1f4:	6113      	str	r3, [r2, #16]
  *         enable HSI, PLL and select PLL as system clock source.
  * @retval None
  */
static void SystemClockConfig_Resume(void)
{
  SystemClock_Config();
 800f1f6:	f7f2 fe9b 	bl	8001f30 <SystemClock_Config>
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f1fa:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
}
 800f1fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f202:	f7fd bdfd 	b.w	800ce00 <USBD_LL_Resume>
 800f206:	bf00      	nop
 800f208:	e000ed00 	.word	0xe000ed00

0800f20c <USBD_LL_Init>:
{
 800f20c:	b538      	push	{r3, r4, r5, lr}
  hpcd_USB_FS.pData = pdev;
 800f20e:	4d20      	ldr	r5, [pc, #128]	@ (800f290 <USBD_LL_Init+0x84>)
 800f210:	f8c5 02d8 	str.w	r0, [r5, #728]	@ 0x2d8
  pdev->pData = &hpcd_USB_FS;
 800f214:	f8c0 52c8 	str.w	r5, [r0, #712]	@ 0x2c8
{
 800f218:	4604      	mov	r4, r0
  HAL_PWREx_EnableVddUSB();
 800f21a:	f7f9 f8bb 	bl	8008394 <HAL_PWREx_EnableVddUSB>
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800f21e:	f44f 7302 	mov.w	r3, #520	@ 0x208
  hpcd_USB_FS.Instance = USB;
 800f222:	491c      	ldr	r1, [pc, #112]	@ (800f294 <USBD_LL_Init+0x88>)
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800f224:	80ab      	strh	r3, [r5, #4]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800f226:	2202      	movs	r2, #2
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800f228:	2300      	movs	r3, #0
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800f22a:	4628      	mov	r0, r5
  hpcd_USB_FS.Instance = USB;
 800f22c:	6029      	str	r1, [r5, #0]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800f22e:	f8c5 2007 	str.w	r2, [r5, #7]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800f232:	72eb      	strb	r3, [r5, #11]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800f234:	f7f8 f88a 	bl	800734c <HAL_PCD_Init>
 800f238:	bb30      	cbnz	r0, 800f288 <USBD_LL_Init+0x7c>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 800f23a:	2200      	movs	r2, #0
 800f23c:	4611      	mov	r1, r2
 800f23e:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f242:	2318      	movs	r3, #24
 800f244:	f7f9 f85e 	bl	8008304 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 800f248:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f24c:	2358      	movs	r3, #88	@ 0x58
 800f24e:	2200      	movs	r2, #0
 800f250:	2180      	movs	r1, #128	@ 0x80
 800f252:	f7f9 f857 	bl	8008304 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);
 800f256:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f25a:	23c0      	movs	r3, #192	@ 0xc0
 800f25c:	2200      	movs	r2, #0
 800f25e:	2181      	movs	r1, #129	@ 0x81
 800f260:	f7f9 f850 	bl	8008304 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 800f264:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f268:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800f26c:	2200      	movs	r2, #0
 800f26e:	2101      	movs	r1, #1
 800f270:	f7f9 f848 	bl	8008304 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);
 800f274:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f278:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800f27c:	2200      	movs	r2, #0
 800f27e:	2182      	movs	r1, #130	@ 0x82
 800f280:	f7f9 f840 	bl	8008304 <HAL_PCDEx_PMAConfig>
}
 800f284:	2000      	movs	r0, #0
 800f286:	bd38      	pop	{r3, r4, r5, pc}
    Error_Handler( );
 800f288:	f7f2 ffee 	bl	8002268 <Error_Handler>
 800f28c:	e7d5      	b.n	800f23a <USBD_LL_Init+0x2e>
 800f28e:	bf00      	nop
 800f290:	2000576c 	.word	0x2000576c
 800f294:	40006800 	.word	0x40006800

0800f298 <USBD_LL_Start>:
{
 800f298:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 800f29a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f29e:	f7f8 f93f 	bl	8007520 <HAL_PCD_Start>
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 800f2a2:	b118      	cbz	r0, 800f2ac <USBD_LL_Start+0x14>
 800f2a4:	2802      	cmp	r0, #2
 800f2a6:	bf0c      	ite	eq
 800f2a8:	2001      	moveq	r0, #1
 800f2aa:	2003      	movne	r0, #3
}
 800f2ac:	bd08      	pop	{r3, pc}
 800f2ae:	bf00      	nop

0800f2b0 <USBD_LL_OpenEP>:
{
 800f2b0:	4694      	mov	ip, r2
 800f2b2:	b508      	push	{r3, lr}
 800f2b4:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 800f2b6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f2ba:	4663      	mov	r3, ip
 800f2bc:	f7f8 fef8 	bl	80080b0 <HAL_PCD_EP_Open>
  switch (hal_status)
 800f2c0:	b118      	cbz	r0, 800f2ca <USBD_LL_OpenEP+0x1a>
 800f2c2:	2802      	cmp	r0, #2
 800f2c4:	bf0c      	ite	eq
 800f2c6:	2001      	moveq	r0, #1
 800f2c8:	2003      	movne	r0, #3
}
 800f2ca:	bd08      	pop	{r3, pc}

0800f2cc <USBD_LL_CloseEP>:
{
 800f2cc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800f2ce:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f2d2:	f7f8 ff29 	bl	8008128 <HAL_PCD_EP_Close>
  switch (hal_status)
 800f2d6:	b118      	cbz	r0, 800f2e0 <USBD_LL_CloseEP+0x14>
 800f2d8:	2802      	cmp	r0, #2
 800f2da:	bf0c      	ite	eq
 800f2dc:	2001      	moveq	r0, #1
 800f2de:	2003      	movne	r0, #3
}
 800f2e0:	bd08      	pop	{r3, pc}
 800f2e2:	bf00      	nop

0800f2e4 <USBD_LL_StallEP>:
{
 800f2e4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 800f2e6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f2ea:	f7f8 ff93 	bl	8008214 <HAL_PCD_EP_SetStall>
  switch (hal_status)
 800f2ee:	b118      	cbz	r0, 800f2f8 <USBD_LL_StallEP+0x14>
 800f2f0:	2802      	cmp	r0, #2
 800f2f2:	bf0c      	ite	eq
 800f2f4:	2001      	moveq	r0, #1
 800f2f6:	2003      	movne	r0, #3
}
 800f2f8:	bd08      	pop	{r3, pc}
 800f2fa:	bf00      	nop

0800f2fc <USBD_LL_ClearStallEP>:
{
 800f2fc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 800f2fe:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f302:	f7f8 ffc3 	bl	800828c <HAL_PCD_EP_ClrStall>
  switch (hal_status)
 800f306:	b118      	cbz	r0, 800f310 <USBD_LL_ClearStallEP+0x14>
 800f308:	2802      	cmp	r0, #2
 800f30a:	bf0c      	ite	eq
 800f30c:	2001      	moveq	r0, #1
 800f30e:	2003      	movne	r0, #3
}
 800f310:	bd08      	pop	{r3, pc}
 800f312:	bf00      	nop

0800f314 <USBD_LL_IsStallEP>:
  if((ep_addr & 0x80) == 0x80)
 800f314:	060a      	lsls	r2, r1, #24
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800f316:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 800f31a:	d406      	bmi.n	800f32a <USBD_LL_IsStallEP+0x16>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800f31c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800f320:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f324:	f893 0152 	ldrb.w	r0, [r3, #338]	@ 0x152
}
 800f328:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800f32a:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800f32e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800f332:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f336:	7c98      	ldrb	r0, [r3, #18]
 800f338:	4770      	bx	lr
 800f33a:	bf00      	nop

0800f33c <USBD_LL_SetUSBAddress>:
{
 800f33c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800f33e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f342:	f7f8 fea1 	bl	8008088 <HAL_PCD_SetAddress>
  switch (hal_status)
 800f346:	b118      	cbz	r0, 800f350 <USBD_LL_SetUSBAddress+0x14>
 800f348:	2802      	cmp	r0, #2
 800f34a:	bf0c      	ite	eq
 800f34c:	2001      	moveq	r0, #1
 800f34e:	2003      	movne	r0, #3
}
 800f350:	bd08      	pop	{r3, pc}
 800f352:	bf00      	nop

0800f354 <USBD_LL_Transmit>:
{
 800f354:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 800f356:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f35a:	f7f8 ff3d 	bl	80081d8 <HAL_PCD_EP_Transmit>
  switch (hal_status)
 800f35e:	b118      	cbz	r0, 800f368 <USBD_LL_Transmit+0x14>
 800f360:	2802      	cmp	r0, #2
 800f362:	bf0c      	ite	eq
 800f364:	2001      	moveq	r0, #1
 800f366:	2003      	movne	r0, #3
}
 800f368:	bd08      	pop	{r3, pc}
 800f36a:	bf00      	nop

0800f36c <USBD_LL_PrepareReceive>:
{
 800f36c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800f36e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f372:	f7f8 ff0d 	bl	8008190 <HAL_PCD_EP_Receive>
  switch (hal_status)
 800f376:	b118      	cbz	r0, 800f380 <USBD_LL_PrepareReceive+0x14>
 800f378:	2802      	cmp	r0, #2
 800f37a:	bf0c      	ite	eq
 800f37c:	2001      	moveq	r0, #1
 800f37e:	2003      	movne	r0, #3
}
 800f380:	bd08      	pop	{r3, pc}
 800f382:	bf00      	nop

0800f384 <USBD_LL_GetRxDataSize>:
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 800f384:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f388:	f7f8 bf1c 	b.w	80081c4 <HAL_PCD_EP_GetRxCount>

0800f38c <HAL_PCDEx_LPM_Callback>:
{
 800f38c:	b510      	push	{r4, lr}
 800f38e:	4604      	mov	r4, r0
  switch (msg)
 800f390:	b179      	cbz	r1, 800f3b2 <HAL_PCDEx_LPM_Callback+0x26>
 800f392:	2901      	cmp	r1, #1
 800f394:	d000      	beq.n	800f398 <HAL_PCDEx_LPM_Callback+0xc>
}
 800f396:	bd10      	pop	{r4, pc}
    USBD_LL_Suspend(hpcd->pData);
 800f398:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f39c:	f7fd fd22 	bl	800cde4 <USBD_LL_Suspend>
    if (hpcd->Init.low_power_enable)
 800f3a0:	7a63      	ldrb	r3, [r4, #9]
 800f3a2:	2b00      	cmp	r3, #0
 800f3a4:	d0f7      	beq.n	800f396 <HAL_PCDEx_LPM_Callback+0xa>
      SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3a6:	4a0d      	ldr	r2, [pc, #52]	@ (800f3dc <HAL_PCDEx_LPM_Callback+0x50>)
 800f3a8:	6913      	ldr	r3, [r2, #16]
 800f3aa:	f043 0306 	orr.w	r3, r3, #6
 800f3ae:	6113      	str	r3, [r2, #16]
}
 800f3b0:	bd10      	pop	{r4, pc}
    if (hpcd->Init.low_power_enable)
 800f3b2:	7a43      	ldrb	r3, [r0, #9]
 800f3b4:	b92b      	cbnz	r3, 800f3c2 <HAL_PCDEx_LPM_Callback+0x36>
    USBD_LL_Resume(hpcd->pData);
 800f3b6:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
}
 800f3ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    USBD_LL_Resume(hpcd->pData);
 800f3be:	f7fd bd1f 	b.w	800ce00 <USBD_LL_Resume>
  SystemClock_Config();
 800f3c2:	f7f2 fdb5 	bl	8001f30 <SystemClock_Config>
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3c6:	4a05      	ldr	r2, [pc, #20]	@ (800f3dc <HAL_PCDEx_LPM_Callback+0x50>)
    USBD_LL_Resume(hpcd->pData);
 800f3c8:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3cc:	6913      	ldr	r3, [r2, #16]
 800f3ce:	f023 0306 	bic.w	r3, r3, #6
}
 800f3d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3d6:	6113      	str	r3, [r2, #16]
    USBD_LL_Resume(hpcd->pData);
 800f3d8:	f7fd bd12 	b.w	800ce00 <USBD_LL_Resume>
 800f3dc:	e000ed00 	.word	0xe000ed00

0800f3e0 <USBD_static_malloc>:
}
 800f3e0:	4800      	ldr	r0, [pc, #0]	@ (800f3e4 <USBD_static_malloc+0x4>)
 800f3e2:	4770      	bx	lr
 800f3e4:	2000554c 	.word	0x2000554c

0800f3e8 <USBD_static_free>:
}
 800f3e8:	4770      	bx	lr
 800f3ea:	bf00      	nop

0800f3ec <_strtol_l.isra.0>:
 800f3ec:	2b24      	cmp	r3, #36	@ 0x24
 800f3ee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f3f2:	4686      	mov	lr, r0
 800f3f4:	4690      	mov	r8, r2
 800f3f6:	d801      	bhi.n	800f3fc <_strtol_l.isra.0+0x10>
 800f3f8:	2b01      	cmp	r3, #1
 800f3fa:	d106      	bne.n	800f40a <_strtol_l.isra.0+0x1e>
 800f3fc:	f001 f886 	bl	801050c <__errno>
 800f400:	2316      	movs	r3, #22
 800f402:	6003      	str	r3, [r0, #0]
 800f404:	2000      	movs	r0, #0
 800f406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f40a:	4834      	ldr	r0, [pc, #208]	@ (800f4dc <_strtol_l.isra.0+0xf0>)
 800f40c:	460d      	mov	r5, r1
 800f40e:	462a      	mov	r2, r5
 800f410:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f414:	5d06      	ldrb	r6, [r0, r4]
 800f416:	f016 0608 	ands.w	r6, r6, #8
 800f41a:	d1f8      	bne.n	800f40e <_strtol_l.isra.0+0x22>
 800f41c:	2c2d      	cmp	r4, #45	@ 0x2d
 800f41e:	d110      	bne.n	800f442 <_strtol_l.isra.0+0x56>
 800f420:	782c      	ldrb	r4, [r5, #0]
 800f422:	2601      	movs	r6, #1
 800f424:	1c95      	adds	r5, r2, #2
 800f426:	f033 0210 	bics.w	r2, r3, #16
 800f42a:	d115      	bne.n	800f458 <_strtol_l.isra.0+0x6c>
 800f42c:	2c30      	cmp	r4, #48	@ 0x30
 800f42e:	d10d      	bne.n	800f44c <_strtol_l.isra.0+0x60>
 800f430:	782a      	ldrb	r2, [r5, #0]
 800f432:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800f436:	2a58      	cmp	r2, #88	@ 0x58
 800f438:	d108      	bne.n	800f44c <_strtol_l.isra.0+0x60>
 800f43a:	786c      	ldrb	r4, [r5, #1]
 800f43c:	3502      	adds	r5, #2
 800f43e:	2310      	movs	r3, #16
 800f440:	e00a      	b.n	800f458 <_strtol_l.isra.0+0x6c>
 800f442:	2c2b      	cmp	r4, #43	@ 0x2b
 800f444:	bf04      	itt	eq
 800f446:	782c      	ldrbeq	r4, [r5, #0]
 800f448:	1c95      	addeq	r5, r2, #2
 800f44a:	e7ec      	b.n	800f426 <_strtol_l.isra.0+0x3a>
 800f44c:	2b00      	cmp	r3, #0
 800f44e:	d1f6      	bne.n	800f43e <_strtol_l.isra.0+0x52>
 800f450:	2c30      	cmp	r4, #48	@ 0x30
 800f452:	bf14      	ite	ne
 800f454:	230a      	movne	r3, #10
 800f456:	2308      	moveq	r3, #8
 800f458:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800f45c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f460:	2200      	movs	r2, #0
 800f462:	fbbc f9f3 	udiv	r9, ip, r3
 800f466:	4610      	mov	r0, r2
 800f468:	fb03 ca19 	mls	sl, r3, r9, ip
 800f46c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800f470:	2f09      	cmp	r7, #9
 800f472:	d80f      	bhi.n	800f494 <_strtol_l.isra.0+0xa8>
 800f474:	463c      	mov	r4, r7
 800f476:	42a3      	cmp	r3, r4
 800f478:	dd1b      	ble.n	800f4b2 <_strtol_l.isra.0+0xc6>
 800f47a:	1c57      	adds	r7, r2, #1
 800f47c:	d007      	beq.n	800f48e <_strtol_l.isra.0+0xa2>
 800f47e:	4581      	cmp	r9, r0
 800f480:	d314      	bcc.n	800f4ac <_strtol_l.isra.0+0xc0>
 800f482:	d101      	bne.n	800f488 <_strtol_l.isra.0+0x9c>
 800f484:	45a2      	cmp	sl, r4
 800f486:	db11      	blt.n	800f4ac <_strtol_l.isra.0+0xc0>
 800f488:	fb00 4003 	mla	r0, r0, r3, r4
 800f48c:	2201      	movs	r2, #1
 800f48e:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f492:	e7eb      	b.n	800f46c <_strtol_l.isra.0+0x80>
 800f494:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800f498:	2f19      	cmp	r7, #25
 800f49a:	d801      	bhi.n	800f4a0 <_strtol_l.isra.0+0xb4>
 800f49c:	3c37      	subs	r4, #55	@ 0x37
 800f49e:	e7ea      	b.n	800f476 <_strtol_l.isra.0+0x8a>
 800f4a0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800f4a4:	2f19      	cmp	r7, #25
 800f4a6:	d804      	bhi.n	800f4b2 <_strtol_l.isra.0+0xc6>
 800f4a8:	3c57      	subs	r4, #87	@ 0x57
 800f4aa:	e7e4      	b.n	800f476 <_strtol_l.isra.0+0x8a>
 800f4ac:	f04f 32ff 	mov.w	r2, #4294967295
 800f4b0:	e7ed      	b.n	800f48e <_strtol_l.isra.0+0xa2>
 800f4b2:	1c53      	adds	r3, r2, #1
 800f4b4:	d108      	bne.n	800f4c8 <_strtol_l.isra.0+0xdc>
 800f4b6:	2322      	movs	r3, #34	@ 0x22
 800f4b8:	f8ce 3000 	str.w	r3, [lr]
 800f4bc:	4660      	mov	r0, ip
 800f4be:	f1b8 0f00 	cmp.w	r8, #0
 800f4c2:	d0a0      	beq.n	800f406 <_strtol_l.isra.0+0x1a>
 800f4c4:	1e69      	subs	r1, r5, #1
 800f4c6:	e006      	b.n	800f4d6 <_strtol_l.isra.0+0xea>
 800f4c8:	b106      	cbz	r6, 800f4cc <_strtol_l.isra.0+0xe0>
 800f4ca:	4240      	negs	r0, r0
 800f4cc:	f1b8 0f00 	cmp.w	r8, #0
 800f4d0:	d099      	beq.n	800f406 <_strtol_l.isra.0+0x1a>
 800f4d2:	2a00      	cmp	r2, #0
 800f4d4:	d1f6      	bne.n	800f4c4 <_strtol_l.isra.0+0xd8>
 800f4d6:	f8c8 1000 	str.w	r1, [r8]
 800f4da:	e794      	b.n	800f406 <_strtol_l.isra.0+0x1a>
 800f4dc:	080183e9 	.word	0x080183e9

0800f4e0 <_strtol_r>:
 800f4e0:	f7ff bf84 	b.w	800f3ec <_strtol_l.isra.0>

0800f4e4 <__cvt>:
 800f4e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f4e8:	ec57 6b10 	vmov	r6, r7, d0
 800f4ec:	2f00      	cmp	r7, #0
 800f4ee:	460c      	mov	r4, r1
 800f4f0:	4619      	mov	r1, r3
 800f4f2:	463b      	mov	r3, r7
 800f4f4:	bfbb      	ittet	lt
 800f4f6:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800f4fa:	461f      	movlt	r7, r3
 800f4fc:	2300      	movge	r3, #0
 800f4fe:	232d      	movlt	r3, #45	@ 0x2d
 800f500:	700b      	strb	r3, [r1, #0]
 800f502:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f504:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800f508:	4691      	mov	r9, r2
 800f50a:	f023 0820 	bic.w	r8, r3, #32
 800f50e:	bfbc      	itt	lt
 800f510:	4632      	movlt	r2, r6
 800f512:	4616      	movlt	r6, r2
 800f514:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800f518:	d005      	beq.n	800f526 <__cvt+0x42>
 800f51a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800f51e:	d100      	bne.n	800f522 <__cvt+0x3e>
 800f520:	3401      	adds	r4, #1
 800f522:	2102      	movs	r1, #2
 800f524:	e000      	b.n	800f528 <__cvt+0x44>
 800f526:	2103      	movs	r1, #3
 800f528:	ab03      	add	r3, sp, #12
 800f52a:	9301      	str	r3, [sp, #4]
 800f52c:	ab02      	add	r3, sp, #8
 800f52e:	9300      	str	r3, [sp, #0]
 800f530:	ec47 6b10 	vmov	d0, r6, r7
 800f534:	4653      	mov	r3, sl
 800f536:	4622      	mov	r2, r4
 800f538:	f001 f8b2 	bl	80106a0 <_dtoa_r>
 800f53c:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800f540:	4605      	mov	r5, r0
 800f542:	d119      	bne.n	800f578 <__cvt+0x94>
 800f544:	f019 0f01 	tst.w	r9, #1
 800f548:	d00e      	beq.n	800f568 <__cvt+0x84>
 800f54a:	eb00 0904 	add.w	r9, r0, r4
 800f54e:	2200      	movs	r2, #0
 800f550:	2300      	movs	r3, #0
 800f552:	4630      	mov	r0, r6
 800f554:	4639      	mov	r1, r7
 800f556:	f7f1 fa8f 	bl	8000a78 <__aeabi_dcmpeq>
 800f55a:	b108      	cbz	r0, 800f560 <__cvt+0x7c>
 800f55c:	f8cd 900c 	str.w	r9, [sp, #12]
 800f560:	2230      	movs	r2, #48	@ 0x30
 800f562:	9b03      	ldr	r3, [sp, #12]
 800f564:	454b      	cmp	r3, r9
 800f566:	d31e      	bcc.n	800f5a6 <__cvt+0xc2>
 800f568:	9b03      	ldr	r3, [sp, #12]
 800f56a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800f56c:	1b5b      	subs	r3, r3, r5
 800f56e:	4628      	mov	r0, r5
 800f570:	6013      	str	r3, [r2, #0]
 800f572:	b004      	add	sp, #16
 800f574:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f578:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800f57c:	eb00 0904 	add.w	r9, r0, r4
 800f580:	d1e5      	bne.n	800f54e <__cvt+0x6a>
 800f582:	7803      	ldrb	r3, [r0, #0]
 800f584:	2b30      	cmp	r3, #48	@ 0x30
 800f586:	d10a      	bne.n	800f59e <__cvt+0xba>
 800f588:	2200      	movs	r2, #0
 800f58a:	2300      	movs	r3, #0
 800f58c:	4630      	mov	r0, r6
 800f58e:	4639      	mov	r1, r7
 800f590:	f7f1 fa72 	bl	8000a78 <__aeabi_dcmpeq>
 800f594:	b918      	cbnz	r0, 800f59e <__cvt+0xba>
 800f596:	f1c4 0401 	rsb	r4, r4, #1
 800f59a:	f8ca 4000 	str.w	r4, [sl]
 800f59e:	f8da 3000 	ldr.w	r3, [sl]
 800f5a2:	4499      	add	r9, r3
 800f5a4:	e7d3      	b.n	800f54e <__cvt+0x6a>
 800f5a6:	1c59      	adds	r1, r3, #1
 800f5a8:	9103      	str	r1, [sp, #12]
 800f5aa:	701a      	strb	r2, [r3, #0]
 800f5ac:	e7d9      	b.n	800f562 <__cvt+0x7e>

0800f5ae <__exponent>:
 800f5ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f5b0:	2900      	cmp	r1, #0
 800f5b2:	bfba      	itte	lt
 800f5b4:	4249      	neglt	r1, r1
 800f5b6:	232d      	movlt	r3, #45	@ 0x2d
 800f5b8:	232b      	movge	r3, #43	@ 0x2b
 800f5ba:	2909      	cmp	r1, #9
 800f5bc:	7002      	strb	r2, [r0, #0]
 800f5be:	7043      	strb	r3, [r0, #1]
 800f5c0:	dd29      	ble.n	800f616 <__exponent+0x68>
 800f5c2:	f10d 0307 	add.w	r3, sp, #7
 800f5c6:	461d      	mov	r5, r3
 800f5c8:	270a      	movs	r7, #10
 800f5ca:	461a      	mov	r2, r3
 800f5cc:	fbb1 f6f7 	udiv	r6, r1, r7
 800f5d0:	fb07 1416 	mls	r4, r7, r6, r1
 800f5d4:	3430      	adds	r4, #48	@ 0x30
 800f5d6:	f802 4c01 	strb.w	r4, [r2, #-1]
 800f5da:	460c      	mov	r4, r1
 800f5dc:	2c63      	cmp	r4, #99	@ 0x63
 800f5de:	f103 33ff 	add.w	r3, r3, #4294967295
 800f5e2:	4631      	mov	r1, r6
 800f5e4:	dcf1      	bgt.n	800f5ca <__exponent+0x1c>
 800f5e6:	3130      	adds	r1, #48	@ 0x30
 800f5e8:	1e94      	subs	r4, r2, #2
 800f5ea:	f803 1c01 	strb.w	r1, [r3, #-1]
 800f5ee:	1c41      	adds	r1, r0, #1
 800f5f0:	4623      	mov	r3, r4
 800f5f2:	42ab      	cmp	r3, r5
 800f5f4:	d30a      	bcc.n	800f60c <__exponent+0x5e>
 800f5f6:	f10d 0309 	add.w	r3, sp, #9
 800f5fa:	1a9b      	subs	r3, r3, r2
 800f5fc:	42ac      	cmp	r4, r5
 800f5fe:	bf88      	it	hi
 800f600:	2300      	movhi	r3, #0
 800f602:	3302      	adds	r3, #2
 800f604:	4403      	add	r3, r0
 800f606:	1a18      	subs	r0, r3, r0
 800f608:	b003      	add	sp, #12
 800f60a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f60c:	f813 6b01 	ldrb.w	r6, [r3], #1
 800f610:	f801 6f01 	strb.w	r6, [r1, #1]!
 800f614:	e7ed      	b.n	800f5f2 <__exponent+0x44>
 800f616:	2330      	movs	r3, #48	@ 0x30
 800f618:	3130      	adds	r1, #48	@ 0x30
 800f61a:	7083      	strb	r3, [r0, #2]
 800f61c:	70c1      	strb	r1, [r0, #3]
 800f61e:	1d03      	adds	r3, r0, #4
 800f620:	e7f1      	b.n	800f606 <__exponent+0x58>
	...

0800f624 <_printf_float>:
 800f624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f628:	b08d      	sub	sp, #52	@ 0x34
 800f62a:	460c      	mov	r4, r1
 800f62c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800f630:	4616      	mov	r6, r2
 800f632:	461f      	mov	r7, r3
 800f634:	4605      	mov	r5, r0
 800f636:	f000 ff1f 	bl	8010478 <_localeconv_r>
 800f63a:	6803      	ldr	r3, [r0, #0]
 800f63c:	9304      	str	r3, [sp, #16]
 800f63e:	4618      	mov	r0, r3
 800f640:	f7f0 fdee 	bl	8000220 <strlen>
 800f644:	2300      	movs	r3, #0
 800f646:	930a      	str	r3, [sp, #40]	@ 0x28
 800f648:	f8d8 3000 	ldr.w	r3, [r8]
 800f64c:	9005      	str	r0, [sp, #20]
 800f64e:	3307      	adds	r3, #7
 800f650:	f023 0307 	bic.w	r3, r3, #7
 800f654:	f103 0208 	add.w	r2, r3, #8
 800f658:	f894 a018 	ldrb.w	sl, [r4, #24]
 800f65c:	f8d4 b000 	ldr.w	fp, [r4]
 800f660:	f8c8 2000 	str.w	r2, [r8]
 800f664:	e9d3 8900 	ldrd	r8, r9, [r3]
 800f668:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800f66c:	9307      	str	r3, [sp, #28]
 800f66e:	f8cd 8018 	str.w	r8, [sp, #24]
 800f672:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800f676:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f67a:	4b9c      	ldr	r3, [pc, #624]	@ (800f8ec <_printf_float+0x2c8>)
 800f67c:	f04f 32ff 	mov.w	r2, #4294967295
 800f680:	f7f1 fa2c 	bl	8000adc <__aeabi_dcmpun>
 800f684:	bb70      	cbnz	r0, 800f6e4 <_printf_float+0xc0>
 800f686:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f68a:	4b98      	ldr	r3, [pc, #608]	@ (800f8ec <_printf_float+0x2c8>)
 800f68c:	f04f 32ff 	mov.w	r2, #4294967295
 800f690:	f7f1 fa06 	bl	8000aa0 <__aeabi_dcmple>
 800f694:	bb30      	cbnz	r0, 800f6e4 <_printf_float+0xc0>
 800f696:	2200      	movs	r2, #0
 800f698:	2300      	movs	r3, #0
 800f69a:	4640      	mov	r0, r8
 800f69c:	4649      	mov	r1, r9
 800f69e:	f7f1 f9f5 	bl	8000a8c <__aeabi_dcmplt>
 800f6a2:	b110      	cbz	r0, 800f6aa <_printf_float+0x86>
 800f6a4:	232d      	movs	r3, #45	@ 0x2d
 800f6a6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f6aa:	4a91      	ldr	r2, [pc, #580]	@ (800f8f0 <_printf_float+0x2cc>)
 800f6ac:	4b91      	ldr	r3, [pc, #580]	@ (800f8f4 <_printf_float+0x2d0>)
 800f6ae:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800f6b2:	bf8c      	ite	hi
 800f6b4:	4690      	movhi	r8, r2
 800f6b6:	4698      	movls	r8, r3
 800f6b8:	2303      	movs	r3, #3
 800f6ba:	6123      	str	r3, [r4, #16]
 800f6bc:	f02b 0304 	bic.w	r3, fp, #4
 800f6c0:	6023      	str	r3, [r4, #0]
 800f6c2:	f04f 0900 	mov.w	r9, #0
 800f6c6:	9700      	str	r7, [sp, #0]
 800f6c8:	4633      	mov	r3, r6
 800f6ca:	aa0b      	add	r2, sp, #44	@ 0x2c
 800f6cc:	4621      	mov	r1, r4
 800f6ce:	4628      	mov	r0, r5
 800f6d0:	f000 f9d2 	bl	800fa78 <_printf_common>
 800f6d4:	3001      	adds	r0, #1
 800f6d6:	f040 808d 	bne.w	800f7f4 <_printf_float+0x1d0>
 800f6da:	f04f 30ff 	mov.w	r0, #4294967295
 800f6de:	b00d      	add	sp, #52	@ 0x34
 800f6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6e4:	4642      	mov	r2, r8
 800f6e6:	464b      	mov	r3, r9
 800f6e8:	4640      	mov	r0, r8
 800f6ea:	4649      	mov	r1, r9
 800f6ec:	f7f1 f9f6 	bl	8000adc <__aeabi_dcmpun>
 800f6f0:	b140      	cbz	r0, 800f704 <_printf_float+0xe0>
 800f6f2:	464b      	mov	r3, r9
 800f6f4:	2b00      	cmp	r3, #0
 800f6f6:	bfbc      	itt	lt
 800f6f8:	232d      	movlt	r3, #45	@ 0x2d
 800f6fa:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800f6fe:	4a7e      	ldr	r2, [pc, #504]	@ (800f8f8 <_printf_float+0x2d4>)
 800f700:	4b7e      	ldr	r3, [pc, #504]	@ (800f8fc <_printf_float+0x2d8>)
 800f702:	e7d4      	b.n	800f6ae <_printf_float+0x8a>
 800f704:	6863      	ldr	r3, [r4, #4]
 800f706:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800f70a:	9206      	str	r2, [sp, #24]
 800f70c:	1c5a      	adds	r2, r3, #1
 800f70e:	d13b      	bne.n	800f788 <_printf_float+0x164>
 800f710:	2306      	movs	r3, #6
 800f712:	6063      	str	r3, [r4, #4]
 800f714:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800f718:	2300      	movs	r3, #0
 800f71a:	6022      	str	r2, [r4, #0]
 800f71c:	9303      	str	r3, [sp, #12]
 800f71e:	ab0a      	add	r3, sp, #40	@ 0x28
 800f720:	e9cd a301 	strd	sl, r3, [sp, #4]
 800f724:	ab09      	add	r3, sp, #36	@ 0x24
 800f726:	9300      	str	r3, [sp, #0]
 800f728:	6861      	ldr	r1, [r4, #4]
 800f72a:	ec49 8b10 	vmov	d0, r8, r9
 800f72e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800f732:	4628      	mov	r0, r5
 800f734:	f7ff fed6 	bl	800f4e4 <__cvt>
 800f738:	9b06      	ldr	r3, [sp, #24]
 800f73a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800f73c:	2b47      	cmp	r3, #71	@ 0x47
 800f73e:	4680      	mov	r8, r0
 800f740:	d129      	bne.n	800f796 <_printf_float+0x172>
 800f742:	1cc8      	adds	r0, r1, #3
 800f744:	db02      	blt.n	800f74c <_printf_float+0x128>
 800f746:	6863      	ldr	r3, [r4, #4]
 800f748:	4299      	cmp	r1, r3
 800f74a:	dd41      	ble.n	800f7d0 <_printf_float+0x1ac>
 800f74c:	f1aa 0a02 	sub.w	sl, sl, #2
 800f750:	fa5f fa8a 	uxtb.w	sl, sl
 800f754:	3901      	subs	r1, #1
 800f756:	4652      	mov	r2, sl
 800f758:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f75c:	9109      	str	r1, [sp, #36]	@ 0x24
 800f75e:	f7ff ff26 	bl	800f5ae <__exponent>
 800f762:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f764:	1813      	adds	r3, r2, r0
 800f766:	2a01      	cmp	r2, #1
 800f768:	4681      	mov	r9, r0
 800f76a:	6123      	str	r3, [r4, #16]
 800f76c:	dc02      	bgt.n	800f774 <_printf_float+0x150>
 800f76e:	6822      	ldr	r2, [r4, #0]
 800f770:	07d2      	lsls	r2, r2, #31
 800f772:	d501      	bpl.n	800f778 <_printf_float+0x154>
 800f774:	3301      	adds	r3, #1
 800f776:	6123      	str	r3, [r4, #16]
 800f778:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800f77c:	2b00      	cmp	r3, #0
 800f77e:	d0a2      	beq.n	800f6c6 <_printf_float+0xa2>
 800f780:	232d      	movs	r3, #45	@ 0x2d
 800f782:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f786:	e79e      	b.n	800f6c6 <_printf_float+0xa2>
 800f788:	9a06      	ldr	r2, [sp, #24]
 800f78a:	2a47      	cmp	r2, #71	@ 0x47
 800f78c:	d1c2      	bne.n	800f714 <_printf_float+0xf0>
 800f78e:	2b00      	cmp	r3, #0
 800f790:	d1c0      	bne.n	800f714 <_printf_float+0xf0>
 800f792:	2301      	movs	r3, #1
 800f794:	e7bd      	b.n	800f712 <_printf_float+0xee>
 800f796:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800f79a:	d9db      	bls.n	800f754 <_printf_float+0x130>
 800f79c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800f7a0:	d118      	bne.n	800f7d4 <_printf_float+0x1b0>
 800f7a2:	2900      	cmp	r1, #0
 800f7a4:	6863      	ldr	r3, [r4, #4]
 800f7a6:	dd0b      	ble.n	800f7c0 <_printf_float+0x19c>
 800f7a8:	6121      	str	r1, [r4, #16]
 800f7aa:	b913      	cbnz	r3, 800f7b2 <_printf_float+0x18e>
 800f7ac:	6822      	ldr	r2, [r4, #0]
 800f7ae:	07d0      	lsls	r0, r2, #31
 800f7b0:	d502      	bpl.n	800f7b8 <_printf_float+0x194>
 800f7b2:	3301      	adds	r3, #1
 800f7b4:	440b      	add	r3, r1
 800f7b6:	6123      	str	r3, [r4, #16]
 800f7b8:	65a1      	str	r1, [r4, #88]	@ 0x58
 800f7ba:	f04f 0900 	mov.w	r9, #0
 800f7be:	e7db      	b.n	800f778 <_printf_float+0x154>
 800f7c0:	b913      	cbnz	r3, 800f7c8 <_printf_float+0x1a4>
 800f7c2:	6822      	ldr	r2, [r4, #0]
 800f7c4:	07d2      	lsls	r2, r2, #31
 800f7c6:	d501      	bpl.n	800f7cc <_printf_float+0x1a8>
 800f7c8:	3302      	adds	r3, #2
 800f7ca:	e7f4      	b.n	800f7b6 <_printf_float+0x192>
 800f7cc:	2301      	movs	r3, #1
 800f7ce:	e7f2      	b.n	800f7b6 <_printf_float+0x192>
 800f7d0:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800f7d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f7d6:	4299      	cmp	r1, r3
 800f7d8:	db05      	blt.n	800f7e6 <_printf_float+0x1c2>
 800f7da:	6823      	ldr	r3, [r4, #0]
 800f7dc:	6121      	str	r1, [r4, #16]
 800f7de:	07d8      	lsls	r0, r3, #31
 800f7e0:	d5ea      	bpl.n	800f7b8 <_printf_float+0x194>
 800f7e2:	1c4b      	adds	r3, r1, #1
 800f7e4:	e7e7      	b.n	800f7b6 <_printf_float+0x192>
 800f7e6:	2900      	cmp	r1, #0
 800f7e8:	bfd4      	ite	le
 800f7ea:	f1c1 0202 	rsble	r2, r1, #2
 800f7ee:	2201      	movgt	r2, #1
 800f7f0:	4413      	add	r3, r2
 800f7f2:	e7e0      	b.n	800f7b6 <_printf_float+0x192>
 800f7f4:	6823      	ldr	r3, [r4, #0]
 800f7f6:	055a      	lsls	r2, r3, #21
 800f7f8:	d407      	bmi.n	800f80a <_printf_float+0x1e6>
 800f7fa:	6923      	ldr	r3, [r4, #16]
 800f7fc:	4642      	mov	r2, r8
 800f7fe:	4631      	mov	r1, r6
 800f800:	4628      	mov	r0, r5
 800f802:	47b8      	blx	r7
 800f804:	3001      	adds	r0, #1
 800f806:	d12b      	bne.n	800f860 <_printf_float+0x23c>
 800f808:	e767      	b.n	800f6da <_printf_float+0xb6>
 800f80a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800f80e:	f240 80dd 	bls.w	800f9cc <_printf_float+0x3a8>
 800f812:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800f816:	2200      	movs	r2, #0
 800f818:	2300      	movs	r3, #0
 800f81a:	f7f1 f92d 	bl	8000a78 <__aeabi_dcmpeq>
 800f81e:	2800      	cmp	r0, #0
 800f820:	d033      	beq.n	800f88a <_printf_float+0x266>
 800f822:	4a37      	ldr	r2, [pc, #220]	@ (800f900 <_printf_float+0x2dc>)
 800f824:	2301      	movs	r3, #1
 800f826:	4631      	mov	r1, r6
 800f828:	4628      	mov	r0, r5
 800f82a:	47b8      	blx	r7
 800f82c:	3001      	adds	r0, #1
 800f82e:	f43f af54 	beq.w	800f6da <_printf_float+0xb6>
 800f832:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800f836:	4543      	cmp	r3, r8
 800f838:	db02      	blt.n	800f840 <_printf_float+0x21c>
 800f83a:	6823      	ldr	r3, [r4, #0]
 800f83c:	07d8      	lsls	r0, r3, #31
 800f83e:	d50f      	bpl.n	800f860 <_printf_float+0x23c>
 800f840:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f844:	4631      	mov	r1, r6
 800f846:	4628      	mov	r0, r5
 800f848:	47b8      	blx	r7
 800f84a:	3001      	adds	r0, #1
 800f84c:	f43f af45 	beq.w	800f6da <_printf_float+0xb6>
 800f850:	f04f 0900 	mov.w	r9, #0
 800f854:	f108 38ff 	add.w	r8, r8, #4294967295
 800f858:	f104 0a1a 	add.w	sl, r4, #26
 800f85c:	45c8      	cmp	r8, r9
 800f85e:	dc09      	bgt.n	800f874 <_printf_float+0x250>
 800f860:	6823      	ldr	r3, [r4, #0]
 800f862:	079b      	lsls	r3, r3, #30
 800f864:	f100 8103 	bmi.w	800fa6e <_printf_float+0x44a>
 800f868:	68e0      	ldr	r0, [r4, #12]
 800f86a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f86c:	4298      	cmp	r0, r3
 800f86e:	bfb8      	it	lt
 800f870:	4618      	movlt	r0, r3
 800f872:	e734      	b.n	800f6de <_printf_float+0xba>
 800f874:	2301      	movs	r3, #1
 800f876:	4652      	mov	r2, sl
 800f878:	4631      	mov	r1, r6
 800f87a:	4628      	mov	r0, r5
 800f87c:	47b8      	blx	r7
 800f87e:	3001      	adds	r0, #1
 800f880:	f43f af2b 	beq.w	800f6da <_printf_float+0xb6>
 800f884:	f109 0901 	add.w	r9, r9, #1
 800f888:	e7e8      	b.n	800f85c <_printf_float+0x238>
 800f88a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f88c:	2b00      	cmp	r3, #0
 800f88e:	dc39      	bgt.n	800f904 <_printf_float+0x2e0>
 800f890:	4a1b      	ldr	r2, [pc, #108]	@ (800f900 <_printf_float+0x2dc>)
 800f892:	2301      	movs	r3, #1
 800f894:	4631      	mov	r1, r6
 800f896:	4628      	mov	r0, r5
 800f898:	47b8      	blx	r7
 800f89a:	3001      	adds	r0, #1
 800f89c:	f43f af1d 	beq.w	800f6da <_printf_float+0xb6>
 800f8a0:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800f8a4:	ea59 0303 	orrs.w	r3, r9, r3
 800f8a8:	d102      	bne.n	800f8b0 <_printf_float+0x28c>
 800f8aa:	6823      	ldr	r3, [r4, #0]
 800f8ac:	07d9      	lsls	r1, r3, #31
 800f8ae:	d5d7      	bpl.n	800f860 <_printf_float+0x23c>
 800f8b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f8b4:	4631      	mov	r1, r6
 800f8b6:	4628      	mov	r0, r5
 800f8b8:	47b8      	blx	r7
 800f8ba:	3001      	adds	r0, #1
 800f8bc:	f43f af0d 	beq.w	800f6da <_printf_float+0xb6>
 800f8c0:	f04f 0a00 	mov.w	sl, #0
 800f8c4:	f104 0b1a 	add.w	fp, r4, #26
 800f8c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f8ca:	425b      	negs	r3, r3
 800f8cc:	4553      	cmp	r3, sl
 800f8ce:	dc01      	bgt.n	800f8d4 <_printf_float+0x2b0>
 800f8d0:	464b      	mov	r3, r9
 800f8d2:	e793      	b.n	800f7fc <_printf_float+0x1d8>
 800f8d4:	2301      	movs	r3, #1
 800f8d6:	465a      	mov	r2, fp
 800f8d8:	4631      	mov	r1, r6
 800f8da:	4628      	mov	r0, r5
 800f8dc:	47b8      	blx	r7
 800f8de:	3001      	adds	r0, #1
 800f8e0:	f43f aefb 	beq.w	800f6da <_printf_float+0xb6>
 800f8e4:	f10a 0a01 	add.w	sl, sl, #1
 800f8e8:	e7ee      	b.n	800f8c8 <_printf_float+0x2a4>
 800f8ea:	bf00      	nop
 800f8ec:	7fefffff 	.word	0x7fefffff
 800f8f0:	080184ed 	.word	0x080184ed
 800f8f4:	080184e9 	.word	0x080184e9
 800f8f8:	080184f5 	.word	0x080184f5
 800f8fc:	080184f1 	.word	0x080184f1
 800f900:	080184f9 	.word	0x080184f9
 800f904:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800f906:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800f90a:	4553      	cmp	r3, sl
 800f90c:	bfa8      	it	ge
 800f90e:	4653      	movge	r3, sl
 800f910:	2b00      	cmp	r3, #0
 800f912:	4699      	mov	r9, r3
 800f914:	dc36      	bgt.n	800f984 <_printf_float+0x360>
 800f916:	f04f 0b00 	mov.w	fp, #0
 800f91a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f91e:	f104 021a 	add.w	r2, r4, #26
 800f922:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800f924:	9306      	str	r3, [sp, #24]
 800f926:	eba3 0309 	sub.w	r3, r3, r9
 800f92a:	455b      	cmp	r3, fp
 800f92c:	dc31      	bgt.n	800f992 <_printf_float+0x36e>
 800f92e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f930:	459a      	cmp	sl, r3
 800f932:	dc3a      	bgt.n	800f9aa <_printf_float+0x386>
 800f934:	6823      	ldr	r3, [r4, #0]
 800f936:	07da      	lsls	r2, r3, #31
 800f938:	d437      	bmi.n	800f9aa <_printf_float+0x386>
 800f93a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f93c:	ebaa 0903 	sub.w	r9, sl, r3
 800f940:	9b06      	ldr	r3, [sp, #24]
 800f942:	ebaa 0303 	sub.w	r3, sl, r3
 800f946:	4599      	cmp	r9, r3
 800f948:	bfa8      	it	ge
 800f94a:	4699      	movge	r9, r3
 800f94c:	f1b9 0f00 	cmp.w	r9, #0
 800f950:	dc33      	bgt.n	800f9ba <_printf_float+0x396>
 800f952:	f04f 0800 	mov.w	r8, #0
 800f956:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f95a:	f104 0b1a 	add.w	fp, r4, #26
 800f95e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f960:	ebaa 0303 	sub.w	r3, sl, r3
 800f964:	eba3 0309 	sub.w	r3, r3, r9
 800f968:	4543      	cmp	r3, r8
 800f96a:	f77f af79 	ble.w	800f860 <_printf_float+0x23c>
 800f96e:	2301      	movs	r3, #1
 800f970:	465a      	mov	r2, fp
 800f972:	4631      	mov	r1, r6
 800f974:	4628      	mov	r0, r5
 800f976:	47b8      	blx	r7
 800f978:	3001      	adds	r0, #1
 800f97a:	f43f aeae 	beq.w	800f6da <_printf_float+0xb6>
 800f97e:	f108 0801 	add.w	r8, r8, #1
 800f982:	e7ec      	b.n	800f95e <_printf_float+0x33a>
 800f984:	4642      	mov	r2, r8
 800f986:	4631      	mov	r1, r6
 800f988:	4628      	mov	r0, r5
 800f98a:	47b8      	blx	r7
 800f98c:	3001      	adds	r0, #1
 800f98e:	d1c2      	bne.n	800f916 <_printf_float+0x2f2>
 800f990:	e6a3      	b.n	800f6da <_printf_float+0xb6>
 800f992:	2301      	movs	r3, #1
 800f994:	4631      	mov	r1, r6
 800f996:	4628      	mov	r0, r5
 800f998:	9206      	str	r2, [sp, #24]
 800f99a:	47b8      	blx	r7
 800f99c:	3001      	adds	r0, #1
 800f99e:	f43f ae9c 	beq.w	800f6da <_printf_float+0xb6>
 800f9a2:	9a06      	ldr	r2, [sp, #24]
 800f9a4:	f10b 0b01 	add.w	fp, fp, #1
 800f9a8:	e7bb      	b.n	800f922 <_printf_float+0x2fe>
 800f9aa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f9ae:	4631      	mov	r1, r6
 800f9b0:	4628      	mov	r0, r5
 800f9b2:	47b8      	blx	r7
 800f9b4:	3001      	adds	r0, #1
 800f9b6:	d1c0      	bne.n	800f93a <_printf_float+0x316>
 800f9b8:	e68f      	b.n	800f6da <_printf_float+0xb6>
 800f9ba:	9a06      	ldr	r2, [sp, #24]
 800f9bc:	464b      	mov	r3, r9
 800f9be:	4442      	add	r2, r8
 800f9c0:	4631      	mov	r1, r6
 800f9c2:	4628      	mov	r0, r5
 800f9c4:	47b8      	blx	r7
 800f9c6:	3001      	adds	r0, #1
 800f9c8:	d1c3      	bne.n	800f952 <_printf_float+0x32e>
 800f9ca:	e686      	b.n	800f6da <_printf_float+0xb6>
 800f9cc:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800f9d0:	f1ba 0f01 	cmp.w	sl, #1
 800f9d4:	dc01      	bgt.n	800f9da <_printf_float+0x3b6>
 800f9d6:	07db      	lsls	r3, r3, #31
 800f9d8:	d536      	bpl.n	800fa48 <_printf_float+0x424>
 800f9da:	2301      	movs	r3, #1
 800f9dc:	4642      	mov	r2, r8
 800f9de:	4631      	mov	r1, r6
 800f9e0:	4628      	mov	r0, r5
 800f9e2:	47b8      	blx	r7
 800f9e4:	3001      	adds	r0, #1
 800f9e6:	f43f ae78 	beq.w	800f6da <_printf_float+0xb6>
 800f9ea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f9ee:	4631      	mov	r1, r6
 800f9f0:	4628      	mov	r0, r5
 800f9f2:	47b8      	blx	r7
 800f9f4:	3001      	adds	r0, #1
 800f9f6:	f43f ae70 	beq.w	800f6da <_printf_float+0xb6>
 800f9fa:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800f9fe:	2200      	movs	r2, #0
 800fa00:	2300      	movs	r3, #0
 800fa02:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fa06:	f7f1 f837 	bl	8000a78 <__aeabi_dcmpeq>
 800fa0a:	b9c0      	cbnz	r0, 800fa3e <_printf_float+0x41a>
 800fa0c:	4653      	mov	r3, sl
 800fa0e:	f108 0201 	add.w	r2, r8, #1
 800fa12:	4631      	mov	r1, r6
 800fa14:	4628      	mov	r0, r5
 800fa16:	47b8      	blx	r7
 800fa18:	3001      	adds	r0, #1
 800fa1a:	d10c      	bne.n	800fa36 <_printf_float+0x412>
 800fa1c:	e65d      	b.n	800f6da <_printf_float+0xb6>
 800fa1e:	2301      	movs	r3, #1
 800fa20:	465a      	mov	r2, fp
 800fa22:	4631      	mov	r1, r6
 800fa24:	4628      	mov	r0, r5
 800fa26:	47b8      	blx	r7
 800fa28:	3001      	adds	r0, #1
 800fa2a:	f43f ae56 	beq.w	800f6da <_printf_float+0xb6>
 800fa2e:	f108 0801 	add.w	r8, r8, #1
 800fa32:	45d0      	cmp	r8, sl
 800fa34:	dbf3      	blt.n	800fa1e <_printf_float+0x3fa>
 800fa36:	464b      	mov	r3, r9
 800fa38:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800fa3c:	e6df      	b.n	800f7fe <_printf_float+0x1da>
 800fa3e:	f04f 0800 	mov.w	r8, #0
 800fa42:	f104 0b1a 	add.w	fp, r4, #26
 800fa46:	e7f4      	b.n	800fa32 <_printf_float+0x40e>
 800fa48:	2301      	movs	r3, #1
 800fa4a:	4642      	mov	r2, r8
 800fa4c:	e7e1      	b.n	800fa12 <_printf_float+0x3ee>
 800fa4e:	2301      	movs	r3, #1
 800fa50:	464a      	mov	r2, r9
 800fa52:	4631      	mov	r1, r6
 800fa54:	4628      	mov	r0, r5
 800fa56:	47b8      	blx	r7
 800fa58:	3001      	adds	r0, #1
 800fa5a:	f43f ae3e 	beq.w	800f6da <_printf_float+0xb6>
 800fa5e:	f108 0801 	add.w	r8, r8, #1
 800fa62:	68e3      	ldr	r3, [r4, #12]
 800fa64:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800fa66:	1a5b      	subs	r3, r3, r1
 800fa68:	4543      	cmp	r3, r8
 800fa6a:	dcf0      	bgt.n	800fa4e <_printf_float+0x42a>
 800fa6c:	e6fc      	b.n	800f868 <_printf_float+0x244>
 800fa6e:	f04f 0800 	mov.w	r8, #0
 800fa72:	f104 0919 	add.w	r9, r4, #25
 800fa76:	e7f4      	b.n	800fa62 <_printf_float+0x43e>

0800fa78 <_printf_common>:
 800fa78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa7c:	4616      	mov	r6, r2
 800fa7e:	4698      	mov	r8, r3
 800fa80:	688a      	ldr	r2, [r1, #8]
 800fa82:	690b      	ldr	r3, [r1, #16]
 800fa84:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800fa88:	4293      	cmp	r3, r2
 800fa8a:	bfb8      	it	lt
 800fa8c:	4613      	movlt	r3, r2
 800fa8e:	6033      	str	r3, [r6, #0]
 800fa90:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800fa94:	4607      	mov	r7, r0
 800fa96:	460c      	mov	r4, r1
 800fa98:	b10a      	cbz	r2, 800fa9e <_printf_common+0x26>
 800fa9a:	3301      	adds	r3, #1
 800fa9c:	6033      	str	r3, [r6, #0]
 800fa9e:	6823      	ldr	r3, [r4, #0]
 800faa0:	0699      	lsls	r1, r3, #26
 800faa2:	bf42      	ittt	mi
 800faa4:	6833      	ldrmi	r3, [r6, #0]
 800faa6:	3302      	addmi	r3, #2
 800faa8:	6033      	strmi	r3, [r6, #0]
 800faaa:	6825      	ldr	r5, [r4, #0]
 800faac:	f015 0506 	ands.w	r5, r5, #6
 800fab0:	d106      	bne.n	800fac0 <_printf_common+0x48>
 800fab2:	f104 0a19 	add.w	sl, r4, #25
 800fab6:	68e3      	ldr	r3, [r4, #12]
 800fab8:	6832      	ldr	r2, [r6, #0]
 800faba:	1a9b      	subs	r3, r3, r2
 800fabc:	42ab      	cmp	r3, r5
 800fabe:	dc26      	bgt.n	800fb0e <_printf_common+0x96>
 800fac0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800fac4:	6822      	ldr	r2, [r4, #0]
 800fac6:	3b00      	subs	r3, #0
 800fac8:	bf18      	it	ne
 800faca:	2301      	movne	r3, #1
 800facc:	0692      	lsls	r2, r2, #26
 800face:	d42b      	bmi.n	800fb28 <_printf_common+0xb0>
 800fad0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800fad4:	4641      	mov	r1, r8
 800fad6:	4638      	mov	r0, r7
 800fad8:	47c8      	blx	r9
 800fada:	3001      	adds	r0, #1
 800fadc:	d01e      	beq.n	800fb1c <_printf_common+0xa4>
 800fade:	6823      	ldr	r3, [r4, #0]
 800fae0:	6922      	ldr	r2, [r4, #16]
 800fae2:	f003 0306 	and.w	r3, r3, #6
 800fae6:	2b04      	cmp	r3, #4
 800fae8:	bf02      	ittt	eq
 800faea:	68e5      	ldreq	r5, [r4, #12]
 800faec:	6833      	ldreq	r3, [r6, #0]
 800faee:	1aed      	subeq	r5, r5, r3
 800faf0:	68a3      	ldr	r3, [r4, #8]
 800faf2:	bf0c      	ite	eq
 800faf4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800faf8:	2500      	movne	r5, #0
 800fafa:	4293      	cmp	r3, r2
 800fafc:	bfc4      	itt	gt
 800fafe:	1a9b      	subgt	r3, r3, r2
 800fb00:	18ed      	addgt	r5, r5, r3
 800fb02:	2600      	movs	r6, #0
 800fb04:	341a      	adds	r4, #26
 800fb06:	42b5      	cmp	r5, r6
 800fb08:	d11a      	bne.n	800fb40 <_printf_common+0xc8>
 800fb0a:	2000      	movs	r0, #0
 800fb0c:	e008      	b.n	800fb20 <_printf_common+0xa8>
 800fb0e:	2301      	movs	r3, #1
 800fb10:	4652      	mov	r2, sl
 800fb12:	4641      	mov	r1, r8
 800fb14:	4638      	mov	r0, r7
 800fb16:	47c8      	blx	r9
 800fb18:	3001      	adds	r0, #1
 800fb1a:	d103      	bne.n	800fb24 <_printf_common+0xac>
 800fb1c:	f04f 30ff 	mov.w	r0, #4294967295
 800fb20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb24:	3501      	adds	r5, #1
 800fb26:	e7c6      	b.n	800fab6 <_printf_common+0x3e>
 800fb28:	18e1      	adds	r1, r4, r3
 800fb2a:	1c5a      	adds	r2, r3, #1
 800fb2c:	2030      	movs	r0, #48	@ 0x30
 800fb2e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800fb32:	4422      	add	r2, r4
 800fb34:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800fb38:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800fb3c:	3302      	adds	r3, #2
 800fb3e:	e7c7      	b.n	800fad0 <_printf_common+0x58>
 800fb40:	2301      	movs	r3, #1
 800fb42:	4622      	mov	r2, r4
 800fb44:	4641      	mov	r1, r8
 800fb46:	4638      	mov	r0, r7
 800fb48:	47c8      	blx	r9
 800fb4a:	3001      	adds	r0, #1
 800fb4c:	d0e6      	beq.n	800fb1c <_printf_common+0xa4>
 800fb4e:	3601      	adds	r6, #1
 800fb50:	e7d9      	b.n	800fb06 <_printf_common+0x8e>
	...

0800fb54 <_printf_i>:
 800fb54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800fb58:	7e0f      	ldrb	r7, [r1, #24]
 800fb5a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800fb5c:	2f78      	cmp	r7, #120	@ 0x78
 800fb5e:	4691      	mov	r9, r2
 800fb60:	4680      	mov	r8, r0
 800fb62:	460c      	mov	r4, r1
 800fb64:	469a      	mov	sl, r3
 800fb66:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800fb6a:	d807      	bhi.n	800fb7c <_printf_i+0x28>
 800fb6c:	2f62      	cmp	r7, #98	@ 0x62
 800fb6e:	d80a      	bhi.n	800fb86 <_printf_i+0x32>
 800fb70:	2f00      	cmp	r7, #0
 800fb72:	f000 80d1 	beq.w	800fd18 <_printf_i+0x1c4>
 800fb76:	2f58      	cmp	r7, #88	@ 0x58
 800fb78:	f000 80b8 	beq.w	800fcec <_printf_i+0x198>
 800fb7c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800fb80:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800fb84:	e03a      	b.n	800fbfc <_printf_i+0xa8>
 800fb86:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800fb8a:	2b15      	cmp	r3, #21
 800fb8c:	d8f6      	bhi.n	800fb7c <_printf_i+0x28>
 800fb8e:	a101      	add	r1, pc, #4	@ (adr r1, 800fb94 <_printf_i+0x40>)
 800fb90:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800fb94:	0800fbed 	.word	0x0800fbed
 800fb98:	0800fc01 	.word	0x0800fc01
 800fb9c:	0800fb7d 	.word	0x0800fb7d
 800fba0:	0800fb7d 	.word	0x0800fb7d
 800fba4:	0800fb7d 	.word	0x0800fb7d
 800fba8:	0800fb7d 	.word	0x0800fb7d
 800fbac:	0800fc01 	.word	0x0800fc01
 800fbb0:	0800fb7d 	.word	0x0800fb7d
 800fbb4:	0800fb7d 	.word	0x0800fb7d
 800fbb8:	0800fb7d 	.word	0x0800fb7d
 800fbbc:	0800fb7d 	.word	0x0800fb7d
 800fbc0:	0800fcff 	.word	0x0800fcff
 800fbc4:	0800fc2b 	.word	0x0800fc2b
 800fbc8:	0800fcb9 	.word	0x0800fcb9
 800fbcc:	0800fb7d 	.word	0x0800fb7d
 800fbd0:	0800fb7d 	.word	0x0800fb7d
 800fbd4:	0800fd21 	.word	0x0800fd21
 800fbd8:	0800fb7d 	.word	0x0800fb7d
 800fbdc:	0800fc2b 	.word	0x0800fc2b
 800fbe0:	0800fb7d 	.word	0x0800fb7d
 800fbe4:	0800fb7d 	.word	0x0800fb7d
 800fbe8:	0800fcc1 	.word	0x0800fcc1
 800fbec:	6833      	ldr	r3, [r6, #0]
 800fbee:	1d1a      	adds	r2, r3, #4
 800fbf0:	681b      	ldr	r3, [r3, #0]
 800fbf2:	6032      	str	r2, [r6, #0]
 800fbf4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800fbf8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800fbfc:	2301      	movs	r3, #1
 800fbfe:	e09c      	b.n	800fd3a <_printf_i+0x1e6>
 800fc00:	6833      	ldr	r3, [r6, #0]
 800fc02:	6820      	ldr	r0, [r4, #0]
 800fc04:	1d19      	adds	r1, r3, #4
 800fc06:	6031      	str	r1, [r6, #0]
 800fc08:	0606      	lsls	r6, r0, #24
 800fc0a:	d501      	bpl.n	800fc10 <_printf_i+0xbc>
 800fc0c:	681d      	ldr	r5, [r3, #0]
 800fc0e:	e003      	b.n	800fc18 <_printf_i+0xc4>
 800fc10:	0645      	lsls	r5, r0, #25
 800fc12:	d5fb      	bpl.n	800fc0c <_printf_i+0xb8>
 800fc14:	f9b3 5000 	ldrsh.w	r5, [r3]
 800fc18:	2d00      	cmp	r5, #0
 800fc1a:	da03      	bge.n	800fc24 <_printf_i+0xd0>
 800fc1c:	232d      	movs	r3, #45	@ 0x2d
 800fc1e:	426d      	negs	r5, r5
 800fc20:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800fc24:	4858      	ldr	r0, [pc, #352]	@ (800fd88 <_printf_i+0x234>)
 800fc26:	230a      	movs	r3, #10
 800fc28:	e011      	b.n	800fc4e <_printf_i+0xfa>
 800fc2a:	6821      	ldr	r1, [r4, #0]
 800fc2c:	6833      	ldr	r3, [r6, #0]
 800fc2e:	0608      	lsls	r0, r1, #24
 800fc30:	f853 5b04 	ldr.w	r5, [r3], #4
 800fc34:	d402      	bmi.n	800fc3c <_printf_i+0xe8>
 800fc36:	0649      	lsls	r1, r1, #25
 800fc38:	bf48      	it	mi
 800fc3a:	b2ad      	uxthmi	r5, r5
 800fc3c:	2f6f      	cmp	r7, #111	@ 0x6f
 800fc3e:	4852      	ldr	r0, [pc, #328]	@ (800fd88 <_printf_i+0x234>)
 800fc40:	6033      	str	r3, [r6, #0]
 800fc42:	bf14      	ite	ne
 800fc44:	230a      	movne	r3, #10
 800fc46:	2308      	moveq	r3, #8
 800fc48:	2100      	movs	r1, #0
 800fc4a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800fc4e:	6866      	ldr	r6, [r4, #4]
 800fc50:	60a6      	str	r6, [r4, #8]
 800fc52:	2e00      	cmp	r6, #0
 800fc54:	db05      	blt.n	800fc62 <_printf_i+0x10e>
 800fc56:	6821      	ldr	r1, [r4, #0]
 800fc58:	432e      	orrs	r6, r5
 800fc5a:	f021 0104 	bic.w	r1, r1, #4
 800fc5e:	6021      	str	r1, [r4, #0]
 800fc60:	d04b      	beq.n	800fcfa <_printf_i+0x1a6>
 800fc62:	4616      	mov	r6, r2
 800fc64:	fbb5 f1f3 	udiv	r1, r5, r3
 800fc68:	fb03 5711 	mls	r7, r3, r1, r5
 800fc6c:	5dc7      	ldrb	r7, [r0, r7]
 800fc6e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800fc72:	462f      	mov	r7, r5
 800fc74:	42bb      	cmp	r3, r7
 800fc76:	460d      	mov	r5, r1
 800fc78:	d9f4      	bls.n	800fc64 <_printf_i+0x110>
 800fc7a:	2b08      	cmp	r3, #8
 800fc7c:	d10b      	bne.n	800fc96 <_printf_i+0x142>
 800fc7e:	6823      	ldr	r3, [r4, #0]
 800fc80:	07df      	lsls	r7, r3, #31
 800fc82:	d508      	bpl.n	800fc96 <_printf_i+0x142>
 800fc84:	6923      	ldr	r3, [r4, #16]
 800fc86:	6861      	ldr	r1, [r4, #4]
 800fc88:	4299      	cmp	r1, r3
 800fc8a:	bfde      	ittt	le
 800fc8c:	2330      	movle	r3, #48	@ 0x30
 800fc8e:	f806 3c01 	strble.w	r3, [r6, #-1]
 800fc92:	f106 36ff 	addle.w	r6, r6, #4294967295
 800fc96:	1b92      	subs	r2, r2, r6
 800fc98:	6122      	str	r2, [r4, #16]
 800fc9a:	f8cd a000 	str.w	sl, [sp]
 800fc9e:	464b      	mov	r3, r9
 800fca0:	aa03      	add	r2, sp, #12
 800fca2:	4621      	mov	r1, r4
 800fca4:	4640      	mov	r0, r8
 800fca6:	f7ff fee7 	bl	800fa78 <_printf_common>
 800fcaa:	3001      	adds	r0, #1
 800fcac:	d14a      	bne.n	800fd44 <_printf_i+0x1f0>
 800fcae:	f04f 30ff 	mov.w	r0, #4294967295
 800fcb2:	b004      	add	sp, #16
 800fcb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fcb8:	6823      	ldr	r3, [r4, #0]
 800fcba:	f043 0320 	orr.w	r3, r3, #32
 800fcbe:	6023      	str	r3, [r4, #0]
 800fcc0:	4832      	ldr	r0, [pc, #200]	@ (800fd8c <_printf_i+0x238>)
 800fcc2:	2778      	movs	r7, #120	@ 0x78
 800fcc4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800fcc8:	6823      	ldr	r3, [r4, #0]
 800fcca:	6831      	ldr	r1, [r6, #0]
 800fccc:	061f      	lsls	r7, r3, #24
 800fcce:	f851 5b04 	ldr.w	r5, [r1], #4
 800fcd2:	d402      	bmi.n	800fcda <_printf_i+0x186>
 800fcd4:	065f      	lsls	r7, r3, #25
 800fcd6:	bf48      	it	mi
 800fcd8:	b2ad      	uxthmi	r5, r5
 800fcda:	6031      	str	r1, [r6, #0]
 800fcdc:	07d9      	lsls	r1, r3, #31
 800fcde:	bf44      	itt	mi
 800fce0:	f043 0320 	orrmi.w	r3, r3, #32
 800fce4:	6023      	strmi	r3, [r4, #0]
 800fce6:	b11d      	cbz	r5, 800fcf0 <_printf_i+0x19c>
 800fce8:	2310      	movs	r3, #16
 800fcea:	e7ad      	b.n	800fc48 <_printf_i+0xf4>
 800fcec:	4826      	ldr	r0, [pc, #152]	@ (800fd88 <_printf_i+0x234>)
 800fcee:	e7e9      	b.n	800fcc4 <_printf_i+0x170>
 800fcf0:	6823      	ldr	r3, [r4, #0]
 800fcf2:	f023 0320 	bic.w	r3, r3, #32
 800fcf6:	6023      	str	r3, [r4, #0]
 800fcf8:	e7f6      	b.n	800fce8 <_printf_i+0x194>
 800fcfa:	4616      	mov	r6, r2
 800fcfc:	e7bd      	b.n	800fc7a <_printf_i+0x126>
 800fcfe:	6833      	ldr	r3, [r6, #0]
 800fd00:	6825      	ldr	r5, [r4, #0]
 800fd02:	6961      	ldr	r1, [r4, #20]
 800fd04:	1d18      	adds	r0, r3, #4
 800fd06:	6030      	str	r0, [r6, #0]
 800fd08:	062e      	lsls	r6, r5, #24
 800fd0a:	681b      	ldr	r3, [r3, #0]
 800fd0c:	d501      	bpl.n	800fd12 <_printf_i+0x1be>
 800fd0e:	6019      	str	r1, [r3, #0]
 800fd10:	e002      	b.n	800fd18 <_printf_i+0x1c4>
 800fd12:	0668      	lsls	r0, r5, #25
 800fd14:	d5fb      	bpl.n	800fd0e <_printf_i+0x1ba>
 800fd16:	8019      	strh	r1, [r3, #0]
 800fd18:	2300      	movs	r3, #0
 800fd1a:	6123      	str	r3, [r4, #16]
 800fd1c:	4616      	mov	r6, r2
 800fd1e:	e7bc      	b.n	800fc9a <_printf_i+0x146>
 800fd20:	6833      	ldr	r3, [r6, #0]
 800fd22:	1d1a      	adds	r2, r3, #4
 800fd24:	6032      	str	r2, [r6, #0]
 800fd26:	681e      	ldr	r6, [r3, #0]
 800fd28:	6862      	ldr	r2, [r4, #4]
 800fd2a:	2100      	movs	r1, #0
 800fd2c:	4630      	mov	r0, r6
 800fd2e:	f7f0 fa27 	bl	8000180 <memchr>
 800fd32:	b108      	cbz	r0, 800fd38 <_printf_i+0x1e4>
 800fd34:	1b80      	subs	r0, r0, r6
 800fd36:	6060      	str	r0, [r4, #4]
 800fd38:	6863      	ldr	r3, [r4, #4]
 800fd3a:	6123      	str	r3, [r4, #16]
 800fd3c:	2300      	movs	r3, #0
 800fd3e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800fd42:	e7aa      	b.n	800fc9a <_printf_i+0x146>
 800fd44:	6923      	ldr	r3, [r4, #16]
 800fd46:	4632      	mov	r2, r6
 800fd48:	4649      	mov	r1, r9
 800fd4a:	4640      	mov	r0, r8
 800fd4c:	47d0      	blx	sl
 800fd4e:	3001      	adds	r0, #1
 800fd50:	d0ad      	beq.n	800fcae <_printf_i+0x15a>
 800fd52:	6823      	ldr	r3, [r4, #0]
 800fd54:	079b      	lsls	r3, r3, #30
 800fd56:	d413      	bmi.n	800fd80 <_printf_i+0x22c>
 800fd58:	68e0      	ldr	r0, [r4, #12]
 800fd5a:	9b03      	ldr	r3, [sp, #12]
 800fd5c:	4298      	cmp	r0, r3
 800fd5e:	bfb8      	it	lt
 800fd60:	4618      	movlt	r0, r3
 800fd62:	e7a6      	b.n	800fcb2 <_printf_i+0x15e>
 800fd64:	2301      	movs	r3, #1
 800fd66:	4632      	mov	r2, r6
 800fd68:	4649      	mov	r1, r9
 800fd6a:	4640      	mov	r0, r8
 800fd6c:	47d0      	blx	sl
 800fd6e:	3001      	adds	r0, #1
 800fd70:	d09d      	beq.n	800fcae <_printf_i+0x15a>
 800fd72:	3501      	adds	r5, #1
 800fd74:	68e3      	ldr	r3, [r4, #12]
 800fd76:	9903      	ldr	r1, [sp, #12]
 800fd78:	1a5b      	subs	r3, r3, r1
 800fd7a:	42ab      	cmp	r3, r5
 800fd7c:	dcf2      	bgt.n	800fd64 <_printf_i+0x210>
 800fd7e:	e7eb      	b.n	800fd58 <_printf_i+0x204>
 800fd80:	2500      	movs	r5, #0
 800fd82:	f104 0619 	add.w	r6, r4, #25
 800fd86:	e7f5      	b.n	800fd74 <_printf_i+0x220>
 800fd88:	080184fb 	.word	0x080184fb
 800fd8c:	0801850c 	.word	0x0801850c

0800fd90 <_scanf_float>:
 800fd90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd94:	b087      	sub	sp, #28
 800fd96:	4691      	mov	r9, r2
 800fd98:	9303      	str	r3, [sp, #12]
 800fd9a:	688b      	ldr	r3, [r1, #8]
 800fd9c:	1e5a      	subs	r2, r3, #1
 800fd9e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 800fda2:	bf81      	itttt	hi
 800fda4:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 800fda8:	eb03 0b05 	addhi.w	fp, r3, r5
 800fdac:	f240 135d 	movwhi	r3, #349	@ 0x15d
 800fdb0:	608b      	strhi	r3, [r1, #8]
 800fdb2:	680b      	ldr	r3, [r1, #0]
 800fdb4:	460a      	mov	r2, r1
 800fdb6:	f04f 0500 	mov.w	r5, #0
 800fdba:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 800fdbe:	f842 3b1c 	str.w	r3, [r2], #28
 800fdc2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fdc6:	4680      	mov	r8, r0
 800fdc8:	460c      	mov	r4, r1
 800fdca:	bf98      	it	ls
 800fdcc:	f04f 0b00 	movls.w	fp, #0
 800fdd0:	9201      	str	r2, [sp, #4]
 800fdd2:	4616      	mov	r6, r2
 800fdd4:	46aa      	mov	sl, r5
 800fdd6:	462f      	mov	r7, r5
 800fdd8:	9502      	str	r5, [sp, #8]
 800fdda:	68a2      	ldr	r2, [r4, #8]
 800fddc:	b15a      	cbz	r2, 800fdf6 <_scanf_float+0x66>
 800fdde:	f8d9 3000 	ldr.w	r3, [r9]
 800fde2:	781b      	ldrb	r3, [r3, #0]
 800fde4:	2b4e      	cmp	r3, #78	@ 0x4e
 800fde6:	d863      	bhi.n	800feb0 <_scanf_float+0x120>
 800fde8:	2b40      	cmp	r3, #64	@ 0x40
 800fdea:	d83b      	bhi.n	800fe64 <_scanf_float+0xd4>
 800fdec:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 800fdf0:	b2c8      	uxtb	r0, r1
 800fdf2:	280e      	cmp	r0, #14
 800fdf4:	d939      	bls.n	800fe6a <_scanf_float+0xda>
 800fdf6:	b11f      	cbz	r7, 800fe00 <_scanf_float+0x70>
 800fdf8:	6823      	ldr	r3, [r4, #0]
 800fdfa:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800fdfe:	6023      	str	r3, [r4, #0]
 800fe00:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe04:	f1ba 0f01 	cmp.w	sl, #1
 800fe08:	f200 8114 	bhi.w	8010034 <_scanf_float+0x2a4>
 800fe0c:	9b01      	ldr	r3, [sp, #4]
 800fe0e:	429e      	cmp	r6, r3
 800fe10:	f200 8105 	bhi.w	801001e <_scanf_float+0x28e>
 800fe14:	2001      	movs	r0, #1
 800fe16:	b007      	add	sp, #28
 800fe18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe1c:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 800fe20:	2a0d      	cmp	r2, #13
 800fe22:	d8e8      	bhi.n	800fdf6 <_scanf_float+0x66>
 800fe24:	a101      	add	r1, pc, #4	@ (adr r1, 800fe2c <_scanf_float+0x9c>)
 800fe26:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800fe2a:	bf00      	nop
 800fe2c:	0800ff75 	.word	0x0800ff75
 800fe30:	0800fdf7 	.word	0x0800fdf7
 800fe34:	0800fdf7 	.word	0x0800fdf7
 800fe38:	0800fdf7 	.word	0x0800fdf7
 800fe3c:	0800ffd1 	.word	0x0800ffd1
 800fe40:	0800ffab 	.word	0x0800ffab
 800fe44:	0800fdf7 	.word	0x0800fdf7
 800fe48:	0800fdf7 	.word	0x0800fdf7
 800fe4c:	0800ff83 	.word	0x0800ff83
 800fe50:	0800fdf7 	.word	0x0800fdf7
 800fe54:	0800fdf7 	.word	0x0800fdf7
 800fe58:	0800fdf7 	.word	0x0800fdf7
 800fe5c:	0800fdf7 	.word	0x0800fdf7
 800fe60:	0800ff3f 	.word	0x0800ff3f
 800fe64:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 800fe68:	e7da      	b.n	800fe20 <_scanf_float+0x90>
 800fe6a:	290e      	cmp	r1, #14
 800fe6c:	d8c3      	bhi.n	800fdf6 <_scanf_float+0x66>
 800fe6e:	a001      	add	r0, pc, #4	@ (adr r0, 800fe74 <_scanf_float+0xe4>)
 800fe70:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800fe74:	0800ff2f 	.word	0x0800ff2f
 800fe78:	0800fdf7 	.word	0x0800fdf7
 800fe7c:	0800ff2f 	.word	0x0800ff2f
 800fe80:	0800ffbf 	.word	0x0800ffbf
 800fe84:	0800fdf7 	.word	0x0800fdf7
 800fe88:	0800fed1 	.word	0x0800fed1
 800fe8c:	0800ff15 	.word	0x0800ff15
 800fe90:	0800ff15 	.word	0x0800ff15
 800fe94:	0800ff15 	.word	0x0800ff15
 800fe98:	0800ff15 	.word	0x0800ff15
 800fe9c:	0800ff15 	.word	0x0800ff15
 800fea0:	0800ff15 	.word	0x0800ff15
 800fea4:	0800ff15 	.word	0x0800ff15
 800fea8:	0800ff15 	.word	0x0800ff15
 800feac:	0800ff15 	.word	0x0800ff15
 800feb0:	2b6e      	cmp	r3, #110	@ 0x6e
 800feb2:	d809      	bhi.n	800fec8 <_scanf_float+0x138>
 800feb4:	2b60      	cmp	r3, #96	@ 0x60
 800feb6:	d8b1      	bhi.n	800fe1c <_scanf_float+0x8c>
 800feb8:	2b54      	cmp	r3, #84	@ 0x54
 800feba:	d07b      	beq.n	800ffb4 <_scanf_float+0x224>
 800febc:	2b59      	cmp	r3, #89	@ 0x59
 800febe:	d19a      	bne.n	800fdf6 <_scanf_float+0x66>
 800fec0:	2d07      	cmp	r5, #7
 800fec2:	d198      	bne.n	800fdf6 <_scanf_float+0x66>
 800fec4:	2508      	movs	r5, #8
 800fec6:	e02f      	b.n	800ff28 <_scanf_float+0x198>
 800fec8:	2b74      	cmp	r3, #116	@ 0x74
 800feca:	d073      	beq.n	800ffb4 <_scanf_float+0x224>
 800fecc:	2b79      	cmp	r3, #121	@ 0x79
 800fece:	e7f6      	b.n	800febe <_scanf_float+0x12e>
 800fed0:	6821      	ldr	r1, [r4, #0]
 800fed2:	05c8      	lsls	r0, r1, #23
 800fed4:	d51e      	bpl.n	800ff14 <_scanf_float+0x184>
 800fed6:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800feda:	6021      	str	r1, [r4, #0]
 800fedc:	3701      	adds	r7, #1
 800fede:	f1bb 0f00 	cmp.w	fp, #0
 800fee2:	d003      	beq.n	800feec <_scanf_float+0x15c>
 800fee4:	3201      	adds	r2, #1
 800fee6:	f10b 3bff 	add.w	fp, fp, #4294967295
 800feea:	60a2      	str	r2, [r4, #8]
 800feec:	68a3      	ldr	r3, [r4, #8]
 800feee:	3b01      	subs	r3, #1
 800fef0:	60a3      	str	r3, [r4, #8]
 800fef2:	6923      	ldr	r3, [r4, #16]
 800fef4:	3301      	adds	r3, #1
 800fef6:	6123      	str	r3, [r4, #16]
 800fef8:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800fefc:	3b01      	subs	r3, #1
 800fefe:	2b00      	cmp	r3, #0
 800ff00:	f8c9 3004 	str.w	r3, [r9, #4]
 800ff04:	f340 8082 	ble.w	801000c <_scanf_float+0x27c>
 800ff08:	f8d9 3000 	ldr.w	r3, [r9]
 800ff0c:	3301      	adds	r3, #1
 800ff0e:	f8c9 3000 	str.w	r3, [r9]
 800ff12:	e762      	b.n	800fdda <_scanf_float+0x4a>
 800ff14:	eb1a 0105 	adds.w	r1, sl, r5
 800ff18:	f47f af6d 	bne.w	800fdf6 <_scanf_float+0x66>
 800ff1c:	6822      	ldr	r2, [r4, #0]
 800ff1e:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800ff22:	6022      	str	r2, [r4, #0]
 800ff24:	460d      	mov	r5, r1
 800ff26:	468a      	mov	sl, r1
 800ff28:	f806 3b01 	strb.w	r3, [r6], #1
 800ff2c:	e7de      	b.n	800feec <_scanf_float+0x15c>
 800ff2e:	6822      	ldr	r2, [r4, #0]
 800ff30:	0610      	lsls	r0, r2, #24
 800ff32:	f57f af60 	bpl.w	800fdf6 <_scanf_float+0x66>
 800ff36:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800ff3a:	6022      	str	r2, [r4, #0]
 800ff3c:	e7f4      	b.n	800ff28 <_scanf_float+0x198>
 800ff3e:	f1ba 0f00 	cmp.w	sl, #0
 800ff42:	d10c      	bne.n	800ff5e <_scanf_float+0x1ce>
 800ff44:	b977      	cbnz	r7, 800ff64 <_scanf_float+0x1d4>
 800ff46:	6822      	ldr	r2, [r4, #0]
 800ff48:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800ff4c:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800ff50:	d108      	bne.n	800ff64 <_scanf_float+0x1d4>
 800ff52:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800ff56:	6022      	str	r2, [r4, #0]
 800ff58:	f04f 0a01 	mov.w	sl, #1
 800ff5c:	e7e4      	b.n	800ff28 <_scanf_float+0x198>
 800ff5e:	f1ba 0f02 	cmp.w	sl, #2
 800ff62:	d050      	beq.n	8010006 <_scanf_float+0x276>
 800ff64:	2d01      	cmp	r5, #1
 800ff66:	d002      	beq.n	800ff6e <_scanf_float+0x1de>
 800ff68:	2d04      	cmp	r5, #4
 800ff6a:	f47f af44 	bne.w	800fdf6 <_scanf_float+0x66>
 800ff6e:	3501      	adds	r5, #1
 800ff70:	b2ed      	uxtb	r5, r5
 800ff72:	e7d9      	b.n	800ff28 <_scanf_float+0x198>
 800ff74:	f1ba 0f01 	cmp.w	sl, #1
 800ff78:	f47f af3d 	bne.w	800fdf6 <_scanf_float+0x66>
 800ff7c:	f04f 0a02 	mov.w	sl, #2
 800ff80:	e7d2      	b.n	800ff28 <_scanf_float+0x198>
 800ff82:	b975      	cbnz	r5, 800ffa2 <_scanf_float+0x212>
 800ff84:	2f00      	cmp	r7, #0
 800ff86:	f47f af37 	bne.w	800fdf8 <_scanf_float+0x68>
 800ff8a:	6822      	ldr	r2, [r4, #0]
 800ff8c:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800ff90:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800ff94:	f040 8103 	bne.w	801019e <_scanf_float+0x40e>
 800ff98:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800ff9c:	6022      	str	r2, [r4, #0]
 800ff9e:	2501      	movs	r5, #1
 800ffa0:	e7c2      	b.n	800ff28 <_scanf_float+0x198>
 800ffa2:	2d03      	cmp	r5, #3
 800ffa4:	d0e3      	beq.n	800ff6e <_scanf_float+0x1de>
 800ffa6:	2d05      	cmp	r5, #5
 800ffa8:	e7df      	b.n	800ff6a <_scanf_float+0x1da>
 800ffaa:	2d02      	cmp	r5, #2
 800ffac:	f47f af23 	bne.w	800fdf6 <_scanf_float+0x66>
 800ffb0:	2503      	movs	r5, #3
 800ffb2:	e7b9      	b.n	800ff28 <_scanf_float+0x198>
 800ffb4:	2d06      	cmp	r5, #6
 800ffb6:	f47f af1e 	bne.w	800fdf6 <_scanf_float+0x66>
 800ffba:	2507      	movs	r5, #7
 800ffbc:	e7b4      	b.n	800ff28 <_scanf_float+0x198>
 800ffbe:	6822      	ldr	r2, [r4, #0]
 800ffc0:	0591      	lsls	r1, r2, #22
 800ffc2:	f57f af18 	bpl.w	800fdf6 <_scanf_float+0x66>
 800ffc6:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800ffca:	6022      	str	r2, [r4, #0]
 800ffcc:	9702      	str	r7, [sp, #8]
 800ffce:	e7ab      	b.n	800ff28 <_scanf_float+0x198>
 800ffd0:	6822      	ldr	r2, [r4, #0]
 800ffd2:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 800ffd6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800ffda:	d005      	beq.n	800ffe8 <_scanf_float+0x258>
 800ffdc:	0550      	lsls	r0, r2, #21
 800ffde:	f57f af0a 	bpl.w	800fdf6 <_scanf_float+0x66>
 800ffe2:	2f00      	cmp	r7, #0
 800ffe4:	f000 80db 	beq.w	801019e <_scanf_float+0x40e>
 800ffe8:	0591      	lsls	r1, r2, #22
 800ffea:	bf58      	it	pl
 800ffec:	9902      	ldrpl	r1, [sp, #8]
 800ffee:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800fff2:	bf58      	it	pl
 800fff4:	1a79      	subpl	r1, r7, r1
 800fff6:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800fffa:	bf58      	it	pl
 800fffc:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8010000:	6022      	str	r2, [r4, #0]
 8010002:	2700      	movs	r7, #0
 8010004:	e790      	b.n	800ff28 <_scanf_float+0x198>
 8010006:	f04f 0a03 	mov.w	sl, #3
 801000a:	e78d      	b.n	800ff28 <_scanf_float+0x198>
 801000c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8010010:	4649      	mov	r1, r9
 8010012:	4640      	mov	r0, r8
 8010014:	4798      	blx	r3
 8010016:	2800      	cmp	r0, #0
 8010018:	f43f aedf 	beq.w	800fdda <_scanf_float+0x4a>
 801001c:	e6eb      	b.n	800fdf6 <_scanf_float+0x66>
 801001e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8010022:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8010026:	464a      	mov	r2, r9
 8010028:	4640      	mov	r0, r8
 801002a:	4798      	blx	r3
 801002c:	6923      	ldr	r3, [r4, #16]
 801002e:	3b01      	subs	r3, #1
 8010030:	6123      	str	r3, [r4, #16]
 8010032:	e6eb      	b.n	800fe0c <_scanf_float+0x7c>
 8010034:	1e6b      	subs	r3, r5, #1
 8010036:	2b06      	cmp	r3, #6
 8010038:	d824      	bhi.n	8010084 <_scanf_float+0x2f4>
 801003a:	2d02      	cmp	r5, #2
 801003c:	d836      	bhi.n	80100ac <_scanf_float+0x31c>
 801003e:	9b01      	ldr	r3, [sp, #4]
 8010040:	429e      	cmp	r6, r3
 8010042:	f67f aee7 	bls.w	800fe14 <_scanf_float+0x84>
 8010046:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 801004a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 801004e:	464a      	mov	r2, r9
 8010050:	4640      	mov	r0, r8
 8010052:	4798      	blx	r3
 8010054:	6923      	ldr	r3, [r4, #16]
 8010056:	3b01      	subs	r3, #1
 8010058:	6123      	str	r3, [r4, #16]
 801005a:	e7f0      	b.n	801003e <_scanf_float+0x2ae>
 801005c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8010060:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8010064:	464a      	mov	r2, r9
 8010066:	4640      	mov	r0, r8
 8010068:	4798      	blx	r3
 801006a:	6923      	ldr	r3, [r4, #16]
 801006c:	3b01      	subs	r3, #1
 801006e:	6123      	str	r3, [r4, #16]
 8010070:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010074:	fa5f fa8a 	uxtb.w	sl, sl
 8010078:	f1ba 0f02 	cmp.w	sl, #2
 801007c:	d1ee      	bne.n	801005c <_scanf_float+0x2cc>
 801007e:	3d03      	subs	r5, #3
 8010080:	b2ed      	uxtb	r5, r5
 8010082:	1b76      	subs	r6, r6, r5
 8010084:	6823      	ldr	r3, [r4, #0]
 8010086:	05da      	lsls	r2, r3, #23
 8010088:	d530      	bpl.n	80100ec <_scanf_float+0x35c>
 801008a:	055b      	lsls	r3, r3, #21
 801008c:	d511      	bpl.n	80100b2 <_scanf_float+0x322>
 801008e:	9b01      	ldr	r3, [sp, #4]
 8010090:	429e      	cmp	r6, r3
 8010092:	f67f aebf 	bls.w	800fe14 <_scanf_float+0x84>
 8010096:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 801009a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 801009e:	464a      	mov	r2, r9
 80100a0:	4640      	mov	r0, r8
 80100a2:	4798      	blx	r3
 80100a4:	6923      	ldr	r3, [r4, #16]
 80100a6:	3b01      	subs	r3, #1
 80100a8:	6123      	str	r3, [r4, #16]
 80100aa:	e7f0      	b.n	801008e <_scanf_float+0x2fe>
 80100ac:	46aa      	mov	sl, r5
 80100ae:	46b3      	mov	fp, r6
 80100b0:	e7de      	b.n	8010070 <_scanf_float+0x2e0>
 80100b2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80100b6:	6923      	ldr	r3, [r4, #16]
 80100b8:	2965      	cmp	r1, #101	@ 0x65
 80100ba:	f103 33ff 	add.w	r3, r3, #4294967295
 80100be:	f106 35ff 	add.w	r5, r6, #4294967295
 80100c2:	6123      	str	r3, [r4, #16]
 80100c4:	d00c      	beq.n	80100e0 <_scanf_float+0x350>
 80100c6:	2945      	cmp	r1, #69	@ 0x45
 80100c8:	d00a      	beq.n	80100e0 <_scanf_float+0x350>
 80100ca:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80100ce:	464a      	mov	r2, r9
 80100d0:	4640      	mov	r0, r8
 80100d2:	4798      	blx	r3
 80100d4:	6923      	ldr	r3, [r4, #16]
 80100d6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80100da:	3b01      	subs	r3, #1
 80100dc:	1eb5      	subs	r5, r6, #2
 80100de:	6123      	str	r3, [r4, #16]
 80100e0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80100e4:	464a      	mov	r2, r9
 80100e6:	4640      	mov	r0, r8
 80100e8:	4798      	blx	r3
 80100ea:	462e      	mov	r6, r5
 80100ec:	6822      	ldr	r2, [r4, #0]
 80100ee:	f012 0210 	ands.w	r2, r2, #16
 80100f2:	d001      	beq.n	80100f8 <_scanf_float+0x368>
 80100f4:	2000      	movs	r0, #0
 80100f6:	e68e      	b.n	800fe16 <_scanf_float+0x86>
 80100f8:	7032      	strb	r2, [r6, #0]
 80100fa:	6823      	ldr	r3, [r4, #0]
 80100fc:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8010100:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8010104:	d125      	bne.n	8010152 <_scanf_float+0x3c2>
 8010106:	9b02      	ldr	r3, [sp, #8]
 8010108:	429f      	cmp	r7, r3
 801010a:	d00a      	beq.n	8010122 <_scanf_float+0x392>
 801010c:	1bda      	subs	r2, r3, r7
 801010e:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8010112:	429e      	cmp	r6, r3
 8010114:	bf28      	it	cs
 8010116:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 801011a:	4922      	ldr	r1, [pc, #136]	@ (80101a4 <_scanf_float+0x414>)
 801011c:	4630      	mov	r0, r6
 801011e:	f000 f93d 	bl	801039c <siprintf>
 8010122:	9901      	ldr	r1, [sp, #4]
 8010124:	2200      	movs	r2, #0
 8010126:	4640      	mov	r0, r8
 8010128:	f002 fc36 	bl	8012998 <_strtod_r>
 801012c:	9b03      	ldr	r3, [sp, #12]
 801012e:	6821      	ldr	r1, [r4, #0]
 8010130:	681b      	ldr	r3, [r3, #0]
 8010132:	f011 0f02 	tst.w	r1, #2
 8010136:	ec57 6b10 	vmov	r6, r7, d0
 801013a:	f103 0204 	add.w	r2, r3, #4
 801013e:	d015      	beq.n	801016c <_scanf_float+0x3dc>
 8010140:	9903      	ldr	r1, [sp, #12]
 8010142:	600a      	str	r2, [r1, #0]
 8010144:	681b      	ldr	r3, [r3, #0]
 8010146:	e9c3 6700 	strd	r6, r7, [r3]
 801014a:	68e3      	ldr	r3, [r4, #12]
 801014c:	3301      	adds	r3, #1
 801014e:	60e3      	str	r3, [r4, #12]
 8010150:	e7d0      	b.n	80100f4 <_scanf_float+0x364>
 8010152:	9b04      	ldr	r3, [sp, #16]
 8010154:	2b00      	cmp	r3, #0
 8010156:	d0e4      	beq.n	8010122 <_scanf_float+0x392>
 8010158:	9905      	ldr	r1, [sp, #20]
 801015a:	230a      	movs	r3, #10
 801015c:	3101      	adds	r1, #1
 801015e:	4640      	mov	r0, r8
 8010160:	f7ff f9be 	bl	800f4e0 <_strtol_r>
 8010164:	9b04      	ldr	r3, [sp, #16]
 8010166:	9e05      	ldr	r6, [sp, #20]
 8010168:	1ac2      	subs	r2, r0, r3
 801016a:	e7d0      	b.n	801010e <_scanf_float+0x37e>
 801016c:	f011 0f04 	tst.w	r1, #4
 8010170:	9903      	ldr	r1, [sp, #12]
 8010172:	600a      	str	r2, [r1, #0]
 8010174:	d1e6      	bne.n	8010144 <_scanf_float+0x3b4>
 8010176:	681d      	ldr	r5, [r3, #0]
 8010178:	4632      	mov	r2, r6
 801017a:	463b      	mov	r3, r7
 801017c:	4630      	mov	r0, r6
 801017e:	4639      	mov	r1, r7
 8010180:	f7f0 fcac 	bl	8000adc <__aeabi_dcmpun>
 8010184:	b128      	cbz	r0, 8010192 <_scanf_float+0x402>
 8010186:	4808      	ldr	r0, [pc, #32]	@ (80101a8 <_scanf_float+0x418>)
 8010188:	f000 f9fc 	bl	8010584 <nanf>
 801018c:	ed85 0a00 	vstr	s0, [r5]
 8010190:	e7db      	b.n	801014a <_scanf_float+0x3ba>
 8010192:	4630      	mov	r0, r6
 8010194:	4639      	mov	r1, r7
 8010196:	f7f0 fcff 	bl	8000b98 <__aeabi_d2f>
 801019a:	6028      	str	r0, [r5, #0]
 801019c:	e7d5      	b.n	801014a <_scanf_float+0x3ba>
 801019e:	2700      	movs	r7, #0
 80101a0:	e62e      	b.n	800fe00 <_scanf_float+0x70>
 80101a2:	bf00      	nop
 80101a4:	0801851d 	.word	0x0801851d
 80101a8:	0801865e 	.word	0x0801865e

080101ac <std>:
 80101ac:	2300      	movs	r3, #0
 80101ae:	b510      	push	{r4, lr}
 80101b0:	4604      	mov	r4, r0
 80101b2:	e9c0 3300 	strd	r3, r3, [r0]
 80101b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80101ba:	6083      	str	r3, [r0, #8]
 80101bc:	8181      	strh	r1, [r0, #12]
 80101be:	6643      	str	r3, [r0, #100]	@ 0x64
 80101c0:	81c2      	strh	r2, [r0, #14]
 80101c2:	6183      	str	r3, [r0, #24]
 80101c4:	4619      	mov	r1, r3
 80101c6:	2208      	movs	r2, #8
 80101c8:	305c      	adds	r0, #92	@ 0x5c
 80101ca:	f000 f94c 	bl	8010466 <memset>
 80101ce:	4b0d      	ldr	r3, [pc, #52]	@ (8010204 <std+0x58>)
 80101d0:	6263      	str	r3, [r4, #36]	@ 0x24
 80101d2:	4b0d      	ldr	r3, [pc, #52]	@ (8010208 <std+0x5c>)
 80101d4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80101d6:	4b0d      	ldr	r3, [pc, #52]	@ (801020c <std+0x60>)
 80101d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80101da:	4b0d      	ldr	r3, [pc, #52]	@ (8010210 <std+0x64>)
 80101dc:	6323      	str	r3, [r4, #48]	@ 0x30
 80101de:	4b0d      	ldr	r3, [pc, #52]	@ (8010214 <std+0x68>)
 80101e0:	6224      	str	r4, [r4, #32]
 80101e2:	429c      	cmp	r4, r3
 80101e4:	d006      	beq.n	80101f4 <std+0x48>
 80101e6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80101ea:	4294      	cmp	r4, r2
 80101ec:	d002      	beq.n	80101f4 <std+0x48>
 80101ee:	33d0      	adds	r3, #208	@ 0xd0
 80101f0:	429c      	cmp	r4, r3
 80101f2:	d105      	bne.n	8010200 <std+0x54>
 80101f4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80101f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101fc:	f000 b9b0 	b.w	8010560 <__retarget_lock_init_recursive>
 8010200:	bd10      	pop	{r4, pc}
 8010202:	bf00      	nop
 8010204:	080103e1 	.word	0x080103e1
 8010208:	08010403 	.word	0x08010403
 801020c:	0801043b 	.word	0x0801043b
 8010210:	0801045f 	.word	0x0801045f
 8010214:	20005a48 	.word	0x20005a48

08010218 <stdio_exit_handler>:
 8010218:	4a02      	ldr	r2, [pc, #8]	@ (8010224 <stdio_exit_handler+0xc>)
 801021a:	4903      	ldr	r1, [pc, #12]	@ (8010228 <stdio_exit_handler+0x10>)
 801021c:	4803      	ldr	r0, [pc, #12]	@ (801022c <stdio_exit_handler+0x14>)
 801021e:	f000 b869 	b.w	80102f4 <_fwalk_sglue>
 8010222:	bf00      	nop
 8010224:	20000134 	.word	0x20000134
 8010228:	08012d5d 	.word	0x08012d5d
 801022c:	20000144 	.word	0x20000144

08010230 <cleanup_stdio>:
 8010230:	6841      	ldr	r1, [r0, #4]
 8010232:	4b0c      	ldr	r3, [pc, #48]	@ (8010264 <cleanup_stdio+0x34>)
 8010234:	4299      	cmp	r1, r3
 8010236:	b510      	push	{r4, lr}
 8010238:	4604      	mov	r4, r0
 801023a:	d001      	beq.n	8010240 <cleanup_stdio+0x10>
 801023c:	f002 fd8e 	bl	8012d5c <_fflush_r>
 8010240:	68a1      	ldr	r1, [r4, #8]
 8010242:	4b09      	ldr	r3, [pc, #36]	@ (8010268 <cleanup_stdio+0x38>)
 8010244:	4299      	cmp	r1, r3
 8010246:	d002      	beq.n	801024e <cleanup_stdio+0x1e>
 8010248:	4620      	mov	r0, r4
 801024a:	f002 fd87 	bl	8012d5c <_fflush_r>
 801024e:	68e1      	ldr	r1, [r4, #12]
 8010250:	4b06      	ldr	r3, [pc, #24]	@ (801026c <cleanup_stdio+0x3c>)
 8010252:	4299      	cmp	r1, r3
 8010254:	d004      	beq.n	8010260 <cleanup_stdio+0x30>
 8010256:	4620      	mov	r0, r4
 8010258:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801025c:	f002 bd7e 	b.w	8012d5c <_fflush_r>
 8010260:	bd10      	pop	{r4, pc}
 8010262:	bf00      	nop
 8010264:	20005a48 	.word	0x20005a48
 8010268:	20005ab0 	.word	0x20005ab0
 801026c:	20005b18 	.word	0x20005b18

08010270 <global_stdio_init.part.0>:
 8010270:	b510      	push	{r4, lr}
 8010272:	4b0b      	ldr	r3, [pc, #44]	@ (80102a0 <global_stdio_init.part.0+0x30>)
 8010274:	4c0b      	ldr	r4, [pc, #44]	@ (80102a4 <global_stdio_init.part.0+0x34>)
 8010276:	4a0c      	ldr	r2, [pc, #48]	@ (80102a8 <global_stdio_init.part.0+0x38>)
 8010278:	601a      	str	r2, [r3, #0]
 801027a:	4620      	mov	r0, r4
 801027c:	2200      	movs	r2, #0
 801027e:	2104      	movs	r1, #4
 8010280:	f7ff ff94 	bl	80101ac <std>
 8010284:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8010288:	2201      	movs	r2, #1
 801028a:	2109      	movs	r1, #9
 801028c:	f7ff ff8e 	bl	80101ac <std>
 8010290:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8010294:	2202      	movs	r2, #2
 8010296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801029a:	2112      	movs	r1, #18
 801029c:	f7ff bf86 	b.w	80101ac <std>
 80102a0:	20005b80 	.word	0x20005b80
 80102a4:	20005a48 	.word	0x20005a48
 80102a8:	08010219 	.word	0x08010219

080102ac <__sfp_lock_acquire>:
 80102ac:	4801      	ldr	r0, [pc, #4]	@ (80102b4 <__sfp_lock_acquire+0x8>)
 80102ae:	f000 b958 	b.w	8010562 <__retarget_lock_acquire_recursive>
 80102b2:	bf00      	nop
 80102b4:	20005b89 	.word	0x20005b89

080102b8 <__sfp_lock_release>:
 80102b8:	4801      	ldr	r0, [pc, #4]	@ (80102c0 <__sfp_lock_release+0x8>)
 80102ba:	f000 b953 	b.w	8010564 <__retarget_lock_release_recursive>
 80102be:	bf00      	nop
 80102c0:	20005b89 	.word	0x20005b89

080102c4 <__sinit>:
 80102c4:	b510      	push	{r4, lr}
 80102c6:	4604      	mov	r4, r0
 80102c8:	f7ff fff0 	bl	80102ac <__sfp_lock_acquire>
 80102cc:	6a23      	ldr	r3, [r4, #32]
 80102ce:	b11b      	cbz	r3, 80102d8 <__sinit+0x14>
 80102d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80102d4:	f7ff bff0 	b.w	80102b8 <__sfp_lock_release>
 80102d8:	4b04      	ldr	r3, [pc, #16]	@ (80102ec <__sinit+0x28>)
 80102da:	6223      	str	r3, [r4, #32]
 80102dc:	4b04      	ldr	r3, [pc, #16]	@ (80102f0 <__sinit+0x2c>)
 80102de:	681b      	ldr	r3, [r3, #0]
 80102e0:	2b00      	cmp	r3, #0
 80102e2:	d1f5      	bne.n	80102d0 <__sinit+0xc>
 80102e4:	f7ff ffc4 	bl	8010270 <global_stdio_init.part.0>
 80102e8:	e7f2      	b.n	80102d0 <__sinit+0xc>
 80102ea:	bf00      	nop
 80102ec:	08010231 	.word	0x08010231
 80102f0:	20005b80 	.word	0x20005b80

080102f4 <_fwalk_sglue>:
 80102f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80102f8:	4607      	mov	r7, r0
 80102fa:	4688      	mov	r8, r1
 80102fc:	4614      	mov	r4, r2
 80102fe:	2600      	movs	r6, #0
 8010300:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8010304:	f1b9 0901 	subs.w	r9, r9, #1
 8010308:	d505      	bpl.n	8010316 <_fwalk_sglue+0x22>
 801030a:	6824      	ldr	r4, [r4, #0]
 801030c:	2c00      	cmp	r4, #0
 801030e:	d1f7      	bne.n	8010300 <_fwalk_sglue+0xc>
 8010310:	4630      	mov	r0, r6
 8010312:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010316:	89ab      	ldrh	r3, [r5, #12]
 8010318:	2b01      	cmp	r3, #1
 801031a:	d907      	bls.n	801032c <_fwalk_sglue+0x38>
 801031c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8010320:	3301      	adds	r3, #1
 8010322:	d003      	beq.n	801032c <_fwalk_sglue+0x38>
 8010324:	4629      	mov	r1, r5
 8010326:	4638      	mov	r0, r7
 8010328:	47c0      	blx	r8
 801032a:	4306      	orrs	r6, r0
 801032c:	3568      	adds	r5, #104	@ 0x68
 801032e:	e7e9      	b.n	8010304 <_fwalk_sglue+0x10>

08010330 <sniprintf>:
 8010330:	b40c      	push	{r2, r3}
 8010332:	b530      	push	{r4, r5, lr}
 8010334:	4b18      	ldr	r3, [pc, #96]	@ (8010398 <sniprintf+0x68>)
 8010336:	1e0c      	subs	r4, r1, #0
 8010338:	681d      	ldr	r5, [r3, #0]
 801033a:	b09d      	sub	sp, #116	@ 0x74
 801033c:	da08      	bge.n	8010350 <sniprintf+0x20>
 801033e:	238b      	movs	r3, #139	@ 0x8b
 8010340:	602b      	str	r3, [r5, #0]
 8010342:	f04f 30ff 	mov.w	r0, #4294967295
 8010346:	b01d      	add	sp, #116	@ 0x74
 8010348:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801034c:	b002      	add	sp, #8
 801034e:	4770      	bx	lr
 8010350:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8010354:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010358:	f04f 0300 	mov.w	r3, #0
 801035c:	931b      	str	r3, [sp, #108]	@ 0x6c
 801035e:	bf14      	ite	ne
 8010360:	f104 33ff 	addne.w	r3, r4, #4294967295
 8010364:	4623      	moveq	r3, r4
 8010366:	9304      	str	r3, [sp, #16]
 8010368:	9307      	str	r3, [sp, #28]
 801036a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801036e:	9002      	str	r0, [sp, #8]
 8010370:	9006      	str	r0, [sp, #24]
 8010372:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010376:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8010378:	ab21      	add	r3, sp, #132	@ 0x84
 801037a:	a902      	add	r1, sp, #8
 801037c:	4628      	mov	r0, r5
 801037e:	9301      	str	r3, [sp, #4]
 8010380:	f002 fb6c 	bl	8012a5c <_svfiprintf_r>
 8010384:	1c43      	adds	r3, r0, #1
 8010386:	bfbc      	itt	lt
 8010388:	238b      	movlt	r3, #139	@ 0x8b
 801038a:	602b      	strlt	r3, [r5, #0]
 801038c:	2c00      	cmp	r4, #0
 801038e:	d0da      	beq.n	8010346 <sniprintf+0x16>
 8010390:	9b02      	ldr	r3, [sp, #8]
 8010392:	2200      	movs	r2, #0
 8010394:	701a      	strb	r2, [r3, #0]
 8010396:	e7d6      	b.n	8010346 <sniprintf+0x16>
 8010398:	20000140 	.word	0x20000140

0801039c <siprintf>:
 801039c:	b40e      	push	{r1, r2, r3}
 801039e:	b510      	push	{r4, lr}
 80103a0:	b09d      	sub	sp, #116	@ 0x74
 80103a2:	ab1f      	add	r3, sp, #124	@ 0x7c
 80103a4:	9002      	str	r0, [sp, #8]
 80103a6:	9006      	str	r0, [sp, #24]
 80103a8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80103ac:	480a      	ldr	r0, [pc, #40]	@ (80103d8 <siprintf+0x3c>)
 80103ae:	9107      	str	r1, [sp, #28]
 80103b0:	9104      	str	r1, [sp, #16]
 80103b2:	490a      	ldr	r1, [pc, #40]	@ (80103dc <siprintf+0x40>)
 80103b4:	f853 2b04 	ldr.w	r2, [r3], #4
 80103b8:	9105      	str	r1, [sp, #20]
 80103ba:	2400      	movs	r4, #0
 80103bc:	a902      	add	r1, sp, #8
 80103be:	6800      	ldr	r0, [r0, #0]
 80103c0:	9301      	str	r3, [sp, #4]
 80103c2:	941b      	str	r4, [sp, #108]	@ 0x6c
 80103c4:	f002 fb4a 	bl	8012a5c <_svfiprintf_r>
 80103c8:	9b02      	ldr	r3, [sp, #8]
 80103ca:	701c      	strb	r4, [r3, #0]
 80103cc:	b01d      	add	sp, #116	@ 0x74
 80103ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103d2:	b003      	add	sp, #12
 80103d4:	4770      	bx	lr
 80103d6:	bf00      	nop
 80103d8:	20000140 	.word	0x20000140
 80103dc:	ffff0208 	.word	0xffff0208

080103e0 <__sread>:
 80103e0:	b510      	push	{r4, lr}
 80103e2:	460c      	mov	r4, r1
 80103e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80103e8:	f000 f86c 	bl	80104c4 <_read_r>
 80103ec:	2800      	cmp	r0, #0
 80103ee:	bfab      	itete	ge
 80103f0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80103f2:	89a3      	ldrhlt	r3, [r4, #12]
 80103f4:	181b      	addge	r3, r3, r0
 80103f6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80103fa:	bfac      	ite	ge
 80103fc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80103fe:	81a3      	strhlt	r3, [r4, #12]
 8010400:	bd10      	pop	{r4, pc}

08010402 <__swrite>:
 8010402:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010406:	461f      	mov	r7, r3
 8010408:	898b      	ldrh	r3, [r1, #12]
 801040a:	05db      	lsls	r3, r3, #23
 801040c:	4605      	mov	r5, r0
 801040e:	460c      	mov	r4, r1
 8010410:	4616      	mov	r6, r2
 8010412:	d505      	bpl.n	8010420 <__swrite+0x1e>
 8010414:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010418:	2302      	movs	r3, #2
 801041a:	2200      	movs	r2, #0
 801041c:	f000 f840 	bl	80104a0 <_lseek_r>
 8010420:	89a3      	ldrh	r3, [r4, #12]
 8010422:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8010426:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801042a:	81a3      	strh	r3, [r4, #12]
 801042c:	4632      	mov	r2, r6
 801042e:	463b      	mov	r3, r7
 8010430:	4628      	mov	r0, r5
 8010432:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010436:	f000 b857 	b.w	80104e8 <_write_r>

0801043a <__sseek>:
 801043a:	b510      	push	{r4, lr}
 801043c:	460c      	mov	r4, r1
 801043e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010442:	f000 f82d 	bl	80104a0 <_lseek_r>
 8010446:	1c43      	adds	r3, r0, #1
 8010448:	89a3      	ldrh	r3, [r4, #12]
 801044a:	bf15      	itete	ne
 801044c:	6560      	strne	r0, [r4, #84]	@ 0x54
 801044e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8010452:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8010456:	81a3      	strheq	r3, [r4, #12]
 8010458:	bf18      	it	ne
 801045a:	81a3      	strhne	r3, [r4, #12]
 801045c:	bd10      	pop	{r4, pc}

0801045e <__sclose>:
 801045e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010462:	f000 b80d 	b.w	8010480 <_close_r>

08010466 <memset>:
 8010466:	4402      	add	r2, r0
 8010468:	4603      	mov	r3, r0
 801046a:	4293      	cmp	r3, r2
 801046c:	d100      	bne.n	8010470 <memset+0xa>
 801046e:	4770      	bx	lr
 8010470:	f803 1b01 	strb.w	r1, [r3], #1
 8010474:	e7f9      	b.n	801046a <memset+0x4>
	...

08010478 <_localeconv_r>:
 8010478:	4800      	ldr	r0, [pc, #0]	@ (801047c <_localeconv_r+0x4>)
 801047a:	4770      	bx	lr
 801047c:	20000280 	.word	0x20000280

08010480 <_close_r>:
 8010480:	b538      	push	{r3, r4, r5, lr}
 8010482:	4d06      	ldr	r5, [pc, #24]	@ (801049c <_close_r+0x1c>)
 8010484:	2300      	movs	r3, #0
 8010486:	4604      	mov	r4, r0
 8010488:	4608      	mov	r0, r1
 801048a:	602b      	str	r3, [r5, #0]
 801048c:	f7f4 fd68 	bl	8004f60 <_close>
 8010490:	1c43      	adds	r3, r0, #1
 8010492:	d102      	bne.n	801049a <_close_r+0x1a>
 8010494:	682b      	ldr	r3, [r5, #0]
 8010496:	b103      	cbz	r3, 801049a <_close_r+0x1a>
 8010498:	6023      	str	r3, [r4, #0]
 801049a:	bd38      	pop	{r3, r4, r5, pc}
 801049c:	20005b84 	.word	0x20005b84

080104a0 <_lseek_r>:
 80104a0:	b538      	push	{r3, r4, r5, lr}
 80104a2:	4d07      	ldr	r5, [pc, #28]	@ (80104c0 <_lseek_r+0x20>)
 80104a4:	4604      	mov	r4, r0
 80104a6:	4608      	mov	r0, r1
 80104a8:	4611      	mov	r1, r2
 80104aa:	2200      	movs	r2, #0
 80104ac:	602a      	str	r2, [r5, #0]
 80104ae:	461a      	mov	r2, r3
 80104b0:	f7f4 fd62 	bl	8004f78 <_lseek>
 80104b4:	1c43      	adds	r3, r0, #1
 80104b6:	d102      	bne.n	80104be <_lseek_r+0x1e>
 80104b8:	682b      	ldr	r3, [r5, #0]
 80104ba:	b103      	cbz	r3, 80104be <_lseek_r+0x1e>
 80104bc:	6023      	str	r3, [r4, #0]
 80104be:	bd38      	pop	{r3, r4, r5, pc}
 80104c0:	20005b84 	.word	0x20005b84

080104c4 <_read_r>:
 80104c4:	b538      	push	{r3, r4, r5, lr}
 80104c6:	4d07      	ldr	r5, [pc, #28]	@ (80104e4 <_read_r+0x20>)
 80104c8:	4604      	mov	r4, r0
 80104ca:	4608      	mov	r0, r1
 80104cc:	4611      	mov	r1, r2
 80104ce:	2200      	movs	r2, #0
 80104d0:	602a      	str	r2, [r5, #0]
 80104d2:	461a      	mov	r2, r3
 80104d4:	f7f4 fd28 	bl	8004f28 <_read>
 80104d8:	1c43      	adds	r3, r0, #1
 80104da:	d102      	bne.n	80104e2 <_read_r+0x1e>
 80104dc:	682b      	ldr	r3, [r5, #0]
 80104de:	b103      	cbz	r3, 80104e2 <_read_r+0x1e>
 80104e0:	6023      	str	r3, [r4, #0]
 80104e2:	bd38      	pop	{r3, r4, r5, pc}
 80104e4:	20005b84 	.word	0x20005b84

080104e8 <_write_r>:
 80104e8:	b538      	push	{r3, r4, r5, lr}
 80104ea:	4d07      	ldr	r5, [pc, #28]	@ (8010508 <_write_r+0x20>)
 80104ec:	4604      	mov	r4, r0
 80104ee:	4608      	mov	r0, r1
 80104f0:	4611      	mov	r1, r2
 80104f2:	2200      	movs	r2, #0
 80104f4:	602a      	str	r2, [r5, #0]
 80104f6:	461a      	mov	r2, r3
 80104f8:	f7f4 fd24 	bl	8004f44 <_write>
 80104fc:	1c43      	adds	r3, r0, #1
 80104fe:	d102      	bne.n	8010506 <_write_r+0x1e>
 8010500:	682b      	ldr	r3, [r5, #0]
 8010502:	b103      	cbz	r3, 8010506 <_write_r+0x1e>
 8010504:	6023      	str	r3, [r4, #0]
 8010506:	bd38      	pop	{r3, r4, r5, pc}
 8010508:	20005b84 	.word	0x20005b84

0801050c <__errno>:
 801050c:	4b01      	ldr	r3, [pc, #4]	@ (8010514 <__errno+0x8>)
 801050e:	6818      	ldr	r0, [r3, #0]
 8010510:	4770      	bx	lr
 8010512:	bf00      	nop
 8010514:	20000140 	.word	0x20000140

08010518 <__libc_init_array>:
 8010518:	b570      	push	{r4, r5, r6, lr}
 801051a:	4d0d      	ldr	r5, [pc, #52]	@ (8010550 <__libc_init_array+0x38>)
 801051c:	4c0d      	ldr	r4, [pc, #52]	@ (8010554 <__libc_init_array+0x3c>)
 801051e:	1b64      	subs	r4, r4, r5
 8010520:	10a4      	asrs	r4, r4, #2
 8010522:	2600      	movs	r6, #0
 8010524:	42a6      	cmp	r6, r4
 8010526:	d109      	bne.n	801053c <__libc_init_array+0x24>
 8010528:	4d0b      	ldr	r5, [pc, #44]	@ (8010558 <__libc_init_array+0x40>)
 801052a:	4c0c      	ldr	r4, [pc, #48]	@ (801055c <__libc_init_array+0x44>)
 801052c:	f005 fca0 	bl	8015e70 <_init>
 8010530:	1b64      	subs	r4, r4, r5
 8010532:	10a4      	asrs	r4, r4, #2
 8010534:	2600      	movs	r6, #0
 8010536:	42a6      	cmp	r6, r4
 8010538:	d105      	bne.n	8010546 <__libc_init_array+0x2e>
 801053a:	bd70      	pop	{r4, r5, r6, pc}
 801053c:	f855 3b04 	ldr.w	r3, [r5], #4
 8010540:	4798      	blx	r3
 8010542:	3601      	adds	r6, #1
 8010544:	e7ee      	b.n	8010524 <__libc_init_array+0xc>
 8010546:	f855 3b04 	ldr.w	r3, [r5], #4
 801054a:	4798      	blx	r3
 801054c:	3601      	adds	r6, #1
 801054e:	e7f2      	b.n	8010536 <__libc_init_array+0x1e>
 8010550:	08018a18 	.word	0x08018a18
 8010554:	08018a18 	.word	0x08018a18
 8010558:	08018a18 	.word	0x08018a18
 801055c:	08018a1c 	.word	0x08018a1c

08010560 <__retarget_lock_init_recursive>:
 8010560:	4770      	bx	lr

08010562 <__retarget_lock_acquire_recursive>:
 8010562:	4770      	bx	lr

08010564 <__retarget_lock_release_recursive>:
 8010564:	4770      	bx	lr

08010566 <memcpy>:
 8010566:	440a      	add	r2, r1
 8010568:	4291      	cmp	r1, r2
 801056a:	f100 33ff 	add.w	r3, r0, #4294967295
 801056e:	d100      	bne.n	8010572 <memcpy+0xc>
 8010570:	4770      	bx	lr
 8010572:	b510      	push	{r4, lr}
 8010574:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010578:	f803 4f01 	strb.w	r4, [r3, #1]!
 801057c:	4291      	cmp	r1, r2
 801057e:	d1f9      	bne.n	8010574 <memcpy+0xe>
 8010580:	bd10      	pop	{r4, pc}
	...

08010584 <nanf>:
 8010584:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 801058c <nanf+0x8>
 8010588:	4770      	bx	lr
 801058a:	bf00      	nop
 801058c:	7fc00000 	.word	0x7fc00000

08010590 <quorem>:
 8010590:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010594:	6903      	ldr	r3, [r0, #16]
 8010596:	690c      	ldr	r4, [r1, #16]
 8010598:	42a3      	cmp	r3, r4
 801059a:	4607      	mov	r7, r0
 801059c:	db7e      	blt.n	801069c <quorem+0x10c>
 801059e:	3c01      	subs	r4, #1
 80105a0:	f101 0814 	add.w	r8, r1, #20
 80105a4:	00a3      	lsls	r3, r4, #2
 80105a6:	f100 0514 	add.w	r5, r0, #20
 80105aa:	9300      	str	r3, [sp, #0]
 80105ac:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80105b0:	9301      	str	r3, [sp, #4]
 80105b2:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80105b6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80105ba:	3301      	adds	r3, #1
 80105bc:	429a      	cmp	r2, r3
 80105be:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80105c2:	fbb2 f6f3 	udiv	r6, r2, r3
 80105c6:	d32e      	bcc.n	8010626 <quorem+0x96>
 80105c8:	f04f 0a00 	mov.w	sl, #0
 80105cc:	46c4      	mov	ip, r8
 80105ce:	46ae      	mov	lr, r5
 80105d0:	46d3      	mov	fp, sl
 80105d2:	f85c 3b04 	ldr.w	r3, [ip], #4
 80105d6:	b298      	uxth	r0, r3
 80105d8:	fb06 a000 	mla	r0, r6, r0, sl
 80105dc:	0c02      	lsrs	r2, r0, #16
 80105de:	0c1b      	lsrs	r3, r3, #16
 80105e0:	fb06 2303 	mla	r3, r6, r3, r2
 80105e4:	f8de 2000 	ldr.w	r2, [lr]
 80105e8:	b280      	uxth	r0, r0
 80105ea:	b292      	uxth	r2, r2
 80105ec:	1a12      	subs	r2, r2, r0
 80105ee:	445a      	add	r2, fp
 80105f0:	f8de 0000 	ldr.w	r0, [lr]
 80105f4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80105f8:	b29b      	uxth	r3, r3
 80105fa:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80105fe:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8010602:	b292      	uxth	r2, r2
 8010604:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8010608:	45e1      	cmp	r9, ip
 801060a:	f84e 2b04 	str.w	r2, [lr], #4
 801060e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8010612:	d2de      	bcs.n	80105d2 <quorem+0x42>
 8010614:	9b00      	ldr	r3, [sp, #0]
 8010616:	58eb      	ldr	r3, [r5, r3]
 8010618:	b92b      	cbnz	r3, 8010626 <quorem+0x96>
 801061a:	9b01      	ldr	r3, [sp, #4]
 801061c:	3b04      	subs	r3, #4
 801061e:	429d      	cmp	r5, r3
 8010620:	461a      	mov	r2, r3
 8010622:	d32f      	bcc.n	8010684 <quorem+0xf4>
 8010624:	613c      	str	r4, [r7, #16]
 8010626:	4638      	mov	r0, r7
 8010628:	f001 f9c6 	bl	80119b8 <__mcmp>
 801062c:	2800      	cmp	r0, #0
 801062e:	db25      	blt.n	801067c <quorem+0xec>
 8010630:	4629      	mov	r1, r5
 8010632:	2000      	movs	r0, #0
 8010634:	f858 2b04 	ldr.w	r2, [r8], #4
 8010638:	f8d1 c000 	ldr.w	ip, [r1]
 801063c:	fa1f fe82 	uxth.w	lr, r2
 8010640:	fa1f f38c 	uxth.w	r3, ip
 8010644:	eba3 030e 	sub.w	r3, r3, lr
 8010648:	4403      	add	r3, r0
 801064a:	0c12      	lsrs	r2, r2, #16
 801064c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8010650:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8010654:	b29b      	uxth	r3, r3
 8010656:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801065a:	45c1      	cmp	r9, r8
 801065c:	f841 3b04 	str.w	r3, [r1], #4
 8010660:	ea4f 4022 	mov.w	r0, r2, asr #16
 8010664:	d2e6      	bcs.n	8010634 <quorem+0xa4>
 8010666:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801066a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801066e:	b922      	cbnz	r2, 801067a <quorem+0xea>
 8010670:	3b04      	subs	r3, #4
 8010672:	429d      	cmp	r5, r3
 8010674:	461a      	mov	r2, r3
 8010676:	d30b      	bcc.n	8010690 <quorem+0x100>
 8010678:	613c      	str	r4, [r7, #16]
 801067a:	3601      	adds	r6, #1
 801067c:	4630      	mov	r0, r6
 801067e:	b003      	add	sp, #12
 8010680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010684:	6812      	ldr	r2, [r2, #0]
 8010686:	3b04      	subs	r3, #4
 8010688:	2a00      	cmp	r2, #0
 801068a:	d1cb      	bne.n	8010624 <quorem+0x94>
 801068c:	3c01      	subs	r4, #1
 801068e:	e7c6      	b.n	801061e <quorem+0x8e>
 8010690:	6812      	ldr	r2, [r2, #0]
 8010692:	3b04      	subs	r3, #4
 8010694:	2a00      	cmp	r2, #0
 8010696:	d1ef      	bne.n	8010678 <quorem+0xe8>
 8010698:	3c01      	subs	r4, #1
 801069a:	e7ea      	b.n	8010672 <quorem+0xe2>
 801069c:	2000      	movs	r0, #0
 801069e:	e7ee      	b.n	801067e <quorem+0xee>

080106a0 <_dtoa_r>:
 80106a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106a4:	69c7      	ldr	r7, [r0, #28]
 80106a6:	b097      	sub	sp, #92	@ 0x5c
 80106a8:	ed8d 0b04 	vstr	d0, [sp, #16]
 80106ac:	ec55 4b10 	vmov	r4, r5, d0
 80106b0:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80106b2:	9107      	str	r1, [sp, #28]
 80106b4:	4681      	mov	r9, r0
 80106b6:	920c      	str	r2, [sp, #48]	@ 0x30
 80106b8:	9311      	str	r3, [sp, #68]	@ 0x44
 80106ba:	b97f      	cbnz	r7, 80106dc <_dtoa_r+0x3c>
 80106bc:	2010      	movs	r0, #16
 80106be:	f000 fe09 	bl	80112d4 <malloc>
 80106c2:	4602      	mov	r2, r0
 80106c4:	f8c9 001c 	str.w	r0, [r9, #28]
 80106c8:	b920      	cbnz	r0, 80106d4 <_dtoa_r+0x34>
 80106ca:	4ba9      	ldr	r3, [pc, #676]	@ (8010970 <_dtoa_r+0x2d0>)
 80106cc:	21ef      	movs	r1, #239	@ 0xef
 80106ce:	48a9      	ldr	r0, [pc, #676]	@ (8010974 <_dtoa_r+0x2d4>)
 80106d0:	f002 fbb2 	bl	8012e38 <__assert_func>
 80106d4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80106d8:	6007      	str	r7, [r0, #0]
 80106da:	60c7      	str	r7, [r0, #12]
 80106dc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80106e0:	6819      	ldr	r1, [r3, #0]
 80106e2:	b159      	cbz	r1, 80106fc <_dtoa_r+0x5c>
 80106e4:	685a      	ldr	r2, [r3, #4]
 80106e6:	604a      	str	r2, [r1, #4]
 80106e8:	2301      	movs	r3, #1
 80106ea:	4093      	lsls	r3, r2
 80106ec:	608b      	str	r3, [r1, #8]
 80106ee:	4648      	mov	r0, r9
 80106f0:	f000 fee6 	bl	80114c0 <_Bfree>
 80106f4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80106f8:	2200      	movs	r2, #0
 80106fa:	601a      	str	r2, [r3, #0]
 80106fc:	1e2b      	subs	r3, r5, #0
 80106fe:	bfb9      	ittee	lt
 8010700:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8010704:	9305      	strlt	r3, [sp, #20]
 8010706:	2300      	movge	r3, #0
 8010708:	6033      	strge	r3, [r6, #0]
 801070a:	9f05      	ldr	r7, [sp, #20]
 801070c:	4b9a      	ldr	r3, [pc, #616]	@ (8010978 <_dtoa_r+0x2d8>)
 801070e:	bfbc      	itt	lt
 8010710:	2201      	movlt	r2, #1
 8010712:	6032      	strlt	r2, [r6, #0]
 8010714:	43bb      	bics	r3, r7
 8010716:	d112      	bne.n	801073e <_dtoa_r+0x9e>
 8010718:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801071a:	f242 730f 	movw	r3, #9999	@ 0x270f
 801071e:	6013      	str	r3, [r2, #0]
 8010720:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8010724:	4323      	orrs	r3, r4
 8010726:	f000 855a 	beq.w	80111de <_dtoa_r+0xb3e>
 801072a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801072c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 801098c <_dtoa_r+0x2ec>
 8010730:	2b00      	cmp	r3, #0
 8010732:	f000 855c 	beq.w	80111ee <_dtoa_r+0xb4e>
 8010736:	f10a 0303 	add.w	r3, sl, #3
 801073a:	f000 bd56 	b.w	80111ea <_dtoa_r+0xb4a>
 801073e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8010742:	2200      	movs	r2, #0
 8010744:	ec51 0b17 	vmov	r0, r1, d7
 8010748:	2300      	movs	r3, #0
 801074a:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801074e:	f7f0 f993 	bl	8000a78 <__aeabi_dcmpeq>
 8010752:	4680      	mov	r8, r0
 8010754:	b158      	cbz	r0, 801076e <_dtoa_r+0xce>
 8010756:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010758:	2301      	movs	r3, #1
 801075a:	6013      	str	r3, [r2, #0]
 801075c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801075e:	b113      	cbz	r3, 8010766 <_dtoa_r+0xc6>
 8010760:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8010762:	4b86      	ldr	r3, [pc, #536]	@ (801097c <_dtoa_r+0x2dc>)
 8010764:	6013      	str	r3, [r2, #0]
 8010766:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8010990 <_dtoa_r+0x2f0>
 801076a:	f000 bd40 	b.w	80111ee <_dtoa_r+0xb4e>
 801076e:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8010772:	aa14      	add	r2, sp, #80	@ 0x50
 8010774:	a915      	add	r1, sp, #84	@ 0x54
 8010776:	4648      	mov	r0, r9
 8010778:	f001 fa3e 	bl	8011bf8 <__d2b>
 801077c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8010780:	9002      	str	r0, [sp, #8]
 8010782:	2e00      	cmp	r6, #0
 8010784:	d078      	beq.n	8010878 <_dtoa_r+0x1d8>
 8010786:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010788:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 801078c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010790:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8010794:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8010798:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 801079c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80107a0:	4619      	mov	r1, r3
 80107a2:	2200      	movs	r2, #0
 80107a4:	4b76      	ldr	r3, [pc, #472]	@ (8010980 <_dtoa_r+0x2e0>)
 80107a6:	f7ef fd47 	bl	8000238 <__aeabi_dsub>
 80107aa:	a36b      	add	r3, pc, #428	@ (adr r3, 8010958 <_dtoa_r+0x2b8>)
 80107ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107b0:	f7ef fefa 	bl	80005a8 <__aeabi_dmul>
 80107b4:	a36a      	add	r3, pc, #424	@ (adr r3, 8010960 <_dtoa_r+0x2c0>)
 80107b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107ba:	f7ef fd3f 	bl	800023c <__adddf3>
 80107be:	4604      	mov	r4, r0
 80107c0:	4630      	mov	r0, r6
 80107c2:	460d      	mov	r5, r1
 80107c4:	f7ef fe86 	bl	80004d4 <__aeabi_i2d>
 80107c8:	a367      	add	r3, pc, #412	@ (adr r3, 8010968 <_dtoa_r+0x2c8>)
 80107ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107ce:	f7ef feeb 	bl	80005a8 <__aeabi_dmul>
 80107d2:	4602      	mov	r2, r0
 80107d4:	460b      	mov	r3, r1
 80107d6:	4620      	mov	r0, r4
 80107d8:	4629      	mov	r1, r5
 80107da:	f7ef fd2f 	bl	800023c <__adddf3>
 80107de:	4604      	mov	r4, r0
 80107e0:	460d      	mov	r5, r1
 80107e2:	f7f0 f991 	bl	8000b08 <__aeabi_d2iz>
 80107e6:	2200      	movs	r2, #0
 80107e8:	4607      	mov	r7, r0
 80107ea:	2300      	movs	r3, #0
 80107ec:	4620      	mov	r0, r4
 80107ee:	4629      	mov	r1, r5
 80107f0:	f7f0 f94c 	bl	8000a8c <__aeabi_dcmplt>
 80107f4:	b140      	cbz	r0, 8010808 <_dtoa_r+0x168>
 80107f6:	4638      	mov	r0, r7
 80107f8:	f7ef fe6c 	bl	80004d4 <__aeabi_i2d>
 80107fc:	4622      	mov	r2, r4
 80107fe:	462b      	mov	r3, r5
 8010800:	f7f0 f93a 	bl	8000a78 <__aeabi_dcmpeq>
 8010804:	b900      	cbnz	r0, 8010808 <_dtoa_r+0x168>
 8010806:	3f01      	subs	r7, #1
 8010808:	2f16      	cmp	r7, #22
 801080a:	d852      	bhi.n	80108b2 <_dtoa_r+0x212>
 801080c:	4b5d      	ldr	r3, [pc, #372]	@ (8010984 <_dtoa_r+0x2e4>)
 801080e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8010812:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010816:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801081a:	f7f0 f937 	bl	8000a8c <__aeabi_dcmplt>
 801081e:	2800      	cmp	r0, #0
 8010820:	d049      	beq.n	80108b6 <_dtoa_r+0x216>
 8010822:	3f01      	subs	r7, #1
 8010824:	2300      	movs	r3, #0
 8010826:	9310      	str	r3, [sp, #64]	@ 0x40
 8010828:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801082a:	1b9b      	subs	r3, r3, r6
 801082c:	1e5a      	subs	r2, r3, #1
 801082e:	bf45      	ittet	mi
 8010830:	f1c3 0301 	rsbmi	r3, r3, #1
 8010834:	9300      	strmi	r3, [sp, #0]
 8010836:	2300      	movpl	r3, #0
 8010838:	2300      	movmi	r3, #0
 801083a:	9206      	str	r2, [sp, #24]
 801083c:	bf54      	ite	pl
 801083e:	9300      	strpl	r3, [sp, #0]
 8010840:	9306      	strmi	r3, [sp, #24]
 8010842:	2f00      	cmp	r7, #0
 8010844:	db39      	blt.n	80108ba <_dtoa_r+0x21a>
 8010846:	9b06      	ldr	r3, [sp, #24]
 8010848:	970d      	str	r7, [sp, #52]	@ 0x34
 801084a:	443b      	add	r3, r7
 801084c:	9306      	str	r3, [sp, #24]
 801084e:	2300      	movs	r3, #0
 8010850:	9308      	str	r3, [sp, #32]
 8010852:	9b07      	ldr	r3, [sp, #28]
 8010854:	2b09      	cmp	r3, #9
 8010856:	d863      	bhi.n	8010920 <_dtoa_r+0x280>
 8010858:	2b05      	cmp	r3, #5
 801085a:	bfc4      	itt	gt
 801085c:	3b04      	subgt	r3, #4
 801085e:	9307      	strgt	r3, [sp, #28]
 8010860:	9b07      	ldr	r3, [sp, #28]
 8010862:	f1a3 0302 	sub.w	r3, r3, #2
 8010866:	bfcc      	ite	gt
 8010868:	2400      	movgt	r4, #0
 801086a:	2401      	movle	r4, #1
 801086c:	2b03      	cmp	r3, #3
 801086e:	d863      	bhi.n	8010938 <_dtoa_r+0x298>
 8010870:	e8df f003 	tbb	[pc, r3]
 8010874:	2b375452 	.word	0x2b375452
 8010878:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 801087c:	441e      	add	r6, r3
 801087e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8010882:	2b20      	cmp	r3, #32
 8010884:	bfc1      	itttt	gt
 8010886:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 801088a:	409f      	lslgt	r7, r3
 801088c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8010890:	fa24 f303 	lsrgt.w	r3, r4, r3
 8010894:	bfd6      	itet	le
 8010896:	f1c3 0320 	rsble	r3, r3, #32
 801089a:	ea47 0003 	orrgt.w	r0, r7, r3
 801089e:	fa04 f003 	lslle.w	r0, r4, r3
 80108a2:	f7ef fe07 	bl	80004b4 <__aeabi_ui2d>
 80108a6:	2201      	movs	r2, #1
 80108a8:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80108ac:	3e01      	subs	r6, #1
 80108ae:	9212      	str	r2, [sp, #72]	@ 0x48
 80108b0:	e776      	b.n	80107a0 <_dtoa_r+0x100>
 80108b2:	2301      	movs	r3, #1
 80108b4:	e7b7      	b.n	8010826 <_dtoa_r+0x186>
 80108b6:	9010      	str	r0, [sp, #64]	@ 0x40
 80108b8:	e7b6      	b.n	8010828 <_dtoa_r+0x188>
 80108ba:	9b00      	ldr	r3, [sp, #0]
 80108bc:	1bdb      	subs	r3, r3, r7
 80108be:	9300      	str	r3, [sp, #0]
 80108c0:	427b      	negs	r3, r7
 80108c2:	9308      	str	r3, [sp, #32]
 80108c4:	2300      	movs	r3, #0
 80108c6:	930d      	str	r3, [sp, #52]	@ 0x34
 80108c8:	e7c3      	b.n	8010852 <_dtoa_r+0x1b2>
 80108ca:	2301      	movs	r3, #1
 80108cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80108ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80108d0:	eb07 0b03 	add.w	fp, r7, r3
 80108d4:	f10b 0301 	add.w	r3, fp, #1
 80108d8:	2b01      	cmp	r3, #1
 80108da:	9303      	str	r3, [sp, #12]
 80108dc:	bfb8      	it	lt
 80108de:	2301      	movlt	r3, #1
 80108e0:	e006      	b.n	80108f0 <_dtoa_r+0x250>
 80108e2:	2301      	movs	r3, #1
 80108e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80108e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80108e8:	2b00      	cmp	r3, #0
 80108ea:	dd28      	ble.n	801093e <_dtoa_r+0x29e>
 80108ec:	469b      	mov	fp, r3
 80108ee:	9303      	str	r3, [sp, #12]
 80108f0:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80108f4:	2100      	movs	r1, #0
 80108f6:	2204      	movs	r2, #4
 80108f8:	f102 0514 	add.w	r5, r2, #20
 80108fc:	429d      	cmp	r5, r3
 80108fe:	d926      	bls.n	801094e <_dtoa_r+0x2ae>
 8010900:	6041      	str	r1, [r0, #4]
 8010902:	4648      	mov	r0, r9
 8010904:	f000 fd9c 	bl	8011440 <_Balloc>
 8010908:	4682      	mov	sl, r0
 801090a:	2800      	cmp	r0, #0
 801090c:	d142      	bne.n	8010994 <_dtoa_r+0x2f4>
 801090e:	4b1e      	ldr	r3, [pc, #120]	@ (8010988 <_dtoa_r+0x2e8>)
 8010910:	4602      	mov	r2, r0
 8010912:	f240 11af 	movw	r1, #431	@ 0x1af
 8010916:	e6da      	b.n	80106ce <_dtoa_r+0x2e>
 8010918:	2300      	movs	r3, #0
 801091a:	e7e3      	b.n	80108e4 <_dtoa_r+0x244>
 801091c:	2300      	movs	r3, #0
 801091e:	e7d5      	b.n	80108cc <_dtoa_r+0x22c>
 8010920:	2401      	movs	r4, #1
 8010922:	2300      	movs	r3, #0
 8010924:	9307      	str	r3, [sp, #28]
 8010926:	9409      	str	r4, [sp, #36]	@ 0x24
 8010928:	f04f 3bff 	mov.w	fp, #4294967295
 801092c:	2200      	movs	r2, #0
 801092e:	f8cd b00c 	str.w	fp, [sp, #12]
 8010932:	2312      	movs	r3, #18
 8010934:	920c      	str	r2, [sp, #48]	@ 0x30
 8010936:	e7db      	b.n	80108f0 <_dtoa_r+0x250>
 8010938:	2301      	movs	r3, #1
 801093a:	9309      	str	r3, [sp, #36]	@ 0x24
 801093c:	e7f4      	b.n	8010928 <_dtoa_r+0x288>
 801093e:	f04f 0b01 	mov.w	fp, #1
 8010942:	f8cd b00c 	str.w	fp, [sp, #12]
 8010946:	465b      	mov	r3, fp
 8010948:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 801094c:	e7d0      	b.n	80108f0 <_dtoa_r+0x250>
 801094e:	3101      	adds	r1, #1
 8010950:	0052      	lsls	r2, r2, #1
 8010952:	e7d1      	b.n	80108f8 <_dtoa_r+0x258>
 8010954:	f3af 8000 	nop.w
 8010958:	636f4361 	.word	0x636f4361
 801095c:	3fd287a7 	.word	0x3fd287a7
 8010960:	8b60c8b3 	.word	0x8b60c8b3
 8010964:	3fc68a28 	.word	0x3fc68a28
 8010968:	509f79fb 	.word	0x509f79fb
 801096c:	3fd34413 	.word	0x3fd34413
 8010970:	0801852f 	.word	0x0801852f
 8010974:	08018546 	.word	0x08018546
 8010978:	7ff00000 	.word	0x7ff00000
 801097c:	080184fa 	.word	0x080184fa
 8010980:	3ff80000 	.word	0x3ff80000
 8010984:	080186f8 	.word	0x080186f8
 8010988:	0801859e 	.word	0x0801859e
 801098c:	0801852b 	.word	0x0801852b
 8010990:	080184f9 	.word	0x080184f9
 8010994:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8010998:	6018      	str	r0, [r3, #0]
 801099a:	9b03      	ldr	r3, [sp, #12]
 801099c:	2b0e      	cmp	r3, #14
 801099e:	f200 80a1 	bhi.w	8010ae4 <_dtoa_r+0x444>
 80109a2:	2c00      	cmp	r4, #0
 80109a4:	f000 809e 	beq.w	8010ae4 <_dtoa_r+0x444>
 80109a8:	2f00      	cmp	r7, #0
 80109aa:	dd33      	ble.n	8010a14 <_dtoa_r+0x374>
 80109ac:	4b9c      	ldr	r3, [pc, #624]	@ (8010c20 <_dtoa_r+0x580>)
 80109ae:	f007 020f 	and.w	r2, r7, #15
 80109b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80109b6:	ed93 7b00 	vldr	d7, [r3]
 80109ba:	05f8      	lsls	r0, r7, #23
 80109bc:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 80109c0:	ea4f 1427 	mov.w	r4, r7, asr #4
 80109c4:	d516      	bpl.n	80109f4 <_dtoa_r+0x354>
 80109c6:	4b97      	ldr	r3, [pc, #604]	@ (8010c24 <_dtoa_r+0x584>)
 80109c8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80109cc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80109d0:	f7ef ff14 	bl	80007fc <__aeabi_ddiv>
 80109d4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80109d8:	f004 040f 	and.w	r4, r4, #15
 80109dc:	2603      	movs	r6, #3
 80109de:	4d91      	ldr	r5, [pc, #580]	@ (8010c24 <_dtoa_r+0x584>)
 80109e0:	b954      	cbnz	r4, 80109f8 <_dtoa_r+0x358>
 80109e2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80109e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80109ea:	f7ef ff07 	bl	80007fc <__aeabi_ddiv>
 80109ee:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80109f2:	e028      	b.n	8010a46 <_dtoa_r+0x3a6>
 80109f4:	2602      	movs	r6, #2
 80109f6:	e7f2      	b.n	80109de <_dtoa_r+0x33e>
 80109f8:	07e1      	lsls	r1, r4, #31
 80109fa:	d508      	bpl.n	8010a0e <_dtoa_r+0x36e>
 80109fc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010a00:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010a04:	f7ef fdd0 	bl	80005a8 <__aeabi_dmul>
 8010a08:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010a0c:	3601      	adds	r6, #1
 8010a0e:	1064      	asrs	r4, r4, #1
 8010a10:	3508      	adds	r5, #8
 8010a12:	e7e5      	b.n	80109e0 <_dtoa_r+0x340>
 8010a14:	f000 80af 	beq.w	8010b76 <_dtoa_r+0x4d6>
 8010a18:	427c      	negs	r4, r7
 8010a1a:	4b81      	ldr	r3, [pc, #516]	@ (8010c20 <_dtoa_r+0x580>)
 8010a1c:	4d81      	ldr	r5, [pc, #516]	@ (8010c24 <_dtoa_r+0x584>)
 8010a1e:	f004 020f 	and.w	r2, r4, #15
 8010a22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010a26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010a2a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8010a2e:	f7ef fdbb 	bl	80005a8 <__aeabi_dmul>
 8010a32:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010a36:	1124      	asrs	r4, r4, #4
 8010a38:	2300      	movs	r3, #0
 8010a3a:	2602      	movs	r6, #2
 8010a3c:	2c00      	cmp	r4, #0
 8010a3e:	f040 808f 	bne.w	8010b60 <_dtoa_r+0x4c0>
 8010a42:	2b00      	cmp	r3, #0
 8010a44:	d1d3      	bne.n	80109ee <_dtoa_r+0x34e>
 8010a46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010a48:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8010a4c:	2b00      	cmp	r3, #0
 8010a4e:	f000 8094 	beq.w	8010b7a <_dtoa_r+0x4da>
 8010a52:	4b75      	ldr	r3, [pc, #468]	@ (8010c28 <_dtoa_r+0x588>)
 8010a54:	2200      	movs	r2, #0
 8010a56:	4620      	mov	r0, r4
 8010a58:	4629      	mov	r1, r5
 8010a5a:	f7f0 f817 	bl	8000a8c <__aeabi_dcmplt>
 8010a5e:	2800      	cmp	r0, #0
 8010a60:	f000 808b 	beq.w	8010b7a <_dtoa_r+0x4da>
 8010a64:	9b03      	ldr	r3, [sp, #12]
 8010a66:	2b00      	cmp	r3, #0
 8010a68:	f000 8087 	beq.w	8010b7a <_dtoa_r+0x4da>
 8010a6c:	f1bb 0f00 	cmp.w	fp, #0
 8010a70:	dd34      	ble.n	8010adc <_dtoa_r+0x43c>
 8010a72:	4620      	mov	r0, r4
 8010a74:	4b6d      	ldr	r3, [pc, #436]	@ (8010c2c <_dtoa_r+0x58c>)
 8010a76:	2200      	movs	r2, #0
 8010a78:	4629      	mov	r1, r5
 8010a7a:	f7ef fd95 	bl	80005a8 <__aeabi_dmul>
 8010a7e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010a82:	f107 38ff 	add.w	r8, r7, #4294967295
 8010a86:	3601      	adds	r6, #1
 8010a88:	465c      	mov	r4, fp
 8010a8a:	4630      	mov	r0, r6
 8010a8c:	f7ef fd22 	bl	80004d4 <__aeabi_i2d>
 8010a90:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010a94:	f7ef fd88 	bl	80005a8 <__aeabi_dmul>
 8010a98:	4b65      	ldr	r3, [pc, #404]	@ (8010c30 <_dtoa_r+0x590>)
 8010a9a:	2200      	movs	r2, #0
 8010a9c:	f7ef fbce 	bl	800023c <__adddf3>
 8010aa0:	4605      	mov	r5, r0
 8010aa2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8010aa6:	2c00      	cmp	r4, #0
 8010aa8:	d16a      	bne.n	8010b80 <_dtoa_r+0x4e0>
 8010aaa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010aae:	4b61      	ldr	r3, [pc, #388]	@ (8010c34 <_dtoa_r+0x594>)
 8010ab0:	2200      	movs	r2, #0
 8010ab2:	f7ef fbc1 	bl	8000238 <__aeabi_dsub>
 8010ab6:	4602      	mov	r2, r0
 8010ab8:	460b      	mov	r3, r1
 8010aba:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010abe:	462a      	mov	r2, r5
 8010ac0:	4633      	mov	r3, r6
 8010ac2:	f7f0 f801 	bl	8000ac8 <__aeabi_dcmpgt>
 8010ac6:	2800      	cmp	r0, #0
 8010ac8:	f040 8298 	bne.w	8010ffc <_dtoa_r+0x95c>
 8010acc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010ad0:	462a      	mov	r2, r5
 8010ad2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8010ad6:	f7ef ffd9 	bl	8000a8c <__aeabi_dcmplt>
 8010ada:	bb38      	cbnz	r0, 8010b2c <_dtoa_r+0x48c>
 8010adc:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8010ae0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8010ae4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8010ae6:	2b00      	cmp	r3, #0
 8010ae8:	f2c0 8157 	blt.w	8010d9a <_dtoa_r+0x6fa>
 8010aec:	2f0e      	cmp	r7, #14
 8010aee:	f300 8154 	bgt.w	8010d9a <_dtoa_r+0x6fa>
 8010af2:	4b4b      	ldr	r3, [pc, #300]	@ (8010c20 <_dtoa_r+0x580>)
 8010af4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8010af8:	ed93 7b00 	vldr	d7, [r3]
 8010afc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010afe:	2b00      	cmp	r3, #0
 8010b00:	ed8d 7b00 	vstr	d7, [sp]
 8010b04:	f280 80e5 	bge.w	8010cd2 <_dtoa_r+0x632>
 8010b08:	9b03      	ldr	r3, [sp, #12]
 8010b0a:	2b00      	cmp	r3, #0
 8010b0c:	f300 80e1 	bgt.w	8010cd2 <_dtoa_r+0x632>
 8010b10:	d10c      	bne.n	8010b2c <_dtoa_r+0x48c>
 8010b12:	4b48      	ldr	r3, [pc, #288]	@ (8010c34 <_dtoa_r+0x594>)
 8010b14:	2200      	movs	r2, #0
 8010b16:	ec51 0b17 	vmov	r0, r1, d7
 8010b1a:	f7ef fd45 	bl	80005a8 <__aeabi_dmul>
 8010b1e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010b22:	f7ef ffc7 	bl	8000ab4 <__aeabi_dcmpge>
 8010b26:	2800      	cmp	r0, #0
 8010b28:	f000 8266 	beq.w	8010ff8 <_dtoa_r+0x958>
 8010b2c:	2400      	movs	r4, #0
 8010b2e:	4625      	mov	r5, r4
 8010b30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010b32:	4656      	mov	r6, sl
 8010b34:	ea6f 0803 	mvn.w	r8, r3
 8010b38:	2700      	movs	r7, #0
 8010b3a:	4621      	mov	r1, r4
 8010b3c:	4648      	mov	r0, r9
 8010b3e:	f000 fcbf 	bl	80114c0 <_Bfree>
 8010b42:	2d00      	cmp	r5, #0
 8010b44:	f000 80bd 	beq.w	8010cc2 <_dtoa_r+0x622>
 8010b48:	b12f      	cbz	r7, 8010b56 <_dtoa_r+0x4b6>
 8010b4a:	42af      	cmp	r7, r5
 8010b4c:	d003      	beq.n	8010b56 <_dtoa_r+0x4b6>
 8010b4e:	4639      	mov	r1, r7
 8010b50:	4648      	mov	r0, r9
 8010b52:	f000 fcb5 	bl	80114c0 <_Bfree>
 8010b56:	4629      	mov	r1, r5
 8010b58:	4648      	mov	r0, r9
 8010b5a:	f000 fcb1 	bl	80114c0 <_Bfree>
 8010b5e:	e0b0      	b.n	8010cc2 <_dtoa_r+0x622>
 8010b60:	07e2      	lsls	r2, r4, #31
 8010b62:	d505      	bpl.n	8010b70 <_dtoa_r+0x4d0>
 8010b64:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010b68:	f7ef fd1e 	bl	80005a8 <__aeabi_dmul>
 8010b6c:	3601      	adds	r6, #1
 8010b6e:	2301      	movs	r3, #1
 8010b70:	1064      	asrs	r4, r4, #1
 8010b72:	3508      	adds	r5, #8
 8010b74:	e762      	b.n	8010a3c <_dtoa_r+0x39c>
 8010b76:	2602      	movs	r6, #2
 8010b78:	e765      	b.n	8010a46 <_dtoa_r+0x3a6>
 8010b7a:	9c03      	ldr	r4, [sp, #12]
 8010b7c:	46b8      	mov	r8, r7
 8010b7e:	e784      	b.n	8010a8a <_dtoa_r+0x3ea>
 8010b80:	4b27      	ldr	r3, [pc, #156]	@ (8010c20 <_dtoa_r+0x580>)
 8010b82:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8010b84:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010b88:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8010b8c:	4454      	add	r4, sl
 8010b8e:	2900      	cmp	r1, #0
 8010b90:	d054      	beq.n	8010c3c <_dtoa_r+0x59c>
 8010b92:	4929      	ldr	r1, [pc, #164]	@ (8010c38 <_dtoa_r+0x598>)
 8010b94:	2000      	movs	r0, #0
 8010b96:	f7ef fe31 	bl	80007fc <__aeabi_ddiv>
 8010b9a:	4633      	mov	r3, r6
 8010b9c:	462a      	mov	r2, r5
 8010b9e:	f7ef fb4b 	bl	8000238 <__aeabi_dsub>
 8010ba2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010ba6:	4656      	mov	r6, sl
 8010ba8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010bac:	f7ef ffac 	bl	8000b08 <__aeabi_d2iz>
 8010bb0:	4605      	mov	r5, r0
 8010bb2:	f7ef fc8f 	bl	80004d4 <__aeabi_i2d>
 8010bb6:	4602      	mov	r2, r0
 8010bb8:	460b      	mov	r3, r1
 8010bba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010bbe:	f7ef fb3b 	bl	8000238 <__aeabi_dsub>
 8010bc2:	3530      	adds	r5, #48	@ 0x30
 8010bc4:	4602      	mov	r2, r0
 8010bc6:	460b      	mov	r3, r1
 8010bc8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010bcc:	f806 5b01 	strb.w	r5, [r6], #1
 8010bd0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010bd4:	f7ef ff5a 	bl	8000a8c <__aeabi_dcmplt>
 8010bd8:	2800      	cmp	r0, #0
 8010bda:	d172      	bne.n	8010cc2 <_dtoa_r+0x622>
 8010bdc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010be0:	4911      	ldr	r1, [pc, #68]	@ (8010c28 <_dtoa_r+0x588>)
 8010be2:	2000      	movs	r0, #0
 8010be4:	f7ef fb28 	bl	8000238 <__aeabi_dsub>
 8010be8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010bec:	f7ef ff4e 	bl	8000a8c <__aeabi_dcmplt>
 8010bf0:	2800      	cmp	r0, #0
 8010bf2:	f040 80b4 	bne.w	8010d5e <_dtoa_r+0x6be>
 8010bf6:	42a6      	cmp	r6, r4
 8010bf8:	f43f af70 	beq.w	8010adc <_dtoa_r+0x43c>
 8010bfc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010c00:	4b0a      	ldr	r3, [pc, #40]	@ (8010c2c <_dtoa_r+0x58c>)
 8010c02:	2200      	movs	r2, #0
 8010c04:	f7ef fcd0 	bl	80005a8 <__aeabi_dmul>
 8010c08:	4b08      	ldr	r3, [pc, #32]	@ (8010c2c <_dtoa_r+0x58c>)
 8010c0a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010c0e:	2200      	movs	r2, #0
 8010c10:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c14:	f7ef fcc8 	bl	80005a8 <__aeabi_dmul>
 8010c18:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010c1c:	e7c4      	b.n	8010ba8 <_dtoa_r+0x508>
 8010c1e:	bf00      	nop
 8010c20:	080186f8 	.word	0x080186f8
 8010c24:	080186d0 	.word	0x080186d0
 8010c28:	3ff00000 	.word	0x3ff00000
 8010c2c:	40240000 	.word	0x40240000
 8010c30:	401c0000 	.word	0x401c0000
 8010c34:	40140000 	.word	0x40140000
 8010c38:	3fe00000 	.word	0x3fe00000
 8010c3c:	4631      	mov	r1, r6
 8010c3e:	4628      	mov	r0, r5
 8010c40:	f7ef fcb2 	bl	80005a8 <__aeabi_dmul>
 8010c44:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010c48:	9413      	str	r4, [sp, #76]	@ 0x4c
 8010c4a:	4656      	mov	r6, sl
 8010c4c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c50:	f7ef ff5a 	bl	8000b08 <__aeabi_d2iz>
 8010c54:	4605      	mov	r5, r0
 8010c56:	f7ef fc3d 	bl	80004d4 <__aeabi_i2d>
 8010c5a:	4602      	mov	r2, r0
 8010c5c:	460b      	mov	r3, r1
 8010c5e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c62:	f7ef fae9 	bl	8000238 <__aeabi_dsub>
 8010c66:	3530      	adds	r5, #48	@ 0x30
 8010c68:	f806 5b01 	strb.w	r5, [r6], #1
 8010c6c:	4602      	mov	r2, r0
 8010c6e:	460b      	mov	r3, r1
 8010c70:	42a6      	cmp	r6, r4
 8010c72:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010c76:	f04f 0200 	mov.w	r2, #0
 8010c7a:	d124      	bne.n	8010cc6 <_dtoa_r+0x626>
 8010c7c:	4baf      	ldr	r3, [pc, #700]	@ (8010f3c <_dtoa_r+0x89c>)
 8010c7e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010c82:	f7ef fadb 	bl	800023c <__adddf3>
 8010c86:	4602      	mov	r2, r0
 8010c88:	460b      	mov	r3, r1
 8010c8a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c8e:	f7ef ff1b 	bl	8000ac8 <__aeabi_dcmpgt>
 8010c92:	2800      	cmp	r0, #0
 8010c94:	d163      	bne.n	8010d5e <_dtoa_r+0x6be>
 8010c96:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010c9a:	49a8      	ldr	r1, [pc, #672]	@ (8010f3c <_dtoa_r+0x89c>)
 8010c9c:	2000      	movs	r0, #0
 8010c9e:	f7ef facb 	bl	8000238 <__aeabi_dsub>
 8010ca2:	4602      	mov	r2, r0
 8010ca4:	460b      	mov	r3, r1
 8010ca6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010caa:	f7ef feef 	bl	8000a8c <__aeabi_dcmplt>
 8010cae:	2800      	cmp	r0, #0
 8010cb0:	f43f af14 	beq.w	8010adc <_dtoa_r+0x43c>
 8010cb4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010cb6:	1e73      	subs	r3, r6, #1
 8010cb8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010cba:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8010cbe:	2b30      	cmp	r3, #48	@ 0x30
 8010cc0:	d0f8      	beq.n	8010cb4 <_dtoa_r+0x614>
 8010cc2:	4647      	mov	r7, r8
 8010cc4:	e03b      	b.n	8010d3e <_dtoa_r+0x69e>
 8010cc6:	4b9e      	ldr	r3, [pc, #632]	@ (8010f40 <_dtoa_r+0x8a0>)
 8010cc8:	f7ef fc6e 	bl	80005a8 <__aeabi_dmul>
 8010ccc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010cd0:	e7bc      	b.n	8010c4c <_dtoa_r+0x5ac>
 8010cd2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8010cd6:	4656      	mov	r6, sl
 8010cd8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010cdc:	4620      	mov	r0, r4
 8010cde:	4629      	mov	r1, r5
 8010ce0:	f7ef fd8c 	bl	80007fc <__aeabi_ddiv>
 8010ce4:	f7ef ff10 	bl	8000b08 <__aeabi_d2iz>
 8010ce8:	4680      	mov	r8, r0
 8010cea:	f7ef fbf3 	bl	80004d4 <__aeabi_i2d>
 8010cee:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010cf2:	f7ef fc59 	bl	80005a8 <__aeabi_dmul>
 8010cf6:	4602      	mov	r2, r0
 8010cf8:	460b      	mov	r3, r1
 8010cfa:	4620      	mov	r0, r4
 8010cfc:	4629      	mov	r1, r5
 8010cfe:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8010d02:	f7ef fa99 	bl	8000238 <__aeabi_dsub>
 8010d06:	f806 4b01 	strb.w	r4, [r6], #1
 8010d0a:	9d03      	ldr	r5, [sp, #12]
 8010d0c:	eba6 040a 	sub.w	r4, r6, sl
 8010d10:	42a5      	cmp	r5, r4
 8010d12:	4602      	mov	r2, r0
 8010d14:	460b      	mov	r3, r1
 8010d16:	d133      	bne.n	8010d80 <_dtoa_r+0x6e0>
 8010d18:	f7ef fa90 	bl	800023c <__adddf3>
 8010d1c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010d20:	4604      	mov	r4, r0
 8010d22:	460d      	mov	r5, r1
 8010d24:	f7ef fed0 	bl	8000ac8 <__aeabi_dcmpgt>
 8010d28:	b9c0      	cbnz	r0, 8010d5c <_dtoa_r+0x6bc>
 8010d2a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010d2e:	4620      	mov	r0, r4
 8010d30:	4629      	mov	r1, r5
 8010d32:	f7ef fea1 	bl	8000a78 <__aeabi_dcmpeq>
 8010d36:	b110      	cbz	r0, 8010d3e <_dtoa_r+0x69e>
 8010d38:	f018 0f01 	tst.w	r8, #1
 8010d3c:	d10e      	bne.n	8010d5c <_dtoa_r+0x6bc>
 8010d3e:	9902      	ldr	r1, [sp, #8]
 8010d40:	4648      	mov	r0, r9
 8010d42:	f000 fbbd 	bl	80114c0 <_Bfree>
 8010d46:	2300      	movs	r3, #0
 8010d48:	7033      	strb	r3, [r6, #0]
 8010d4a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8010d4c:	3701      	adds	r7, #1
 8010d4e:	601f      	str	r7, [r3, #0]
 8010d50:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8010d52:	2b00      	cmp	r3, #0
 8010d54:	f000 824b 	beq.w	80111ee <_dtoa_r+0xb4e>
 8010d58:	601e      	str	r6, [r3, #0]
 8010d5a:	e248      	b.n	80111ee <_dtoa_r+0xb4e>
 8010d5c:	46b8      	mov	r8, r7
 8010d5e:	4633      	mov	r3, r6
 8010d60:	461e      	mov	r6, r3
 8010d62:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010d66:	2a39      	cmp	r2, #57	@ 0x39
 8010d68:	d106      	bne.n	8010d78 <_dtoa_r+0x6d8>
 8010d6a:	459a      	cmp	sl, r3
 8010d6c:	d1f8      	bne.n	8010d60 <_dtoa_r+0x6c0>
 8010d6e:	2230      	movs	r2, #48	@ 0x30
 8010d70:	f108 0801 	add.w	r8, r8, #1
 8010d74:	f88a 2000 	strb.w	r2, [sl]
 8010d78:	781a      	ldrb	r2, [r3, #0]
 8010d7a:	3201      	adds	r2, #1
 8010d7c:	701a      	strb	r2, [r3, #0]
 8010d7e:	e7a0      	b.n	8010cc2 <_dtoa_r+0x622>
 8010d80:	4b6f      	ldr	r3, [pc, #444]	@ (8010f40 <_dtoa_r+0x8a0>)
 8010d82:	2200      	movs	r2, #0
 8010d84:	f7ef fc10 	bl	80005a8 <__aeabi_dmul>
 8010d88:	2200      	movs	r2, #0
 8010d8a:	2300      	movs	r3, #0
 8010d8c:	4604      	mov	r4, r0
 8010d8e:	460d      	mov	r5, r1
 8010d90:	f7ef fe72 	bl	8000a78 <__aeabi_dcmpeq>
 8010d94:	2800      	cmp	r0, #0
 8010d96:	d09f      	beq.n	8010cd8 <_dtoa_r+0x638>
 8010d98:	e7d1      	b.n	8010d3e <_dtoa_r+0x69e>
 8010d9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010d9c:	2a00      	cmp	r2, #0
 8010d9e:	f000 80ea 	beq.w	8010f76 <_dtoa_r+0x8d6>
 8010da2:	9a07      	ldr	r2, [sp, #28]
 8010da4:	2a01      	cmp	r2, #1
 8010da6:	f300 80cd 	bgt.w	8010f44 <_dtoa_r+0x8a4>
 8010daa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010dac:	2a00      	cmp	r2, #0
 8010dae:	f000 80c1 	beq.w	8010f34 <_dtoa_r+0x894>
 8010db2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8010db6:	9c08      	ldr	r4, [sp, #32]
 8010db8:	9e00      	ldr	r6, [sp, #0]
 8010dba:	9a00      	ldr	r2, [sp, #0]
 8010dbc:	441a      	add	r2, r3
 8010dbe:	9200      	str	r2, [sp, #0]
 8010dc0:	9a06      	ldr	r2, [sp, #24]
 8010dc2:	2101      	movs	r1, #1
 8010dc4:	441a      	add	r2, r3
 8010dc6:	4648      	mov	r0, r9
 8010dc8:	9206      	str	r2, [sp, #24]
 8010dca:	f000 fc77 	bl	80116bc <__i2b>
 8010dce:	4605      	mov	r5, r0
 8010dd0:	b166      	cbz	r6, 8010dec <_dtoa_r+0x74c>
 8010dd2:	9b06      	ldr	r3, [sp, #24]
 8010dd4:	2b00      	cmp	r3, #0
 8010dd6:	dd09      	ble.n	8010dec <_dtoa_r+0x74c>
 8010dd8:	42b3      	cmp	r3, r6
 8010dda:	9a00      	ldr	r2, [sp, #0]
 8010ddc:	bfa8      	it	ge
 8010dde:	4633      	movge	r3, r6
 8010de0:	1ad2      	subs	r2, r2, r3
 8010de2:	9200      	str	r2, [sp, #0]
 8010de4:	9a06      	ldr	r2, [sp, #24]
 8010de6:	1af6      	subs	r6, r6, r3
 8010de8:	1ad3      	subs	r3, r2, r3
 8010dea:	9306      	str	r3, [sp, #24]
 8010dec:	9b08      	ldr	r3, [sp, #32]
 8010dee:	b30b      	cbz	r3, 8010e34 <_dtoa_r+0x794>
 8010df0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010df2:	2b00      	cmp	r3, #0
 8010df4:	f000 80c6 	beq.w	8010f84 <_dtoa_r+0x8e4>
 8010df8:	2c00      	cmp	r4, #0
 8010dfa:	f000 80c0 	beq.w	8010f7e <_dtoa_r+0x8de>
 8010dfe:	4629      	mov	r1, r5
 8010e00:	4622      	mov	r2, r4
 8010e02:	4648      	mov	r0, r9
 8010e04:	f000 fd12 	bl	801182c <__pow5mult>
 8010e08:	9a02      	ldr	r2, [sp, #8]
 8010e0a:	4601      	mov	r1, r0
 8010e0c:	4605      	mov	r5, r0
 8010e0e:	4648      	mov	r0, r9
 8010e10:	f000 fc6a 	bl	80116e8 <__multiply>
 8010e14:	9902      	ldr	r1, [sp, #8]
 8010e16:	4680      	mov	r8, r0
 8010e18:	4648      	mov	r0, r9
 8010e1a:	f000 fb51 	bl	80114c0 <_Bfree>
 8010e1e:	9b08      	ldr	r3, [sp, #32]
 8010e20:	1b1b      	subs	r3, r3, r4
 8010e22:	9308      	str	r3, [sp, #32]
 8010e24:	f000 80b1 	beq.w	8010f8a <_dtoa_r+0x8ea>
 8010e28:	9a08      	ldr	r2, [sp, #32]
 8010e2a:	4641      	mov	r1, r8
 8010e2c:	4648      	mov	r0, r9
 8010e2e:	f000 fcfd 	bl	801182c <__pow5mult>
 8010e32:	9002      	str	r0, [sp, #8]
 8010e34:	2101      	movs	r1, #1
 8010e36:	4648      	mov	r0, r9
 8010e38:	f000 fc40 	bl	80116bc <__i2b>
 8010e3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010e3e:	4604      	mov	r4, r0
 8010e40:	2b00      	cmp	r3, #0
 8010e42:	f000 81d8 	beq.w	80111f6 <_dtoa_r+0xb56>
 8010e46:	461a      	mov	r2, r3
 8010e48:	4601      	mov	r1, r0
 8010e4a:	4648      	mov	r0, r9
 8010e4c:	f000 fcee 	bl	801182c <__pow5mult>
 8010e50:	9b07      	ldr	r3, [sp, #28]
 8010e52:	2b01      	cmp	r3, #1
 8010e54:	4604      	mov	r4, r0
 8010e56:	f300 809f 	bgt.w	8010f98 <_dtoa_r+0x8f8>
 8010e5a:	9b04      	ldr	r3, [sp, #16]
 8010e5c:	2b00      	cmp	r3, #0
 8010e5e:	f040 8097 	bne.w	8010f90 <_dtoa_r+0x8f0>
 8010e62:	9b05      	ldr	r3, [sp, #20]
 8010e64:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010e68:	2b00      	cmp	r3, #0
 8010e6a:	f040 8093 	bne.w	8010f94 <_dtoa_r+0x8f4>
 8010e6e:	9b05      	ldr	r3, [sp, #20]
 8010e70:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8010e74:	0d1b      	lsrs	r3, r3, #20
 8010e76:	051b      	lsls	r3, r3, #20
 8010e78:	b133      	cbz	r3, 8010e88 <_dtoa_r+0x7e8>
 8010e7a:	9b00      	ldr	r3, [sp, #0]
 8010e7c:	3301      	adds	r3, #1
 8010e7e:	9300      	str	r3, [sp, #0]
 8010e80:	9b06      	ldr	r3, [sp, #24]
 8010e82:	3301      	adds	r3, #1
 8010e84:	9306      	str	r3, [sp, #24]
 8010e86:	2301      	movs	r3, #1
 8010e88:	9308      	str	r3, [sp, #32]
 8010e8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010e8c:	2b00      	cmp	r3, #0
 8010e8e:	f000 81b8 	beq.w	8011202 <_dtoa_r+0xb62>
 8010e92:	6923      	ldr	r3, [r4, #16]
 8010e94:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010e98:	6918      	ldr	r0, [r3, #16]
 8010e9a:	f000 fbc3 	bl	8011624 <__hi0bits>
 8010e9e:	f1c0 0020 	rsb	r0, r0, #32
 8010ea2:	9b06      	ldr	r3, [sp, #24]
 8010ea4:	4418      	add	r0, r3
 8010ea6:	f010 001f 	ands.w	r0, r0, #31
 8010eaa:	f000 8082 	beq.w	8010fb2 <_dtoa_r+0x912>
 8010eae:	f1c0 0320 	rsb	r3, r0, #32
 8010eb2:	2b04      	cmp	r3, #4
 8010eb4:	dd73      	ble.n	8010f9e <_dtoa_r+0x8fe>
 8010eb6:	9b00      	ldr	r3, [sp, #0]
 8010eb8:	f1c0 001c 	rsb	r0, r0, #28
 8010ebc:	4403      	add	r3, r0
 8010ebe:	9300      	str	r3, [sp, #0]
 8010ec0:	9b06      	ldr	r3, [sp, #24]
 8010ec2:	4403      	add	r3, r0
 8010ec4:	4406      	add	r6, r0
 8010ec6:	9306      	str	r3, [sp, #24]
 8010ec8:	9b00      	ldr	r3, [sp, #0]
 8010eca:	2b00      	cmp	r3, #0
 8010ecc:	dd05      	ble.n	8010eda <_dtoa_r+0x83a>
 8010ece:	9902      	ldr	r1, [sp, #8]
 8010ed0:	461a      	mov	r2, r3
 8010ed2:	4648      	mov	r0, r9
 8010ed4:	f000 fd04 	bl	80118e0 <__lshift>
 8010ed8:	9002      	str	r0, [sp, #8]
 8010eda:	9b06      	ldr	r3, [sp, #24]
 8010edc:	2b00      	cmp	r3, #0
 8010ede:	dd05      	ble.n	8010eec <_dtoa_r+0x84c>
 8010ee0:	4621      	mov	r1, r4
 8010ee2:	461a      	mov	r2, r3
 8010ee4:	4648      	mov	r0, r9
 8010ee6:	f000 fcfb 	bl	80118e0 <__lshift>
 8010eea:	4604      	mov	r4, r0
 8010eec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010eee:	2b00      	cmp	r3, #0
 8010ef0:	d061      	beq.n	8010fb6 <_dtoa_r+0x916>
 8010ef2:	9802      	ldr	r0, [sp, #8]
 8010ef4:	4621      	mov	r1, r4
 8010ef6:	f000 fd5f 	bl	80119b8 <__mcmp>
 8010efa:	2800      	cmp	r0, #0
 8010efc:	da5b      	bge.n	8010fb6 <_dtoa_r+0x916>
 8010efe:	2300      	movs	r3, #0
 8010f00:	9902      	ldr	r1, [sp, #8]
 8010f02:	220a      	movs	r2, #10
 8010f04:	4648      	mov	r0, r9
 8010f06:	f000 fafd 	bl	8011504 <__multadd>
 8010f0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f0c:	9002      	str	r0, [sp, #8]
 8010f0e:	f107 38ff 	add.w	r8, r7, #4294967295
 8010f12:	2b00      	cmp	r3, #0
 8010f14:	f000 8177 	beq.w	8011206 <_dtoa_r+0xb66>
 8010f18:	4629      	mov	r1, r5
 8010f1a:	2300      	movs	r3, #0
 8010f1c:	220a      	movs	r2, #10
 8010f1e:	4648      	mov	r0, r9
 8010f20:	f000 faf0 	bl	8011504 <__multadd>
 8010f24:	f1bb 0f00 	cmp.w	fp, #0
 8010f28:	4605      	mov	r5, r0
 8010f2a:	dc6f      	bgt.n	801100c <_dtoa_r+0x96c>
 8010f2c:	9b07      	ldr	r3, [sp, #28]
 8010f2e:	2b02      	cmp	r3, #2
 8010f30:	dc49      	bgt.n	8010fc6 <_dtoa_r+0x926>
 8010f32:	e06b      	b.n	801100c <_dtoa_r+0x96c>
 8010f34:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8010f36:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8010f3a:	e73c      	b.n	8010db6 <_dtoa_r+0x716>
 8010f3c:	3fe00000 	.word	0x3fe00000
 8010f40:	40240000 	.word	0x40240000
 8010f44:	9b03      	ldr	r3, [sp, #12]
 8010f46:	1e5c      	subs	r4, r3, #1
 8010f48:	9b08      	ldr	r3, [sp, #32]
 8010f4a:	42a3      	cmp	r3, r4
 8010f4c:	db09      	blt.n	8010f62 <_dtoa_r+0x8c2>
 8010f4e:	1b1c      	subs	r4, r3, r4
 8010f50:	9b03      	ldr	r3, [sp, #12]
 8010f52:	2b00      	cmp	r3, #0
 8010f54:	f6bf af30 	bge.w	8010db8 <_dtoa_r+0x718>
 8010f58:	9b00      	ldr	r3, [sp, #0]
 8010f5a:	9a03      	ldr	r2, [sp, #12]
 8010f5c:	1a9e      	subs	r6, r3, r2
 8010f5e:	2300      	movs	r3, #0
 8010f60:	e72b      	b.n	8010dba <_dtoa_r+0x71a>
 8010f62:	9b08      	ldr	r3, [sp, #32]
 8010f64:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010f66:	9408      	str	r4, [sp, #32]
 8010f68:	1ae3      	subs	r3, r4, r3
 8010f6a:	441a      	add	r2, r3
 8010f6c:	9e00      	ldr	r6, [sp, #0]
 8010f6e:	9b03      	ldr	r3, [sp, #12]
 8010f70:	920d      	str	r2, [sp, #52]	@ 0x34
 8010f72:	2400      	movs	r4, #0
 8010f74:	e721      	b.n	8010dba <_dtoa_r+0x71a>
 8010f76:	9c08      	ldr	r4, [sp, #32]
 8010f78:	9e00      	ldr	r6, [sp, #0]
 8010f7a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8010f7c:	e728      	b.n	8010dd0 <_dtoa_r+0x730>
 8010f7e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8010f82:	e751      	b.n	8010e28 <_dtoa_r+0x788>
 8010f84:	9a08      	ldr	r2, [sp, #32]
 8010f86:	9902      	ldr	r1, [sp, #8]
 8010f88:	e750      	b.n	8010e2c <_dtoa_r+0x78c>
 8010f8a:	f8cd 8008 	str.w	r8, [sp, #8]
 8010f8e:	e751      	b.n	8010e34 <_dtoa_r+0x794>
 8010f90:	2300      	movs	r3, #0
 8010f92:	e779      	b.n	8010e88 <_dtoa_r+0x7e8>
 8010f94:	9b04      	ldr	r3, [sp, #16]
 8010f96:	e777      	b.n	8010e88 <_dtoa_r+0x7e8>
 8010f98:	2300      	movs	r3, #0
 8010f9a:	9308      	str	r3, [sp, #32]
 8010f9c:	e779      	b.n	8010e92 <_dtoa_r+0x7f2>
 8010f9e:	d093      	beq.n	8010ec8 <_dtoa_r+0x828>
 8010fa0:	9a00      	ldr	r2, [sp, #0]
 8010fa2:	331c      	adds	r3, #28
 8010fa4:	441a      	add	r2, r3
 8010fa6:	9200      	str	r2, [sp, #0]
 8010fa8:	9a06      	ldr	r2, [sp, #24]
 8010faa:	441a      	add	r2, r3
 8010fac:	441e      	add	r6, r3
 8010fae:	9206      	str	r2, [sp, #24]
 8010fb0:	e78a      	b.n	8010ec8 <_dtoa_r+0x828>
 8010fb2:	4603      	mov	r3, r0
 8010fb4:	e7f4      	b.n	8010fa0 <_dtoa_r+0x900>
 8010fb6:	9b03      	ldr	r3, [sp, #12]
 8010fb8:	2b00      	cmp	r3, #0
 8010fba:	46b8      	mov	r8, r7
 8010fbc:	dc20      	bgt.n	8011000 <_dtoa_r+0x960>
 8010fbe:	469b      	mov	fp, r3
 8010fc0:	9b07      	ldr	r3, [sp, #28]
 8010fc2:	2b02      	cmp	r3, #2
 8010fc4:	dd1e      	ble.n	8011004 <_dtoa_r+0x964>
 8010fc6:	f1bb 0f00 	cmp.w	fp, #0
 8010fca:	f47f adb1 	bne.w	8010b30 <_dtoa_r+0x490>
 8010fce:	4621      	mov	r1, r4
 8010fd0:	465b      	mov	r3, fp
 8010fd2:	2205      	movs	r2, #5
 8010fd4:	4648      	mov	r0, r9
 8010fd6:	f000 fa95 	bl	8011504 <__multadd>
 8010fda:	4601      	mov	r1, r0
 8010fdc:	4604      	mov	r4, r0
 8010fde:	9802      	ldr	r0, [sp, #8]
 8010fe0:	f000 fcea 	bl	80119b8 <__mcmp>
 8010fe4:	2800      	cmp	r0, #0
 8010fe6:	f77f ada3 	ble.w	8010b30 <_dtoa_r+0x490>
 8010fea:	4656      	mov	r6, sl
 8010fec:	2331      	movs	r3, #49	@ 0x31
 8010fee:	f806 3b01 	strb.w	r3, [r6], #1
 8010ff2:	f108 0801 	add.w	r8, r8, #1
 8010ff6:	e59f      	b.n	8010b38 <_dtoa_r+0x498>
 8010ff8:	9c03      	ldr	r4, [sp, #12]
 8010ffa:	46b8      	mov	r8, r7
 8010ffc:	4625      	mov	r5, r4
 8010ffe:	e7f4      	b.n	8010fea <_dtoa_r+0x94a>
 8011000:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8011004:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011006:	2b00      	cmp	r3, #0
 8011008:	f000 8101 	beq.w	801120e <_dtoa_r+0xb6e>
 801100c:	2e00      	cmp	r6, #0
 801100e:	dd05      	ble.n	801101c <_dtoa_r+0x97c>
 8011010:	4629      	mov	r1, r5
 8011012:	4632      	mov	r2, r6
 8011014:	4648      	mov	r0, r9
 8011016:	f000 fc63 	bl	80118e0 <__lshift>
 801101a:	4605      	mov	r5, r0
 801101c:	9b08      	ldr	r3, [sp, #32]
 801101e:	2b00      	cmp	r3, #0
 8011020:	d05c      	beq.n	80110dc <_dtoa_r+0xa3c>
 8011022:	6869      	ldr	r1, [r5, #4]
 8011024:	4648      	mov	r0, r9
 8011026:	f000 fa0b 	bl	8011440 <_Balloc>
 801102a:	4606      	mov	r6, r0
 801102c:	b928      	cbnz	r0, 801103a <_dtoa_r+0x99a>
 801102e:	4b82      	ldr	r3, [pc, #520]	@ (8011238 <_dtoa_r+0xb98>)
 8011030:	4602      	mov	r2, r0
 8011032:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8011036:	f7ff bb4a 	b.w	80106ce <_dtoa_r+0x2e>
 801103a:	692a      	ldr	r2, [r5, #16]
 801103c:	3202      	adds	r2, #2
 801103e:	0092      	lsls	r2, r2, #2
 8011040:	f105 010c 	add.w	r1, r5, #12
 8011044:	300c      	adds	r0, #12
 8011046:	f7ff fa8e 	bl	8010566 <memcpy>
 801104a:	2201      	movs	r2, #1
 801104c:	4631      	mov	r1, r6
 801104e:	4648      	mov	r0, r9
 8011050:	f000 fc46 	bl	80118e0 <__lshift>
 8011054:	f10a 0301 	add.w	r3, sl, #1
 8011058:	9300      	str	r3, [sp, #0]
 801105a:	eb0a 030b 	add.w	r3, sl, fp
 801105e:	9308      	str	r3, [sp, #32]
 8011060:	9b04      	ldr	r3, [sp, #16]
 8011062:	f003 0301 	and.w	r3, r3, #1
 8011066:	462f      	mov	r7, r5
 8011068:	9306      	str	r3, [sp, #24]
 801106a:	4605      	mov	r5, r0
 801106c:	9b00      	ldr	r3, [sp, #0]
 801106e:	9802      	ldr	r0, [sp, #8]
 8011070:	4621      	mov	r1, r4
 8011072:	f103 3bff 	add.w	fp, r3, #4294967295
 8011076:	f7ff fa8b 	bl	8010590 <quorem>
 801107a:	4603      	mov	r3, r0
 801107c:	3330      	adds	r3, #48	@ 0x30
 801107e:	9003      	str	r0, [sp, #12]
 8011080:	4639      	mov	r1, r7
 8011082:	9802      	ldr	r0, [sp, #8]
 8011084:	9309      	str	r3, [sp, #36]	@ 0x24
 8011086:	f000 fc97 	bl	80119b8 <__mcmp>
 801108a:	462a      	mov	r2, r5
 801108c:	9004      	str	r0, [sp, #16]
 801108e:	4621      	mov	r1, r4
 8011090:	4648      	mov	r0, r9
 8011092:	f000 fcad 	bl	80119f0 <__mdiff>
 8011096:	68c2      	ldr	r2, [r0, #12]
 8011098:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801109a:	4606      	mov	r6, r0
 801109c:	bb02      	cbnz	r2, 80110e0 <_dtoa_r+0xa40>
 801109e:	4601      	mov	r1, r0
 80110a0:	9802      	ldr	r0, [sp, #8]
 80110a2:	f000 fc89 	bl	80119b8 <__mcmp>
 80110a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80110a8:	4602      	mov	r2, r0
 80110aa:	4631      	mov	r1, r6
 80110ac:	4648      	mov	r0, r9
 80110ae:	920c      	str	r2, [sp, #48]	@ 0x30
 80110b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80110b2:	f000 fa05 	bl	80114c0 <_Bfree>
 80110b6:	9b07      	ldr	r3, [sp, #28]
 80110b8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80110ba:	9e00      	ldr	r6, [sp, #0]
 80110bc:	ea42 0103 	orr.w	r1, r2, r3
 80110c0:	9b06      	ldr	r3, [sp, #24]
 80110c2:	4319      	orrs	r1, r3
 80110c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80110c6:	d10d      	bne.n	80110e4 <_dtoa_r+0xa44>
 80110c8:	2b39      	cmp	r3, #57	@ 0x39
 80110ca:	d027      	beq.n	801111c <_dtoa_r+0xa7c>
 80110cc:	9a04      	ldr	r2, [sp, #16]
 80110ce:	2a00      	cmp	r2, #0
 80110d0:	dd01      	ble.n	80110d6 <_dtoa_r+0xa36>
 80110d2:	9b03      	ldr	r3, [sp, #12]
 80110d4:	3331      	adds	r3, #49	@ 0x31
 80110d6:	f88b 3000 	strb.w	r3, [fp]
 80110da:	e52e      	b.n	8010b3a <_dtoa_r+0x49a>
 80110dc:	4628      	mov	r0, r5
 80110de:	e7b9      	b.n	8011054 <_dtoa_r+0x9b4>
 80110e0:	2201      	movs	r2, #1
 80110e2:	e7e2      	b.n	80110aa <_dtoa_r+0xa0a>
 80110e4:	9904      	ldr	r1, [sp, #16]
 80110e6:	2900      	cmp	r1, #0
 80110e8:	db04      	blt.n	80110f4 <_dtoa_r+0xa54>
 80110ea:	9807      	ldr	r0, [sp, #28]
 80110ec:	4301      	orrs	r1, r0
 80110ee:	9806      	ldr	r0, [sp, #24]
 80110f0:	4301      	orrs	r1, r0
 80110f2:	d120      	bne.n	8011136 <_dtoa_r+0xa96>
 80110f4:	2a00      	cmp	r2, #0
 80110f6:	ddee      	ble.n	80110d6 <_dtoa_r+0xa36>
 80110f8:	9902      	ldr	r1, [sp, #8]
 80110fa:	9300      	str	r3, [sp, #0]
 80110fc:	2201      	movs	r2, #1
 80110fe:	4648      	mov	r0, r9
 8011100:	f000 fbee 	bl	80118e0 <__lshift>
 8011104:	4621      	mov	r1, r4
 8011106:	9002      	str	r0, [sp, #8]
 8011108:	f000 fc56 	bl	80119b8 <__mcmp>
 801110c:	2800      	cmp	r0, #0
 801110e:	9b00      	ldr	r3, [sp, #0]
 8011110:	dc02      	bgt.n	8011118 <_dtoa_r+0xa78>
 8011112:	d1e0      	bne.n	80110d6 <_dtoa_r+0xa36>
 8011114:	07da      	lsls	r2, r3, #31
 8011116:	d5de      	bpl.n	80110d6 <_dtoa_r+0xa36>
 8011118:	2b39      	cmp	r3, #57	@ 0x39
 801111a:	d1da      	bne.n	80110d2 <_dtoa_r+0xa32>
 801111c:	2339      	movs	r3, #57	@ 0x39
 801111e:	f88b 3000 	strb.w	r3, [fp]
 8011122:	4633      	mov	r3, r6
 8011124:	461e      	mov	r6, r3
 8011126:	3b01      	subs	r3, #1
 8011128:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 801112c:	2a39      	cmp	r2, #57	@ 0x39
 801112e:	d04e      	beq.n	80111ce <_dtoa_r+0xb2e>
 8011130:	3201      	adds	r2, #1
 8011132:	701a      	strb	r2, [r3, #0]
 8011134:	e501      	b.n	8010b3a <_dtoa_r+0x49a>
 8011136:	2a00      	cmp	r2, #0
 8011138:	dd03      	ble.n	8011142 <_dtoa_r+0xaa2>
 801113a:	2b39      	cmp	r3, #57	@ 0x39
 801113c:	d0ee      	beq.n	801111c <_dtoa_r+0xa7c>
 801113e:	3301      	adds	r3, #1
 8011140:	e7c9      	b.n	80110d6 <_dtoa_r+0xa36>
 8011142:	9a00      	ldr	r2, [sp, #0]
 8011144:	9908      	ldr	r1, [sp, #32]
 8011146:	f802 3c01 	strb.w	r3, [r2, #-1]
 801114a:	428a      	cmp	r2, r1
 801114c:	d028      	beq.n	80111a0 <_dtoa_r+0xb00>
 801114e:	9902      	ldr	r1, [sp, #8]
 8011150:	2300      	movs	r3, #0
 8011152:	220a      	movs	r2, #10
 8011154:	4648      	mov	r0, r9
 8011156:	f000 f9d5 	bl	8011504 <__multadd>
 801115a:	42af      	cmp	r7, r5
 801115c:	9002      	str	r0, [sp, #8]
 801115e:	f04f 0300 	mov.w	r3, #0
 8011162:	f04f 020a 	mov.w	r2, #10
 8011166:	4639      	mov	r1, r7
 8011168:	4648      	mov	r0, r9
 801116a:	d107      	bne.n	801117c <_dtoa_r+0xadc>
 801116c:	f000 f9ca 	bl	8011504 <__multadd>
 8011170:	4607      	mov	r7, r0
 8011172:	4605      	mov	r5, r0
 8011174:	9b00      	ldr	r3, [sp, #0]
 8011176:	3301      	adds	r3, #1
 8011178:	9300      	str	r3, [sp, #0]
 801117a:	e777      	b.n	801106c <_dtoa_r+0x9cc>
 801117c:	f000 f9c2 	bl	8011504 <__multadd>
 8011180:	4629      	mov	r1, r5
 8011182:	4607      	mov	r7, r0
 8011184:	2300      	movs	r3, #0
 8011186:	220a      	movs	r2, #10
 8011188:	4648      	mov	r0, r9
 801118a:	f000 f9bb 	bl	8011504 <__multadd>
 801118e:	4605      	mov	r5, r0
 8011190:	e7f0      	b.n	8011174 <_dtoa_r+0xad4>
 8011192:	f1bb 0f00 	cmp.w	fp, #0
 8011196:	bfcc      	ite	gt
 8011198:	465e      	movgt	r6, fp
 801119a:	2601      	movle	r6, #1
 801119c:	4456      	add	r6, sl
 801119e:	2700      	movs	r7, #0
 80111a0:	9902      	ldr	r1, [sp, #8]
 80111a2:	9300      	str	r3, [sp, #0]
 80111a4:	2201      	movs	r2, #1
 80111a6:	4648      	mov	r0, r9
 80111a8:	f000 fb9a 	bl	80118e0 <__lshift>
 80111ac:	4621      	mov	r1, r4
 80111ae:	9002      	str	r0, [sp, #8]
 80111b0:	f000 fc02 	bl	80119b8 <__mcmp>
 80111b4:	2800      	cmp	r0, #0
 80111b6:	dcb4      	bgt.n	8011122 <_dtoa_r+0xa82>
 80111b8:	d102      	bne.n	80111c0 <_dtoa_r+0xb20>
 80111ba:	9b00      	ldr	r3, [sp, #0]
 80111bc:	07db      	lsls	r3, r3, #31
 80111be:	d4b0      	bmi.n	8011122 <_dtoa_r+0xa82>
 80111c0:	4633      	mov	r3, r6
 80111c2:	461e      	mov	r6, r3
 80111c4:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80111c8:	2a30      	cmp	r2, #48	@ 0x30
 80111ca:	d0fa      	beq.n	80111c2 <_dtoa_r+0xb22>
 80111cc:	e4b5      	b.n	8010b3a <_dtoa_r+0x49a>
 80111ce:	459a      	cmp	sl, r3
 80111d0:	d1a8      	bne.n	8011124 <_dtoa_r+0xa84>
 80111d2:	2331      	movs	r3, #49	@ 0x31
 80111d4:	f108 0801 	add.w	r8, r8, #1
 80111d8:	f88a 3000 	strb.w	r3, [sl]
 80111dc:	e4ad      	b.n	8010b3a <_dtoa_r+0x49a>
 80111de:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80111e0:	f8df a058 	ldr.w	sl, [pc, #88]	@ 801123c <_dtoa_r+0xb9c>
 80111e4:	b11b      	cbz	r3, 80111ee <_dtoa_r+0xb4e>
 80111e6:	f10a 0308 	add.w	r3, sl, #8
 80111ea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80111ec:	6013      	str	r3, [r2, #0]
 80111ee:	4650      	mov	r0, sl
 80111f0:	b017      	add	sp, #92	@ 0x5c
 80111f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111f6:	9b07      	ldr	r3, [sp, #28]
 80111f8:	2b01      	cmp	r3, #1
 80111fa:	f77f ae2e 	ble.w	8010e5a <_dtoa_r+0x7ba>
 80111fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011200:	9308      	str	r3, [sp, #32]
 8011202:	2001      	movs	r0, #1
 8011204:	e64d      	b.n	8010ea2 <_dtoa_r+0x802>
 8011206:	f1bb 0f00 	cmp.w	fp, #0
 801120a:	f77f aed9 	ble.w	8010fc0 <_dtoa_r+0x920>
 801120e:	4656      	mov	r6, sl
 8011210:	9802      	ldr	r0, [sp, #8]
 8011212:	4621      	mov	r1, r4
 8011214:	f7ff f9bc 	bl	8010590 <quorem>
 8011218:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 801121c:	f806 3b01 	strb.w	r3, [r6], #1
 8011220:	eba6 020a 	sub.w	r2, r6, sl
 8011224:	4593      	cmp	fp, r2
 8011226:	ddb4      	ble.n	8011192 <_dtoa_r+0xaf2>
 8011228:	9902      	ldr	r1, [sp, #8]
 801122a:	2300      	movs	r3, #0
 801122c:	220a      	movs	r2, #10
 801122e:	4648      	mov	r0, r9
 8011230:	f000 f968 	bl	8011504 <__multadd>
 8011234:	9002      	str	r0, [sp, #8]
 8011236:	e7eb      	b.n	8011210 <_dtoa_r+0xb70>
 8011238:	0801859e 	.word	0x0801859e
 801123c:	08018522 	.word	0x08018522

08011240 <_free_r>:
 8011240:	b538      	push	{r3, r4, r5, lr}
 8011242:	4605      	mov	r5, r0
 8011244:	2900      	cmp	r1, #0
 8011246:	d041      	beq.n	80112cc <_free_r+0x8c>
 8011248:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801124c:	1f0c      	subs	r4, r1, #4
 801124e:	2b00      	cmp	r3, #0
 8011250:	bfb8      	it	lt
 8011252:	18e4      	addlt	r4, r4, r3
 8011254:	f000 f8e8 	bl	8011428 <__malloc_lock>
 8011258:	4a1d      	ldr	r2, [pc, #116]	@ (80112d0 <_free_r+0x90>)
 801125a:	6813      	ldr	r3, [r2, #0]
 801125c:	b933      	cbnz	r3, 801126c <_free_r+0x2c>
 801125e:	6063      	str	r3, [r4, #4]
 8011260:	6014      	str	r4, [r2, #0]
 8011262:	4628      	mov	r0, r5
 8011264:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011268:	f000 b8e4 	b.w	8011434 <__malloc_unlock>
 801126c:	42a3      	cmp	r3, r4
 801126e:	d908      	bls.n	8011282 <_free_r+0x42>
 8011270:	6820      	ldr	r0, [r4, #0]
 8011272:	1821      	adds	r1, r4, r0
 8011274:	428b      	cmp	r3, r1
 8011276:	bf01      	itttt	eq
 8011278:	6819      	ldreq	r1, [r3, #0]
 801127a:	685b      	ldreq	r3, [r3, #4]
 801127c:	1809      	addeq	r1, r1, r0
 801127e:	6021      	streq	r1, [r4, #0]
 8011280:	e7ed      	b.n	801125e <_free_r+0x1e>
 8011282:	461a      	mov	r2, r3
 8011284:	685b      	ldr	r3, [r3, #4]
 8011286:	b10b      	cbz	r3, 801128c <_free_r+0x4c>
 8011288:	42a3      	cmp	r3, r4
 801128a:	d9fa      	bls.n	8011282 <_free_r+0x42>
 801128c:	6811      	ldr	r1, [r2, #0]
 801128e:	1850      	adds	r0, r2, r1
 8011290:	42a0      	cmp	r0, r4
 8011292:	d10b      	bne.n	80112ac <_free_r+0x6c>
 8011294:	6820      	ldr	r0, [r4, #0]
 8011296:	4401      	add	r1, r0
 8011298:	1850      	adds	r0, r2, r1
 801129a:	4283      	cmp	r3, r0
 801129c:	6011      	str	r1, [r2, #0]
 801129e:	d1e0      	bne.n	8011262 <_free_r+0x22>
 80112a0:	6818      	ldr	r0, [r3, #0]
 80112a2:	685b      	ldr	r3, [r3, #4]
 80112a4:	6053      	str	r3, [r2, #4]
 80112a6:	4408      	add	r0, r1
 80112a8:	6010      	str	r0, [r2, #0]
 80112aa:	e7da      	b.n	8011262 <_free_r+0x22>
 80112ac:	d902      	bls.n	80112b4 <_free_r+0x74>
 80112ae:	230c      	movs	r3, #12
 80112b0:	602b      	str	r3, [r5, #0]
 80112b2:	e7d6      	b.n	8011262 <_free_r+0x22>
 80112b4:	6820      	ldr	r0, [r4, #0]
 80112b6:	1821      	adds	r1, r4, r0
 80112b8:	428b      	cmp	r3, r1
 80112ba:	bf04      	itt	eq
 80112bc:	6819      	ldreq	r1, [r3, #0]
 80112be:	685b      	ldreq	r3, [r3, #4]
 80112c0:	6063      	str	r3, [r4, #4]
 80112c2:	bf04      	itt	eq
 80112c4:	1809      	addeq	r1, r1, r0
 80112c6:	6021      	streq	r1, [r4, #0]
 80112c8:	6054      	str	r4, [r2, #4]
 80112ca:	e7ca      	b.n	8011262 <_free_r+0x22>
 80112cc:	bd38      	pop	{r3, r4, r5, pc}
 80112ce:	bf00      	nop
 80112d0:	20005b90 	.word	0x20005b90

080112d4 <malloc>:
 80112d4:	4b02      	ldr	r3, [pc, #8]	@ (80112e0 <malloc+0xc>)
 80112d6:	4601      	mov	r1, r0
 80112d8:	6818      	ldr	r0, [r3, #0]
 80112da:	f000 b825 	b.w	8011328 <_malloc_r>
 80112de:	bf00      	nop
 80112e0:	20000140 	.word	0x20000140

080112e4 <sbrk_aligned>:
 80112e4:	b570      	push	{r4, r5, r6, lr}
 80112e6:	4e0f      	ldr	r6, [pc, #60]	@ (8011324 <sbrk_aligned+0x40>)
 80112e8:	460c      	mov	r4, r1
 80112ea:	6831      	ldr	r1, [r6, #0]
 80112ec:	4605      	mov	r5, r0
 80112ee:	b911      	cbnz	r1, 80112f6 <sbrk_aligned+0x12>
 80112f0:	f001 fd88 	bl	8012e04 <_sbrk_r>
 80112f4:	6030      	str	r0, [r6, #0]
 80112f6:	4621      	mov	r1, r4
 80112f8:	4628      	mov	r0, r5
 80112fa:	f001 fd83 	bl	8012e04 <_sbrk_r>
 80112fe:	1c43      	adds	r3, r0, #1
 8011300:	d103      	bne.n	801130a <sbrk_aligned+0x26>
 8011302:	f04f 34ff 	mov.w	r4, #4294967295
 8011306:	4620      	mov	r0, r4
 8011308:	bd70      	pop	{r4, r5, r6, pc}
 801130a:	1cc4      	adds	r4, r0, #3
 801130c:	f024 0403 	bic.w	r4, r4, #3
 8011310:	42a0      	cmp	r0, r4
 8011312:	d0f8      	beq.n	8011306 <sbrk_aligned+0x22>
 8011314:	1a21      	subs	r1, r4, r0
 8011316:	4628      	mov	r0, r5
 8011318:	f001 fd74 	bl	8012e04 <_sbrk_r>
 801131c:	3001      	adds	r0, #1
 801131e:	d1f2      	bne.n	8011306 <sbrk_aligned+0x22>
 8011320:	e7ef      	b.n	8011302 <sbrk_aligned+0x1e>
 8011322:	bf00      	nop
 8011324:	20005b8c 	.word	0x20005b8c

08011328 <_malloc_r>:
 8011328:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801132c:	1ccd      	adds	r5, r1, #3
 801132e:	f025 0503 	bic.w	r5, r5, #3
 8011332:	3508      	adds	r5, #8
 8011334:	2d0c      	cmp	r5, #12
 8011336:	bf38      	it	cc
 8011338:	250c      	movcc	r5, #12
 801133a:	2d00      	cmp	r5, #0
 801133c:	4606      	mov	r6, r0
 801133e:	db01      	blt.n	8011344 <_malloc_r+0x1c>
 8011340:	42a9      	cmp	r1, r5
 8011342:	d904      	bls.n	801134e <_malloc_r+0x26>
 8011344:	230c      	movs	r3, #12
 8011346:	6033      	str	r3, [r6, #0]
 8011348:	2000      	movs	r0, #0
 801134a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801134e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8011424 <_malloc_r+0xfc>
 8011352:	f000 f869 	bl	8011428 <__malloc_lock>
 8011356:	f8d8 3000 	ldr.w	r3, [r8]
 801135a:	461c      	mov	r4, r3
 801135c:	bb44      	cbnz	r4, 80113b0 <_malloc_r+0x88>
 801135e:	4629      	mov	r1, r5
 8011360:	4630      	mov	r0, r6
 8011362:	f7ff ffbf 	bl	80112e4 <sbrk_aligned>
 8011366:	1c43      	adds	r3, r0, #1
 8011368:	4604      	mov	r4, r0
 801136a:	d158      	bne.n	801141e <_malloc_r+0xf6>
 801136c:	f8d8 4000 	ldr.w	r4, [r8]
 8011370:	4627      	mov	r7, r4
 8011372:	2f00      	cmp	r7, #0
 8011374:	d143      	bne.n	80113fe <_malloc_r+0xd6>
 8011376:	2c00      	cmp	r4, #0
 8011378:	d04b      	beq.n	8011412 <_malloc_r+0xea>
 801137a:	6823      	ldr	r3, [r4, #0]
 801137c:	4639      	mov	r1, r7
 801137e:	4630      	mov	r0, r6
 8011380:	eb04 0903 	add.w	r9, r4, r3
 8011384:	f001 fd3e 	bl	8012e04 <_sbrk_r>
 8011388:	4581      	cmp	r9, r0
 801138a:	d142      	bne.n	8011412 <_malloc_r+0xea>
 801138c:	6821      	ldr	r1, [r4, #0]
 801138e:	1a6d      	subs	r5, r5, r1
 8011390:	4629      	mov	r1, r5
 8011392:	4630      	mov	r0, r6
 8011394:	f7ff ffa6 	bl	80112e4 <sbrk_aligned>
 8011398:	3001      	adds	r0, #1
 801139a:	d03a      	beq.n	8011412 <_malloc_r+0xea>
 801139c:	6823      	ldr	r3, [r4, #0]
 801139e:	442b      	add	r3, r5
 80113a0:	6023      	str	r3, [r4, #0]
 80113a2:	f8d8 3000 	ldr.w	r3, [r8]
 80113a6:	685a      	ldr	r2, [r3, #4]
 80113a8:	bb62      	cbnz	r2, 8011404 <_malloc_r+0xdc>
 80113aa:	f8c8 7000 	str.w	r7, [r8]
 80113ae:	e00f      	b.n	80113d0 <_malloc_r+0xa8>
 80113b0:	6822      	ldr	r2, [r4, #0]
 80113b2:	1b52      	subs	r2, r2, r5
 80113b4:	d420      	bmi.n	80113f8 <_malloc_r+0xd0>
 80113b6:	2a0b      	cmp	r2, #11
 80113b8:	d917      	bls.n	80113ea <_malloc_r+0xc2>
 80113ba:	1961      	adds	r1, r4, r5
 80113bc:	42a3      	cmp	r3, r4
 80113be:	6025      	str	r5, [r4, #0]
 80113c0:	bf18      	it	ne
 80113c2:	6059      	strne	r1, [r3, #4]
 80113c4:	6863      	ldr	r3, [r4, #4]
 80113c6:	bf08      	it	eq
 80113c8:	f8c8 1000 	streq.w	r1, [r8]
 80113cc:	5162      	str	r2, [r4, r5]
 80113ce:	604b      	str	r3, [r1, #4]
 80113d0:	4630      	mov	r0, r6
 80113d2:	f000 f82f 	bl	8011434 <__malloc_unlock>
 80113d6:	f104 000b 	add.w	r0, r4, #11
 80113da:	1d23      	adds	r3, r4, #4
 80113dc:	f020 0007 	bic.w	r0, r0, #7
 80113e0:	1ac2      	subs	r2, r0, r3
 80113e2:	bf1c      	itt	ne
 80113e4:	1a1b      	subne	r3, r3, r0
 80113e6:	50a3      	strne	r3, [r4, r2]
 80113e8:	e7af      	b.n	801134a <_malloc_r+0x22>
 80113ea:	6862      	ldr	r2, [r4, #4]
 80113ec:	42a3      	cmp	r3, r4
 80113ee:	bf0c      	ite	eq
 80113f0:	f8c8 2000 	streq.w	r2, [r8]
 80113f4:	605a      	strne	r2, [r3, #4]
 80113f6:	e7eb      	b.n	80113d0 <_malloc_r+0xa8>
 80113f8:	4623      	mov	r3, r4
 80113fa:	6864      	ldr	r4, [r4, #4]
 80113fc:	e7ae      	b.n	801135c <_malloc_r+0x34>
 80113fe:	463c      	mov	r4, r7
 8011400:	687f      	ldr	r7, [r7, #4]
 8011402:	e7b6      	b.n	8011372 <_malloc_r+0x4a>
 8011404:	461a      	mov	r2, r3
 8011406:	685b      	ldr	r3, [r3, #4]
 8011408:	42a3      	cmp	r3, r4
 801140a:	d1fb      	bne.n	8011404 <_malloc_r+0xdc>
 801140c:	2300      	movs	r3, #0
 801140e:	6053      	str	r3, [r2, #4]
 8011410:	e7de      	b.n	80113d0 <_malloc_r+0xa8>
 8011412:	230c      	movs	r3, #12
 8011414:	6033      	str	r3, [r6, #0]
 8011416:	4630      	mov	r0, r6
 8011418:	f000 f80c 	bl	8011434 <__malloc_unlock>
 801141c:	e794      	b.n	8011348 <_malloc_r+0x20>
 801141e:	6005      	str	r5, [r0, #0]
 8011420:	e7d6      	b.n	80113d0 <_malloc_r+0xa8>
 8011422:	bf00      	nop
 8011424:	20005b90 	.word	0x20005b90

08011428 <__malloc_lock>:
 8011428:	4801      	ldr	r0, [pc, #4]	@ (8011430 <__malloc_lock+0x8>)
 801142a:	f7ff b89a 	b.w	8010562 <__retarget_lock_acquire_recursive>
 801142e:	bf00      	nop
 8011430:	20005b88 	.word	0x20005b88

08011434 <__malloc_unlock>:
 8011434:	4801      	ldr	r0, [pc, #4]	@ (801143c <__malloc_unlock+0x8>)
 8011436:	f7ff b895 	b.w	8010564 <__retarget_lock_release_recursive>
 801143a:	bf00      	nop
 801143c:	20005b88 	.word	0x20005b88

08011440 <_Balloc>:
 8011440:	b570      	push	{r4, r5, r6, lr}
 8011442:	69c6      	ldr	r6, [r0, #28]
 8011444:	4604      	mov	r4, r0
 8011446:	460d      	mov	r5, r1
 8011448:	b976      	cbnz	r6, 8011468 <_Balloc+0x28>
 801144a:	2010      	movs	r0, #16
 801144c:	f7ff ff42 	bl	80112d4 <malloc>
 8011450:	4602      	mov	r2, r0
 8011452:	61e0      	str	r0, [r4, #28]
 8011454:	b920      	cbnz	r0, 8011460 <_Balloc+0x20>
 8011456:	4b18      	ldr	r3, [pc, #96]	@ (80114b8 <_Balloc+0x78>)
 8011458:	4818      	ldr	r0, [pc, #96]	@ (80114bc <_Balloc+0x7c>)
 801145a:	216b      	movs	r1, #107	@ 0x6b
 801145c:	f001 fcec 	bl	8012e38 <__assert_func>
 8011460:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8011464:	6006      	str	r6, [r0, #0]
 8011466:	60c6      	str	r6, [r0, #12]
 8011468:	69e6      	ldr	r6, [r4, #28]
 801146a:	68f3      	ldr	r3, [r6, #12]
 801146c:	b183      	cbz	r3, 8011490 <_Balloc+0x50>
 801146e:	69e3      	ldr	r3, [r4, #28]
 8011470:	68db      	ldr	r3, [r3, #12]
 8011472:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8011476:	b9b8      	cbnz	r0, 80114a8 <_Balloc+0x68>
 8011478:	2101      	movs	r1, #1
 801147a:	fa01 f605 	lsl.w	r6, r1, r5
 801147e:	1d72      	adds	r2, r6, #5
 8011480:	0092      	lsls	r2, r2, #2
 8011482:	4620      	mov	r0, r4
 8011484:	f001 fcf6 	bl	8012e74 <_calloc_r>
 8011488:	b160      	cbz	r0, 80114a4 <_Balloc+0x64>
 801148a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 801148e:	e00e      	b.n	80114ae <_Balloc+0x6e>
 8011490:	2221      	movs	r2, #33	@ 0x21
 8011492:	2104      	movs	r1, #4
 8011494:	4620      	mov	r0, r4
 8011496:	f001 fced 	bl	8012e74 <_calloc_r>
 801149a:	69e3      	ldr	r3, [r4, #28]
 801149c:	60f0      	str	r0, [r6, #12]
 801149e:	68db      	ldr	r3, [r3, #12]
 80114a0:	2b00      	cmp	r3, #0
 80114a2:	d1e4      	bne.n	801146e <_Balloc+0x2e>
 80114a4:	2000      	movs	r0, #0
 80114a6:	bd70      	pop	{r4, r5, r6, pc}
 80114a8:	6802      	ldr	r2, [r0, #0]
 80114aa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80114ae:	2300      	movs	r3, #0
 80114b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80114b4:	e7f7      	b.n	80114a6 <_Balloc+0x66>
 80114b6:	bf00      	nop
 80114b8:	0801852f 	.word	0x0801852f
 80114bc:	080185af 	.word	0x080185af

080114c0 <_Bfree>:
 80114c0:	b570      	push	{r4, r5, r6, lr}
 80114c2:	69c6      	ldr	r6, [r0, #28]
 80114c4:	4605      	mov	r5, r0
 80114c6:	460c      	mov	r4, r1
 80114c8:	b976      	cbnz	r6, 80114e8 <_Bfree+0x28>
 80114ca:	2010      	movs	r0, #16
 80114cc:	f7ff ff02 	bl	80112d4 <malloc>
 80114d0:	4602      	mov	r2, r0
 80114d2:	61e8      	str	r0, [r5, #28]
 80114d4:	b920      	cbnz	r0, 80114e0 <_Bfree+0x20>
 80114d6:	4b09      	ldr	r3, [pc, #36]	@ (80114fc <_Bfree+0x3c>)
 80114d8:	4809      	ldr	r0, [pc, #36]	@ (8011500 <_Bfree+0x40>)
 80114da:	218f      	movs	r1, #143	@ 0x8f
 80114dc:	f001 fcac 	bl	8012e38 <__assert_func>
 80114e0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80114e4:	6006      	str	r6, [r0, #0]
 80114e6:	60c6      	str	r6, [r0, #12]
 80114e8:	b13c      	cbz	r4, 80114fa <_Bfree+0x3a>
 80114ea:	69eb      	ldr	r3, [r5, #28]
 80114ec:	6862      	ldr	r2, [r4, #4]
 80114ee:	68db      	ldr	r3, [r3, #12]
 80114f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80114f4:	6021      	str	r1, [r4, #0]
 80114f6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80114fa:	bd70      	pop	{r4, r5, r6, pc}
 80114fc:	0801852f 	.word	0x0801852f
 8011500:	080185af 	.word	0x080185af

08011504 <__multadd>:
 8011504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011508:	690d      	ldr	r5, [r1, #16]
 801150a:	4607      	mov	r7, r0
 801150c:	460c      	mov	r4, r1
 801150e:	461e      	mov	r6, r3
 8011510:	f101 0c14 	add.w	ip, r1, #20
 8011514:	2000      	movs	r0, #0
 8011516:	f8dc 3000 	ldr.w	r3, [ip]
 801151a:	b299      	uxth	r1, r3
 801151c:	fb02 6101 	mla	r1, r2, r1, r6
 8011520:	0c1e      	lsrs	r6, r3, #16
 8011522:	0c0b      	lsrs	r3, r1, #16
 8011524:	fb02 3306 	mla	r3, r2, r6, r3
 8011528:	b289      	uxth	r1, r1
 801152a:	3001      	adds	r0, #1
 801152c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8011530:	4285      	cmp	r5, r0
 8011532:	f84c 1b04 	str.w	r1, [ip], #4
 8011536:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801153a:	dcec      	bgt.n	8011516 <__multadd+0x12>
 801153c:	b30e      	cbz	r6, 8011582 <__multadd+0x7e>
 801153e:	68a3      	ldr	r3, [r4, #8]
 8011540:	42ab      	cmp	r3, r5
 8011542:	dc19      	bgt.n	8011578 <__multadd+0x74>
 8011544:	6861      	ldr	r1, [r4, #4]
 8011546:	4638      	mov	r0, r7
 8011548:	3101      	adds	r1, #1
 801154a:	f7ff ff79 	bl	8011440 <_Balloc>
 801154e:	4680      	mov	r8, r0
 8011550:	b928      	cbnz	r0, 801155e <__multadd+0x5a>
 8011552:	4602      	mov	r2, r0
 8011554:	4b0c      	ldr	r3, [pc, #48]	@ (8011588 <__multadd+0x84>)
 8011556:	480d      	ldr	r0, [pc, #52]	@ (801158c <__multadd+0x88>)
 8011558:	21ba      	movs	r1, #186	@ 0xba
 801155a:	f001 fc6d 	bl	8012e38 <__assert_func>
 801155e:	6922      	ldr	r2, [r4, #16]
 8011560:	3202      	adds	r2, #2
 8011562:	f104 010c 	add.w	r1, r4, #12
 8011566:	0092      	lsls	r2, r2, #2
 8011568:	300c      	adds	r0, #12
 801156a:	f7fe fffc 	bl	8010566 <memcpy>
 801156e:	4621      	mov	r1, r4
 8011570:	4638      	mov	r0, r7
 8011572:	f7ff ffa5 	bl	80114c0 <_Bfree>
 8011576:	4644      	mov	r4, r8
 8011578:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801157c:	3501      	adds	r5, #1
 801157e:	615e      	str	r6, [r3, #20]
 8011580:	6125      	str	r5, [r4, #16]
 8011582:	4620      	mov	r0, r4
 8011584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011588:	0801859e 	.word	0x0801859e
 801158c:	080185af 	.word	0x080185af

08011590 <__s2b>:
 8011590:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011594:	460c      	mov	r4, r1
 8011596:	4615      	mov	r5, r2
 8011598:	461f      	mov	r7, r3
 801159a:	2209      	movs	r2, #9
 801159c:	3308      	adds	r3, #8
 801159e:	4606      	mov	r6, r0
 80115a0:	fb93 f3f2 	sdiv	r3, r3, r2
 80115a4:	2100      	movs	r1, #0
 80115a6:	2201      	movs	r2, #1
 80115a8:	429a      	cmp	r2, r3
 80115aa:	db09      	blt.n	80115c0 <__s2b+0x30>
 80115ac:	4630      	mov	r0, r6
 80115ae:	f7ff ff47 	bl	8011440 <_Balloc>
 80115b2:	b940      	cbnz	r0, 80115c6 <__s2b+0x36>
 80115b4:	4602      	mov	r2, r0
 80115b6:	4b19      	ldr	r3, [pc, #100]	@ (801161c <__s2b+0x8c>)
 80115b8:	4819      	ldr	r0, [pc, #100]	@ (8011620 <__s2b+0x90>)
 80115ba:	21d3      	movs	r1, #211	@ 0xd3
 80115bc:	f001 fc3c 	bl	8012e38 <__assert_func>
 80115c0:	0052      	lsls	r2, r2, #1
 80115c2:	3101      	adds	r1, #1
 80115c4:	e7f0      	b.n	80115a8 <__s2b+0x18>
 80115c6:	9b08      	ldr	r3, [sp, #32]
 80115c8:	6143      	str	r3, [r0, #20]
 80115ca:	2d09      	cmp	r5, #9
 80115cc:	f04f 0301 	mov.w	r3, #1
 80115d0:	6103      	str	r3, [r0, #16]
 80115d2:	dd16      	ble.n	8011602 <__s2b+0x72>
 80115d4:	f104 0909 	add.w	r9, r4, #9
 80115d8:	46c8      	mov	r8, r9
 80115da:	442c      	add	r4, r5
 80115dc:	f818 3b01 	ldrb.w	r3, [r8], #1
 80115e0:	4601      	mov	r1, r0
 80115e2:	3b30      	subs	r3, #48	@ 0x30
 80115e4:	220a      	movs	r2, #10
 80115e6:	4630      	mov	r0, r6
 80115e8:	f7ff ff8c 	bl	8011504 <__multadd>
 80115ec:	45a0      	cmp	r8, r4
 80115ee:	d1f5      	bne.n	80115dc <__s2b+0x4c>
 80115f0:	f1a5 0408 	sub.w	r4, r5, #8
 80115f4:	444c      	add	r4, r9
 80115f6:	1b2d      	subs	r5, r5, r4
 80115f8:	1963      	adds	r3, r4, r5
 80115fa:	42bb      	cmp	r3, r7
 80115fc:	db04      	blt.n	8011608 <__s2b+0x78>
 80115fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011602:	340a      	adds	r4, #10
 8011604:	2509      	movs	r5, #9
 8011606:	e7f6      	b.n	80115f6 <__s2b+0x66>
 8011608:	f814 3b01 	ldrb.w	r3, [r4], #1
 801160c:	4601      	mov	r1, r0
 801160e:	3b30      	subs	r3, #48	@ 0x30
 8011610:	220a      	movs	r2, #10
 8011612:	4630      	mov	r0, r6
 8011614:	f7ff ff76 	bl	8011504 <__multadd>
 8011618:	e7ee      	b.n	80115f8 <__s2b+0x68>
 801161a:	bf00      	nop
 801161c:	0801859e 	.word	0x0801859e
 8011620:	080185af 	.word	0x080185af

08011624 <__hi0bits>:
 8011624:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8011628:	4603      	mov	r3, r0
 801162a:	bf36      	itet	cc
 801162c:	0403      	lslcc	r3, r0, #16
 801162e:	2000      	movcs	r0, #0
 8011630:	2010      	movcc	r0, #16
 8011632:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8011636:	bf3c      	itt	cc
 8011638:	021b      	lslcc	r3, r3, #8
 801163a:	3008      	addcc	r0, #8
 801163c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8011640:	bf3c      	itt	cc
 8011642:	011b      	lslcc	r3, r3, #4
 8011644:	3004      	addcc	r0, #4
 8011646:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801164a:	bf3c      	itt	cc
 801164c:	009b      	lslcc	r3, r3, #2
 801164e:	3002      	addcc	r0, #2
 8011650:	2b00      	cmp	r3, #0
 8011652:	db05      	blt.n	8011660 <__hi0bits+0x3c>
 8011654:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8011658:	f100 0001 	add.w	r0, r0, #1
 801165c:	bf08      	it	eq
 801165e:	2020      	moveq	r0, #32
 8011660:	4770      	bx	lr

08011662 <__lo0bits>:
 8011662:	6803      	ldr	r3, [r0, #0]
 8011664:	4602      	mov	r2, r0
 8011666:	f013 0007 	ands.w	r0, r3, #7
 801166a:	d00b      	beq.n	8011684 <__lo0bits+0x22>
 801166c:	07d9      	lsls	r1, r3, #31
 801166e:	d421      	bmi.n	80116b4 <__lo0bits+0x52>
 8011670:	0798      	lsls	r0, r3, #30
 8011672:	bf49      	itett	mi
 8011674:	085b      	lsrmi	r3, r3, #1
 8011676:	089b      	lsrpl	r3, r3, #2
 8011678:	2001      	movmi	r0, #1
 801167a:	6013      	strmi	r3, [r2, #0]
 801167c:	bf5c      	itt	pl
 801167e:	6013      	strpl	r3, [r2, #0]
 8011680:	2002      	movpl	r0, #2
 8011682:	4770      	bx	lr
 8011684:	b299      	uxth	r1, r3
 8011686:	b909      	cbnz	r1, 801168c <__lo0bits+0x2a>
 8011688:	0c1b      	lsrs	r3, r3, #16
 801168a:	2010      	movs	r0, #16
 801168c:	b2d9      	uxtb	r1, r3
 801168e:	b909      	cbnz	r1, 8011694 <__lo0bits+0x32>
 8011690:	3008      	adds	r0, #8
 8011692:	0a1b      	lsrs	r3, r3, #8
 8011694:	0719      	lsls	r1, r3, #28
 8011696:	bf04      	itt	eq
 8011698:	091b      	lsreq	r3, r3, #4
 801169a:	3004      	addeq	r0, #4
 801169c:	0799      	lsls	r1, r3, #30
 801169e:	bf04      	itt	eq
 80116a0:	089b      	lsreq	r3, r3, #2
 80116a2:	3002      	addeq	r0, #2
 80116a4:	07d9      	lsls	r1, r3, #31
 80116a6:	d403      	bmi.n	80116b0 <__lo0bits+0x4e>
 80116a8:	085b      	lsrs	r3, r3, #1
 80116aa:	f100 0001 	add.w	r0, r0, #1
 80116ae:	d003      	beq.n	80116b8 <__lo0bits+0x56>
 80116b0:	6013      	str	r3, [r2, #0]
 80116b2:	4770      	bx	lr
 80116b4:	2000      	movs	r0, #0
 80116b6:	4770      	bx	lr
 80116b8:	2020      	movs	r0, #32
 80116ba:	4770      	bx	lr

080116bc <__i2b>:
 80116bc:	b510      	push	{r4, lr}
 80116be:	460c      	mov	r4, r1
 80116c0:	2101      	movs	r1, #1
 80116c2:	f7ff febd 	bl	8011440 <_Balloc>
 80116c6:	4602      	mov	r2, r0
 80116c8:	b928      	cbnz	r0, 80116d6 <__i2b+0x1a>
 80116ca:	4b05      	ldr	r3, [pc, #20]	@ (80116e0 <__i2b+0x24>)
 80116cc:	4805      	ldr	r0, [pc, #20]	@ (80116e4 <__i2b+0x28>)
 80116ce:	f240 1145 	movw	r1, #325	@ 0x145
 80116d2:	f001 fbb1 	bl	8012e38 <__assert_func>
 80116d6:	2301      	movs	r3, #1
 80116d8:	6144      	str	r4, [r0, #20]
 80116da:	6103      	str	r3, [r0, #16]
 80116dc:	bd10      	pop	{r4, pc}
 80116de:	bf00      	nop
 80116e0:	0801859e 	.word	0x0801859e
 80116e4:	080185af 	.word	0x080185af

080116e8 <__multiply>:
 80116e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116ec:	4617      	mov	r7, r2
 80116ee:	690a      	ldr	r2, [r1, #16]
 80116f0:	693b      	ldr	r3, [r7, #16]
 80116f2:	429a      	cmp	r2, r3
 80116f4:	bfa8      	it	ge
 80116f6:	463b      	movge	r3, r7
 80116f8:	4689      	mov	r9, r1
 80116fa:	bfa4      	itt	ge
 80116fc:	460f      	movge	r7, r1
 80116fe:	4699      	movge	r9, r3
 8011700:	693d      	ldr	r5, [r7, #16]
 8011702:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8011706:	68bb      	ldr	r3, [r7, #8]
 8011708:	6879      	ldr	r1, [r7, #4]
 801170a:	eb05 060a 	add.w	r6, r5, sl
 801170e:	42b3      	cmp	r3, r6
 8011710:	b085      	sub	sp, #20
 8011712:	bfb8      	it	lt
 8011714:	3101      	addlt	r1, #1
 8011716:	f7ff fe93 	bl	8011440 <_Balloc>
 801171a:	b930      	cbnz	r0, 801172a <__multiply+0x42>
 801171c:	4602      	mov	r2, r0
 801171e:	4b41      	ldr	r3, [pc, #260]	@ (8011824 <__multiply+0x13c>)
 8011720:	4841      	ldr	r0, [pc, #260]	@ (8011828 <__multiply+0x140>)
 8011722:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8011726:	f001 fb87 	bl	8012e38 <__assert_func>
 801172a:	f100 0414 	add.w	r4, r0, #20
 801172e:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8011732:	4623      	mov	r3, r4
 8011734:	2200      	movs	r2, #0
 8011736:	4573      	cmp	r3, lr
 8011738:	d320      	bcc.n	801177c <__multiply+0x94>
 801173a:	f107 0814 	add.w	r8, r7, #20
 801173e:	f109 0114 	add.w	r1, r9, #20
 8011742:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8011746:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 801174a:	9302      	str	r3, [sp, #8]
 801174c:	1beb      	subs	r3, r5, r7
 801174e:	3b15      	subs	r3, #21
 8011750:	f023 0303 	bic.w	r3, r3, #3
 8011754:	3304      	adds	r3, #4
 8011756:	3715      	adds	r7, #21
 8011758:	42bd      	cmp	r5, r7
 801175a:	bf38      	it	cc
 801175c:	2304      	movcc	r3, #4
 801175e:	9301      	str	r3, [sp, #4]
 8011760:	9b02      	ldr	r3, [sp, #8]
 8011762:	9103      	str	r1, [sp, #12]
 8011764:	428b      	cmp	r3, r1
 8011766:	d80c      	bhi.n	8011782 <__multiply+0x9a>
 8011768:	2e00      	cmp	r6, #0
 801176a:	dd03      	ble.n	8011774 <__multiply+0x8c>
 801176c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8011770:	2b00      	cmp	r3, #0
 8011772:	d055      	beq.n	8011820 <__multiply+0x138>
 8011774:	6106      	str	r6, [r0, #16]
 8011776:	b005      	add	sp, #20
 8011778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801177c:	f843 2b04 	str.w	r2, [r3], #4
 8011780:	e7d9      	b.n	8011736 <__multiply+0x4e>
 8011782:	f8b1 a000 	ldrh.w	sl, [r1]
 8011786:	f1ba 0f00 	cmp.w	sl, #0
 801178a:	d01f      	beq.n	80117cc <__multiply+0xe4>
 801178c:	46c4      	mov	ip, r8
 801178e:	46a1      	mov	r9, r4
 8011790:	2700      	movs	r7, #0
 8011792:	f85c 2b04 	ldr.w	r2, [ip], #4
 8011796:	f8d9 3000 	ldr.w	r3, [r9]
 801179a:	fa1f fb82 	uxth.w	fp, r2
 801179e:	b29b      	uxth	r3, r3
 80117a0:	fb0a 330b 	mla	r3, sl, fp, r3
 80117a4:	443b      	add	r3, r7
 80117a6:	f8d9 7000 	ldr.w	r7, [r9]
 80117aa:	0c12      	lsrs	r2, r2, #16
 80117ac:	0c3f      	lsrs	r7, r7, #16
 80117ae:	fb0a 7202 	mla	r2, sl, r2, r7
 80117b2:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80117b6:	b29b      	uxth	r3, r3
 80117b8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80117bc:	4565      	cmp	r5, ip
 80117be:	f849 3b04 	str.w	r3, [r9], #4
 80117c2:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80117c6:	d8e4      	bhi.n	8011792 <__multiply+0xaa>
 80117c8:	9b01      	ldr	r3, [sp, #4]
 80117ca:	50e7      	str	r7, [r4, r3]
 80117cc:	9b03      	ldr	r3, [sp, #12]
 80117ce:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80117d2:	3104      	adds	r1, #4
 80117d4:	f1b9 0f00 	cmp.w	r9, #0
 80117d8:	d020      	beq.n	801181c <__multiply+0x134>
 80117da:	6823      	ldr	r3, [r4, #0]
 80117dc:	4647      	mov	r7, r8
 80117de:	46a4      	mov	ip, r4
 80117e0:	f04f 0a00 	mov.w	sl, #0
 80117e4:	f8b7 b000 	ldrh.w	fp, [r7]
 80117e8:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80117ec:	fb09 220b 	mla	r2, r9, fp, r2
 80117f0:	4452      	add	r2, sl
 80117f2:	b29b      	uxth	r3, r3
 80117f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80117f8:	f84c 3b04 	str.w	r3, [ip], #4
 80117fc:	f857 3b04 	ldr.w	r3, [r7], #4
 8011800:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8011804:	f8bc 3000 	ldrh.w	r3, [ip]
 8011808:	fb09 330a 	mla	r3, r9, sl, r3
 801180c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8011810:	42bd      	cmp	r5, r7
 8011812:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8011816:	d8e5      	bhi.n	80117e4 <__multiply+0xfc>
 8011818:	9a01      	ldr	r2, [sp, #4]
 801181a:	50a3      	str	r3, [r4, r2]
 801181c:	3404      	adds	r4, #4
 801181e:	e79f      	b.n	8011760 <__multiply+0x78>
 8011820:	3e01      	subs	r6, #1
 8011822:	e7a1      	b.n	8011768 <__multiply+0x80>
 8011824:	0801859e 	.word	0x0801859e
 8011828:	080185af 	.word	0x080185af

0801182c <__pow5mult>:
 801182c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011830:	4615      	mov	r5, r2
 8011832:	f012 0203 	ands.w	r2, r2, #3
 8011836:	4607      	mov	r7, r0
 8011838:	460e      	mov	r6, r1
 801183a:	d007      	beq.n	801184c <__pow5mult+0x20>
 801183c:	4c25      	ldr	r4, [pc, #148]	@ (80118d4 <__pow5mult+0xa8>)
 801183e:	3a01      	subs	r2, #1
 8011840:	2300      	movs	r3, #0
 8011842:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011846:	f7ff fe5d 	bl	8011504 <__multadd>
 801184a:	4606      	mov	r6, r0
 801184c:	10ad      	asrs	r5, r5, #2
 801184e:	d03d      	beq.n	80118cc <__pow5mult+0xa0>
 8011850:	69fc      	ldr	r4, [r7, #28]
 8011852:	b97c      	cbnz	r4, 8011874 <__pow5mult+0x48>
 8011854:	2010      	movs	r0, #16
 8011856:	f7ff fd3d 	bl	80112d4 <malloc>
 801185a:	4602      	mov	r2, r0
 801185c:	61f8      	str	r0, [r7, #28]
 801185e:	b928      	cbnz	r0, 801186c <__pow5mult+0x40>
 8011860:	4b1d      	ldr	r3, [pc, #116]	@ (80118d8 <__pow5mult+0xac>)
 8011862:	481e      	ldr	r0, [pc, #120]	@ (80118dc <__pow5mult+0xb0>)
 8011864:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8011868:	f001 fae6 	bl	8012e38 <__assert_func>
 801186c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8011870:	6004      	str	r4, [r0, #0]
 8011872:	60c4      	str	r4, [r0, #12]
 8011874:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8011878:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801187c:	b94c      	cbnz	r4, 8011892 <__pow5mult+0x66>
 801187e:	f240 2171 	movw	r1, #625	@ 0x271
 8011882:	4638      	mov	r0, r7
 8011884:	f7ff ff1a 	bl	80116bc <__i2b>
 8011888:	2300      	movs	r3, #0
 801188a:	f8c8 0008 	str.w	r0, [r8, #8]
 801188e:	4604      	mov	r4, r0
 8011890:	6003      	str	r3, [r0, #0]
 8011892:	f04f 0900 	mov.w	r9, #0
 8011896:	07eb      	lsls	r3, r5, #31
 8011898:	d50a      	bpl.n	80118b0 <__pow5mult+0x84>
 801189a:	4631      	mov	r1, r6
 801189c:	4622      	mov	r2, r4
 801189e:	4638      	mov	r0, r7
 80118a0:	f7ff ff22 	bl	80116e8 <__multiply>
 80118a4:	4631      	mov	r1, r6
 80118a6:	4680      	mov	r8, r0
 80118a8:	4638      	mov	r0, r7
 80118aa:	f7ff fe09 	bl	80114c0 <_Bfree>
 80118ae:	4646      	mov	r6, r8
 80118b0:	106d      	asrs	r5, r5, #1
 80118b2:	d00b      	beq.n	80118cc <__pow5mult+0xa0>
 80118b4:	6820      	ldr	r0, [r4, #0]
 80118b6:	b938      	cbnz	r0, 80118c8 <__pow5mult+0x9c>
 80118b8:	4622      	mov	r2, r4
 80118ba:	4621      	mov	r1, r4
 80118bc:	4638      	mov	r0, r7
 80118be:	f7ff ff13 	bl	80116e8 <__multiply>
 80118c2:	6020      	str	r0, [r4, #0]
 80118c4:	f8c0 9000 	str.w	r9, [r0]
 80118c8:	4604      	mov	r4, r0
 80118ca:	e7e4      	b.n	8011896 <__pow5mult+0x6a>
 80118cc:	4630      	mov	r0, r6
 80118ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80118d2:	bf00      	nop
 80118d4:	080186c0 	.word	0x080186c0
 80118d8:	0801852f 	.word	0x0801852f
 80118dc:	080185af 	.word	0x080185af

080118e0 <__lshift>:
 80118e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80118e4:	460c      	mov	r4, r1
 80118e6:	6849      	ldr	r1, [r1, #4]
 80118e8:	6923      	ldr	r3, [r4, #16]
 80118ea:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80118ee:	68a3      	ldr	r3, [r4, #8]
 80118f0:	4607      	mov	r7, r0
 80118f2:	4691      	mov	r9, r2
 80118f4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80118f8:	f108 0601 	add.w	r6, r8, #1
 80118fc:	42b3      	cmp	r3, r6
 80118fe:	db0b      	blt.n	8011918 <__lshift+0x38>
 8011900:	4638      	mov	r0, r7
 8011902:	f7ff fd9d 	bl	8011440 <_Balloc>
 8011906:	4605      	mov	r5, r0
 8011908:	b948      	cbnz	r0, 801191e <__lshift+0x3e>
 801190a:	4602      	mov	r2, r0
 801190c:	4b28      	ldr	r3, [pc, #160]	@ (80119b0 <__lshift+0xd0>)
 801190e:	4829      	ldr	r0, [pc, #164]	@ (80119b4 <__lshift+0xd4>)
 8011910:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8011914:	f001 fa90 	bl	8012e38 <__assert_func>
 8011918:	3101      	adds	r1, #1
 801191a:	005b      	lsls	r3, r3, #1
 801191c:	e7ee      	b.n	80118fc <__lshift+0x1c>
 801191e:	2300      	movs	r3, #0
 8011920:	f100 0114 	add.w	r1, r0, #20
 8011924:	f100 0210 	add.w	r2, r0, #16
 8011928:	4618      	mov	r0, r3
 801192a:	4553      	cmp	r3, sl
 801192c:	db33      	blt.n	8011996 <__lshift+0xb6>
 801192e:	6920      	ldr	r0, [r4, #16]
 8011930:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8011934:	f104 0314 	add.w	r3, r4, #20
 8011938:	f019 091f 	ands.w	r9, r9, #31
 801193c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8011940:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8011944:	d02b      	beq.n	801199e <__lshift+0xbe>
 8011946:	f1c9 0e20 	rsb	lr, r9, #32
 801194a:	468a      	mov	sl, r1
 801194c:	2200      	movs	r2, #0
 801194e:	6818      	ldr	r0, [r3, #0]
 8011950:	fa00 f009 	lsl.w	r0, r0, r9
 8011954:	4310      	orrs	r0, r2
 8011956:	f84a 0b04 	str.w	r0, [sl], #4
 801195a:	f853 2b04 	ldr.w	r2, [r3], #4
 801195e:	459c      	cmp	ip, r3
 8011960:	fa22 f20e 	lsr.w	r2, r2, lr
 8011964:	d8f3      	bhi.n	801194e <__lshift+0x6e>
 8011966:	ebac 0304 	sub.w	r3, ip, r4
 801196a:	3b15      	subs	r3, #21
 801196c:	f023 0303 	bic.w	r3, r3, #3
 8011970:	3304      	adds	r3, #4
 8011972:	f104 0015 	add.w	r0, r4, #21
 8011976:	4560      	cmp	r0, ip
 8011978:	bf88      	it	hi
 801197a:	2304      	movhi	r3, #4
 801197c:	50ca      	str	r2, [r1, r3]
 801197e:	b10a      	cbz	r2, 8011984 <__lshift+0xa4>
 8011980:	f108 0602 	add.w	r6, r8, #2
 8011984:	3e01      	subs	r6, #1
 8011986:	4638      	mov	r0, r7
 8011988:	612e      	str	r6, [r5, #16]
 801198a:	4621      	mov	r1, r4
 801198c:	f7ff fd98 	bl	80114c0 <_Bfree>
 8011990:	4628      	mov	r0, r5
 8011992:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011996:	f842 0f04 	str.w	r0, [r2, #4]!
 801199a:	3301      	adds	r3, #1
 801199c:	e7c5      	b.n	801192a <__lshift+0x4a>
 801199e:	3904      	subs	r1, #4
 80119a0:	f853 2b04 	ldr.w	r2, [r3], #4
 80119a4:	f841 2f04 	str.w	r2, [r1, #4]!
 80119a8:	459c      	cmp	ip, r3
 80119aa:	d8f9      	bhi.n	80119a0 <__lshift+0xc0>
 80119ac:	e7ea      	b.n	8011984 <__lshift+0xa4>
 80119ae:	bf00      	nop
 80119b0:	0801859e 	.word	0x0801859e
 80119b4:	080185af 	.word	0x080185af

080119b8 <__mcmp>:
 80119b8:	690a      	ldr	r2, [r1, #16]
 80119ba:	4603      	mov	r3, r0
 80119bc:	6900      	ldr	r0, [r0, #16]
 80119be:	1a80      	subs	r0, r0, r2
 80119c0:	b530      	push	{r4, r5, lr}
 80119c2:	d10e      	bne.n	80119e2 <__mcmp+0x2a>
 80119c4:	3314      	adds	r3, #20
 80119c6:	3114      	adds	r1, #20
 80119c8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80119cc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80119d0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80119d4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80119d8:	4295      	cmp	r5, r2
 80119da:	d003      	beq.n	80119e4 <__mcmp+0x2c>
 80119dc:	d205      	bcs.n	80119ea <__mcmp+0x32>
 80119de:	f04f 30ff 	mov.w	r0, #4294967295
 80119e2:	bd30      	pop	{r4, r5, pc}
 80119e4:	42a3      	cmp	r3, r4
 80119e6:	d3f3      	bcc.n	80119d0 <__mcmp+0x18>
 80119e8:	e7fb      	b.n	80119e2 <__mcmp+0x2a>
 80119ea:	2001      	movs	r0, #1
 80119ec:	e7f9      	b.n	80119e2 <__mcmp+0x2a>
	...

080119f0 <__mdiff>:
 80119f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119f4:	4689      	mov	r9, r1
 80119f6:	4606      	mov	r6, r0
 80119f8:	4611      	mov	r1, r2
 80119fa:	4648      	mov	r0, r9
 80119fc:	4614      	mov	r4, r2
 80119fe:	f7ff ffdb 	bl	80119b8 <__mcmp>
 8011a02:	1e05      	subs	r5, r0, #0
 8011a04:	d112      	bne.n	8011a2c <__mdiff+0x3c>
 8011a06:	4629      	mov	r1, r5
 8011a08:	4630      	mov	r0, r6
 8011a0a:	f7ff fd19 	bl	8011440 <_Balloc>
 8011a0e:	4602      	mov	r2, r0
 8011a10:	b928      	cbnz	r0, 8011a1e <__mdiff+0x2e>
 8011a12:	4b3f      	ldr	r3, [pc, #252]	@ (8011b10 <__mdiff+0x120>)
 8011a14:	f240 2137 	movw	r1, #567	@ 0x237
 8011a18:	483e      	ldr	r0, [pc, #248]	@ (8011b14 <__mdiff+0x124>)
 8011a1a:	f001 fa0d 	bl	8012e38 <__assert_func>
 8011a1e:	2301      	movs	r3, #1
 8011a20:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8011a24:	4610      	mov	r0, r2
 8011a26:	b003      	add	sp, #12
 8011a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a2c:	bfbc      	itt	lt
 8011a2e:	464b      	movlt	r3, r9
 8011a30:	46a1      	movlt	r9, r4
 8011a32:	4630      	mov	r0, r6
 8011a34:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8011a38:	bfba      	itte	lt
 8011a3a:	461c      	movlt	r4, r3
 8011a3c:	2501      	movlt	r5, #1
 8011a3e:	2500      	movge	r5, #0
 8011a40:	f7ff fcfe 	bl	8011440 <_Balloc>
 8011a44:	4602      	mov	r2, r0
 8011a46:	b918      	cbnz	r0, 8011a50 <__mdiff+0x60>
 8011a48:	4b31      	ldr	r3, [pc, #196]	@ (8011b10 <__mdiff+0x120>)
 8011a4a:	f240 2145 	movw	r1, #581	@ 0x245
 8011a4e:	e7e3      	b.n	8011a18 <__mdiff+0x28>
 8011a50:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8011a54:	6926      	ldr	r6, [r4, #16]
 8011a56:	60c5      	str	r5, [r0, #12]
 8011a58:	f109 0310 	add.w	r3, r9, #16
 8011a5c:	f109 0514 	add.w	r5, r9, #20
 8011a60:	f104 0e14 	add.w	lr, r4, #20
 8011a64:	f100 0b14 	add.w	fp, r0, #20
 8011a68:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8011a6c:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8011a70:	9301      	str	r3, [sp, #4]
 8011a72:	46d9      	mov	r9, fp
 8011a74:	f04f 0c00 	mov.w	ip, #0
 8011a78:	9b01      	ldr	r3, [sp, #4]
 8011a7a:	f85e 0b04 	ldr.w	r0, [lr], #4
 8011a7e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8011a82:	9301      	str	r3, [sp, #4]
 8011a84:	fa1f f38a 	uxth.w	r3, sl
 8011a88:	4619      	mov	r1, r3
 8011a8a:	b283      	uxth	r3, r0
 8011a8c:	1acb      	subs	r3, r1, r3
 8011a8e:	0c00      	lsrs	r0, r0, #16
 8011a90:	4463      	add	r3, ip
 8011a92:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8011a96:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8011a9a:	b29b      	uxth	r3, r3
 8011a9c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8011aa0:	4576      	cmp	r6, lr
 8011aa2:	f849 3b04 	str.w	r3, [r9], #4
 8011aa6:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011aaa:	d8e5      	bhi.n	8011a78 <__mdiff+0x88>
 8011aac:	1b33      	subs	r3, r6, r4
 8011aae:	3b15      	subs	r3, #21
 8011ab0:	f023 0303 	bic.w	r3, r3, #3
 8011ab4:	3415      	adds	r4, #21
 8011ab6:	3304      	adds	r3, #4
 8011ab8:	42a6      	cmp	r6, r4
 8011aba:	bf38      	it	cc
 8011abc:	2304      	movcc	r3, #4
 8011abe:	441d      	add	r5, r3
 8011ac0:	445b      	add	r3, fp
 8011ac2:	461e      	mov	r6, r3
 8011ac4:	462c      	mov	r4, r5
 8011ac6:	4544      	cmp	r4, r8
 8011ac8:	d30e      	bcc.n	8011ae8 <__mdiff+0xf8>
 8011aca:	f108 0103 	add.w	r1, r8, #3
 8011ace:	1b49      	subs	r1, r1, r5
 8011ad0:	f021 0103 	bic.w	r1, r1, #3
 8011ad4:	3d03      	subs	r5, #3
 8011ad6:	45a8      	cmp	r8, r5
 8011ad8:	bf38      	it	cc
 8011ada:	2100      	movcc	r1, #0
 8011adc:	440b      	add	r3, r1
 8011ade:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011ae2:	b191      	cbz	r1, 8011b0a <__mdiff+0x11a>
 8011ae4:	6117      	str	r7, [r2, #16]
 8011ae6:	e79d      	b.n	8011a24 <__mdiff+0x34>
 8011ae8:	f854 1b04 	ldr.w	r1, [r4], #4
 8011aec:	46e6      	mov	lr, ip
 8011aee:	0c08      	lsrs	r0, r1, #16
 8011af0:	fa1c fc81 	uxtah	ip, ip, r1
 8011af4:	4471      	add	r1, lr
 8011af6:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8011afa:	b289      	uxth	r1, r1
 8011afc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8011b00:	f846 1b04 	str.w	r1, [r6], #4
 8011b04:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011b08:	e7dd      	b.n	8011ac6 <__mdiff+0xd6>
 8011b0a:	3f01      	subs	r7, #1
 8011b0c:	e7e7      	b.n	8011ade <__mdiff+0xee>
 8011b0e:	bf00      	nop
 8011b10:	0801859e 	.word	0x0801859e
 8011b14:	080185af 	.word	0x080185af

08011b18 <__ulp>:
 8011b18:	b082      	sub	sp, #8
 8011b1a:	ed8d 0b00 	vstr	d0, [sp]
 8011b1e:	9a01      	ldr	r2, [sp, #4]
 8011b20:	4b0f      	ldr	r3, [pc, #60]	@ (8011b60 <__ulp+0x48>)
 8011b22:	4013      	ands	r3, r2
 8011b24:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8011b28:	2b00      	cmp	r3, #0
 8011b2a:	dc08      	bgt.n	8011b3e <__ulp+0x26>
 8011b2c:	425b      	negs	r3, r3
 8011b2e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8011b32:	ea4f 5223 	mov.w	r2, r3, asr #20
 8011b36:	da04      	bge.n	8011b42 <__ulp+0x2a>
 8011b38:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8011b3c:	4113      	asrs	r3, r2
 8011b3e:	2200      	movs	r2, #0
 8011b40:	e008      	b.n	8011b54 <__ulp+0x3c>
 8011b42:	f1a2 0314 	sub.w	r3, r2, #20
 8011b46:	2b1e      	cmp	r3, #30
 8011b48:	bfda      	itte	le
 8011b4a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8011b4e:	40da      	lsrle	r2, r3
 8011b50:	2201      	movgt	r2, #1
 8011b52:	2300      	movs	r3, #0
 8011b54:	4619      	mov	r1, r3
 8011b56:	4610      	mov	r0, r2
 8011b58:	ec41 0b10 	vmov	d0, r0, r1
 8011b5c:	b002      	add	sp, #8
 8011b5e:	4770      	bx	lr
 8011b60:	7ff00000 	.word	0x7ff00000

08011b64 <__b2d>:
 8011b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b68:	6906      	ldr	r6, [r0, #16]
 8011b6a:	f100 0814 	add.w	r8, r0, #20
 8011b6e:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8011b72:	1f37      	subs	r7, r6, #4
 8011b74:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8011b78:	4610      	mov	r0, r2
 8011b7a:	f7ff fd53 	bl	8011624 <__hi0bits>
 8011b7e:	f1c0 0320 	rsb	r3, r0, #32
 8011b82:	280a      	cmp	r0, #10
 8011b84:	600b      	str	r3, [r1, #0]
 8011b86:	491b      	ldr	r1, [pc, #108]	@ (8011bf4 <__b2d+0x90>)
 8011b88:	dc15      	bgt.n	8011bb6 <__b2d+0x52>
 8011b8a:	f1c0 0c0b 	rsb	ip, r0, #11
 8011b8e:	fa22 f30c 	lsr.w	r3, r2, ip
 8011b92:	45b8      	cmp	r8, r7
 8011b94:	ea43 0501 	orr.w	r5, r3, r1
 8011b98:	bf34      	ite	cc
 8011b9a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8011b9e:	2300      	movcs	r3, #0
 8011ba0:	3015      	adds	r0, #21
 8011ba2:	fa02 f000 	lsl.w	r0, r2, r0
 8011ba6:	fa23 f30c 	lsr.w	r3, r3, ip
 8011baa:	4303      	orrs	r3, r0
 8011bac:	461c      	mov	r4, r3
 8011bae:	ec45 4b10 	vmov	d0, r4, r5
 8011bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bb6:	45b8      	cmp	r8, r7
 8011bb8:	bf3a      	itte	cc
 8011bba:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8011bbe:	f1a6 0708 	subcc.w	r7, r6, #8
 8011bc2:	2300      	movcs	r3, #0
 8011bc4:	380b      	subs	r0, #11
 8011bc6:	d012      	beq.n	8011bee <__b2d+0x8a>
 8011bc8:	f1c0 0120 	rsb	r1, r0, #32
 8011bcc:	fa23 f401 	lsr.w	r4, r3, r1
 8011bd0:	4082      	lsls	r2, r0
 8011bd2:	4322      	orrs	r2, r4
 8011bd4:	4547      	cmp	r7, r8
 8011bd6:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8011bda:	bf8c      	ite	hi
 8011bdc:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8011be0:	2200      	movls	r2, #0
 8011be2:	4083      	lsls	r3, r0
 8011be4:	40ca      	lsrs	r2, r1
 8011be6:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8011bea:	4313      	orrs	r3, r2
 8011bec:	e7de      	b.n	8011bac <__b2d+0x48>
 8011bee:	ea42 0501 	orr.w	r5, r2, r1
 8011bf2:	e7db      	b.n	8011bac <__b2d+0x48>
 8011bf4:	3ff00000 	.word	0x3ff00000

08011bf8 <__d2b>:
 8011bf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011bfc:	460f      	mov	r7, r1
 8011bfe:	2101      	movs	r1, #1
 8011c00:	ec59 8b10 	vmov	r8, r9, d0
 8011c04:	4616      	mov	r6, r2
 8011c06:	f7ff fc1b 	bl	8011440 <_Balloc>
 8011c0a:	4604      	mov	r4, r0
 8011c0c:	b930      	cbnz	r0, 8011c1c <__d2b+0x24>
 8011c0e:	4602      	mov	r2, r0
 8011c10:	4b23      	ldr	r3, [pc, #140]	@ (8011ca0 <__d2b+0xa8>)
 8011c12:	4824      	ldr	r0, [pc, #144]	@ (8011ca4 <__d2b+0xac>)
 8011c14:	f240 310f 	movw	r1, #783	@ 0x30f
 8011c18:	f001 f90e 	bl	8012e38 <__assert_func>
 8011c1c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8011c20:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011c24:	b10d      	cbz	r5, 8011c2a <__d2b+0x32>
 8011c26:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8011c2a:	9301      	str	r3, [sp, #4]
 8011c2c:	f1b8 0300 	subs.w	r3, r8, #0
 8011c30:	d023      	beq.n	8011c7a <__d2b+0x82>
 8011c32:	4668      	mov	r0, sp
 8011c34:	9300      	str	r3, [sp, #0]
 8011c36:	f7ff fd14 	bl	8011662 <__lo0bits>
 8011c3a:	e9dd 1200 	ldrd	r1, r2, [sp]
 8011c3e:	b1d0      	cbz	r0, 8011c76 <__d2b+0x7e>
 8011c40:	f1c0 0320 	rsb	r3, r0, #32
 8011c44:	fa02 f303 	lsl.w	r3, r2, r3
 8011c48:	430b      	orrs	r3, r1
 8011c4a:	40c2      	lsrs	r2, r0
 8011c4c:	6163      	str	r3, [r4, #20]
 8011c4e:	9201      	str	r2, [sp, #4]
 8011c50:	9b01      	ldr	r3, [sp, #4]
 8011c52:	61a3      	str	r3, [r4, #24]
 8011c54:	2b00      	cmp	r3, #0
 8011c56:	bf0c      	ite	eq
 8011c58:	2201      	moveq	r2, #1
 8011c5a:	2202      	movne	r2, #2
 8011c5c:	6122      	str	r2, [r4, #16]
 8011c5e:	b1a5      	cbz	r5, 8011c8a <__d2b+0x92>
 8011c60:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8011c64:	4405      	add	r5, r0
 8011c66:	603d      	str	r5, [r7, #0]
 8011c68:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8011c6c:	6030      	str	r0, [r6, #0]
 8011c6e:	4620      	mov	r0, r4
 8011c70:	b003      	add	sp, #12
 8011c72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c76:	6161      	str	r1, [r4, #20]
 8011c78:	e7ea      	b.n	8011c50 <__d2b+0x58>
 8011c7a:	a801      	add	r0, sp, #4
 8011c7c:	f7ff fcf1 	bl	8011662 <__lo0bits>
 8011c80:	9b01      	ldr	r3, [sp, #4]
 8011c82:	6163      	str	r3, [r4, #20]
 8011c84:	3020      	adds	r0, #32
 8011c86:	2201      	movs	r2, #1
 8011c88:	e7e8      	b.n	8011c5c <__d2b+0x64>
 8011c8a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011c8e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8011c92:	6038      	str	r0, [r7, #0]
 8011c94:	6918      	ldr	r0, [r3, #16]
 8011c96:	f7ff fcc5 	bl	8011624 <__hi0bits>
 8011c9a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011c9e:	e7e5      	b.n	8011c6c <__d2b+0x74>
 8011ca0:	0801859e 	.word	0x0801859e
 8011ca4:	080185af 	.word	0x080185af

08011ca8 <__ratio>:
 8011ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cac:	b085      	sub	sp, #20
 8011cae:	e9cd 1000 	strd	r1, r0, [sp]
 8011cb2:	a902      	add	r1, sp, #8
 8011cb4:	f7ff ff56 	bl	8011b64 <__b2d>
 8011cb8:	9800      	ldr	r0, [sp, #0]
 8011cba:	a903      	add	r1, sp, #12
 8011cbc:	ec55 4b10 	vmov	r4, r5, d0
 8011cc0:	f7ff ff50 	bl	8011b64 <__b2d>
 8011cc4:	9b01      	ldr	r3, [sp, #4]
 8011cc6:	6919      	ldr	r1, [r3, #16]
 8011cc8:	9b00      	ldr	r3, [sp, #0]
 8011cca:	691b      	ldr	r3, [r3, #16]
 8011ccc:	1ac9      	subs	r1, r1, r3
 8011cce:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8011cd2:	1a9b      	subs	r3, r3, r2
 8011cd4:	ec5b ab10 	vmov	sl, fp, d0
 8011cd8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8011cdc:	2b00      	cmp	r3, #0
 8011cde:	bfce      	itee	gt
 8011ce0:	462a      	movgt	r2, r5
 8011ce2:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8011ce6:	465a      	movle	r2, fp
 8011ce8:	462f      	mov	r7, r5
 8011cea:	46d9      	mov	r9, fp
 8011cec:	bfcc      	ite	gt
 8011cee:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8011cf2:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8011cf6:	464b      	mov	r3, r9
 8011cf8:	4652      	mov	r2, sl
 8011cfa:	4620      	mov	r0, r4
 8011cfc:	4639      	mov	r1, r7
 8011cfe:	f7ee fd7d 	bl	80007fc <__aeabi_ddiv>
 8011d02:	ec41 0b10 	vmov	d0, r0, r1
 8011d06:	b005      	add	sp, #20
 8011d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011d0c <__copybits>:
 8011d0c:	3901      	subs	r1, #1
 8011d0e:	b570      	push	{r4, r5, r6, lr}
 8011d10:	1149      	asrs	r1, r1, #5
 8011d12:	6914      	ldr	r4, [r2, #16]
 8011d14:	3101      	adds	r1, #1
 8011d16:	f102 0314 	add.w	r3, r2, #20
 8011d1a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011d1e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8011d22:	1f05      	subs	r5, r0, #4
 8011d24:	42a3      	cmp	r3, r4
 8011d26:	d30c      	bcc.n	8011d42 <__copybits+0x36>
 8011d28:	1aa3      	subs	r3, r4, r2
 8011d2a:	3b11      	subs	r3, #17
 8011d2c:	f023 0303 	bic.w	r3, r3, #3
 8011d30:	3211      	adds	r2, #17
 8011d32:	42a2      	cmp	r2, r4
 8011d34:	bf88      	it	hi
 8011d36:	2300      	movhi	r3, #0
 8011d38:	4418      	add	r0, r3
 8011d3a:	2300      	movs	r3, #0
 8011d3c:	4288      	cmp	r0, r1
 8011d3e:	d305      	bcc.n	8011d4c <__copybits+0x40>
 8011d40:	bd70      	pop	{r4, r5, r6, pc}
 8011d42:	f853 6b04 	ldr.w	r6, [r3], #4
 8011d46:	f845 6f04 	str.w	r6, [r5, #4]!
 8011d4a:	e7eb      	b.n	8011d24 <__copybits+0x18>
 8011d4c:	f840 3b04 	str.w	r3, [r0], #4
 8011d50:	e7f4      	b.n	8011d3c <__copybits+0x30>

08011d52 <__any_on>:
 8011d52:	f100 0214 	add.w	r2, r0, #20
 8011d56:	6900      	ldr	r0, [r0, #16]
 8011d58:	114b      	asrs	r3, r1, #5
 8011d5a:	4298      	cmp	r0, r3
 8011d5c:	b510      	push	{r4, lr}
 8011d5e:	db11      	blt.n	8011d84 <__any_on+0x32>
 8011d60:	dd0a      	ble.n	8011d78 <__any_on+0x26>
 8011d62:	f011 011f 	ands.w	r1, r1, #31
 8011d66:	d007      	beq.n	8011d78 <__any_on+0x26>
 8011d68:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8011d6c:	fa24 f001 	lsr.w	r0, r4, r1
 8011d70:	fa00 f101 	lsl.w	r1, r0, r1
 8011d74:	428c      	cmp	r4, r1
 8011d76:	d10b      	bne.n	8011d90 <__any_on+0x3e>
 8011d78:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011d7c:	4293      	cmp	r3, r2
 8011d7e:	d803      	bhi.n	8011d88 <__any_on+0x36>
 8011d80:	2000      	movs	r0, #0
 8011d82:	bd10      	pop	{r4, pc}
 8011d84:	4603      	mov	r3, r0
 8011d86:	e7f7      	b.n	8011d78 <__any_on+0x26>
 8011d88:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011d8c:	2900      	cmp	r1, #0
 8011d8e:	d0f5      	beq.n	8011d7c <__any_on+0x2a>
 8011d90:	2001      	movs	r0, #1
 8011d92:	e7f6      	b.n	8011d82 <__any_on+0x30>

08011d94 <sulp>:
 8011d94:	b570      	push	{r4, r5, r6, lr}
 8011d96:	4604      	mov	r4, r0
 8011d98:	460d      	mov	r5, r1
 8011d9a:	ec45 4b10 	vmov	d0, r4, r5
 8011d9e:	4616      	mov	r6, r2
 8011da0:	f7ff feba 	bl	8011b18 <__ulp>
 8011da4:	ec51 0b10 	vmov	r0, r1, d0
 8011da8:	b17e      	cbz	r6, 8011dca <sulp+0x36>
 8011daa:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8011dae:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8011db2:	2b00      	cmp	r3, #0
 8011db4:	dd09      	ble.n	8011dca <sulp+0x36>
 8011db6:	051b      	lsls	r3, r3, #20
 8011db8:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8011dbc:	2400      	movs	r4, #0
 8011dbe:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8011dc2:	4622      	mov	r2, r4
 8011dc4:	462b      	mov	r3, r5
 8011dc6:	f7ee fbef 	bl	80005a8 <__aeabi_dmul>
 8011dca:	ec41 0b10 	vmov	d0, r0, r1
 8011dce:	bd70      	pop	{r4, r5, r6, pc}

08011dd0 <_strtod_l>:
 8011dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dd4:	b09f      	sub	sp, #124	@ 0x7c
 8011dd6:	460c      	mov	r4, r1
 8011dd8:	9217      	str	r2, [sp, #92]	@ 0x5c
 8011dda:	2200      	movs	r2, #0
 8011ddc:	921a      	str	r2, [sp, #104]	@ 0x68
 8011dde:	9005      	str	r0, [sp, #20]
 8011de0:	f04f 0a00 	mov.w	sl, #0
 8011de4:	f04f 0b00 	mov.w	fp, #0
 8011de8:	460a      	mov	r2, r1
 8011dea:	9219      	str	r2, [sp, #100]	@ 0x64
 8011dec:	7811      	ldrb	r1, [r2, #0]
 8011dee:	292b      	cmp	r1, #43	@ 0x2b
 8011df0:	d04a      	beq.n	8011e88 <_strtod_l+0xb8>
 8011df2:	d838      	bhi.n	8011e66 <_strtod_l+0x96>
 8011df4:	290d      	cmp	r1, #13
 8011df6:	d832      	bhi.n	8011e5e <_strtod_l+0x8e>
 8011df8:	2908      	cmp	r1, #8
 8011dfa:	d832      	bhi.n	8011e62 <_strtod_l+0x92>
 8011dfc:	2900      	cmp	r1, #0
 8011dfe:	d03b      	beq.n	8011e78 <_strtod_l+0xa8>
 8011e00:	2200      	movs	r2, #0
 8011e02:	920e      	str	r2, [sp, #56]	@ 0x38
 8011e04:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8011e06:	782a      	ldrb	r2, [r5, #0]
 8011e08:	2a30      	cmp	r2, #48	@ 0x30
 8011e0a:	f040 80b2 	bne.w	8011f72 <_strtod_l+0x1a2>
 8011e0e:	786a      	ldrb	r2, [r5, #1]
 8011e10:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8011e14:	2a58      	cmp	r2, #88	@ 0x58
 8011e16:	d16e      	bne.n	8011ef6 <_strtod_l+0x126>
 8011e18:	9302      	str	r3, [sp, #8]
 8011e1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e1c:	9301      	str	r3, [sp, #4]
 8011e1e:	ab1a      	add	r3, sp, #104	@ 0x68
 8011e20:	9300      	str	r3, [sp, #0]
 8011e22:	4a8f      	ldr	r2, [pc, #572]	@ (8012060 <_strtod_l+0x290>)
 8011e24:	9805      	ldr	r0, [sp, #20]
 8011e26:	ab1b      	add	r3, sp, #108	@ 0x6c
 8011e28:	a919      	add	r1, sp, #100	@ 0x64
 8011e2a:	f001 f89f 	bl	8012f6c <__gethex>
 8011e2e:	f010 060f 	ands.w	r6, r0, #15
 8011e32:	4604      	mov	r4, r0
 8011e34:	d005      	beq.n	8011e42 <_strtod_l+0x72>
 8011e36:	2e06      	cmp	r6, #6
 8011e38:	d128      	bne.n	8011e8c <_strtod_l+0xbc>
 8011e3a:	3501      	adds	r5, #1
 8011e3c:	2300      	movs	r3, #0
 8011e3e:	9519      	str	r5, [sp, #100]	@ 0x64
 8011e40:	930e      	str	r3, [sp, #56]	@ 0x38
 8011e42:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8011e44:	2b00      	cmp	r3, #0
 8011e46:	f040 858e 	bne.w	8012966 <_strtod_l+0xb96>
 8011e4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e4c:	b1cb      	cbz	r3, 8011e82 <_strtod_l+0xb2>
 8011e4e:	4652      	mov	r2, sl
 8011e50:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8011e54:	ec43 2b10 	vmov	d0, r2, r3
 8011e58:	b01f      	add	sp, #124	@ 0x7c
 8011e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e5e:	2920      	cmp	r1, #32
 8011e60:	d1ce      	bne.n	8011e00 <_strtod_l+0x30>
 8011e62:	3201      	adds	r2, #1
 8011e64:	e7c1      	b.n	8011dea <_strtod_l+0x1a>
 8011e66:	292d      	cmp	r1, #45	@ 0x2d
 8011e68:	d1ca      	bne.n	8011e00 <_strtod_l+0x30>
 8011e6a:	2101      	movs	r1, #1
 8011e6c:	910e      	str	r1, [sp, #56]	@ 0x38
 8011e6e:	1c51      	adds	r1, r2, #1
 8011e70:	9119      	str	r1, [sp, #100]	@ 0x64
 8011e72:	7852      	ldrb	r2, [r2, #1]
 8011e74:	2a00      	cmp	r2, #0
 8011e76:	d1c5      	bne.n	8011e04 <_strtod_l+0x34>
 8011e78:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8011e7a:	9419      	str	r4, [sp, #100]	@ 0x64
 8011e7c:	2b00      	cmp	r3, #0
 8011e7e:	f040 8570 	bne.w	8012962 <_strtod_l+0xb92>
 8011e82:	4652      	mov	r2, sl
 8011e84:	465b      	mov	r3, fp
 8011e86:	e7e5      	b.n	8011e54 <_strtod_l+0x84>
 8011e88:	2100      	movs	r1, #0
 8011e8a:	e7ef      	b.n	8011e6c <_strtod_l+0x9c>
 8011e8c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8011e8e:	b13a      	cbz	r2, 8011ea0 <_strtod_l+0xd0>
 8011e90:	2135      	movs	r1, #53	@ 0x35
 8011e92:	a81c      	add	r0, sp, #112	@ 0x70
 8011e94:	f7ff ff3a 	bl	8011d0c <__copybits>
 8011e98:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8011e9a:	9805      	ldr	r0, [sp, #20]
 8011e9c:	f7ff fb10 	bl	80114c0 <_Bfree>
 8011ea0:	3e01      	subs	r6, #1
 8011ea2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011ea4:	2e04      	cmp	r6, #4
 8011ea6:	d806      	bhi.n	8011eb6 <_strtod_l+0xe6>
 8011ea8:	e8df f006 	tbb	[pc, r6]
 8011eac:	201d0314 	.word	0x201d0314
 8011eb0:	14          	.byte	0x14
 8011eb1:	00          	.byte	0x00
 8011eb2:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8011eb6:	05e1      	lsls	r1, r4, #23
 8011eb8:	bf48      	it	mi
 8011eba:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8011ebe:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8011ec2:	0d1b      	lsrs	r3, r3, #20
 8011ec4:	051b      	lsls	r3, r3, #20
 8011ec6:	2b00      	cmp	r3, #0
 8011ec8:	d1bb      	bne.n	8011e42 <_strtod_l+0x72>
 8011eca:	f7fe fb1f 	bl	801050c <__errno>
 8011ece:	2322      	movs	r3, #34	@ 0x22
 8011ed0:	6003      	str	r3, [r0, #0]
 8011ed2:	e7b6      	b.n	8011e42 <_strtod_l+0x72>
 8011ed4:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8011ed8:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8011edc:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8011ee0:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8011ee4:	e7e7      	b.n	8011eb6 <_strtod_l+0xe6>
 8011ee6:	f8df b180 	ldr.w	fp, [pc, #384]	@ 8012068 <_strtod_l+0x298>
 8011eea:	e7e4      	b.n	8011eb6 <_strtod_l+0xe6>
 8011eec:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8011ef0:	f04f 3aff 	mov.w	sl, #4294967295
 8011ef4:	e7df      	b.n	8011eb6 <_strtod_l+0xe6>
 8011ef6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011ef8:	1c5a      	adds	r2, r3, #1
 8011efa:	9219      	str	r2, [sp, #100]	@ 0x64
 8011efc:	785b      	ldrb	r3, [r3, #1]
 8011efe:	2b30      	cmp	r3, #48	@ 0x30
 8011f00:	d0f9      	beq.n	8011ef6 <_strtod_l+0x126>
 8011f02:	2b00      	cmp	r3, #0
 8011f04:	d09d      	beq.n	8011e42 <_strtod_l+0x72>
 8011f06:	2301      	movs	r3, #1
 8011f08:	2700      	movs	r7, #0
 8011f0a:	9308      	str	r3, [sp, #32]
 8011f0c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011f0e:	930c      	str	r3, [sp, #48]	@ 0x30
 8011f10:	970b      	str	r7, [sp, #44]	@ 0x2c
 8011f12:	46b9      	mov	r9, r7
 8011f14:	220a      	movs	r2, #10
 8011f16:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8011f18:	7805      	ldrb	r5, [r0, #0]
 8011f1a:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8011f1e:	b2d9      	uxtb	r1, r3
 8011f20:	2909      	cmp	r1, #9
 8011f22:	d928      	bls.n	8011f76 <_strtod_l+0x1a6>
 8011f24:	494f      	ldr	r1, [pc, #316]	@ (8012064 <_strtod_l+0x294>)
 8011f26:	2201      	movs	r2, #1
 8011f28:	f000 ff5a 	bl	8012de0 <strncmp>
 8011f2c:	2800      	cmp	r0, #0
 8011f2e:	d032      	beq.n	8011f96 <_strtod_l+0x1c6>
 8011f30:	2000      	movs	r0, #0
 8011f32:	462a      	mov	r2, r5
 8011f34:	900a      	str	r0, [sp, #40]	@ 0x28
 8011f36:	464d      	mov	r5, r9
 8011f38:	4603      	mov	r3, r0
 8011f3a:	2a65      	cmp	r2, #101	@ 0x65
 8011f3c:	d001      	beq.n	8011f42 <_strtod_l+0x172>
 8011f3e:	2a45      	cmp	r2, #69	@ 0x45
 8011f40:	d114      	bne.n	8011f6c <_strtod_l+0x19c>
 8011f42:	b91d      	cbnz	r5, 8011f4c <_strtod_l+0x17c>
 8011f44:	9a08      	ldr	r2, [sp, #32]
 8011f46:	4302      	orrs	r2, r0
 8011f48:	d096      	beq.n	8011e78 <_strtod_l+0xa8>
 8011f4a:	2500      	movs	r5, #0
 8011f4c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8011f4e:	1c62      	adds	r2, r4, #1
 8011f50:	9219      	str	r2, [sp, #100]	@ 0x64
 8011f52:	7862      	ldrb	r2, [r4, #1]
 8011f54:	2a2b      	cmp	r2, #43	@ 0x2b
 8011f56:	d07a      	beq.n	801204e <_strtod_l+0x27e>
 8011f58:	2a2d      	cmp	r2, #45	@ 0x2d
 8011f5a:	d07e      	beq.n	801205a <_strtod_l+0x28a>
 8011f5c:	f04f 0c00 	mov.w	ip, #0
 8011f60:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8011f64:	2909      	cmp	r1, #9
 8011f66:	f240 8085 	bls.w	8012074 <_strtod_l+0x2a4>
 8011f6a:	9419      	str	r4, [sp, #100]	@ 0x64
 8011f6c:	f04f 0800 	mov.w	r8, #0
 8011f70:	e0a5      	b.n	80120be <_strtod_l+0x2ee>
 8011f72:	2300      	movs	r3, #0
 8011f74:	e7c8      	b.n	8011f08 <_strtod_l+0x138>
 8011f76:	f1b9 0f08 	cmp.w	r9, #8
 8011f7a:	bfd8      	it	le
 8011f7c:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8011f7e:	f100 0001 	add.w	r0, r0, #1
 8011f82:	bfda      	itte	le
 8011f84:	fb02 3301 	mlale	r3, r2, r1, r3
 8011f88:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8011f8a:	fb02 3707 	mlagt	r7, r2, r7, r3
 8011f8e:	f109 0901 	add.w	r9, r9, #1
 8011f92:	9019      	str	r0, [sp, #100]	@ 0x64
 8011f94:	e7bf      	b.n	8011f16 <_strtod_l+0x146>
 8011f96:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011f98:	1c5a      	adds	r2, r3, #1
 8011f9a:	9219      	str	r2, [sp, #100]	@ 0x64
 8011f9c:	785a      	ldrb	r2, [r3, #1]
 8011f9e:	f1b9 0f00 	cmp.w	r9, #0
 8011fa2:	d03b      	beq.n	801201c <_strtod_l+0x24c>
 8011fa4:	900a      	str	r0, [sp, #40]	@ 0x28
 8011fa6:	464d      	mov	r5, r9
 8011fa8:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8011fac:	2b09      	cmp	r3, #9
 8011fae:	d912      	bls.n	8011fd6 <_strtod_l+0x206>
 8011fb0:	2301      	movs	r3, #1
 8011fb2:	e7c2      	b.n	8011f3a <_strtod_l+0x16a>
 8011fb4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011fb6:	1c5a      	adds	r2, r3, #1
 8011fb8:	9219      	str	r2, [sp, #100]	@ 0x64
 8011fba:	785a      	ldrb	r2, [r3, #1]
 8011fbc:	3001      	adds	r0, #1
 8011fbe:	2a30      	cmp	r2, #48	@ 0x30
 8011fc0:	d0f8      	beq.n	8011fb4 <_strtod_l+0x1e4>
 8011fc2:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8011fc6:	2b08      	cmp	r3, #8
 8011fc8:	f200 84d2 	bhi.w	8012970 <_strtod_l+0xba0>
 8011fcc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011fce:	900a      	str	r0, [sp, #40]	@ 0x28
 8011fd0:	2000      	movs	r0, #0
 8011fd2:	930c      	str	r3, [sp, #48]	@ 0x30
 8011fd4:	4605      	mov	r5, r0
 8011fd6:	3a30      	subs	r2, #48	@ 0x30
 8011fd8:	f100 0301 	add.w	r3, r0, #1
 8011fdc:	d018      	beq.n	8012010 <_strtod_l+0x240>
 8011fde:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8011fe0:	4419      	add	r1, r3
 8011fe2:	910a      	str	r1, [sp, #40]	@ 0x28
 8011fe4:	462e      	mov	r6, r5
 8011fe6:	f04f 0e0a 	mov.w	lr, #10
 8011fea:	1c71      	adds	r1, r6, #1
 8011fec:	eba1 0c05 	sub.w	ip, r1, r5
 8011ff0:	4563      	cmp	r3, ip
 8011ff2:	dc15      	bgt.n	8012020 <_strtod_l+0x250>
 8011ff4:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8011ff8:	182b      	adds	r3, r5, r0
 8011ffa:	2b08      	cmp	r3, #8
 8011ffc:	f105 0501 	add.w	r5, r5, #1
 8012000:	4405      	add	r5, r0
 8012002:	dc1a      	bgt.n	801203a <_strtod_l+0x26a>
 8012004:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012006:	230a      	movs	r3, #10
 8012008:	fb03 2301 	mla	r3, r3, r1, r2
 801200c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801200e:	2300      	movs	r3, #0
 8012010:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8012012:	1c51      	adds	r1, r2, #1
 8012014:	9119      	str	r1, [sp, #100]	@ 0x64
 8012016:	7852      	ldrb	r2, [r2, #1]
 8012018:	4618      	mov	r0, r3
 801201a:	e7c5      	b.n	8011fa8 <_strtod_l+0x1d8>
 801201c:	4648      	mov	r0, r9
 801201e:	e7ce      	b.n	8011fbe <_strtod_l+0x1ee>
 8012020:	2e08      	cmp	r6, #8
 8012022:	dc05      	bgt.n	8012030 <_strtod_l+0x260>
 8012024:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8012026:	fb0e f606 	mul.w	r6, lr, r6
 801202a:	960b      	str	r6, [sp, #44]	@ 0x2c
 801202c:	460e      	mov	r6, r1
 801202e:	e7dc      	b.n	8011fea <_strtod_l+0x21a>
 8012030:	2910      	cmp	r1, #16
 8012032:	bfd8      	it	le
 8012034:	fb0e f707 	mulle.w	r7, lr, r7
 8012038:	e7f8      	b.n	801202c <_strtod_l+0x25c>
 801203a:	2b0f      	cmp	r3, #15
 801203c:	bfdc      	itt	le
 801203e:	230a      	movle	r3, #10
 8012040:	fb03 2707 	mlale	r7, r3, r7, r2
 8012044:	e7e3      	b.n	801200e <_strtod_l+0x23e>
 8012046:	2300      	movs	r3, #0
 8012048:	930a      	str	r3, [sp, #40]	@ 0x28
 801204a:	2301      	movs	r3, #1
 801204c:	e77a      	b.n	8011f44 <_strtod_l+0x174>
 801204e:	f04f 0c00 	mov.w	ip, #0
 8012052:	1ca2      	adds	r2, r4, #2
 8012054:	9219      	str	r2, [sp, #100]	@ 0x64
 8012056:	78a2      	ldrb	r2, [r4, #2]
 8012058:	e782      	b.n	8011f60 <_strtod_l+0x190>
 801205a:	f04f 0c01 	mov.w	ip, #1
 801205e:	e7f8      	b.n	8012052 <_strtod_l+0x282>
 8012060:	080187d4 	.word	0x080187d4
 8012064:	08018608 	.word	0x08018608
 8012068:	7ff00000 	.word	0x7ff00000
 801206c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801206e:	1c51      	adds	r1, r2, #1
 8012070:	9119      	str	r1, [sp, #100]	@ 0x64
 8012072:	7852      	ldrb	r2, [r2, #1]
 8012074:	2a30      	cmp	r2, #48	@ 0x30
 8012076:	d0f9      	beq.n	801206c <_strtod_l+0x29c>
 8012078:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 801207c:	2908      	cmp	r1, #8
 801207e:	f63f af75 	bhi.w	8011f6c <_strtod_l+0x19c>
 8012082:	3a30      	subs	r2, #48	@ 0x30
 8012084:	9209      	str	r2, [sp, #36]	@ 0x24
 8012086:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8012088:	920f      	str	r2, [sp, #60]	@ 0x3c
 801208a:	f04f 080a 	mov.w	r8, #10
 801208e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8012090:	1c56      	adds	r6, r2, #1
 8012092:	9619      	str	r6, [sp, #100]	@ 0x64
 8012094:	7852      	ldrb	r2, [r2, #1]
 8012096:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 801209a:	f1be 0f09 	cmp.w	lr, #9
 801209e:	d939      	bls.n	8012114 <_strtod_l+0x344>
 80120a0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80120a2:	1a76      	subs	r6, r6, r1
 80120a4:	2e08      	cmp	r6, #8
 80120a6:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80120aa:	dc03      	bgt.n	80120b4 <_strtod_l+0x2e4>
 80120ac:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80120ae:	4588      	cmp	r8, r1
 80120b0:	bfa8      	it	ge
 80120b2:	4688      	movge	r8, r1
 80120b4:	f1bc 0f00 	cmp.w	ip, #0
 80120b8:	d001      	beq.n	80120be <_strtod_l+0x2ee>
 80120ba:	f1c8 0800 	rsb	r8, r8, #0
 80120be:	2d00      	cmp	r5, #0
 80120c0:	d14e      	bne.n	8012160 <_strtod_l+0x390>
 80120c2:	9908      	ldr	r1, [sp, #32]
 80120c4:	4308      	orrs	r0, r1
 80120c6:	f47f aebc 	bne.w	8011e42 <_strtod_l+0x72>
 80120ca:	2b00      	cmp	r3, #0
 80120cc:	f47f aed4 	bne.w	8011e78 <_strtod_l+0xa8>
 80120d0:	2a69      	cmp	r2, #105	@ 0x69
 80120d2:	d028      	beq.n	8012126 <_strtod_l+0x356>
 80120d4:	dc25      	bgt.n	8012122 <_strtod_l+0x352>
 80120d6:	2a49      	cmp	r2, #73	@ 0x49
 80120d8:	d025      	beq.n	8012126 <_strtod_l+0x356>
 80120da:	2a4e      	cmp	r2, #78	@ 0x4e
 80120dc:	f47f aecc 	bne.w	8011e78 <_strtod_l+0xa8>
 80120e0:	499a      	ldr	r1, [pc, #616]	@ (801234c <_strtod_l+0x57c>)
 80120e2:	a819      	add	r0, sp, #100	@ 0x64
 80120e4:	f001 f964 	bl	80133b0 <__match>
 80120e8:	2800      	cmp	r0, #0
 80120ea:	f43f aec5 	beq.w	8011e78 <_strtod_l+0xa8>
 80120ee:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80120f0:	781b      	ldrb	r3, [r3, #0]
 80120f2:	2b28      	cmp	r3, #40	@ 0x28
 80120f4:	d12e      	bne.n	8012154 <_strtod_l+0x384>
 80120f6:	4996      	ldr	r1, [pc, #600]	@ (8012350 <_strtod_l+0x580>)
 80120f8:	aa1c      	add	r2, sp, #112	@ 0x70
 80120fa:	a819      	add	r0, sp, #100	@ 0x64
 80120fc:	f001 f96c 	bl	80133d8 <__hexnan>
 8012100:	2805      	cmp	r0, #5
 8012102:	d127      	bne.n	8012154 <_strtod_l+0x384>
 8012104:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8012106:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 801210a:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 801210e:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8012112:	e696      	b.n	8011e42 <_strtod_l+0x72>
 8012114:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8012116:	fb08 2101 	mla	r1, r8, r1, r2
 801211a:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 801211e:	9209      	str	r2, [sp, #36]	@ 0x24
 8012120:	e7b5      	b.n	801208e <_strtod_l+0x2be>
 8012122:	2a6e      	cmp	r2, #110	@ 0x6e
 8012124:	e7da      	b.n	80120dc <_strtod_l+0x30c>
 8012126:	498b      	ldr	r1, [pc, #556]	@ (8012354 <_strtod_l+0x584>)
 8012128:	a819      	add	r0, sp, #100	@ 0x64
 801212a:	f001 f941 	bl	80133b0 <__match>
 801212e:	2800      	cmp	r0, #0
 8012130:	f43f aea2 	beq.w	8011e78 <_strtod_l+0xa8>
 8012134:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8012136:	4988      	ldr	r1, [pc, #544]	@ (8012358 <_strtod_l+0x588>)
 8012138:	3b01      	subs	r3, #1
 801213a:	a819      	add	r0, sp, #100	@ 0x64
 801213c:	9319      	str	r3, [sp, #100]	@ 0x64
 801213e:	f001 f937 	bl	80133b0 <__match>
 8012142:	b910      	cbnz	r0, 801214a <_strtod_l+0x37a>
 8012144:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8012146:	3301      	adds	r3, #1
 8012148:	9319      	str	r3, [sp, #100]	@ 0x64
 801214a:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 8012368 <_strtod_l+0x598>
 801214e:	f04f 0a00 	mov.w	sl, #0
 8012152:	e676      	b.n	8011e42 <_strtod_l+0x72>
 8012154:	4881      	ldr	r0, [pc, #516]	@ (801235c <_strtod_l+0x58c>)
 8012156:	f000 fe67 	bl	8012e28 <nan>
 801215a:	ec5b ab10 	vmov	sl, fp, d0
 801215e:	e670      	b.n	8011e42 <_strtod_l+0x72>
 8012160:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012162:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8012164:	eba8 0303 	sub.w	r3, r8, r3
 8012168:	f1b9 0f00 	cmp.w	r9, #0
 801216c:	bf08      	it	eq
 801216e:	46a9      	moveq	r9, r5
 8012170:	2d10      	cmp	r5, #16
 8012172:	9309      	str	r3, [sp, #36]	@ 0x24
 8012174:	462c      	mov	r4, r5
 8012176:	bfa8      	it	ge
 8012178:	2410      	movge	r4, #16
 801217a:	f7ee f99b 	bl	80004b4 <__aeabi_ui2d>
 801217e:	2d09      	cmp	r5, #9
 8012180:	4682      	mov	sl, r0
 8012182:	468b      	mov	fp, r1
 8012184:	dc13      	bgt.n	80121ae <_strtod_l+0x3de>
 8012186:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012188:	2b00      	cmp	r3, #0
 801218a:	f43f ae5a 	beq.w	8011e42 <_strtod_l+0x72>
 801218e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012190:	dd78      	ble.n	8012284 <_strtod_l+0x4b4>
 8012192:	2b16      	cmp	r3, #22
 8012194:	dc5f      	bgt.n	8012256 <_strtod_l+0x486>
 8012196:	4972      	ldr	r1, [pc, #456]	@ (8012360 <_strtod_l+0x590>)
 8012198:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 801219c:	e9d1 0100 	ldrd	r0, r1, [r1]
 80121a0:	4652      	mov	r2, sl
 80121a2:	465b      	mov	r3, fp
 80121a4:	f7ee fa00 	bl	80005a8 <__aeabi_dmul>
 80121a8:	4682      	mov	sl, r0
 80121aa:	468b      	mov	fp, r1
 80121ac:	e649      	b.n	8011e42 <_strtod_l+0x72>
 80121ae:	4b6c      	ldr	r3, [pc, #432]	@ (8012360 <_strtod_l+0x590>)
 80121b0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80121b4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 80121b8:	f7ee f9f6 	bl	80005a8 <__aeabi_dmul>
 80121bc:	4682      	mov	sl, r0
 80121be:	4638      	mov	r0, r7
 80121c0:	468b      	mov	fp, r1
 80121c2:	f7ee f977 	bl	80004b4 <__aeabi_ui2d>
 80121c6:	4602      	mov	r2, r0
 80121c8:	460b      	mov	r3, r1
 80121ca:	4650      	mov	r0, sl
 80121cc:	4659      	mov	r1, fp
 80121ce:	f7ee f835 	bl	800023c <__adddf3>
 80121d2:	2d0f      	cmp	r5, #15
 80121d4:	4682      	mov	sl, r0
 80121d6:	468b      	mov	fp, r1
 80121d8:	ddd5      	ble.n	8012186 <_strtod_l+0x3b6>
 80121da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80121dc:	1b2c      	subs	r4, r5, r4
 80121de:	441c      	add	r4, r3
 80121e0:	2c00      	cmp	r4, #0
 80121e2:	f340 8093 	ble.w	801230c <_strtod_l+0x53c>
 80121e6:	f014 030f 	ands.w	r3, r4, #15
 80121ea:	d00a      	beq.n	8012202 <_strtod_l+0x432>
 80121ec:	495c      	ldr	r1, [pc, #368]	@ (8012360 <_strtod_l+0x590>)
 80121ee:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80121f2:	4652      	mov	r2, sl
 80121f4:	465b      	mov	r3, fp
 80121f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80121fa:	f7ee f9d5 	bl	80005a8 <__aeabi_dmul>
 80121fe:	4682      	mov	sl, r0
 8012200:	468b      	mov	fp, r1
 8012202:	f034 040f 	bics.w	r4, r4, #15
 8012206:	d073      	beq.n	80122f0 <_strtod_l+0x520>
 8012208:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 801220c:	dd49      	ble.n	80122a2 <_strtod_l+0x4d2>
 801220e:	2400      	movs	r4, #0
 8012210:	46a0      	mov	r8, r4
 8012212:	940b      	str	r4, [sp, #44]	@ 0x2c
 8012214:	46a1      	mov	r9, r4
 8012216:	9a05      	ldr	r2, [sp, #20]
 8012218:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8012368 <_strtod_l+0x598>
 801221c:	2322      	movs	r3, #34	@ 0x22
 801221e:	6013      	str	r3, [r2, #0]
 8012220:	f04f 0a00 	mov.w	sl, #0
 8012224:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012226:	2b00      	cmp	r3, #0
 8012228:	f43f ae0b 	beq.w	8011e42 <_strtod_l+0x72>
 801222c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801222e:	9805      	ldr	r0, [sp, #20]
 8012230:	f7ff f946 	bl	80114c0 <_Bfree>
 8012234:	9805      	ldr	r0, [sp, #20]
 8012236:	4649      	mov	r1, r9
 8012238:	f7ff f942 	bl	80114c0 <_Bfree>
 801223c:	9805      	ldr	r0, [sp, #20]
 801223e:	4641      	mov	r1, r8
 8012240:	f7ff f93e 	bl	80114c0 <_Bfree>
 8012244:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012246:	9805      	ldr	r0, [sp, #20]
 8012248:	f7ff f93a 	bl	80114c0 <_Bfree>
 801224c:	9805      	ldr	r0, [sp, #20]
 801224e:	4621      	mov	r1, r4
 8012250:	f7ff f936 	bl	80114c0 <_Bfree>
 8012254:	e5f5      	b.n	8011e42 <_strtod_l+0x72>
 8012256:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012258:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 801225c:	4293      	cmp	r3, r2
 801225e:	dbbc      	blt.n	80121da <_strtod_l+0x40a>
 8012260:	4c3f      	ldr	r4, [pc, #252]	@ (8012360 <_strtod_l+0x590>)
 8012262:	f1c5 050f 	rsb	r5, r5, #15
 8012266:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 801226a:	4652      	mov	r2, sl
 801226c:	465b      	mov	r3, fp
 801226e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012272:	f7ee f999 	bl	80005a8 <__aeabi_dmul>
 8012276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012278:	1b5d      	subs	r5, r3, r5
 801227a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 801227e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012282:	e78f      	b.n	80121a4 <_strtod_l+0x3d4>
 8012284:	3316      	adds	r3, #22
 8012286:	dba8      	blt.n	80121da <_strtod_l+0x40a>
 8012288:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801228a:	eba3 0808 	sub.w	r8, r3, r8
 801228e:	4b34      	ldr	r3, [pc, #208]	@ (8012360 <_strtod_l+0x590>)
 8012290:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8012294:	e9d8 2300 	ldrd	r2, r3, [r8]
 8012298:	4650      	mov	r0, sl
 801229a:	4659      	mov	r1, fp
 801229c:	f7ee faae 	bl	80007fc <__aeabi_ddiv>
 80122a0:	e782      	b.n	80121a8 <_strtod_l+0x3d8>
 80122a2:	2300      	movs	r3, #0
 80122a4:	4f2f      	ldr	r7, [pc, #188]	@ (8012364 <_strtod_l+0x594>)
 80122a6:	1124      	asrs	r4, r4, #4
 80122a8:	4650      	mov	r0, sl
 80122aa:	4659      	mov	r1, fp
 80122ac:	461e      	mov	r6, r3
 80122ae:	2c01      	cmp	r4, #1
 80122b0:	dc21      	bgt.n	80122f6 <_strtod_l+0x526>
 80122b2:	b10b      	cbz	r3, 80122b8 <_strtod_l+0x4e8>
 80122b4:	4682      	mov	sl, r0
 80122b6:	468b      	mov	fp, r1
 80122b8:	492a      	ldr	r1, [pc, #168]	@ (8012364 <_strtod_l+0x594>)
 80122ba:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 80122be:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 80122c2:	4652      	mov	r2, sl
 80122c4:	465b      	mov	r3, fp
 80122c6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80122ca:	f7ee f96d 	bl	80005a8 <__aeabi_dmul>
 80122ce:	4b26      	ldr	r3, [pc, #152]	@ (8012368 <_strtod_l+0x598>)
 80122d0:	460a      	mov	r2, r1
 80122d2:	400b      	ands	r3, r1
 80122d4:	4925      	ldr	r1, [pc, #148]	@ (801236c <_strtod_l+0x59c>)
 80122d6:	428b      	cmp	r3, r1
 80122d8:	4682      	mov	sl, r0
 80122da:	d898      	bhi.n	801220e <_strtod_l+0x43e>
 80122dc:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 80122e0:	428b      	cmp	r3, r1
 80122e2:	bf86      	itte	hi
 80122e4:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8012370 <_strtod_l+0x5a0>
 80122e8:	f04f 3aff 	movhi.w	sl, #4294967295
 80122ec:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 80122f0:	2300      	movs	r3, #0
 80122f2:	9308      	str	r3, [sp, #32]
 80122f4:	e076      	b.n	80123e4 <_strtod_l+0x614>
 80122f6:	07e2      	lsls	r2, r4, #31
 80122f8:	d504      	bpl.n	8012304 <_strtod_l+0x534>
 80122fa:	e9d7 2300 	ldrd	r2, r3, [r7]
 80122fe:	f7ee f953 	bl	80005a8 <__aeabi_dmul>
 8012302:	2301      	movs	r3, #1
 8012304:	3601      	adds	r6, #1
 8012306:	1064      	asrs	r4, r4, #1
 8012308:	3708      	adds	r7, #8
 801230a:	e7d0      	b.n	80122ae <_strtod_l+0x4de>
 801230c:	d0f0      	beq.n	80122f0 <_strtod_l+0x520>
 801230e:	4264      	negs	r4, r4
 8012310:	f014 020f 	ands.w	r2, r4, #15
 8012314:	d00a      	beq.n	801232c <_strtod_l+0x55c>
 8012316:	4b12      	ldr	r3, [pc, #72]	@ (8012360 <_strtod_l+0x590>)
 8012318:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801231c:	4650      	mov	r0, sl
 801231e:	4659      	mov	r1, fp
 8012320:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012324:	f7ee fa6a 	bl	80007fc <__aeabi_ddiv>
 8012328:	4682      	mov	sl, r0
 801232a:	468b      	mov	fp, r1
 801232c:	1124      	asrs	r4, r4, #4
 801232e:	d0df      	beq.n	80122f0 <_strtod_l+0x520>
 8012330:	2c1f      	cmp	r4, #31
 8012332:	dd1f      	ble.n	8012374 <_strtod_l+0x5a4>
 8012334:	2400      	movs	r4, #0
 8012336:	46a0      	mov	r8, r4
 8012338:	940b      	str	r4, [sp, #44]	@ 0x2c
 801233a:	46a1      	mov	r9, r4
 801233c:	9a05      	ldr	r2, [sp, #20]
 801233e:	2322      	movs	r3, #34	@ 0x22
 8012340:	f04f 0a00 	mov.w	sl, #0
 8012344:	f04f 0b00 	mov.w	fp, #0
 8012348:	6013      	str	r3, [r2, #0]
 801234a:	e76b      	b.n	8012224 <_strtod_l+0x454>
 801234c:	080184f6 	.word	0x080184f6
 8012350:	080187c0 	.word	0x080187c0
 8012354:	080184ee 	.word	0x080184ee
 8012358:	08018525 	.word	0x08018525
 801235c:	0801865e 	.word	0x0801865e
 8012360:	080186f8 	.word	0x080186f8
 8012364:	080186d0 	.word	0x080186d0
 8012368:	7ff00000 	.word	0x7ff00000
 801236c:	7ca00000 	.word	0x7ca00000
 8012370:	7fefffff 	.word	0x7fefffff
 8012374:	f014 0310 	ands.w	r3, r4, #16
 8012378:	bf18      	it	ne
 801237a:	236a      	movne	r3, #106	@ 0x6a
 801237c:	4ea9      	ldr	r6, [pc, #676]	@ (8012624 <_strtod_l+0x854>)
 801237e:	9308      	str	r3, [sp, #32]
 8012380:	4650      	mov	r0, sl
 8012382:	4659      	mov	r1, fp
 8012384:	2300      	movs	r3, #0
 8012386:	07e7      	lsls	r7, r4, #31
 8012388:	d504      	bpl.n	8012394 <_strtod_l+0x5c4>
 801238a:	e9d6 2300 	ldrd	r2, r3, [r6]
 801238e:	f7ee f90b 	bl	80005a8 <__aeabi_dmul>
 8012392:	2301      	movs	r3, #1
 8012394:	1064      	asrs	r4, r4, #1
 8012396:	f106 0608 	add.w	r6, r6, #8
 801239a:	d1f4      	bne.n	8012386 <_strtod_l+0x5b6>
 801239c:	b10b      	cbz	r3, 80123a2 <_strtod_l+0x5d2>
 801239e:	4682      	mov	sl, r0
 80123a0:	468b      	mov	fp, r1
 80123a2:	9b08      	ldr	r3, [sp, #32]
 80123a4:	b1b3      	cbz	r3, 80123d4 <_strtod_l+0x604>
 80123a6:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80123aa:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80123ae:	2b00      	cmp	r3, #0
 80123b0:	4659      	mov	r1, fp
 80123b2:	dd0f      	ble.n	80123d4 <_strtod_l+0x604>
 80123b4:	2b1f      	cmp	r3, #31
 80123b6:	dd56      	ble.n	8012466 <_strtod_l+0x696>
 80123b8:	2b34      	cmp	r3, #52	@ 0x34
 80123ba:	bfde      	ittt	le
 80123bc:	f04f 33ff 	movle.w	r3, #4294967295
 80123c0:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 80123c4:	4093      	lslle	r3, r2
 80123c6:	f04f 0a00 	mov.w	sl, #0
 80123ca:	bfcc      	ite	gt
 80123cc:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 80123d0:	ea03 0b01 	andle.w	fp, r3, r1
 80123d4:	2200      	movs	r2, #0
 80123d6:	2300      	movs	r3, #0
 80123d8:	4650      	mov	r0, sl
 80123da:	4659      	mov	r1, fp
 80123dc:	f7ee fb4c 	bl	8000a78 <__aeabi_dcmpeq>
 80123e0:	2800      	cmp	r0, #0
 80123e2:	d1a7      	bne.n	8012334 <_strtod_l+0x564>
 80123e4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80123e6:	9300      	str	r3, [sp, #0]
 80123e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80123ea:	9805      	ldr	r0, [sp, #20]
 80123ec:	462b      	mov	r3, r5
 80123ee:	464a      	mov	r2, r9
 80123f0:	f7ff f8ce 	bl	8011590 <__s2b>
 80123f4:	900b      	str	r0, [sp, #44]	@ 0x2c
 80123f6:	2800      	cmp	r0, #0
 80123f8:	f43f af09 	beq.w	801220e <_strtod_l+0x43e>
 80123fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80123fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012400:	2a00      	cmp	r2, #0
 8012402:	eba3 0308 	sub.w	r3, r3, r8
 8012406:	bfa8      	it	ge
 8012408:	2300      	movge	r3, #0
 801240a:	9312      	str	r3, [sp, #72]	@ 0x48
 801240c:	2400      	movs	r4, #0
 801240e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8012412:	9316      	str	r3, [sp, #88]	@ 0x58
 8012414:	46a0      	mov	r8, r4
 8012416:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012418:	9805      	ldr	r0, [sp, #20]
 801241a:	6859      	ldr	r1, [r3, #4]
 801241c:	f7ff f810 	bl	8011440 <_Balloc>
 8012420:	4681      	mov	r9, r0
 8012422:	2800      	cmp	r0, #0
 8012424:	f43f aef7 	beq.w	8012216 <_strtod_l+0x446>
 8012428:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801242a:	691a      	ldr	r2, [r3, #16]
 801242c:	3202      	adds	r2, #2
 801242e:	f103 010c 	add.w	r1, r3, #12
 8012432:	0092      	lsls	r2, r2, #2
 8012434:	300c      	adds	r0, #12
 8012436:	f7fe f896 	bl	8010566 <memcpy>
 801243a:	ec4b ab10 	vmov	d0, sl, fp
 801243e:	9805      	ldr	r0, [sp, #20]
 8012440:	aa1c      	add	r2, sp, #112	@ 0x70
 8012442:	a91b      	add	r1, sp, #108	@ 0x6c
 8012444:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8012448:	f7ff fbd6 	bl	8011bf8 <__d2b>
 801244c:	901a      	str	r0, [sp, #104]	@ 0x68
 801244e:	2800      	cmp	r0, #0
 8012450:	f43f aee1 	beq.w	8012216 <_strtod_l+0x446>
 8012454:	9805      	ldr	r0, [sp, #20]
 8012456:	2101      	movs	r1, #1
 8012458:	f7ff f930 	bl	80116bc <__i2b>
 801245c:	4680      	mov	r8, r0
 801245e:	b948      	cbnz	r0, 8012474 <_strtod_l+0x6a4>
 8012460:	f04f 0800 	mov.w	r8, #0
 8012464:	e6d7      	b.n	8012216 <_strtod_l+0x446>
 8012466:	f04f 32ff 	mov.w	r2, #4294967295
 801246a:	fa02 f303 	lsl.w	r3, r2, r3
 801246e:	ea03 0a0a 	and.w	sl, r3, sl
 8012472:	e7af      	b.n	80123d4 <_strtod_l+0x604>
 8012474:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8012476:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8012478:	2d00      	cmp	r5, #0
 801247a:	bfab      	itete	ge
 801247c:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 801247e:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8012480:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8012482:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8012484:	bfac      	ite	ge
 8012486:	18ef      	addge	r7, r5, r3
 8012488:	1b5e      	sublt	r6, r3, r5
 801248a:	9b08      	ldr	r3, [sp, #32]
 801248c:	1aed      	subs	r5, r5, r3
 801248e:	4415      	add	r5, r2
 8012490:	4b65      	ldr	r3, [pc, #404]	@ (8012628 <_strtod_l+0x858>)
 8012492:	3d01      	subs	r5, #1
 8012494:	429d      	cmp	r5, r3
 8012496:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 801249a:	da50      	bge.n	801253e <_strtod_l+0x76e>
 801249c:	1b5b      	subs	r3, r3, r5
 801249e:	2b1f      	cmp	r3, #31
 80124a0:	eba2 0203 	sub.w	r2, r2, r3
 80124a4:	f04f 0101 	mov.w	r1, #1
 80124a8:	dc3d      	bgt.n	8012526 <_strtod_l+0x756>
 80124aa:	fa01 f303 	lsl.w	r3, r1, r3
 80124ae:	9313      	str	r3, [sp, #76]	@ 0x4c
 80124b0:	2300      	movs	r3, #0
 80124b2:	9310      	str	r3, [sp, #64]	@ 0x40
 80124b4:	18bd      	adds	r5, r7, r2
 80124b6:	9b08      	ldr	r3, [sp, #32]
 80124b8:	42af      	cmp	r7, r5
 80124ba:	4416      	add	r6, r2
 80124bc:	441e      	add	r6, r3
 80124be:	463b      	mov	r3, r7
 80124c0:	bfa8      	it	ge
 80124c2:	462b      	movge	r3, r5
 80124c4:	42b3      	cmp	r3, r6
 80124c6:	bfa8      	it	ge
 80124c8:	4633      	movge	r3, r6
 80124ca:	2b00      	cmp	r3, #0
 80124cc:	bfc2      	ittt	gt
 80124ce:	1aed      	subgt	r5, r5, r3
 80124d0:	1af6      	subgt	r6, r6, r3
 80124d2:	1aff      	subgt	r7, r7, r3
 80124d4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80124d6:	2b00      	cmp	r3, #0
 80124d8:	dd16      	ble.n	8012508 <_strtod_l+0x738>
 80124da:	4641      	mov	r1, r8
 80124dc:	9805      	ldr	r0, [sp, #20]
 80124de:	461a      	mov	r2, r3
 80124e0:	f7ff f9a4 	bl	801182c <__pow5mult>
 80124e4:	4680      	mov	r8, r0
 80124e6:	2800      	cmp	r0, #0
 80124e8:	d0ba      	beq.n	8012460 <_strtod_l+0x690>
 80124ea:	4601      	mov	r1, r0
 80124ec:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80124ee:	9805      	ldr	r0, [sp, #20]
 80124f0:	f7ff f8fa 	bl	80116e8 <__multiply>
 80124f4:	900a      	str	r0, [sp, #40]	@ 0x28
 80124f6:	2800      	cmp	r0, #0
 80124f8:	f43f ae8d 	beq.w	8012216 <_strtod_l+0x446>
 80124fc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80124fe:	9805      	ldr	r0, [sp, #20]
 8012500:	f7fe ffde 	bl	80114c0 <_Bfree>
 8012504:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012506:	931a      	str	r3, [sp, #104]	@ 0x68
 8012508:	2d00      	cmp	r5, #0
 801250a:	dc1d      	bgt.n	8012548 <_strtod_l+0x778>
 801250c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801250e:	2b00      	cmp	r3, #0
 8012510:	dd23      	ble.n	801255a <_strtod_l+0x78a>
 8012512:	4649      	mov	r1, r9
 8012514:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8012516:	9805      	ldr	r0, [sp, #20]
 8012518:	f7ff f988 	bl	801182c <__pow5mult>
 801251c:	4681      	mov	r9, r0
 801251e:	b9e0      	cbnz	r0, 801255a <_strtod_l+0x78a>
 8012520:	f04f 0900 	mov.w	r9, #0
 8012524:	e677      	b.n	8012216 <_strtod_l+0x446>
 8012526:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 801252a:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 801252e:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8012532:	35e2      	adds	r5, #226	@ 0xe2
 8012534:	fa01 f305 	lsl.w	r3, r1, r5
 8012538:	9310      	str	r3, [sp, #64]	@ 0x40
 801253a:	9113      	str	r1, [sp, #76]	@ 0x4c
 801253c:	e7ba      	b.n	80124b4 <_strtod_l+0x6e4>
 801253e:	2300      	movs	r3, #0
 8012540:	9310      	str	r3, [sp, #64]	@ 0x40
 8012542:	2301      	movs	r3, #1
 8012544:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012546:	e7b5      	b.n	80124b4 <_strtod_l+0x6e4>
 8012548:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801254a:	9805      	ldr	r0, [sp, #20]
 801254c:	462a      	mov	r2, r5
 801254e:	f7ff f9c7 	bl	80118e0 <__lshift>
 8012552:	901a      	str	r0, [sp, #104]	@ 0x68
 8012554:	2800      	cmp	r0, #0
 8012556:	d1d9      	bne.n	801250c <_strtod_l+0x73c>
 8012558:	e65d      	b.n	8012216 <_strtod_l+0x446>
 801255a:	2e00      	cmp	r6, #0
 801255c:	dd07      	ble.n	801256e <_strtod_l+0x79e>
 801255e:	4649      	mov	r1, r9
 8012560:	9805      	ldr	r0, [sp, #20]
 8012562:	4632      	mov	r2, r6
 8012564:	f7ff f9bc 	bl	80118e0 <__lshift>
 8012568:	4681      	mov	r9, r0
 801256a:	2800      	cmp	r0, #0
 801256c:	d0d8      	beq.n	8012520 <_strtod_l+0x750>
 801256e:	2f00      	cmp	r7, #0
 8012570:	dd08      	ble.n	8012584 <_strtod_l+0x7b4>
 8012572:	4641      	mov	r1, r8
 8012574:	9805      	ldr	r0, [sp, #20]
 8012576:	463a      	mov	r2, r7
 8012578:	f7ff f9b2 	bl	80118e0 <__lshift>
 801257c:	4680      	mov	r8, r0
 801257e:	2800      	cmp	r0, #0
 8012580:	f43f ae49 	beq.w	8012216 <_strtod_l+0x446>
 8012584:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8012586:	9805      	ldr	r0, [sp, #20]
 8012588:	464a      	mov	r2, r9
 801258a:	f7ff fa31 	bl	80119f0 <__mdiff>
 801258e:	4604      	mov	r4, r0
 8012590:	2800      	cmp	r0, #0
 8012592:	f43f ae40 	beq.w	8012216 <_strtod_l+0x446>
 8012596:	68c3      	ldr	r3, [r0, #12]
 8012598:	930f      	str	r3, [sp, #60]	@ 0x3c
 801259a:	2300      	movs	r3, #0
 801259c:	60c3      	str	r3, [r0, #12]
 801259e:	4641      	mov	r1, r8
 80125a0:	f7ff fa0a 	bl	80119b8 <__mcmp>
 80125a4:	2800      	cmp	r0, #0
 80125a6:	da45      	bge.n	8012634 <_strtod_l+0x864>
 80125a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80125aa:	ea53 030a 	orrs.w	r3, r3, sl
 80125ae:	d16b      	bne.n	8012688 <_strtod_l+0x8b8>
 80125b0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80125b4:	2b00      	cmp	r3, #0
 80125b6:	d167      	bne.n	8012688 <_strtod_l+0x8b8>
 80125b8:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80125bc:	0d1b      	lsrs	r3, r3, #20
 80125be:	051b      	lsls	r3, r3, #20
 80125c0:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80125c4:	d960      	bls.n	8012688 <_strtod_l+0x8b8>
 80125c6:	6963      	ldr	r3, [r4, #20]
 80125c8:	b913      	cbnz	r3, 80125d0 <_strtod_l+0x800>
 80125ca:	6923      	ldr	r3, [r4, #16]
 80125cc:	2b01      	cmp	r3, #1
 80125ce:	dd5b      	ble.n	8012688 <_strtod_l+0x8b8>
 80125d0:	4621      	mov	r1, r4
 80125d2:	2201      	movs	r2, #1
 80125d4:	9805      	ldr	r0, [sp, #20]
 80125d6:	f7ff f983 	bl	80118e0 <__lshift>
 80125da:	4641      	mov	r1, r8
 80125dc:	4604      	mov	r4, r0
 80125de:	f7ff f9eb 	bl	80119b8 <__mcmp>
 80125e2:	2800      	cmp	r0, #0
 80125e4:	dd50      	ble.n	8012688 <_strtod_l+0x8b8>
 80125e6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80125ea:	9a08      	ldr	r2, [sp, #32]
 80125ec:	0d1b      	lsrs	r3, r3, #20
 80125ee:	051b      	lsls	r3, r3, #20
 80125f0:	2a00      	cmp	r2, #0
 80125f2:	d06a      	beq.n	80126ca <_strtod_l+0x8fa>
 80125f4:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80125f8:	d867      	bhi.n	80126ca <_strtod_l+0x8fa>
 80125fa:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 80125fe:	f67f ae9d 	bls.w	801233c <_strtod_l+0x56c>
 8012602:	4b0a      	ldr	r3, [pc, #40]	@ (801262c <_strtod_l+0x85c>)
 8012604:	4650      	mov	r0, sl
 8012606:	4659      	mov	r1, fp
 8012608:	2200      	movs	r2, #0
 801260a:	f7ed ffcd 	bl	80005a8 <__aeabi_dmul>
 801260e:	4b08      	ldr	r3, [pc, #32]	@ (8012630 <_strtod_l+0x860>)
 8012610:	400b      	ands	r3, r1
 8012612:	4682      	mov	sl, r0
 8012614:	468b      	mov	fp, r1
 8012616:	2b00      	cmp	r3, #0
 8012618:	f47f ae08 	bne.w	801222c <_strtod_l+0x45c>
 801261c:	9a05      	ldr	r2, [sp, #20]
 801261e:	2322      	movs	r3, #34	@ 0x22
 8012620:	6013      	str	r3, [r2, #0]
 8012622:	e603      	b.n	801222c <_strtod_l+0x45c>
 8012624:	080187e8 	.word	0x080187e8
 8012628:	fffffc02 	.word	0xfffffc02
 801262c:	39500000 	.word	0x39500000
 8012630:	7ff00000 	.word	0x7ff00000
 8012634:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8012638:	d165      	bne.n	8012706 <_strtod_l+0x936>
 801263a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801263c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8012640:	b35a      	cbz	r2, 801269a <_strtod_l+0x8ca>
 8012642:	4a9f      	ldr	r2, [pc, #636]	@ (80128c0 <_strtod_l+0xaf0>)
 8012644:	4293      	cmp	r3, r2
 8012646:	d12b      	bne.n	80126a0 <_strtod_l+0x8d0>
 8012648:	9b08      	ldr	r3, [sp, #32]
 801264a:	4651      	mov	r1, sl
 801264c:	b303      	cbz	r3, 8012690 <_strtod_l+0x8c0>
 801264e:	4b9d      	ldr	r3, [pc, #628]	@ (80128c4 <_strtod_l+0xaf4>)
 8012650:	465a      	mov	r2, fp
 8012652:	4013      	ands	r3, r2
 8012654:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8012658:	f04f 32ff 	mov.w	r2, #4294967295
 801265c:	d81b      	bhi.n	8012696 <_strtod_l+0x8c6>
 801265e:	0d1b      	lsrs	r3, r3, #20
 8012660:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8012664:	fa02 f303 	lsl.w	r3, r2, r3
 8012668:	4299      	cmp	r1, r3
 801266a:	d119      	bne.n	80126a0 <_strtod_l+0x8d0>
 801266c:	4b96      	ldr	r3, [pc, #600]	@ (80128c8 <_strtod_l+0xaf8>)
 801266e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012670:	429a      	cmp	r2, r3
 8012672:	d102      	bne.n	801267a <_strtod_l+0x8aa>
 8012674:	3101      	adds	r1, #1
 8012676:	f43f adce 	beq.w	8012216 <_strtod_l+0x446>
 801267a:	4b92      	ldr	r3, [pc, #584]	@ (80128c4 <_strtod_l+0xaf4>)
 801267c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801267e:	401a      	ands	r2, r3
 8012680:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8012684:	f04f 0a00 	mov.w	sl, #0
 8012688:	9b08      	ldr	r3, [sp, #32]
 801268a:	2b00      	cmp	r3, #0
 801268c:	d1b9      	bne.n	8012602 <_strtod_l+0x832>
 801268e:	e5cd      	b.n	801222c <_strtod_l+0x45c>
 8012690:	f04f 33ff 	mov.w	r3, #4294967295
 8012694:	e7e8      	b.n	8012668 <_strtod_l+0x898>
 8012696:	4613      	mov	r3, r2
 8012698:	e7e6      	b.n	8012668 <_strtod_l+0x898>
 801269a:	ea53 030a 	orrs.w	r3, r3, sl
 801269e:	d0a2      	beq.n	80125e6 <_strtod_l+0x816>
 80126a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80126a2:	b1db      	cbz	r3, 80126dc <_strtod_l+0x90c>
 80126a4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80126a6:	4213      	tst	r3, r2
 80126a8:	d0ee      	beq.n	8012688 <_strtod_l+0x8b8>
 80126aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80126ac:	9a08      	ldr	r2, [sp, #32]
 80126ae:	4650      	mov	r0, sl
 80126b0:	4659      	mov	r1, fp
 80126b2:	b1bb      	cbz	r3, 80126e4 <_strtod_l+0x914>
 80126b4:	f7ff fb6e 	bl	8011d94 <sulp>
 80126b8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80126bc:	ec53 2b10 	vmov	r2, r3, d0
 80126c0:	f7ed fdbc 	bl	800023c <__adddf3>
 80126c4:	4682      	mov	sl, r0
 80126c6:	468b      	mov	fp, r1
 80126c8:	e7de      	b.n	8012688 <_strtod_l+0x8b8>
 80126ca:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80126ce:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80126d2:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80126d6:	f04f 3aff 	mov.w	sl, #4294967295
 80126da:	e7d5      	b.n	8012688 <_strtod_l+0x8b8>
 80126dc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80126de:	ea13 0f0a 	tst.w	r3, sl
 80126e2:	e7e1      	b.n	80126a8 <_strtod_l+0x8d8>
 80126e4:	f7ff fb56 	bl	8011d94 <sulp>
 80126e8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80126ec:	ec53 2b10 	vmov	r2, r3, d0
 80126f0:	f7ed fda2 	bl	8000238 <__aeabi_dsub>
 80126f4:	2200      	movs	r2, #0
 80126f6:	2300      	movs	r3, #0
 80126f8:	4682      	mov	sl, r0
 80126fa:	468b      	mov	fp, r1
 80126fc:	f7ee f9bc 	bl	8000a78 <__aeabi_dcmpeq>
 8012700:	2800      	cmp	r0, #0
 8012702:	d0c1      	beq.n	8012688 <_strtod_l+0x8b8>
 8012704:	e61a      	b.n	801233c <_strtod_l+0x56c>
 8012706:	4641      	mov	r1, r8
 8012708:	4620      	mov	r0, r4
 801270a:	f7ff facd 	bl	8011ca8 <__ratio>
 801270e:	ec57 6b10 	vmov	r6, r7, d0
 8012712:	2200      	movs	r2, #0
 8012714:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8012718:	4630      	mov	r0, r6
 801271a:	4639      	mov	r1, r7
 801271c:	f7ee f9c0 	bl	8000aa0 <__aeabi_dcmple>
 8012720:	2800      	cmp	r0, #0
 8012722:	d06f      	beq.n	8012804 <_strtod_l+0xa34>
 8012724:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012726:	2b00      	cmp	r3, #0
 8012728:	d17a      	bne.n	8012820 <_strtod_l+0xa50>
 801272a:	f1ba 0f00 	cmp.w	sl, #0
 801272e:	d158      	bne.n	80127e2 <_strtod_l+0xa12>
 8012730:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012732:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8012736:	2b00      	cmp	r3, #0
 8012738:	d15a      	bne.n	80127f0 <_strtod_l+0xa20>
 801273a:	4b64      	ldr	r3, [pc, #400]	@ (80128cc <_strtod_l+0xafc>)
 801273c:	2200      	movs	r2, #0
 801273e:	4630      	mov	r0, r6
 8012740:	4639      	mov	r1, r7
 8012742:	f7ee f9a3 	bl	8000a8c <__aeabi_dcmplt>
 8012746:	2800      	cmp	r0, #0
 8012748:	d159      	bne.n	80127fe <_strtod_l+0xa2e>
 801274a:	4630      	mov	r0, r6
 801274c:	4639      	mov	r1, r7
 801274e:	4b60      	ldr	r3, [pc, #384]	@ (80128d0 <_strtod_l+0xb00>)
 8012750:	2200      	movs	r2, #0
 8012752:	f7ed ff29 	bl	80005a8 <__aeabi_dmul>
 8012756:	4606      	mov	r6, r0
 8012758:	460f      	mov	r7, r1
 801275a:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 801275e:	9606      	str	r6, [sp, #24]
 8012760:	9307      	str	r3, [sp, #28]
 8012762:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012766:	4d57      	ldr	r5, [pc, #348]	@ (80128c4 <_strtod_l+0xaf4>)
 8012768:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 801276c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801276e:	401d      	ands	r5, r3
 8012770:	4b58      	ldr	r3, [pc, #352]	@ (80128d4 <_strtod_l+0xb04>)
 8012772:	429d      	cmp	r5, r3
 8012774:	f040 80b2 	bne.w	80128dc <_strtod_l+0xb0c>
 8012778:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801277a:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 801277e:	ec4b ab10 	vmov	d0, sl, fp
 8012782:	f7ff f9c9 	bl	8011b18 <__ulp>
 8012786:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801278a:	ec51 0b10 	vmov	r0, r1, d0
 801278e:	f7ed ff0b 	bl	80005a8 <__aeabi_dmul>
 8012792:	4652      	mov	r2, sl
 8012794:	465b      	mov	r3, fp
 8012796:	f7ed fd51 	bl	800023c <__adddf3>
 801279a:	460b      	mov	r3, r1
 801279c:	4949      	ldr	r1, [pc, #292]	@ (80128c4 <_strtod_l+0xaf4>)
 801279e:	4a4e      	ldr	r2, [pc, #312]	@ (80128d8 <_strtod_l+0xb08>)
 80127a0:	4019      	ands	r1, r3
 80127a2:	4291      	cmp	r1, r2
 80127a4:	4682      	mov	sl, r0
 80127a6:	d942      	bls.n	801282e <_strtod_l+0xa5e>
 80127a8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80127aa:	4b47      	ldr	r3, [pc, #284]	@ (80128c8 <_strtod_l+0xaf8>)
 80127ac:	429a      	cmp	r2, r3
 80127ae:	d103      	bne.n	80127b8 <_strtod_l+0x9e8>
 80127b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80127b2:	3301      	adds	r3, #1
 80127b4:	f43f ad2f 	beq.w	8012216 <_strtod_l+0x446>
 80127b8:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 80128c8 <_strtod_l+0xaf8>
 80127bc:	f04f 3aff 	mov.w	sl, #4294967295
 80127c0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80127c2:	9805      	ldr	r0, [sp, #20]
 80127c4:	f7fe fe7c 	bl	80114c0 <_Bfree>
 80127c8:	9805      	ldr	r0, [sp, #20]
 80127ca:	4649      	mov	r1, r9
 80127cc:	f7fe fe78 	bl	80114c0 <_Bfree>
 80127d0:	9805      	ldr	r0, [sp, #20]
 80127d2:	4641      	mov	r1, r8
 80127d4:	f7fe fe74 	bl	80114c0 <_Bfree>
 80127d8:	9805      	ldr	r0, [sp, #20]
 80127da:	4621      	mov	r1, r4
 80127dc:	f7fe fe70 	bl	80114c0 <_Bfree>
 80127e0:	e619      	b.n	8012416 <_strtod_l+0x646>
 80127e2:	f1ba 0f01 	cmp.w	sl, #1
 80127e6:	d103      	bne.n	80127f0 <_strtod_l+0xa20>
 80127e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80127ea:	2b00      	cmp	r3, #0
 80127ec:	f43f ada6 	beq.w	801233c <_strtod_l+0x56c>
 80127f0:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 80128a0 <_strtod_l+0xad0>
 80127f4:	4f35      	ldr	r7, [pc, #212]	@ (80128cc <_strtod_l+0xafc>)
 80127f6:	ed8d 7b06 	vstr	d7, [sp, #24]
 80127fa:	2600      	movs	r6, #0
 80127fc:	e7b1      	b.n	8012762 <_strtod_l+0x992>
 80127fe:	4f34      	ldr	r7, [pc, #208]	@ (80128d0 <_strtod_l+0xb00>)
 8012800:	2600      	movs	r6, #0
 8012802:	e7aa      	b.n	801275a <_strtod_l+0x98a>
 8012804:	4b32      	ldr	r3, [pc, #200]	@ (80128d0 <_strtod_l+0xb00>)
 8012806:	4630      	mov	r0, r6
 8012808:	4639      	mov	r1, r7
 801280a:	2200      	movs	r2, #0
 801280c:	f7ed fecc 	bl	80005a8 <__aeabi_dmul>
 8012810:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012812:	4606      	mov	r6, r0
 8012814:	460f      	mov	r7, r1
 8012816:	2b00      	cmp	r3, #0
 8012818:	d09f      	beq.n	801275a <_strtod_l+0x98a>
 801281a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801281e:	e7a0      	b.n	8012762 <_strtod_l+0x992>
 8012820:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 80128a8 <_strtod_l+0xad8>
 8012824:	ed8d 7b06 	vstr	d7, [sp, #24]
 8012828:	ec57 6b17 	vmov	r6, r7, d7
 801282c:	e799      	b.n	8012762 <_strtod_l+0x992>
 801282e:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8012832:	9b08      	ldr	r3, [sp, #32]
 8012834:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8012838:	2b00      	cmp	r3, #0
 801283a:	d1c1      	bne.n	80127c0 <_strtod_l+0x9f0>
 801283c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8012840:	0d1b      	lsrs	r3, r3, #20
 8012842:	051b      	lsls	r3, r3, #20
 8012844:	429d      	cmp	r5, r3
 8012846:	d1bb      	bne.n	80127c0 <_strtod_l+0x9f0>
 8012848:	4630      	mov	r0, r6
 801284a:	4639      	mov	r1, r7
 801284c:	f7ee fa0c 	bl	8000c68 <__aeabi_d2lz>
 8012850:	f7ed fe7c 	bl	800054c <__aeabi_l2d>
 8012854:	4602      	mov	r2, r0
 8012856:	460b      	mov	r3, r1
 8012858:	4630      	mov	r0, r6
 801285a:	4639      	mov	r1, r7
 801285c:	f7ed fcec 	bl	8000238 <__aeabi_dsub>
 8012860:	460b      	mov	r3, r1
 8012862:	4602      	mov	r2, r0
 8012864:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8012868:	f3cb 0613 	ubfx	r6, fp, #0, #20
 801286c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801286e:	ea46 060a 	orr.w	r6, r6, sl
 8012872:	431e      	orrs	r6, r3
 8012874:	d06f      	beq.n	8012956 <_strtod_l+0xb86>
 8012876:	a30e      	add	r3, pc, #56	@ (adr r3, 80128b0 <_strtod_l+0xae0>)
 8012878:	e9d3 2300 	ldrd	r2, r3, [r3]
 801287c:	f7ee f906 	bl	8000a8c <__aeabi_dcmplt>
 8012880:	2800      	cmp	r0, #0
 8012882:	f47f acd3 	bne.w	801222c <_strtod_l+0x45c>
 8012886:	a30c      	add	r3, pc, #48	@ (adr r3, 80128b8 <_strtod_l+0xae8>)
 8012888:	e9d3 2300 	ldrd	r2, r3, [r3]
 801288c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8012890:	f7ee f91a 	bl	8000ac8 <__aeabi_dcmpgt>
 8012894:	2800      	cmp	r0, #0
 8012896:	d093      	beq.n	80127c0 <_strtod_l+0x9f0>
 8012898:	e4c8      	b.n	801222c <_strtod_l+0x45c>
 801289a:	bf00      	nop
 801289c:	f3af 8000 	nop.w
 80128a0:	00000000 	.word	0x00000000
 80128a4:	bff00000 	.word	0xbff00000
 80128a8:	00000000 	.word	0x00000000
 80128ac:	3ff00000 	.word	0x3ff00000
 80128b0:	94a03595 	.word	0x94a03595
 80128b4:	3fdfffff 	.word	0x3fdfffff
 80128b8:	35afe535 	.word	0x35afe535
 80128bc:	3fe00000 	.word	0x3fe00000
 80128c0:	000fffff 	.word	0x000fffff
 80128c4:	7ff00000 	.word	0x7ff00000
 80128c8:	7fefffff 	.word	0x7fefffff
 80128cc:	3ff00000 	.word	0x3ff00000
 80128d0:	3fe00000 	.word	0x3fe00000
 80128d4:	7fe00000 	.word	0x7fe00000
 80128d8:	7c9fffff 	.word	0x7c9fffff
 80128dc:	9b08      	ldr	r3, [sp, #32]
 80128de:	b323      	cbz	r3, 801292a <_strtod_l+0xb5a>
 80128e0:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 80128e4:	d821      	bhi.n	801292a <_strtod_l+0xb5a>
 80128e6:	a328      	add	r3, pc, #160	@ (adr r3, 8012988 <_strtod_l+0xbb8>)
 80128e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80128ec:	4630      	mov	r0, r6
 80128ee:	4639      	mov	r1, r7
 80128f0:	f7ee f8d6 	bl	8000aa0 <__aeabi_dcmple>
 80128f4:	b1a0      	cbz	r0, 8012920 <_strtod_l+0xb50>
 80128f6:	4639      	mov	r1, r7
 80128f8:	4630      	mov	r0, r6
 80128fa:	f7ee f92d 	bl	8000b58 <__aeabi_d2uiz>
 80128fe:	2801      	cmp	r0, #1
 8012900:	bf38      	it	cc
 8012902:	2001      	movcc	r0, #1
 8012904:	f7ed fdd6 	bl	80004b4 <__aeabi_ui2d>
 8012908:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801290a:	4606      	mov	r6, r0
 801290c:	460f      	mov	r7, r1
 801290e:	b9fb      	cbnz	r3, 8012950 <_strtod_l+0xb80>
 8012910:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8012914:	9014      	str	r0, [sp, #80]	@ 0x50
 8012916:	9315      	str	r3, [sp, #84]	@ 0x54
 8012918:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 801291c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8012920:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8012922:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8012926:	1b5b      	subs	r3, r3, r5
 8012928:	9311      	str	r3, [sp, #68]	@ 0x44
 801292a:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 801292e:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8012932:	f7ff f8f1 	bl	8011b18 <__ulp>
 8012936:	4650      	mov	r0, sl
 8012938:	ec53 2b10 	vmov	r2, r3, d0
 801293c:	4659      	mov	r1, fp
 801293e:	f7ed fe33 	bl	80005a8 <__aeabi_dmul>
 8012942:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8012946:	f7ed fc79 	bl	800023c <__adddf3>
 801294a:	4682      	mov	sl, r0
 801294c:	468b      	mov	fp, r1
 801294e:	e770      	b.n	8012832 <_strtod_l+0xa62>
 8012950:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8012954:	e7e0      	b.n	8012918 <_strtod_l+0xb48>
 8012956:	a30e      	add	r3, pc, #56	@ (adr r3, 8012990 <_strtod_l+0xbc0>)
 8012958:	e9d3 2300 	ldrd	r2, r3, [r3]
 801295c:	f7ee f896 	bl	8000a8c <__aeabi_dcmplt>
 8012960:	e798      	b.n	8012894 <_strtod_l+0xac4>
 8012962:	2300      	movs	r3, #0
 8012964:	930e      	str	r3, [sp, #56]	@ 0x38
 8012966:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8012968:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801296a:	6013      	str	r3, [r2, #0]
 801296c:	f7ff ba6d 	b.w	8011e4a <_strtod_l+0x7a>
 8012970:	2a65      	cmp	r2, #101	@ 0x65
 8012972:	f43f ab68 	beq.w	8012046 <_strtod_l+0x276>
 8012976:	2a45      	cmp	r2, #69	@ 0x45
 8012978:	f43f ab65 	beq.w	8012046 <_strtod_l+0x276>
 801297c:	2301      	movs	r3, #1
 801297e:	f7ff bba0 	b.w	80120c2 <_strtod_l+0x2f2>
 8012982:	bf00      	nop
 8012984:	f3af 8000 	nop.w
 8012988:	ffc00000 	.word	0xffc00000
 801298c:	41dfffff 	.word	0x41dfffff
 8012990:	94a03595 	.word	0x94a03595
 8012994:	3fcfffff 	.word	0x3fcfffff

08012998 <_strtod_r>:
 8012998:	4b01      	ldr	r3, [pc, #4]	@ (80129a0 <_strtod_r+0x8>)
 801299a:	f7ff ba19 	b.w	8011dd0 <_strtod_l>
 801299e:	bf00      	nop
 80129a0:	20000190 	.word	0x20000190

080129a4 <__ssputs_r>:
 80129a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129a8:	688e      	ldr	r6, [r1, #8]
 80129aa:	461f      	mov	r7, r3
 80129ac:	42be      	cmp	r6, r7
 80129ae:	680b      	ldr	r3, [r1, #0]
 80129b0:	4682      	mov	sl, r0
 80129b2:	460c      	mov	r4, r1
 80129b4:	4690      	mov	r8, r2
 80129b6:	d82d      	bhi.n	8012a14 <__ssputs_r+0x70>
 80129b8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80129bc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80129c0:	d026      	beq.n	8012a10 <__ssputs_r+0x6c>
 80129c2:	6965      	ldr	r5, [r4, #20]
 80129c4:	6909      	ldr	r1, [r1, #16]
 80129c6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80129ca:	eba3 0901 	sub.w	r9, r3, r1
 80129ce:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80129d2:	1c7b      	adds	r3, r7, #1
 80129d4:	444b      	add	r3, r9
 80129d6:	106d      	asrs	r5, r5, #1
 80129d8:	429d      	cmp	r5, r3
 80129da:	bf38      	it	cc
 80129dc:	461d      	movcc	r5, r3
 80129de:	0553      	lsls	r3, r2, #21
 80129e0:	d527      	bpl.n	8012a32 <__ssputs_r+0x8e>
 80129e2:	4629      	mov	r1, r5
 80129e4:	f7fe fca0 	bl	8011328 <_malloc_r>
 80129e8:	4606      	mov	r6, r0
 80129ea:	b360      	cbz	r0, 8012a46 <__ssputs_r+0xa2>
 80129ec:	6921      	ldr	r1, [r4, #16]
 80129ee:	464a      	mov	r2, r9
 80129f0:	f7fd fdb9 	bl	8010566 <memcpy>
 80129f4:	89a3      	ldrh	r3, [r4, #12]
 80129f6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80129fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80129fe:	81a3      	strh	r3, [r4, #12]
 8012a00:	6126      	str	r6, [r4, #16]
 8012a02:	6165      	str	r5, [r4, #20]
 8012a04:	444e      	add	r6, r9
 8012a06:	eba5 0509 	sub.w	r5, r5, r9
 8012a0a:	6026      	str	r6, [r4, #0]
 8012a0c:	60a5      	str	r5, [r4, #8]
 8012a0e:	463e      	mov	r6, r7
 8012a10:	42be      	cmp	r6, r7
 8012a12:	d900      	bls.n	8012a16 <__ssputs_r+0x72>
 8012a14:	463e      	mov	r6, r7
 8012a16:	6820      	ldr	r0, [r4, #0]
 8012a18:	4632      	mov	r2, r6
 8012a1a:	4641      	mov	r1, r8
 8012a1c:	f000 f9c6 	bl	8012dac <memmove>
 8012a20:	68a3      	ldr	r3, [r4, #8]
 8012a22:	1b9b      	subs	r3, r3, r6
 8012a24:	60a3      	str	r3, [r4, #8]
 8012a26:	6823      	ldr	r3, [r4, #0]
 8012a28:	4433      	add	r3, r6
 8012a2a:	6023      	str	r3, [r4, #0]
 8012a2c:	2000      	movs	r0, #0
 8012a2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012a32:	462a      	mov	r2, r5
 8012a34:	f000 fd7d 	bl	8013532 <_realloc_r>
 8012a38:	4606      	mov	r6, r0
 8012a3a:	2800      	cmp	r0, #0
 8012a3c:	d1e0      	bne.n	8012a00 <__ssputs_r+0x5c>
 8012a3e:	6921      	ldr	r1, [r4, #16]
 8012a40:	4650      	mov	r0, sl
 8012a42:	f7fe fbfd 	bl	8011240 <_free_r>
 8012a46:	230c      	movs	r3, #12
 8012a48:	f8ca 3000 	str.w	r3, [sl]
 8012a4c:	89a3      	ldrh	r3, [r4, #12]
 8012a4e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012a52:	81a3      	strh	r3, [r4, #12]
 8012a54:	f04f 30ff 	mov.w	r0, #4294967295
 8012a58:	e7e9      	b.n	8012a2e <__ssputs_r+0x8a>
	...

08012a5c <_svfiprintf_r>:
 8012a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a60:	4698      	mov	r8, r3
 8012a62:	898b      	ldrh	r3, [r1, #12]
 8012a64:	061b      	lsls	r3, r3, #24
 8012a66:	b09d      	sub	sp, #116	@ 0x74
 8012a68:	4607      	mov	r7, r0
 8012a6a:	460d      	mov	r5, r1
 8012a6c:	4614      	mov	r4, r2
 8012a6e:	d510      	bpl.n	8012a92 <_svfiprintf_r+0x36>
 8012a70:	690b      	ldr	r3, [r1, #16]
 8012a72:	b973      	cbnz	r3, 8012a92 <_svfiprintf_r+0x36>
 8012a74:	2140      	movs	r1, #64	@ 0x40
 8012a76:	f7fe fc57 	bl	8011328 <_malloc_r>
 8012a7a:	6028      	str	r0, [r5, #0]
 8012a7c:	6128      	str	r0, [r5, #16]
 8012a7e:	b930      	cbnz	r0, 8012a8e <_svfiprintf_r+0x32>
 8012a80:	230c      	movs	r3, #12
 8012a82:	603b      	str	r3, [r7, #0]
 8012a84:	f04f 30ff 	mov.w	r0, #4294967295
 8012a88:	b01d      	add	sp, #116	@ 0x74
 8012a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a8e:	2340      	movs	r3, #64	@ 0x40
 8012a90:	616b      	str	r3, [r5, #20]
 8012a92:	2300      	movs	r3, #0
 8012a94:	9309      	str	r3, [sp, #36]	@ 0x24
 8012a96:	2320      	movs	r3, #32
 8012a98:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8012a9c:	f8cd 800c 	str.w	r8, [sp, #12]
 8012aa0:	2330      	movs	r3, #48	@ 0x30
 8012aa2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8012c40 <_svfiprintf_r+0x1e4>
 8012aa6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8012aaa:	f04f 0901 	mov.w	r9, #1
 8012aae:	4623      	mov	r3, r4
 8012ab0:	469a      	mov	sl, r3
 8012ab2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012ab6:	b10a      	cbz	r2, 8012abc <_svfiprintf_r+0x60>
 8012ab8:	2a25      	cmp	r2, #37	@ 0x25
 8012aba:	d1f9      	bne.n	8012ab0 <_svfiprintf_r+0x54>
 8012abc:	ebba 0b04 	subs.w	fp, sl, r4
 8012ac0:	d00b      	beq.n	8012ada <_svfiprintf_r+0x7e>
 8012ac2:	465b      	mov	r3, fp
 8012ac4:	4622      	mov	r2, r4
 8012ac6:	4629      	mov	r1, r5
 8012ac8:	4638      	mov	r0, r7
 8012aca:	f7ff ff6b 	bl	80129a4 <__ssputs_r>
 8012ace:	3001      	adds	r0, #1
 8012ad0:	f000 80a7 	beq.w	8012c22 <_svfiprintf_r+0x1c6>
 8012ad4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012ad6:	445a      	add	r2, fp
 8012ad8:	9209      	str	r2, [sp, #36]	@ 0x24
 8012ada:	f89a 3000 	ldrb.w	r3, [sl]
 8012ade:	2b00      	cmp	r3, #0
 8012ae0:	f000 809f 	beq.w	8012c22 <_svfiprintf_r+0x1c6>
 8012ae4:	2300      	movs	r3, #0
 8012ae6:	f04f 32ff 	mov.w	r2, #4294967295
 8012aea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8012aee:	f10a 0a01 	add.w	sl, sl, #1
 8012af2:	9304      	str	r3, [sp, #16]
 8012af4:	9307      	str	r3, [sp, #28]
 8012af6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8012afa:	931a      	str	r3, [sp, #104]	@ 0x68
 8012afc:	4654      	mov	r4, sl
 8012afe:	2205      	movs	r2, #5
 8012b00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012b04:	484e      	ldr	r0, [pc, #312]	@ (8012c40 <_svfiprintf_r+0x1e4>)
 8012b06:	f7ed fb3b 	bl	8000180 <memchr>
 8012b0a:	9a04      	ldr	r2, [sp, #16]
 8012b0c:	b9d8      	cbnz	r0, 8012b46 <_svfiprintf_r+0xea>
 8012b0e:	06d0      	lsls	r0, r2, #27
 8012b10:	bf44      	itt	mi
 8012b12:	2320      	movmi	r3, #32
 8012b14:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8012b18:	0711      	lsls	r1, r2, #28
 8012b1a:	bf44      	itt	mi
 8012b1c:	232b      	movmi	r3, #43	@ 0x2b
 8012b1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8012b22:	f89a 3000 	ldrb.w	r3, [sl]
 8012b26:	2b2a      	cmp	r3, #42	@ 0x2a
 8012b28:	d015      	beq.n	8012b56 <_svfiprintf_r+0xfa>
 8012b2a:	9a07      	ldr	r2, [sp, #28]
 8012b2c:	4654      	mov	r4, sl
 8012b2e:	2000      	movs	r0, #0
 8012b30:	f04f 0c0a 	mov.w	ip, #10
 8012b34:	4621      	mov	r1, r4
 8012b36:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012b3a:	3b30      	subs	r3, #48	@ 0x30
 8012b3c:	2b09      	cmp	r3, #9
 8012b3e:	d94b      	bls.n	8012bd8 <_svfiprintf_r+0x17c>
 8012b40:	b1b0      	cbz	r0, 8012b70 <_svfiprintf_r+0x114>
 8012b42:	9207      	str	r2, [sp, #28]
 8012b44:	e014      	b.n	8012b70 <_svfiprintf_r+0x114>
 8012b46:	eba0 0308 	sub.w	r3, r0, r8
 8012b4a:	fa09 f303 	lsl.w	r3, r9, r3
 8012b4e:	4313      	orrs	r3, r2
 8012b50:	9304      	str	r3, [sp, #16]
 8012b52:	46a2      	mov	sl, r4
 8012b54:	e7d2      	b.n	8012afc <_svfiprintf_r+0xa0>
 8012b56:	9b03      	ldr	r3, [sp, #12]
 8012b58:	1d19      	adds	r1, r3, #4
 8012b5a:	681b      	ldr	r3, [r3, #0]
 8012b5c:	9103      	str	r1, [sp, #12]
 8012b5e:	2b00      	cmp	r3, #0
 8012b60:	bfbb      	ittet	lt
 8012b62:	425b      	neglt	r3, r3
 8012b64:	f042 0202 	orrlt.w	r2, r2, #2
 8012b68:	9307      	strge	r3, [sp, #28]
 8012b6a:	9307      	strlt	r3, [sp, #28]
 8012b6c:	bfb8      	it	lt
 8012b6e:	9204      	strlt	r2, [sp, #16]
 8012b70:	7823      	ldrb	r3, [r4, #0]
 8012b72:	2b2e      	cmp	r3, #46	@ 0x2e
 8012b74:	d10a      	bne.n	8012b8c <_svfiprintf_r+0x130>
 8012b76:	7863      	ldrb	r3, [r4, #1]
 8012b78:	2b2a      	cmp	r3, #42	@ 0x2a
 8012b7a:	d132      	bne.n	8012be2 <_svfiprintf_r+0x186>
 8012b7c:	9b03      	ldr	r3, [sp, #12]
 8012b7e:	1d1a      	adds	r2, r3, #4
 8012b80:	681b      	ldr	r3, [r3, #0]
 8012b82:	9203      	str	r2, [sp, #12]
 8012b84:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8012b88:	3402      	adds	r4, #2
 8012b8a:	9305      	str	r3, [sp, #20]
 8012b8c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8012c50 <_svfiprintf_r+0x1f4>
 8012b90:	7821      	ldrb	r1, [r4, #0]
 8012b92:	2203      	movs	r2, #3
 8012b94:	4650      	mov	r0, sl
 8012b96:	f7ed faf3 	bl	8000180 <memchr>
 8012b9a:	b138      	cbz	r0, 8012bac <_svfiprintf_r+0x150>
 8012b9c:	9b04      	ldr	r3, [sp, #16]
 8012b9e:	eba0 000a 	sub.w	r0, r0, sl
 8012ba2:	2240      	movs	r2, #64	@ 0x40
 8012ba4:	4082      	lsls	r2, r0
 8012ba6:	4313      	orrs	r3, r2
 8012ba8:	3401      	adds	r4, #1
 8012baa:	9304      	str	r3, [sp, #16]
 8012bac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012bb0:	4824      	ldr	r0, [pc, #144]	@ (8012c44 <_svfiprintf_r+0x1e8>)
 8012bb2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8012bb6:	2206      	movs	r2, #6
 8012bb8:	f7ed fae2 	bl	8000180 <memchr>
 8012bbc:	2800      	cmp	r0, #0
 8012bbe:	d036      	beq.n	8012c2e <_svfiprintf_r+0x1d2>
 8012bc0:	4b21      	ldr	r3, [pc, #132]	@ (8012c48 <_svfiprintf_r+0x1ec>)
 8012bc2:	bb1b      	cbnz	r3, 8012c0c <_svfiprintf_r+0x1b0>
 8012bc4:	9b03      	ldr	r3, [sp, #12]
 8012bc6:	3307      	adds	r3, #7
 8012bc8:	f023 0307 	bic.w	r3, r3, #7
 8012bcc:	3308      	adds	r3, #8
 8012bce:	9303      	str	r3, [sp, #12]
 8012bd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012bd2:	4433      	add	r3, r6
 8012bd4:	9309      	str	r3, [sp, #36]	@ 0x24
 8012bd6:	e76a      	b.n	8012aae <_svfiprintf_r+0x52>
 8012bd8:	fb0c 3202 	mla	r2, ip, r2, r3
 8012bdc:	460c      	mov	r4, r1
 8012bde:	2001      	movs	r0, #1
 8012be0:	e7a8      	b.n	8012b34 <_svfiprintf_r+0xd8>
 8012be2:	2300      	movs	r3, #0
 8012be4:	3401      	adds	r4, #1
 8012be6:	9305      	str	r3, [sp, #20]
 8012be8:	4619      	mov	r1, r3
 8012bea:	f04f 0c0a 	mov.w	ip, #10
 8012bee:	4620      	mov	r0, r4
 8012bf0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012bf4:	3a30      	subs	r2, #48	@ 0x30
 8012bf6:	2a09      	cmp	r2, #9
 8012bf8:	d903      	bls.n	8012c02 <_svfiprintf_r+0x1a6>
 8012bfa:	2b00      	cmp	r3, #0
 8012bfc:	d0c6      	beq.n	8012b8c <_svfiprintf_r+0x130>
 8012bfe:	9105      	str	r1, [sp, #20]
 8012c00:	e7c4      	b.n	8012b8c <_svfiprintf_r+0x130>
 8012c02:	fb0c 2101 	mla	r1, ip, r1, r2
 8012c06:	4604      	mov	r4, r0
 8012c08:	2301      	movs	r3, #1
 8012c0a:	e7f0      	b.n	8012bee <_svfiprintf_r+0x192>
 8012c0c:	ab03      	add	r3, sp, #12
 8012c0e:	9300      	str	r3, [sp, #0]
 8012c10:	462a      	mov	r2, r5
 8012c12:	4b0e      	ldr	r3, [pc, #56]	@ (8012c4c <_svfiprintf_r+0x1f0>)
 8012c14:	a904      	add	r1, sp, #16
 8012c16:	4638      	mov	r0, r7
 8012c18:	f7fc fd04 	bl	800f624 <_printf_float>
 8012c1c:	1c42      	adds	r2, r0, #1
 8012c1e:	4606      	mov	r6, r0
 8012c20:	d1d6      	bne.n	8012bd0 <_svfiprintf_r+0x174>
 8012c22:	89ab      	ldrh	r3, [r5, #12]
 8012c24:	065b      	lsls	r3, r3, #25
 8012c26:	f53f af2d 	bmi.w	8012a84 <_svfiprintf_r+0x28>
 8012c2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012c2c:	e72c      	b.n	8012a88 <_svfiprintf_r+0x2c>
 8012c2e:	ab03      	add	r3, sp, #12
 8012c30:	9300      	str	r3, [sp, #0]
 8012c32:	462a      	mov	r2, r5
 8012c34:	4b05      	ldr	r3, [pc, #20]	@ (8012c4c <_svfiprintf_r+0x1f0>)
 8012c36:	a904      	add	r1, sp, #16
 8012c38:	4638      	mov	r0, r7
 8012c3a:	f7fc ff8b 	bl	800fb54 <_printf_i>
 8012c3e:	e7ed      	b.n	8012c1c <_svfiprintf_r+0x1c0>
 8012c40:	0801860a 	.word	0x0801860a
 8012c44:	08018614 	.word	0x08018614
 8012c48:	0800f625 	.word	0x0800f625
 8012c4c:	080129a5 	.word	0x080129a5
 8012c50:	08018610 	.word	0x08018610

08012c54 <__sflush_r>:
 8012c54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8012c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c5c:	0716      	lsls	r6, r2, #28
 8012c5e:	4605      	mov	r5, r0
 8012c60:	460c      	mov	r4, r1
 8012c62:	d454      	bmi.n	8012d0e <__sflush_r+0xba>
 8012c64:	684b      	ldr	r3, [r1, #4]
 8012c66:	2b00      	cmp	r3, #0
 8012c68:	dc02      	bgt.n	8012c70 <__sflush_r+0x1c>
 8012c6a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8012c6c:	2b00      	cmp	r3, #0
 8012c6e:	dd48      	ble.n	8012d02 <__sflush_r+0xae>
 8012c70:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8012c72:	2e00      	cmp	r6, #0
 8012c74:	d045      	beq.n	8012d02 <__sflush_r+0xae>
 8012c76:	2300      	movs	r3, #0
 8012c78:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8012c7c:	682f      	ldr	r7, [r5, #0]
 8012c7e:	6a21      	ldr	r1, [r4, #32]
 8012c80:	602b      	str	r3, [r5, #0]
 8012c82:	d030      	beq.n	8012ce6 <__sflush_r+0x92>
 8012c84:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8012c86:	89a3      	ldrh	r3, [r4, #12]
 8012c88:	0759      	lsls	r1, r3, #29
 8012c8a:	d505      	bpl.n	8012c98 <__sflush_r+0x44>
 8012c8c:	6863      	ldr	r3, [r4, #4]
 8012c8e:	1ad2      	subs	r2, r2, r3
 8012c90:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8012c92:	b10b      	cbz	r3, 8012c98 <__sflush_r+0x44>
 8012c94:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8012c96:	1ad2      	subs	r2, r2, r3
 8012c98:	2300      	movs	r3, #0
 8012c9a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8012c9c:	6a21      	ldr	r1, [r4, #32]
 8012c9e:	4628      	mov	r0, r5
 8012ca0:	47b0      	blx	r6
 8012ca2:	1c43      	adds	r3, r0, #1
 8012ca4:	89a3      	ldrh	r3, [r4, #12]
 8012ca6:	d106      	bne.n	8012cb6 <__sflush_r+0x62>
 8012ca8:	6829      	ldr	r1, [r5, #0]
 8012caa:	291d      	cmp	r1, #29
 8012cac:	d82b      	bhi.n	8012d06 <__sflush_r+0xb2>
 8012cae:	4a2a      	ldr	r2, [pc, #168]	@ (8012d58 <__sflush_r+0x104>)
 8012cb0:	40ca      	lsrs	r2, r1
 8012cb2:	07d6      	lsls	r6, r2, #31
 8012cb4:	d527      	bpl.n	8012d06 <__sflush_r+0xb2>
 8012cb6:	2200      	movs	r2, #0
 8012cb8:	6062      	str	r2, [r4, #4]
 8012cba:	04d9      	lsls	r1, r3, #19
 8012cbc:	6922      	ldr	r2, [r4, #16]
 8012cbe:	6022      	str	r2, [r4, #0]
 8012cc0:	d504      	bpl.n	8012ccc <__sflush_r+0x78>
 8012cc2:	1c42      	adds	r2, r0, #1
 8012cc4:	d101      	bne.n	8012cca <__sflush_r+0x76>
 8012cc6:	682b      	ldr	r3, [r5, #0]
 8012cc8:	b903      	cbnz	r3, 8012ccc <__sflush_r+0x78>
 8012cca:	6560      	str	r0, [r4, #84]	@ 0x54
 8012ccc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8012cce:	602f      	str	r7, [r5, #0]
 8012cd0:	b1b9      	cbz	r1, 8012d02 <__sflush_r+0xae>
 8012cd2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8012cd6:	4299      	cmp	r1, r3
 8012cd8:	d002      	beq.n	8012ce0 <__sflush_r+0x8c>
 8012cda:	4628      	mov	r0, r5
 8012cdc:	f7fe fab0 	bl	8011240 <_free_r>
 8012ce0:	2300      	movs	r3, #0
 8012ce2:	6363      	str	r3, [r4, #52]	@ 0x34
 8012ce4:	e00d      	b.n	8012d02 <__sflush_r+0xae>
 8012ce6:	2301      	movs	r3, #1
 8012ce8:	4628      	mov	r0, r5
 8012cea:	47b0      	blx	r6
 8012cec:	4602      	mov	r2, r0
 8012cee:	1c50      	adds	r0, r2, #1
 8012cf0:	d1c9      	bne.n	8012c86 <__sflush_r+0x32>
 8012cf2:	682b      	ldr	r3, [r5, #0]
 8012cf4:	2b00      	cmp	r3, #0
 8012cf6:	d0c6      	beq.n	8012c86 <__sflush_r+0x32>
 8012cf8:	2b1d      	cmp	r3, #29
 8012cfa:	d001      	beq.n	8012d00 <__sflush_r+0xac>
 8012cfc:	2b16      	cmp	r3, #22
 8012cfe:	d11e      	bne.n	8012d3e <__sflush_r+0xea>
 8012d00:	602f      	str	r7, [r5, #0]
 8012d02:	2000      	movs	r0, #0
 8012d04:	e022      	b.n	8012d4c <__sflush_r+0xf8>
 8012d06:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012d0a:	b21b      	sxth	r3, r3
 8012d0c:	e01b      	b.n	8012d46 <__sflush_r+0xf2>
 8012d0e:	690f      	ldr	r7, [r1, #16]
 8012d10:	2f00      	cmp	r7, #0
 8012d12:	d0f6      	beq.n	8012d02 <__sflush_r+0xae>
 8012d14:	0793      	lsls	r3, r2, #30
 8012d16:	680e      	ldr	r6, [r1, #0]
 8012d18:	bf08      	it	eq
 8012d1a:	694b      	ldreq	r3, [r1, #20]
 8012d1c:	600f      	str	r7, [r1, #0]
 8012d1e:	bf18      	it	ne
 8012d20:	2300      	movne	r3, #0
 8012d22:	eba6 0807 	sub.w	r8, r6, r7
 8012d26:	608b      	str	r3, [r1, #8]
 8012d28:	f1b8 0f00 	cmp.w	r8, #0
 8012d2c:	dde9      	ble.n	8012d02 <__sflush_r+0xae>
 8012d2e:	6a21      	ldr	r1, [r4, #32]
 8012d30:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8012d32:	4643      	mov	r3, r8
 8012d34:	463a      	mov	r2, r7
 8012d36:	4628      	mov	r0, r5
 8012d38:	47b0      	blx	r6
 8012d3a:	2800      	cmp	r0, #0
 8012d3c:	dc08      	bgt.n	8012d50 <__sflush_r+0xfc>
 8012d3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012d42:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012d46:	81a3      	strh	r3, [r4, #12]
 8012d48:	f04f 30ff 	mov.w	r0, #4294967295
 8012d4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d50:	4407      	add	r7, r0
 8012d52:	eba8 0800 	sub.w	r8, r8, r0
 8012d56:	e7e7      	b.n	8012d28 <__sflush_r+0xd4>
 8012d58:	20400001 	.word	0x20400001

08012d5c <_fflush_r>:
 8012d5c:	b538      	push	{r3, r4, r5, lr}
 8012d5e:	690b      	ldr	r3, [r1, #16]
 8012d60:	4605      	mov	r5, r0
 8012d62:	460c      	mov	r4, r1
 8012d64:	b913      	cbnz	r3, 8012d6c <_fflush_r+0x10>
 8012d66:	2500      	movs	r5, #0
 8012d68:	4628      	mov	r0, r5
 8012d6a:	bd38      	pop	{r3, r4, r5, pc}
 8012d6c:	b118      	cbz	r0, 8012d76 <_fflush_r+0x1a>
 8012d6e:	6a03      	ldr	r3, [r0, #32]
 8012d70:	b90b      	cbnz	r3, 8012d76 <_fflush_r+0x1a>
 8012d72:	f7fd faa7 	bl	80102c4 <__sinit>
 8012d76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012d7a:	2b00      	cmp	r3, #0
 8012d7c:	d0f3      	beq.n	8012d66 <_fflush_r+0xa>
 8012d7e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8012d80:	07d0      	lsls	r0, r2, #31
 8012d82:	d404      	bmi.n	8012d8e <_fflush_r+0x32>
 8012d84:	0599      	lsls	r1, r3, #22
 8012d86:	d402      	bmi.n	8012d8e <_fflush_r+0x32>
 8012d88:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8012d8a:	f7fd fbea 	bl	8010562 <__retarget_lock_acquire_recursive>
 8012d8e:	4628      	mov	r0, r5
 8012d90:	4621      	mov	r1, r4
 8012d92:	f7ff ff5f 	bl	8012c54 <__sflush_r>
 8012d96:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8012d98:	07da      	lsls	r2, r3, #31
 8012d9a:	4605      	mov	r5, r0
 8012d9c:	d4e4      	bmi.n	8012d68 <_fflush_r+0xc>
 8012d9e:	89a3      	ldrh	r3, [r4, #12]
 8012da0:	059b      	lsls	r3, r3, #22
 8012da2:	d4e1      	bmi.n	8012d68 <_fflush_r+0xc>
 8012da4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8012da6:	f7fd fbdd 	bl	8010564 <__retarget_lock_release_recursive>
 8012daa:	e7dd      	b.n	8012d68 <_fflush_r+0xc>

08012dac <memmove>:
 8012dac:	4288      	cmp	r0, r1
 8012dae:	b510      	push	{r4, lr}
 8012db0:	eb01 0402 	add.w	r4, r1, r2
 8012db4:	d902      	bls.n	8012dbc <memmove+0x10>
 8012db6:	4284      	cmp	r4, r0
 8012db8:	4623      	mov	r3, r4
 8012dba:	d807      	bhi.n	8012dcc <memmove+0x20>
 8012dbc:	1e43      	subs	r3, r0, #1
 8012dbe:	42a1      	cmp	r1, r4
 8012dc0:	d008      	beq.n	8012dd4 <memmove+0x28>
 8012dc2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012dc6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8012dca:	e7f8      	b.n	8012dbe <memmove+0x12>
 8012dcc:	4402      	add	r2, r0
 8012dce:	4601      	mov	r1, r0
 8012dd0:	428a      	cmp	r2, r1
 8012dd2:	d100      	bne.n	8012dd6 <memmove+0x2a>
 8012dd4:	bd10      	pop	{r4, pc}
 8012dd6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012dda:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012dde:	e7f7      	b.n	8012dd0 <memmove+0x24>

08012de0 <strncmp>:
 8012de0:	b510      	push	{r4, lr}
 8012de2:	b16a      	cbz	r2, 8012e00 <strncmp+0x20>
 8012de4:	3901      	subs	r1, #1
 8012de6:	1884      	adds	r4, r0, r2
 8012de8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012dec:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8012df0:	429a      	cmp	r2, r3
 8012df2:	d103      	bne.n	8012dfc <strncmp+0x1c>
 8012df4:	42a0      	cmp	r0, r4
 8012df6:	d001      	beq.n	8012dfc <strncmp+0x1c>
 8012df8:	2a00      	cmp	r2, #0
 8012dfa:	d1f5      	bne.n	8012de8 <strncmp+0x8>
 8012dfc:	1ad0      	subs	r0, r2, r3
 8012dfe:	bd10      	pop	{r4, pc}
 8012e00:	4610      	mov	r0, r2
 8012e02:	e7fc      	b.n	8012dfe <strncmp+0x1e>

08012e04 <_sbrk_r>:
 8012e04:	b538      	push	{r3, r4, r5, lr}
 8012e06:	4d06      	ldr	r5, [pc, #24]	@ (8012e20 <_sbrk_r+0x1c>)
 8012e08:	2300      	movs	r3, #0
 8012e0a:	4604      	mov	r4, r0
 8012e0c:	4608      	mov	r0, r1
 8012e0e:	602b      	str	r3, [r5, #0]
 8012e10:	f7f2 f8b4 	bl	8004f7c <_sbrk>
 8012e14:	1c43      	adds	r3, r0, #1
 8012e16:	d102      	bne.n	8012e1e <_sbrk_r+0x1a>
 8012e18:	682b      	ldr	r3, [r5, #0]
 8012e1a:	b103      	cbz	r3, 8012e1e <_sbrk_r+0x1a>
 8012e1c:	6023      	str	r3, [r4, #0]
 8012e1e:	bd38      	pop	{r3, r4, r5, pc}
 8012e20:	20005b84 	.word	0x20005b84
 8012e24:	00000000 	.word	0x00000000

08012e28 <nan>:
 8012e28:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8012e30 <nan+0x8>
 8012e2c:	4770      	bx	lr
 8012e2e:	bf00      	nop
 8012e30:	00000000 	.word	0x00000000
 8012e34:	7ff80000 	.word	0x7ff80000

08012e38 <__assert_func>:
 8012e38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012e3a:	4614      	mov	r4, r2
 8012e3c:	461a      	mov	r2, r3
 8012e3e:	4b09      	ldr	r3, [pc, #36]	@ (8012e64 <__assert_func+0x2c>)
 8012e40:	681b      	ldr	r3, [r3, #0]
 8012e42:	4605      	mov	r5, r0
 8012e44:	68d8      	ldr	r0, [r3, #12]
 8012e46:	b14c      	cbz	r4, 8012e5c <__assert_func+0x24>
 8012e48:	4b07      	ldr	r3, [pc, #28]	@ (8012e68 <__assert_func+0x30>)
 8012e4a:	9100      	str	r1, [sp, #0]
 8012e4c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012e50:	4906      	ldr	r1, [pc, #24]	@ (8012e6c <__assert_func+0x34>)
 8012e52:	462b      	mov	r3, r5
 8012e54:	f000 fba8 	bl	80135a8 <fiprintf>
 8012e58:	f000 fbb8 	bl	80135cc <abort>
 8012e5c:	4b04      	ldr	r3, [pc, #16]	@ (8012e70 <__assert_func+0x38>)
 8012e5e:	461c      	mov	r4, r3
 8012e60:	e7f3      	b.n	8012e4a <__assert_func+0x12>
 8012e62:	bf00      	nop
 8012e64:	20000140 	.word	0x20000140
 8012e68:	08018623 	.word	0x08018623
 8012e6c:	08018630 	.word	0x08018630
 8012e70:	0801865e 	.word	0x0801865e

08012e74 <_calloc_r>:
 8012e74:	b570      	push	{r4, r5, r6, lr}
 8012e76:	fba1 5402 	umull	r5, r4, r1, r2
 8012e7a:	b934      	cbnz	r4, 8012e8a <_calloc_r+0x16>
 8012e7c:	4629      	mov	r1, r5
 8012e7e:	f7fe fa53 	bl	8011328 <_malloc_r>
 8012e82:	4606      	mov	r6, r0
 8012e84:	b928      	cbnz	r0, 8012e92 <_calloc_r+0x1e>
 8012e86:	4630      	mov	r0, r6
 8012e88:	bd70      	pop	{r4, r5, r6, pc}
 8012e8a:	220c      	movs	r2, #12
 8012e8c:	6002      	str	r2, [r0, #0]
 8012e8e:	2600      	movs	r6, #0
 8012e90:	e7f9      	b.n	8012e86 <_calloc_r+0x12>
 8012e92:	462a      	mov	r2, r5
 8012e94:	4621      	mov	r1, r4
 8012e96:	f7fd fae6 	bl	8010466 <memset>
 8012e9a:	e7f4      	b.n	8012e86 <_calloc_r+0x12>

08012e9c <rshift>:
 8012e9c:	6903      	ldr	r3, [r0, #16]
 8012e9e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8012ea2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012ea6:	ea4f 1261 	mov.w	r2, r1, asr #5
 8012eaa:	f100 0414 	add.w	r4, r0, #20
 8012eae:	dd45      	ble.n	8012f3c <rshift+0xa0>
 8012eb0:	f011 011f 	ands.w	r1, r1, #31
 8012eb4:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8012eb8:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8012ebc:	d10c      	bne.n	8012ed8 <rshift+0x3c>
 8012ebe:	f100 0710 	add.w	r7, r0, #16
 8012ec2:	4629      	mov	r1, r5
 8012ec4:	42b1      	cmp	r1, r6
 8012ec6:	d334      	bcc.n	8012f32 <rshift+0x96>
 8012ec8:	1a9b      	subs	r3, r3, r2
 8012eca:	009b      	lsls	r3, r3, #2
 8012ecc:	1eea      	subs	r2, r5, #3
 8012ece:	4296      	cmp	r6, r2
 8012ed0:	bf38      	it	cc
 8012ed2:	2300      	movcc	r3, #0
 8012ed4:	4423      	add	r3, r4
 8012ed6:	e015      	b.n	8012f04 <rshift+0x68>
 8012ed8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8012edc:	f1c1 0820 	rsb	r8, r1, #32
 8012ee0:	40cf      	lsrs	r7, r1
 8012ee2:	f105 0e04 	add.w	lr, r5, #4
 8012ee6:	46a1      	mov	r9, r4
 8012ee8:	4576      	cmp	r6, lr
 8012eea:	46f4      	mov	ip, lr
 8012eec:	d815      	bhi.n	8012f1a <rshift+0x7e>
 8012eee:	1a9a      	subs	r2, r3, r2
 8012ef0:	0092      	lsls	r2, r2, #2
 8012ef2:	3a04      	subs	r2, #4
 8012ef4:	3501      	adds	r5, #1
 8012ef6:	42ae      	cmp	r6, r5
 8012ef8:	bf38      	it	cc
 8012efa:	2200      	movcc	r2, #0
 8012efc:	18a3      	adds	r3, r4, r2
 8012efe:	50a7      	str	r7, [r4, r2]
 8012f00:	b107      	cbz	r7, 8012f04 <rshift+0x68>
 8012f02:	3304      	adds	r3, #4
 8012f04:	1b1a      	subs	r2, r3, r4
 8012f06:	42a3      	cmp	r3, r4
 8012f08:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8012f0c:	bf08      	it	eq
 8012f0e:	2300      	moveq	r3, #0
 8012f10:	6102      	str	r2, [r0, #16]
 8012f12:	bf08      	it	eq
 8012f14:	6143      	streq	r3, [r0, #20]
 8012f16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f1a:	f8dc c000 	ldr.w	ip, [ip]
 8012f1e:	fa0c fc08 	lsl.w	ip, ip, r8
 8012f22:	ea4c 0707 	orr.w	r7, ip, r7
 8012f26:	f849 7b04 	str.w	r7, [r9], #4
 8012f2a:	f85e 7b04 	ldr.w	r7, [lr], #4
 8012f2e:	40cf      	lsrs	r7, r1
 8012f30:	e7da      	b.n	8012ee8 <rshift+0x4c>
 8012f32:	f851 cb04 	ldr.w	ip, [r1], #4
 8012f36:	f847 cf04 	str.w	ip, [r7, #4]!
 8012f3a:	e7c3      	b.n	8012ec4 <rshift+0x28>
 8012f3c:	4623      	mov	r3, r4
 8012f3e:	e7e1      	b.n	8012f04 <rshift+0x68>

08012f40 <__hexdig_fun>:
 8012f40:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8012f44:	2b09      	cmp	r3, #9
 8012f46:	d802      	bhi.n	8012f4e <__hexdig_fun+0xe>
 8012f48:	3820      	subs	r0, #32
 8012f4a:	b2c0      	uxtb	r0, r0
 8012f4c:	4770      	bx	lr
 8012f4e:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8012f52:	2b05      	cmp	r3, #5
 8012f54:	d801      	bhi.n	8012f5a <__hexdig_fun+0x1a>
 8012f56:	3847      	subs	r0, #71	@ 0x47
 8012f58:	e7f7      	b.n	8012f4a <__hexdig_fun+0xa>
 8012f5a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8012f5e:	2b05      	cmp	r3, #5
 8012f60:	d801      	bhi.n	8012f66 <__hexdig_fun+0x26>
 8012f62:	3827      	subs	r0, #39	@ 0x27
 8012f64:	e7f1      	b.n	8012f4a <__hexdig_fun+0xa>
 8012f66:	2000      	movs	r0, #0
 8012f68:	4770      	bx	lr
	...

08012f6c <__gethex>:
 8012f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f70:	b085      	sub	sp, #20
 8012f72:	468a      	mov	sl, r1
 8012f74:	9302      	str	r3, [sp, #8]
 8012f76:	680b      	ldr	r3, [r1, #0]
 8012f78:	9001      	str	r0, [sp, #4]
 8012f7a:	4690      	mov	r8, r2
 8012f7c:	1c9c      	adds	r4, r3, #2
 8012f7e:	46a1      	mov	r9, r4
 8012f80:	f814 0b01 	ldrb.w	r0, [r4], #1
 8012f84:	2830      	cmp	r0, #48	@ 0x30
 8012f86:	d0fa      	beq.n	8012f7e <__gethex+0x12>
 8012f88:	eba9 0303 	sub.w	r3, r9, r3
 8012f8c:	f1a3 0b02 	sub.w	fp, r3, #2
 8012f90:	f7ff ffd6 	bl	8012f40 <__hexdig_fun>
 8012f94:	4605      	mov	r5, r0
 8012f96:	2800      	cmp	r0, #0
 8012f98:	d168      	bne.n	801306c <__gethex+0x100>
 8012f9a:	49a0      	ldr	r1, [pc, #640]	@ (801321c <__gethex+0x2b0>)
 8012f9c:	2201      	movs	r2, #1
 8012f9e:	4648      	mov	r0, r9
 8012fa0:	f7ff ff1e 	bl	8012de0 <strncmp>
 8012fa4:	4607      	mov	r7, r0
 8012fa6:	2800      	cmp	r0, #0
 8012fa8:	d167      	bne.n	801307a <__gethex+0x10e>
 8012faa:	f899 0001 	ldrb.w	r0, [r9, #1]
 8012fae:	4626      	mov	r6, r4
 8012fb0:	f7ff ffc6 	bl	8012f40 <__hexdig_fun>
 8012fb4:	2800      	cmp	r0, #0
 8012fb6:	d062      	beq.n	801307e <__gethex+0x112>
 8012fb8:	4623      	mov	r3, r4
 8012fba:	7818      	ldrb	r0, [r3, #0]
 8012fbc:	2830      	cmp	r0, #48	@ 0x30
 8012fbe:	4699      	mov	r9, r3
 8012fc0:	f103 0301 	add.w	r3, r3, #1
 8012fc4:	d0f9      	beq.n	8012fba <__gethex+0x4e>
 8012fc6:	f7ff ffbb 	bl	8012f40 <__hexdig_fun>
 8012fca:	fab0 f580 	clz	r5, r0
 8012fce:	096d      	lsrs	r5, r5, #5
 8012fd0:	f04f 0b01 	mov.w	fp, #1
 8012fd4:	464a      	mov	r2, r9
 8012fd6:	4616      	mov	r6, r2
 8012fd8:	3201      	adds	r2, #1
 8012fda:	7830      	ldrb	r0, [r6, #0]
 8012fdc:	f7ff ffb0 	bl	8012f40 <__hexdig_fun>
 8012fe0:	2800      	cmp	r0, #0
 8012fe2:	d1f8      	bne.n	8012fd6 <__gethex+0x6a>
 8012fe4:	498d      	ldr	r1, [pc, #564]	@ (801321c <__gethex+0x2b0>)
 8012fe6:	2201      	movs	r2, #1
 8012fe8:	4630      	mov	r0, r6
 8012fea:	f7ff fef9 	bl	8012de0 <strncmp>
 8012fee:	2800      	cmp	r0, #0
 8012ff0:	d13f      	bne.n	8013072 <__gethex+0x106>
 8012ff2:	b944      	cbnz	r4, 8013006 <__gethex+0x9a>
 8012ff4:	1c74      	adds	r4, r6, #1
 8012ff6:	4622      	mov	r2, r4
 8012ff8:	4616      	mov	r6, r2
 8012ffa:	3201      	adds	r2, #1
 8012ffc:	7830      	ldrb	r0, [r6, #0]
 8012ffe:	f7ff ff9f 	bl	8012f40 <__hexdig_fun>
 8013002:	2800      	cmp	r0, #0
 8013004:	d1f8      	bne.n	8012ff8 <__gethex+0x8c>
 8013006:	1ba4      	subs	r4, r4, r6
 8013008:	00a7      	lsls	r7, r4, #2
 801300a:	7833      	ldrb	r3, [r6, #0]
 801300c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8013010:	2b50      	cmp	r3, #80	@ 0x50
 8013012:	d13e      	bne.n	8013092 <__gethex+0x126>
 8013014:	7873      	ldrb	r3, [r6, #1]
 8013016:	2b2b      	cmp	r3, #43	@ 0x2b
 8013018:	d033      	beq.n	8013082 <__gethex+0x116>
 801301a:	2b2d      	cmp	r3, #45	@ 0x2d
 801301c:	d034      	beq.n	8013088 <__gethex+0x11c>
 801301e:	1c71      	adds	r1, r6, #1
 8013020:	2400      	movs	r4, #0
 8013022:	7808      	ldrb	r0, [r1, #0]
 8013024:	f7ff ff8c 	bl	8012f40 <__hexdig_fun>
 8013028:	1e43      	subs	r3, r0, #1
 801302a:	b2db      	uxtb	r3, r3
 801302c:	2b18      	cmp	r3, #24
 801302e:	d830      	bhi.n	8013092 <__gethex+0x126>
 8013030:	f1a0 0210 	sub.w	r2, r0, #16
 8013034:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8013038:	f7ff ff82 	bl	8012f40 <__hexdig_fun>
 801303c:	f100 3cff 	add.w	ip, r0, #4294967295
 8013040:	fa5f fc8c 	uxtb.w	ip, ip
 8013044:	f1bc 0f18 	cmp.w	ip, #24
 8013048:	f04f 030a 	mov.w	r3, #10
 801304c:	d91e      	bls.n	801308c <__gethex+0x120>
 801304e:	b104      	cbz	r4, 8013052 <__gethex+0xe6>
 8013050:	4252      	negs	r2, r2
 8013052:	4417      	add	r7, r2
 8013054:	f8ca 1000 	str.w	r1, [sl]
 8013058:	b1ed      	cbz	r5, 8013096 <__gethex+0x12a>
 801305a:	f1bb 0f00 	cmp.w	fp, #0
 801305e:	bf0c      	ite	eq
 8013060:	2506      	moveq	r5, #6
 8013062:	2500      	movne	r5, #0
 8013064:	4628      	mov	r0, r5
 8013066:	b005      	add	sp, #20
 8013068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801306c:	2500      	movs	r5, #0
 801306e:	462c      	mov	r4, r5
 8013070:	e7b0      	b.n	8012fd4 <__gethex+0x68>
 8013072:	2c00      	cmp	r4, #0
 8013074:	d1c7      	bne.n	8013006 <__gethex+0x9a>
 8013076:	4627      	mov	r7, r4
 8013078:	e7c7      	b.n	801300a <__gethex+0x9e>
 801307a:	464e      	mov	r6, r9
 801307c:	462f      	mov	r7, r5
 801307e:	2501      	movs	r5, #1
 8013080:	e7c3      	b.n	801300a <__gethex+0x9e>
 8013082:	2400      	movs	r4, #0
 8013084:	1cb1      	adds	r1, r6, #2
 8013086:	e7cc      	b.n	8013022 <__gethex+0xb6>
 8013088:	2401      	movs	r4, #1
 801308a:	e7fb      	b.n	8013084 <__gethex+0x118>
 801308c:	fb03 0002 	mla	r0, r3, r2, r0
 8013090:	e7ce      	b.n	8013030 <__gethex+0xc4>
 8013092:	4631      	mov	r1, r6
 8013094:	e7de      	b.n	8013054 <__gethex+0xe8>
 8013096:	eba6 0309 	sub.w	r3, r6, r9
 801309a:	3b01      	subs	r3, #1
 801309c:	4629      	mov	r1, r5
 801309e:	2b07      	cmp	r3, #7
 80130a0:	dc0a      	bgt.n	80130b8 <__gethex+0x14c>
 80130a2:	9801      	ldr	r0, [sp, #4]
 80130a4:	f7fe f9cc 	bl	8011440 <_Balloc>
 80130a8:	4604      	mov	r4, r0
 80130aa:	b940      	cbnz	r0, 80130be <__gethex+0x152>
 80130ac:	4b5c      	ldr	r3, [pc, #368]	@ (8013220 <__gethex+0x2b4>)
 80130ae:	4602      	mov	r2, r0
 80130b0:	21e4      	movs	r1, #228	@ 0xe4
 80130b2:	485c      	ldr	r0, [pc, #368]	@ (8013224 <__gethex+0x2b8>)
 80130b4:	f7ff fec0 	bl	8012e38 <__assert_func>
 80130b8:	3101      	adds	r1, #1
 80130ba:	105b      	asrs	r3, r3, #1
 80130bc:	e7ef      	b.n	801309e <__gethex+0x132>
 80130be:	f100 0a14 	add.w	sl, r0, #20
 80130c2:	2300      	movs	r3, #0
 80130c4:	4655      	mov	r5, sl
 80130c6:	469b      	mov	fp, r3
 80130c8:	45b1      	cmp	r9, r6
 80130ca:	d337      	bcc.n	801313c <__gethex+0x1d0>
 80130cc:	f845 bb04 	str.w	fp, [r5], #4
 80130d0:	eba5 050a 	sub.w	r5, r5, sl
 80130d4:	10ad      	asrs	r5, r5, #2
 80130d6:	6125      	str	r5, [r4, #16]
 80130d8:	4658      	mov	r0, fp
 80130da:	f7fe faa3 	bl	8011624 <__hi0bits>
 80130de:	016d      	lsls	r5, r5, #5
 80130e0:	f8d8 6000 	ldr.w	r6, [r8]
 80130e4:	1a2d      	subs	r5, r5, r0
 80130e6:	42b5      	cmp	r5, r6
 80130e8:	dd54      	ble.n	8013194 <__gethex+0x228>
 80130ea:	1bad      	subs	r5, r5, r6
 80130ec:	4629      	mov	r1, r5
 80130ee:	4620      	mov	r0, r4
 80130f0:	f7fe fe2f 	bl	8011d52 <__any_on>
 80130f4:	4681      	mov	r9, r0
 80130f6:	b178      	cbz	r0, 8013118 <__gethex+0x1ac>
 80130f8:	1e6b      	subs	r3, r5, #1
 80130fa:	1159      	asrs	r1, r3, #5
 80130fc:	f003 021f 	and.w	r2, r3, #31
 8013100:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8013104:	f04f 0901 	mov.w	r9, #1
 8013108:	fa09 f202 	lsl.w	r2, r9, r2
 801310c:	420a      	tst	r2, r1
 801310e:	d003      	beq.n	8013118 <__gethex+0x1ac>
 8013110:	454b      	cmp	r3, r9
 8013112:	dc36      	bgt.n	8013182 <__gethex+0x216>
 8013114:	f04f 0902 	mov.w	r9, #2
 8013118:	4629      	mov	r1, r5
 801311a:	4620      	mov	r0, r4
 801311c:	f7ff febe 	bl	8012e9c <rshift>
 8013120:	442f      	add	r7, r5
 8013122:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8013126:	42bb      	cmp	r3, r7
 8013128:	da42      	bge.n	80131b0 <__gethex+0x244>
 801312a:	9801      	ldr	r0, [sp, #4]
 801312c:	4621      	mov	r1, r4
 801312e:	f7fe f9c7 	bl	80114c0 <_Bfree>
 8013132:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013134:	2300      	movs	r3, #0
 8013136:	6013      	str	r3, [r2, #0]
 8013138:	25a3      	movs	r5, #163	@ 0xa3
 801313a:	e793      	b.n	8013064 <__gethex+0xf8>
 801313c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8013140:	2a2e      	cmp	r2, #46	@ 0x2e
 8013142:	d012      	beq.n	801316a <__gethex+0x1fe>
 8013144:	2b20      	cmp	r3, #32
 8013146:	d104      	bne.n	8013152 <__gethex+0x1e6>
 8013148:	f845 bb04 	str.w	fp, [r5], #4
 801314c:	f04f 0b00 	mov.w	fp, #0
 8013150:	465b      	mov	r3, fp
 8013152:	7830      	ldrb	r0, [r6, #0]
 8013154:	9303      	str	r3, [sp, #12]
 8013156:	f7ff fef3 	bl	8012f40 <__hexdig_fun>
 801315a:	9b03      	ldr	r3, [sp, #12]
 801315c:	f000 000f 	and.w	r0, r0, #15
 8013160:	4098      	lsls	r0, r3
 8013162:	ea4b 0b00 	orr.w	fp, fp, r0
 8013166:	3304      	adds	r3, #4
 8013168:	e7ae      	b.n	80130c8 <__gethex+0x15c>
 801316a:	45b1      	cmp	r9, r6
 801316c:	d8ea      	bhi.n	8013144 <__gethex+0x1d8>
 801316e:	492b      	ldr	r1, [pc, #172]	@ (801321c <__gethex+0x2b0>)
 8013170:	9303      	str	r3, [sp, #12]
 8013172:	2201      	movs	r2, #1
 8013174:	4630      	mov	r0, r6
 8013176:	f7ff fe33 	bl	8012de0 <strncmp>
 801317a:	9b03      	ldr	r3, [sp, #12]
 801317c:	2800      	cmp	r0, #0
 801317e:	d1e1      	bne.n	8013144 <__gethex+0x1d8>
 8013180:	e7a2      	b.n	80130c8 <__gethex+0x15c>
 8013182:	1ea9      	subs	r1, r5, #2
 8013184:	4620      	mov	r0, r4
 8013186:	f7fe fde4 	bl	8011d52 <__any_on>
 801318a:	2800      	cmp	r0, #0
 801318c:	d0c2      	beq.n	8013114 <__gethex+0x1a8>
 801318e:	f04f 0903 	mov.w	r9, #3
 8013192:	e7c1      	b.n	8013118 <__gethex+0x1ac>
 8013194:	da09      	bge.n	80131aa <__gethex+0x23e>
 8013196:	1b75      	subs	r5, r6, r5
 8013198:	4621      	mov	r1, r4
 801319a:	9801      	ldr	r0, [sp, #4]
 801319c:	462a      	mov	r2, r5
 801319e:	f7fe fb9f 	bl	80118e0 <__lshift>
 80131a2:	1b7f      	subs	r7, r7, r5
 80131a4:	4604      	mov	r4, r0
 80131a6:	f100 0a14 	add.w	sl, r0, #20
 80131aa:	f04f 0900 	mov.w	r9, #0
 80131ae:	e7b8      	b.n	8013122 <__gethex+0x1b6>
 80131b0:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80131b4:	42bd      	cmp	r5, r7
 80131b6:	dd6f      	ble.n	8013298 <__gethex+0x32c>
 80131b8:	1bed      	subs	r5, r5, r7
 80131ba:	42ae      	cmp	r6, r5
 80131bc:	dc34      	bgt.n	8013228 <__gethex+0x2bc>
 80131be:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80131c2:	2b02      	cmp	r3, #2
 80131c4:	d022      	beq.n	801320c <__gethex+0x2a0>
 80131c6:	2b03      	cmp	r3, #3
 80131c8:	d024      	beq.n	8013214 <__gethex+0x2a8>
 80131ca:	2b01      	cmp	r3, #1
 80131cc:	d115      	bne.n	80131fa <__gethex+0x28e>
 80131ce:	42ae      	cmp	r6, r5
 80131d0:	d113      	bne.n	80131fa <__gethex+0x28e>
 80131d2:	2e01      	cmp	r6, #1
 80131d4:	d10b      	bne.n	80131ee <__gethex+0x282>
 80131d6:	9a02      	ldr	r2, [sp, #8]
 80131d8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80131dc:	6013      	str	r3, [r2, #0]
 80131de:	2301      	movs	r3, #1
 80131e0:	6123      	str	r3, [r4, #16]
 80131e2:	f8ca 3000 	str.w	r3, [sl]
 80131e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80131e8:	2562      	movs	r5, #98	@ 0x62
 80131ea:	601c      	str	r4, [r3, #0]
 80131ec:	e73a      	b.n	8013064 <__gethex+0xf8>
 80131ee:	1e71      	subs	r1, r6, #1
 80131f0:	4620      	mov	r0, r4
 80131f2:	f7fe fdae 	bl	8011d52 <__any_on>
 80131f6:	2800      	cmp	r0, #0
 80131f8:	d1ed      	bne.n	80131d6 <__gethex+0x26a>
 80131fa:	9801      	ldr	r0, [sp, #4]
 80131fc:	4621      	mov	r1, r4
 80131fe:	f7fe f95f 	bl	80114c0 <_Bfree>
 8013202:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013204:	2300      	movs	r3, #0
 8013206:	6013      	str	r3, [r2, #0]
 8013208:	2550      	movs	r5, #80	@ 0x50
 801320a:	e72b      	b.n	8013064 <__gethex+0xf8>
 801320c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801320e:	2b00      	cmp	r3, #0
 8013210:	d1f3      	bne.n	80131fa <__gethex+0x28e>
 8013212:	e7e0      	b.n	80131d6 <__gethex+0x26a>
 8013214:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013216:	2b00      	cmp	r3, #0
 8013218:	d1dd      	bne.n	80131d6 <__gethex+0x26a>
 801321a:	e7ee      	b.n	80131fa <__gethex+0x28e>
 801321c:	08018608 	.word	0x08018608
 8013220:	0801859e 	.word	0x0801859e
 8013224:	0801865f 	.word	0x0801865f
 8013228:	1e6f      	subs	r7, r5, #1
 801322a:	f1b9 0f00 	cmp.w	r9, #0
 801322e:	d130      	bne.n	8013292 <__gethex+0x326>
 8013230:	b127      	cbz	r7, 801323c <__gethex+0x2d0>
 8013232:	4639      	mov	r1, r7
 8013234:	4620      	mov	r0, r4
 8013236:	f7fe fd8c 	bl	8011d52 <__any_on>
 801323a:	4681      	mov	r9, r0
 801323c:	117a      	asrs	r2, r7, #5
 801323e:	2301      	movs	r3, #1
 8013240:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8013244:	f007 071f 	and.w	r7, r7, #31
 8013248:	40bb      	lsls	r3, r7
 801324a:	4213      	tst	r3, r2
 801324c:	4629      	mov	r1, r5
 801324e:	4620      	mov	r0, r4
 8013250:	bf18      	it	ne
 8013252:	f049 0902 	orrne.w	r9, r9, #2
 8013256:	f7ff fe21 	bl	8012e9c <rshift>
 801325a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 801325e:	1b76      	subs	r6, r6, r5
 8013260:	2502      	movs	r5, #2
 8013262:	f1b9 0f00 	cmp.w	r9, #0
 8013266:	d047      	beq.n	80132f8 <__gethex+0x38c>
 8013268:	f8d8 300c 	ldr.w	r3, [r8, #12]
 801326c:	2b02      	cmp	r3, #2
 801326e:	d015      	beq.n	801329c <__gethex+0x330>
 8013270:	2b03      	cmp	r3, #3
 8013272:	d017      	beq.n	80132a4 <__gethex+0x338>
 8013274:	2b01      	cmp	r3, #1
 8013276:	d109      	bne.n	801328c <__gethex+0x320>
 8013278:	f019 0f02 	tst.w	r9, #2
 801327c:	d006      	beq.n	801328c <__gethex+0x320>
 801327e:	f8da 3000 	ldr.w	r3, [sl]
 8013282:	ea49 0903 	orr.w	r9, r9, r3
 8013286:	f019 0f01 	tst.w	r9, #1
 801328a:	d10e      	bne.n	80132aa <__gethex+0x33e>
 801328c:	f045 0510 	orr.w	r5, r5, #16
 8013290:	e032      	b.n	80132f8 <__gethex+0x38c>
 8013292:	f04f 0901 	mov.w	r9, #1
 8013296:	e7d1      	b.n	801323c <__gethex+0x2d0>
 8013298:	2501      	movs	r5, #1
 801329a:	e7e2      	b.n	8013262 <__gethex+0x2f6>
 801329c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801329e:	f1c3 0301 	rsb	r3, r3, #1
 80132a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80132a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80132a6:	2b00      	cmp	r3, #0
 80132a8:	d0f0      	beq.n	801328c <__gethex+0x320>
 80132aa:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80132ae:	f104 0314 	add.w	r3, r4, #20
 80132b2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80132b6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80132ba:	f04f 0c00 	mov.w	ip, #0
 80132be:	4618      	mov	r0, r3
 80132c0:	f853 2b04 	ldr.w	r2, [r3], #4
 80132c4:	f1b2 3fff 	cmp.w	r2, #4294967295
 80132c8:	d01b      	beq.n	8013302 <__gethex+0x396>
 80132ca:	3201      	adds	r2, #1
 80132cc:	6002      	str	r2, [r0, #0]
 80132ce:	2d02      	cmp	r5, #2
 80132d0:	f104 0314 	add.w	r3, r4, #20
 80132d4:	d13c      	bne.n	8013350 <__gethex+0x3e4>
 80132d6:	f8d8 2000 	ldr.w	r2, [r8]
 80132da:	3a01      	subs	r2, #1
 80132dc:	42b2      	cmp	r2, r6
 80132de:	d109      	bne.n	80132f4 <__gethex+0x388>
 80132e0:	1171      	asrs	r1, r6, #5
 80132e2:	2201      	movs	r2, #1
 80132e4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80132e8:	f006 061f 	and.w	r6, r6, #31
 80132ec:	fa02 f606 	lsl.w	r6, r2, r6
 80132f0:	421e      	tst	r6, r3
 80132f2:	d13a      	bne.n	801336a <__gethex+0x3fe>
 80132f4:	f045 0520 	orr.w	r5, r5, #32
 80132f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80132fa:	601c      	str	r4, [r3, #0]
 80132fc:	9b02      	ldr	r3, [sp, #8]
 80132fe:	601f      	str	r7, [r3, #0]
 8013300:	e6b0      	b.n	8013064 <__gethex+0xf8>
 8013302:	4299      	cmp	r1, r3
 8013304:	f843 cc04 	str.w	ip, [r3, #-4]
 8013308:	d8d9      	bhi.n	80132be <__gethex+0x352>
 801330a:	68a3      	ldr	r3, [r4, #8]
 801330c:	459b      	cmp	fp, r3
 801330e:	db17      	blt.n	8013340 <__gethex+0x3d4>
 8013310:	6861      	ldr	r1, [r4, #4]
 8013312:	9801      	ldr	r0, [sp, #4]
 8013314:	3101      	adds	r1, #1
 8013316:	f7fe f893 	bl	8011440 <_Balloc>
 801331a:	4681      	mov	r9, r0
 801331c:	b918      	cbnz	r0, 8013326 <__gethex+0x3ba>
 801331e:	4b1a      	ldr	r3, [pc, #104]	@ (8013388 <__gethex+0x41c>)
 8013320:	4602      	mov	r2, r0
 8013322:	2184      	movs	r1, #132	@ 0x84
 8013324:	e6c5      	b.n	80130b2 <__gethex+0x146>
 8013326:	6922      	ldr	r2, [r4, #16]
 8013328:	3202      	adds	r2, #2
 801332a:	f104 010c 	add.w	r1, r4, #12
 801332e:	0092      	lsls	r2, r2, #2
 8013330:	300c      	adds	r0, #12
 8013332:	f7fd f918 	bl	8010566 <memcpy>
 8013336:	4621      	mov	r1, r4
 8013338:	9801      	ldr	r0, [sp, #4]
 801333a:	f7fe f8c1 	bl	80114c0 <_Bfree>
 801333e:	464c      	mov	r4, r9
 8013340:	6923      	ldr	r3, [r4, #16]
 8013342:	1c5a      	adds	r2, r3, #1
 8013344:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8013348:	6122      	str	r2, [r4, #16]
 801334a:	2201      	movs	r2, #1
 801334c:	615a      	str	r2, [r3, #20]
 801334e:	e7be      	b.n	80132ce <__gethex+0x362>
 8013350:	6922      	ldr	r2, [r4, #16]
 8013352:	455a      	cmp	r2, fp
 8013354:	dd0b      	ble.n	801336e <__gethex+0x402>
 8013356:	2101      	movs	r1, #1
 8013358:	4620      	mov	r0, r4
 801335a:	f7ff fd9f 	bl	8012e9c <rshift>
 801335e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8013362:	3701      	adds	r7, #1
 8013364:	42bb      	cmp	r3, r7
 8013366:	f6ff aee0 	blt.w	801312a <__gethex+0x1be>
 801336a:	2501      	movs	r5, #1
 801336c:	e7c2      	b.n	80132f4 <__gethex+0x388>
 801336e:	f016 061f 	ands.w	r6, r6, #31
 8013372:	d0fa      	beq.n	801336a <__gethex+0x3fe>
 8013374:	4453      	add	r3, sl
 8013376:	f1c6 0620 	rsb	r6, r6, #32
 801337a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 801337e:	f7fe f951 	bl	8011624 <__hi0bits>
 8013382:	42b0      	cmp	r0, r6
 8013384:	dbe7      	blt.n	8013356 <__gethex+0x3ea>
 8013386:	e7f0      	b.n	801336a <__gethex+0x3fe>
 8013388:	0801859e 	.word	0x0801859e

0801338c <L_shift>:
 801338c:	f1c2 0208 	rsb	r2, r2, #8
 8013390:	0092      	lsls	r2, r2, #2
 8013392:	b570      	push	{r4, r5, r6, lr}
 8013394:	f1c2 0620 	rsb	r6, r2, #32
 8013398:	6843      	ldr	r3, [r0, #4]
 801339a:	6804      	ldr	r4, [r0, #0]
 801339c:	fa03 f506 	lsl.w	r5, r3, r6
 80133a0:	432c      	orrs	r4, r5
 80133a2:	40d3      	lsrs	r3, r2
 80133a4:	6004      	str	r4, [r0, #0]
 80133a6:	f840 3f04 	str.w	r3, [r0, #4]!
 80133aa:	4288      	cmp	r0, r1
 80133ac:	d3f4      	bcc.n	8013398 <L_shift+0xc>
 80133ae:	bd70      	pop	{r4, r5, r6, pc}

080133b0 <__match>:
 80133b0:	b530      	push	{r4, r5, lr}
 80133b2:	6803      	ldr	r3, [r0, #0]
 80133b4:	3301      	adds	r3, #1
 80133b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80133ba:	b914      	cbnz	r4, 80133c2 <__match+0x12>
 80133bc:	6003      	str	r3, [r0, #0]
 80133be:	2001      	movs	r0, #1
 80133c0:	bd30      	pop	{r4, r5, pc}
 80133c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80133c6:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80133ca:	2d19      	cmp	r5, #25
 80133cc:	bf98      	it	ls
 80133ce:	3220      	addls	r2, #32
 80133d0:	42a2      	cmp	r2, r4
 80133d2:	d0f0      	beq.n	80133b6 <__match+0x6>
 80133d4:	2000      	movs	r0, #0
 80133d6:	e7f3      	b.n	80133c0 <__match+0x10>

080133d8 <__hexnan>:
 80133d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133dc:	680b      	ldr	r3, [r1, #0]
 80133de:	6801      	ldr	r1, [r0, #0]
 80133e0:	115e      	asrs	r6, r3, #5
 80133e2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80133e6:	f013 031f 	ands.w	r3, r3, #31
 80133ea:	b087      	sub	sp, #28
 80133ec:	bf18      	it	ne
 80133ee:	3604      	addne	r6, #4
 80133f0:	2500      	movs	r5, #0
 80133f2:	1f37      	subs	r7, r6, #4
 80133f4:	4682      	mov	sl, r0
 80133f6:	4690      	mov	r8, r2
 80133f8:	9301      	str	r3, [sp, #4]
 80133fa:	f846 5c04 	str.w	r5, [r6, #-4]
 80133fe:	46b9      	mov	r9, r7
 8013400:	463c      	mov	r4, r7
 8013402:	9502      	str	r5, [sp, #8]
 8013404:	46ab      	mov	fp, r5
 8013406:	784a      	ldrb	r2, [r1, #1]
 8013408:	1c4b      	adds	r3, r1, #1
 801340a:	9303      	str	r3, [sp, #12]
 801340c:	b342      	cbz	r2, 8013460 <__hexnan+0x88>
 801340e:	4610      	mov	r0, r2
 8013410:	9105      	str	r1, [sp, #20]
 8013412:	9204      	str	r2, [sp, #16]
 8013414:	f7ff fd94 	bl	8012f40 <__hexdig_fun>
 8013418:	2800      	cmp	r0, #0
 801341a:	d151      	bne.n	80134c0 <__hexnan+0xe8>
 801341c:	9a04      	ldr	r2, [sp, #16]
 801341e:	9905      	ldr	r1, [sp, #20]
 8013420:	2a20      	cmp	r2, #32
 8013422:	d818      	bhi.n	8013456 <__hexnan+0x7e>
 8013424:	9b02      	ldr	r3, [sp, #8]
 8013426:	459b      	cmp	fp, r3
 8013428:	dd13      	ble.n	8013452 <__hexnan+0x7a>
 801342a:	454c      	cmp	r4, r9
 801342c:	d206      	bcs.n	801343c <__hexnan+0x64>
 801342e:	2d07      	cmp	r5, #7
 8013430:	dc04      	bgt.n	801343c <__hexnan+0x64>
 8013432:	462a      	mov	r2, r5
 8013434:	4649      	mov	r1, r9
 8013436:	4620      	mov	r0, r4
 8013438:	f7ff ffa8 	bl	801338c <L_shift>
 801343c:	4544      	cmp	r4, r8
 801343e:	d952      	bls.n	80134e6 <__hexnan+0x10e>
 8013440:	2300      	movs	r3, #0
 8013442:	f1a4 0904 	sub.w	r9, r4, #4
 8013446:	f844 3c04 	str.w	r3, [r4, #-4]
 801344a:	f8cd b008 	str.w	fp, [sp, #8]
 801344e:	464c      	mov	r4, r9
 8013450:	461d      	mov	r5, r3
 8013452:	9903      	ldr	r1, [sp, #12]
 8013454:	e7d7      	b.n	8013406 <__hexnan+0x2e>
 8013456:	2a29      	cmp	r2, #41	@ 0x29
 8013458:	d157      	bne.n	801350a <__hexnan+0x132>
 801345a:	3102      	adds	r1, #2
 801345c:	f8ca 1000 	str.w	r1, [sl]
 8013460:	f1bb 0f00 	cmp.w	fp, #0
 8013464:	d051      	beq.n	801350a <__hexnan+0x132>
 8013466:	454c      	cmp	r4, r9
 8013468:	d206      	bcs.n	8013478 <__hexnan+0xa0>
 801346a:	2d07      	cmp	r5, #7
 801346c:	dc04      	bgt.n	8013478 <__hexnan+0xa0>
 801346e:	462a      	mov	r2, r5
 8013470:	4649      	mov	r1, r9
 8013472:	4620      	mov	r0, r4
 8013474:	f7ff ff8a 	bl	801338c <L_shift>
 8013478:	4544      	cmp	r4, r8
 801347a:	d936      	bls.n	80134ea <__hexnan+0x112>
 801347c:	f1a8 0204 	sub.w	r2, r8, #4
 8013480:	4623      	mov	r3, r4
 8013482:	f853 1b04 	ldr.w	r1, [r3], #4
 8013486:	f842 1f04 	str.w	r1, [r2, #4]!
 801348a:	429f      	cmp	r7, r3
 801348c:	d2f9      	bcs.n	8013482 <__hexnan+0xaa>
 801348e:	1b3b      	subs	r3, r7, r4
 8013490:	f023 0303 	bic.w	r3, r3, #3
 8013494:	3304      	adds	r3, #4
 8013496:	3401      	adds	r4, #1
 8013498:	3e03      	subs	r6, #3
 801349a:	42b4      	cmp	r4, r6
 801349c:	bf88      	it	hi
 801349e:	2304      	movhi	r3, #4
 80134a0:	4443      	add	r3, r8
 80134a2:	2200      	movs	r2, #0
 80134a4:	f843 2b04 	str.w	r2, [r3], #4
 80134a8:	429f      	cmp	r7, r3
 80134aa:	d2fb      	bcs.n	80134a4 <__hexnan+0xcc>
 80134ac:	683b      	ldr	r3, [r7, #0]
 80134ae:	b91b      	cbnz	r3, 80134b8 <__hexnan+0xe0>
 80134b0:	4547      	cmp	r7, r8
 80134b2:	d128      	bne.n	8013506 <__hexnan+0x12e>
 80134b4:	2301      	movs	r3, #1
 80134b6:	603b      	str	r3, [r7, #0]
 80134b8:	2005      	movs	r0, #5
 80134ba:	b007      	add	sp, #28
 80134bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134c0:	3501      	adds	r5, #1
 80134c2:	2d08      	cmp	r5, #8
 80134c4:	f10b 0b01 	add.w	fp, fp, #1
 80134c8:	dd06      	ble.n	80134d8 <__hexnan+0x100>
 80134ca:	4544      	cmp	r4, r8
 80134cc:	d9c1      	bls.n	8013452 <__hexnan+0x7a>
 80134ce:	2300      	movs	r3, #0
 80134d0:	f844 3c04 	str.w	r3, [r4, #-4]
 80134d4:	2501      	movs	r5, #1
 80134d6:	3c04      	subs	r4, #4
 80134d8:	6822      	ldr	r2, [r4, #0]
 80134da:	f000 000f 	and.w	r0, r0, #15
 80134de:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80134e2:	6020      	str	r0, [r4, #0]
 80134e4:	e7b5      	b.n	8013452 <__hexnan+0x7a>
 80134e6:	2508      	movs	r5, #8
 80134e8:	e7b3      	b.n	8013452 <__hexnan+0x7a>
 80134ea:	9b01      	ldr	r3, [sp, #4]
 80134ec:	2b00      	cmp	r3, #0
 80134ee:	d0dd      	beq.n	80134ac <__hexnan+0xd4>
 80134f0:	f1c3 0320 	rsb	r3, r3, #32
 80134f4:	f04f 32ff 	mov.w	r2, #4294967295
 80134f8:	40da      	lsrs	r2, r3
 80134fa:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80134fe:	4013      	ands	r3, r2
 8013500:	f846 3c04 	str.w	r3, [r6, #-4]
 8013504:	e7d2      	b.n	80134ac <__hexnan+0xd4>
 8013506:	3f04      	subs	r7, #4
 8013508:	e7d0      	b.n	80134ac <__hexnan+0xd4>
 801350a:	2004      	movs	r0, #4
 801350c:	e7d5      	b.n	80134ba <__hexnan+0xe2>

0801350e <__ascii_mbtowc>:
 801350e:	b082      	sub	sp, #8
 8013510:	b901      	cbnz	r1, 8013514 <__ascii_mbtowc+0x6>
 8013512:	a901      	add	r1, sp, #4
 8013514:	b142      	cbz	r2, 8013528 <__ascii_mbtowc+0x1a>
 8013516:	b14b      	cbz	r3, 801352c <__ascii_mbtowc+0x1e>
 8013518:	7813      	ldrb	r3, [r2, #0]
 801351a:	600b      	str	r3, [r1, #0]
 801351c:	7812      	ldrb	r2, [r2, #0]
 801351e:	1e10      	subs	r0, r2, #0
 8013520:	bf18      	it	ne
 8013522:	2001      	movne	r0, #1
 8013524:	b002      	add	sp, #8
 8013526:	4770      	bx	lr
 8013528:	4610      	mov	r0, r2
 801352a:	e7fb      	b.n	8013524 <__ascii_mbtowc+0x16>
 801352c:	f06f 0001 	mvn.w	r0, #1
 8013530:	e7f8      	b.n	8013524 <__ascii_mbtowc+0x16>

08013532 <_realloc_r>:
 8013532:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013536:	4607      	mov	r7, r0
 8013538:	4614      	mov	r4, r2
 801353a:	460d      	mov	r5, r1
 801353c:	b921      	cbnz	r1, 8013548 <_realloc_r+0x16>
 801353e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013542:	4611      	mov	r1, r2
 8013544:	f7fd bef0 	b.w	8011328 <_malloc_r>
 8013548:	b92a      	cbnz	r2, 8013556 <_realloc_r+0x24>
 801354a:	f7fd fe79 	bl	8011240 <_free_r>
 801354e:	4625      	mov	r5, r4
 8013550:	4628      	mov	r0, r5
 8013552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013556:	f000 f840 	bl	80135da <_malloc_usable_size_r>
 801355a:	4284      	cmp	r4, r0
 801355c:	4606      	mov	r6, r0
 801355e:	d802      	bhi.n	8013566 <_realloc_r+0x34>
 8013560:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8013564:	d8f4      	bhi.n	8013550 <_realloc_r+0x1e>
 8013566:	4621      	mov	r1, r4
 8013568:	4638      	mov	r0, r7
 801356a:	f7fd fedd 	bl	8011328 <_malloc_r>
 801356e:	4680      	mov	r8, r0
 8013570:	b908      	cbnz	r0, 8013576 <_realloc_r+0x44>
 8013572:	4645      	mov	r5, r8
 8013574:	e7ec      	b.n	8013550 <_realloc_r+0x1e>
 8013576:	42b4      	cmp	r4, r6
 8013578:	4622      	mov	r2, r4
 801357a:	4629      	mov	r1, r5
 801357c:	bf28      	it	cs
 801357e:	4632      	movcs	r2, r6
 8013580:	f7fc fff1 	bl	8010566 <memcpy>
 8013584:	4629      	mov	r1, r5
 8013586:	4638      	mov	r0, r7
 8013588:	f7fd fe5a 	bl	8011240 <_free_r>
 801358c:	e7f1      	b.n	8013572 <_realloc_r+0x40>

0801358e <__ascii_wctomb>:
 801358e:	4603      	mov	r3, r0
 8013590:	4608      	mov	r0, r1
 8013592:	b141      	cbz	r1, 80135a6 <__ascii_wctomb+0x18>
 8013594:	2aff      	cmp	r2, #255	@ 0xff
 8013596:	d904      	bls.n	80135a2 <__ascii_wctomb+0x14>
 8013598:	228a      	movs	r2, #138	@ 0x8a
 801359a:	601a      	str	r2, [r3, #0]
 801359c:	f04f 30ff 	mov.w	r0, #4294967295
 80135a0:	4770      	bx	lr
 80135a2:	700a      	strb	r2, [r1, #0]
 80135a4:	2001      	movs	r0, #1
 80135a6:	4770      	bx	lr

080135a8 <fiprintf>:
 80135a8:	b40e      	push	{r1, r2, r3}
 80135aa:	b503      	push	{r0, r1, lr}
 80135ac:	4601      	mov	r1, r0
 80135ae:	ab03      	add	r3, sp, #12
 80135b0:	4805      	ldr	r0, [pc, #20]	@ (80135c8 <fiprintf+0x20>)
 80135b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80135b6:	6800      	ldr	r0, [r0, #0]
 80135b8:	9301      	str	r3, [sp, #4]
 80135ba:	f000 f83f 	bl	801363c <_vfiprintf_r>
 80135be:	b002      	add	sp, #8
 80135c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80135c4:	b003      	add	sp, #12
 80135c6:	4770      	bx	lr
 80135c8:	20000140 	.word	0x20000140

080135cc <abort>:
 80135cc:	b508      	push	{r3, lr}
 80135ce:	2006      	movs	r0, #6
 80135d0:	f000 fa08 	bl	80139e4 <raise>
 80135d4:	2001      	movs	r0, #1
 80135d6:	f7f1 fca1 	bl	8004f1c <_exit>

080135da <_malloc_usable_size_r>:
 80135da:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80135de:	1f18      	subs	r0, r3, #4
 80135e0:	2b00      	cmp	r3, #0
 80135e2:	bfbc      	itt	lt
 80135e4:	580b      	ldrlt	r3, [r1, r0]
 80135e6:	18c0      	addlt	r0, r0, r3
 80135e8:	4770      	bx	lr

080135ea <__sfputc_r>:
 80135ea:	6893      	ldr	r3, [r2, #8]
 80135ec:	3b01      	subs	r3, #1
 80135ee:	2b00      	cmp	r3, #0
 80135f0:	b410      	push	{r4}
 80135f2:	6093      	str	r3, [r2, #8]
 80135f4:	da08      	bge.n	8013608 <__sfputc_r+0x1e>
 80135f6:	6994      	ldr	r4, [r2, #24]
 80135f8:	42a3      	cmp	r3, r4
 80135fa:	db01      	blt.n	8013600 <__sfputc_r+0x16>
 80135fc:	290a      	cmp	r1, #10
 80135fe:	d103      	bne.n	8013608 <__sfputc_r+0x1e>
 8013600:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013604:	f000 b932 	b.w	801386c <__swbuf_r>
 8013608:	6813      	ldr	r3, [r2, #0]
 801360a:	1c58      	adds	r0, r3, #1
 801360c:	6010      	str	r0, [r2, #0]
 801360e:	7019      	strb	r1, [r3, #0]
 8013610:	4608      	mov	r0, r1
 8013612:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013616:	4770      	bx	lr

08013618 <__sfputs_r>:
 8013618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801361a:	4606      	mov	r6, r0
 801361c:	460f      	mov	r7, r1
 801361e:	4614      	mov	r4, r2
 8013620:	18d5      	adds	r5, r2, r3
 8013622:	42ac      	cmp	r4, r5
 8013624:	d101      	bne.n	801362a <__sfputs_r+0x12>
 8013626:	2000      	movs	r0, #0
 8013628:	e007      	b.n	801363a <__sfputs_r+0x22>
 801362a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801362e:	463a      	mov	r2, r7
 8013630:	4630      	mov	r0, r6
 8013632:	f7ff ffda 	bl	80135ea <__sfputc_r>
 8013636:	1c43      	adds	r3, r0, #1
 8013638:	d1f3      	bne.n	8013622 <__sfputs_r+0xa>
 801363a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801363c <_vfiprintf_r>:
 801363c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013640:	460d      	mov	r5, r1
 8013642:	b09d      	sub	sp, #116	@ 0x74
 8013644:	4614      	mov	r4, r2
 8013646:	4698      	mov	r8, r3
 8013648:	4606      	mov	r6, r0
 801364a:	b118      	cbz	r0, 8013654 <_vfiprintf_r+0x18>
 801364c:	6a03      	ldr	r3, [r0, #32]
 801364e:	b90b      	cbnz	r3, 8013654 <_vfiprintf_r+0x18>
 8013650:	f7fc fe38 	bl	80102c4 <__sinit>
 8013654:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8013656:	07d9      	lsls	r1, r3, #31
 8013658:	d405      	bmi.n	8013666 <_vfiprintf_r+0x2a>
 801365a:	89ab      	ldrh	r3, [r5, #12]
 801365c:	059a      	lsls	r2, r3, #22
 801365e:	d402      	bmi.n	8013666 <_vfiprintf_r+0x2a>
 8013660:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013662:	f7fc ff7e 	bl	8010562 <__retarget_lock_acquire_recursive>
 8013666:	89ab      	ldrh	r3, [r5, #12]
 8013668:	071b      	lsls	r3, r3, #28
 801366a:	d501      	bpl.n	8013670 <_vfiprintf_r+0x34>
 801366c:	692b      	ldr	r3, [r5, #16]
 801366e:	b99b      	cbnz	r3, 8013698 <_vfiprintf_r+0x5c>
 8013670:	4629      	mov	r1, r5
 8013672:	4630      	mov	r0, r6
 8013674:	f000 f938 	bl	80138e8 <__swsetup_r>
 8013678:	b170      	cbz	r0, 8013698 <_vfiprintf_r+0x5c>
 801367a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801367c:	07dc      	lsls	r4, r3, #31
 801367e:	d504      	bpl.n	801368a <_vfiprintf_r+0x4e>
 8013680:	f04f 30ff 	mov.w	r0, #4294967295
 8013684:	b01d      	add	sp, #116	@ 0x74
 8013686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801368a:	89ab      	ldrh	r3, [r5, #12]
 801368c:	0598      	lsls	r0, r3, #22
 801368e:	d4f7      	bmi.n	8013680 <_vfiprintf_r+0x44>
 8013690:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013692:	f7fc ff67 	bl	8010564 <__retarget_lock_release_recursive>
 8013696:	e7f3      	b.n	8013680 <_vfiprintf_r+0x44>
 8013698:	2300      	movs	r3, #0
 801369a:	9309      	str	r3, [sp, #36]	@ 0x24
 801369c:	2320      	movs	r3, #32
 801369e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80136a2:	f8cd 800c 	str.w	r8, [sp, #12]
 80136a6:	2330      	movs	r3, #48	@ 0x30
 80136a8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8013858 <_vfiprintf_r+0x21c>
 80136ac:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80136b0:	f04f 0901 	mov.w	r9, #1
 80136b4:	4623      	mov	r3, r4
 80136b6:	469a      	mov	sl, r3
 80136b8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80136bc:	b10a      	cbz	r2, 80136c2 <_vfiprintf_r+0x86>
 80136be:	2a25      	cmp	r2, #37	@ 0x25
 80136c0:	d1f9      	bne.n	80136b6 <_vfiprintf_r+0x7a>
 80136c2:	ebba 0b04 	subs.w	fp, sl, r4
 80136c6:	d00b      	beq.n	80136e0 <_vfiprintf_r+0xa4>
 80136c8:	465b      	mov	r3, fp
 80136ca:	4622      	mov	r2, r4
 80136cc:	4629      	mov	r1, r5
 80136ce:	4630      	mov	r0, r6
 80136d0:	f7ff ffa2 	bl	8013618 <__sfputs_r>
 80136d4:	3001      	adds	r0, #1
 80136d6:	f000 80a7 	beq.w	8013828 <_vfiprintf_r+0x1ec>
 80136da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80136dc:	445a      	add	r2, fp
 80136de:	9209      	str	r2, [sp, #36]	@ 0x24
 80136e0:	f89a 3000 	ldrb.w	r3, [sl]
 80136e4:	2b00      	cmp	r3, #0
 80136e6:	f000 809f 	beq.w	8013828 <_vfiprintf_r+0x1ec>
 80136ea:	2300      	movs	r3, #0
 80136ec:	f04f 32ff 	mov.w	r2, #4294967295
 80136f0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80136f4:	f10a 0a01 	add.w	sl, sl, #1
 80136f8:	9304      	str	r3, [sp, #16]
 80136fa:	9307      	str	r3, [sp, #28]
 80136fc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8013700:	931a      	str	r3, [sp, #104]	@ 0x68
 8013702:	4654      	mov	r4, sl
 8013704:	2205      	movs	r2, #5
 8013706:	f814 1b01 	ldrb.w	r1, [r4], #1
 801370a:	4853      	ldr	r0, [pc, #332]	@ (8013858 <_vfiprintf_r+0x21c>)
 801370c:	f7ec fd38 	bl	8000180 <memchr>
 8013710:	9a04      	ldr	r2, [sp, #16]
 8013712:	b9d8      	cbnz	r0, 801374c <_vfiprintf_r+0x110>
 8013714:	06d1      	lsls	r1, r2, #27
 8013716:	bf44      	itt	mi
 8013718:	2320      	movmi	r3, #32
 801371a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801371e:	0713      	lsls	r3, r2, #28
 8013720:	bf44      	itt	mi
 8013722:	232b      	movmi	r3, #43	@ 0x2b
 8013724:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8013728:	f89a 3000 	ldrb.w	r3, [sl]
 801372c:	2b2a      	cmp	r3, #42	@ 0x2a
 801372e:	d015      	beq.n	801375c <_vfiprintf_r+0x120>
 8013730:	9a07      	ldr	r2, [sp, #28]
 8013732:	4654      	mov	r4, sl
 8013734:	2000      	movs	r0, #0
 8013736:	f04f 0c0a 	mov.w	ip, #10
 801373a:	4621      	mov	r1, r4
 801373c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013740:	3b30      	subs	r3, #48	@ 0x30
 8013742:	2b09      	cmp	r3, #9
 8013744:	d94b      	bls.n	80137de <_vfiprintf_r+0x1a2>
 8013746:	b1b0      	cbz	r0, 8013776 <_vfiprintf_r+0x13a>
 8013748:	9207      	str	r2, [sp, #28]
 801374a:	e014      	b.n	8013776 <_vfiprintf_r+0x13a>
 801374c:	eba0 0308 	sub.w	r3, r0, r8
 8013750:	fa09 f303 	lsl.w	r3, r9, r3
 8013754:	4313      	orrs	r3, r2
 8013756:	9304      	str	r3, [sp, #16]
 8013758:	46a2      	mov	sl, r4
 801375a:	e7d2      	b.n	8013702 <_vfiprintf_r+0xc6>
 801375c:	9b03      	ldr	r3, [sp, #12]
 801375e:	1d19      	adds	r1, r3, #4
 8013760:	681b      	ldr	r3, [r3, #0]
 8013762:	9103      	str	r1, [sp, #12]
 8013764:	2b00      	cmp	r3, #0
 8013766:	bfbb      	ittet	lt
 8013768:	425b      	neglt	r3, r3
 801376a:	f042 0202 	orrlt.w	r2, r2, #2
 801376e:	9307      	strge	r3, [sp, #28]
 8013770:	9307      	strlt	r3, [sp, #28]
 8013772:	bfb8      	it	lt
 8013774:	9204      	strlt	r2, [sp, #16]
 8013776:	7823      	ldrb	r3, [r4, #0]
 8013778:	2b2e      	cmp	r3, #46	@ 0x2e
 801377a:	d10a      	bne.n	8013792 <_vfiprintf_r+0x156>
 801377c:	7863      	ldrb	r3, [r4, #1]
 801377e:	2b2a      	cmp	r3, #42	@ 0x2a
 8013780:	d132      	bne.n	80137e8 <_vfiprintf_r+0x1ac>
 8013782:	9b03      	ldr	r3, [sp, #12]
 8013784:	1d1a      	adds	r2, r3, #4
 8013786:	681b      	ldr	r3, [r3, #0]
 8013788:	9203      	str	r2, [sp, #12]
 801378a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801378e:	3402      	adds	r4, #2
 8013790:	9305      	str	r3, [sp, #20]
 8013792:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8013868 <_vfiprintf_r+0x22c>
 8013796:	7821      	ldrb	r1, [r4, #0]
 8013798:	2203      	movs	r2, #3
 801379a:	4650      	mov	r0, sl
 801379c:	f7ec fcf0 	bl	8000180 <memchr>
 80137a0:	b138      	cbz	r0, 80137b2 <_vfiprintf_r+0x176>
 80137a2:	9b04      	ldr	r3, [sp, #16]
 80137a4:	eba0 000a 	sub.w	r0, r0, sl
 80137a8:	2240      	movs	r2, #64	@ 0x40
 80137aa:	4082      	lsls	r2, r0
 80137ac:	4313      	orrs	r3, r2
 80137ae:	3401      	adds	r4, #1
 80137b0:	9304      	str	r3, [sp, #16]
 80137b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80137b6:	4829      	ldr	r0, [pc, #164]	@ (801385c <_vfiprintf_r+0x220>)
 80137b8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80137bc:	2206      	movs	r2, #6
 80137be:	f7ec fcdf 	bl	8000180 <memchr>
 80137c2:	2800      	cmp	r0, #0
 80137c4:	d03f      	beq.n	8013846 <_vfiprintf_r+0x20a>
 80137c6:	4b26      	ldr	r3, [pc, #152]	@ (8013860 <_vfiprintf_r+0x224>)
 80137c8:	bb1b      	cbnz	r3, 8013812 <_vfiprintf_r+0x1d6>
 80137ca:	9b03      	ldr	r3, [sp, #12]
 80137cc:	3307      	adds	r3, #7
 80137ce:	f023 0307 	bic.w	r3, r3, #7
 80137d2:	3308      	adds	r3, #8
 80137d4:	9303      	str	r3, [sp, #12]
 80137d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137d8:	443b      	add	r3, r7
 80137da:	9309      	str	r3, [sp, #36]	@ 0x24
 80137dc:	e76a      	b.n	80136b4 <_vfiprintf_r+0x78>
 80137de:	fb0c 3202 	mla	r2, ip, r2, r3
 80137e2:	460c      	mov	r4, r1
 80137e4:	2001      	movs	r0, #1
 80137e6:	e7a8      	b.n	801373a <_vfiprintf_r+0xfe>
 80137e8:	2300      	movs	r3, #0
 80137ea:	3401      	adds	r4, #1
 80137ec:	9305      	str	r3, [sp, #20]
 80137ee:	4619      	mov	r1, r3
 80137f0:	f04f 0c0a 	mov.w	ip, #10
 80137f4:	4620      	mov	r0, r4
 80137f6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80137fa:	3a30      	subs	r2, #48	@ 0x30
 80137fc:	2a09      	cmp	r2, #9
 80137fe:	d903      	bls.n	8013808 <_vfiprintf_r+0x1cc>
 8013800:	2b00      	cmp	r3, #0
 8013802:	d0c6      	beq.n	8013792 <_vfiprintf_r+0x156>
 8013804:	9105      	str	r1, [sp, #20]
 8013806:	e7c4      	b.n	8013792 <_vfiprintf_r+0x156>
 8013808:	fb0c 2101 	mla	r1, ip, r1, r2
 801380c:	4604      	mov	r4, r0
 801380e:	2301      	movs	r3, #1
 8013810:	e7f0      	b.n	80137f4 <_vfiprintf_r+0x1b8>
 8013812:	ab03      	add	r3, sp, #12
 8013814:	9300      	str	r3, [sp, #0]
 8013816:	462a      	mov	r2, r5
 8013818:	4b12      	ldr	r3, [pc, #72]	@ (8013864 <_vfiprintf_r+0x228>)
 801381a:	a904      	add	r1, sp, #16
 801381c:	4630      	mov	r0, r6
 801381e:	f7fb ff01 	bl	800f624 <_printf_float>
 8013822:	4607      	mov	r7, r0
 8013824:	1c78      	adds	r0, r7, #1
 8013826:	d1d6      	bne.n	80137d6 <_vfiprintf_r+0x19a>
 8013828:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801382a:	07d9      	lsls	r1, r3, #31
 801382c:	d405      	bmi.n	801383a <_vfiprintf_r+0x1fe>
 801382e:	89ab      	ldrh	r3, [r5, #12]
 8013830:	059a      	lsls	r2, r3, #22
 8013832:	d402      	bmi.n	801383a <_vfiprintf_r+0x1fe>
 8013834:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013836:	f7fc fe95 	bl	8010564 <__retarget_lock_release_recursive>
 801383a:	89ab      	ldrh	r3, [r5, #12]
 801383c:	065b      	lsls	r3, r3, #25
 801383e:	f53f af1f 	bmi.w	8013680 <_vfiprintf_r+0x44>
 8013842:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013844:	e71e      	b.n	8013684 <_vfiprintf_r+0x48>
 8013846:	ab03      	add	r3, sp, #12
 8013848:	9300      	str	r3, [sp, #0]
 801384a:	462a      	mov	r2, r5
 801384c:	4b05      	ldr	r3, [pc, #20]	@ (8013864 <_vfiprintf_r+0x228>)
 801384e:	a904      	add	r1, sp, #16
 8013850:	4630      	mov	r0, r6
 8013852:	f7fc f97f 	bl	800fb54 <_printf_i>
 8013856:	e7e4      	b.n	8013822 <_vfiprintf_r+0x1e6>
 8013858:	0801860a 	.word	0x0801860a
 801385c:	08018614 	.word	0x08018614
 8013860:	0800f625 	.word	0x0800f625
 8013864:	08013619 	.word	0x08013619
 8013868:	08018610 	.word	0x08018610

0801386c <__swbuf_r>:
 801386c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801386e:	460e      	mov	r6, r1
 8013870:	4614      	mov	r4, r2
 8013872:	4605      	mov	r5, r0
 8013874:	b118      	cbz	r0, 801387e <__swbuf_r+0x12>
 8013876:	6a03      	ldr	r3, [r0, #32]
 8013878:	b90b      	cbnz	r3, 801387e <__swbuf_r+0x12>
 801387a:	f7fc fd23 	bl	80102c4 <__sinit>
 801387e:	69a3      	ldr	r3, [r4, #24]
 8013880:	60a3      	str	r3, [r4, #8]
 8013882:	89a3      	ldrh	r3, [r4, #12]
 8013884:	071a      	lsls	r2, r3, #28
 8013886:	d501      	bpl.n	801388c <__swbuf_r+0x20>
 8013888:	6923      	ldr	r3, [r4, #16]
 801388a:	b943      	cbnz	r3, 801389e <__swbuf_r+0x32>
 801388c:	4621      	mov	r1, r4
 801388e:	4628      	mov	r0, r5
 8013890:	f000 f82a 	bl	80138e8 <__swsetup_r>
 8013894:	b118      	cbz	r0, 801389e <__swbuf_r+0x32>
 8013896:	f04f 37ff 	mov.w	r7, #4294967295
 801389a:	4638      	mov	r0, r7
 801389c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801389e:	6823      	ldr	r3, [r4, #0]
 80138a0:	6922      	ldr	r2, [r4, #16]
 80138a2:	1a98      	subs	r0, r3, r2
 80138a4:	6963      	ldr	r3, [r4, #20]
 80138a6:	b2f6      	uxtb	r6, r6
 80138a8:	4283      	cmp	r3, r0
 80138aa:	4637      	mov	r7, r6
 80138ac:	dc05      	bgt.n	80138ba <__swbuf_r+0x4e>
 80138ae:	4621      	mov	r1, r4
 80138b0:	4628      	mov	r0, r5
 80138b2:	f7ff fa53 	bl	8012d5c <_fflush_r>
 80138b6:	2800      	cmp	r0, #0
 80138b8:	d1ed      	bne.n	8013896 <__swbuf_r+0x2a>
 80138ba:	68a3      	ldr	r3, [r4, #8]
 80138bc:	3b01      	subs	r3, #1
 80138be:	60a3      	str	r3, [r4, #8]
 80138c0:	6823      	ldr	r3, [r4, #0]
 80138c2:	1c5a      	adds	r2, r3, #1
 80138c4:	6022      	str	r2, [r4, #0]
 80138c6:	701e      	strb	r6, [r3, #0]
 80138c8:	6962      	ldr	r2, [r4, #20]
 80138ca:	1c43      	adds	r3, r0, #1
 80138cc:	429a      	cmp	r2, r3
 80138ce:	d004      	beq.n	80138da <__swbuf_r+0x6e>
 80138d0:	89a3      	ldrh	r3, [r4, #12]
 80138d2:	07db      	lsls	r3, r3, #31
 80138d4:	d5e1      	bpl.n	801389a <__swbuf_r+0x2e>
 80138d6:	2e0a      	cmp	r6, #10
 80138d8:	d1df      	bne.n	801389a <__swbuf_r+0x2e>
 80138da:	4621      	mov	r1, r4
 80138dc:	4628      	mov	r0, r5
 80138de:	f7ff fa3d 	bl	8012d5c <_fflush_r>
 80138e2:	2800      	cmp	r0, #0
 80138e4:	d0d9      	beq.n	801389a <__swbuf_r+0x2e>
 80138e6:	e7d6      	b.n	8013896 <__swbuf_r+0x2a>

080138e8 <__swsetup_r>:
 80138e8:	b538      	push	{r3, r4, r5, lr}
 80138ea:	4b29      	ldr	r3, [pc, #164]	@ (8013990 <__swsetup_r+0xa8>)
 80138ec:	4605      	mov	r5, r0
 80138ee:	6818      	ldr	r0, [r3, #0]
 80138f0:	460c      	mov	r4, r1
 80138f2:	b118      	cbz	r0, 80138fc <__swsetup_r+0x14>
 80138f4:	6a03      	ldr	r3, [r0, #32]
 80138f6:	b90b      	cbnz	r3, 80138fc <__swsetup_r+0x14>
 80138f8:	f7fc fce4 	bl	80102c4 <__sinit>
 80138fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013900:	0719      	lsls	r1, r3, #28
 8013902:	d422      	bmi.n	801394a <__swsetup_r+0x62>
 8013904:	06da      	lsls	r2, r3, #27
 8013906:	d407      	bmi.n	8013918 <__swsetup_r+0x30>
 8013908:	2209      	movs	r2, #9
 801390a:	602a      	str	r2, [r5, #0]
 801390c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8013910:	81a3      	strh	r3, [r4, #12]
 8013912:	f04f 30ff 	mov.w	r0, #4294967295
 8013916:	e033      	b.n	8013980 <__swsetup_r+0x98>
 8013918:	0758      	lsls	r0, r3, #29
 801391a:	d512      	bpl.n	8013942 <__swsetup_r+0x5a>
 801391c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801391e:	b141      	cbz	r1, 8013932 <__swsetup_r+0x4a>
 8013920:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8013924:	4299      	cmp	r1, r3
 8013926:	d002      	beq.n	801392e <__swsetup_r+0x46>
 8013928:	4628      	mov	r0, r5
 801392a:	f7fd fc89 	bl	8011240 <_free_r>
 801392e:	2300      	movs	r3, #0
 8013930:	6363      	str	r3, [r4, #52]	@ 0x34
 8013932:	89a3      	ldrh	r3, [r4, #12]
 8013934:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8013938:	81a3      	strh	r3, [r4, #12]
 801393a:	2300      	movs	r3, #0
 801393c:	6063      	str	r3, [r4, #4]
 801393e:	6923      	ldr	r3, [r4, #16]
 8013940:	6023      	str	r3, [r4, #0]
 8013942:	89a3      	ldrh	r3, [r4, #12]
 8013944:	f043 0308 	orr.w	r3, r3, #8
 8013948:	81a3      	strh	r3, [r4, #12]
 801394a:	6923      	ldr	r3, [r4, #16]
 801394c:	b94b      	cbnz	r3, 8013962 <__swsetup_r+0x7a>
 801394e:	89a3      	ldrh	r3, [r4, #12]
 8013950:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8013954:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8013958:	d003      	beq.n	8013962 <__swsetup_r+0x7a>
 801395a:	4621      	mov	r1, r4
 801395c:	4628      	mov	r0, r5
 801395e:	f000 f883 	bl	8013a68 <__smakebuf_r>
 8013962:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013966:	f013 0201 	ands.w	r2, r3, #1
 801396a:	d00a      	beq.n	8013982 <__swsetup_r+0x9a>
 801396c:	2200      	movs	r2, #0
 801396e:	60a2      	str	r2, [r4, #8]
 8013970:	6962      	ldr	r2, [r4, #20]
 8013972:	4252      	negs	r2, r2
 8013974:	61a2      	str	r2, [r4, #24]
 8013976:	6922      	ldr	r2, [r4, #16]
 8013978:	b942      	cbnz	r2, 801398c <__swsetup_r+0xa4>
 801397a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801397e:	d1c5      	bne.n	801390c <__swsetup_r+0x24>
 8013980:	bd38      	pop	{r3, r4, r5, pc}
 8013982:	0799      	lsls	r1, r3, #30
 8013984:	bf58      	it	pl
 8013986:	6962      	ldrpl	r2, [r4, #20]
 8013988:	60a2      	str	r2, [r4, #8]
 801398a:	e7f4      	b.n	8013976 <__swsetup_r+0x8e>
 801398c:	2000      	movs	r0, #0
 801398e:	e7f7      	b.n	8013980 <__swsetup_r+0x98>
 8013990:	20000140 	.word	0x20000140

08013994 <_raise_r>:
 8013994:	291f      	cmp	r1, #31
 8013996:	b538      	push	{r3, r4, r5, lr}
 8013998:	4605      	mov	r5, r0
 801399a:	460c      	mov	r4, r1
 801399c:	d904      	bls.n	80139a8 <_raise_r+0x14>
 801399e:	2316      	movs	r3, #22
 80139a0:	6003      	str	r3, [r0, #0]
 80139a2:	f04f 30ff 	mov.w	r0, #4294967295
 80139a6:	bd38      	pop	{r3, r4, r5, pc}
 80139a8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80139aa:	b112      	cbz	r2, 80139b2 <_raise_r+0x1e>
 80139ac:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80139b0:	b94b      	cbnz	r3, 80139c6 <_raise_r+0x32>
 80139b2:	4628      	mov	r0, r5
 80139b4:	f000 f830 	bl	8013a18 <_getpid_r>
 80139b8:	4622      	mov	r2, r4
 80139ba:	4601      	mov	r1, r0
 80139bc:	4628      	mov	r0, r5
 80139be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80139c2:	f000 b817 	b.w	80139f4 <_kill_r>
 80139c6:	2b01      	cmp	r3, #1
 80139c8:	d00a      	beq.n	80139e0 <_raise_r+0x4c>
 80139ca:	1c59      	adds	r1, r3, #1
 80139cc:	d103      	bne.n	80139d6 <_raise_r+0x42>
 80139ce:	2316      	movs	r3, #22
 80139d0:	6003      	str	r3, [r0, #0]
 80139d2:	2001      	movs	r0, #1
 80139d4:	e7e7      	b.n	80139a6 <_raise_r+0x12>
 80139d6:	2100      	movs	r1, #0
 80139d8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80139dc:	4620      	mov	r0, r4
 80139de:	4798      	blx	r3
 80139e0:	2000      	movs	r0, #0
 80139e2:	e7e0      	b.n	80139a6 <_raise_r+0x12>

080139e4 <raise>:
 80139e4:	4b02      	ldr	r3, [pc, #8]	@ (80139f0 <raise+0xc>)
 80139e6:	4601      	mov	r1, r0
 80139e8:	6818      	ldr	r0, [r3, #0]
 80139ea:	f7ff bfd3 	b.w	8013994 <_raise_r>
 80139ee:	bf00      	nop
 80139f0:	20000140 	.word	0x20000140

080139f4 <_kill_r>:
 80139f4:	b538      	push	{r3, r4, r5, lr}
 80139f6:	4d07      	ldr	r5, [pc, #28]	@ (8013a14 <_kill_r+0x20>)
 80139f8:	2300      	movs	r3, #0
 80139fa:	4604      	mov	r4, r0
 80139fc:	4608      	mov	r0, r1
 80139fe:	4611      	mov	r1, r2
 8013a00:	602b      	str	r3, [r5, #0]
 8013a02:	f7f1 fa83 	bl	8004f0c <_kill>
 8013a06:	1c43      	adds	r3, r0, #1
 8013a08:	d102      	bne.n	8013a10 <_kill_r+0x1c>
 8013a0a:	682b      	ldr	r3, [r5, #0]
 8013a0c:	b103      	cbz	r3, 8013a10 <_kill_r+0x1c>
 8013a0e:	6023      	str	r3, [r4, #0]
 8013a10:	bd38      	pop	{r3, r4, r5, pc}
 8013a12:	bf00      	nop
 8013a14:	20005b84 	.word	0x20005b84

08013a18 <_getpid_r>:
 8013a18:	f7f1 ba76 	b.w	8004f08 <_getpid>

08013a1c <__swhatbuf_r>:
 8013a1c:	b570      	push	{r4, r5, r6, lr}
 8013a1e:	460c      	mov	r4, r1
 8013a20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8013a24:	2900      	cmp	r1, #0
 8013a26:	b096      	sub	sp, #88	@ 0x58
 8013a28:	4615      	mov	r5, r2
 8013a2a:	461e      	mov	r6, r3
 8013a2c:	da0d      	bge.n	8013a4a <__swhatbuf_r+0x2e>
 8013a2e:	89a3      	ldrh	r3, [r4, #12]
 8013a30:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8013a34:	f04f 0100 	mov.w	r1, #0
 8013a38:	bf14      	ite	ne
 8013a3a:	2340      	movne	r3, #64	@ 0x40
 8013a3c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8013a40:	2000      	movs	r0, #0
 8013a42:	6031      	str	r1, [r6, #0]
 8013a44:	602b      	str	r3, [r5, #0]
 8013a46:	b016      	add	sp, #88	@ 0x58
 8013a48:	bd70      	pop	{r4, r5, r6, pc}
 8013a4a:	466a      	mov	r2, sp
 8013a4c:	f000 f848 	bl	8013ae0 <_fstat_r>
 8013a50:	2800      	cmp	r0, #0
 8013a52:	dbec      	blt.n	8013a2e <__swhatbuf_r+0x12>
 8013a54:	9901      	ldr	r1, [sp, #4]
 8013a56:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8013a5a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8013a5e:	4259      	negs	r1, r3
 8013a60:	4159      	adcs	r1, r3
 8013a62:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8013a66:	e7eb      	b.n	8013a40 <__swhatbuf_r+0x24>

08013a68 <__smakebuf_r>:
 8013a68:	898b      	ldrh	r3, [r1, #12]
 8013a6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013a6c:	079d      	lsls	r5, r3, #30
 8013a6e:	4606      	mov	r6, r0
 8013a70:	460c      	mov	r4, r1
 8013a72:	d507      	bpl.n	8013a84 <__smakebuf_r+0x1c>
 8013a74:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8013a78:	6023      	str	r3, [r4, #0]
 8013a7a:	6123      	str	r3, [r4, #16]
 8013a7c:	2301      	movs	r3, #1
 8013a7e:	6163      	str	r3, [r4, #20]
 8013a80:	b003      	add	sp, #12
 8013a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a84:	ab01      	add	r3, sp, #4
 8013a86:	466a      	mov	r2, sp
 8013a88:	f7ff ffc8 	bl	8013a1c <__swhatbuf_r>
 8013a8c:	9f00      	ldr	r7, [sp, #0]
 8013a8e:	4605      	mov	r5, r0
 8013a90:	4639      	mov	r1, r7
 8013a92:	4630      	mov	r0, r6
 8013a94:	f7fd fc48 	bl	8011328 <_malloc_r>
 8013a98:	b948      	cbnz	r0, 8013aae <__smakebuf_r+0x46>
 8013a9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013a9e:	059a      	lsls	r2, r3, #22
 8013aa0:	d4ee      	bmi.n	8013a80 <__smakebuf_r+0x18>
 8013aa2:	f023 0303 	bic.w	r3, r3, #3
 8013aa6:	f043 0302 	orr.w	r3, r3, #2
 8013aaa:	81a3      	strh	r3, [r4, #12]
 8013aac:	e7e2      	b.n	8013a74 <__smakebuf_r+0xc>
 8013aae:	89a3      	ldrh	r3, [r4, #12]
 8013ab0:	6020      	str	r0, [r4, #0]
 8013ab2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8013ab6:	81a3      	strh	r3, [r4, #12]
 8013ab8:	9b01      	ldr	r3, [sp, #4]
 8013aba:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8013abe:	b15b      	cbz	r3, 8013ad8 <__smakebuf_r+0x70>
 8013ac0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8013ac4:	4630      	mov	r0, r6
 8013ac6:	f000 f81d 	bl	8013b04 <_isatty_r>
 8013aca:	b128      	cbz	r0, 8013ad8 <__smakebuf_r+0x70>
 8013acc:	89a3      	ldrh	r3, [r4, #12]
 8013ace:	f023 0303 	bic.w	r3, r3, #3
 8013ad2:	f043 0301 	orr.w	r3, r3, #1
 8013ad6:	81a3      	strh	r3, [r4, #12]
 8013ad8:	89a3      	ldrh	r3, [r4, #12]
 8013ada:	431d      	orrs	r5, r3
 8013adc:	81a5      	strh	r5, [r4, #12]
 8013ade:	e7cf      	b.n	8013a80 <__smakebuf_r+0x18>

08013ae0 <_fstat_r>:
 8013ae0:	b538      	push	{r3, r4, r5, lr}
 8013ae2:	4d07      	ldr	r5, [pc, #28]	@ (8013b00 <_fstat_r+0x20>)
 8013ae4:	2300      	movs	r3, #0
 8013ae6:	4604      	mov	r4, r0
 8013ae8:	4608      	mov	r0, r1
 8013aea:	4611      	mov	r1, r2
 8013aec:	602b      	str	r3, [r5, #0]
 8013aee:	f7f1 fa3b 	bl	8004f68 <_fstat>
 8013af2:	1c43      	adds	r3, r0, #1
 8013af4:	d102      	bne.n	8013afc <_fstat_r+0x1c>
 8013af6:	682b      	ldr	r3, [r5, #0]
 8013af8:	b103      	cbz	r3, 8013afc <_fstat_r+0x1c>
 8013afa:	6023      	str	r3, [r4, #0]
 8013afc:	bd38      	pop	{r3, r4, r5, pc}
 8013afe:	bf00      	nop
 8013b00:	20005b84 	.word	0x20005b84

08013b04 <_isatty_r>:
 8013b04:	b538      	push	{r3, r4, r5, lr}
 8013b06:	4d06      	ldr	r5, [pc, #24]	@ (8013b20 <_isatty_r+0x1c>)
 8013b08:	2300      	movs	r3, #0
 8013b0a:	4604      	mov	r4, r0
 8013b0c:	4608      	mov	r0, r1
 8013b0e:	602b      	str	r3, [r5, #0]
 8013b10:	f7f1 fa30 	bl	8004f74 <_isatty>
 8013b14:	1c43      	adds	r3, r0, #1
 8013b16:	d102      	bne.n	8013b1e <_isatty_r+0x1a>
 8013b18:	682b      	ldr	r3, [r5, #0]
 8013b1a:	b103      	cbz	r3, 8013b1e <_isatty_r+0x1a>
 8013b1c:	6023      	str	r3, [r4, #0]
 8013b1e:	bd38      	pop	{r3, r4, r5, pc}
 8013b20:	20005b84 	.word	0x20005b84
 8013b24:	00000000 	.word	0x00000000

08013b28 <log>:
 8013b28:	b538      	push	{r3, r4, r5, lr}
 8013b2a:	ed2d 8b02 	vpush	{d8}
 8013b2e:	ec55 4b10 	vmov	r4, r5, d0
 8013b32:	f000 fb49 	bl	80141c8 <__ieee754_log>
 8013b36:	4622      	mov	r2, r4
 8013b38:	462b      	mov	r3, r5
 8013b3a:	4620      	mov	r0, r4
 8013b3c:	4629      	mov	r1, r5
 8013b3e:	eeb0 8a40 	vmov.f32	s16, s0
 8013b42:	eef0 8a60 	vmov.f32	s17, s1
 8013b46:	f7ec ffc9 	bl	8000adc <__aeabi_dcmpun>
 8013b4a:	b998      	cbnz	r0, 8013b74 <log+0x4c>
 8013b4c:	2200      	movs	r2, #0
 8013b4e:	2300      	movs	r3, #0
 8013b50:	4620      	mov	r0, r4
 8013b52:	4629      	mov	r1, r5
 8013b54:	f7ec ffb8 	bl	8000ac8 <__aeabi_dcmpgt>
 8013b58:	b960      	cbnz	r0, 8013b74 <log+0x4c>
 8013b5a:	2200      	movs	r2, #0
 8013b5c:	2300      	movs	r3, #0
 8013b5e:	4620      	mov	r0, r4
 8013b60:	4629      	mov	r1, r5
 8013b62:	f7ec ff89 	bl	8000a78 <__aeabi_dcmpeq>
 8013b66:	b160      	cbz	r0, 8013b82 <log+0x5a>
 8013b68:	f7fc fcd0 	bl	801050c <__errno>
 8013b6c:	ed9f 8b0a 	vldr	d8, [pc, #40]	@ 8013b98 <log+0x70>
 8013b70:	2322      	movs	r3, #34	@ 0x22
 8013b72:	6003      	str	r3, [r0, #0]
 8013b74:	eeb0 0a48 	vmov.f32	s0, s16
 8013b78:	eef0 0a68 	vmov.f32	s1, s17
 8013b7c:	ecbd 8b02 	vpop	{d8}
 8013b80:	bd38      	pop	{r3, r4, r5, pc}
 8013b82:	f7fc fcc3 	bl	801050c <__errno>
 8013b86:	ecbd 8b02 	vpop	{d8}
 8013b8a:	2321      	movs	r3, #33	@ 0x21
 8013b8c:	6003      	str	r3, [r0, #0]
 8013b8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013b92:	4803      	ldr	r0, [pc, #12]	@ (8013ba0 <log+0x78>)
 8013b94:	f7ff b948 	b.w	8012e28 <nan>
 8013b98:	00000000 	.word	0x00000000
 8013b9c:	fff00000 	.word	0xfff00000
 8013ba0:	0801865e 	.word	0x0801865e
 8013ba4:	00000000 	.word	0x00000000

08013ba8 <cos>:
 8013ba8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013baa:	ec53 2b10 	vmov	r2, r3, d0
 8013bae:	4826      	ldr	r0, [pc, #152]	@ (8013c48 <cos+0xa0>)
 8013bb0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8013bb4:	4281      	cmp	r1, r0
 8013bb6:	d806      	bhi.n	8013bc6 <cos+0x1e>
 8013bb8:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 8013c40 <cos+0x98>
 8013bbc:	b005      	add	sp, #20
 8013bbe:	f85d eb04 	ldr.w	lr, [sp], #4
 8013bc2:	f000 b97d 	b.w	8013ec0 <__kernel_cos>
 8013bc6:	4821      	ldr	r0, [pc, #132]	@ (8013c4c <cos+0xa4>)
 8013bc8:	4281      	cmp	r1, r0
 8013bca:	d908      	bls.n	8013bde <cos+0x36>
 8013bcc:	4610      	mov	r0, r2
 8013bce:	4619      	mov	r1, r3
 8013bd0:	f7ec fb32 	bl	8000238 <__aeabi_dsub>
 8013bd4:	ec41 0b10 	vmov	d0, r0, r1
 8013bd8:	b005      	add	sp, #20
 8013bda:	f85d fb04 	ldr.w	pc, [sp], #4
 8013bde:	4668      	mov	r0, sp
 8013be0:	f000 fcaa 	bl	8014538 <__ieee754_rem_pio2>
 8013be4:	f000 0003 	and.w	r0, r0, #3
 8013be8:	2801      	cmp	r0, #1
 8013bea:	d00b      	beq.n	8013c04 <cos+0x5c>
 8013bec:	2802      	cmp	r0, #2
 8013bee:	d015      	beq.n	8013c1c <cos+0x74>
 8013bf0:	b9d8      	cbnz	r0, 8013c2a <cos+0x82>
 8013bf2:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013bf6:	ed9d 0b00 	vldr	d0, [sp]
 8013bfa:	f000 f961 	bl	8013ec0 <__kernel_cos>
 8013bfe:	ec51 0b10 	vmov	r0, r1, d0
 8013c02:	e7e7      	b.n	8013bd4 <cos+0x2c>
 8013c04:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c08:	ed9d 0b00 	vldr	d0, [sp]
 8013c0c:	f000 fa20 	bl	8014050 <__kernel_sin>
 8013c10:	ec53 2b10 	vmov	r2, r3, d0
 8013c14:	4610      	mov	r0, r2
 8013c16:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8013c1a:	e7db      	b.n	8013bd4 <cos+0x2c>
 8013c1c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c20:	ed9d 0b00 	vldr	d0, [sp]
 8013c24:	f000 f94c 	bl	8013ec0 <__kernel_cos>
 8013c28:	e7f2      	b.n	8013c10 <cos+0x68>
 8013c2a:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c2e:	ed9d 0b00 	vldr	d0, [sp]
 8013c32:	2001      	movs	r0, #1
 8013c34:	f000 fa0c 	bl	8014050 <__kernel_sin>
 8013c38:	e7e1      	b.n	8013bfe <cos+0x56>
 8013c3a:	bf00      	nop
 8013c3c:	f3af 8000 	nop.w
	...
 8013c48:	3fe921fb 	.word	0x3fe921fb
 8013c4c:	7fefffff 	.word	0x7fefffff

08013c50 <sin>:
 8013c50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013c52:	ec53 2b10 	vmov	r2, r3, d0
 8013c56:	4826      	ldr	r0, [pc, #152]	@ (8013cf0 <sin+0xa0>)
 8013c58:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8013c5c:	4281      	cmp	r1, r0
 8013c5e:	d807      	bhi.n	8013c70 <sin+0x20>
 8013c60:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 8013ce8 <sin+0x98>
 8013c64:	2000      	movs	r0, #0
 8013c66:	b005      	add	sp, #20
 8013c68:	f85d eb04 	ldr.w	lr, [sp], #4
 8013c6c:	f000 b9f0 	b.w	8014050 <__kernel_sin>
 8013c70:	4820      	ldr	r0, [pc, #128]	@ (8013cf4 <sin+0xa4>)
 8013c72:	4281      	cmp	r1, r0
 8013c74:	d908      	bls.n	8013c88 <sin+0x38>
 8013c76:	4610      	mov	r0, r2
 8013c78:	4619      	mov	r1, r3
 8013c7a:	f7ec fadd 	bl	8000238 <__aeabi_dsub>
 8013c7e:	ec41 0b10 	vmov	d0, r0, r1
 8013c82:	b005      	add	sp, #20
 8013c84:	f85d fb04 	ldr.w	pc, [sp], #4
 8013c88:	4668      	mov	r0, sp
 8013c8a:	f000 fc55 	bl	8014538 <__ieee754_rem_pio2>
 8013c8e:	f000 0003 	and.w	r0, r0, #3
 8013c92:	2801      	cmp	r0, #1
 8013c94:	d00c      	beq.n	8013cb0 <sin+0x60>
 8013c96:	2802      	cmp	r0, #2
 8013c98:	d011      	beq.n	8013cbe <sin+0x6e>
 8013c9a:	b9e8      	cbnz	r0, 8013cd8 <sin+0x88>
 8013c9c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013ca0:	ed9d 0b00 	vldr	d0, [sp]
 8013ca4:	2001      	movs	r0, #1
 8013ca6:	f000 f9d3 	bl	8014050 <__kernel_sin>
 8013caa:	ec51 0b10 	vmov	r0, r1, d0
 8013cae:	e7e6      	b.n	8013c7e <sin+0x2e>
 8013cb0:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013cb4:	ed9d 0b00 	vldr	d0, [sp]
 8013cb8:	f000 f902 	bl	8013ec0 <__kernel_cos>
 8013cbc:	e7f5      	b.n	8013caa <sin+0x5a>
 8013cbe:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013cc2:	ed9d 0b00 	vldr	d0, [sp]
 8013cc6:	2001      	movs	r0, #1
 8013cc8:	f000 f9c2 	bl	8014050 <__kernel_sin>
 8013ccc:	ec53 2b10 	vmov	r2, r3, d0
 8013cd0:	4610      	mov	r0, r2
 8013cd2:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8013cd6:	e7d2      	b.n	8013c7e <sin+0x2e>
 8013cd8:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013cdc:	ed9d 0b00 	vldr	d0, [sp]
 8013ce0:	f000 f8ee 	bl	8013ec0 <__kernel_cos>
 8013ce4:	e7f2      	b.n	8013ccc <sin+0x7c>
 8013ce6:	bf00      	nop
	...
 8013cf0:	3fe921fb 	.word	0x3fe921fb
 8013cf4:	7fefffff 	.word	0x7fefffff

08013cf8 <powf>:
 8013cf8:	b508      	push	{r3, lr}
 8013cfa:	ed2d 8b04 	vpush	{d8-d9}
 8013cfe:	eeb0 8a60 	vmov.f32	s16, s1
 8013d02:	eeb0 9a40 	vmov.f32	s18, s0
 8013d06:	f000 fe4f 	bl	80149a8 <__ieee754_powf>
 8013d0a:	eeb4 8a48 	vcmp.f32	s16, s16
 8013d0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d12:	eef0 8a40 	vmov.f32	s17, s0
 8013d16:	d63e      	bvs.n	8013d96 <powf+0x9e>
 8013d18:	eeb5 9a40 	vcmp.f32	s18, #0.0
 8013d1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d20:	d112      	bne.n	8013d48 <powf+0x50>
 8013d22:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8013d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d2a:	d039      	beq.n	8013da0 <powf+0xa8>
 8013d2c:	eeb0 0a48 	vmov.f32	s0, s16
 8013d30:	f000 f839 	bl	8013da6 <finitef>
 8013d34:	b378      	cbz	r0, 8013d96 <powf+0x9e>
 8013d36:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d3e:	d52a      	bpl.n	8013d96 <powf+0x9e>
 8013d40:	f7fc fbe4 	bl	801050c <__errno>
 8013d44:	2322      	movs	r3, #34	@ 0x22
 8013d46:	e014      	b.n	8013d72 <powf+0x7a>
 8013d48:	f000 f82d 	bl	8013da6 <finitef>
 8013d4c:	b998      	cbnz	r0, 8013d76 <powf+0x7e>
 8013d4e:	eeb0 0a49 	vmov.f32	s0, s18
 8013d52:	f000 f828 	bl	8013da6 <finitef>
 8013d56:	b170      	cbz	r0, 8013d76 <powf+0x7e>
 8013d58:	eeb0 0a48 	vmov.f32	s0, s16
 8013d5c:	f000 f823 	bl	8013da6 <finitef>
 8013d60:	b148      	cbz	r0, 8013d76 <powf+0x7e>
 8013d62:	eef4 8a68 	vcmp.f32	s17, s17
 8013d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d6a:	d7e9      	bvc.n	8013d40 <powf+0x48>
 8013d6c:	f7fc fbce 	bl	801050c <__errno>
 8013d70:	2321      	movs	r3, #33	@ 0x21
 8013d72:	6003      	str	r3, [r0, #0]
 8013d74:	e00f      	b.n	8013d96 <powf+0x9e>
 8013d76:	eef5 8a40 	vcmp.f32	s17, #0.0
 8013d7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d7e:	d10a      	bne.n	8013d96 <powf+0x9e>
 8013d80:	eeb0 0a49 	vmov.f32	s0, s18
 8013d84:	f000 f80f 	bl	8013da6 <finitef>
 8013d88:	b128      	cbz	r0, 8013d96 <powf+0x9e>
 8013d8a:	eeb0 0a48 	vmov.f32	s0, s16
 8013d8e:	f000 f80a 	bl	8013da6 <finitef>
 8013d92:	2800      	cmp	r0, #0
 8013d94:	d1d4      	bne.n	8013d40 <powf+0x48>
 8013d96:	eeb0 0a68 	vmov.f32	s0, s17
 8013d9a:	ecbd 8b04 	vpop	{d8-d9}
 8013d9e:	bd08      	pop	{r3, pc}
 8013da0:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 8013da4:	e7f7      	b.n	8013d96 <powf+0x9e>

08013da6 <finitef>:
 8013da6:	ee10 3a10 	vmov	r3, s0
 8013daa:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 8013dae:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 8013db2:	bfac      	ite	ge
 8013db4:	2000      	movge	r0, #0
 8013db6:	2001      	movlt	r0, #1
 8013db8:	4770      	bx	lr

08013dba <cosl>:
 8013dba:	f7ff bef5 	b.w	8013ba8 <cos>

08013dbe <sinl>:
 8013dbe:	f7ff bf47 	b.w	8013c50 <sin>

08013dc2 <acosl>:
 8013dc2:	f000 bdb5 	b.w	8014930 <acos>
	...

08013dc8 <floor>:
 8013dc8:	ec51 0b10 	vmov	r0, r1, d0
 8013dcc:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8013dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dd4:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8013dd8:	2e13      	cmp	r6, #19
 8013dda:	460c      	mov	r4, r1
 8013ddc:	4605      	mov	r5, r0
 8013dde:	4680      	mov	r8, r0
 8013de0:	dc34      	bgt.n	8013e4c <floor+0x84>
 8013de2:	2e00      	cmp	r6, #0
 8013de4:	da17      	bge.n	8013e16 <floor+0x4e>
 8013de6:	a332      	add	r3, pc, #200	@ (adr r3, 8013eb0 <floor+0xe8>)
 8013de8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013dec:	f7ec fa26 	bl	800023c <__adddf3>
 8013df0:	2200      	movs	r2, #0
 8013df2:	2300      	movs	r3, #0
 8013df4:	f7ec fe68 	bl	8000ac8 <__aeabi_dcmpgt>
 8013df8:	b150      	cbz	r0, 8013e10 <floor+0x48>
 8013dfa:	2c00      	cmp	r4, #0
 8013dfc:	da55      	bge.n	8013eaa <floor+0xe2>
 8013dfe:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8013e02:	432c      	orrs	r4, r5
 8013e04:	2500      	movs	r5, #0
 8013e06:	42ac      	cmp	r4, r5
 8013e08:	4c2b      	ldr	r4, [pc, #172]	@ (8013eb8 <floor+0xf0>)
 8013e0a:	bf08      	it	eq
 8013e0c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8013e10:	4621      	mov	r1, r4
 8013e12:	4628      	mov	r0, r5
 8013e14:	e023      	b.n	8013e5e <floor+0x96>
 8013e16:	4f29      	ldr	r7, [pc, #164]	@ (8013ebc <floor+0xf4>)
 8013e18:	4137      	asrs	r7, r6
 8013e1a:	ea01 0307 	and.w	r3, r1, r7
 8013e1e:	4303      	orrs	r3, r0
 8013e20:	d01d      	beq.n	8013e5e <floor+0x96>
 8013e22:	a323      	add	r3, pc, #140	@ (adr r3, 8013eb0 <floor+0xe8>)
 8013e24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e28:	f7ec fa08 	bl	800023c <__adddf3>
 8013e2c:	2200      	movs	r2, #0
 8013e2e:	2300      	movs	r3, #0
 8013e30:	f7ec fe4a 	bl	8000ac8 <__aeabi_dcmpgt>
 8013e34:	2800      	cmp	r0, #0
 8013e36:	d0eb      	beq.n	8013e10 <floor+0x48>
 8013e38:	2c00      	cmp	r4, #0
 8013e3a:	bfbe      	ittt	lt
 8013e3c:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8013e40:	4133      	asrlt	r3, r6
 8013e42:	18e4      	addlt	r4, r4, r3
 8013e44:	ea24 0407 	bic.w	r4, r4, r7
 8013e48:	2500      	movs	r5, #0
 8013e4a:	e7e1      	b.n	8013e10 <floor+0x48>
 8013e4c:	2e33      	cmp	r6, #51	@ 0x33
 8013e4e:	dd0a      	ble.n	8013e66 <floor+0x9e>
 8013e50:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013e54:	d103      	bne.n	8013e5e <floor+0x96>
 8013e56:	4602      	mov	r2, r0
 8013e58:	460b      	mov	r3, r1
 8013e5a:	f7ec f9ef 	bl	800023c <__adddf3>
 8013e5e:	ec41 0b10 	vmov	d0, r0, r1
 8013e62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e66:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8013e6a:	f04f 37ff 	mov.w	r7, #4294967295
 8013e6e:	40df      	lsrs	r7, r3
 8013e70:	4207      	tst	r7, r0
 8013e72:	d0f4      	beq.n	8013e5e <floor+0x96>
 8013e74:	a30e      	add	r3, pc, #56	@ (adr r3, 8013eb0 <floor+0xe8>)
 8013e76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e7a:	f7ec f9df 	bl	800023c <__adddf3>
 8013e7e:	2200      	movs	r2, #0
 8013e80:	2300      	movs	r3, #0
 8013e82:	f7ec fe21 	bl	8000ac8 <__aeabi_dcmpgt>
 8013e86:	2800      	cmp	r0, #0
 8013e88:	d0c2      	beq.n	8013e10 <floor+0x48>
 8013e8a:	2c00      	cmp	r4, #0
 8013e8c:	da0a      	bge.n	8013ea4 <floor+0xdc>
 8013e8e:	2e14      	cmp	r6, #20
 8013e90:	d101      	bne.n	8013e96 <floor+0xce>
 8013e92:	3401      	adds	r4, #1
 8013e94:	e006      	b.n	8013ea4 <floor+0xdc>
 8013e96:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8013e9a:	2301      	movs	r3, #1
 8013e9c:	40b3      	lsls	r3, r6
 8013e9e:	441d      	add	r5, r3
 8013ea0:	4545      	cmp	r5, r8
 8013ea2:	d3f6      	bcc.n	8013e92 <floor+0xca>
 8013ea4:	ea25 0507 	bic.w	r5, r5, r7
 8013ea8:	e7b2      	b.n	8013e10 <floor+0x48>
 8013eaa:	2500      	movs	r5, #0
 8013eac:	462c      	mov	r4, r5
 8013eae:	e7af      	b.n	8013e10 <floor+0x48>
 8013eb0:	8800759c 	.word	0x8800759c
 8013eb4:	7e37e43c 	.word	0x7e37e43c
 8013eb8:	bff00000 	.word	0xbff00000
 8013ebc:	000fffff 	.word	0x000fffff

08013ec0 <__kernel_cos>:
 8013ec0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ec4:	ec57 6b10 	vmov	r6, r7, d0
 8013ec8:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8013ecc:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 8013ed0:	ed8d 1b00 	vstr	d1, [sp]
 8013ed4:	d206      	bcs.n	8013ee4 <__kernel_cos+0x24>
 8013ed6:	4630      	mov	r0, r6
 8013ed8:	4639      	mov	r1, r7
 8013eda:	f7ec fe15 	bl	8000b08 <__aeabi_d2iz>
 8013ede:	2800      	cmp	r0, #0
 8013ee0:	f000 8088 	beq.w	8013ff4 <__kernel_cos+0x134>
 8013ee4:	4632      	mov	r2, r6
 8013ee6:	463b      	mov	r3, r7
 8013ee8:	4630      	mov	r0, r6
 8013eea:	4639      	mov	r1, r7
 8013eec:	f7ec fb5c 	bl	80005a8 <__aeabi_dmul>
 8013ef0:	4b51      	ldr	r3, [pc, #324]	@ (8014038 <__kernel_cos+0x178>)
 8013ef2:	2200      	movs	r2, #0
 8013ef4:	4604      	mov	r4, r0
 8013ef6:	460d      	mov	r5, r1
 8013ef8:	f7ec fb56 	bl	80005a8 <__aeabi_dmul>
 8013efc:	a340      	add	r3, pc, #256	@ (adr r3, 8014000 <__kernel_cos+0x140>)
 8013efe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f02:	4682      	mov	sl, r0
 8013f04:	468b      	mov	fp, r1
 8013f06:	4620      	mov	r0, r4
 8013f08:	4629      	mov	r1, r5
 8013f0a:	f7ec fb4d 	bl	80005a8 <__aeabi_dmul>
 8013f0e:	a33e      	add	r3, pc, #248	@ (adr r3, 8014008 <__kernel_cos+0x148>)
 8013f10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f14:	f7ec f992 	bl	800023c <__adddf3>
 8013f18:	4622      	mov	r2, r4
 8013f1a:	462b      	mov	r3, r5
 8013f1c:	f7ec fb44 	bl	80005a8 <__aeabi_dmul>
 8013f20:	a33b      	add	r3, pc, #236	@ (adr r3, 8014010 <__kernel_cos+0x150>)
 8013f22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f26:	f7ec f987 	bl	8000238 <__aeabi_dsub>
 8013f2a:	4622      	mov	r2, r4
 8013f2c:	462b      	mov	r3, r5
 8013f2e:	f7ec fb3b 	bl	80005a8 <__aeabi_dmul>
 8013f32:	a339      	add	r3, pc, #228	@ (adr r3, 8014018 <__kernel_cos+0x158>)
 8013f34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f38:	f7ec f980 	bl	800023c <__adddf3>
 8013f3c:	4622      	mov	r2, r4
 8013f3e:	462b      	mov	r3, r5
 8013f40:	f7ec fb32 	bl	80005a8 <__aeabi_dmul>
 8013f44:	a336      	add	r3, pc, #216	@ (adr r3, 8014020 <__kernel_cos+0x160>)
 8013f46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f4a:	f7ec f975 	bl	8000238 <__aeabi_dsub>
 8013f4e:	4622      	mov	r2, r4
 8013f50:	462b      	mov	r3, r5
 8013f52:	f7ec fb29 	bl	80005a8 <__aeabi_dmul>
 8013f56:	a334      	add	r3, pc, #208	@ (adr r3, 8014028 <__kernel_cos+0x168>)
 8013f58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f5c:	f7ec f96e 	bl	800023c <__adddf3>
 8013f60:	4622      	mov	r2, r4
 8013f62:	462b      	mov	r3, r5
 8013f64:	f7ec fb20 	bl	80005a8 <__aeabi_dmul>
 8013f68:	4622      	mov	r2, r4
 8013f6a:	462b      	mov	r3, r5
 8013f6c:	f7ec fb1c 	bl	80005a8 <__aeabi_dmul>
 8013f70:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013f74:	4604      	mov	r4, r0
 8013f76:	460d      	mov	r5, r1
 8013f78:	4630      	mov	r0, r6
 8013f7a:	4639      	mov	r1, r7
 8013f7c:	f7ec fb14 	bl	80005a8 <__aeabi_dmul>
 8013f80:	460b      	mov	r3, r1
 8013f82:	4602      	mov	r2, r0
 8013f84:	4629      	mov	r1, r5
 8013f86:	4620      	mov	r0, r4
 8013f88:	f7ec f956 	bl	8000238 <__aeabi_dsub>
 8013f8c:	4b2b      	ldr	r3, [pc, #172]	@ (801403c <__kernel_cos+0x17c>)
 8013f8e:	4598      	cmp	r8, r3
 8013f90:	4606      	mov	r6, r0
 8013f92:	460f      	mov	r7, r1
 8013f94:	d810      	bhi.n	8013fb8 <__kernel_cos+0xf8>
 8013f96:	4602      	mov	r2, r0
 8013f98:	460b      	mov	r3, r1
 8013f9a:	4650      	mov	r0, sl
 8013f9c:	4659      	mov	r1, fp
 8013f9e:	f7ec f94b 	bl	8000238 <__aeabi_dsub>
 8013fa2:	460b      	mov	r3, r1
 8013fa4:	4926      	ldr	r1, [pc, #152]	@ (8014040 <__kernel_cos+0x180>)
 8013fa6:	4602      	mov	r2, r0
 8013fa8:	2000      	movs	r0, #0
 8013faa:	f7ec f945 	bl	8000238 <__aeabi_dsub>
 8013fae:	ec41 0b10 	vmov	d0, r0, r1
 8013fb2:	b003      	add	sp, #12
 8013fb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fb8:	4b22      	ldr	r3, [pc, #136]	@ (8014044 <__kernel_cos+0x184>)
 8013fba:	4921      	ldr	r1, [pc, #132]	@ (8014040 <__kernel_cos+0x180>)
 8013fbc:	4598      	cmp	r8, r3
 8013fbe:	bf8c      	ite	hi
 8013fc0:	4d21      	ldrhi	r5, [pc, #132]	@ (8014048 <__kernel_cos+0x188>)
 8013fc2:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 8013fc6:	2400      	movs	r4, #0
 8013fc8:	4622      	mov	r2, r4
 8013fca:	462b      	mov	r3, r5
 8013fcc:	2000      	movs	r0, #0
 8013fce:	f7ec f933 	bl	8000238 <__aeabi_dsub>
 8013fd2:	4622      	mov	r2, r4
 8013fd4:	4680      	mov	r8, r0
 8013fd6:	4689      	mov	r9, r1
 8013fd8:	462b      	mov	r3, r5
 8013fda:	4650      	mov	r0, sl
 8013fdc:	4659      	mov	r1, fp
 8013fde:	f7ec f92b 	bl	8000238 <__aeabi_dsub>
 8013fe2:	4632      	mov	r2, r6
 8013fe4:	463b      	mov	r3, r7
 8013fe6:	f7ec f927 	bl	8000238 <__aeabi_dsub>
 8013fea:	4602      	mov	r2, r0
 8013fec:	460b      	mov	r3, r1
 8013fee:	4640      	mov	r0, r8
 8013ff0:	4649      	mov	r1, r9
 8013ff2:	e7da      	b.n	8013faa <__kernel_cos+0xea>
 8013ff4:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 8014030 <__kernel_cos+0x170>
 8013ff8:	e7db      	b.n	8013fb2 <__kernel_cos+0xf2>
 8013ffa:	bf00      	nop
 8013ffc:	f3af 8000 	nop.w
 8014000:	be8838d4 	.word	0xbe8838d4
 8014004:	bda8fae9 	.word	0xbda8fae9
 8014008:	bdb4b1c4 	.word	0xbdb4b1c4
 801400c:	3e21ee9e 	.word	0x3e21ee9e
 8014010:	809c52ad 	.word	0x809c52ad
 8014014:	3e927e4f 	.word	0x3e927e4f
 8014018:	19cb1590 	.word	0x19cb1590
 801401c:	3efa01a0 	.word	0x3efa01a0
 8014020:	16c15177 	.word	0x16c15177
 8014024:	3f56c16c 	.word	0x3f56c16c
 8014028:	5555554c 	.word	0x5555554c
 801402c:	3fa55555 	.word	0x3fa55555
 8014030:	00000000 	.word	0x00000000
 8014034:	3ff00000 	.word	0x3ff00000
 8014038:	3fe00000 	.word	0x3fe00000
 801403c:	3fd33332 	.word	0x3fd33332
 8014040:	3ff00000 	.word	0x3ff00000
 8014044:	3fe90000 	.word	0x3fe90000
 8014048:	3fd20000 	.word	0x3fd20000
 801404c:	00000000 	.word	0x00000000

08014050 <__kernel_sin>:
 8014050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014054:	ec55 4b10 	vmov	r4, r5, d0
 8014058:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 801405c:	b085      	sub	sp, #20
 801405e:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 8014062:	ed8d 1b02 	vstr	d1, [sp, #8]
 8014066:	4680      	mov	r8, r0
 8014068:	d205      	bcs.n	8014076 <__kernel_sin+0x26>
 801406a:	4620      	mov	r0, r4
 801406c:	4629      	mov	r1, r5
 801406e:	f7ec fd4b 	bl	8000b08 <__aeabi_d2iz>
 8014072:	2800      	cmp	r0, #0
 8014074:	d052      	beq.n	801411c <__kernel_sin+0xcc>
 8014076:	4622      	mov	r2, r4
 8014078:	462b      	mov	r3, r5
 801407a:	4620      	mov	r0, r4
 801407c:	4629      	mov	r1, r5
 801407e:	f7ec fa93 	bl	80005a8 <__aeabi_dmul>
 8014082:	4682      	mov	sl, r0
 8014084:	468b      	mov	fp, r1
 8014086:	4602      	mov	r2, r0
 8014088:	460b      	mov	r3, r1
 801408a:	4620      	mov	r0, r4
 801408c:	4629      	mov	r1, r5
 801408e:	f7ec fa8b 	bl	80005a8 <__aeabi_dmul>
 8014092:	a342      	add	r3, pc, #264	@ (adr r3, 801419c <__kernel_sin+0x14c>)
 8014094:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014098:	e9cd 0100 	strd	r0, r1, [sp]
 801409c:	4650      	mov	r0, sl
 801409e:	4659      	mov	r1, fp
 80140a0:	f7ec fa82 	bl	80005a8 <__aeabi_dmul>
 80140a4:	a33f      	add	r3, pc, #252	@ (adr r3, 80141a4 <__kernel_sin+0x154>)
 80140a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140aa:	f7ec f8c5 	bl	8000238 <__aeabi_dsub>
 80140ae:	4652      	mov	r2, sl
 80140b0:	465b      	mov	r3, fp
 80140b2:	f7ec fa79 	bl	80005a8 <__aeabi_dmul>
 80140b6:	a33d      	add	r3, pc, #244	@ (adr r3, 80141ac <__kernel_sin+0x15c>)
 80140b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140bc:	f7ec f8be 	bl	800023c <__adddf3>
 80140c0:	4652      	mov	r2, sl
 80140c2:	465b      	mov	r3, fp
 80140c4:	f7ec fa70 	bl	80005a8 <__aeabi_dmul>
 80140c8:	a33a      	add	r3, pc, #232	@ (adr r3, 80141b4 <__kernel_sin+0x164>)
 80140ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140ce:	f7ec f8b3 	bl	8000238 <__aeabi_dsub>
 80140d2:	4652      	mov	r2, sl
 80140d4:	465b      	mov	r3, fp
 80140d6:	f7ec fa67 	bl	80005a8 <__aeabi_dmul>
 80140da:	a338      	add	r3, pc, #224	@ (adr r3, 80141bc <__kernel_sin+0x16c>)
 80140dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140e0:	f7ec f8ac 	bl	800023c <__adddf3>
 80140e4:	4606      	mov	r6, r0
 80140e6:	460f      	mov	r7, r1
 80140e8:	f1b8 0f00 	cmp.w	r8, #0
 80140ec:	d11b      	bne.n	8014126 <__kernel_sin+0xd6>
 80140ee:	4602      	mov	r2, r0
 80140f0:	460b      	mov	r3, r1
 80140f2:	4650      	mov	r0, sl
 80140f4:	4659      	mov	r1, fp
 80140f6:	f7ec fa57 	bl	80005a8 <__aeabi_dmul>
 80140fa:	a325      	add	r3, pc, #148	@ (adr r3, 8014190 <__kernel_sin+0x140>)
 80140fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014100:	f7ec f89a 	bl	8000238 <__aeabi_dsub>
 8014104:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014108:	f7ec fa4e 	bl	80005a8 <__aeabi_dmul>
 801410c:	4602      	mov	r2, r0
 801410e:	460b      	mov	r3, r1
 8014110:	4620      	mov	r0, r4
 8014112:	4629      	mov	r1, r5
 8014114:	f7ec f892 	bl	800023c <__adddf3>
 8014118:	4604      	mov	r4, r0
 801411a:	460d      	mov	r5, r1
 801411c:	ec45 4b10 	vmov	d0, r4, r5
 8014120:	b005      	add	sp, #20
 8014122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014126:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801412a:	4b1b      	ldr	r3, [pc, #108]	@ (8014198 <__kernel_sin+0x148>)
 801412c:	2200      	movs	r2, #0
 801412e:	f7ec fa3b 	bl	80005a8 <__aeabi_dmul>
 8014132:	4632      	mov	r2, r6
 8014134:	4680      	mov	r8, r0
 8014136:	4689      	mov	r9, r1
 8014138:	463b      	mov	r3, r7
 801413a:	e9dd 0100 	ldrd	r0, r1, [sp]
 801413e:	f7ec fa33 	bl	80005a8 <__aeabi_dmul>
 8014142:	4602      	mov	r2, r0
 8014144:	460b      	mov	r3, r1
 8014146:	4640      	mov	r0, r8
 8014148:	4649      	mov	r1, r9
 801414a:	f7ec f875 	bl	8000238 <__aeabi_dsub>
 801414e:	4652      	mov	r2, sl
 8014150:	465b      	mov	r3, fp
 8014152:	f7ec fa29 	bl	80005a8 <__aeabi_dmul>
 8014156:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801415a:	f7ec f86d 	bl	8000238 <__aeabi_dsub>
 801415e:	a30c      	add	r3, pc, #48	@ (adr r3, 8014190 <__kernel_sin+0x140>)
 8014160:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014164:	4606      	mov	r6, r0
 8014166:	460f      	mov	r7, r1
 8014168:	e9dd 0100 	ldrd	r0, r1, [sp]
 801416c:	f7ec fa1c 	bl	80005a8 <__aeabi_dmul>
 8014170:	4602      	mov	r2, r0
 8014172:	460b      	mov	r3, r1
 8014174:	4630      	mov	r0, r6
 8014176:	4639      	mov	r1, r7
 8014178:	f7ec f860 	bl	800023c <__adddf3>
 801417c:	4602      	mov	r2, r0
 801417e:	460b      	mov	r3, r1
 8014180:	4620      	mov	r0, r4
 8014182:	4629      	mov	r1, r5
 8014184:	f7ec f858 	bl	8000238 <__aeabi_dsub>
 8014188:	e7c6      	b.n	8014118 <__kernel_sin+0xc8>
 801418a:	bf00      	nop
 801418c:	f3af 8000 	nop.w
 8014190:	55555549 	.word	0x55555549
 8014194:	3fc55555 	.word	0x3fc55555
 8014198:	3fe00000 	.word	0x3fe00000
 801419c:	5acfd57c 	.word	0x5acfd57c
 80141a0:	3de5d93a 	.word	0x3de5d93a
 80141a4:	8a2b9ceb 	.word	0x8a2b9ceb
 80141a8:	3e5ae5e6 	.word	0x3e5ae5e6
 80141ac:	57b1fe7d 	.word	0x57b1fe7d
 80141b0:	3ec71de3 	.word	0x3ec71de3
 80141b4:	19c161d5 	.word	0x19c161d5
 80141b8:	3f2a01a0 	.word	0x3f2a01a0
 80141bc:	1110f8a6 	.word	0x1110f8a6
 80141c0:	3f811111 	.word	0x3f811111
 80141c4:	00000000 	.word	0x00000000

080141c8 <__ieee754_log>:
 80141c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141cc:	ec51 0b10 	vmov	r0, r1, d0
 80141d0:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80141d4:	b087      	sub	sp, #28
 80141d6:	460d      	mov	r5, r1
 80141d8:	da26      	bge.n	8014228 <__ieee754_log+0x60>
 80141da:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80141de:	4303      	orrs	r3, r0
 80141e0:	4602      	mov	r2, r0
 80141e2:	d10a      	bne.n	80141fa <__ieee754_log+0x32>
 80141e4:	49ce      	ldr	r1, [pc, #824]	@ (8014520 <__ieee754_log+0x358>)
 80141e6:	2200      	movs	r2, #0
 80141e8:	2300      	movs	r3, #0
 80141ea:	2000      	movs	r0, #0
 80141ec:	f7ec fb06 	bl	80007fc <__aeabi_ddiv>
 80141f0:	ec41 0b10 	vmov	d0, r0, r1
 80141f4:	b007      	add	sp, #28
 80141f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141fa:	2900      	cmp	r1, #0
 80141fc:	da05      	bge.n	801420a <__ieee754_log+0x42>
 80141fe:	460b      	mov	r3, r1
 8014200:	f7ec f81a 	bl	8000238 <__aeabi_dsub>
 8014204:	2200      	movs	r2, #0
 8014206:	2300      	movs	r3, #0
 8014208:	e7f0      	b.n	80141ec <__ieee754_log+0x24>
 801420a:	4bc6      	ldr	r3, [pc, #792]	@ (8014524 <__ieee754_log+0x35c>)
 801420c:	2200      	movs	r2, #0
 801420e:	f7ec f9cb 	bl	80005a8 <__aeabi_dmul>
 8014212:	f06f 0335 	mvn.w	r3, #53	@ 0x35
 8014216:	460d      	mov	r5, r1
 8014218:	4ac3      	ldr	r2, [pc, #780]	@ (8014528 <__ieee754_log+0x360>)
 801421a:	4295      	cmp	r5, r2
 801421c:	dd06      	ble.n	801422c <__ieee754_log+0x64>
 801421e:	4602      	mov	r2, r0
 8014220:	460b      	mov	r3, r1
 8014222:	f7ec f80b 	bl	800023c <__adddf3>
 8014226:	e7e3      	b.n	80141f0 <__ieee754_log+0x28>
 8014228:	2300      	movs	r3, #0
 801422a:	e7f5      	b.n	8014218 <__ieee754_log+0x50>
 801422c:	152c      	asrs	r4, r5, #20
 801422e:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 8014232:	f3c5 0513 	ubfx	r5, r5, #0, #20
 8014236:	441c      	add	r4, r3
 8014238:	f505 2315 	add.w	r3, r5, #610304	@ 0x95000
 801423c:	f603 7364 	addw	r3, r3, #3940	@ 0xf64
 8014240:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8014244:	f083 527f 	eor.w	r2, r3, #1069547520	@ 0x3fc00000
 8014248:	f482 1240 	eor.w	r2, r2, #3145728	@ 0x300000
 801424c:	ea42 0105 	orr.w	r1, r2, r5
 8014250:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 8014254:	2200      	movs	r2, #0
 8014256:	4bb5      	ldr	r3, [pc, #724]	@ (801452c <__ieee754_log+0x364>)
 8014258:	f7eb ffee 	bl	8000238 <__aeabi_dsub>
 801425c:	1cab      	adds	r3, r5, #2
 801425e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8014262:	2b02      	cmp	r3, #2
 8014264:	4682      	mov	sl, r0
 8014266:	468b      	mov	fp, r1
 8014268:	f04f 0200 	mov.w	r2, #0
 801426c:	dc53      	bgt.n	8014316 <__ieee754_log+0x14e>
 801426e:	2300      	movs	r3, #0
 8014270:	f7ec fc02 	bl	8000a78 <__aeabi_dcmpeq>
 8014274:	b1d0      	cbz	r0, 80142ac <__ieee754_log+0xe4>
 8014276:	2c00      	cmp	r4, #0
 8014278:	f000 8120 	beq.w	80144bc <__ieee754_log+0x2f4>
 801427c:	4620      	mov	r0, r4
 801427e:	f7ec f929 	bl	80004d4 <__aeabi_i2d>
 8014282:	a391      	add	r3, pc, #580	@ (adr r3, 80144c8 <__ieee754_log+0x300>)
 8014284:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014288:	4606      	mov	r6, r0
 801428a:	460f      	mov	r7, r1
 801428c:	f7ec f98c 	bl	80005a8 <__aeabi_dmul>
 8014290:	a38f      	add	r3, pc, #572	@ (adr r3, 80144d0 <__ieee754_log+0x308>)
 8014292:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014296:	4604      	mov	r4, r0
 8014298:	460d      	mov	r5, r1
 801429a:	4630      	mov	r0, r6
 801429c:	4639      	mov	r1, r7
 801429e:	f7ec f983 	bl	80005a8 <__aeabi_dmul>
 80142a2:	4602      	mov	r2, r0
 80142a4:	460b      	mov	r3, r1
 80142a6:	4620      	mov	r0, r4
 80142a8:	4629      	mov	r1, r5
 80142aa:	e7ba      	b.n	8014222 <__ieee754_log+0x5a>
 80142ac:	a38a      	add	r3, pc, #552	@ (adr r3, 80144d8 <__ieee754_log+0x310>)
 80142ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80142b2:	4650      	mov	r0, sl
 80142b4:	4659      	mov	r1, fp
 80142b6:	f7ec f977 	bl	80005a8 <__aeabi_dmul>
 80142ba:	4602      	mov	r2, r0
 80142bc:	460b      	mov	r3, r1
 80142be:	2000      	movs	r0, #0
 80142c0:	499b      	ldr	r1, [pc, #620]	@ (8014530 <__ieee754_log+0x368>)
 80142c2:	f7eb ffb9 	bl	8000238 <__aeabi_dsub>
 80142c6:	4652      	mov	r2, sl
 80142c8:	4606      	mov	r6, r0
 80142ca:	460f      	mov	r7, r1
 80142cc:	465b      	mov	r3, fp
 80142ce:	4650      	mov	r0, sl
 80142d0:	4659      	mov	r1, fp
 80142d2:	f7ec f969 	bl	80005a8 <__aeabi_dmul>
 80142d6:	4602      	mov	r2, r0
 80142d8:	460b      	mov	r3, r1
 80142da:	4630      	mov	r0, r6
 80142dc:	4639      	mov	r1, r7
 80142de:	f7ec f963 	bl	80005a8 <__aeabi_dmul>
 80142e2:	4606      	mov	r6, r0
 80142e4:	460f      	mov	r7, r1
 80142e6:	b914      	cbnz	r4, 80142ee <__ieee754_log+0x126>
 80142e8:	4632      	mov	r2, r6
 80142ea:	463b      	mov	r3, r7
 80142ec:	e0a0      	b.n	8014430 <__ieee754_log+0x268>
 80142ee:	4620      	mov	r0, r4
 80142f0:	f7ec f8f0 	bl	80004d4 <__aeabi_i2d>
 80142f4:	a374      	add	r3, pc, #464	@ (adr r3, 80144c8 <__ieee754_log+0x300>)
 80142f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80142fa:	4680      	mov	r8, r0
 80142fc:	4689      	mov	r9, r1
 80142fe:	f7ec f953 	bl	80005a8 <__aeabi_dmul>
 8014302:	a373      	add	r3, pc, #460	@ (adr r3, 80144d0 <__ieee754_log+0x308>)
 8014304:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014308:	4604      	mov	r4, r0
 801430a:	460d      	mov	r5, r1
 801430c:	4640      	mov	r0, r8
 801430e:	4649      	mov	r1, r9
 8014310:	f7ec f94a 	bl	80005a8 <__aeabi_dmul>
 8014314:	e0a5      	b.n	8014462 <__ieee754_log+0x29a>
 8014316:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 801431a:	f7eb ff8f 	bl	800023c <__adddf3>
 801431e:	4602      	mov	r2, r0
 8014320:	460b      	mov	r3, r1
 8014322:	4650      	mov	r0, sl
 8014324:	4659      	mov	r1, fp
 8014326:	f7ec fa69 	bl	80007fc <__aeabi_ddiv>
 801432a:	e9cd 0100 	strd	r0, r1, [sp]
 801432e:	4620      	mov	r0, r4
 8014330:	f7ec f8d0 	bl	80004d4 <__aeabi_i2d>
 8014334:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014338:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801433c:	4610      	mov	r0, r2
 801433e:	4619      	mov	r1, r3
 8014340:	f7ec f932 	bl	80005a8 <__aeabi_dmul>
 8014344:	4602      	mov	r2, r0
 8014346:	460b      	mov	r3, r1
 8014348:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801434c:	f7ec f92c 	bl	80005a8 <__aeabi_dmul>
 8014350:	a363      	add	r3, pc, #396	@ (adr r3, 80144e0 <__ieee754_log+0x318>)
 8014352:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014356:	4680      	mov	r8, r0
 8014358:	4689      	mov	r9, r1
 801435a:	f7ec f925 	bl	80005a8 <__aeabi_dmul>
 801435e:	a362      	add	r3, pc, #392	@ (adr r3, 80144e8 <__ieee754_log+0x320>)
 8014360:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014364:	f7eb ff6a 	bl	800023c <__adddf3>
 8014368:	4642      	mov	r2, r8
 801436a:	464b      	mov	r3, r9
 801436c:	f7ec f91c 	bl	80005a8 <__aeabi_dmul>
 8014370:	a35f      	add	r3, pc, #380	@ (adr r3, 80144f0 <__ieee754_log+0x328>)
 8014372:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014376:	f7eb ff61 	bl	800023c <__adddf3>
 801437a:	4642      	mov	r2, r8
 801437c:	464b      	mov	r3, r9
 801437e:	f7ec f913 	bl	80005a8 <__aeabi_dmul>
 8014382:	a35d      	add	r3, pc, #372	@ (adr r3, 80144f8 <__ieee754_log+0x330>)
 8014384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014388:	f7eb ff58 	bl	800023c <__adddf3>
 801438c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8014390:	f7ec f90a 	bl	80005a8 <__aeabi_dmul>
 8014394:	a35a      	add	r3, pc, #360	@ (adr r3, 8014500 <__ieee754_log+0x338>)
 8014396:	e9d3 2300 	ldrd	r2, r3, [r3]
 801439a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801439e:	4640      	mov	r0, r8
 80143a0:	4649      	mov	r1, r9
 80143a2:	f7ec f901 	bl	80005a8 <__aeabi_dmul>
 80143a6:	a358      	add	r3, pc, #352	@ (adr r3, 8014508 <__ieee754_log+0x340>)
 80143a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143ac:	f7eb ff46 	bl	800023c <__adddf3>
 80143b0:	4642      	mov	r2, r8
 80143b2:	464b      	mov	r3, r9
 80143b4:	f7ec f8f8 	bl	80005a8 <__aeabi_dmul>
 80143b8:	a355      	add	r3, pc, #340	@ (adr r3, 8014510 <__ieee754_log+0x348>)
 80143ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143be:	f7eb ff3d 	bl	800023c <__adddf3>
 80143c2:	4642      	mov	r2, r8
 80143c4:	464b      	mov	r3, r9
 80143c6:	f7ec f8ef 	bl	80005a8 <__aeabi_dmul>
 80143ca:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 80143ce:	4602      	mov	r2, r0
 80143d0:	460b      	mov	r3, r1
 80143d2:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 80143d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80143da:	f7eb ff2f 	bl	800023c <__adddf3>
 80143de:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 80143e2:	3551      	adds	r5, #81	@ 0x51
 80143e4:	4335      	orrs	r5, r6
 80143e6:	2d00      	cmp	r5, #0
 80143e8:	4680      	mov	r8, r0
 80143ea:	4689      	mov	r9, r1
 80143ec:	dd48      	ble.n	8014480 <__ieee754_log+0x2b8>
 80143ee:	4b50      	ldr	r3, [pc, #320]	@ (8014530 <__ieee754_log+0x368>)
 80143f0:	2200      	movs	r2, #0
 80143f2:	4650      	mov	r0, sl
 80143f4:	4659      	mov	r1, fp
 80143f6:	f7ec f8d7 	bl	80005a8 <__aeabi_dmul>
 80143fa:	4652      	mov	r2, sl
 80143fc:	465b      	mov	r3, fp
 80143fe:	f7ec f8d3 	bl	80005a8 <__aeabi_dmul>
 8014402:	4602      	mov	r2, r0
 8014404:	460b      	mov	r3, r1
 8014406:	4606      	mov	r6, r0
 8014408:	460f      	mov	r7, r1
 801440a:	4640      	mov	r0, r8
 801440c:	4649      	mov	r1, r9
 801440e:	f7eb ff15 	bl	800023c <__adddf3>
 8014412:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014416:	f7ec f8c7 	bl	80005a8 <__aeabi_dmul>
 801441a:	4680      	mov	r8, r0
 801441c:	4689      	mov	r9, r1
 801441e:	b964      	cbnz	r4, 801443a <__ieee754_log+0x272>
 8014420:	4602      	mov	r2, r0
 8014422:	460b      	mov	r3, r1
 8014424:	4630      	mov	r0, r6
 8014426:	4639      	mov	r1, r7
 8014428:	f7eb ff06 	bl	8000238 <__aeabi_dsub>
 801442c:	4602      	mov	r2, r0
 801442e:	460b      	mov	r3, r1
 8014430:	4650      	mov	r0, sl
 8014432:	4659      	mov	r1, fp
 8014434:	f7eb ff00 	bl	8000238 <__aeabi_dsub>
 8014438:	e6da      	b.n	80141f0 <__ieee754_log+0x28>
 801443a:	a323      	add	r3, pc, #140	@ (adr r3, 80144c8 <__ieee754_log+0x300>)
 801443c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014440:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014444:	f7ec f8b0 	bl	80005a8 <__aeabi_dmul>
 8014448:	a321      	add	r3, pc, #132	@ (adr r3, 80144d0 <__ieee754_log+0x308>)
 801444a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801444e:	4604      	mov	r4, r0
 8014450:	460d      	mov	r5, r1
 8014452:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014456:	f7ec f8a7 	bl	80005a8 <__aeabi_dmul>
 801445a:	4642      	mov	r2, r8
 801445c:	464b      	mov	r3, r9
 801445e:	f7eb feed 	bl	800023c <__adddf3>
 8014462:	4602      	mov	r2, r0
 8014464:	460b      	mov	r3, r1
 8014466:	4630      	mov	r0, r6
 8014468:	4639      	mov	r1, r7
 801446a:	f7eb fee5 	bl	8000238 <__aeabi_dsub>
 801446e:	4652      	mov	r2, sl
 8014470:	465b      	mov	r3, fp
 8014472:	f7eb fee1 	bl	8000238 <__aeabi_dsub>
 8014476:	4602      	mov	r2, r0
 8014478:	460b      	mov	r3, r1
 801447a:	4620      	mov	r0, r4
 801447c:	4629      	mov	r1, r5
 801447e:	e7d9      	b.n	8014434 <__ieee754_log+0x26c>
 8014480:	4602      	mov	r2, r0
 8014482:	460b      	mov	r3, r1
 8014484:	4650      	mov	r0, sl
 8014486:	4659      	mov	r1, fp
 8014488:	f7eb fed6 	bl	8000238 <__aeabi_dsub>
 801448c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014490:	f7ec f88a 	bl	80005a8 <__aeabi_dmul>
 8014494:	4606      	mov	r6, r0
 8014496:	460f      	mov	r7, r1
 8014498:	2c00      	cmp	r4, #0
 801449a:	f43f af25 	beq.w	80142e8 <__ieee754_log+0x120>
 801449e:	a30a      	add	r3, pc, #40	@ (adr r3, 80144c8 <__ieee754_log+0x300>)
 80144a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80144a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80144a8:	f7ec f87e 	bl	80005a8 <__aeabi_dmul>
 80144ac:	a308      	add	r3, pc, #32	@ (adr r3, 80144d0 <__ieee754_log+0x308>)
 80144ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80144b2:	4604      	mov	r4, r0
 80144b4:	460d      	mov	r5, r1
 80144b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80144ba:	e729      	b.n	8014310 <__ieee754_log+0x148>
 80144bc:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 8014518 <__ieee754_log+0x350>
 80144c0:	e698      	b.n	80141f4 <__ieee754_log+0x2c>
 80144c2:	bf00      	nop
 80144c4:	f3af 8000 	nop.w
 80144c8:	fee00000 	.word	0xfee00000
 80144cc:	3fe62e42 	.word	0x3fe62e42
 80144d0:	35793c76 	.word	0x35793c76
 80144d4:	3dea39ef 	.word	0x3dea39ef
 80144d8:	55555555 	.word	0x55555555
 80144dc:	3fd55555 	.word	0x3fd55555
 80144e0:	df3e5244 	.word	0xdf3e5244
 80144e4:	3fc2f112 	.word	0x3fc2f112
 80144e8:	96cb03de 	.word	0x96cb03de
 80144ec:	3fc74664 	.word	0x3fc74664
 80144f0:	94229359 	.word	0x94229359
 80144f4:	3fd24924 	.word	0x3fd24924
 80144f8:	55555593 	.word	0x55555593
 80144fc:	3fe55555 	.word	0x3fe55555
 8014500:	d078c69f 	.word	0xd078c69f
 8014504:	3fc39a09 	.word	0x3fc39a09
 8014508:	1d8e78af 	.word	0x1d8e78af
 801450c:	3fcc71c5 	.word	0x3fcc71c5
 8014510:	9997fa04 	.word	0x9997fa04
 8014514:	3fd99999 	.word	0x3fd99999
	...
 8014520:	c3500000 	.word	0xc3500000
 8014524:	43500000 	.word	0x43500000
 8014528:	7fefffff 	.word	0x7fefffff
 801452c:	3ff00000 	.word	0x3ff00000
 8014530:	3fe00000 	.word	0x3fe00000
 8014534:	00000000 	.word	0x00000000

08014538 <__ieee754_rem_pio2>:
 8014538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801453c:	ec57 6b10 	vmov	r6, r7, d0
 8014540:	4bc5      	ldr	r3, [pc, #788]	@ (8014858 <__ieee754_rem_pio2+0x320>)
 8014542:	b08d      	sub	sp, #52	@ 0x34
 8014544:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8014548:	4598      	cmp	r8, r3
 801454a:	4604      	mov	r4, r0
 801454c:	9704      	str	r7, [sp, #16]
 801454e:	d807      	bhi.n	8014560 <__ieee754_rem_pio2+0x28>
 8014550:	2200      	movs	r2, #0
 8014552:	2300      	movs	r3, #0
 8014554:	ed80 0b00 	vstr	d0, [r0]
 8014558:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801455c:	2500      	movs	r5, #0
 801455e:	e028      	b.n	80145b2 <__ieee754_rem_pio2+0x7a>
 8014560:	4bbe      	ldr	r3, [pc, #760]	@ (801485c <__ieee754_rem_pio2+0x324>)
 8014562:	4598      	cmp	r8, r3
 8014564:	d878      	bhi.n	8014658 <__ieee754_rem_pio2+0x120>
 8014566:	9b04      	ldr	r3, [sp, #16]
 8014568:	4dbd      	ldr	r5, [pc, #756]	@ (8014860 <__ieee754_rem_pio2+0x328>)
 801456a:	2b00      	cmp	r3, #0
 801456c:	4630      	mov	r0, r6
 801456e:	a3ac      	add	r3, pc, #688	@ (adr r3, 8014820 <__ieee754_rem_pio2+0x2e8>)
 8014570:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014574:	4639      	mov	r1, r7
 8014576:	dd38      	ble.n	80145ea <__ieee754_rem_pio2+0xb2>
 8014578:	f7eb fe5e 	bl	8000238 <__aeabi_dsub>
 801457c:	45a8      	cmp	r8, r5
 801457e:	4606      	mov	r6, r0
 8014580:	460f      	mov	r7, r1
 8014582:	d01a      	beq.n	80145ba <__ieee754_rem_pio2+0x82>
 8014584:	a3a8      	add	r3, pc, #672	@ (adr r3, 8014828 <__ieee754_rem_pio2+0x2f0>)
 8014586:	e9d3 2300 	ldrd	r2, r3, [r3]
 801458a:	f7eb fe55 	bl	8000238 <__aeabi_dsub>
 801458e:	4602      	mov	r2, r0
 8014590:	460b      	mov	r3, r1
 8014592:	4680      	mov	r8, r0
 8014594:	4689      	mov	r9, r1
 8014596:	4630      	mov	r0, r6
 8014598:	4639      	mov	r1, r7
 801459a:	f7eb fe4d 	bl	8000238 <__aeabi_dsub>
 801459e:	a3a2      	add	r3, pc, #648	@ (adr r3, 8014828 <__ieee754_rem_pio2+0x2f0>)
 80145a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145a4:	f7eb fe48 	bl	8000238 <__aeabi_dsub>
 80145a8:	e9c4 8900 	strd	r8, r9, [r4]
 80145ac:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80145b0:	2501      	movs	r5, #1
 80145b2:	4628      	mov	r0, r5
 80145b4:	b00d      	add	sp, #52	@ 0x34
 80145b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145ba:	a39d      	add	r3, pc, #628	@ (adr r3, 8014830 <__ieee754_rem_pio2+0x2f8>)
 80145bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145c0:	f7eb fe3a 	bl	8000238 <__aeabi_dsub>
 80145c4:	a39c      	add	r3, pc, #624	@ (adr r3, 8014838 <__ieee754_rem_pio2+0x300>)
 80145c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145ca:	4606      	mov	r6, r0
 80145cc:	460f      	mov	r7, r1
 80145ce:	f7eb fe33 	bl	8000238 <__aeabi_dsub>
 80145d2:	4602      	mov	r2, r0
 80145d4:	460b      	mov	r3, r1
 80145d6:	4680      	mov	r8, r0
 80145d8:	4689      	mov	r9, r1
 80145da:	4630      	mov	r0, r6
 80145dc:	4639      	mov	r1, r7
 80145de:	f7eb fe2b 	bl	8000238 <__aeabi_dsub>
 80145e2:	a395      	add	r3, pc, #596	@ (adr r3, 8014838 <__ieee754_rem_pio2+0x300>)
 80145e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145e8:	e7dc      	b.n	80145a4 <__ieee754_rem_pio2+0x6c>
 80145ea:	f7eb fe27 	bl	800023c <__adddf3>
 80145ee:	45a8      	cmp	r8, r5
 80145f0:	4606      	mov	r6, r0
 80145f2:	460f      	mov	r7, r1
 80145f4:	d018      	beq.n	8014628 <__ieee754_rem_pio2+0xf0>
 80145f6:	a38c      	add	r3, pc, #560	@ (adr r3, 8014828 <__ieee754_rem_pio2+0x2f0>)
 80145f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145fc:	f7eb fe1e 	bl	800023c <__adddf3>
 8014600:	4602      	mov	r2, r0
 8014602:	460b      	mov	r3, r1
 8014604:	4680      	mov	r8, r0
 8014606:	4689      	mov	r9, r1
 8014608:	4630      	mov	r0, r6
 801460a:	4639      	mov	r1, r7
 801460c:	f7eb fe14 	bl	8000238 <__aeabi_dsub>
 8014610:	a385      	add	r3, pc, #532	@ (adr r3, 8014828 <__ieee754_rem_pio2+0x2f0>)
 8014612:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014616:	f7eb fe11 	bl	800023c <__adddf3>
 801461a:	f04f 35ff 	mov.w	r5, #4294967295
 801461e:	e9c4 8900 	strd	r8, r9, [r4]
 8014622:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014626:	e7c4      	b.n	80145b2 <__ieee754_rem_pio2+0x7a>
 8014628:	a381      	add	r3, pc, #516	@ (adr r3, 8014830 <__ieee754_rem_pio2+0x2f8>)
 801462a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801462e:	f7eb fe05 	bl	800023c <__adddf3>
 8014632:	a381      	add	r3, pc, #516	@ (adr r3, 8014838 <__ieee754_rem_pio2+0x300>)
 8014634:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014638:	4606      	mov	r6, r0
 801463a:	460f      	mov	r7, r1
 801463c:	f7eb fdfe 	bl	800023c <__adddf3>
 8014640:	4602      	mov	r2, r0
 8014642:	460b      	mov	r3, r1
 8014644:	4680      	mov	r8, r0
 8014646:	4689      	mov	r9, r1
 8014648:	4630      	mov	r0, r6
 801464a:	4639      	mov	r1, r7
 801464c:	f7eb fdf4 	bl	8000238 <__aeabi_dsub>
 8014650:	a379      	add	r3, pc, #484	@ (adr r3, 8014838 <__ieee754_rem_pio2+0x300>)
 8014652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014656:	e7de      	b.n	8014616 <__ieee754_rem_pio2+0xde>
 8014658:	4b82      	ldr	r3, [pc, #520]	@ (8014864 <__ieee754_rem_pio2+0x32c>)
 801465a:	4598      	cmp	r8, r3
 801465c:	f200 80d1 	bhi.w	8014802 <__ieee754_rem_pio2+0x2ca>
 8014660:	f000 f99a 	bl	8014998 <fabs>
 8014664:	ec57 6b10 	vmov	r6, r7, d0
 8014668:	a375      	add	r3, pc, #468	@ (adr r3, 8014840 <__ieee754_rem_pio2+0x308>)
 801466a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801466e:	4630      	mov	r0, r6
 8014670:	4639      	mov	r1, r7
 8014672:	f7eb ff99 	bl	80005a8 <__aeabi_dmul>
 8014676:	4b7c      	ldr	r3, [pc, #496]	@ (8014868 <__ieee754_rem_pio2+0x330>)
 8014678:	2200      	movs	r2, #0
 801467a:	f7eb fddf 	bl	800023c <__adddf3>
 801467e:	f7ec fa43 	bl	8000b08 <__aeabi_d2iz>
 8014682:	4605      	mov	r5, r0
 8014684:	f7eb ff26 	bl	80004d4 <__aeabi_i2d>
 8014688:	4602      	mov	r2, r0
 801468a:	460b      	mov	r3, r1
 801468c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014690:	a363      	add	r3, pc, #396	@ (adr r3, 8014820 <__ieee754_rem_pio2+0x2e8>)
 8014692:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014696:	f7eb ff87 	bl	80005a8 <__aeabi_dmul>
 801469a:	4602      	mov	r2, r0
 801469c:	460b      	mov	r3, r1
 801469e:	4630      	mov	r0, r6
 80146a0:	4639      	mov	r1, r7
 80146a2:	f7eb fdc9 	bl	8000238 <__aeabi_dsub>
 80146a6:	a360      	add	r3, pc, #384	@ (adr r3, 8014828 <__ieee754_rem_pio2+0x2f0>)
 80146a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80146ac:	4682      	mov	sl, r0
 80146ae:	468b      	mov	fp, r1
 80146b0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80146b4:	f7eb ff78 	bl	80005a8 <__aeabi_dmul>
 80146b8:	2d1f      	cmp	r5, #31
 80146ba:	4606      	mov	r6, r0
 80146bc:	460f      	mov	r7, r1
 80146be:	dc0c      	bgt.n	80146da <__ieee754_rem_pio2+0x1a2>
 80146c0:	4b6a      	ldr	r3, [pc, #424]	@ (801486c <__ieee754_rem_pio2+0x334>)
 80146c2:	1e6a      	subs	r2, r5, #1
 80146c4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80146c8:	4543      	cmp	r3, r8
 80146ca:	d006      	beq.n	80146da <__ieee754_rem_pio2+0x1a2>
 80146cc:	4632      	mov	r2, r6
 80146ce:	463b      	mov	r3, r7
 80146d0:	4650      	mov	r0, sl
 80146d2:	4659      	mov	r1, fp
 80146d4:	f7eb fdb0 	bl	8000238 <__aeabi_dsub>
 80146d8:	e00e      	b.n	80146f8 <__ieee754_rem_pio2+0x1c0>
 80146da:	463b      	mov	r3, r7
 80146dc:	4632      	mov	r2, r6
 80146de:	4650      	mov	r0, sl
 80146e0:	4659      	mov	r1, fp
 80146e2:	f7eb fda9 	bl	8000238 <__aeabi_dsub>
 80146e6:	ea4f 5328 	mov.w	r3, r8, asr #20
 80146ea:	9305      	str	r3, [sp, #20]
 80146ec:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80146f0:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 80146f4:	2b10      	cmp	r3, #16
 80146f6:	dc02      	bgt.n	80146fe <__ieee754_rem_pio2+0x1c6>
 80146f8:	e9c4 0100 	strd	r0, r1, [r4]
 80146fc:	e039      	b.n	8014772 <__ieee754_rem_pio2+0x23a>
 80146fe:	a34c      	add	r3, pc, #304	@ (adr r3, 8014830 <__ieee754_rem_pio2+0x2f8>)
 8014700:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014704:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014708:	f7eb ff4e 	bl	80005a8 <__aeabi_dmul>
 801470c:	4606      	mov	r6, r0
 801470e:	460f      	mov	r7, r1
 8014710:	4602      	mov	r2, r0
 8014712:	460b      	mov	r3, r1
 8014714:	4650      	mov	r0, sl
 8014716:	4659      	mov	r1, fp
 8014718:	f7eb fd8e 	bl	8000238 <__aeabi_dsub>
 801471c:	4602      	mov	r2, r0
 801471e:	460b      	mov	r3, r1
 8014720:	4680      	mov	r8, r0
 8014722:	4689      	mov	r9, r1
 8014724:	4650      	mov	r0, sl
 8014726:	4659      	mov	r1, fp
 8014728:	f7eb fd86 	bl	8000238 <__aeabi_dsub>
 801472c:	4632      	mov	r2, r6
 801472e:	463b      	mov	r3, r7
 8014730:	f7eb fd82 	bl	8000238 <__aeabi_dsub>
 8014734:	a340      	add	r3, pc, #256	@ (adr r3, 8014838 <__ieee754_rem_pio2+0x300>)
 8014736:	e9d3 2300 	ldrd	r2, r3, [r3]
 801473a:	4606      	mov	r6, r0
 801473c:	460f      	mov	r7, r1
 801473e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014742:	f7eb ff31 	bl	80005a8 <__aeabi_dmul>
 8014746:	4632      	mov	r2, r6
 8014748:	463b      	mov	r3, r7
 801474a:	f7eb fd75 	bl	8000238 <__aeabi_dsub>
 801474e:	4602      	mov	r2, r0
 8014750:	460b      	mov	r3, r1
 8014752:	4606      	mov	r6, r0
 8014754:	460f      	mov	r7, r1
 8014756:	4640      	mov	r0, r8
 8014758:	4649      	mov	r1, r9
 801475a:	f7eb fd6d 	bl	8000238 <__aeabi_dsub>
 801475e:	9a05      	ldr	r2, [sp, #20]
 8014760:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8014764:	1ad3      	subs	r3, r2, r3
 8014766:	2b31      	cmp	r3, #49	@ 0x31
 8014768:	dc20      	bgt.n	80147ac <__ieee754_rem_pio2+0x274>
 801476a:	e9c4 0100 	strd	r0, r1, [r4]
 801476e:	46c2      	mov	sl, r8
 8014770:	46cb      	mov	fp, r9
 8014772:	e9d4 8900 	ldrd	r8, r9, [r4]
 8014776:	4650      	mov	r0, sl
 8014778:	4642      	mov	r2, r8
 801477a:	464b      	mov	r3, r9
 801477c:	4659      	mov	r1, fp
 801477e:	f7eb fd5b 	bl	8000238 <__aeabi_dsub>
 8014782:	463b      	mov	r3, r7
 8014784:	4632      	mov	r2, r6
 8014786:	f7eb fd57 	bl	8000238 <__aeabi_dsub>
 801478a:	9b04      	ldr	r3, [sp, #16]
 801478c:	2b00      	cmp	r3, #0
 801478e:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014792:	f6bf af0e 	bge.w	80145b2 <__ieee754_rem_pio2+0x7a>
 8014796:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 801479a:	6063      	str	r3, [r4, #4]
 801479c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80147a0:	f8c4 8000 	str.w	r8, [r4]
 80147a4:	60a0      	str	r0, [r4, #8]
 80147a6:	60e3      	str	r3, [r4, #12]
 80147a8:	426d      	negs	r5, r5
 80147aa:	e702      	b.n	80145b2 <__ieee754_rem_pio2+0x7a>
 80147ac:	a326      	add	r3, pc, #152	@ (adr r3, 8014848 <__ieee754_rem_pio2+0x310>)
 80147ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80147b2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80147b6:	f7eb fef7 	bl	80005a8 <__aeabi_dmul>
 80147ba:	4606      	mov	r6, r0
 80147bc:	460f      	mov	r7, r1
 80147be:	4602      	mov	r2, r0
 80147c0:	460b      	mov	r3, r1
 80147c2:	4640      	mov	r0, r8
 80147c4:	4649      	mov	r1, r9
 80147c6:	f7eb fd37 	bl	8000238 <__aeabi_dsub>
 80147ca:	4602      	mov	r2, r0
 80147cc:	460b      	mov	r3, r1
 80147ce:	4682      	mov	sl, r0
 80147d0:	468b      	mov	fp, r1
 80147d2:	4640      	mov	r0, r8
 80147d4:	4649      	mov	r1, r9
 80147d6:	f7eb fd2f 	bl	8000238 <__aeabi_dsub>
 80147da:	4632      	mov	r2, r6
 80147dc:	463b      	mov	r3, r7
 80147de:	f7eb fd2b 	bl	8000238 <__aeabi_dsub>
 80147e2:	a31b      	add	r3, pc, #108	@ (adr r3, 8014850 <__ieee754_rem_pio2+0x318>)
 80147e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80147e8:	4606      	mov	r6, r0
 80147ea:	460f      	mov	r7, r1
 80147ec:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80147f0:	f7eb feda 	bl	80005a8 <__aeabi_dmul>
 80147f4:	4632      	mov	r2, r6
 80147f6:	463b      	mov	r3, r7
 80147f8:	f7eb fd1e 	bl	8000238 <__aeabi_dsub>
 80147fc:	4606      	mov	r6, r0
 80147fe:	460f      	mov	r7, r1
 8014800:	e764      	b.n	80146cc <__ieee754_rem_pio2+0x194>
 8014802:	4b1b      	ldr	r3, [pc, #108]	@ (8014870 <__ieee754_rem_pio2+0x338>)
 8014804:	4598      	cmp	r8, r3
 8014806:	d935      	bls.n	8014874 <__ieee754_rem_pio2+0x33c>
 8014808:	4632      	mov	r2, r6
 801480a:	463b      	mov	r3, r7
 801480c:	4630      	mov	r0, r6
 801480e:	4639      	mov	r1, r7
 8014810:	f7eb fd12 	bl	8000238 <__aeabi_dsub>
 8014814:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014818:	e9c4 0100 	strd	r0, r1, [r4]
 801481c:	e69e      	b.n	801455c <__ieee754_rem_pio2+0x24>
 801481e:	bf00      	nop
 8014820:	54400000 	.word	0x54400000
 8014824:	3ff921fb 	.word	0x3ff921fb
 8014828:	1a626331 	.word	0x1a626331
 801482c:	3dd0b461 	.word	0x3dd0b461
 8014830:	1a600000 	.word	0x1a600000
 8014834:	3dd0b461 	.word	0x3dd0b461
 8014838:	2e037073 	.word	0x2e037073
 801483c:	3ba3198a 	.word	0x3ba3198a
 8014840:	6dc9c883 	.word	0x6dc9c883
 8014844:	3fe45f30 	.word	0x3fe45f30
 8014848:	2e000000 	.word	0x2e000000
 801484c:	3ba3198a 	.word	0x3ba3198a
 8014850:	252049c1 	.word	0x252049c1
 8014854:	397b839a 	.word	0x397b839a
 8014858:	3fe921fb 	.word	0x3fe921fb
 801485c:	4002d97b 	.word	0x4002d97b
 8014860:	3ff921fb 	.word	0x3ff921fb
 8014864:	413921fb 	.word	0x413921fb
 8014868:	3fe00000 	.word	0x3fe00000
 801486c:	08018810 	.word	0x08018810
 8014870:	7fefffff 	.word	0x7fefffff
 8014874:	ea4f 5528 	mov.w	r5, r8, asr #20
 8014878:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 801487c:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8014880:	4630      	mov	r0, r6
 8014882:	460f      	mov	r7, r1
 8014884:	f7ec f940 	bl	8000b08 <__aeabi_d2iz>
 8014888:	f7eb fe24 	bl	80004d4 <__aeabi_i2d>
 801488c:	4602      	mov	r2, r0
 801488e:	460b      	mov	r3, r1
 8014890:	4630      	mov	r0, r6
 8014892:	4639      	mov	r1, r7
 8014894:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8014898:	f7eb fcce 	bl	8000238 <__aeabi_dsub>
 801489c:	4b22      	ldr	r3, [pc, #136]	@ (8014928 <__ieee754_rem_pio2+0x3f0>)
 801489e:	2200      	movs	r2, #0
 80148a0:	f7eb fe82 	bl	80005a8 <__aeabi_dmul>
 80148a4:	460f      	mov	r7, r1
 80148a6:	4606      	mov	r6, r0
 80148a8:	f7ec f92e 	bl	8000b08 <__aeabi_d2iz>
 80148ac:	f7eb fe12 	bl	80004d4 <__aeabi_i2d>
 80148b0:	4602      	mov	r2, r0
 80148b2:	460b      	mov	r3, r1
 80148b4:	4630      	mov	r0, r6
 80148b6:	4639      	mov	r1, r7
 80148b8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80148bc:	f7eb fcbc 	bl	8000238 <__aeabi_dsub>
 80148c0:	4b19      	ldr	r3, [pc, #100]	@ (8014928 <__ieee754_rem_pio2+0x3f0>)
 80148c2:	2200      	movs	r2, #0
 80148c4:	f7eb fe70 	bl	80005a8 <__aeabi_dmul>
 80148c8:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80148cc:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 80148d0:	f04f 0803 	mov.w	r8, #3
 80148d4:	2600      	movs	r6, #0
 80148d6:	2700      	movs	r7, #0
 80148d8:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 80148dc:	4632      	mov	r2, r6
 80148de:	463b      	mov	r3, r7
 80148e0:	46c2      	mov	sl, r8
 80148e2:	f108 38ff 	add.w	r8, r8, #4294967295
 80148e6:	f7ec f8c7 	bl	8000a78 <__aeabi_dcmpeq>
 80148ea:	2800      	cmp	r0, #0
 80148ec:	d1f4      	bne.n	80148d8 <__ieee754_rem_pio2+0x3a0>
 80148ee:	4b0f      	ldr	r3, [pc, #60]	@ (801492c <__ieee754_rem_pio2+0x3f4>)
 80148f0:	9301      	str	r3, [sp, #4]
 80148f2:	2302      	movs	r3, #2
 80148f4:	9300      	str	r3, [sp, #0]
 80148f6:	462a      	mov	r2, r5
 80148f8:	4653      	mov	r3, sl
 80148fa:	4621      	mov	r1, r4
 80148fc:	a806      	add	r0, sp, #24
 80148fe:	f000 fbbb 	bl	8015078 <__kernel_rem_pio2>
 8014902:	9b04      	ldr	r3, [sp, #16]
 8014904:	2b00      	cmp	r3, #0
 8014906:	4605      	mov	r5, r0
 8014908:	f6bf ae53 	bge.w	80145b2 <__ieee754_rem_pio2+0x7a>
 801490c:	e9d4 2100 	ldrd	r2, r1, [r4]
 8014910:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8014914:	e9c4 2300 	strd	r2, r3, [r4]
 8014918:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 801491c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8014920:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8014924:	e740      	b.n	80147a8 <__ieee754_rem_pio2+0x270>
 8014926:	bf00      	nop
 8014928:	41700000 	.word	0x41700000
 801492c:	08018890 	.word	0x08018890

08014930 <acos>:
 8014930:	b538      	push	{r3, r4, r5, lr}
 8014932:	ed2d 8b02 	vpush	{d8}
 8014936:	ec55 4b10 	vmov	r4, r5, d0
 801493a:	f000 feed 	bl	8015718 <__ieee754_acos>
 801493e:	4622      	mov	r2, r4
 8014940:	462b      	mov	r3, r5
 8014942:	4620      	mov	r0, r4
 8014944:	4629      	mov	r1, r5
 8014946:	eeb0 8a40 	vmov.f32	s16, s0
 801494a:	eef0 8a60 	vmov.f32	s17, s1
 801494e:	f7ec f8c5 	bl	8000adc <__aeabi_dcmpun>
 8014952:	b9a8      	cbnz	r0, 8014980 <acos+0x50>
 8014954:	ec45 4b10 	vmov	d0, r4, r5
 8014958:	f000 f81e 	bl	8014998 <fabs>
 801495c:	4b0c      	ldr	r3, [pc, #48]	@ (8014990 <acos+0x60>)
 801495e:	ec51 0b10 	vmov	r0, r1, d0
 8014962:	2200      	movs	r2, #0
 8014964:	f7ec f8b0 	bl	8000ac8 <__aeabi_dcmpgt>
 8014968:	b150      	cbz	r0, 8014980 <acos+0x50>
 801496a:	f7fb fdcf 	bl	801050c <__errno>
 801496e:	ecbd 8b02 	vpop	{d8}
 8014972:	2321      	movs	r3, #33	@ 0x21
 8014974:	6003      	str	r3, [r0, #0]
 8014976:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801497a:	4806      	ldr	r0, [pc, #24]	@ (8014994 <acos+0x64>)
 801497c:	f7fe ba54 	b.w	8012e28 <nan>
 8014980:	eeb0 0a48 	vmov.f32	s0, s16
 8014984:	eef0 0a68 	vmov.f32	s1, s17
 8014988:	ecbd 8b02 	vpop	{d8}
 801498c:	bd38      	pop	{r3, r4, r5, pc}
 801498e:	bf00      	nop
 8014990:	3ff00000 	.word	0x3ff00000
 8014994:	0801865e 	.word	0x0801865e

08014998 <fabs>:
 8014998:	ec51 0b10 	vmov	r0, r1, d0
 801499c:	4602      	mov	r2, r0
 801499e:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80149a2:	ec43 2b10 	vmov	d0, r2, r3
 80149a6:	4770      	bx	lr

080149a8 <__ieee754_powf>:
 80149a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80149ac:	ee10 4a90 	vmov	r4, s1
 80149b0:	f034 4900 	bics.w	r9, r4, #2147483648	@ 0x80000000
 80149b4:	ed2d 8b02 	vpush	{d8}
 80149b8:	ee10 6a10 	vmov	r6, s0
 80149bc:	eeb0 8a40 	vmov.f32	s16, s0
 80149c0:	eef0 8a60 	vmov.f32	s17, s1
 80149c4:	d10c      	bne.n	80149e0 <__ieee754_powf+0x38>
 80149c6:	f486 0680 	eor.w	r6, r6, #4194304	@ 0x400000
 80149ca:	0076      	lsls	r6, r6, #1
 80149cc:	f516 0f00 	cmn.w	r6, #8388608	@ 0x800000
 80149d0:	f240 8274 	bls.w	8014ebc <__ieee754_powf+0x514>
 80149d4:	ee38 0a28 	vadd.f32	s0, s16, s17
 80149d8:	ecbd 8b02 	vpop	{d8}
 80149dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80149e0:	f026 4800 	bic.w	r8, r6, #2147483648	@ 0x80000000
 80149e4:	f1b8 4fff 	cmp.w	r8, #2139095040	@ 0x7f800000
 80149e8:	d802      	bhi.n	80149f0 <__ieee754_powf+0x48>
 80149ea:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 80149ee:	d908      	bls.n	8014a02 <__ieee754_powf+0x5a>
 80149f0:	f1b6 5f7e 	cmp.w	r6, #1065353216	@ 0x3f800000
 80149f4:	d1ee      	bne.n	80149d4 <__ieee754_powf+0x2c>
 80149f6:	f484 0480 	eor.w	r4, r4, #4194304	@ 0x400000
 80149fa:	0064      	lsls	r4, r4, #1
 80149fc:	f514 0f00 	cmn.w	r4, #8388608	@ 0x800000
 8014a00:	e7e6      	b.n	80149d0 <__ieee754_powf+0x28>
 8014a02:	2e00      	cmp	r6, #0
 8014a04:	da1f      	bge.n	8014a46 <__ieee754_powf+0x9e>
 8014a06:	f1b9 4f97 	cmp.w	r9, #1266679808	@ 0x4b800000
 8014a0a:	f080 8260 	bcs.w	8014ece <__ieee754_powf+0x526>
 8014a0e:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8014a12:	d32f      	bcc.n	8014a74 <__ieee754_powf+0xcc>
 8014a14:	ea4f 53e9 	mov.w	r3, r9, asr #23
 8014a18:	f1c3 0396 	rsb	r3, r3, #150	@ 0x96
 8014a1c:	fa49 f503 	asr.w	r5, r9, r3
 8014a20:	fa05 f303 	lsl.w	r3, r5, r3
 8014a24:	454b      	cmp	r3, r9
 8014a26:	d123      	bne.n	8014a70 <__ieee754_powf+0xc8>
 8014a28:	f005 0501 	and.w	r5, r5, #1
 8014a2c:	f1c5 0502 	rsb	r5, r5, #2
 8014a30:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8014a34:	d11f      	bne.n	8014a76 <__ieee754_powf+0xce>
 8014a36:	2c00      	cmp	r4, #0
 8014a38:	f280 8246 	bge.w	8014ec8 <__ieee754_powf+0x520>
 8014a3c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014a40:	ee87 0a88 	vdiv.f32	s0, s15, s16
 8014a44:	e7c8      	b.n	80149d8 <__ieee754_powf+0x30>
 8014a46:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 8014a4a:	d111      	bne.n	8014a70 <__ieee754_powf+0xc8>
 8014a4c:	f1b8 5f7e 	cmp.w	r8, #1065353216	@ 0x3f800000
 8014a50:	f000 8234 	beq.w	8014ebc <__ieee754_powf+0x514>
 8014a54:	d906      	bls.n	8014a64 <__ieee754_powf+0xbc>
 8014a56:	ed9f 0ac5 	vldr	s0, [pc, #788]	@ 8014d6c <__ieee754_powf+0x3c4>
 8014a5a:	2c00      	cmp	r4, #0
 8014a5c:	bfa8      	it	ge
 8014a5e:	eeb0 0a68 	vmovge.f32	s0, s17
 8014a62:	e7b9      	b.n	80149d8 <__ieee754_powf+0x30>
 8014a64:	2c00      	cmp	r4, #0
 8014a66:	f280 822c 	bge.w	8014ec2 <__ieee754_powf+0x51a>
 8014a6a:	eeb1 0a68 	vneg.f32	s0, s17
 8014a6e:	e7b3      	b.n	80149d8 <__ieee754_powf+0x30>
 8014a70:	2500      	movs	r5, #0
 8014a72:	e7dd      	b.n	8014a30 <__ieee754_powf+0x88>
 8014a74:	2500      	movs	r5, #0
 8014a76:	f1b4 4f80 	cmp.w	r4, #1073741824	@ 0x40000000
 8014a7a:	d102      	bne.n	8014a82 <__ieee754_powf+0xda>
 8014a7c:	ee28 0a08 	vmul.f32	s0, s16, s16
 8014a80:	e7aa      	b.n	80149d8 <__ieee754_powf+0x30>
 8014a82:	f1b4 5f7c 	cmp.w	r4, #1056964608	@ 0x3f000000
 8014a86:	f040 8227 	bne.w	8014ed8 <__ieee754_powf+0x530>
 8014a8a:	2e00      	cmp	r6, #0
 8014a8c:	f2c0 8224 	blt.w	8014ed8 <__ieee754_powf+0x530>
 8014a90:	eeb0 0a48 	vmov.f32	s0, s16
 8014a94:	ecbd 8b02 	vpop	{d8}
 8014a98:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014a9c:	f000 bae6 	b.w	801506c <__ieee754_sqrtf>
 8014aa0:	2d01      	cmp	r5, #1
 8014aa2:	d199      	bne.n	80149d8 <__ieee754_powf+0x30>
 8014aa4:	eeb1 0a40 	vneg.f32	s0, s0
 8014aa8:	e796      	b.n	80149d8 <__ieee754_powf+0x30>
 8014aaa:	0ff0      	lsrs	r0, r6, #31
 8014aac:	3801      	subs	r0, #1
 8014aae:	ea55 0300 	orrs.w	r3, r5, r0
 8014ab2:	d104      	bne.n	8014abe <__ieee754_powf+0x116>
 8014ab4:	ee38 8a48 	vsub.f32	s16, s16, s16
 8014ab8:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8014abc:	e78c      	b.n	80149d8 <__ieee754_powf+0x30>
 8014abe:	f1b9 4f9a 	cmp.w	r9, #1291845632	@ 0x4d000000
 8014ac2:	d96d      	bls.n	8014ba0 <__ieee754_powf+0x1f8>
 8014ac4:	4baa      	ldr	r3, [pc, #680]	@ (8014d70 <__ieee754_powf+0x3c8>)
 8014ac6:	4598      	cmp	r8, r3
 8014ac8:	d808      	bhi.n	8014adc <__ieee754_powf+0x134>
 8014aca:	2c00      	cmp	r4, #0
 8014acc:	da0b      	bge.n	8014ae6 <__ieee754_powf+0x13e>
 8014ace:	2000      	movs	r0, #0
 8014ad0:	ecbd 8b02 	vpop	{d8}
 8014ad4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014ad8:	f000 bac2 	b.w	8015060 <__math_oflowf>
 8014adc:	4ba5      	ldr	r3, [pc, #660]	@ (8014d74 <__ieee754_powf+0x3cc>)
 8014ade:	4598      	cmp	r8, r3
 8014ae0:	d908      	bls.n	8014af4 <__ieee754_powf+0x14c>
 8014ae2:	2c00      	cmp	r4, #0
 8014ae4:	dcf3      	bgt.n	8014ace <__ieee754_powf+0x126>
 8014ae6:	2000      	movs	r0, #0
 8014ae8:	ecbd 8b02 	vpop	{d8}
 8014aec:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014af0:	f000 bab0 	b.w	8015054 <__math_uflowf>
 8014af4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014af8:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014afc:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8014d78 <__ieee754_powf+0x3d0>
 8014b00:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8014b04:	eee0 6a67 	vfms.f32	s13, s0, s15
 8014b08:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8014b0c:	eee6 7ac0 	vfms.f32	s15, s13, s0
 8014b10:	ee20 7a00 	vmul.f32	s14, s0, s0
 8014b14:	eddf 6a99 	vldr	s13, [pc, #612]	@ 8014d7c <__ieee754_powf+0x3d4>
 8014b18:	ee27 7a27 	vmul.f32	s14, s14, s15
 8014b1c:	eddf 7a98 	vldr	s15, [pc, #608]	@ 8014d80 <__ieee754_powf+0x3d8>
 8014b20:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 8014b24:	ed9f 7a97 	vldr	s14, [pc, #604]	@ 8014d84 <__ieee754_powf+0x3dc>
 8014b28:	eee0 7a07 	vfma.f32	s15, s0, s14
 8014b2c:	eeb0 7a67 	vmov.f32	s14, s15
 8014b30:	eea0 7a26 	vfma.f32	s14, s0, s13
 8014b34:	ee17 3a10 	vmov	r3, s14
 8014b38:	f36f 030b 	bfc	r3, #0, #12
 8014b3c:	ee07 3a10 	vmov	s14, r3
 8014b40:	eeb0 6a47 	vmov.f32	s12, s14
 8014b44:	eea0 6a66 	vfms.f32	s12, s0, s13
 8014b48:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8014b4c:	3d01      	subs	r5, #1
 8014b4e:	4305      	orrs	r5, r0
 8014b50:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014b54:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 8014b58:	f36f 040b 	bfc	r4, #0, #12
 8014b5c:	bf18      	it	ne
 8014b5e:	eeb0 8a66 	vmovne.f32	s16, s13
 8014b62:	ee06 4a90 	vmov	s13, r4
 8014b66:	ee67 0aa8 	vmul.f32	s1, s15, s17
 8014b6a:	ee38 6ae6 	vsub.f32	s12, s17, s13
 8014b6e:	ee67 7a26 	vmul.f32	s15, s14, s13
 8014b72:	eee6 0a07 	vfma.f32	s1, s12, s14
 8014b76:	ee30 7aa7 	vadd.f32	s14, s1, s15
 8014b7a:	ee17 1a10 	vmov	r1, s14
 8014b7e:	2900      	cmp	r1, #0
 8014b80:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8014b84:	f340 80dd 	ble.w	8014d42 <__ieee754_powf+0x39a>
 8014b88:	f1b3 4f86 	cmp.w	r3, #1124073472	@ 0x43000000
 8014b8c:	f240 80ca 	bls.w	8014d24 <__ieee754_powf+0x37c>
 8014b90:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8014b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b98:	bf4c      	ite	mi
 8014b9a:	2001      	movmi	r0, #1
 8014b9c:	2000      	movpl	r0, #0
 8014b9e:	e797      	b.n	8014ad0 <__ieee754_powf+0x128>
 8014ba0:	f016 4fff 	tst.w	r6, #2139095040	@ 0x7f800000
 8014ba4:	bf01      	itttt	eq
 8014ba6:	eddf 7a78 	vldreq	s15, [pc, #480]	@ 8014d88 <__ieee754_powf+0x3e0>
 8014baa:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 8014bae:	f06f 0317 	mvneq.w	r3, #23
 8014bb2:	ee17 7a90 	vmoveq	r7, s15
 8014bb6:	ea4f 52e7 	mov.w	r2, r7, asr #23
 8014bba:	bf18      	it	ne
 8014bbc:	2300      	movne	r3, #0
 8014bbe:	3a7f      	subs	r2, #127	@ 0x7f
 8014bc0:	441a      	add	r2, r3
 8014bc2:	4b72      	ldr	r3, [pc, #456]	@ (8014d8c <__ieee754_powf+0x3e4>)
 8014bc4:	f3c7 0716 	ubfx	r7, r7, #0, #23
 8014bc8:	429f      	cmp	r7, r3
 8014bca:	f047 517e 	orr.w	r1, r7, #1065353216	@ 0x3f800000
 8014bce:	dd06      	ble.n	8014bde <__ieee754_powf+0x236>
 8014bd0:	4b6f      	ldr	r3, [pc, #444]	@ (8014d90 <__ieee754_powf+0x3e8>)
 8014bd2:	429f      	cmp	r7, r3
 8014bd4:	f340 80a4 	ble.w	8014d20 <__ieee754_powf+0x378>
 8014bd8:	3201      	adds	r2, #1
 8014bda:	f5a1 0100 	sub.w	r1, r1, #8388608	@ 0x800000
 8014bde:	2600      	movs	r6, #0
 8014be0:	4b6c      	ldr	r3, [pc, #432]	@ (8014d94 <__ieee754_powf+0x3ec>)
 8014be2:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8014be6:	ee07 1a10 	vmov	s14, r1
 8014bea:	edd3 5a00 	vldr	s11, [r3]
 8014bee:	4b6a      	ldr	r3, [pc, #424]	@ (8014d98 <__ieee754_powf+0x3f0>)
 8014bf0:	ee75 7a87 	vadd.f32	s15, s11, s14
 8014bf4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014bf8:	eec6 4aa7 	vdiv.f32	s9, s13, s15
 8014bfc:	1049      	asrs	r1, r1, #1
 8014bfe:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
 8014c02:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
 8014c06:	eb01 5146 	add.w	r1, r1, r6, lsl #21
 8014c0a:	ee37 6a65 	vsub.f32	s12, s14, s11
 8014c0e:	ee07 1a90 	vmov	s15, r1
 8014c12:	ee26 5a24 	vmul.f32	s10, s12, s9
 8014c16:	ee77 5ae5 	vsub.f32	s11, s15, s11
 8014c1a:	ee15 7a10 	vmov	r7, s10
 8014c1e:	401f      	ands	r7, r3
 8014c20:	ee06 7a90 	vmov	s13, r7
 8014c24:	eea6 6ae7 	vfms.f32	s12, s13, s15
 8014c28:	ee37 7a65 	vsub.f32	s14, s14, s11
 8014c2c:	ee65 7a05 	vmul.f32	s15, s10, s10
 8014c30:	eea6 6ac7 	vfms.f32	s12, s13, s14
 8014c34:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8014d9c <__ieee754_powf+0x3f4>
 8014c38:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8014da0 <__ieee754_powf+0x3f8>
 8014c3c:	eee7 5a87 	vfma.f32	s11, s15, s14
 8014c40:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8014da4 <__ieee754_powf+0x3fc>
 8014c44:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8014c48:	eddf 5a4b 	vldr	s11, [pc, #300]	@ 8014d78 <__ieee754_powf+0x3d0>
 8014c4c:	eee7 5a27 	vfma.f32	s11, s14, s15
 8014c50:	ed9f 7a55 	vldr	s14, [pc, #340]	@ 8014da8 <__ieee754_powf+0x400>
 8014c54:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8014c58:	eddf 5a54 	vldr	s11, [pc, #336]	@ 8014dac <__ieee754_powf+0x404>
 8014c5c:	ee26 6a24 	vmul.f32	s12, s12, s9
 8014c60:	eee7 5a27 	vfma.f32	s11, s14, s15
 8014c64:	ee35 7a26 	vadd.f32	s14, s10, s13
 8014c68:	ee67 4aa7 	vmul.f32	s9, s15, s15
 8014c6c:	ee27 7a06 	vmul.f32	s14, s14, s12
 8014c70:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
 8014c74:	eea4 7aa5 	vfma.f32	s14, s9, s11
 8014c78:	eef0 5a67 	vmov.f32	s11, s15
 8014c7c:	eee6 5aa6 	vfma.f32	s11, s13, s13
 8014c80:	ee75 5a87 	vadd.f32	s11, s11, s14
 8014c84:	ee15 1a90 	vmov	r1, s11
 8014c88:	4019      	ands	r1, r3
 8014c8a:	ee05 1a90 	vmov	s11, r1
 8014c8e:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8014c92:	eee6 7ae6 	vfms.f32	s15, s13, s13
 8014c96:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014c9a:	ee67 7a85 	vmul.f32	s15, s15, s10
 8014c9e:	eee6 7a25 	vfma.f32	s15, s12, s11
 8014ca2:	eeb0 6a67 	vmov.f32	s12, s15
 8014ca6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014caa:	ee16 1a10 	vmov	r1, s12
 8014cae:	4019      	ands	r1, r3
 8014cb0:	ee06 1a10 	vmov	s12, r1
 8014cb4:	eeb0 7a46 	vmov.f32	s14, s12
 8014cb8:	eea6 7ae5 	vfms.f32	s14, s13, s11
 8014cbc:	493c      	ldr	r1, [pc, #240]	@ (8014db0 <__ieee754_powf+0x408>)
 8014cbe:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 8014cc2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014cc6:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8014db4 <__ieee754_powf+0x40c>
 8014cca:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8014db8 <__ieee754_powf+0x410>
 8014cce:	ee67 7a87 	vmul.f32	s15, s15, s14
 8014cd2:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 8014dbc <__ieee754_powf+0x414>
 8014cd6:	eee6 7a07 	vfma.f32	s15, s12, s14
 8014cda:	ed91 7a00 	vldr	s14, [r1]
 8014cde:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014ce2:	ee07 2a10 	vmov	s14, r2
 8014ce6:	4a36      	ldr	r2, [pc, #216]	@ (8014dc0 <__ieee754_powf+0x418>)
 8014ce8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8014cec:	eeb0 7a67 	vmov.f32	s14, s15
 8014cf0:	eea6 7a25 	vfma.f32	s14, s12, s11
 8014cf4:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 8014cf8:	ed92 5a00 	vldr	s10, [r2]
 8014cfc:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014d00:	ee37 7a26 	vadd.f32	s14, s14, s13
 8014d04:	ee17 2a10 	vmov	r2, s14
 8014d08:	401a      	ands	r2, r3
 8014d0a:	ee07 2a10 	vmov	s14, r2
 8014d0e:	ee77 6a66 	vsub.f32	s13, s14, s13
 8014d12:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8014d16:	eee6 6a65 	vfms.f32	s13, s12, s11
 8014d1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014d1e:	e715      	b.n	8014b4c <__ieee754_powf+0x1a4>
 8014d20:	2601      	movs	r6, #1
 8014d22:	e75d      	b.n	8014be0 <__ieee754_powf+0x238>
 8014d24:	d152      	bne.n	8014dcc <__ieee754_powf+0x424>
 8014d26:	eddf 6a27 	vldr	s13, [pc, #156]	@ 8014dc4 <__ieee754_powf+0x41c>
 8014d2a:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014d2e:	ee70 6aa6 	vadd.f32	s13, s1, s13
 8014d32:	eef4 6ac7 	vcmpe.f32	s13, s14
 8014d36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d3a:	f73f af29 	bgt.w	8014b90 <__ieee754_powf+0x1e8>
 8014d3e:	2386      	movs	r3, #134	@ 0x86
 8014d40:	e048      	b.n	8014dd4 <__ieee754_powf+0x42c>
 8014d42:	4a21      	ldr	r2, [pc, #132]	@ (8014dc8 <__ieee754_powf+0x420>)
 8014d44:	4293      	cmp	r3, r2
 8014d46:	d907      	bls.n	8014d58 <__ieee754_powf+0x3b0>
 8014d48:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8014d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d50:	bf4c      	ite	mi
 8014d52:	2001      	movmi	r0, #1
 8014d54:	2000      	movpl	r0, #0
 8014d56:	e6c7      	b.n	8014ae8 <__ieee754_powf+0x140>
 8014d58:	d138      	bne.n	8014dcc <__ieee754_powf+0x424>
 8014d5a:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014d5e:	eeb4 7ae0 	vcmpe.f32	s14, s1
 8014d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d66:	dbea      	blt.n	8014d3e <__ieee754_powf+0x396>
 8014d68:	e7ee      	b.n	8014d48 <__ieee754_powf+0x3a0>
 8014d6a:	bf00      	nop
 8014d6c:	00000000 	.word	0x00000000
 8014d70:	3f7ffff3 	.word	0x3f7ffff3
 8014d74:	3f800007 	.word	0x3f800007
 8014d78:	3eaaaaab 	.word	0x3eaaaaab
 8014d7c:	3fb8aa00 	.word	0x3fb8aa00
 8014d80:	3fb8aa3b 	.word	0x3fb8aa3b
 8014d84:	36eca570 	.word	0x36eca570
 8014d88:	4b800000 	.word	0x4b800000
 8014d8c:	001cc471 	.word	0x001cc471
 8014d90:	005db3d6 	.word	0x005db3d6
 8014d94:	080189a8 	.word	0x080189a8
 8014d98:	fffff000 	.word	0xfffff000
 8014d9c:	3e6c3255 	.word	0x3e6c3255
 8014da0:	3e53f142 	.word	0x3e53f142
 8014da4:	3e8ba305 	.word	0x3e8ba305
 8014da8:	3edb6db7 	.word	0x3edb6db7
 8014dac:	3f19999a 	.word	0x3f19999a
 8014db0:	08018998 	.word	0x08018998
 8014db4:	3f76384f 	.word	0x3f76384f
 8014db8:	3f763800 	.word	0x3f763800
 8014dbc:	369dc3a0 	.word	0x369dc3a0
 8014dc0:	080189a0 	.word	0x080189a0
 8014dc4:	3338aa3c 	.word	0x3338aa3c
 8014dc8:	43160000 	.word	0x43160000
 8014dcc:	f1b3 5f7c 	cmp.w	r3, #1056964608	@ 0x3f000000
 8014dd0:	d96f      	bls.n	8014eb2 <__ieee754_powf+0x50a>
 8014dd2:	15db      	asrs	r3, r3, #23
 8014dd4:	3b7e      	subs	r3, #126	@ 0x7e
 8014dd6:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8014dda:	4118      	asrs	r0, r3
 8014ddc:	4408      	add	r0, r1
 8014dde:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8014de2:	4a4e      	ldr	r2, [pc, #312]	@ (8014f1c <__ieee754_powf+0x574>)
 8014de4:	3b7f      	subs	r3, #127	@ 0x7f
 8014de6:	411a      	asrs	r2, r3
 8014de8:	4002      	ands	r2, r0
 8014dea:	ee07 2a10 	vmov	s14, r2
 8014dee:	f3c0 0016 	ubfx	r0, r0, #0, #23
 8014df2:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8014df6:	f1c3 0317 	rsb	r3, r3, #23
 8014dfa:	4118      	asrs	r0, r3
 8014dfc:	2900      	cmp	r1, #0
 8014dfe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014e02:	bfb8      	it	lt
 8014e04:	4240      	neglt	r0, r0
 8014e06:	ee77 6aa0 	vadd.f32	s13, s15, s1
 8014e0a:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8014f20 <__ieee754_powf+0x578>
 8014e0e:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8014f24 <__ieee754_powf+0x57c>
 8014e12:	ee16 3a90 	vmov	r3, s13
 8014e16:	f36f 030b 	bfc	r3, #0, #12
 8014e1a:	ee06 3a90 	vmov	s13, r3
 8014e1e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8014e22:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014e26:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8014e2a:	eddf 7a3f 	vldr	s15, [pc, #252]	@ 8014f28 <__ieee754_powf+0x580>
 8014e2e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8014e32:	eee0 7a87 	vfma.f32	s15, s1, s14
 8014e36:	eeb0 7a67 	vmov.f32	s14, s15
 8014e3a:	eea6 7a86 	vfma.f32	s14, s13, s12
 8014e3e:	eef0 5a47 	vmov.f32	s11, s14
 8014e42:	eee6 5ac6 	vfms.f32	s11, s13, s12
 8014e46:	ee67 6a07 	vmul.f32	s13, s14, s14
 8014e4a:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8014e4e:	ed9f 6a37 	vldr	s12, [pc, #220]	@ 8014f2c <__ieee754_powf+0x584>
 8014e52:	eddf 5a37 	vldr	s11, [pc, #220]	@ 8014f30 <__ieee754_powf+0x588>
 8014e56:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014e5a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 8014f34 <__ieee754_powf+0x58c>
 8014e5e:	eee6 5a26 	vfma.f32	s11, s12, s13
 8014e62:	ed9f 6a35 	vldr	s12, [pc, #212]	@ 8014f38 <__ieee754_powf+0x590>
 8014e66:	eea5 6aa6 	vfma.f32	s12, s11, s13
 8014e6a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8014f3c <__ieee754_powf+0x594>
 8014e6e:	eee6 5a26 	vfma.f32	s11, s12, s13
 8014e72:	eeb0 6a47 	vmov.f32	s12, s14
 8014e76:	eea5 6ae6 	vfms.f32	s12, s11, s13
 8014e7a:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8014e7e:	ee67 5a06 	vmul.f32	s11, s14, s12
 8014e82:	ee36 6a66 	vsub.f32	s12, s12, s13
 8014e86:	eee7 7a27 	vfma.f32	s15, s14, s15
 8014e8a:	eec5 6a86 	vdiv.f32	s13, s11, s12
 8014e8e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8014e92:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014e96:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014e9a:	ee10 3a10 	vmov	r3, s0
 8014e9e:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 8014ea2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8014ea6:	da06      	bge.n	8014eb6 <__ieee754_powf+0x50e>
 8014ea8:	f000 f854 	bl	8014f54 <scalbnf>
 8014eac:	ee20 0a08 	vmul.f32	s0, s0, s16
 8014eb0:	e592      	b.n	80149d8 <__ieee754_powf+0x30>
 8014eb2:	2000      	movs	r0, #0
 8014eb4:	e7a7      	b.n	8014e06 <__ieee754_powf+0x45e>
 8014eb6:	ee00 3a10 	vmov	s0, r3
 8014eba:	e7f7      	b.n	8014eac <__ieee754_powf+0x504>
 8014ebc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014ec0:	e58a      	b.n	80149d8 <__ieee754_powf+0x30>
 8014ec2:	ed9f 0a1f 	vldr	s0, [pc, #124]	@ 8014f40 <__ieee754_powf+0x598>
 8014ec6:	e587      	b.n	80149d8 <__ieee754_powf+0x30>
 8014ec8:	eeb0 0a48 	vmov.f32	s0, s16
 8014ecc:	e584      	b.n	80149d8 <__ieee754_powf+0x30>
 8014ece:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 8014ed2:	f43f adbb 	beq.w	8014a4c <__ieee754_powf+0xa4>
 8014ed6:	2502      	movs	r5, #2
 8014ed8:	eeb0 0a48 	vmov.f32	s0, s16
 8014edc:	f000 f832 	bl	8014f44 <fabsf>
 8014ee0:	f026 4340 	bic.w	r3, r6, #3221225472	@ 0xc0000000
 8014ee4:	f1b3 5f7e 	cmp.w	r3, #1065353216	@ 0x3f800000
 8014ee8:	4647      	mov	r7, r8
 8014eea:	d003      	beq.n	8014ef4 <__ieee754_powf+0x54c>
 8014eec:	f1b8 0f00 	cmp.w	r8, #0
 8014ef0:	f47f addb 	bne.w	8014aaa <__ieee754_powf+0x102>
 8014ef4:	2c00      	cmp	r4, #0
 8014ef6:	bfbc      	itt	lt
 8014ef8:	eef7 7a00 	vmovlt.f32	s15, #112	@ 0x3f800000  1.0
 8014efc:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 8014f00:	2e00      	cmp	r6, #0
 8014f02:	f6bf ad69 	bge.w	80149d8 <__ieee754_powf+0x30>
 8014f06:	f1a8 587e 	sub.w	r8, r8, #1065353216	@ 0x3f800000
 8014f0a:	ea58 0805 	orrs.w	r8, r8, r5
 8014f0e:	f47f adc7 	bne.w	8014aa0 <__ieee754_powf+0xf8>
 8014f12:	ee70 7a40 	vsub.f32	s15, s0, s0
 8014f16:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8014f1a:	e55d      	b.n	80149d8 <__ieee754_powf+0x30>
 8014f1c:	ff800000 	.word	0xff800000
 8014f20:	3f317218 	.word	0x3f317218
 8014f24:	3f317200 	.word	0x3f317200
 8014f28:	35bfbe8c 	.word	0x35bfbe8c
 8014f2c:	b5ddea0e 	.word	0xb5ddea0e
 8014f30:	3331bb4c 	.word	0x3331bb4c
 8014f34:	388ab355 	.word	0x388ab355
 8014f38:	bb360b61 	.word	0xbb360b61
 8014f3c:	3e2aaaab 	.word	0x3e2aaaab
 8014f40:	00000000 	.word	0x00000000

08014f44 <fabsf>:
 8014f44:	ee10 3a10 	vmov	r3, s0
 8014f48:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8014f4c:	ee00 3a10 	vmov	s0, r3
 8014f50:	4770      	bx	lr
	...

08014f54 <scalbnf>:
 8014f54:	ee10 3a10 	vmov	r3, s0
 8014f58:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8014f5c:	d02b      	beq.n	8014fb6 <scalbnf+0x62>
 8014f5e:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8014f62:	d302      	bcc.n	8014f6a <scalbnf+0x16>
 8014f64:	ee30 0a00 	vadd.f32	s0, s0, s0
 8014f68:	4770      	bx	lr
 8014f6a:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8014f6e:	d123      	bne.n	8014fb8 <scalbnf+0x64>
 8014f70:	4b24      	ldr	r3, [pc, #144]	@ (8015004 <scalbnf+0xb0>)
 8014f72:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8015008 <scalbnf+0xb4>
 8014f76:	4298      	cmp	r0, r3
 8014f78:	ee20 0a27 	vmul.f32	s0, s0, s15
 8014f7c:	db17      	blt.n	8014fae <scalbnf+0x5a>
 8014f7e:	ee10 3a10 	vmov	r3, s0
 8014f82:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8014f86:	3a19      	subs	r2, #25
 8014f88:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8014f8c:	4288      	cmp	r0, r1
 8014f8e:	dd15      	ble.n	8014fbc <scalbnf+0x68>
 8014f90:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 801500c <scalbnf+0xb8>
 8014f94:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8015010 <scalbnf+0xbc>
 8014f98:	ee10 3a10 	vmov	r3, s0
 8014f9c:	eeb0 7a67 	vmov.f32	s14, s15
 8014fa0:	2b00      	cmp	r3, #0
 8014fa2:	bfb8      	it	lt
 8014fa4:	eef0 7a66 	vmovlt.f32	s15, s13
 8014fa8:	ee27 0a87 	vmul.f32	s0, s15, s14
 8014fac:	4770      	bx	lr
 8014fae:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8015014 <scalbnf+0xc0>
 8014fb2:	ee27 0a80 	vmul.f32	s0, s15, s0
 8014fb6:	4770      	bx	lr
 8014fb8:	0dd2      	lsrs	r2, r2, #23
 8014fba:	e7e5      	b.n	8014f88 <scalbnf+0x34>
 8014fbc:	4410      	add	r0, r2
 8014fbe:	28fe      	cmp	r0, #254	@ 0xfe
 8014fc0:	dce6      	bgt.n	8014f90 <scalbnf+0x3c>
 8014fc2:	2800      	cmp	r0, #0
 8014fc4:	dd06      	ble.n	8014fd4 <scalbnf+0x80>
 8014fc6:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8014fca:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8014fce:	ee00 3a10 	vmov	s0, r3
 8014fd2:	4770      	bx	lr
 8014fd4:	f110 0f16 	cmn.w	r0, #22
 8014fd8:	da09      	bge.n	8014fee <scalbnf+0x9a>
 8014fda:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8015014 <scalbnf+0xc0>
 8014fde:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8015018 <scalbnf+0xc4>
 8014fe2:	ee10 3a10 	vmov	r3, s0
 8014fe6:	eeb0 7a67 	vmov.f32	s14, s15
 8014fea:	2b00      	cmp	r3, #0
 8014fec:	e7d9      	b.n	8014fa2 <scalbnf+0x4e>
 8014fee:	3019      	adds	r0, #25
 8014ff0:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8014ff4:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8014ff8:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 801501c <scalbnf+0xc8>
 8014ffc:	ee07 3a90 	vmov	s15, r3
 8015000:	e7d7      	b.n	8014fb2 <scalbnf+0x5e>
 8015002:	bf00      	nop
 8015004:	ffff3cb0 	.word	0xffff3cb0
 8015008:	4c000000 	.word	0x4c000000
 801500c:	7149f2ca 	.word	0x7149f2ca
 8015010:	f149f2ca 	.word	0xf149f2ca
 8015014:	0da24260 	.word	0x0da24260
 8015018:	8da24260 	.word	0x8da24260
 801501c:	33000000 	.word	0x33000000

08015020 <with_errnof>:
 8015020:	b510      	push	{r4, lr}
 8015022:	ed2d 8b02 	vpush	{d8}
 8015026:	eeb0 8a40 	vmov.f32	s16, s0
 801502a:	4604      	mov	r4, r0
 801502c:	f7fb fa6e 	bl	801050c <__errno>
 8015030:	eeb0 0a48 	vmov.f32	s0, s16
 8015034:	ecbd 8b02 	vpop	{d8}
 8015038:	6004      	str	r4, [r0, #0]
 801503a:	bd10      	pop	{r4, pc}

0801503c <xflowf>:
 801503c:	b130      	cbz	r0, 801504c <xflowf+0x10>
 801503e:	eef1 7a40 	vneg.f32	s15, s0
 8015042:	ee27 0a80 	vmul.f32	s0, s15, s0
 8015046:	2022      	movs	r0, #34	@ 0x22
 8015048:	f7ff bfea 	b.w	8015020 <with_errnof>
 801504c:	eef0 7a40 	vmov.f32	s15, s0
 8015050:	e7f7      	b.n	8015042 <xflowf+0x6>
	...

08015054 <__math_uflowf>:
 8015054:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 801505c <__math_uflowf+0x8>
 8015058:	f7ff bff0 	b.w	801503c <xflowf>
 801505c:	10000000 	.word	0x10000000

08015060 <__math_oflowf>:
 8015060:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8015068 <__math_oflowf+0x8>
 8015064:	f7ff bfea 	b.w	801503c <xflowf>
 8015068:	70000000 	.word	0x70000000

0801506c <__ieee754_sqrtf>:
 801506c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8015070:	4770      	bx	lr
 8015072:	0000      	movs	r0, r0
 8015074:	0000      	movs	r0, r0
	...

08015078 <__kernel_rem_pio2>:
 8015078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801507c:	ed2d 8b02 	vpush	{d8}
 8015080:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 8015084:	f112 0f14 	cmn.w	r2, #20
 8015088:	9306      	str	r3, [sp, #24]
 801508a:	9104      	str	r1, [sp, #16]
 801508c:	4bc2      	ldr	r3, [pc, #776]	@ (8015398 <__kernel_rem_pio2+0x320>)
 801508e:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 8015090:	9008      	str	r0, [sp, #32]
 8015092:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8015096:	9300      	str	r3, [sp, #0]
 8015098:	9b06      	ldr	r3, [sp, #24]
 801509a:	f103 33ff 	add.w	r3, r3, #4294967295
 801509e:	bfa8      	it	ge
 80150a0:	1ed4      	subge	r4, r2, #3
 80150a2:	9305      	str	r3, [sp, #20]
 80150a4:	bfb2      	itee	lt
 80150a6:	2400      	movlt	r4, #0
 80150a8:	2318      	movge	r3, #24
 80150aa:	fb94 f4f3 	sdivge	r4, r4, r3
 80150ae:	f06f 0317 	mvn.w	r3, #23
 80150b2:	fb04 3303 	mla	r3, r4, r3, r3
 80150b6:	eb03 0b02 	add.w	fp, r3, r2
 80150ba:	9b00      	ldr	r3, [sp, #0]
 80150bc:	9a05      	ldr	r2, [sp, #20]
 80150be:	ed9f 8bb2 	vldr	d8, [pc, #712]	@ 8015388 <__kernel_rem_pio2+0x310>
 80150c2:	eb03 0802 	add.w	r8, r3, r2
 80150c6:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 80150c8:	1aa7      	subs	r7, r4, r2
 80150ca:	ae20      	add	r6, sp, #128	@ 0x80
 80150cc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80150d0:	2500      	movs	r5, #0
 80150d2:	4545      	cmp	r5, r8
 80150d4:	dd12      	ble.n	80150fc <__kernel_rem_pio2+0x84>
 80150d6:	9b06      	ldr	r3, [sp, #24]
 80150d8:	aa20      	add	r2, sp, #128	@ 0x80
 80150da:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 80150de:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 80150e2:	2700      	movs	r7, #0
 80150e4:	9b00      	ldr	r3, [sp, #0]
 80150e6:	429f      	cmp	r7, r3
 80150e8:	dc2e      	bgt.n	8015148 <__kernel_rem_pio2+0xd0>
 80150ea:	ed9f 7ba7 	vldr	d7, [pc, #668]	@ 8015388 <__kernel_rem_pio2+0x310>
 80150ee:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80150f2:	ed8d 7b02 	vstr	d7, [sp, #8]
 80150f6:	46a8      	mov	r8, r5
 80150f8:	2600      	movs	r6, #0
 80150fa:	e01b      	b.n	8015134 <__kernel_rem_pio2+0xbc>
 80150fc:	42ef      	cmn	r7, r5
 80150fe:	d407      	bmi.n	8015110 <__kernel_rem_pio2+0x98>
 8015100:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8015104:	f7eb f9e6 	bl	80004d4 <__aeabi_i2d>
 8015108:	e8e6 0102 	strd	r0, r1, [r6], #8
 801510c:	3501      	adds	r5, #1
 801510e:	e7e0      	b.n	80150d2 <__kernel_rem_pio2+0x5a>
 8015110:	ec51 0b18 	vmov	r0, r1, d8
 8015114:	e7f8      	b.n	8015108 <__kernel_rem_pio2+0x90>
 8015116:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
 801511a:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 801511e:	f7eb fa43 	bl	80005a8 <__aeabi_dmul>
 8015122:	4602      	mov	r2, r0
 8015124:	460b      	mov	r3, r1
 8015126:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801512a:	f7eb f887 	bl	800023c <__adddf3>
 801512e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8015132:	3601      	adds	r6, #1
 8015134:	9b05      	ldr	r3, [sp, #20]
 8015136:	429e      	cmp	r6, r3
 8015138:	dded      	ble.n	8015116 <__kernel_rem_pio2+0x9e>
 801513a:	ed9d 7b02 	vldr	d7, [sp, #8]
 801513e:	3701      	adds	r7, #1
 8015140:	ecaa 7b02 	vstmia	sl!, {d7}
 8015144:	3508      	adds	r5, #8
 8015146:	e7cd      	b.n	80150e4 <__kernel_rem_pio2+0x6c>
 8015148:	9b00      	ldr	r3, [sp, #0]
 801514a:	f8dd 8000 	ldr.w	r8, [sp]
 801514e:	aa0c      	add	r2, sp, #48	@ 0x30
 8015150:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8015154:	930a      	str	r3, [sp, #40]	@ 0x28
 8015156:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8015158:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 801515c:	9309      	str	r3, [sp, #36]	@ 0x24
 801515e:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8015162:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015164:	ab98      	add	r3, sp, #608	@ 0x260
 8015166:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 801516a:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 801516e:	ed8d 7b02 	vstr	d7, [sp, #8]
 8015172:	ac0c      	add	r4, sp, #48	@ 0x30
 8015174:	ab70      	add	r3, sp, #448	@ 0x1c0
 8015176:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 801517a:	46a1      	mov	r9, r4
 801517c:	46c2      	mov	sl, r8
 801517e:	f1ba 0f00 	cmp.w	sl, #0
 8015182:	dc77      	bgt.n	8015274 <__kernel_rem_pio2+0x1fc>
 8015184:	4658      	mov	r0, fp
 8015186:	ed9d 0b02 	vldr	d0, [sp, #8]
 801518a:	f000 fd21 	bl	8015bd0 <scalbn>
 801518e:	ec57 6b10 	vmov	r6, r7, d0
 8015192:	2200      	movs	r2, #0
 8015194:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 8015198:	4630      	mov	r0, r6
 801519a:	4639      	mov	r1, r7
 801519c:	f7eb fa04 	bl	80005a8 <__aeabi_dmul>
 80151a0:	ec41 0b10 	vmov	d0, r0, r1
 80151a4:	f7fe fe10 	bl	8013dc8 <floor>
 80151a8:	4b7c      	ldr	r3, [pc, #496]	@ (801539c <__kernel_rem_pio2+0x324>)
 80151aa:	ec51 0b10 	vmov	r0, r1, d0
 80151ae:	2200      	movs	r2, #0
 80151b0:	f7eb f9fa 	bl	80005a8 <__aeabi_dmul>
 80151b4:	4602      	mov	r2, r0
 80151b6:	460b      	mov	r3, r1
 80151b8:	4630      	mov	r0, r6
 80151ba:	4639      	mov	r1, r7
 80151bc:	f7eb f83c 	bl	8000238 <__aeabi_dsub>
 80151c0:	460f      	mov	r7, r1
 80151c2:	4606      	mov	r6, r0
 80151c4:	f7eb fca0 	bl	8000b08 <__aeabi_d2iz>
 80151c8:	9002      	str	r0, [sp, #8]
 80151ca:	f7eb f983 	bl	80004d4 <__aeabi_i2d>
 80151ce:	4602      	mov	r2, r0
 80151d0:	460b      	mov	r3, r1
 80151d2:	4630      	mov	r0, r6
 80151d4:	4639      	mov	r1, r7
 80151d6:	f7eb f82f 	bl	8000238 <__aeabi_dsub>
 80151da:	f1bb 0f00 	cmp.w	fp, #0
 80151de:	4606      	mov	r6, r0
 80151e0:	460f      	mov	r7, r1
 80151e2:	dd6c      	ble.n	80152be <__kernel_rem_pio2+0x246>
 80151e4:	f108 31ff 	add.w	r1, r8, #4294967295
 80151e8:	ab0c      	add	r3, sp, #48	@ 0x30
 80151ea:	9d02      	ldr	r5, [sp, #8]
 80151ec:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80151f0:	f1cb 0018 	rsb	r0, fp, #24
 80151f4:	fa43 f200 	asr.w	r2, r3, r0
 80151f8:	4415      	add	r5, r2
 80151fa:	4082      	lsls	r2, r0
 80151fc:	1a9b      	subs	r3, r3, r2
 80151fe:	aa0c      	add	r2, sp, #48	@ 0x30
 8015200:	9502      	str	r5, [sp, #8]
 8015202:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8015206:	f1cb 0217 	rsb	r2, fp, #23
 801520a:	fa43 f902 	asr.w	r9, r3, r2
 801520e:	f1b9 0f00 	cmp.w	r9, #0
 8015212:	dd64      	ble.n	80152de <__kernel_rem_pio2+0x266>
 8015214:	9b02      	ldr	r3, [sp, #8]
 8015216:	2200      	movs	r2, #0
 8015218:	3301      	adds	r3, #1
 801521a:	9302      	str	r3, [sp, #8]
 801521c:	4615      	mov	r5, r2
 801521e:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 8015222:	4590      	cmp	r8, r2
 8015224:	f300 80a1 	bgt.w	801536a <__kernel_rem_pio2+0x2f2>
 8015228:	f1bb 0f00 	cmp.w	fp, #0
 801522c:	dd07      	ble.n	801523e <__kernel_rem_pio2+0x1c6>
 801522e:	f1bb 0f01 	cmp.w	fp, #1
 8015232:	f000 80c1 	beq.w	80153b8 <__kernel_rem_pio2+0x340>
 8015236:	f1bb 0f02 	cmp.w	fp, #2
 801523a:	f000 80c8 	beq.w	80153ce <__kernel_rem_pio2+0x356>
 801523e:	f1b9 0f02 	cmp.w	r9, #2
 8015242:	d14c      	bne.n	80152de <__kernel_rem_pio2+0x266>
 8015244:	4632      	mov	r2, r6
 8015246:	463b      	mov	r3, r7
 8015248:	4955      	ldr	r1, [pc, #340]	@ (80153a0 <__kernel_rem_pio2+0x328>)
 801524a:	2000      	movs	r0, #0
 801524c:	f7ea fff4 	bl	8000238 <__aeabi_dsub>
 8015250:	4606      	mov	r6, r0
 8015252:	460f      	mov	r7, r1
 8015254:	2d00      	cmp	r5, #0
 8015256:	d042      	beq.n	80152de <__kernel_rem_pio2+0x266>
 8015258:	4658      	mov	r0, fp
 801525a:	ed9f 0b4d 	vldr	d0, [pc, #308]	@ 8015390 <__kernel_rem_pio2+0x318>
 801525e:	f000 fcb7 	bl	8015bd0 <scalbn>
 8015262:	4630      	mov	r0, r6
 8015264:	4639      	mov	r1, r7
 8015266:	ec53 2b10 	vmov	r2, r3, d0
 801526a:	f7ea ffe5 	bl	8000238 <__aeabi_dsub>
 801526e:	4606      	mov	r6, r0
 8015270:	460f      	mov	r7, r1
 8015272:	e034      	b.n	80152de <__kernel_rem_pio2+0x266>
 8015274:	4b4b      	ldr	r3, [pc, #300]	@ (80153a4 <__kernel_rem_pio2+0x32c>)
 8015276:	2200      	movs	r2, #0
 8015278:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801527c:	f7eb f994 	bl	80005a8 <__aeabi_dmul>
 8015280:	f7eb fc42 	bl	8000b08 <__aeabi_d2iz>
 8015284:	f7eb f926 	bl	80004d4 <__aeabi_i2d>
 8015288:	4b47      	ldr	r3, [pc, #284]	@ (80153a8 <__kernel_rem_pio2+0x330>)
 801528a:	2200      	movs	r2, #0
 801528c:	4606      	mov	r6, r0
 801528e:	460f      	mov	r7, r1
 8015290:	f7eb f98a 	bl	80005a8 <__aeabi_dmul>
 8015294:	4602      	mov	r2, r0
 8015296:	460b      	mov	r3, r1
 8015298:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801529c:	f7ea ffcc 	bl	8000238 <__aeabi_dsub>
 80152a0:	f7eb fc32 	bl	8000b08 <__aeabi_d2iz>
 80152a4:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 80152a8:	f849 0b04 	str.w	r0, [r9], #4
 80152ac:	4639      	mov	r1, r7
 80152ae:	4630      	mov	r0, r6
 80152b0:	f7ea ffc4 	bl	800023c <__adddf3>
 80152b4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80152b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80152bc:	e75f      	b.n	801517e <__kernel_rem_pio2+0x106>
 80152be:	d107      	bne.n	80152d0 <__kernel_rem_pio2+0x258>
 80152c0:	f108 33ff 	add.w	r3, r8, #4294967295
 80152c4:	aa0c      	add	r2, sp, #48	@ 0x30
 80152c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80152ca:	ea4f 59e3 	mov.w	r9, r3, asr #23
 80152ce:	e79e      	b.n	801520e <__kernel_rem_pio2+0x196>
 80152d0:	4b36      	ldr	r3, [pc, #216]	@ (80153ac <__kernel_rem_pio2+0x334>)
 80152d2:	2200      	movs	r2, #0
 80152d4:	f7eb fbee 	bl	8000ab4 <__aeabi_dcmpge>
 80152d8:	2800      	cmp	r0, #0
 80152da:	d143      	bne.n	8015364 <__kernel_rem_pio2+0x2ec>
 80152dc:	4681      	mov	r9, r0
 80152de:	2200      	movs	r2, #0
 80152e0:	2300      	movs	r3, #0
 80152e2:	4630      	mov	r0, r6
 80152e4:	4639      	mov	r1, r7
 80152e6:	f7eb fbc7 	bl	8000a78 <__aeabi_dcmpeq>
 80152ea:	2800      	cmp	r0, #0
 80152ec:	f000 80c1 	beq.w	8015472 <__kernel_rem_pio2+0x3fa>
 80152f0:	f108 33ff 	add.w	r3, r8, #4294967295
 80152f4:	2200      	movs	r2, #0
 80152f6:	9900      	ldr	r1, [sp, #0]
 80152f8:	428b      	cmp	r3, r1
 80152fa:	da70      	bge.n	80153de <__kernel_rem_pio2+0x366>
 80152fc:	2a00      	cmp	r2, #0
 80152fe:	f000 808b 	beq.w	8015418 <__kernel_rem_pio2+0x3a0>
 8015302:	f108 38ff 	add.w	r8, r8, #4294967295
 8015306:	ab0c      	add	r3, sp, #48	@ 0x30
 8015308:	f1ab 0b18 	sub.w	fp, fp, #24
 801530c:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 8015310:	2b00      	cmp	r3, #0
 8015312:	d0f6      	beq.n	8015302 <__kernel_rem_pio2+0x28a>
 8015314:	4658      	mov	r0, fp
 8015316:	ed9f 0b1e 	vldr	d0, [pc, #120]	@ 8015390 <__kernel_rem_pio2+0x318>
 801531a:	f000 fc59 	bl	8015bd0 <scalbn>
 801531e:	f108 0301 	add.w	r3, r8, #1
 8015322:	00da      	lsls	r2, r3, #3
 8015324:	9205      	str	r2, [sp, #20]
 8015326:	ec55 4b10 	vmov	r4, r5, d0
 801532a:	aa70      	add	r2, sp, #448	@ 0x1c0
 801532c:	f8df b074 	ldr.w	fp, [pc, #116]	@ 80153a4 <__kernel_rem_pio2+0x32c>
 8015330:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8015334:	4646      	mov	r6, r8
 8015336:	f04f 0a00 	mov.w	sl, #0
 801533a:	2e00      	cmp	r6, #0
 801533c:	f280 80d1 	bge.w	80154e2 <__kernel_rem_pio2+0x46a>
 8015340:	4644      	mov	r4, r8
 8015342:	2c00      	cmp	r4, #0
 8015344:	f2c0 80ff 	blt.w	8015546 <__kernel_rem_pio2+0x4ce>
 8015348:	4b19      	ldr	r3, [pc, #100]	@ (80153b0 <__kernel_rem_pio2+0x338>)
 801534a:	461f      	mov	r7, r3
 801534c:	ab70      	add	r3, sp, #448	@ 0x1c0
 801534e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8015352:	9306      	str	r3, [sp, #24]
 8015354:	f04f 0a00 	mov.w	sl, #0
 8015358:	f04f 0b00 	mov.w	fp, #0
 801535c:	2600      	movs	r6, #0
 801535e:	eba8 0504 	sub.w	r5, r8, r4
 8015362:	e0e4      	b.n	801552e <__kernel_rem_pio2+0x4b6>
 8015364:	f04f 0902 	mov.w	r9, #2
 8015368:	e754      	b.n	8015214 <__kernel_rem_pio2+0x19c>
 801536a:	f854 3b04 	ldr.w	r3, [r4], #4
 801536e:	bb0d      	cbnz	r5, 80153b4 <__kernel_rem_pio2+0x33c>
 8015370:	b123      	cbz	r3, 801537c <__kernel_rem_pio2+0x304>
 8015372:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8015376:	f844 3c04 	str.w	r3, [r4, #-4]
 801537a:	2301      	movs	r3, #1
 801537c:	3201      	adds	r2, #1
 801537e:	461d      	mov	r5, r3
 8015380:	e74f      	b.n	8015222 <__kernel_rem_pio2+0x1aa>
 8015382:	bf00      	nop
 8015384:	f3af 8000 	nop.w
	...
 8015394:	3ff00000 	.word	0x3ff00000
 8015398:	080189f0 	.word	0x080189f0
 801539c:	40200000 	.word	0x40200000
 80153a0:	3ff00000 	.word	0x3ff00000
 80153a4:	3e700000 	.word	0x3e700000
 80153a8:	41700000 	.word	0x41700000
 80153ac:	3fe00000 	.word	0x3fe00000
 80153b0:	080189b0 	.word	0x080189b0
 80153b4:	1acb      	subs	r3, r1, r3
 80153b6:	e7de      	b.n	8015376 <__kernel_rem_pio2+0x2fe>
 80153b8:	f108 32ff 	add.w	r2, r8, #4294967295
 80153bc:	ab0c      	add	r3, sp, #48	@ 0x30
 80153be:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80153c2:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80153c6:	a90c      	add	r1, sp, #48	@ 0x30
 80153c8:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80153cc:	e737      	b.n	801523e <__kernel_rem_pio2+0x1c6>
 80153ce:	f108 32ff 	add.w	r2, r8, #4294967295
 80153d2:	ab0c      	add	r3, sp, #48	@ 0x30
 80153d4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80153d8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80153dc:	e7f3      	b.n	80153c6 <__kernel_rem_pio2+0x34e>
 80153de:	a90c      	add	r1, sp, #48	@ 0x30
 80153e0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80153e4:	3b01      	subs	r3, #1
 80153e6:	430a      	orrs	r2, r1
 80153e8:	e785      	b.n	80152f6 <__kernel_rem_pio2+0x27e>
 80153ea:	3401      	adds	r4, #1
 80153ec:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80153f0:	2a00      	cmp	r2, #0
 80153f2:	d0fa      	beq.n	80153ea <__kernel_rem_pio2+0x372>
 80153f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80153f6:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 80153fa:	eb0d 0503 	add.w	r5, sp, r3
 80153fe:	9b06      	ldr	r3, [sp, #24]
 8015400:	aa20      	add	r2, sp, #128	@ 0x80
 8015402:	4443      	add	r3, r8
 8015404:	f108 0701 	add.w	r7, r8, #1
 8015408:	3d98      	subs	r5, #152	@ 0x98
 801540a:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 801540e:	4444      	add	r4, r8
 8015410:	42bc      	cmp	r4, r7
 8015412:	da04      	bge.n	801541e <__kernel_rem_pio2+0x3a6>
 8015414:	46a0      	mov	r8, r4
 8015416:	e6a2      	b.n	801515e <__kernel_rem_pio2+0xe6>
 8015418:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801541a:	2401      	movs	r4, #1
 801541c:	e7e6      	b.n	80153ec <__kernel_rem_pio2+0x374>
 801541e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015420:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8015424:	f7eb f856 	bl	80004d4 <__aeabi_i2d>
 8015428:	ed9f 7baf 	vldr	d7, [pc, #700]	@ 80156e8 <__kernel_rem_pio2+0x670>
 801542c:	e8e6 0102 	strd	r0, r1, [r6], #8
 8015430:	ed8d 7b02 	vstr	d7, [sp, #8]
 8015434:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8015438:	46b2      	mov	sl, r6
 801543a:	f04f 0800 	mov.w	r8, #0
 801543e:	9b05      	ldr	r3, [sp, #20]
 8015440:	4598      	cmp	r8, r3
 8015442:	dd05      	ble.n	8015450 <__kernel_rem_pio2+0x3d8>
 8015444:	ed9d 7b02 	vldr	d7, [sp, #8]
 8015448:	3701      	adds	r7, #1
 801544a:	eca5 7b02 	vstmia	r5!, {d7}
 801544e:	e7df      	b.n	8015410 <__kernel_rem_pio2+0x398>
 8015450:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 8015454:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8015458:	f7eb f8a6 	bl	80005a8 <__aeabi_dmul>
 801545c:	4602      	mov	r2, r0
 801545e:	460b      	mov	r3, r1
 8015460:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8015464:	f7ea feea 	bl	800023c <__adddf3>
 8015468:	f108 0801 	add.w	r8, r8, #1
 801546c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8015470:	e7e5      	b.n	801543e <__kernel_rem_pio2+0x3c6>
 8015472:	f1cb 0000 	rsb	r0, fp, #0
 8015476:	ec47 6b10 	vmov	d0, r6, r7
 801547a:	f000 fba9 	bl	8015bd0 <scalbn>
 801547e:	ec55 4b10 	vmov	r4, r5, d0
 8015482:	4b9b      	ldr	r3, [pc, #620]	@ (80156f0 <__kernel_rem_pio2+0x678>)
 8015484:	2200      	movs	r2, #0
 8015486:	4620      	mov	r0, r4
 8015488:	4629      	mov	r1, r5
 801548a:	f7eb fb13 	bl	8000ab4 <__aeabi_dcmpge>
 801548e:	b300      	cbz	r0, 80154d2 <__kernel_rem_pio2+0x45a>
 8015490:	4b98      	ldr	r3, [pc, #608]	@ (80156f4 <__kernel_rem_pio2+0x67c>)
 8015492:	2200      	movs	r2, #0
 8015494:	4620      	mov	r0, r4
 8015496:	4629      	mov	r1, r5
 8015498:	f7eb f886 	bl	80005a8 <__aeabi_dmul>
 801549c:	f7eb fb34 	bl	8000b08 <__aeabi_d2iz>
 80154a0:	4606      	mov	r6, r0
 80154a2:	f7eb f817 	bl	80004d4 <__aeabi_i2d>
 80154a6:	4b92      	ldr	r3, [pc, #584]	@ (80156f0 <__kernel_rem_pio2+0x678>)
 80154a8:	2200      	movs	r2, #0
 80154aa:	f7eb f87d 	bl	80005a8 <__aeabi_dmul>
 80154ae:	460b      	mov	r3, r1
 80154b0:	4602      	mov	r2, r0
 80154b2:	4629      	mov	r1, r5
 80154b4:	4620      	mov	r0, r4
 80154b6:	f7ea febf 	bl	8000238 <__aeabi_dsub>
 80154ba:	f7eb fb25 	bl	8000b08 <__aeabi_d2iz>
 80154be:	ab0c      	add	r3, sp, #48	@ 0x30
 80154c0:	f10b 0b18 	add.w	fp, fp, #24
 80154c4:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80154c8:	f108 0801 	add.w	r8, r8, #1
 80154cc:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 80154d0:	e720      	b.n	8015314 <__kernel_rem_pio2+0x29c>
 80154d2:	4620      	mov	r0, r4
 80154d4:	4629      	mov	r1, r5
 80154d6:	f7eb fb17 	bl	8000b08 <__aeabi_d2iz>
 80154da:	ab0c      	add	r3, sp, #48	@ 0x30
 80154dc:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80154e0:	e718      	b.n	8015314 <__kernel_rem_pio2+0x29c>
 80154e2:	ab0c      	add	r3, sp, #48	@ 0x30
 80154e4:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80154e8:	f7ea fff4 	bl	80004d4 <__aeabi_i2d>
 80154ec:	4622      	mov	r2, r4
 80154ee:	462b      	mov	r3, r5
 80154f0:	f7eb f85a 	bl	80005a8 <__aeabi_dmul>
 80154f4:	4652      	mov	r2, sl
 80154f6:	e967 0102 	strd	r0, r1, [r7, #-8]!
 80154fa:	465b      	mov	r3, fp
 80154fc:	4620      	mov	r0, r4
 80154fe:	4629      	mov	r1, r5
 8015500:	f7eb f852 	bl	80005a8 <__aeabi_dmul>
 8015504:	3e01      	subs	r6, #1
 8015506:	4604      	mov	r4, r0
 8015508:	460d      	mov	r5, r1
 801550a:	e716      	b.n	801533a <__kernel_rem_pio2+0x2c2>
 801550c:	9906      	ldr	r1, [sp, #24]
 801550e:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 8015512:	9106      	str	r1, [sp, #24]
 8015514:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 8015518:	f7eb f846 	bl	80005a8 <__aeabi_dmul>
 801551c:	4602      	mov	r2, r0
 801551e:	460b      	mov	r3, r1
 8015520:	4650      	mov	r0, sl
 8015522:	4659      	mov	r1, fp
 8015524:	f7ea fe8a 	bl	800023c <__adddf3>
 8015528:	3601      	adds	r6, #1
 801552a:	4682      	mov	sl, r0
 801552c:	468b      	mov	fp, r1
 801552e:	9b00      	ldr	r3, [sp, #0]
 8015530:	429e      	cmp	r6, r3
 8015532:	dc01      	bgt.n	8015538 <__kernel_rem_pio2+0x4c0>
 8015534:	42ae      	cmp	r6, r5
 8015536:	dde9      	ble.n	801550c <__kernel_rem_pio2+0x494>
 8015538:	ab48      	add	r3, sp, #288	@ 0x120
 801553a:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 801553e:	e9c5 ab00 	strd	sl, fp, [r5]
 8015542:	3c01      	subs	r4, #1
 8015544:	e6fd      	b.n	8015342 <__kernel_rem_pio2+0x2ca>
 8015546:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8015548:	2b02      	cmp	r3, #2
 801554a:	dc0b      	bgt.n	8015564 <__kernel_rem_pio2+0x4ec>
 801554c:	2b00      	cmp	r3, #0
 801554e:	dc35      	bgt.n	80155bc <__kernel_rem_pio2+0x544>
 8015550:	d059      	beq.n	8015606 <__kernel_rem_pio2+0x58e>
 8015552:	9b02      	ldr	r3, [sp, #8]
 8015554:	f003 0007 	and.w	r0, r3, #7
 8015558:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 801555c:	ecbd 8b02 	vpop	{d8}
 8015560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015564:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8015566:	2b03      	cmp	r3, #3
 8015568:	d1f3      	bne.n	8015552 <__kernel_rem_pio2+0x4da>
 801556a:	9b05      	ldr	r3, [sp, #20]
 801556c:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8015570:	eb0d 0403 	add.w	r4, sp, r3
 8015574:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8015578:	4625      	mov	r5, r4
 801557a:	46c2      	mov	sl, r8
 801557c:	f1ba 0f00 	cmp.w	sl, #0
 8015580:	dc69      	bgt.n	8015656 <__kernel_rem_pio2+0x5de>
 8015582:	4645      	mov	r5, r8
 8015584:	2d01      	cmp	r5, #1
 8015586:	f300 8087 	bgt.w	8015698 <__kernel_rem_pio2+0x620>
 801558a:	9c05      	ldr	r4, [sp, #20]
 801558c:	ab48      	add	r3, sp, #288	@ 0x120
 801558e:	441c      	add	r4, r3
 8015590:	2000      	movs	r0, #0
 8015592:	2100      	movs	r1, #0
 8015594:	f1b8 0f01 	cmp.w	r8, #1
 8015598:	f300 809c 	bgt.w	80156d4 <__kernel_rem_pio2+0x65c>
 801559c:	e9dd 5648 	ldrd	r5, r6, [sp, #288]	@ 0x120
 80155a0:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	@ 0x128
 80155a4:	f1b9 0f00 	cmp.w	r9, #0
 80155a8:	f040 80a6 	bne.w	80156f8 <__kernel_rem_pio2+0x680>
 80155ac:	9b04      	ldr	r3, [sp, #16]
 80155ae:	e9c3 5600 	strd	r5, r6, [r3]
 80155b2:	e9c3 7802 	strd	r7, r8, [r3, #8]
 80155b6:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80155ba:	e7ca      	b.n	8015552 <__kernel_rem_pio2+0x4da>
 80155bc:	9d05      	ldr	r5, [sp, #20]
 80155be:	ab48      	add	r3, sp, #288	@ 0x120
 80155c0:	441d      	add	r5, r3
 80155c2:	4644      	mov	r4, r8
 80155c4:	2000      	movs	r0, #0
 80155c6:	2100      	movs	r1, #0
 80155c8:	2c00      	cmp	r4, #0
 80155ca:	da35      	bge.n	8015638 <__kernel_rem_pio2+0x5c0>
 80155cc:	f1b9 0f00 	cmp.w	r9, #0
 80155d0:	d038      	beq.n	8015644 <__kernel_rem_pio2+0x5cc>
 80155d2:	4602      	mov	r2, r0
 80155d4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80155d8:	9c04      	ldr	r4, [sp, #16]
 80155da:	e9c4 2300 	strd	r2, r3, [r4]
 80155de:	4602      	mov	r2, r0
 80155e0:	460b      	mov	r3, r1
 80155e2:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 80155e6:	f7ea fe27 	bl	8000238 <__aeabi_dsub>
 80155ea:	ad4a      	add	r5, sp, #296	@ 0x128
 80155ec:	2401      	movs	r4, #1
 80155ee:	45a0      	cmp	r8, r4
 80155f0:	da2b      	bge.n	801564a <__kernel_rem_pio2+0x5d2>
 80155f2:	f1b9 0f00 	cmp.w	r9, #0
 80155f6:	d002      	beq.n	80155fe <__kernel_rem_pio2+0x586>
 80155f8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80155fc:	4619      	mov	r1, r3
 80155fe:	9b04      	ldr	r3, [sp, #16]
 8015600:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8015604:	e7a5      	b.n	8015552 <__kernel_rem_pio2+0x4da>
 8015606:	9c05      	ldr	r4, [sp, #20]
 8015608:	ab48      	add	r3, sp, #288	@ 0x120
 801560a:	441c      	add	r4, r3
 801560c:	2000      	movs	r0, #0
 801560e:	2100      	movs	r1, #0
 8015610:	f1b8 0f00 	cmp.w	r8, #0
 8015614:	da09      	bge.n	801562a <__kernel_rem_pio2+0x5b2>
 8015616:	f1b9 0f00 	cmp.w	r9, #0
 801561a:	d002      	beq.n	8015622 <__kernel_rem_pio2+0x5aa>
 801561c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8015620:	4619      	mov	r1, r3
 8015622:	9b04      	ldr	r3, [sp, #16]
 8015624:	e9c3 0100 	strd	r0, r1, [r3]
 8015628:	e793      	b.n	8015552 <__kernel_rem_pio2+0x4da>
 801562a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 801562e:	f7ea fe05 	bl	800023c <__adddf3>
 8015632:	f108 38ff 	add.w	r8, r8, #4294967295
 8015636:	e7eb      	b.n	8015610 <__kernel_rem_pio2+0x598>
 8015638:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 801563c:	f7ea fdfe 	bl	800023c <__adddf3>
 8015640:	3c01      	subs	r4, #1
 8015642:	e7c1      	b.n	80155c8 <__kernel_rem_pio2+0x550>
 8015644:	4602      	mov	r2, r0
 8015646:	460b      	mov	r3, r1
 8015648:	e7c6      	b.n	80155d8 <__kernel_rem_pio2+0x560>
 801564a:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 801564e:	f7ea fdf5 	bl	800023c <__adddf3>
 8015652:	3401      	adds	r4, #1
 8015654:	e7cb      	b.n	80155ee <__kernel_rem_pio2+0x576>
 8015656:	ed35 7b02 	vldmdb	r5!, {d7}
 801565a:	ed8d 7b00 	vstr	d7, [sp]
 801565e:	ed95 7b02 	vldr	d7, [r5, #8]
 8015662:	e9dd 0100 	ldrd	r0, r1, [sp]
 8015666:	ec53 2b17 	vmov	r2, r3, d7
 801566a:	ed8d 7b06 	vstr	d7, [sp, #24]
 801566e:	f7ea fde5 	bl	800023c <__adddf3>
 8015672:	4602      	mov	r2, r0
 8015674:	460b      	mov	r3, r1
 8015676:	4606      	mov	r6, r0
 8015678:	460f      	mov	r7, r1
 801567a:	e9dd 0100 	ldrd	r0, r1, [sp]
 801567e:	f7ea fddb 	bl	8000238 <__aeabi_dsub>
 8015682:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015686:	f7ea fdd9 	bl	800023c <__adddf3>
 801568a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801568e:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8015692:	e9c5 6700 	strd	r6, r7, [r5]
 8015696:	e771      	b.n	801557c <__kernel_rem_pio2+0x504>
 8015698:	ed34 7b02 	vldmdb	r4!, {d7}
 801569c:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 80156a0:	ec51 0b17 	vmov	r0, r1, d7
 80156a4:	4652      	mov	r2, sl
 80156a6:	465b      	mov	r3, fp
 80156a8:	ed8d 7b00 	vstr	d7, [sp]
 80156ac:	f7ea fdc6 	bl	800023c <__adddf3>
 80156b0:	4602      	mov	r2, r0
 80156b2:	460b      	mov	r3, r1
 80156b4:	4606      	mov	r6, r0
 80156b6:	460f      	mov	r7, r1
 80156b8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80156bc:	f7ea fdbc 	bl	8000238 <__aeabi_dsub>
 80156c0:	4652      	mov	r2, sl
 80156c2:	465b      	mov	r3, fp
 80156c4:	f7ea fdba 	bl	800023c <__adddf3>
 80156c8:	3d01      	subs	r5, #1
 80156ca:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80156ce:	e9c4 6700 	strd	r6, r7, [r4]
 80156d2:	e757      	b.n	8015584 <__kernel_rem_pio2+0x50c>
 80156d4:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80156d8:	f7ea fdb0 	bl	800023c <__adddf3>
 80156dc:	f108 38ff 	add.w	r8, r8, #4294967295
 80156e0:	e758      	b.n	8015594 <__kernel_rem_pio2+0x51c>
 80156e2:	bf00      	nop
 80156e4:	f3af 8000 	nop.w
	...
 80156f0:	41700000 	.word	0x41700000
 80156f4:	3e700000 	.word	0x3e700000
 80156f8:	9b04      	ldr	r3, [sp, #16]
 80156fa:	9a04      	ldr	r2, [sp, #16]
 80156fc:	601d      	str	r5, [r3, #0]
 80156fe:	f106 4400 	add.w	r4, r6, #2147483648	@ 0x80000000
 8015702:	605c      	str	r4, [r3, #4]
 8015704:	609f      	str	r7, [r3, #8]
 8015706:	f108 4300 	add.w	r3, r8, #2147483648	@ 0x80000000
 801570a:	60d3      	str	r3, [r2, #12]
 801570c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8015710:	6110      	str	r0, [r2, #16]
 8015712:	6153      	str	r3, [r2, #20]
 8015714:	e71d      	b.n	8015552 <__kernel_rem_pio2+0x4da>
 8015716:	bf00      	nop

08015718 <__ieee754_acos>:
 8015718:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801571c:	ec55 4b10 	vmov	r4, r5, d0
 8015720:	49b7      	ldr	r1, [pc, #732]	@ (8015a00 <__ieee754_acos+0x2e8>)
 8015722:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8015726:	428b      	cmp	r3, r1
 8015728:	d919      	bls.n	801575e <__ieee754_acos+0x46>
 801572a:	f103 4340 	add.w	r3, r3, #3221225472	@ 0xc0000000
 801572e:	f503 1380 	add.w	r3, r3, #1048576	@ 0x100000
 8015732:	4323      	orrs	r3, r4
 8015734:	d106      	bne.n	8015744 <__ieee754_acos+0x2c>
 8015736:	2d00      	cmp	r5, #0
 8015738:	f340 8210 	ble.w	8015b5c <__ieee754_acos+0x444>
 801573c:	ed9f 0b94 	vldr	d0, [pc, #592]	@ 8015990 <__ieee754_acos+0x278>
 8015740:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015744:	4622      	mov	r2, r4
 8015746:	462b      	mov	r3, r5
 8015748:	4620      	mov	r0, r4
 801574a:	4629      	mov	r1, r5
 801574c:	f7ea fd74 	bl	8000238 <__aeabi_dsub>
 8015750:	4602      	mov	r2, r0
 8015752:	460b      	mov	r3, r1
 8015754:	f7eb f852 	bl	80007fc <__aeabi_ddiv>
 8015758:	ec41 0b10 	vmov	d0, r0, r1
 801575c:	e7f0      	b.n	8015740 <__ieee754_acos+0x28>
 801575e:	49a9      	ldr	r1, [pc, #676]	@ (8015a04 <__ieee754_acos+0x2ec>)
 8015760:	428b      	cmp	r3, r1
 8015762:	f200 8085 	bhi.w	8015870 <__ieee754_acos+0x158>
 8015766:	4aa8      	ldr	r2, [pc, #672]	@ (8015a08 <__ieee754_acos+0x2f0>)
 8015768:	4293      	cmp	r3, r2
 801576a:	f240 81fa 	bls.w	8015b62 <__ieee754_acos+0x44a>
 801576e:	4622      	mov	r2, r4
 8015770:	462b      	mov	r3, r5
 8015772:	4620      	mov	r0, r4
 8015774:	4629      	mov	r1, r5
 8015776:	f7ea ff17 	bl	80005a8 <__aeabi_dmul>
 801577a:	a387      	add	r3, pc, #540	@ (adr r3, 8015998 <__ieee754_acos+0x280>)
 801577c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015780:	4606      	mov	r6, r0
 8015782:	460f      	mov	r7, r1
 8015784:	f7ea ff10 	bl	80005a8 <__aeabi_dmul>
 8015788:	a385      	add	r3, pc, #532	@ (adr r3, 80159a0 <__ieee754_acos+0x288>)
 801578a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801578e:	f7ea fd55 	bl	800023c <__adddf3>
 8015792:	4632      	mov	r2, r6
 8015794:	463b      	mov	r3, r7
 8015796:	f7ea ff07 	bl	80005a8 <__aeabi_dmul>
 801579a:	a383      	add	r3, pc, #524	@ (adr r3, 80159a8 <__ieee754_acos+0x290>)
 801579c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157a0:	f7ea fd4a 	bl	8000238 <__aeabi_dsub>
 80157a4:	4632      	mov	r2, r6
 80157a6:	463b      	mov	r3, r7
 80157a8:	f7ea fefe 	bl	80005a8 <__aeabi_dmul>
 80157ac:	a380      	add	r3, pc, #512	@ (adr r3, 80159b0 <__ieee754_acos+0x298>)
 80157ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157b2:	f7ea fd43 	bl	800023c <__adddf3>
 80157b6:	4632      	mov	r2, r6
 80157b8:	463b      	mov	r3, r7
 80157ba:	f7ea fef5 	bl	80005a8 <__aeabi_dmul>
 80157be:	a37e      	add	r3, pc, #504	@ (adr r3, 80159b8 <__ieee754_acos+0x2a0>)
 80157c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157c4:	f7ea fd38 	bl	8000238 <__aeabi_dsub>
 80157c8:	4632      	mov	r2, r6
 80157ca:	463b      	mov	r3, r7
 80157cc:	f7ea feec 	bl	80005a8 <__aeabi_dmul>
 80157d0:	a37b      	add	r3, pc, #492	@ (adr r3, 80159c0 <__ieee754_acos+0x2a8>)
 80157d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157d6:	f7ea fd31 	bl	800023c <__adddf3>
 80157da:	4632      	mov	r2, r6
 80157dc:	463b      	mov	r3, r7
 80157de:	f7ea fee3 	bl	80005a8 <__aeabi_dmul>
 80157e2:	a379      	add	r3, pc, #484	@ (adr r3, 80159c8 <__ieee754_acos+0x2b0>)
 80157e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157e8:	4680      	mov	r8, r0
 80157ea:	4689      	mov	r9, r1
 80157ec:	4630      	mov	r0, r6
 80157ee:	4639      	mov	r1, r7
 80157f0:	f7ea feda 	bl	80005a8 <__aeabi_dmul>
 80157f4:	a376      	add	r3, pc, #472	@ (adr r3, 80159d0 <__ieee754_acos+0x2b8>)
 80157f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157fa:	f7ea fd1d 	bl	8000238 <__aeabi_dsub>
 80157fe:	4632      	mov	r2, r6
 8015800:	463b      	mov	r3, r7
 8015802:	f7ea fed1 	bl	80005a8 <__aeabi_dmul>
 8015806:	a374      	add	r3, pc, #464	@ (adr r3, 80159d8 <__ieee754_acos+0x2c0>)
 8015808:	e9d3 2300 	ldrd	r2, r3, [r3]
 801580c:	f7ea fd16 	bl	800023c <__adddf3>
 8015810:	4632      	mov	r2, r6
 8015812:	463b      	mov	r3, r7
 8015814:	f7ea fec8 	bl	80005a8 <__aeabi_dmul>
 8015818:	a371      	add	r3, pc, #452	@ (adr r3, 80159e0 <__ieee754_acos+0x2c8>)
 801581a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801581e:	f7ea fd0b 	bl	8000238 <__aeabi_dsub>
 8015822:	4632      	mov	r2, r6
 8015824:	463b      	mov	r3, r7
 8015826:	f7ea febf 	bl	80005a8 <__aeabi_dmul>
 801582a:	4b78      	ldr	r3, [pc, #480]	@ (8015a0c <__ieee754_acos+0x2f4>)
 801582c:	2200      	movs	r2, #0
 801582e:	f7ea fd05 	bl	800023c <__adddf3>
 8015832:	4602      	mov	r2, r0
 8015834:	460b      	mov	r3, r1
 8015836:	4640      	mov	r0, r8
 8015838:	4649      	mov	r1, r9
 801583a:	f7ea ffdf 	bl	80007fc <__aeabi_ddiv>
 801583e:	4622      	mov	r2, r4
 8015840:	462b      	mov	r3, r5
 8015842:	f7ea feb1 	bl	80005a8 <__aeabi_dmul>
 8015846:	4602      	mov	r2, r0
 8015848:	460b      	mov	r3, r1
 801584a:	a167      	add	r1, pc, #412	@ (adr r1, 80159e8 <__ieee754_acos+0x2d0>)
 801584c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015850:	f7ea fcf2 	bl	8000238 <__aeabi_dsub>
 8015854:	4602      	mov	r2, r0
 8015856:	460b      	mov	r3, r1
 8015858:	4620      	mov	r0, r4
 801585a:	4629      	mov	r1, r5
 801585c:	f7ea fcec 	bl	8000238 <__aeabi_dsub>
 8015860:	4602      	mov	r2, r0
 8015862:	460b      	mov	r3, r1
 8015864:	a162      	add	r1, pc, #392	@ (adr r1, 80159f0 <__ieee754_acos+0x2d8>)
 8015866:	e9d1 0100 	ldrd	r0, r1, [r1]
 801586a:	f7ea fce5 	bl	8000238 <__aeabi_dsub>
 801586e:	e773      	b.n	8015758 <__ieee754_acos+0x40>
 8015870:	2d00      	cmp	r5, #0
 8015872:	f280 80cf 	bge.w	8015a14 <__ieee754_acos+0x2fc>
 8015876:	4b65      	ldr	r3, [pc, #404]	@ (8015a0c <__ieee754_acos+0x2f4>)
 8015878:	2200      	movs	r2, #0
 801587a:	4620      	mov	r0, r4
 801587c:	4629      	mov	r1, r5
 801587e:	f7ea fcdd 	bl	800023c <__adddf3>
 8015882:	4b63      	ldr	r3, [pc, #396]	@ (8015a10 <__ieee754_acos+0x2f8>)
 8015884:	2200      	movs	r2, #0
 8015886:	f7ea fe8f 	bl	80005a8 <__aeabi_dmul>
 801588a:	a343      	add	r3, pc, #268	@ (adr r3, 8015998 <__ieee754_acos+0x280>)
 801588c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015890:	4604      	mov	r4, r0
 8015892:	460d      	mov	r5, r1
 8015894:	f7ea fe88 	bl	80005a8 <__aeabi_dmul>
 8015898:	a341      	add	r3, pc, #260	@ (adr r3, 80159a0 <__ieee754_acos+0x288>)
 801589a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801589e:	f7ea fccd 	bl	800023c <__adddf3>
 80158a2:	4622      	mov	r2, r4
 80158a4:	462b      	mov	r3, r5
 80158a6:	f7ea fe7f 	bl	80005a8 <__aeabi_dmul>
 80158aa:	a33f      	add	r3, pc, #252	@ (adr r3, 80159a8 <__ieee754_acos+0x290>)
 80158ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158b0:	f7ea fcc2 	bl	8000238 <__aeabi_dsub>
 80158b4:	4622      	mov	r2, r4
 80158b6:	462b      	mov	r3, r5
 80158b8:	f7ea fe76 	bl	80005a8 <__aeabi_dmul>
 80158bc:	a33c      	add	r3, pc, #240	@ (adr r3, 80159b0 <__ieee754_acos+0x298>)
 80158be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158c2:	f7ea fcbb 	bl	800023c <__adddf3>
 80158c6:	4622      	mov	r2, r4
 80158c8:	462b      	mov	r3, r5
 80158ca:	f7ea fe6d 	bl	80005a8 <__aeabi_dmul>
 80158ce:	a33a      	add	r3, pc, #232	@ (adr r3, 80159b8 <__ieee754_acos+0x2a0>)
 80158d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158d4:	f7ea fcb0 	bl	8000238 <__aeabi_dsub>
 80158d8:	4622      	mov	r2, r4
 80158da:	462b      	mov	r3, r5
 80158dc:	f7ea fe64 	bl	80005a8 <__aeabi_dmul>
 80158e0:	a337      	add	r3, pc, #220	@ (adr r3, 80159c0 <__ieee754_acos+0x2a8>)
 80158e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158e6:	f7ea fca9 	bl	800023c <__adddf3>
 80158ea:	4622      	mov	r2, r4
 80158ec:	462b      	mov	r3, r5
 80158ee:	f7ea fe5b 	bl	80005a8 <__aeabi_dmul>
 80158f2:	a335      	add	r3, pc, #212	@ (adr r3, 80159c8 <__ieee754_acos+0x2b0>)
 80158f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158f8:	4606      	mov	r6, r0
 80158fa:	460f      	mov	r7, r1
 80158fc:	4620      	mov	r0, r4
 80158fe:	4629      	mov	r1, r5
 8015900:	f7ea fe52 	bl	80005a8 <__aeabi_dmul>
 8015904:	a332      	add	r3, pc, #200	@ (adr r3, 80159d0 <__ieee754_acos+0x2b8>)
 8015906:	e9d3 2300 	ldrd	r2, r3, [r3]
 801590a:	f7ea fc95 	bl	8000238 <__aeabi_dsub>
 801590e:	4622      	mov	r2, r4
 8015910:	462b      	mov	r3, r5
 8015912:	f7ea fe49 	bl	80005a8 <__aeabi_dmul>
 8015916:	a330      	add	r3, pc, #192	@ (adr r3, 80159d8 <__ieee754_acos+0x2c0>)
 8015918:	e9d3 2300 	ldrd	r2, r3, [r3]
 801591c:	f7ea fc8e 	bl	800023c <__adddf3>
 8015920:	4622      	mov	r2, r4
 8015922:	462b      	mov	r3, r5
 8015924:	f7ea fe40 	bl	80005a8 <__aeabi_dmul>
 8015928:	a32d      	add	r3, pc, #180	@ (adr r3, 80159e0 <__ieee754_acos+0x2c8>)
 801592a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801592e:	f7ea fc83 	bl	8000238 <__aeabi_dsub>
 8015932:	4622      	mov	r2, r4
 8015934:	462b      	mov	r3, r5
 8015936:	f7ea fe37 	bl	80005a8 <__aeabi_dmul>
 801593a:	4b34      	ldr	r3, [pc, #208]	@ (8015a0c <__ieee754_acos+0x2f4>)
 801593c:	2200      	movs	r2, #0
 801593e:	f7ea fc7d 	bl	800023c <__adddf3>
 8015942:	ec45 4b10 	vmov	d0, r4, r5
 8015946:	4680      	mov	r8, r0
 8015948:	4689      	mov	r9, r1
 801594a:	f000 f9bb 	bl	8015cc4 <__ieee754_sqrt>
 801594e:	ec55 4b10 	vmov	r4, r5, d0
 8015952:	4642      	mov	r2, r8
 8015954:	464b      	mov	r3, r9
 8015956:	4630      	mov	r0, r6
 8015958:	4639      	mov	r1, r7
 801595a:	f7ea ff4f 	bl	80007fc <__aeabi_ddiv>
 801595e:	4622      	mov	r2, r4
 8015960:	462b      	mov	r3, r5
 8015962:	f7ea fe21 	bl	80005a8 <__aeabi_dmul>
 8015966:	a320      	add	r3, pc, #128	@ (adr r3, 80159e8 <__ieee754_acos+0x2d0>)
 8015968:	e9d3 2300 	ldrd	r2, r3, [r3]
 801596c:	f7ea fc64 	bl	8000238 <__aeabi_dsub>
 8015970:	4622      	mov	r2, r4
 8015972:	462b      	mov	r3, r5
 8015974:	f7ea fc62 	bl	800023c <__adddf3>
 8015978:	4602      	mov	r2, r0
 801597a:	460b      	mov	r3, r1
 801597c:	f7ea fc5e 	bl	800023c <__adddf3>
 8015980:	4602      	mov	r2, r0
 8015982:	460b      	mov	r3, r1
 8015984:	a11c      	add	r1, pc, #112	@ (adr r1, 80159f8 <__ieee754_acos+0x2e0>)
 8015986:	e9d1 0100 	ldrd	r0, r1, [r1]
 801598a:	e76e      	b.n	801586a <__ieee754_acos+0x152>
 801598c:	f3af 8000 	nop.w
	...
 8015998:	0dfdf709 	.word	0x0dfdf709
 801599c:	3f023de1 	.word	0x3f023de1
 80159a0:	7501b288 	.word	0x7501b288
 80159a4:	3f49efe0 	.word	0x3f49efe0
 80159a8:	b5688f3b 	.word	0xb5688f3b
 80159ac:	3fa48228 	.word	0x3fa48228
 80159b0:	0e884455 	.word	0x0e884455
 80159b4:	3fc9c155 	.word	0x3fc9c155
 80159b8:	03eb6f7d 	.word	0x03eb6f7d
 80159bc:	3fd4d612 	.word	0x3fd4d612
 80159c0:	55555555 	.word	0x55555555
 80159c4:	3fc55555 	.word	0x3fc55555
 80159c8:	b12e9282 	.word	0xb12e9282
 80159cc:	3fb3b8c5 	.word	0x3fb3b8c5
 80159d0:	1b8d0159 	.word	0x1b8d0159
 80159d4:	3fe6066c 	.word	0x3fe6066c
 80159d8:	9c598ac8 	.word	0x9c598ac8
 80159dc:	40002ae5 	.word	0x40002ae5
 80159e0:	1c8a2d4b 	.word	0x1c8a2d4b
 80159e4:	40033a27 	.word	0x40033a27
 80159e8:	33145c07 	.word	0x33145c07
 80159ec:	3c91a626 	.word	0x3c91a626
 80159f0:	54442d18 	.word	0x54442d18
 80159f4:	3ff921fb 	.word	0x3ff921fb
 80159f8:	54442d18 	.word	0x54442d18
 80159fc:	400921fb 	.word	0x400921fb
 8015a00:	3fefffff 	.word	0x3fefffff
 8015a04:	3fdfffff 	.word	0x3fdfffff
 8015a08:	3c600000 	.word	0x3c600000
 8015a0c:	3ff00000 	.word	0x3ff00000
 8015a10:	3fe00000 	.word	0x3fe00000
 8015a14:	4622      	mov	r2, r4
 8015a16:	462b      	mov	r3, r5
 8015a18:	496b      	ldr	r1, [pc, #428]	@ (8015bc8 <__ieee754_acos+0x4b0>)
 8015a1a:	2000      	movs	r0, #0
 8015a1c:	f7ea fc0c 	bl	8000238 <__aeabi_dsub>
 8015a20:	4b6a      	ldr	r3, [pc, #424]	@ (8015bcc <__ieee754_acos+0x4b4>)
 8015a22:	2200      	movs	r2, #0
 8015a24:	f7ea fdc0 	bl	80005a8 <__aeabi_dmul>
 8015a28:	4604      	mov	r4, r0
 8015a2a:	460d      	mov	r5, r1
 8015a2c:	ec45 4b10 	vmov	d0, r4, r5
 8015a30:	f000 f948 	bl	8015cc4 <__ieee754_sqrt>
 8015a34:	a34c      	add	r3, pc, #304	@ (adr r3, 8015b68 <__ieee754_acos+0x450>)
 8015a36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a3a:	4620      	mov	r0, r4
 8015a3c:	4629      	mov	r1, r5
 8015a3e:	ec59 8b10 	vmov	r8, r9, d0
 8015a42:	f7ea fdb1 	bl	80005a8 <__aeabi_dmul>
 8015a46:	a34a      	add	r3, pc, #296	@ (adr r3, 8015b70 <__ieee754_acos+0x458>)
 8015a48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a4c:	f7ea fbf6 	bl	800023c <__adddf3>
 8015a50:	4622      	mov	r2, r4
 8015a52:	462b      	mov	r3, r5
 8015a54:	f7ea fda8 	bl	80005a8 <__aeabi_dmul>
 8015a58:	a347      	add	r3, pc, #284	@ (adr r3, 8015b78 <__ieee754_acos+0x460>)
 8015a5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a5e:	f7ea fbeb 	bl	8000238 <__aeabi_dsub>
 8015a62:	4622      	mov	r2, r4
 8015a64:	462b      	mov	r3, r5
 8015a66:	f7ea fd9f 	bl	80005a8 <__aeabi_dmul>
 8015a6a:	a345      	add	r3, pc, #276	@ (adr r3, 8015b80 <__ieee754_acos+0x468>)
 8015a6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a70:	f7ea fbe4 	bl	800023c <__adddf3>
 8015a74:	4622      	mov	r2, r4
 8015a76:	462b      	mov	r3, r5
 8015a78:	f7ea fd96 	bl	80005a8 <__aeabi_dmul>
 8015a7c:	a342      	add	r3, pc, #264	@ (adr r3, 8015b88 <__ieee754_acos+0x470>)
 8015a7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a82:	f7ea fbd9 	bl	8000238 <__aeabi_dsub>
 8015a86:	4622      	mov	r2, r4
 8015a88:	462b      	mov	r3, r5
 8015a8a:	f7ea fd8d 	bl	80005a8 <__aeabi_dmul>
 8015a8e:	a340      	add	r3, pc, #256	@ (adr r3, 8015b90 <__ieee754_acos+0x478>)
 8015a90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a94:	f7ea fbd2 	bl	800023c <__adddf3>
 8015a98:	4622      	mov	r2, r4
 8015a9a:	462b      	mov	r3, r5
 8015a9c:	f7ea fd84 	bl	80005a8 <__aeabi_dmul>
 8015aa0:	a33d      	add	r3, pc, #244	@ (adr r3, 8015b98 <__ieee754_acos+0x480>)
 8015aa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015aa6:	4682      	mov	sl, r0
 8015aa8:	468b      	mov	fp, r1
 8015aaa:	4620      	mov	r0, r4
 8015aac:	4629      	mov	r1, r5
 8015aae:	f7ea fd7b 	bl	80005a8 <__aeabi_dmul>
 8015ab2:	a33b      	add	r3, pc, #236	@ (adr r3, 8015ba0 <__ieee754_acos+0x488>)
 8015ab4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015ab8:	f7ea fbbe 	bl	8000238 <__aeabi_dsub>
 8015abc:	4622      	mov	r2, r4
 8015abe:	462b      	mov	r3, r5
 8015ac0:	f7ea fd72 	bl	80005a8 <__aeabi_dmul>
 8015ac4:	a338      	add	r3, pc, #224	@ (adr r3, 8015ba8 <__ieee754_acos+0x490>)
 8015ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015aca:	f7ea fbb7 	bl	800023c <__adddf3>
 8015ace:	4622      	mov	r2, r4
 8015ad0:	462b      	mov	r3, r5
 8015ad2:	f7ea fd69 	bl	80005a8 <__aeabi_dmul>
 8015ad6:	a336      	add	r3, pc, #216	@ (adr r3, 8015bb0 <__ieee754_acos+0x498>)
 8015ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015adc:	f7ea fbac 	bl	8000238 <__aeabi_dsub>
 8015ae0:	4622      	mov	r2, r4
 8015ae2:	462b      	mov	r3, r5
 8015ae4:	f7ea fd60 	bl	80005a8 <__aeabi_dmul>
 8015ae8:	4b37      	ldr	r3, [pc, #220]	@ (8015bc8 <__ieee754_acos+0x4b0>)
 8015aea:	2200      	movs	r2, #0
 8015aec:	f7ea fba6 	bl	800023c <__adddf3>
 8015af0:	4602      	mov	r2, r0
 8015af2:	460b      	mov	r3, r1
 8015af4:	4650      	mov	r0, sl
 8015af6:	4659      	mov	r1, fp
 8015af8:	f7ea fe80 	bl	80007fc <__aeabi_ddiv>
 8015afc:	4642      	mov	r2, r8
 8015afe:	464b      	mov	r3, r9
 8015b00:	f7ea fd52 	bl	80005a8 <__aeabi_dmul>
 8015b04:	2600      	movs	r6, #0
 8015b06:	4682      	mov	sl, r0
 8015b08:	468b      	mov	fp, r1
 8015b0a:	4632      	mov	r2, r6
 8015b0c:	464b      	mov	r3, r9
 8015b0e:	4630      	mov	r0, r6
 8015b10:	4649      	mov	r1, r9
 8015b12:	f7ea fd49 	bl	80005a8 <__aeabi_dmul>
 8015b16:	4602      	mov	r2, r0
 8015b18:	460b      	mov	r3, r1
 8015b1a:	4620      	mov	r0, r4
 8015b1c:	4629      	mov	r1, r5
 8015b1e:	f7ea fb8b 	bl	8000238 <__aeabi_dsub>
 8015b22:	4632      	mov	r2, r6
 8015b24:	4604      	mov	r4, r0
 8015b26:	460d      	mov	r5, r1
 8015b28:	464b      	mov	r3, r9
 8015b2a:	4640      	mov	r0, r8
 8015b2c:	4649      	mov	r1, r9
 8015b2e:	f7ea fb85 	bl	800023c <__adddf3>
 8015b32:	4602      	mov	r2, r0
 8015b34:	460b      	mov	r3, r1
 8015b36:	4620      	mov	r0, r4
 8015b38:	4629      	mov	r1, r5
 8015b3a:	f7ea fe5f 	bl	80007fc <__aeabi_ddiv>
 8015b3e:	4602      	mov	r2, r0
 8015b40:	460b      	mov	r3, r1
 8015b42:	4650      	mov	r0, sl
 8015b44:	4659      	mov	r1, fp
 8015b46:	f7ea fb79 	bl	800023c <__adddf3>
 8015b4a:	4632      	mov	r2, r6
 8015b4c:	464b      	mov	r3, r9
 8015b4e:	f7ea fb75 	bl	800023c <__adddf3>
 8015b52:	4602      	mov	r2, r0
 8015b54:	460b      	mov	r3, r1
 8015b56:	f7ea fb71 	bl	800023c <__adddf3>
 8015b5a:	e5fd      	b.n	8015758 <__ieee754_acos+0x40>
 8015b5c:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 8015bb8 <__ieee754_acos+0x4a0>
 8015b60:	e5ee      	b.n	8015740 <__ieee754_acos+0x28>
 8015b62:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8015bc0 <__ieee754_acos+0x4a8>
 8015b66:	e5eb      	b.n	8015740 <__ieee754_acos+0x28>
 8015b68:	0dfdf709 	.word	0x0dfdf709
 8015b6c:	3f023de1 	.word	0x3f023de1
 8015b70:	7501b288 	.word	0x7501b288
 8015b74:	3f49efe0 	.word	0x3f49efe0
 8015b78:	b5688f3b 	.word	0xb5688f3b
 8015b7c:	3fa48228 	.word	0x3fa48228
 8015b80:	0e884455 	.word	0x0e884455
 8015b84:	3fc9c155 	.word	0x3fc9c155
 8015b88:	03eb6f7d 	.word	0x03eb6f7d
 8015b8c:	3fd4d612 	.word	0x3fd4d612
 8015b90:	55555555 	.word	0x55555555
 8015b94:	3fc55555 	.word	0x3fc55555
 8015b98:	b12e9282 	.word	0xb12e9282
 8015b9c:	3fb3b8c5 	.word	0x3fb3b8c5
 8015ba0:	1b8d0159 	.word	0x1b8d0159
 8015ba4:	3fe6066c 	.word	0x3fe6066c
 8015ba8:	9c598ac8 	.word	0x9c598ac8
 8015bac:	40002ae5 	.word	0x40002ae5
 8015bb0:	1c8a2d4b 	.word	0x1c8a2d4b
 8015bb4:	40033a27 	.word	0x40033a27
 8015bb8:	54442d18 	.word	0x54442d18
 8015bbc:	400921fb 	.word	0x400921fb
 8015bc0:	54442d18 	.word	0x54442d18
 8015bc4:	3ff921fb 	.word	0x3ff921fb
 8015bc8:	3ff00000 	.word	0x3ff00000
 8015bcc:	3fe00000 	.word	0x3fe00000

08015bd0 <scalbn>:
 8015bd0:	b570      	push	{r4, r5, r6, lr}
 8015bd2:	ec55 4b10 	vmov	r4, r5, d0
 8015bd6:	f3c5 510a 	ubfx	r1, r5, #20, #11
 8015bda:	4606      	mov	r6, r0
 8015bdc:	462b      	mov	r3, r5
 8015bde:	b991      	cbnz	r1, 8015c06 <scalbn+0x36>
 8015be0:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8015be4:	4323      	orrs	r3, r4
 8015be6:	d03b      	beq.n	8015c60 <scalbn+0x90>
 8015be8:	4b33      	ldr	r3, [pc, #204]	@ (8015cb8 <scalbn+0xe8>)
 8015bea:	4620      	mov	r0, r4
 8015bec:	4629      	mov	r1, r5
 8015bee:	2200      	movs	r2, #0
 8015bf0:	f7ea fcda 	bl	80005a8 <__aeabi_dmul>
 8015bf4:	4b31      	ldr	r3, [pc, #196]	@ (8015cbc <scalbn+0xec>)
 8015bf6:	429e      	cmp	r6, r3
 8015bf8:	4604      	mov	r4, r0
 8015bfa:	460d      	mov	r5, r1
 8015bfc:	da0f      	bge.n	8015c1e <scalbn+0x4e>
 8015bfe:	a326      	add	r3, pc, #152	@ (adr r3, 8015c98 <scalbn+0xc8>)
 8015c00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c04:	e01e      	b.n	8015c44 <scalbn+0x74>
 8015c06:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8015c0a:	4291      	cmp	r1, r2
 8015c0c:	d10b      	bne.n	8015c26 <scalbn+0x56>
 8015c0e:	4622      	mov	r2, r4
 8015c10:	4620      	mov	r0, r4
 8015c12:	4629      	mov	r1, r5
 8015c14:	f7ea fb12 	bl	800023c <__adddf3>
 8015c18:	4604      	mov	r4, r0
 8015c1a:	460d      	mov	r5, r1
 8015c1c:	e020      	b.n	8015c60 <scalbn+0x90>
 8015c1e:	460b      	mov	r3, r1
 8015c20:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8015c24:	3936      	subs	r1, #54	@ 0x36
 8015c26:	f24c 3250 	movw	r2, #50000	@ 0xc350
 8015c2a:	4296      	cmp	r6, r2
 8015c2c:	dd0d      	ble.n	8015c4a <scalbn+0x7a>
 8015c2e:	2d00      	cmp	r5, #0
 8015c30:	a11b      	add	r1, pc, #108	@ (adr r1, 8015ca0 <scalbn+0xd0>)
 8015c32:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c36:	da02      	bge.n	8015c3e <scalbn+0x6e>
 8015c38:	a11b      	add	r1, pc, #108	@ (adr r1, 8015ca8 <scalbn+0xd8>)
 8015c3a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c3e:	a318      	add	r3, pc, #96	@ (adr r3, 8015ca0 <scalbn+0xd0>)
 8015c40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c44:	f7ea fcb0 	bl	80005a8 <__aeabi_dmul>
 8015c48:	e7e6      	b.n	8015c18 <scalbn+0x48>
 8015c4a:	1872      	adds	r2, r6, r1
 8015c4c:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8015c50:	428a      	cmp	r2, r1
 8015c52:	dcec      	bgt.n	8015c2e <scalbn+0x5e>
 8015c54:	2a00      	cmp	r2, #0
 8015c56:	dd06      	ble.n	8015c66 <scalbn+0x96>
 8015c58:	f36f 531e 	bfc	r3, #20, #11
 8015c5c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015c60:	ec45 4b10 	vmov	d0, r4, r5
 8015c64:	bd70      	pop	{r4, r5, r6, pc}
 8015c66:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8015c6a:	da08      	bge.n	8015c7e <scalbn+0xae>
 8015c6c:	2d00      	cmp	r5, #0
 8015c6e:	a10a      	add	r1, pc, #40	@ (adr r1, 8015c98 <scalbn+0xc8>)
 8015c70:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c74:	dac3      	bge.n	8015bfe <scalbn+0x2e>
 8015c76:	a10e      	add	r1, pc, #56	@ (adr r1, 8015cb0 <scalbn+0xe0>)
 8015c78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c7c:	e7bf      	b.n	8015bfe <scalbn+0x2e>
 8015c7e:	3236      	adds	r2, #54	@ 0x36
 8015c80:	f36f 531e 	bfc	r3, #20, #11
 8015c84:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015c88:	4620      	mov	r0, r4
 8015c8a:	4b0d      	ldr	r3, [pc, #52]	@ (8015cc0 <scalbn+0xf0>)
 8015c8c:	4629      	mov	r1, r5
 8015c8e:	2200      	movs	r2, #0
 8015c90:	e7d8      	b.n	8015c44 <scalbn+0x74>
 8015c92:	bf00      	nop
 8015c94:	f3af 8000 	nop.w
 8015c98:	c2f8f359 	.word	0xc2f8f359
 8015c9c:	01a56e1f 	.word	0x01a56e1f
 8015ca0:	8800759c 	.word	0x8800759c
 8015ca4:	7e37e43c 	.word	0x7e37e43c
 8015ca8:	8800759c 	.word	0x8800759c
 8015cac:	fe37e43c 	.word	0xfe37e43c
 8015cb0:	c2f8f359 	.word	0xc2f8f359
 8015cb4:	81a56e1f 	.word	0x81a56e1f
 8015cb8:	43500000 	.word	0x43500000
 8015cbc:	ffff3cb0 	.word	0xffff3cb0
 8015cc0:	3c900000 	.word	0x3c900000

08015cc4 <__ieee754_sqrt>:
 8015cc4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cc8:	4a66      	ldr	r2, [pc, #408]	@ (8015e64 <__ieee754_sqrt+0x1a0>)
 8015cca:	ec55 4b10 	vmov	r4, r5, d0
 8015cce:	43aa      	bics	r2, r5
 8015cd0:	462b      	mov	r3, r5
 8015cd2:	4621      	mov	r1, r4
 8015cd4:	d110      	bne.n	8015cf8 <__ieee754_sqrt+0x34>
 8015cd6:	4622      	mov	r2, r4
 8015cd8:	4620      	mov	r0, r4
 8015cda:	4629      	mov	r1, r5
 8015cdc:	f7ea fc64 	bl	80005a8 <__aeabi_dmul>
 8015ce0:	4602      	mov	r2, r0
 8015ce2:	460b      	mov	r3, r1
 8015ce4:	4620      	mov	r0, r4
 8015ce6:	4629      	mov	r1, r5
 8015ce8:	f7ea faa8 	bl	800023c <__adddf3>
 8015cec:	4604      	mov	r4, r0
 8015cee:	460d      	mov	r5, r1
 8015cf0:	ec45 4b10 	vmov	d0, r4, r5
 8015cf4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cf8:	2d00      	cmp	r5, #0
 8015cfa:	dc0e      	bgt.n	8015d1a <__ieee754_sqrt+0x56>
 8015cfc:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8015d00:	4322      	orrs	r2, r4
 8015d02:	d0f5      	beq.n	8015cf0 <__ieee754_sqrt+0x2c>
 8015d04:	b19d      	cbz	r5, 8015d2e <__ieee754_sqrt+0x6a>
 8015d06:	4622      	mov	r2, r4
 8015d08:	4620      	mov	r0, r4
 8015d0a:	4629      	mov	r1, r5
 8015d0c:	f7ea fa94 	bl	8000238 <__aeabi_dsub>
 8015d10:	4602      	mov	r2, r0
 8015d12:	460b      	mov	r3, r1
 8015d14:	f7ea fd72 	bl	80007fc <__aeabi_ddiv>
 8015d18:	e7e8      	b.n	8015cec <__ieee754_sqrt+0x28>
 8015d1a:	152a      	asrs	r2, r5, #20
 8015d1c:	d115      	bne.n	8015d4a <__ieee754_sqrt+0x86>
 8015d1e:	2000      	movs	r0, #0
 8015d20:	e009      	b.n	8015d36 <__ieee754_sqrt+0x72>
 8015d22:	0acb      	lsrs	r3, r1, #11
 8015d24:	3a15      	subs	r2, #21
 8015d26:	0549      	lsls	r1, r1, #21
 8015d28:	2b00      	cmp	r3, #0
 8015d2a:	d0fa      	beq.n	8015d22 <__ieee754_sqrt+0x5e>
 8015d2c:	e7f7      	b.n	8015d1e <__ieee754_sqrt+0x5a>
 8015d2e:	462a      	mov	r2, r5
 8015d30:	e7fa      	b.n	8015d28 <__ieee754_sqrt+0x64>
 8015d32:	005b      	lsls	r3, r3, #1
 8015d34:	3001      	adds	r0, #1
 8015d36:	02dc      	lsls	r4, r3, #11
 8015d38:	d5fb      	bpl.n	8015d32 <__ieee754_sqrt+0x6e>
 8015d3a:	1e44      	subs	r4, r0, #1
 8015d3c:	1b12      	subs	r2, r2, r4
 8015d3e:	f1c0 0420 	rsb	r4, r0, #32
 8015d42:	fa21 f404 	lsr.w	r4, r1, r4
 8015d46:	4323      	orrs	r3, r4
 8015d48:	4081      	lsls	r1, r0
 8015d4a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8015d4e:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8015d52:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8015d56:	07d2      	lsls	r2, r2, #31
 8015d58:	bf5c      	itt	pl
 8015d5a:	005b      	lslpl	r3, r3, #1
 8015d5c:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8015d60:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8015d64:	bf58      	it	pl
 8015d66:	0049      	lslpl	r1, r1, #1
 8015d68:	2600      	movs	r6, #0
 8015d6a:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8015d6e:	107f      	asrs	r7, r7, #1
 8015d70:	0049      	lsls	r1, r1, #1
 8015d72:	2016      	movs	r0, #22
 8015d74:	4632      	mov	r2, r6
 8015d76:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8015d7a:	1915      	adds	r5, r2, r4
 8015d7c:	429d      	cmp	r5, r3
 8015d7e:	bfde      	ittt	le
 8015d80:	192a      	addle	r2, r5, r4
 8015d82:	1b5b      	suble	r3, r3, r5
 8015d84:	1936      	addle	r6, r6, r4
 8015d86:	0fcd      	lsrs	r5, r1, #31
 8015d88:	3801      	subs	r0, #1
 8015d8a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015d8e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8015d92:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8015d96:	d1f0      	bne.n	8015d7a <__ieee754_sqrt+0xb6>
 8015d98:	4605      	mov	r5, r0
 8015d9a:	2420      	movs	r4, #32
 8015d9c:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8015da0:	4293      	cmp	r3, r2
 8015da2:	eb0c 0e00 	add.w	lr, ip, r0
 8015da6:	dc02      	bgt.n	8015dae <__ieee754_sqrt+0xea>
 8015da8:	d113      	bne.n	8015dd2 <__ieee754_sqrt+0x10e>
 8015daa:	458e      	cmp	lr, r1
 8015dac:	d811      	bhi.n	8015dd2 <__ieee754_sqrt+0x10e>
 8015dae:	f1be 0f00 	cmp.w	lr, #0
 8015db2:	eb0e 000c 	add.w	r0, lr, ip
 8015db6:	da3f      	bge.n	8015e38 <__ieee754_sqrt+0x174>
 8015db8:	2800      	cmp	r0, #0
 8015dba:	db3d      	blt.n	8015e38 <__ieee754_sqrt+0x174>
 8015dbc:	f102 0801 	add.w	r8, r2, #1
 8015dc0:	1a9b      	subs	r3, r3, r2
 8015dc2:	458e      	cmp	lr, r1
 8015dc4:	bf88      	it	hi
 8015dc6:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8015dca:	eba1 010e 	sub.w	r1, r1, lr
 8015dce:	4465      	add	r5, ip
 8015dd0:	4642      	mov	r2, r8
 8015dd2:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8015dd6:	3c01      	subs	r4, #1
 8015dd8:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8015ddc:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8015de0:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8015de4:	d1dc      	bne.n	8015da0 <__ieee754_sqrt+0xdc>
 8015de6:	4319      	orrs	r1, r3
 8015de8:	d01b      	beq.n	8015e22 <__ieee754_sqrt+0x15e>
 8015dea:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8015e68 <__ieee754_sqrt+0x1a4>
 8015dee:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 8015e6c <__ieee754_sqrt+0x1a8>
 8015df2:	e9da 0100 	ldrd	r0, r1, [sl]
 8015df6:	e9db 2300 	ldrd	r2, r3, [fp]
 8015dfa:	f7ea fa1d 	bl	8000238 <__aeabi_dsub>
 8015dfe:	e9da 8900 	ldrd	r8, r9, [sl]
 8015e02:	4602      	mov	r2, r0
 8015e04:	460b      	mov	r3, r1
 8015e06:	4640      	mov	r0, r8
 8015e08:	4649      	mov	r1, r9
 8015e0a:	f7ea fe49 	bl	8000aa0 <__aeabi_dcmple>
 8015e0e:	b140      	cbz	r0, 8015e22 <__ieee754_sqrt+0x15e>
 8015e10:	f1b5 3fff 	cmp.w	r5, #4294967295
 8015e14:	e9da 0100 	ldrd	r0, r1, [sl]
 8015e18:	e9db 2300 	ldrd	r2, r3, [fp]
 8015e1c:	d10e      	bne.n	8015e3c <__ieee754_sqrt+0x178>
 8015e1e:	3601      	adds	r6, #1
 8015e20:	4625      	mov	r5, r4
 8015e22:	1073      	asrs	r3, r6, #1
 8015e24:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8015e28:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 8015e2c:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8015e30:	086b      	lsrs	r3, r5, #1
 8015e32:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 8015e36:	e759      	b.n	8015cec <__ieee754_sqrt+0x28>
 8015e38:	4690      	mov	r8, r2
 8015e3a:	e7c1      	b.n	8015dc0 <__ieee754_sqrt+0xfc>
 8015e3c:	f7ea f9fe 	bl	800023c <__adddf3>
 8015e40:	e9da 8900 	ldrd	r8, r9, [sl]
 8015e44:	4602      	mov	r2, r0
 8015e46:	460b      	mov	r3, r1
 8015e48:	4640      	mov	r0, r8
 8015e4a:	4649      	mov	r1, r9
 8015e4c:	f7ea fe1e 	bl	8000a8c <__aeabi_dcmplt>
 8015e50:	b120      	cbz	r0, 8015e5c <__ieee754_sqrt+0x198>
 8015e52:	1cab      	adds	r3, r5, #2
 8015e54:	bf08      	it	eq
 8015e56:	3601      	addeq	r6, #1
 8015e58:	3502      	adds	r5, #2
 8015e5a:	e7e2      	b.n	8015e22 <__ieee754_sqrt+0x15e>
 8015e5c:	1c6b      	adds	r3, r5, #1
 8015e5e:	f023 0501 	bic.w	r5, r3, #1
 8015e62:	e7de      	b.n	8015e22 <__ieee754_sqrt+0x15e>
 8015e64:	7ff00000 	.word	0x7ff00000
 8015e68:	08018a08 	.word	0x08018a08
 8015e6c:	08018a00 	.word	0x08018a00

08015e70 <_init>:
 8015e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e72:	bf00      	nop
 8015e74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015e76:	bc08      	pop	{r3}
 8015e78:	469e      	mov	lr, r3
 8015e7a:	4770      	bx	lr

08015e7c <_fini>:
 8015e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e7e:	bf00      	nop
 8015e80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015e82:	bc08      	pop	{r3}
 8015e84:	469e      	mov	lr, r3
 8015e86:	4770      	bx	lr
