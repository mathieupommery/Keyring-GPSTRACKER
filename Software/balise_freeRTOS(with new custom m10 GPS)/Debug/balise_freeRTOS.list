
balise_freeRTOS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015d68  08000140  08000140  00001140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002b88  08015ea8  08015ea8  00016ea8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08018a30  08018a30  00019a30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08018a38  08018a38  00019a38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08018a3c  08018a3c  00019a3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000002f4  20000008  08018a40  0001a008  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00005894  20000300  08018d34  0001a300  2**3
                  ALLOC
  8 ._user_heap_stack 00000604  20005b94  08018d34  0001ab94  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  0001a2fc  2**0
                  CONTENTS, READONLY
 10 .debug_info   0006453b  00000000  00000000  0001a32c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000b645  00000000  00000000  0007e867  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_loclists 0002ed8d  00000000  00000000  00089eac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_aranges 00002998  00000000  00000000  000b8c40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 00005cf2  00000000  00000000  000bb5d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  0003105a  00000000  00000000  000c12ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00060b92  00000000  00000000  000f2324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0010d980  00000000  00000000  00152eb6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  00260836  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00009538  00000000  00000000  0026087c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 0000006b  00000000  00000000  00269db4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	@ (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	@ (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	@ (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000300 	.word	0x20000300
 800015c:	00000000 	.word	0x00000000
 8000160:	08015e90 	.word	0x08015e90

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	@ (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	@ (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	@ (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000304 	.word	0x20000304
 800017c:	08015e90 	.word	0x08015e90

08000180 <memchr>:
 8000180:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000184:	2a10      	cmp	r2, #16
 8000186:	db2b      	blt.n	80001e0 <memchr+0x60>
 8000188:	f010 0f07 	tst.w	r0, #7
 800018c:	d008      	beq.n	80001a0 <memchr+0x20>
 800018e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000192:	3a01      	subs	r2, #1
 8000194:	428b      	cmp	r3, r1
 8000196:	d02d      	beq.n	80001f4 <memchr+0x74>
 8000198:	f010 0f07 	tst.w	r0, #7
 800019c:	b342      	cbz	r2, 80001f0 <memchr+0x70>
 800019e:	d1f6      	bne.n	800018e <memchr+0xe>
 80001a0:	b4f0      	push	{r4, r5, r6, r7}
 80001a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001aa:	f022 0407 	bic.w	r4, r2, #7
 80001ae:	f07f 0700 	mvns.w	r7, #0
 80001b2:	2300      	movs	r3, #0
 80001b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001b8:	3c08      	subs	r4, #8
 80001ba:	ea85 0501 	eor.w	r5, r5, r1
 80001be:	ea86 0601 	eor.w	r6, r6, r1
 80001c2:	fa85 f547 	uadd8	r5, r5, r7
 80001c6:	faa3 f587 	sel	r5, r3, r7
 80001ca:	fa86 f647 	uadd8	r6, r6, r7
 80001ce:	faa5 f687 	sel	r6, r5, r7
 80001d2:	b98e      	cbnz	r6, 80001f8 <memchr+0x78>
 80001d4:	d1ee      	bne.n	80001b4 <memchr+0x34>
 80001d6:	bcf0      	pop	{r4, r5, r6, r7}
 80001d8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001dc:	f002 0207 	and.w	r2, r2, #7
 80001e0:	b132      	cbz	r2, 80001f0 <memchr+0x70>
 80001e2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e6:	3a01      	subs	r2, #1
 80001e8:	ea83 0301 	eor.w	r3, r3, r1
 80001ec:	b113      	cbz	r3, 80001f4 <memchr+0x74>
 80001ee:	d1f8      	bne.n	80001e2 <memchr+0x62>
 80001f0:	2000      	movs	r0, #0
 80001f2:	4770      	bx	lr
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr
 80001f8:	2d00      	cmp	r5, #0
 80001fa:	bf06      	itte	eq
 80001fc:	4635      	moveq	r5, r6
 80001fe:	3803      	subeq	r0, #3
 8000200:	3807      	subne	r0, #7
 8000202:	f015 0f01 	tst.w	r5, #1
 8000206:	d107      	bne.n	8000218 <memchr+0x98>
 8000208:	3001      	adds	r0, #1
 800020a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800020e:	bf02      	ittt	eq
 8000210:	3001      	addeq	r0, #1
 8000212:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000216:	3001      	addeq	r0, #1
 8000218:	bcf0      	pop	{r4, r5, r6, r7}
 800021a:	3801      	subs	r0, #1
 800021c:	4770      	bx	lr
 800021e:	bf00      	nop

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <__aeabi_drsub>:
 8000230:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000234:	e002      	b.n	800023c <__adddf3>
 8000236:	bf00      	nop

08000238 <__aeabi_dsub>:
 8000238:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800023c <__adddf3>:
 800023c:	b530      	push	{r4, r5, lr}
 800023e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000242:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000246:	ea94 0f05 	teq	r4, r5
 800024a:	bf08      	it	eq
 800024c:	ea90 0f02 	teqeq	r0, r2
 8000250:	bf1f      	itttt	ne
 8000252:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000256:	ea55 0c02 	orrsne.w	ip, r5, r2
 800025a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800025e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000262:	f000 80e2 	beq.w	800042a <__adddf3+0x1ee>
 8000266:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800026a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800026e:	bfb8      	it	lt
 8000270:	426d      	neglt	r5, r5
 8000272:	dd0c      	ble.n	800028e <__adddf3+0x52>
 8000274:	442c      	add	r4, r5
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	ea82 0000 	eor.w	r0, r2, r0
 8000282:	ea83 0101 	eor.w	r1, r3, r1
 8000286:	ea80 0202 	eor.w	r2, r0, r2
 800028a:	ea81 0303 	eor.w	r3, r1, r3
 800028e:	2d36      	cmp	r5, #54	@ 0x36
 8000290:	bf88      	it	hi
 8000292:	bd30      	pophi	{r4, r5, pc}
 8000294:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000298:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800029c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002a0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002a4:	d002      	beq.n	80002ac <__adddf3+0x70>
 80002a6:	4240      	negs	r0, r0
 80002a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002ac:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002b4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b8:	d002      	beq.n	80002c0 <__adddf3+0x84>
 80002ba:	4252      	negs	r2, r2
 80002bc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c0:	ea94 0f05 	teq	r4, r5
 80002c4:	f000 80a7 	beq.w	8000416 <__adddf3+0x1da>
 80002c8:	f1a4 0401 	sub.w	r4, r4, #1
 80002cc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d0:	db0d      	blt.n	80002ee <__adddf3+0xb2>
 80002d2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002d6:	fa22 f205 	lsr.w	r2, r2, r5
 80002da:	1880      	adds	r0, r0, r2
 80002dc:	f141 0100 	adc.w	r1, r1, #0
 80002e0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002e4:	1880      	adds	r0, r0, r2
 80002e6:	fa43 f305 	asr.w	r3, r3, r5
 80002ea:	4159      	adcs	r1, r3
 80002ec:	e00e      	b.n	800030c <__adddf3+0xd0>
 80002ee:	f1a5 0520 	sub.w	r5, r5, #32
 80002f2:	f10e 0e20 	add.w	lr, lr, #32
 80002f6:	2a01      	cmp	r2, #1
 80002f8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002fc:	bf28      	it	cs
 80002fe:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000302:	fa43 f305 	asr.w	r3, r3, r5
 8000306:	18c0      	adds	r0, r0, r3
 8000308:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800030c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000310:	d507      	bpl.n	8000322 <__adddf3+0xe6>
 8000312:	f04f 0e00 	mov.w	lr, #0
 8000316:	f1dc 0c00 	rsbs	ip, ip, #0
 800031a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800031e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000322:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000326:	d31b      	bcc.n	8000360 <__adddf3+0x124>
 8000328:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800032c:	d30c      	bcc.n	8000348 <__adddf3+0x10c>
 800032e:	0849      	lsrs	r1, r1, #1
 8000330:	ea5f 0030 	movs.w	r0, r0, rrx
 8000334:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000338:	f104 0401 	add.w	r4, r4, #1
 800033c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000340:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000344:	f080 809a 	bcs.w	800047c <__adddf3+0x240>
 8000348:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800034c:	bf08      	it	eq
 800034e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000352:	f150 0000 	adcs.w	r0, r0, #0
 8000356:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800035a:	ea41 0105 	orr.w	r1, r1, r5
 800035e:	bd30      	pop	{r4, r5, pc}
 8000360:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000364:	4140      	adcs	r0, r0
 8000366:	eb41 0101 	adc.w	r1, r1, r1
 800036a:	3c01      	subs	r4, #1
 800036c:	bf28      	it	cs
 800036e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000372:	d2e9      	bcs.n	8000348 <__adddf3+0x10c>
 8000374:	f091 0f00 	teq	r1, #0
 8000378:	bf04      	itt	eq
 800037a:	4601      	moveq	r1, r0
 800037c:	2000      	moveq	r0, #0
 800037e:	fab1 f381 	clz	r3, r1
 8000382:	bf08      	it	eq
 8000384:	3320      	addeq	r3, #32
 8000386:	f1a3 030b 	sub.w	r3, r3, #11
 800038a:	f1b3 0220 	subs.w	r2, r3, #32
 800038e:	da0c      	bge.n	80003aa <__adddf3+0x16e>
 8000390:	320c      	adds	r2, #12
 8000392:	dd08      	ble.n	80003a6 <__adddf3+0x16a>
 8000394:	f102 0c14 	add.w	ip, r2, #20
 8000398:	f1c2 020c 	rsb	r2, r2, #12
 800039c:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a0:	fa21 f102 	lsr.w	r1, r1, r2
 80003a4:	e00c      	b.n	80003c0 <__adddf3+0x184>
 80003a6:	f102 0214 	add.w	r2, r2, #20
 80003aa:	bfd8      	it	le
 80003ac:	f1c2 0c20 	rsble	ip, r2, #32
 80003b0:	fa01 f102 	lsl.w	r1, r1, r2
 80003b4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b8:	bfdc      	itt	le
 80003ba:	ea41 010c 	orrle.w	r1, r1, ip
 80003be:	4090      	lslle	r0, r2
 80003c0:	1ae4      	subs	r4, r4, r3
 80003c2:	bfa2      	ittt	ge
 80003c4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c8:	4329      	orrge	r1, r5
 80003ca:	bd30      	popge	{r4, r5, pc}
 80003cc:	ea6f 0404 	mvn.w	r4, r4
 80003d0:	3c1f      	subs	r4, #31
 80003d2:	da1c      	bge.n	800040e <__adddf3+0x1d2>
 80003d4:	340c      	adds	r4, #12
 80003d6:	dc0e      	bgt.n	80003f6 <__adddf3+0x1ba>
 80003d8:	f104 0414 	add.w	r4, r4, #20
 80003dc:	f1c4 0220 	rsb	r2, r4, #32
 80003e0:	fa20 f004 	lsr.w	r0, r0, r4
 80003e4:	fa01 f302 	lsl.w	r3, r1, r2
 80003e8:	ea40 0003 	orr.w	r0, r0, r3
 80003ec:	fa21 f304 	lsr.w	r3, r1, r4
 80003f0:	ea45 0103 	orr.w	r1, r5, r3
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	f1c4 040c 	rsb	r4, r4, #12
 80003fa:	f1c4 0220 	rsb	r2, r4, #32
 80003fe:	fa20 f002 	lsr.w	r0, r0, r2
 8000402:	fa01 f304 	lsl.w	r3, r1, r4
 8000406:	ea40 0003 	orr.w	r0, r0, r3
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	fa21 f004 	lsr.w	r0, r1, r4
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	f094 0f00 	teq	r4, #0
 800041a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800041e:	bf06      	itte	eq
 8000420:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000424:	3401      	addeq	r4, #1
 8000426:	3d01      	subne	r5, #1
 8000428:	e74e      	b.n	80002c8 <__adddf3+0x8c>
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf18      	it	ne
 8000430:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000434:	d029      	beq.n	800048a <__adddf3+0x24e>
 8000436:	ea94 0f05 	teq	r4, r5
 800043a:	bf08      	it	eq
 800043c:	ea90 0f02 	teqeq	r0, r2
 8000440:	d005      	beq.n	800044e <__adddf3+0x212>
 8000442:	ea54 0c00 	orrs.w	ip, r4, r0
 8000446:	bf04      	itt	eq
 8000448:	4619      	moveq	r1, r3
 800044a:	4610      	moveq	r0, r2
 800044c:	bd30      	pop	{r4, r5, pc}
 800044e:	ea91 0f03 	teq	r1, r3
 8000452:	bf1e      	ittt	ne
 8000454:	2100      	movne	r1, #0
 8000456:	2000      	movne	r0, #0
 8000458:	bd30      	popne	{r4, r5, pc}
 800045a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800045e:	d105      	bne.n	800046c <__adddf3+0x230>
 8000460:	0040      	lsls	r0, r0, #1
 8000462:	4149      	adcs	r1, r1
 8000464:	bf28      	it	cs
 8000466:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800046a:	bd30      	pop	{r4, r5, pc}
 800046c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000470:	bf3c      	itt	cc
 8000472:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000476:	bd30      	popcc	{r4, r5, pc}
 8000478:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800047c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000480:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000484:	f04f 0000 	mov.w	r0, #0
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf1a      	itte	ne
 8000490:	4619      	movne	r1, r3
 8000492:	4610      	movne	r0, r2
 8000494:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000498:	bf1c      	itt	ne
 800049a:	460b      	movne	r3, r1
 800049c:	4602      	movne	r2, r0
 800049e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004a2:	bf06      	itte	eq
 80004a4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a8:	ea91 0f03 	teqeq	r1, r3
 80004ac:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	bf00      	nop

080004b4 <__aeabi_ui2d>:
 80004b4:	f090 0f00 	teq	r0, #0
 80004b8:	bf04      	itt	eq
 80004ba:	2100      	moveq	r1, #0
 80004bc:	4770      	bxeq	lr
 80004be:	b530      	push	{r4, r5, lr}
 80004c0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004c4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c8:	f04f 0500 	mov.w	r5, #0
 80004cc:	f04f 0100 	mov.w	r1, #0
 80004d0:	e750      	b.n	8000374 <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_i2d>:
 80004d4:	f090 0f00 	teq	r0, #0
 80004d8:	bf04      	itt	eq
 80004da:	2100      	moveq	r1, #0
 80004dc:	4770      	bxeq	lr
 80004de:	b530      	push	{r4, r5, lr}
 80004e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004e4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004e8:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004ec:	bf48      	it	mi
 80004ee:	4240      	negmi	r0, r0
 80004f0:	f04f 0100 	mov.w	r1, #0
 80004f4:	e73e      	b.n	8000374 <__adddf3+0x138>
 80004f6:	bf00      	nop

080004f8 <__aeabi_f2d>:
 80004f8:	0042      	lsls	r2, r0, #1
 80004fa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004fe:	ea4f 0131 	mov.w	r1, r1, rrx
 8000502:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000506:	bf1f      	itttt	ne
 8000508:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800050c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000510:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000514:	4770      	bxne	lr
 8000516:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800051a:	bf08      	it	eq
 800051c:	4770      	bxeq	lr
 800051e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000522:	bf04      	itt	eq
 8000524:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000528:	4770      	bxeq	lr
 800052a:	b530      	push	{r4, r5, lr}
 800052c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000534:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000538:	e71c      	b.n	8000374 <__adddf3+0x138>
 800053a:	bf00      	nop

0800053c <__aeabi_ul2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f04f 0500 	mov.w	r5, #0
 800054a:	e00a      	b.n	8000562 <__aeabi_l2d+0x16>

0800054c <__aeabi_l2d>:
 800054c:	ea50 0201 	orrs.w	r2, r0, r1
 8000550:	bf08      	it	eq
 8000552:	4770      	bxeq	lr
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800055a:	d502      	bpl.n	8000562 <__aeabi_l2d+0x16>
 800055c:	4240      	negs	r0, r0
 800055e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000562:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000566:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800056a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800056e:	f43f aed8 	beq.w	8000322 <__adddf3+0xe6>
 8000572:	f04f 0203 	mov.w	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058a:	f1c2 0320 	rsb	r3, r2, #32
 800058e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000592:	fa20 f002 	lsr.w	r0, r0, r2
 8000596:	fa01 fe03 	lsl.w	lr, r1, r3
 800059a:	ea40 000e 	orr.w	r0, r0, lr
 800059e:	fa21 f102 	lsr.w	r1, r1, r2
 80005a2:	4414      	add	r4, r2
 80005a4:	e6bd      	b.n	8000322 <__adddf3+0xe6>
 80005a6:	bf00      	nop

080005a8 <__aeabi_dmul>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005ae:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005b6:	bf1d      	ittte	ne
 80005b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005bc:	ea94 0f0c 	teqne	r4, ip
 80005c0:	ea95 0f0c 	teqne	r5, ip
 80005c4:	f000 f8de 	bleq	8000784 <__aeabi_dmul+0x1dc>
 80005c8:	442c      	add	r4, r5
 80005ca:	ea81 0603 	eor.w	r6, r1, r3
 80005ce:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005d6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005da:	bf18      	it	ne
 80005dc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005e4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005e8:	d038      	beq.n	800065c <__aeabi_dmul+0xb4>
 80005ea:	fba0 ce02 	umull	ip, lr, r0, r2
 80005ee:	f04f 0500 	mov.w	r5, #0
 80005f2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005f6:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005fa:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005fe:	f04f 0600 	mov.w	r6, #0
 8000602:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000606:	f09c 0f00 	teq	ip, #0
 800060a:	bf18      	it	ne
 800060c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000610:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000614:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000618:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800061c:	d204      	bcs.n	8000628 <__aeabi_dmul+0x80>
 800061e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000622:	416d      	adcs	r5, r5
 8000624:	eb46 0606 	adc.w	r6, r6, r6
 8000628:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800062c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000630:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000634:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000638:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800063c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000640:	bf88      	it	hi
 8000642:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000646:	d81e      	bhi.n	8000686 <__aeabi_dmul+0xde>
 8000648:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800064c:	bf08      	it	eq
 800064e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000652:	f150 0000 	adcs.w	r0, r0, #0
 8000656:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000660:	ea46 0101 	orr.w	r1, r6, r1
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	ea81 0103 	eor.w	r1, r1, r3
 800066c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000670:	bfc2      	ittt	gt
 8000672:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000676:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067a:	bd70      	popgt	{r4, r5, r6, pc}
 800067c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000680:	f04f 0e00 	mov.w	lr, #0
 8000684:	3c01      	subs	r4, #1
 8000686:	f300 80ab 	bgt.w	80007e0 <__aeabi_dmul+0x238>
 800068a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800068e:	bfde      	ittt	le
 8000690:	2000      	movle	r0, #0
 8000692:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000696:	bd70      	pople	{r4, r5, r6, pc}
 8000698:	f1c4 0400 	rsb	r4, r4, #0
 800069c:	3c20      	subs	r4, #32
 800069e:	da35      	bge.n	800070c <__aeabi_dmul+0x164>
 80006a0:	340c      	adds	r4, #12
 80006a2:	dc1b      	bgt.n	80006dc <__aeabi_dmul+0x134>
 80006a4:	f104 0414 	add.w	r4, r4, #20
 80006a8:	f1c4 0520 	rsb	r5, r4, #32
 80006ac:	fa00 f305 	lsl.w	r3, r0, r5
 80006b0:	fa20 f004 	lsr.w	r0, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea40 0002 	orr.w	r0, r0, r2
 80006bc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006c0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c8:	fa21 f604 	lsr.w	r6, r1, r4
 80006cc:	eb42 0106 	adc.w	r1, r2, r6
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f1c4 040c 	rsb	r4, r4, #12
 80006e0:	f1c4 0520 	rsb	r5, r4, #32
 80006e4:	fa00 f304 	lsl.w	r3, r0, r4
 80006e8:	fa20 f005 	lsr.w	r0, r0, r5
 80006ec:	fa01 f204 	lsl.w	r2, r1, r4
 80006f0:	ea40 0002 	orr.w	r0, r0, r2
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006fc:	f141 0100 	adc.w	r1, r1, #0
 8000700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000704:	bf08      	it	eq
 8000706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070a:	bd70      	pop	{r4, r5, r6, pc}
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f205 	lsl.w	r2, r0, r5
 8000714:	ea4e 0e02 	orr.w	lr, lr, r2
 8000718:	fa20 f304 	lsr.w	r3, r0, r4
 800071c:	fa01 f205 	lsl.w	r2, r1, r5
 8000720:	ea43 0302 	orr.w	r3, r3, r2
 8000724:	fa21 f004 	lsr.w	r0, r1, r4
 8000728:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800072c:	fa21 f204 	lsr.w	r2, r1, r4
 8000730:	ea20 0002 	bic.w	r0, r0, r2
 8000734:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000738:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800073c:	bf08      	it	eq
 800073e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	f094 0f00 	teq	r4, #0
 8000748:	d10f      	bne.n	800076a <__aeabi_dmul+0x1c2>
 800074a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800074e:	0040      	lsls	r0, r0, #1
 8000750:	eb41 0101 	adc.w	r1, r1, r1
 8000754:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000758:	bf08      	it	eq
 800075a:	3c01      	subeq	r4, #1
 800075c:	d0f7      	beq.n	800074e <__aeabi_dmul+0x1a6>
 800075e:	ea41 0106 	orr.w	r1, r1, r6
 8000762:	f095 0f00 	teq	r5, #0
 8000766:	bf18      	it	ne
 8000768:	4770      	bxne	lr
 800076a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800076e:	0052      	lsls	r2, r2, #1
 8000770:	eb43 0303 	adc.w	r3, r3, r3
 8000774:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000778:	bf08      	it	eq
 800077a:	3d01      	subeq	r5, #1
 800077c:	d0f7      	beq.n	800076e <__aeabi_dmul+0x1c6>
 800077e:	ea43 0306 	orr.w	r3, r3, r6
 8000782:	4770      	bx	lr
 8000784:	ea94 0f0c 	teq	r4, ip
 8000788:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800078c:	bf18      	it	ne
 800078e:	ea95 0f0c 	teqne	r5, ip
 8000792:	d00c      	beq.n	80007ae <__aeabi_dmul+0x206>
 8000794:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000798:	bf18      	it	ne
 800079a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800079e:	d1d1      	bne.n	8000744 <__aeabi_dmul+0x19c>
 80007a0:	ea81 0103 	eor.w	r1, r1, r3
 80007a4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007a8:	f04f 0000 	mov.w	r0, #0
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b2:	bf06      	itte	eq
 80007b4:	4610      	moveq	r0, r2
 80007b6:	4619      	moveq	r1, r3
 80007b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007bc:	d019      	beq.n	80007f2 <__aeabi_dmul+0x24a>
 80007be:	ea94 0f0c 	teq	r4, ip
 80007c2:	d102      	bne.n	80007ca <__aeabi_dmul+0x222>
 80007c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c8:	d113      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007ca:	ea95 0f0c 	teq	r5, ip
 80007ce:	d105      	bne.n	80007dc <__aeabi_dmul+0x234>
 80007d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d4:	bf1c      	itt	ne
 80007d6:	4610      	movne	r0, r2
 80007d8:	4619      	movne	r1, r3
 80007da:	d10a      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007dc:	ea81 0103 	eor.w	r1, r1, r3
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007e4:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007e8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007ec:	f04f 0000 	mov.w	r0, #0
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007f6:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007fa:	bd70      	pop	{r4, r5, r6, pc}

080007fc <__aeabi_ddiv>:
 80007fc:	b570      	push	{r4, r5, r6, lr}
 80007fe:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000802:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000806:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080a:	bf1d      	ittte	ne
 800080c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000810:	ea94 0f0c 	teqne	r4, ip
 8000814:	ea95 0f0c 	teqne	r5, ip
 8000818:	f000 f8a7 	bleq	800096a <__aeabi_ddiv+0x16e>
 800081c:	eba4 0405 	sub.w	r4, r4, r5
 8000820:	ea81 0e03 	eor.w	lr, r1, r3
 8000824:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000828:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800082c:	f000 8088 	beq.w	8000940 <__aeabi_ddiv+0x144>
 8000830:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000834:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000838:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800083c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000840:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000844:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000848:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800084c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000850:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000854:	429d      	cmp	r5, r3
 8000856:	bf08      	it	eq
 8000858:	4296      	cmpeq	r6, r2
 800085a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800085e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000862:	d202      	bcs.n	800086a <__aeabi_ddiv+0x6e>
 8000864:	085b      	lsrs	r3, r3, #1
 8000866:	ea4f 0232 	mov.w	r2, r2, rrx
 800086a:	1ab6      	subs	r6, r6, r2
 800086c:	eb65 0503 	sbc.w	r5, r5, r3
 8000870:	085b      	lsrs	r3, r3, #1
 8000872:	ea4f 0232 	mov.w	r2, r2, rrx
 8000876:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800087a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008dc:	d018      	beq.n	8000910 <__aeabi_ddiv+0x114>
 80008de:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fa:	d1c0      	bne.n	800087e <__aeabi_ddiv+0x82>
 80008fc:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000900:	d10b      	bne.n	800091a <__aeabi_ddiv+0x11e>
 8000902:	ea41 0100 	orr.w	r1, r1, r0
 8000906:	f04f 0000 	mov.w	r0, #0
 800090a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800090e:	e7b6      	b.n	800087e <__aeabi_ddiv+0x82>
 8000910:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000914:	bf04      	itt	eq
 8000916:	4301      	orreq	r1, r0
 8000918:	2000      	moveq	r0, #0
 800091a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800091e:	bf88      	it	hi
 8000920:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000924:	f63f aeaf 	bhi.w	8000686 <__aeabi_dmul+0xde>
 8000928:	ebb5 0c03 	subs.w	ip, r5, r3
 800092c:	bf04      	itt	eq
 800092e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000936:	f150 0000 	adcs.w	r0, r0, #0
 800093a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000944:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000948:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800094c:	bfc2      	ittt	gt
 800094e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000952:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000956:	bd70      	popgt	{r4, r5, r6, pc}
 8000958:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800095c:	f04f 0e00 	mov.w	lr, #0
 8000960:	3c01      	subs	r4, #1
 8000962:	e690      	b.n	8000686 <__aeabi_dmul+0xde>
 8000964:	ea45 0e06 	orr.w	lr, r5, r6
 8000968:	e68d      	b.n	8000686 <__aeabi_dmul+0xde>
 800096a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800096e:	ea94 0f0c 	teq	r4, ip
 8000972:	bf08      	it	eq
 8000974:	ea95 0f0c 	teqeq	r5, ip
 8000978:	f43f af3b 	beq.w	80007f2 <__aeabi_dmul+0x24a>
 800097c:	ea94 0f0c 	teq	r4, ip
 8000980:	d10a      	bne.n	8000998 <__aeabi_ddiv+0x19c>
 8000982:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000986:	f47f af34 	bne.w	80007f2 <__aeabi_dmul+0x24a>
 800098a:	ea95 0f0c 	teq	r5, ip
 800098e:	f47f af25 	bne.w	80007dc <__aeabi_dmul+0x234>
 8000992:	4610      	mov	r0, r2
 8000994:	4619      	mov	r1, r3
 8000996:	e72c      	b.n	80007f2 <__aeabi_dmul+0x24a>
 8000998:	ea95 0f0c 	teq	r5, ip
 800099c:	d106      	bne.n	80009ac <__aeabi_ddiv+0x1b0>
 800099e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a2:	f43f aefd 	beq.w	80007a0 <__aeabi_dmul+0x1f8>
 80009a6:	4610      	mov	r0, r2
 80009a8:	4619      	mov	r1, r3
 80009aa:	e722      	b.n	80007f2 <__aeabi_dmul+0x24a>
 80009ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b0:	bf18      	it	ne
 80009b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009b6:	f47f aec5 	bne.w	8000744 <__aeabi_dmul+0x19c>
 80009ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009be:	f47f af0d 	bne.w	80007dc <__aeabi_dmul+0x234>
 80009c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009c6:	f47f aeeb 	bne.w	80007a0 <__aeabi_dmul+0x1f8>
 80009ca:	e712      	b.n	80007f2 <__aeabi_dmul+0x24a>

080009cc <__gedf2>:
 80009cc:	f04f 3cff 	mov.w	ip, #4294967295
 80009d0:	e006      	b.n	80009e0 <__cmpdf2+0x4>
 80009d2:	bf00      	nop

080009d4 <__ledf2>:
 80009d4:	f04f 0c01 	mov.w	ip, #1
 80009d8:	e002      	b.n	80009e0 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__cmpdf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f0:	bf18      	it	ne
 80009f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009f6:	d01b      	beq.n	8000a30 <__cmpdf2+0x54>
 80009f8:	b001      	add	sp, #4
 80009fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009fe:	bf0c      	ite	eq
 8000a00:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a04:	ea91 0f03 	teqne	r1, r3
 8000a08:	bf02      	ittt	eq
 8000a0a:	ea90 0f02 	teqeq	r0, r2
 8000a0e:	2000      	moveq	r0, #0
 8000a10:	4770      	bxeq	lr
 8000a12:	f110 0f00 	cmn.w	r0, #0
 8000a16:	ea91 0f03 	teq	r1, r3
 8000a1a:	bf58      	it	pl
 8000a1c:	4299      	cmppl	r1, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4290      	cmpeq	r0, r2
 8000a22:	bf2c      	ite	cs
 8000a24:	17d8      	asrcs	r0, r3, #31
 8000a26:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a2a:	f040 0001 	orr.w	r0, r0, #1
 8000a2e:	4770      	bx	lr
 8000a30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d102      	bne.n	8000a40 <__cmpdf2+0x64>
 8000a3a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3e:	d107      	bne.n	8000a50 <__cmpdf2+0x74>
 8000a40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a48:	d1d6      	bne.n	80009f8 <__cmpdf2+0x1c>
 8000a4a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4e:	d0d3      	beq.n	80009f8 <__cmpdf2+0x1c>
 8000a50:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a54:	4770      	bx	lr
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdrcmple>:
 8000a58:	4684      	mov	ip, r0
 8000a5a:	4610      	mov	r0, r2
 8000a5c:	4662      	mov	r2, ip
 8000a5e:	468c      	mov	ip, r1
 8000a60:	4619      	mov	r1, r3
 8000a62:	4663      	mov	r3, ip
 8000a64:	e000      	b.n	8000a68 <__aeabi_cdcmpeq>
 8000a66:	bf00      	nop

08000a68 <__aeabi_cdcmpeq>:
 8000a68:	b501      	push	{r0, lr}
 8000a6a:	f7ff ffb7 	bl	80009dc <__cmpdf2>
 8000a6e:	2800      	cmp	r0, #0
 8000a70:	bf48      	it	mi
 8000a72:	f110 0f00 	cmnmi.w	r0, #0
 8000a76:	bd01      	pop	{r0, pc}

08000a78 <__aeabi_dcmpeq>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff fff4 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a80:	bf0c      	ite	eq
 8000a82:	2001      	moveq	r0, #1
 8000a84:	2000      	movne	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmplt>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffea 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a94:	bf34      	ite	cc
 8000a96:	2001      	movcc	r0, #1
 8000a98:	2000      	movcs	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmple>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffe0 	bl	8000a68 <__aeabi_cdcmpeq>
 8000aa8:	bf94      	ite	ls
 8000aaa:	2001      	movls	r0, #1
 8000aac:	2000      	movhi	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpge>:
 8000ab4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab8:	f7ff ffce 	bl	8000a58 <__aeabi_cdrcmple>
 8000abc:	bf94      	ite	ls
 8000abe:	2001      	movls	r0, #1
 8000ac0:	2000      	movhi	r0, #0
 8000ac2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_dcmpgt>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff ffc4 	bl	8000a58 <__aeabi_cdrcmple>
 8000ad0:	bf34      	ite	cc
 8000ad2:	2001      	movcc	r0, #1
 8000ad4:	2000      	movcs	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmpun>:
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__aeabi_dcmpun+0x10>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d10a      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d102      	bne.n	8000afc <__aeabi_dcmpun+0x20>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d102      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	f04f 0001 	mov.w	r0, #1
 8000b06:	4770      	bx	lr

08000b08 <__aeabi_d2iz>:
 8000b08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b0c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b10:	d215      	bcs.n	8000b3e <__aeabi_d2iz+0x36>
 8000b12:	d511      	bpl.n	8000b38 <__aeabi_d2iz+0x30>
 8000b14:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b18:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b1c:	d912      	bls.n	8000b44 <__aeabi_d2iz+0x3c>
 8000b1e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b22:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b26:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b2a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b32:	bf18      	it	ne
 8000b34:	4240      	negne	r0, r0
 8000b36:	4770      	bx	lr
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	4770      	bx	lr
 8000b3e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b42:	d105      	bne.n	8000b50 <__aeabi_d2iz+0x48>
 8000b44:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b48:	bf08      	it	eq
 8000b4a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b4e:	4770      	bx	lr
 8000b50:	f04f 0000 	mov.w	r0, #0
 8000b54:	4770      	bx	lr
 8000b56:	bf00      	nop

08000b58 <__aeabi_d2uiz>:
 8000b58:	004a      	lsls	r2, r1, #1
 8000b5a:	d211      	bcs.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d211      	bcs.n	8000b86 <__aeabi_d2uiz+0x2e>
 8000b62:	d50d      	bpl.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d40e      	bmi.n	8000b8c <__aeabi_d2uiz+0x34>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	fa23 f002 	lsr.w	r0, r3, r2
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_d2uiz+0x3a>
 8000b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0000 	mov.w	r0, #0
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2f>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ba0:	bf24      	itt	cs
 8000ba2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ba6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000baa:	d90d      	bls.n	8000bc8 <__aeabi_d2f+0x30>
 8000bac:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bb0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bb4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bb8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bbc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc0:	bf08      	it	eq
 8000bc2:	f020 0001 	biceq.w	r0, r0, #1
 8000bc6:	4770      	bx	lr
 8000bc8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bcc:	d121      	bne.n	8000c12 <__aeabi_d2f+0x7a>
 8000bce:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bd2:	bfbc      	itt	lt
 8000bd4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	4770      	bxlt	lr
 8000bda:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bde:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000be2:	f1c2 0218 	rsb	r2, r2, #24
 8000be6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bea:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bee:	fa20 f002 	lsr.w	r0, r0, r2
 8000bf2:	bf18      	it	ne
 8000bf4:	f040 0001 	orrne.w	r0, r0, #1
 8000bf8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bfc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c00:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c04:	ea40 000c 	orr.w	r0, r0, ip
 8000c08:	fa23 f302 	lsr.w	r3, r3, r2
 8000c0c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c10:	e7cc      	b.n	8000bac <__aeabi_d2f+0x14>
 8000c12:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c16:	d107      	bne.n	8000c28 <__aeabi_d2f+0x90>
 8000c18:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c1c:	bf1e      	ittt	ne
 8000c1e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c22:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c26:	4770      	bxne	lr
 8000c28:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c2c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c30:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c34:	4770      	bx	lr
 8000c36:	bf00      	nop

08000c38 <__aeabi_uldivmod>:
 8000c38:	b953      	cbnz	r3, 8000c50 <__aeabi_uldivmod+0x18>
 8000c3a:	b94a      	cbnz	r2, 8000c50 <__aeabi_uldivmod+0x18>
 8000c3c:	2900      	cmp	r1, #0
 8000c3e:	bf08      	it	eq
 8000c40:	2800      	cmpeq	r0, #0
 8000c42:	bf1c      	itt	ne
 8000c44:	f04f 31ff 	movne.w	r1, #4294967295
 8000c48:	f04f 30ff 	movne.w	r0, #4294967295
 8000c4c:	f000 b9be 	b.w	8000fcc <__aeabi_idiv0>
 8000c50:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c54:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c58:	f000 f83c 	bl	8000cd4 <__udivmoddi4>
 8000c5c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c60:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c64:	b004      	add	sp, #16
 8000c66:	4770      	bx	lr

08000c68 <__aeabi_d2lz>:
 8000c68:	b538      	push	{r3, r4, r5, lr}
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4604      	mov	r4, r0
 8000c70:	460d      	mov	r5, r1
 8000c72:	f7ff ff0b 	bl	8000a8c <__aeabi_dcmplt>
 8000c76:	b928      	cbnz	r0, 8000c84 <__aeabi_d2lz+0x1c>
 8000c78:	4620      	mov	r0, r4
 8000c7a:	4629      	mov	r1, r5
 8000c7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c80:	f000 b80a 	b.w	8000c98 <__aeabi_d2ulz>
 8000c84:	4620      	mov	r0, r4
 8000c86:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000c8a:	f000 f805 	bl	8000c98 <__aeabi_d2ulz>
 8000c8e:	4240      	negs	r0, r0
 8000c90:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c94:	bd38      	pop	{r3, r4, r5, pc}
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2ulz>:
 8000c98:	b5d0      	push	{r4, r6, r7, lr}
 8000c9a:	4b0c      	ldr	r3, [pc, #48]	@ (8000ccc <__aeabi_d2ulz+0x34>)
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	4606      	mov	r6, r0
 8000ca0:	460f      	mov	r7, r1
 8000ca2:	f7ff fc81 	bl	80005a8 <__aeabi_dmul>
 8000ca6:	f7ff ff57 	bl	8000b58 <__aeabi_d2uiz>
 8000caa:	4604      	mov	r4, r0
 8000cac:	f7ff fc02 	bl	80004b4 <__aeabi_ui2d>
 8000cb0:	4b07      	ldr	r3, [pc, #28]	@ (8000cd0 <__aeabi_d2ulz+0x38>)
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	f7ff fc78 	bl	80005a8 <__aeabi_dmul>
 8000cb8:	4602      	mov	r2, r0
 8000cba:	460b      	mov	r3, r1
 8000cbc:	4630      	mov	r0, r6
 8000cbe:	4639      	mov	r1, r7
 8000cc0:	f7ff faba 	bl	8000238 <__aeabi_dsub>
 8000cc4:	f7ff ff48 	bl	8000b58 <__aeabi_d2uiz>
 8000cc8:	4621      	mov	r1, r4
 8000cca:	bdd0      	pop	{r4, r6, r7, pc}
 8000ccc:	3df00000 	.word	0x3df00000
 8000cd0:	41f00000 	.word	0x41f00000

08000cd4 <__udivmoddi4>:
 8000cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cd8:	9d08      	ldr	r5, [sp, #32]
 8000cda:	468e      	mov	lr, r1
 8000cdc:	4604      	mov	r4, r0
 8000cde:	4688      	mov	r8, r1
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	d14a      	bne.n	8000d7a <__udivmoddi4+0xa6>
 8000ce4:	428a      	cmp	r2, r1
 8000ce6:	4617      	mov	r7, r2
 8000ce8:	d962      	bls.n	8000db0 <__udivmoddi4+0xdc>
 8000cea:	fab2 f682 	clz	r6, r2
 8000cee:	b14e      	cbz	r6, 8000d04 <__udivmoddi4+0x30>
 8000cf0:	f1c6 0320 	rsb	r3, r6, #32
 8000cf4:	fa01 f806 	lsl.w	r8, r1, r6
 8000cf8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cfc:	40b7      	lsls	r7, r6
 8000cfe:	ea43 0808 	orr.w	r8, r3, r8
 8000d02:	40b4      	lsls	r4, r6
 8000d04:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d08:	fa1f fc87 	uxth.w	ip, r7
 8000d0c:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d10:	0c23      	lsrs	r3, r4, #16
 8000d12:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d16:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d1a:	fb01 f20c 	mul.w	r2, r1, ip
 8000d1e:	429a      	cmp	r2, r3
 8000d20:	d909      	bls.n	8000d36 <__udivmoddi4+0x62>
 8000d22:	18fb      	adds	r3, r7, r3
 8000d24:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d28:	f080 80ea 	bcs.w	8000f00 <__udivmoddi4+0x22c>
 8000d2c:	429a      	cmp	r2, r3
 8000d2e:	f240 80e7 	bls.w	8000f00 <__udivmoddi4+0x22c>
 8000d32:	3902      	subs	r1, #2
 8000d34:	443b      	add	r3, r7
 8000d36:	1a9a      	subs	r2, r3, r2
 8000d38:	b2a3      	uxth	r3, r4
 8000d3a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d3e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d42:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d46:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d4a:	459c      	cmp	ip, r3
 8000d4c:	d909      	bls.n	8000d62 <__udivmoddi4+0x8e>
 8000d4e:	18fb      	adds	r3, r7, r3
 8000d50:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d54:	f080 80d6 	bcs.w	8000f04 <__udivmoddi4+0x230>
 8000d58:	459c      	cmp	ip, r3
 8000d5a:	f240 80d3 	bls.w	8000f04 <__udivmoddi4+0x230>
 8000d5e:	443b      	add	r3, r7
 8000d60:	3802      	subs	r0, #2
 8000d62:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d66:	eba3 030c 	sub.w	r3, r3, ip
 8000d6a:	2100      	movs	r1, #0
 8000d6c:	b11d      	cbz	r5, 8000d76 <__udivmoddi4+0xa2>
 8000d6e:	40f3      	lsrs	r3, r6
 8000d70:	2200      	movs	r2, #0
 8000d72:	e9c5 3200 	strd	r3, r2, [r5]
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	428b      	cmp	r3, r1
 8000d7c:	d905      	bls.n	8000d8a <__udivmoddi4+0xb6>
 8000d7e:	b10d      	cbz	r5, 8000d84 <__udivmoddi4+0xb0>
 8000d80:	e9c5 0100 	strd	r0, r1, [r5]
 8000d84:	2100      	movs	r1, #0
 8000d86:	4608      	mov	r0, r1
 8000d88:	e7f5      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000d8a:	fab3 f183 	clz	r1, r3
 8000d8e:	2900      	cmp	r1, #0
 8000d90:	d146      	bne.n	8000e20 <__udivmoddi4+0x14c>
 8000d92:	4573      	cmp	r3, lr
 8000d94:	d302      	bcc.n	8000d9c <__udivmoddi4+0xc8>
 8000d96:	4282      	cmp	r2, r0
 8000d98:	f200 8105 	bhi.w	8000fa6 <__udivmoddi4+0x2d2>
 8000d9c:	1a84      	subs	r4, r0, r2
 8000d9e:	eb6e 0203 	sbc.w	r2, lr, r3
 8000da2:	2001      	movs	r0, #1
 8000da4:	4690      	mov	r8, r2
 8000da6:	2d00      	cmp	r5, #0
 8000da8:	d0e5      	beq.n	8000d76 <__udivmoddi4+0xa2>
 8000daa:	e9c5 4800 	strd	r4, r8, [r5]
 8000dae:	e7e2      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000db0:	2a00      	cmp	r2, #0
 8000db2:	f000 8090 	beq.w	8000ed6 <__udivmoddi4+0x202>
 8000db6:	fab2 f682 	clz	r6, r2
 8000dba:	2e00      	cmp	r6, #0
 8000dbc:	f040 80a4 	bne.w	8000f08 <__udivmoddi4+0x234>
 8000dc0:	1a8a      	subs	r2, r1, r2
 8000dc2:	0c03      	lsrs	r3, r0, #16
 8000dc4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dc8:	b280      	uxth	r0, r0
 8000dca:	b2bc      	uxth	r4, r7
 8000dcc:	2101      	movs	r1, #1
 8000dce:	fbb2 fcfe 	udiv	ip, r2, lr
 8000dd2:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dd6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dda:	fb04 f20c 	mul.w	r2, r4, ip
 8000dde:	429a      	cmp	r2, r3
 8000de0:	d907      	bls.n	8000df2 <__udivmoddi4+0x11e>
 8000de2:	18fb      	adds	r3, r7, r3
 8000de4:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000de8:	d202      	bcs.n	8000df0 <__udivmoddi4+0x11c>
 8000dea:	429a      	cmp	r2, r3
 8000dec:	f200 80e0 	bhi.w	8000fb0 <__udivmoddi4+0x2dc>
 8000df0:	46c4      	mov	ip, r8
 8000df2:	1a9b      	subs	r3, r3, r2
 8000df4:	fbb3 f2fe 	udiv	r2, r3, lr
 8000df8:	fb0e 3312 	mls	r3, lr, r2, r3
 8000dfc:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e00:	fb02 f404 	mul.w	r4, r2, r4
 8000e04:	429c      	cmp	r4, r3
 8000e06:	d907      	bls.n	8000e18 <__udivmoddi4+0x144>
 8000e08:	18fb      	adds	r3, r7, r3
 8000e0a:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e0e:	d202      	bcs.n	8000e16 <__udivmoddi4+0x142>
 8000e10:	429c      	cmp	r4, r3
 8000e12:	f200 80ca 	bhi.w	8000faa <__udivmoddi4+0x2d6>
 8000e16:	4602      	mov	r2, r0
 8000e18:	1b1b      	subs	r3, r3, r4
 8000e1a:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e1e:	e7a5      	b.n	8000d6c <__udivmoddi4+0x98>
 8000e20:	f1c1 0620 	rsb	r6, r1, #32
 8000e24:	408b      	lsls	r3, r1
 8000e26:	fa22 f706 	lsr.w	r7, r2, r6
 8000e2a:	431f      	orrs	r7, r3
 8000e2c:	fa0e f401 	lsl.w	r4, lr, r1
 8000e30:	fa20 f306 	lsr.w	r3, r0, r6
 8000e34:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e38:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e3c:	4323      	orrs	r3, r4
 8000e3e:	fa00 f801 	lsl.w	r8, r0, r1
 8000e42:	fa1f fc87 	uxth.w	ip, r7
 8000e46:	fbbe f0f9 	udiv	r0, lr, r9
 8000e4a:	0c1c      	lsrs	r4, r3, #16
 8000e4c:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e50:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e54:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e58:	45a6      	cmp	lr, r4
 8000e5a:	fa02 f201 	lsl.w	r2, r2, r1
 8000e5e:	d909      	bls.n	8000e74 <__udivmoddi4+0x1a0>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e66:	f080 809c 	bcs.w	8000fa2 <__udivmoddi4+0x2ce>
 8000e6a:	45a6      	cmp	lr, r4
 8000e6c:	f240 8099 	bls.w	8000fa2 <__udivmoddi4+0x2ce>
 8000e70:	3802      	subs	r0, #2
 8000e72:	443c      	add	r4, r7
 8000e74:	eba4 040e 	sub.w	r4, r4, lr
 8000e78:	fa1f fe83 	uxth.w	lr, r3
 8000e7c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e80:	fb09 4413 	mls	r4, r9, r3, r4
 8000e84:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e88:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e8c:	45a4      	cmp	ip, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x1ce>
 8000e90:	193c      	adds	r4, r7, r4
 8000e92:	f103 3eff 	add.w	lr, r3, #4294967295
 8000e96:	f080 8082 	bcs.w	8000f9e <__udivmoddi4+0x2ca>
 8000e9a:	45a4      	cmp	ip, r4
 8000e9c:	d97f      	bls.n	8000f9e <__udivmoddi4+0x2ca>
 8000e9e:	3b02      	subs	r3, #2
 8000ea0:	443c      	add	r4, r7
 8000ea2:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ea6:	eba4 040c 	sub.w	r4, r4, ip
 8000eaa:	fba0 ec02 	umull	lr, ip, r0, r2
 8000eae:	4564      	cmp	r4, ip
 8000eb0:	4673      	mov	r3, lr
 8000eb2:	46e1      	mov	r9, ip
 8000eb4:	d362      	bcc.n	8000f7c <__udivmoddi4+0x2a8>
 8000eb6:	d05f      	beq.n	8000f78 <__udivmoddi4+0x2a4>
 8000eb8:	b15d      	cbz	r5, 8000ed2 <__udivmoddi4+0x1fe>
 8000eba:	ebb8 0203 	subs.w	r2, r8, r3
 8000ebe:	eb64 0409 	sbc.w	r4, r4, r9
 8000ec2:	fa04 f606 	lsl.w	r6, r4, r6
 8000ec6:	fa22 f301 	lsr.w	r3, r2, r1
 8000eca:	431e      	orrs	r6, r3
 8000ecc:	40cc      	lsrs	r4, r1
 8000ece:	e9c5 6400 	strd	r6, r4, [r5]
 8000ed2:	2100      	movs	r1, #0
 8000ed4:	e74f      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000ed6:	fbb1 fcf2 	udiv	ip, r1, r2
 8000eda:	0c01      	lsrs	r1, r0, #16
 8000edc:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ee0:	b280      	uxth	r0, r0
 8000ee2:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000ee6:	463b      	mov	r3, r7
 8000ee8:	4638      	mov	r0, r7
 8000eea:	463c      	mov	r4, r7
 8000eec:	46b8      	mov	r8, r7
 8000eee:	46be      	mov	lr, r7
 8000ef0:	2620      	movs	r6, #32
 8000ef2:	fbb1 f1f7 	udiv	r1, r1, r7
 8000ef6:	eba2 0208 	sub.w	r2, r2, r8
 8000efa:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000efe:	e766      	b.n	8000dce <__udivmoddi4+0xfa>
 8000f00:	4601      	mov	r1, r0
 8000f02:	e718      	b.n	8000d36 <__udivmoddi4+0x62>
 8000f04:	4610      	mov	r0, r2
 8000f06:	e72c      	b.n	8000d62 <__udivmoddi4+0x8e>
 8000f08:	f1c6 0220 	rsb	r2, r6, #32
 8000f0c:	fa2e f302 	lsr.w	r3, lr, r2
 8000f10:	40b7      	lsls	r7, r6
 8000f12:	40b1      	lsls	r1, r6
 8000f14:	fa20 f202 	lsr.w	r2, r0, r2
 8000f18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f1c:	430a      	orrs	r2, r1
 8000f1e:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f22:	b2bc      	uxth	r4, r7
 8000f24:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f28:	0c11      	lsrs	r1, r2, #16
 8000f2a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f2e:	fb08 f904 	mul.w	r9, r8, r4
 8000f32:	40b0      	lsls	r0, r6
 8000f34:	4589      	cmp	r9, r1
 8000f36:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f3a:	b280      	uxth	r0, r0
 8000f3c:	d93e      	bls.n	8000fbc <__udivmoddi4+0x2e8>
 8000f3e:	1879      	adds	r1, r7, r1
 8000f40:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f44:	d201      	bcs.n	8000f4a <__udivmoddi4+0x276>
 8000f46:	4589      	cmp	r9, r1
 8000f48:	d81f      	bhi.n	8000f8a <__udivmoddi4+0x2b6>
 8000f4a:	eba1 0109 	sub.w	r1, r1, r9
 8000f4e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f52:	fb09 f804 	mul.w	r8, r9, r4
 8000f56:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5a:	b292      	uxth	r2, r2
 8000f5c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f60:	4542      	cmp	r2, r8
 8000f62:	d229      	bcs.n	8000fb8 <__udivmoddi4+0x2e4>
 8000f64:	18ba      	adds	r2, r7, r2
 8000f66:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f6a:	d2c4      	bcs.n	8000ef6 <__udivmoddi4+0x222>
 8000f6c:	4542      	cmp	r2, r8
 8000f6e:	d2c2      	bcs.n	8000ef6 <__udivmoddi4+0x222>
 8000f70:	f1a9 0102 	sub.w	r1, r9, #2
 8000f74:	443a      	add	r2, r7
 8000f76:	e7be      	b.n	8000ef6 <__udivmoddi4+0x222>
 8000f78:	45f0      	cmp	r8, lr
 8000f7a:	d29d      	bcs.n	8000eb8 <__udivmoddi4+0x1e4>
 8000f7c:	ebbe 0302 	subs.w	r3, lr, r2
 8000f80:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f84:	3801      	subs	r0, #1
 8000f86:	46e1      	mov	r9, ip
 8000f88:	e796      	b.n	8000eb8 <__udivmoddi4+0x1e4>
 8000f8a:	eba7 0909 	sub.w	r9, r7, r9
 8000f8e:	4449      	add	r1, r9
 8000f90:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f94:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f98:	fb09 f804 	mul.w	r8, r9, r4
 8000f9c:	e7db      	b.n	8000f56 <__udivmoddi4+0x282>
 8000f9e:	4673      	mov	r3, lr
 8000fa0:	e77f      	b.n	8000ea2 <__udivmoddi4+0x1ce>
 8000fa2:	4650      	mov	r0, sl
 8000fa4:	e766      	b.n	8000e74 <__udivmoddi4+0x1a0>
 8000fa6:	4608      	mov	r0, r1
 8000fa8:	e6fd      	b.n	8000da6 <__udivmoddi4+0xd2>
 8000faa:	443b      	add	r3, r7
 8000fac:	3a02      	subs	r2, #2
 8000fae:	e733      	b.n	8000e18 <__udivmoddi4+0x144>
 8000fb0:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fb4:	443b      	add	r3, r7
 8000fb6:	e71c      	b.n	8000df2 <__udivmoddi4+0x11e>
 8000fb8:	4649      	mov	r1, r9
 8000fba:	e79c      	b.n	8000ef6 <__udivmoddi4+0x222>
 8000fbc:	eba1 0109 	sub.w	r1, r1, r9
 8000fc0:	46c4      	mov	ip, r8
 8000fc2:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fc6:	fb09 f804 	mul.w	r8, r9, r4
 8000fca:	e7c4      	b.n	8000f56 <__udivmoddi4+0x282>

08000fcc <__aeabi_idiv0>:
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop

08000fd0 <GNSS_Init>:
/*!
 * Structure initialization.
 * @param GNSS Pointer to main GNSS structure.
 * @param huart Pointer to uart handle.
 */
void GNSS_Init(GNSS_StateHandle *GNSS, UART_HandleTypeDef *huart) {
 8000fd0:	b500      	push	{lr}
 8000fd2:	b083      	sub	sp, #12
	GNSS->huart = huart;
	GNSS->year = 0;
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	f8a0 306e 	strh.w	r3, [r0, #110]	@ 0x6e
	GNSS->month = 0;
 8000fda:	f8c0 3072 	str.w	r3, [r0, #114]	@ 0x72
 8000fde:	f8c0 3076 	str.w	r3, [r0, #118]	@ 0x76
	GNSS->min = 0;
	GNSS->sec = 0;
	GNSS->fixType = 0;
	GNSS->numSV = 0;
	GNSS->satCount = 0;
	GNSS->lon = 0;
 8000fe2:	67c3      	str	r3, [r0, #124]	@ 0x7c
	GNSS->lat = 0;
 8000fe4:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
	GNSS->height = 0;
 8000fe8:	f8c0 3094 	str.w	r3, [r0, #148]	@ 0x94
	GNSS->hMSL = 0;
 8000fec:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
	GNSS->hAcc = 0;
 8000ff0:	f8c0 30a8 	str.w	r3, [r0, #168]	@ 0xa8
	GNSS->vAcc = 0;
 8000ff4:	f8c0 30b0 	str.w	r3, [r0, #176]	@ 0xb0
	GNSS->gSpeed = 0;
 8000ff8:	f8c0 30b8 	str.w	r3, [r0, #184]	@ 0xb8
	GNSS->headMot = 0;
 8000ffc:	f8c0 30c4 	str.w	r3, [r0, #196]	@ 0xc4
void GNSS_Init(GNSS_StateHandle *GNSS, UART_HandleTypeDef *huart) {
 8001000:	9101      	str	r1, [sp, #4]
	GNSS->huart = huart;
 8001002:	6001      	str	r1, [r0, #0]

	HAL_UART_Transmit_DMA(&huart,uart1outprotnmeadisable,sizeof(uart1outprotnmeadisable)/(sizeof(uint8_t)));
 8001004:	2211      	movs	r2, #17
 8001006:	4915      	ldr	r1, [pc, #84]	@ (800105c <GNSS_Init+0x8c>)
 8001008:	a801      	add	r0, sp, #4
 800100a:	f009 fe3d 	bl	800ac88 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800100e:	201e      	movs	r0, #30
 8001010:	f004 fbb4 	bl	800577c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,uart1outprotubxenable,sizeof(uart1outprotubxenable)/(sizeof(uint8_t)));
 8001014:	4912      	ldr	r1, [pc, #72]	@ (8001060 <GNSS_Init+0x90>)
 8001016:	2211      	movs	r2, #17
 8001018:	a801      	add	r0, sp, #4
 800101a:	f009 fe35 	bl	800ac88 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800101e:	201e      	movs	r0, #30
 8001020:	f004 fbac 	bl	800577c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,setGPS_GAL_GLONASS,sizeof(setGPS_GAL_BEIDOU_GLONASS)/(sizeof(uint8_t)));
 8001024:	490f      	ldr	r1, [pc, #60]	@ (8001064 <GNSS_Init+0x94>)
 8001026:	2234      	movs	r2, #52	@ 0x34
 8001028:	a801      	add	r0, sp, #4
 800102a:	f009 fe2d 	bl	800ac88 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800102e:	201e      	movs	r0, #30
 8001030:	f004 fba4 	bl	800577c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,meas_rate_5hz,sizeof(meas_rate_10hz)/(sizeof(uint8_t)));
 8001034:	490c      	ldr	r1, [pc, #48]	@ (8001068 <GNSS_Init+0x98>)
 8001036:	2212      	movs	r2, #18
 8001038:	a801      	add	r0, sp, #4
 800103a:	f009 fe25 	bl	800ac88 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800103e:	201e      	movs	r0, #30
 8001040:	f004 fb9c 	bl	800577c <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,ubx_pvt_every_1meas,sizeof(ubx_pvt_every_1meas)/(sizeof(uint8_t)));
 8001044:	4909      	ldr	r1, [pc, #36]	@ (800106c <GNSS_Init+0x9c>)
 8001046:	2211      	movs	r2, #17
 8001048:	a801      	add	r0, sp, #4
 800104a:	f009 fe1d 	bl	800ac88 <HAL_UART_Transmit_DMA>

	HAL_Delay(100);
 800104e:	2064      	movs	r0, #100	@ 0x64
 8001050:	f004 fb94 	bl	800577c <HAL_Delay>
}
 8001054:	b003      	add	sp, #12
 8001056:	f85d fb04 	ldr.w	pc, [sp], #4
 800105a:	bf00      	nop
 800105c:	08015f70 	.word	0x08015f70
 8001060:	08015f84 	.word	0x08015f84
 8001064:	08015f1c 	.word	0x08015f1c
 8001068:	08015f5c 	.word	0x08015f5c
 800106c:	08015f48 	.word	0x08015f48

08001070 <GNSS_ParsePVTData>:
/*!
 * Parse data to navigation position velocity time solution standard.
 * Look at: 32.17.15.1 u-blox 8 Receiver description.
 * @param GNSS Pointer to main GNSS structure.
 */
void GNSS_ParsePVTData(GNSS_StateHandle *GNSS) {
 8001070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001072:	4604      	mov	r4, r0
	uShort.bytes[0] = GNSS->uartWorkingBuffer[10];
 8001074:	4d70      	ldr	r5, [pc, #448]	@ (8001238 <GNSS_ParsePVTData+0x1c8>)
 8001076:	7d82      	ldrb	r2, [r0, #22]
 8001078:	8a63      	ldrh	r3, [r4, #18]
 800107a:	7c81      	ldrb	r1, [r0, #18]
 800107c:	802b      	strh	r3, [r5, #0]
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
	uShort.bytes[1] = GNSS->uartWorkingBuffer[11];
 800107e:	7cc0      	ldrb	r0, [r0, #19]
	GNSS->yearBytes[1]=GNSS->uartWorkingBuffer[11];
	GNSS->year = uShort.uShort;
 8001080:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
	GNSS->month = GNSS->uartWorkingBuffer[12];
	GNSS->day = GNSS->uartWorkingBuffer[13];
	GNSS->hour = GNSS->uartWorkingBuffer[14];
	GNSS->min = GNSS->uartWorkingBuffer[15];
	GNSS->sec = GNSS->uartWorkingBuffer[16];
	GNSS->fixType = GNSS->uartWorkingBuffer[26];
 8001084:	2300      	movs	r3, #0
 8001086:	f362 0307 	bfi	r3, r2, #0, #8
 800108a:	7de2      	ldrb	r2, [r4, #23]
 800108c:	4e6b      	ldr	r6, [pc, #428]	@ (800123c <GNSS_ParsePVTData+0x1cc>)
	}
	GNSS->hMSL = iLong.iLong;
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;

	for (int var = 0; var < 4; ++var) {
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 46];
 800108e:	4f6c      	ldr	r7, [pc, #432]	@ (8001240 <GNSS_ParsePVTData+0x1d0>)
 8001090:	f362 230f 	bfi	r3, r2, #8, #8
 8001094:	7e22      	ldrb	r2, [r4, #24]
 8001096:	f362 4317 	bfi	r3, r2, #16, #8
 800109a:	f894 2022 	ldrb.w	r2, [r4, #34]	@ 0x22
 800109e:	f362 631f 	bfi	r3, r2, #24, #8
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
 80010a2:	2200      	movs	r2, #0
 80010a4:	f361 0207 	bfi	r2, r1, #0, #8
 80010a8:	7d21      	ldrb	r1, [r4, #20]
 80010aa:	f360 220f 	bfi	r2, r0, #8, #8
 80010ae:	f361 4217 	bfi	r2, r1, #16, #8
 80010b2:	7d61      	ldrb	r1, [r4, #21]
	GNSS->numSV = GNSS->uartWorkingBuffer[29];
 80010b4:	f894 0025 	ldrb.w	r0, [r4, #37]	@ 0x25
 80010b8:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
 80010bc:	f361 621f 	bfi	r2, r1, #24, #8
 80010c0:	e9c4 231c 	strd	r2, r3, [r4, #112]	@ 0x70
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 30];
 80010c4:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 80010c8:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010cc:	ee07 3a90 	vmov	s15, r3
 80010d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->lon = iLong.iLong;
 80010d4:	e9c4 331f 	strd	r3, r3, [r4, #124]	@ 0x7c
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010d8:	ee17 0a90 	vmov	r0, s15
 80010dc:	f7ff fa0c 	bl	80004f8 <__aeabi_f2d>
 80010e0:	a34f      	add	r3, pc, #316	@ (adr r3, 8001220 <GNSS_ParsePVTData+0x1b0>)
 80010e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010e6:	f7ff fa5f 	bl	80005a8 <__aeabi_dmul>
 80010ea:	f7ff fd55 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 34];
 80010ee:	f8d4 302a 	ldr.w	r3, [r4, #42]	@ 0x2a
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010f2:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 80010f6:	ee07 3a90 	vmov	s15, r3
 80010fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->lat = iLong.iLong;
 80010fe:	e9c4 3321 	strd	r3, r3, [r4, #132]	@ 0x84
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 8001102:	ee17 0a90 	vmov	r0, s15
 8001106:	f7ff f9f7 	bl	80004f8 <__aeabi_f2d>
 800110a:	a345      	add	r3, pc, #276	@ (adr r3, 8001220 <GNSS_ParsePVTData+0x1b0>)
 800110c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001110:	f7ff fa4a 	bl	80005a8 <__aeabi_dmul>
 8001114:	f7ff fd40 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 38];
 8001118:	f8d4 302e 	ldr.w	r3, [r4, #46]	@ 0x2e
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 800111c:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
	GNSS->fheight=(float)GNSS->height/1000.0;
 8001120:	ee07 3a90 	vmov	s15, r3
 8001124:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->height = iLong.iLong;
 8001128:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
	GNSS->fheight=(float)GNSS->height/1000.0;
 800112c:	ee17 0a90 	vmov	r0, s15
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 38];
 8001130:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fheight=(float)GNSS->height/1000.0;
 8001134:	f7ff f9e0 	bl	80004f8 <__aeabi_f2d>
 8001138:	a33b      	add	r3, pc, #236	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 800113a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800113e:	f7ff fa33 	bl	80005a8 <__aeabi_dmul>
 8001142:	f7ff fd29 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 42];
 8001146:	f8d4 3032 	ldr.w	r3, [r4, #50]	@ 0x32
	GNSS->fheight=(float)GNSS->height/1000.0;
 800114a:	f8c4 0098 	str.w	r0, [r4, #152]	@ 0x98
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 800114e:	ee07 3a90 	vmov	s15, r3
 8001152:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->hMSL = iLong.iLong;
 8001156:	e9c4 3327 	strd	r3, r3, [r4, #156]	@ 0x9c
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 800115a:	ee17 0a90 	vmov	r0, s15
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 42];
 800115e:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 8001162:	f7ff f9c9 	bl	80004f8 <__aeabi_f2d>
 8001166:	a330      	add	r3, pc, #192	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 8001168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800116c:	f7ff fa1c 	bl	80005a8 <__aeabi_dmul>
 8001170:	f7ff fd12 	bl	8000b98 <__aeabi_d2f>
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 46];
 8001174:	f8d4 3036 	ldr.w	r3, [r4, #54]	@ 0x36
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 8001178:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
	}
	GNSS->hAcc = uLong.uLong;
	GNSS->fhACC=(float)GNSS->hAcc/1000.0;
 800117c:	ee07 3a90 	vmov	s15, r3
 8001180:	eef8 7a67 	vcvt.f32.u32	s15, s15
	GNSS->hAcc = uLong.uLong;
 8001184:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
	GNSS->fhACC=(float)GNSS->hAcc/1000.0;
 8001188:	ee17 0a90 	vmov	r0, s15
 800118c:	f7ff f9b4 	bl	80004f8 <__aeabi_f2d>
 8001190:	a325      	add	r3, pc, #148	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 8001192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001196:	f7ff fa07 	bl	80005a8 <__aeabi_dmul>
 800119a:	f7ff fcfd 	bl	8000b98 <__aeabi_d2f>
 800119e:	f8c4 00ac 	str.w	r0, [r4, #172]	@ 0xac

	for (int var = 0; var < 4; ++var) {
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 50];
 80011a2:	f8d4 003a 	ldr.w	r0, [r4, #58]	@ 0x3a
	}
	GNSS->vAcc = uLong.uLong;
 80011a6:	f8c4 00b0 	str.w	r0, [r4, #176]	@ 0xb0
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011aa:	ee07 0a90 	vmov	s15, r0
 80011ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 50];
 80011b2:	6038      	str	r0, [r7, #0]
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011b4:	ee17 0a90 	vmov	r0, s15
 80011b8:	f7ff f99e 	bl	80004f8 <__aeabi_f2d>
 80011bc:	a31a      	add	r3, pc, #104	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 80011be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c2:	f7ff f9f1 	bl	80005a8 <__aeabi_dmul>
 80011c6:	f7ff fce7 	bl	8000b98 <__aeabi_d2f>

	for (int var = 0; var < 4; ++var) {
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 66];
 80011ca:	f8d4 304a 	ldr.w	r3, [r4, #74]	@ 0x4a
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011ce:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
		GNSS->gSpeedBytes[var] = GNSS->uartWorkingBuffer[var + 66];
	}
	GNSS->gSpeed = iLong.iLong;
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011d2:	ee07 3a90 	vmov	s15, r3
 80011d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->gSpeed = iLong.iLong;
 80011da:	e9c4 332e 	strd	r3, r3, [r4, #184]	@ 0xb8
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011de:	ee17 0a90 	vmov	r0, s15
 80011e2:	f7ff f989 	bl	80004f8 <__aeabi_f2d>
 80011e6:	a310      	add	r3, pc, #64	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 80011e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011ec:	f7ff f9dc 	bl	80005a8 <__aeabi_dmul>
 80011f0:	f7ff fcd2 	bl	8000b98 <__aeabi_d2f>

	for (int var = 0; var < 4; ++var) {
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 70];
 80011f4:	f8d4 304e 	ldr.w	r3, [r4, #78]	@ 0x4e
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011f8:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 70];
 80011fc:	f846 3c04 	str.w	r3, [r6, #-4]
	}
	GNSS->headMot = iLong.iLong * 1e-5;
 8001200:	4618      	mov	r0, r3
 8001202:	f7ff f967 	bl	80004d4 <__aeabi_i2d>
 8001206:	a30a      	add	r3, pc, #40	@ (adr r3, 8001230 <GNSS_ParsePVTData+0x1c0>)
 8001208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800120c:	f7ff f9cc 	bl	80005a8 <__aeabi_dmul>
 8001210:	f7ff fc7a 	bl	8000b08 <__aeabi_d2iz>
 8001214:	1f35      	subs	r5, r6, #4
 8001216:	f8c4 00c4 	str.w	r0, [r4, #196]	@ 0xc4
}
 800121a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800121c:	f3af 8000 	nop.w
 8001220:	9abcaf48 	.word	0x9abcaf48
 8001224:	3e7ad7f2 	.word	0x3e7ad7f2
 8001228:	d2f1a9fc 	.word	0xd2f1a9fc
 800122c:	3f50624d 	.word	0x3f50624d
 8001230:	88e368f1 	.word	0x88e368f1
 8001234:	3ee4f8b5 	.word	0x3ee4f8b5
 8001238:	20000324 	.word	0x20000324
 800123c:	20000320 	.word	0x20000320
 8001240:	20000320 	.word	0x20000320
 8001244:	00000000 	.word	0x00000000

08001248 <distancecalc>:
}




double distancecalc(double lat1, double lat2, double long1, double long2){
 8001248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800124c:	ed2d 8b04 	vpush	{d8-d9}
	double distance=0;
	distance=(double) 6371000*acosl(fmin(1,sinl(lat1*(M_PI/180))*sinl(lat2*(M_PI/180))+cosl(lat1*(M_PI/180))*cosl(lat2*(M_PI/180))*cosl((long2-long1)*(M_PI/180))));
 8001250:	a34a      	add	r3, pc, #296	@ (adr r3, 800137c <distancecalc+0x134>)
 8001252:	e9d3 2300 	ldrd	r2, r3, [r3]
double distancecalc(double lat1, double lat2, double long1, double long2){
 8001256:	b083      	sub	sp, #12
 8001258:	ec51 0b10 	vmov	r0, r1, d0
 800125c:	ec55 4b11 	vmov	r4, r5, d1
 8001260:	ec57 6b13 	vmov	r6, r7, d3
 8001264:	ec59 8b12 	vmov	r8, r9, d2
	distance=(double) 6371000*acosl(fmin(1,sinl(lat1*(M_PI/180))*sinl(lat2*(M_PI/180))+cosl(lat1*(M_PI/180))*cosl(lat2*(M_PI/180))*cosl((long2-long1)*(M_PI/180))));
 8001268:	f7ff f99e 	bl	80005a8 <__aeabi_dmul>
 800126c:	ec41 0b19 	vmov	d9, r0, r1
 8001270:	eeb0 0a49 	vmov.f32	s0, s18
 8001274:	eef0 0a69 	vmov.f32	s1, s19
 8001278:	f012 fdb1 	bl	8013dde <sinl>
 800127c:	a33f      	add	r3, pc, #252	@ (adr r3, 800137c <distancecalc+0x134>)
 800127e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001282:	4620      	mov	r0, r4
 8001284:	4629      	mov	r1, r5
 8001286:	ed8d 0b00 	vstr	d0, [sp]
 800128a:	f7ff f98d 	bl	80005a8 <__aeabi_dmul>
 800128e:	ec41 0b18 	vmov	d8, r0, r1
 8001292:	eeb0 0a48 	vmov.f32	s0, s16
 8001296:	eef0 0a68 	vmov.f32	s1, s17
 800129a:	f012 fda0 	bl	8013dde <sinl>
 800129e:	eeb0 7a40 	vmov.f32	s14, s0
 80012a2:	eef0 7a60 	vmov.f32	s15, s1
 80012a6:	eeb0 0a49 	vmov.f32	s0, s18
 80012aa:	eef0 0a69 	vmov.f32	s1, s19
 80012ae:	ec5b ab17 	vmov	sl, fp, d7
 80012b2:	f012 fd92 	bl	8013dda <cosl>
 80012b6:	eeb0 7a40 	vmov.f32	s14, s0
 80012ba:	eef0 7a60 	vmov.f32	s15, s1
 80012be:	eeb0 0a48 	vmov.f32	s0, s16
 80012c2:	eef0 0a68 	vmov.f32	s1, s17
 80012c6:	ec55 4b17 	vmov	r4, r5, d7
 80012ca:	f012 fd86 	bl	8013dda <cosl>
 80012ce:	4642      	mov	r2, r8
 80012d0:	464b      	mov	r3, r9
 80012d2:	4630      	mov	r0, r6
 80012d4:	4639      	mov	r1, r7
 80012d6:	ec57 6b10 	vmov	r6, r7, d0
 80012da:	f7fe ffad 	bl	8000238 <__aeabi_dsub>
 80012de:	a327      	add	r3, pc, #156	@ (adr r3, 800137c <distancecalc+0x134>)
 80012e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012e4:	f7ff f960 	bl	80005a8 <__aeabi_dmul>
 80012e8:	ec41 0b10 	vmov	d0, r0, r1
 80012ec:	f012 fd75 	bl	8013dda <cosl>
 80012f0:	4620      	mov	r0, r4
 80012f2:	4629      	mov	r1, r5
 80012f4:	ec55 4b10 	vmov	r4, r5, d0
 80012f8:	4632      	mov	r2, r6
 80012fa:	463b      	mov	r3, r7
 80012fc:	f7ff f954 	bl	80005a8 <__aeabi_dmul>
 8001300:	4622      	mov	r2, r4
 8001302:	462b      	mov	r3, r5
 8001304:	f7ff f950 	bl	80005a8 <__aeabi_dmul>
 8001308:	4652      	mov	r2, sl
 800130a:	4604      	mov	r4, r0
 800130c:	460d      	mov	r5, r1
 800130e:	465b      	mov	r3, fp
 8001310:	e9dd 0100 	ldrd	r0, r1, [sp]
 8001314:	f7ff f948 	bl	80005a8 <__aeabi_dmul>
 8001318:	4602      	mov	r2, r0
 800131a:	460b      	mov	r3, r1
 800131c:	4620      	mov	r0, r4
 800131e:	4629      	mov	r1, r5
 8001320:	f7fe ff8c 	bl	800023c <__adddf3>
 8001324:	4602      	mov	r2, r0
 8001326:	460b      	mov	r3, r1
 8001328:	ec43 2b18 	vmov	d8, r2, r3
 800132c:	4b12      	ldr	r3, [pc, #72]	@ (8001378 <distancecalc+0x130>)
 800132e:	2200      	movs	r2, #0
 8001330:	f7ff fbb6 	bl	8000aa0 <__aeabi_dcmple>
 8001334:	b908      	cbnz	r0, 800133a <distancecalc+0xf2>
 8001336:	ed9f 8b0c 	vldr	d8, [pc, #48]	@ 8001368 <distancecalc+0x120>
 800133a:	eeb0 0a48 	vmov.f32	s0, s16
 800133e:	eef0 0a68 	vmov.f32	s1, s17
 8001342:	f012 fd4e 	bl	8013de2 <acosl>
 8001346:	a30a      	add	r3, pc, #40	@ (adr r3, 8001370 <distancecalc+0x128>)
 8001348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800134c:	ec51 0b10 	vmov	r0, r1, d0
 8001350:	f7ff f92a 	bl	80005a8 <__aeabi_dmul>

	return distance;
}
 8001354:	ec41 0b10 	vmov	d0, r0, r1
 8001358:	b003      	add	sp, #12
 800135a:	ecbd 8b04 	vpop	{d8-d9}
 800135e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001362:	bf00      	nop
 8001364:	f3af 8000 	nop.w
 8001368:	00000000 	.word	0x00000000
 800136c:	3ff00000 	.word	0x3ff00000
 8001370:	00000000 	.word	0x00000000
 8001374:	41584dae 	.word	0x41584dae
 8001378:	3ff00000 	.word	0x3ff00000
 800137c:	a2529d39 	.word	0xa2529d39
 8001380:	3f91df46 	.word	0x3f91df46

08001384 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8001384:	b500      	push	{lr}

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001386:	482d      	ldr	r0, [pc, #180]	@ (800143c <MX_ADC1_Init+0xb8>)
 8001388:	492d      	ldr	r1, [pc, #180]	@ (8001440 <MX_ADC1_Init+0xbc>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800138a:	2201      	movs	r2, #1
{
 800138c:	b087      	sub	sp, #28
  ADC_ChannelConfTypeDef sConfig = {0};
 800138e:	2300      	movs	r3, #0
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8001390:	6102      	str	r2, [r0, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001392:	f44f 7280 	mov.w	r2, #256	@ 0x100
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8001396:	e9c0 1300 	strd	r1, r3, [r0]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 800139a:	8302      	strh	r2, [r0, #24]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800139c:	2104      	movs	r1, #4
  hadc1.Init.ContinuousConvMode = ENABLE;
  hadc1.Init.NbrOfConversion = 3;
  hadc1.Init.DiscontinuousConvMode = DISABLE;
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;
 800139e:	f44f 62d8 	mov.w	r2, #1728	@ 0x6c0
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80013a2:	6141      	str	r1, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;
 80013a4:	6282      	str	r2, [r0, #40]	@ 0x28
  hadc1.Init.NbrOfConversion = 3;
 80013a6:	2103      	movs	r1, #3
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013a8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  ADC_ChannelConfTypeDef sConfig = {0};
 80013ac:	e9cd 3300 	strd	r3, r3, [sp]
 80013b0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80013b4:	e9cd 3304 	strd	r3, r3, [sp, #16]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80013b8:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hadc1.Init.NbrOfConversion = 3;
 80013bc:	61c1      	str	r1, [r0, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80013be:	f880 3020 	strb.w	r3, [r0, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013c2:	62c2      	str	r2, [r0, #44]	@ 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80013c4:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80013c8:	6343      	str	r3, [r0, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 80013ca:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80013ce:	f004 f9e7 	bl	80057a0 <HAL_ADC_Init>
 80013d2:	bb28      	cbnz	r0, 8001420 <MX_ADC1_Init+0x9c>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 80013d4:	4a1b      	ldr	r2, [pc, #108]	@ (8001444 <MX_ADC1_Init+0xc0>)
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80013d6:	2306      	movs	r3, #6
  sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 80013d8:	2007      	movs	r0, #7
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80013da:	217f      	movs	r1, #127	@ 0x7f
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80013dc:	e9cd 2300 	strd	r2, r3, [sp]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80013e0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80013e4:	2204      	movs	r2, #4
  sConfig.Offset = 0;
 80013e6:	2300      	movs	r3, #0
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013e8:	4814      	ldr	r0, [pc, #80]	@ (800143c <MX_ADC1_Init+0xb8>)
 80013ea:	4669      	mov	r1, sp
  sConfig.Offset = 0;
 80013ec:	e9cd 2304 	strd	r2, r3, [sp, #16]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013f0:	f004 fafa 	bl	80059e8 <HAL_ADC_ConfigChannel>
 80013f4:	b9f8      	cbnz	r0, 8001436 <MX_ADC1_Init+0xb2>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 80013f6:	4a14      	ldr	r2, [pc, #80]	@ (8001448 <MX_ADC1_Init+0xc4>)
  sConfig.Rank = ADC_REGULAR_RANK_2;
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013f8:	4810      	ldr	r0, [pc, #64]	@ (800143c <MX_ADC1_Init+0xb8>)
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80013fa:	230c      	movs	r3, #12
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013fc:	4669      	mov	r1, sp
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80013fe:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001402:	f004 faf1 	bl	80059e8 <HAL_ADC_ConfigChannel>
 8001406:	b998      	cbnz	r0, 8001430 <MX_ADC1_Init+0xac>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8001408:	4a10      	ldr	r2, [pc, #64]	@ (800144c <MX_ADC1_Init+0xc8>)
  sConfig.Rank = ADC_REGULAR_RANK_3;
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800140a:	480c      	ldr	r0, [pc, #48]	@ (800143c <MX_ADC1_Init+0xb8>)
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800140c:	2312      	movs	r3, #18
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800140e:	4669      	mov	r1, sp
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8001410:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001414:	f004 fae8 	bl	80059e8 <HAL_ADC_ConfigChannel>
 8001418:	b928      	cbnz	r0, 8001426 <MX_ADC1_Init+0xa2>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800141a:	b007      	add	sp, #28
 800141c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001420:	f000 ff32 	bl	8002288 <Error_Handler>
 8001424:	e7d6      	b.n	80013d4 <MX_ADC1_Init+0x50>
    Error_Handler();
 8001426:	f000 ff2f 	bl	8002288 <Error_Handler>
}
 800142a:	b007      	add	sp, #28
 800142c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001430:	f000 ff2a 	bl	8002288 <Error_Handler>
 8001434:	e7e8      	b.n	8001408 <MX_ADC1_Init+0x84>
    Error_Handler();
 8001436:	f000 ff27 	bl	8002288 <Error_Handler>
 800143a:	e7dc      	b.n	80013f6 <MX_ADC1_Init+0x72>
 800143c:	20000388 	.word	0x20000388
 8001440:	50040000 	.word	0x50040000
 8001444:	80000001 	.word	0x80000001
 8001448:	c7520000 	.word	0xc7520000
 800144c:	25b00200 	.word	0x25b00200

08001450 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001450:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(adcHandle->Instance==ADC1)
 8001452:	4b24      	ldr	r3, [pc, #144]	@ (80014e4 <HAL_ADC_MspInit+0x94>)
 8001454:	6802      	ldr	r2, [r0, #0]
{
 8001456:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001458:	2400      	movs	r4, #0
  if(adcHandle->Instance==ADC1)
 800145a:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800145c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8001460:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001464:	9406      	str	r4, [sp, #24]
  if(adcHandle->Instance==ADC1)
 8001466:	d001      	beq.n	800146c <HAL_ADC_MspInit+0x1c>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8001468:	b008      	add	sp, #32
 800146a:	bd70      	pop	{r4, r5, r6, pc}
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 800146c:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001470:	4605      	mov	r5, r0
 8001472:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
    hdma_adc1.Instance = DMA1_Channel1;
 8001474:	4e1c      	ldr	r6, [pc, #112]	@ (80014e8 <HAL_ADC_MspInit+0x98>)
 8001476:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800147a:	64da      	str	r2, [r3, #76]	@ 0x4c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800147c:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800147e:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 8001482:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 8001484:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001486:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8001488:	f042 0201 	orr.w	r2, r2, #1
 800148c:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800148e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001490:	f003 0301 	and.w	r3, r3, #1
 8001494:	9300      	str	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001496:	2210      	movs	r2, #16
 8001498:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800149a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800149e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80014a0:	e9cd 2302 	strd	r2, r3, [sp, #8]
  (void)tmpreg;
 80014a4:	9b00      	ldr	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014a6:	f004 ff91 	bl	80063cc <HAL_GPIO_Init>
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 80014aa:	4a10      	ldr	r2, [pc, #64]	@ (80014ec <HAL_ADC_MspInit+0x9c>)
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 80014ac:	6234      	str	r4, [r6, #32]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 80014ae:	2305      	movs	r3, #5
 80014b0:	e9c6 2300 	strd	r2, r3, [r6]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 80014b4:	2280      	movs	r2, #128	@ 0x80
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80014b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80014ba:	e9c6 2304 	strd	r2, r3, [r6, #16]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80014be:	4630      	mov	r0, r6
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80014c0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80014c4:	2320      	movs	r3, #32
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 80014c6:	e9c6 4402 	strd	r4, r4, [r6, #8]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80014ca:	e9c6 2306 	strd	r2, r3, [r6, #24]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80014ce:	f004 fdd5 	bl	800607c <HAL_DMA_Init>
 80014d2:	b918      	cbnz	r0, 80014dc <HAL_ADC_MspInit+0x8c>
    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 80014d4:	64ee      	str	r6, [r5, #76]	@ 0x4c
 80014d6:	62b5      	str	r5, [r6, #40]	@ 0x28
}
 80014d8:	b008      	add	sp, #32
 80014da:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 80014dc:	f000 fed4 	bl	8002288 <Error_Handler>
 80014e0:	e7f8      	b.n	80014d4 <HAL_ADC_MspInit+0x84>
 80014e2:	bf00      	nop
 80014e4:	50040000 	.word	0x50040000
 80014e8:	20000328 	.word	0x20000328
 80014ec:	40020008 	.word	0x40020008

080014f0 <HAL_ADC_ConvCpltCallback>:
  /* USER CODE END ADC1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 80014f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	if(hadc->Instance==ADC1){
 80014f4:	6802      	ldr	r2, [r0, #0]
 80014f6:	4b3e      	ldr	r3, [pc, #248]	@ (80015f0 <HAL_ADC_ConvCpltCallback+0x100>)
 80014f8:	429a      	cmp	r2, r3
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 80014fa:	ed2d 8b02 	vpush	{d8}
	if(hadc->Instance==ADC1){
 80014fe:	d008      	beq.n	8001512 <HAL_ADC_ConvCpltCallback+0x22>
	}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);



}
 8001500:	ecbd 8b02 	vpop	{d8}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 8001504:	493b      	ldr	r1, [pc, #236]	@ (80015f4 <HAL_ADC_ConvCpltCallback+0x104>)
 8001506:	483c      	ldr	r0, [pc, #240]	@ (80015f8 <HAL_ADC_ConvCpltCallback+0x108>)
}
 8001508:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 800150c:	2203      	movs	r2, #3
 800150e:	f004 bd05 	b.w	8005f1c <HAL_ADC_Start_DMA>
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001512:	4e38      	ldr	r6, [pc, #224]	@ (80015f4 <HAL_ADC_ConvCpltCallback+0x104>)
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001514:	4f39      	ldr	r7, [pc, #228]	@ (80015fc <HAL_ADC_ConvCpltCallback+0x10c>)
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001516:	8830      	ldrh	r0, [r6, #0]
 8001518:	f7fe ffdc 	bl	80004d4 <__aeabi_i2d>
 800151c:	4602      	mov	r2, r0
 800151e:	460b      	mov	r3, r1
 8001520:	a12d      	add	r1, pc, #180	@ (adr r1, 80015d8 <HAL_ADC_ConvCpltCallback+0xe8>)
 8001522:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001526:	f7ff f969 	bl	80007fc <__aeabi_ddiv>
 800152a:	f7ff fb35 	bl	8000b98 <__aeabi_d2f>
 800152e:	4a34      	ldr	r2, [pc, #208]	@ (8001600 <HAL_ADC_ConvCpltCallback+0x110>)
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001530:	4b34      	ldr	r3, [pc, #208]	@ (8001604 <HAL_ADC_ConvCpltCallback+0x114>)
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001532:	6010      	str	r0, [r2, #0]
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001534:	ed93 8a00 	vldr	s16, [r3]
 8001538:	f7fe ffde 	bl	80004f8 <__aeabi_f2d>
 800153c:	4604      	mov	r4, r0
 800153e:	8870      	ldrh	r0, [r6, #2]
 8001540:	460d      	mov	r5, r1
 8001542:	f7fe ffc7 	bl	80004d4 <__aeabi_i2d>
 8001546:	a326      	add	r3, pc, #152	@ (adr r3, 80015e0 <HAL_ADC_ConvCpltCallback+0xf0>)
 8001548:	e9d3 2300 	ldrd	r2, r3, [r3]
 800154c:	f7ff f82c 	bl	80005a8 <__aeabi_dmul>
 8001550:	4622      	mov	r2, r4
 8001552:	462b      	mov	r3, r5
 8001554:	f7ff f828 	bl	80005a8 <__aeabi_dmul>
 8001558:	4680      	mov	r8, r0
 800155a:	ee18 0a10 	vmov	r0, s16
 800155e:	4689      	mov	r9, r1
 8001560:	f7fe ffca 	bl	80004f8 <__aeabi_f2d>
 8001564:	4602      	mov	r2, r0
 8001566:	460b      	mov	r3, r1
 8001568:	4640      	mov	r0, r8
 800156a:	4649      	mov	r1, r9
 800156c:	f7fe fe64 	bl	8000238 <__aeabi_dsub>
 8001570:	4b25      	ldr	r3, [pc, #148]	@ (8001608 <HAL_ADC_ConvCpltCallback+0x118>)
 8001572:	edd3 7a00 	vldr	s15, [r3]
 8001576:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800157a:	4680      	mov	r8, r0
 800157c:	ee17 0a90 	vmov	r0, s15
 8001580:	4689      	mov	r9, r1
 8001582:	f7fe ffb9 	bl	80004f8 <__aeabi_f2d>
 8001586:	4602      	mov	r2, r0
 8001588:	460b      	mov	r3, r1
 800158a:	2000      	movs	r0, #0
 800158c:	491f      	ldr	r1, [pc, #124]	@ (800160c <HAL_ADC_ConvCpltCallback+0x11c>)
 800158e:	f7ff f935 	bl	80007fc <__aeabi_ddiv>
 8001592:	4602      	mov	r2, r0
 8001594:	460b      	mov	r3, r1
 8001596:	4640      	mov	r0, r8
 8001598:	4649      	mov	r1, r9
 800159a:	f7ff f805 	bl	80005a8 <__aeabi_dmul>
 800159e:	f7ff fafb 	bl	8000b98 <__aeabi_d2f>
 80015a2:	ee07 0a90 	vmov	s15, r0
 80015a6:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 80015aa:	ee77 7a87 	vadd.f32	s15, s15, s14
		vbat=(float) 2*(rawdata[2]/4095.0)*vrefint;
 80015ae:	88b0      	ldrh	r0, [r6, #4]
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 80015b0:	edc7 7a00 	vstr	s15, [r7]
		vbat=(float) 2*(rawdata[2]/4095.0)*vrefint;
 80015b4:	f7fe ff8e 	bl	80004d4 <__aeabi_i2d>
 80015b8:	a30b      	add	r3, pc, #44	@ (adr r3, 80015e8 <HAL_ADC_ConvCpltCallback+0xf8>)
 80015ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015be:	f7fe fff3 	bl	80005a8 <__aeabi_dmul>
 80015c2:	4622      	mov	r2, r4
 80015c4:	462b      	mov	r3, r5
 80015c6:	f7fe ffef 	bl	80005a8 <__aeabi_dmul>
 80015ca:	f7ff fae5 	bl	8000b98 <__aeabi_d2f>
 80015ce:	4e10      	ldr	r6, [pc, #64]	@ (8001610 <HAL_ADC_ConvCpltCallback+0x120>)
 80015d0:	6030      	str	r0, [r6, #0]
 80015d2:	e795      	b.n	8001500 <HAL_ADC_ConvCpltCallback+0x10>
 80015d4:	f3af 8000 	nop.w
 80015d8:	d70a3d70 	.word	0xd70a3d70
 80015dc:	40b36323 	.word	0x40b36323
 80015e0:	55555555 	.word	0x55555555
 80015e4:	3fd55555 	.word	0x3fd55555
 80015e8:	10010010 	.word	0x10010010
 80015ec:	3f400100 	.word	0x3f400100
 80015f0:	50040000 	.word	0x50040000
 80015f4:	20000fcc 	.word	0x20000fcc
 80015f8:	20000388 	.word	0x20000388
 80015fc:	20000fc8 	.word	0x20000fc8
 8001600:	20000fc4 	.word	0x20000fc4
 8001604:	20000008 	.word	0x20000008
 8001608:	2000000c 	.word	0x2000000c
 800160c:	40590000 	.word	0x40590000
 8001610:	20000fc0 	.word	0x20000fc0

08001614 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8001614:	b508      	push	{r3, lr}
  /* init code for USB_Device */
  MX_USB_Device_Init();
 8001616:	f00d fbfd 	bl	800ee14 <MX_USB_Device_Init>
  /* USER CODE BEGIN StartDefaultTask */
  /* Infinite loop */
  for(;;)
  {
	statemachine();
 800161a:	f001 ffbd 	bl	8003598 <statemachine>
	ssd1306_UpdateScreen();
 800161e:	f001 f9e3 	bl	80029e8 <ssd1306_UpdateScreen>
    osDelay(50);
 8001622:	2032      	movs	r0, #50	@ 0x32
 8001624:	f00b ff98 	bl	800d558 <osDelay>
  for(;;)
 8001628:	e7f7      	b.n	800161a <StartDefaultTask+0x6>
 800162a:	bf00      	nop

0800162c <StartTask02>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void const * argument)
{
 800162c:	4c09      	ldr	r4, [pc, #36]	@ (8001654 <StartTask02+0x28>)
  {


	  if(received_flag==1){

	  		  GNSS_ParsePVTData(&GNSSData);
 800162e:	4e0a      	ldr	r6, [pc, #40]	@ (8001658 <StartTask02+0x2c>)
	  		  received_flag=0;


	  	  }
	HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 8001630:	4d0a      	ldr	r5, [pc, #40]	@ (800165c <StartTask02+0x30>)
{
 8001632:	b580      	push	{r7, lr}
	  		  received_flag=0;
 8001634:	2700      	movs	r7, #0
	  if(received_flag==1){
 8001636:	6823      	ldr	r3, [r4, #0]
 8001638:	2b01      	cmp	r3, #1
	  		  GNSS_ParsePVTData(&GNSSData);
 800163a:	4630      	mov	r0, r6
	  if(received_flag==1){
 800163c:	d102      	bne.n	8001644 <StartTask02+0x18>
	  		  GNSS_ParsePVTData(&GNSSData);
 800163e:	f7ff fd17 	bl	8001070 <GNSS_ParsePVTData>
	  		  received_flag=0;
 8001642:	6027      	str	r7, [r4, #0]
	HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 8001644:	4628      	mov	r0, r5
 8001646:	2101      	movs	r1, #1
 8001648:	f005 f868 	bl	800671c <HAL_GPIO_TogglePin>
    osDelay(100);
 800164c:	2064      	movs	r0, #100	@ 0x64
 800164e:	f00b ff83 	bl	800d558 <osDelay>
	  if(received_flag==1){
 8001652:	e7f0      	b.n	8001636 <StartTask02+0xa>
 8001654:	2000050c 	.word	0x2000050c
 8001658:	20000510 	.word	0x20000510
 800165c:	48000400 	.word	0x48000400

08001660 <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void const * argument)
{
 8001660:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001664:	4c42      	ldr	r4, [pc, #264]	@ (8001770 <StartTask03+0x110>)
 8001666:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 80017a0 <StartTask03+0x140>
 800166a:	f8df b138 	ldr.w	fp, [pc, #312]	@ 80017a4 <StartTask03+0x144>
 800166e:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 80017a8 <StartTask03+0x148>
 8001672:	4f40      	ldr	r7, [pc, #256]	@ (8001774 <StartTask03+0x114>)
 8001674:	4e40      	ldr	r6, [pc, #256]	@ (8001778 <StartTask03+0x118>)
							  }


								bmp581_read_precise_normal(&bmp581);
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 8001676:	4d41      	ldr	r5, [pc, #260]	@ (800177c <StartTask03+0x11c>)
{
 8001678:	b0b1      	sub	sp, #196	@ 0xc4
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 800167a:	4841      	ldr	r0, [pc, #260]	@ (8001780 <StartTask03+0x120>)
 800167c:	2102      	movs	r1, #2
 800167e:	f005 f84d 	bl	800671c <HAL_GPIO_TogglePin>
	  if(GNSSData.fgSpeed>=vitmax){
 8001682:	edd4 7a30 	vldr	s15, [r4, #192]	@ 0xc0
 8001686:	ed99 7a00 	vldr	s14, [r9]
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 800168a:	f8db 2000 	ldr.w	r2, [fp]
	  if(GNSSData.fgSpeed>=vitmax){
 800168e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 8001696:	f246 33fd 	movw	r3, #25597	@ 0x63fd
							  									 vitmax=GNSSData.fgSpeed;
 800169a:	bfa8      	it	ge
 800169c:	edc9 7a00 	vstrge	s15, [r9]
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 80016a0:	429a      	cmp	r2, r3
								  osThreadSuspend(NULL);
 80016a2:	f04f 0000 	mov.w	r0, #0
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 80016a6:	dd04      	ble.n	80016b2 <StartTask03+0x52>
								  osThreadSuspend(NULL);
 80016a8:	f00b ff5e 	bl	800d568 <osThreadSuspend>
								  balisestate=2;
 80016ac:	4a35      	ldr	r2, [pc, #212]	@ (8001784 <StartTask03+0x124>)
 80016ae:	2302      	movs	r3, #2
 80016b0:	7013      	strb	r3, [r2, #0]
								bmp581_read_precise_normal(&bmp581);
 80016b2:	4835      	ldr	r0, [pc, #212]	@ (8001788 <StartTask03+0x128>)
 80016b4:	f000 f99c 	bl	80019f0 <bmp581_read_precise_normal>
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
 80016b8:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 80016bc:	f7fe ff1c 	bl	80004f8 <__aeabi_f2d>
 80016c0:	ec41 0b18 	vmov	d8, r0, r1
 80016c4:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 80016c8:	f7fe ff16 	bl	80004f8 <__aeabi_f2d>
 80016cc:	eeb0 3a48 	vmov.f32	s6, s16
 80016d0:	eef0 3a68 	vmov.f32	s7, s17
 80016d4:	ed98 ab00 	vldr	d10, [r8]
 80016d8:	ec41 0b11 	vmov	d1, r0, r1
 80016dc:	eeb0 2a4a 	vmov.f32	s4, s20
 80016e0:	eef0 2a6a 	vmov.f32	s5, s21
 80016e4:	ed97 0b00 	vldr	d0, [r7]
 80016e8:	f7ff fdae 	bl	8001248 <distancecalc>
 80016ec:	e9d6 0100 	ldrd	r0, r1, [r6]
 80016f0:	ec53 2b10 	vmov	r2, r3, d0
 80016f4:	f7fe fda2 	bl	800023c <__adddf3>
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 80016f8:	4b24      	ldr	r3, [pc, #144]	@ (800178c <StartTask03+0x12c>)
 80016fa:	ed94 9a2b 	vldr	s18, [r4, #172]	@ 0xac
 80016fe:	ed93 ab00 	vldr	d10, [r3]
 8001702:	4b23      	ldr	r3, [pc, #140]	@ (8001790 <StartTask03+0x130>)
 8001704:	edd3 8a00 	vldr	s17, [r3]
 8001708:	4b22      	ldr	r3, [pc, #136]	@ (8001794 <StartTask03+0x134>)
 800170a:	ed93 8a00 	vldr	s16, [r3]
 800170e:	f894 3078 	ldrb.w	r3, [r4, #120]	@ 0x78
 8001712:	932f      	str	r3, [sp, #188]	@ 0xbc
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
 8001714:	e9c6 0100 	strd	r0, r1, [r6]
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 8001718:	22bc      	movs	r2, #188	@ 0xbc
 800171a:	491f      	ldr	r1, [pc, #124]	@ (8001798 <StartTask03+0x138>)
 800171c:	4668      	mov	r0, sp
 800171e:	f00e ff32 	bl	8010586 <memcpy>
 8001722:	eeb0 2a4a 	vmov.f32	s4, s20
 8001726:	eef0 2a6a 	vmov.f32	s5, s21
 800172a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800172e:	eeb0 1a49 	vmov.f32	s2, s18
 8001732:	eef0 0a68 	vmov.f32	s1, s17
 8001736:	eeb0 0a48 	vmov.f32	s0, s16
 800173a:	4628      	mov	r0, r5
 800173c:	f000 ff08 	bl	8002550 <csvframe>
 8001740:	4b16      	ldr	r3, [pc, #88]	@ (800179c <StartTask03+0x13c>)
 8001742:	4682      	mov	sl, r0
 8001744:	6018      	str	r0, [r3, #0]
								  oldlat=GNSSData.fLat;
 8001746:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800174a:	f7fe fed5 	bl	80004f8 <__aeabi_f2d>
 800174e:	e9c7 0100 	strd	r0, r1, [r7]
								  oldlong=GNSSData.fLon;
 8001752:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 8001756:	f7fe fecf 	bl	80004f8 <__aeabi_f2d>
 800175a:	e9c8 0100 	strd	r0, r1, [r8]
								  writebuffertoflash((uint8_t*)flashwrite,flashbufferlen);
 800175e:	4628      	mov	r0, r5
 8001760:	4651      	mov	r1, sl
 8001762:	f000 ffd7 	bl	8002714 <writebuffertoflash>


    osDelay(200);
 8001766:	20c8      	movs	r0, #200	@ 0xc8
 8001768:	f00b fef6 	bl	800d558 <osDelay>
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 800176c:	e785      	b.n	800167a <StartTask03+0x1a>
 800176e:	bf00      	nop
 8001770:	20000510 	.word	0x20000510
 8001774:	20000608 	.word	0x20000608
 8001778:	20000610 	.word	0x20000610
 800177c:	20000ec0 	.word	0x20000ec0
 8001780:	48000400 	.word	0x48000400
 8001784:	2000106b 	.word	0x2000106b
 8001788:	200005d8 	.word	0x200005d8
 800178c:	20000408 	.word	0x20000408
 8001790:	20000fc0 	.word	0x20000fc0
 8001794:	20000fc8 	.word	0x20000fc8
 8001798:	2000051c 	.word	0x2000051c
 800179c:	20000624 	.word	0x20000624
 80017a0:	2000063c 	.word	0x2000063c
 80017a4:	200006b8 	.word	0x200006b8
 80017a8:	20000600 	.word	0x20000600

080017ac <StartTask04>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask04 */
void StartTask04(void const * argument)
{
 80017ac:	b508      	push	{r3, lr}
  for(;;)
  {

	  usbtransmit();
	  ssd1306_UpdateScreen();
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 80017ae:	4c06      	ldr	r4, [pc, #24]	@ (80017c8 <StartTask04+0x1c>)
	  usbtransmit();
 80017b0:	f003 fe28 	bl	8005404 <usbtransmit>
	  ssd1306_UpdateScreen();
 80017b4:	f001 f918 	bl	80029e8 <ssd1306_UpdateScreen>
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 80017b8:	4620      	mov	r0, r4
 80017ba:	2102      	movs	r1, #2
 80017bc:	f004 ffae 	bl	800671c <HAL_GPIO_TogglePin>
	  osDelay(100);
 80017c0:	2064      	movs	r0, #100	@ 0x64
 80017c2:	f00b fec9 	bl	800d558 <osDelay>
  for(;;)
 80017c6:	e7f3      	b.n	80017b0 <StartTask04+0x4>
 80017c8:	48000400 	.word	0x48000400

080017cc <StartTask05>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask05 */
void StartTask05(void const * argument)
{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	4c17      	ldr	r4, [pc, #92]	@ (800182c <StartTask05+0x60>)
 80017d0:	f8df 9068 	ldr.w	r9, [pc, #104]	@ 800183c <StartTask05+0x70>
 80017d4:	f8df 8068 	ldr.w	r8, [pc, #104]	@ 8001840 <StartTask05+0x74>
  /* Infinite loop */
  for(;;)
  {

	  if(GNSSData.fixType>=3){
		  bmp581_read_precise_normal(&bmp581);
 80017d8:	4d15      	ldr	r5, [pc, #84]	@ (8001830 <StartTask05+0x64>)
		  P0 =(double) bmppress / powf((1 - (GNSSData.fhMSL / 44330.0f)), 5.255f);
 80017da:	eddf 8a16 	vldr	s17, [pc, #88]	@ 8001834 <StartTask05+0x68>
 80017de:	ed9f 8a16 	vldr	s16, [pc, #88]	@ 8001838 <StartTask05+0x6c>
	  if(GNSSData.fixType>=3){
 80017e2:	f894 3077 	ldrb.w	r3, [r4, #119]	@ 0x77
 80017e6:	2b02      	cmp	r3, #2
		  bmp581_read_precise_normal(&bmp581);
 80017e8:	4628      	mov	r0, r5
	  if(GNSSData.fixType>=3){
 80017ea:	d919      	bls.n	8001820 <StartTask05+0x54>
		  bmp581_read_precise_normal(&bmp581);
 80017ec:	f000 f900 	bl	80019f0 <bmp581_read_precise_normal>
		  P0 =(double) bmppress / powf((1 - (GNSSData.fhMSL / 44330.0f)), 5.255f);
 80017f0:	edd4 7a29 	vldr	s15, [r4, #164]	@ 0xa4
 80017f4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80017f8:	eea7 0ae8 	vfms.f32	s0, s15, s17
 80017fc:	e9d9 6700 	ldrd	r6, r7, [r9]
 8001800:	eef0 0a48 	vmov.f32	s1, s16
 8001804:	f012 fa88 	bl	8013d18 <powf>
 8001808:	ee10 0a10 	vmov	r0, s0
 800180c:	f7fe fe74 	bl	80004f8 <__aeabi_f2d>
 8001810:	4602      	mov	r2, r0
 8001812:	460b      	mov	r3, r1
 8001814:	4630      	mov	r0, r6
 8001816:	4639      	mov	r1, r7
 8001818:	f7fe fff0 	bl	80007fc <__aeabi_ddiv>
 800181c:	e9c8 0100 	strd	r0, r1, [r8]

	  }
    osDelay(20000);
 8001820:	f644 6020 	movw	r0, #20000	@ 0x4e20
 8001824:	f00b fe98 	bl	800d558 <osDelay>
	  if(GNSSData.fixType>=3){
 8001828:	e7db      	b.n	80017e2 <StartTask05+0x16>
 800182a:	bf00      	nop
 800182c:	20000510 	.word	0x20000510
 8001830:	200005d8 	.word	0x200005d8
 8001834:	37bd3b20 	.word	0x37bd3b20
 8001838:	40a828f6 	.word	0x40a828f6
 800183c:	20000410 	.word	0x20000410
 8001840:	20000010 	.word	0x20000010

08001844 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 8001844:	b570      	push	{r4, r5, r6, lr}
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 8001846:	4c32      	ldr	r4, [pc, #200]	@ (8001910 <MX_FREERTOS_Init+0xcc>)
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 8001848:	4e32      	ldr	r6, [pc, #200]	@ (8001914 <MX_FREERTOS_Init+0xd0>)
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 800184a:	4d33      	ldr	r5, [pc, #204]	@ (8001918 <MX_FREERTOS_Init+0xd4>)
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 800184c:	46a6      	mov	lr, r4
 800184e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
void MX_FREERTOS_Init(void) {
 8001852:	b09a      	sub	sp, #104	@ 0x68
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 8001854:	f10d 0c04 	add.w	ip, sp, #4
 8001858:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800185c:	f8de 3000 	ldr.w	r3, [lr]
 8001860:	f8cc 3000 	str.w	r3, [ip]
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001864:	2100      	movs	r1, #0
 8001866:	a801      	add	r0, sp, #4
 8001868:	f00b fe50 	bl	800d50c <osThreadCreate>
 800186c:	4b2b      	ldr	r3, [pc, #172]	@ (800191c <MX_FREERTOS_Init+0xd8>)
  osThreadDef(GNSSPARSE, StartTask02, osPriorityAboveNormal, 0, 256);
 800186e:	f104 0e14 	add.w	lr, r4, #20
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001872:	6018      	str	r0, [r3, #0]
  osThreadDef(GNSSPARSE, StartTask02, osPriorityAboveNormal, 0, 256);
 8001874:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8001878:	f10d 0c18 	add.w	ip, sp, #24
 800187c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001880:	f8de 3000 	ldr.w	r3, [lr]
 8001884:	f8cc 3000 	str.w	r3, [ip]
  GNSSPARSEHandle = osThreadCreate(osThread(GNSSPARSE), NULL);
 8001888:	2100      	movs	r1, #0
 800188a:	a806      	add	r0, sp, #24
 800188c:	f00b fe3e 	bl	800d50c <osThreadCreate>
 8001890:	4b23      	ldr	r3, [pc, #140]	@ (8001920 <MX_FREERTOS_Init+0xdc>)
  osThreadDef(BALISE, StartTask03, osPriorityRealtime, 0, 256);
 8001892:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
  GNSSPARSEHandle = osThreadCreate(osThread(GNSSPARSE), NULL);
 8001896:	6018      	str	r0, [r3, #0]
  osThreadDef(BALISE, StartTask03, osPriorityRealtime, 0, 256);
 8001898:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800189c:	f10d 0c2c 	add.w	ip, sp, #44	@ 0x2c
 80018a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80018a4:	f8de 3000 	ldr.w	r3, [lr]
 80018a8:	f8cc 3000 	str.w	r3, [ip]
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 80018ac:	2100      	movs	r1, #0
 80018ae:	a80b      	add	r0, sp, #44	@ 0x2c
 80018b0:	f00b fe2c 	bl	800d50c <osThreadCreate>
  osThreadDef(USBTRANSMIT, StartTask04, osPriorityHigh, 0, 256);
 80018b4:	f104 0e3c 	add.w	lr, r4, #60	@ 0x3c
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 80018b8:	6030      	str	r0, [r6, #0]
  osThreadDef(USBTRANSMIT, StartTask04, osPriorityHigh, 0, 256);
 80018ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80018be:	f10d 0c40 	add.w	ip, sp, #64	@ 0x40
 80018c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80018c6:	f8de 3000 	ldr.w	r3, [lr]
 80018ca:	f8cc 3000 	str.w	r3, [ip]
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 80018ce:	2100      	movs	r1, #0
 80018d0:	a810      	add	r0, sp, #64	@ 0x40
 80018d2:	f00b fe1b 	bl	800d50c <osThreadCreate>
  osThreadDef(BAROCALIB, StartTask05, osPriorityBelowNormal, 0, 256);
 80018d6:	f104 0c50 	add.w	ip, r4, #80	@ 0x50
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 80018da:	6028      	str	r0, [r5, #0]
  osThreadDef(BAROCALIB, StartTask05, osPriorityBelowNormal, 0, 256);
 80018dc:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80018e0:	ac15      	add	r4, sp, #84	@ 0x54
 80018e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80018e4:	f8dc 3000 	ldr.w	r3, [ip]
 80018e8:	6023      	str	r3, [r4, #0]
  BAROCALIBHandle = osThreadCreate(osThread(BAROCALIB), NULL);
 80018ea:	2100      	movs	r1, #0
 80018ec:	a815      	add	r0, sp, #84	@ 0x54
 80018ee:	f00b fe0d 	bl	800d50c <osThreadCreate>
 80018f2:	4b0c      	ldr	r3, [pc, #48]	@ (8001924 <MX_FREERTOS_Init+0xe0>)
 80018f4:	4602      	mov	r2, r0
  osThreadSuspend(BALISEHandle);
 80018f6:	6830      	ldr	r0, [r6, #0]
  BAROCALIBHandle = osThreadCreate(osThread(BAROCALIB), NULL);
 80018f8:	601a      	str	r2, [r3, #0]
  osThreadSuspend(BALISEHandle);
 80018fa:	f00b fe35 	bl	800d568 <osThreadSuspend>
  osThreadSuspend(USBTRANSMITHandle);
 80018fe:	6828      	ldr	r0, [r5, #0]
 8001900:	f00b fe32 	bl	800d568 <osThreadSuspend>
  osThreadSetPriority(USBTRANSMITHandle, osPriorityRealtime);
 8001904:	6828      	ldr	r0, [r5, #0]
 8001906:	2103      	movs	r1, #3
 8001908:	f00b fe1c 	bl	800d544 <osThreadSetPriority>
}
 800190c:	b01a      	add	sp, #104	@ 0x68
 800190e:	bd70      	pop	{r4, r5, r6, pc}
 8001910:	08015ea8 	.word	0x08015ea8
 8001914:	200003f4 	.word	0x200003f4
 8001918:	200003f0 	.word	0x200003f0
 800191c:	200003fc 	.word	0x200003fc
 8001920:	200003f8 	.word	0x200003f8
 8001924:	200003ec 	.word	0x200003ec

08001928 <bmp581_init_precise_normal>:
uint8_t odrcheck=0;
double P0=101325.0;

//Ox18 donc 11000 pour ODR donc 5hz en mode normal avec oversampling a 128 pour la pression et 8 pour la temperature

uint8_t bmp581_init_precise_normal(BMP_t * bmp581){
 8001928:	b570      	push	{r4, r5, r6, lr}
 800192a:	b086      	sub	sp, #24

//	uint8_t OSR_tmask = 0b01111111;
//	uint8_t ODR_tmask = 0b01100001;

	uint8_t OSR_tmask = 0b01111011;
 800192c:	217b      	movs	r1, #123	@ 0x7b
	uint8_t ODR_tmask = 0b01101001;
 800192e:	2269      	movs	r2, #105	@ 0x69
	uint8_t DSP_conf_mask = 0b00101011;
	uint8_t DSP_conf_mask2 = 0b00010010;
	int check=0;

	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001930:	2501      	movs	r5, #1
 8001932:	2664      	movs	r6, #100	@ 0x64
 8001934:	ab05      	add	r3, sp, #20
	uint8_t OSR_tmask = 0b01111011;
 8001936:	f88d 1014 	strb.w	r1, [sp, #20]
	uint8_t ODR_tmask = 0b01101001;
 800193a:	f88d 2015 	strb.w	r2, [sp, #21]
	uint8_t DSP_conf_mask = 0b00101011;
 800193e:	212b      	movs	r1, #43	@ 0x2b
	uint8_t DSP_conf_mask2 = 0b00010010;
 8001940:	2212      	movs	r2, #18
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001942:	9300      	str	r3, [sp, #0]
	uint8_t DSP_conf_mask = 0b00101011;
 8001944:	f88d 1016 	strb.w	r1, [sp, #22]
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001948:	462b      	mov	r3, r5
	uint8_t DSP_conf_mask2 = 0b00010010;
 800194a:	f88d 2017 	strb.w	r2, [sp, #23]
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 800194e:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001952:	2236      	movs	r2, #54	@ 0x36
 8001954:	218e      	movs	r1, #142	@ 0x8e
 8001956:	4823      	ldr	r0, [pc, #140]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
 8001958:	f005 fa24 	bl	8006da4 <HAL_I2C_Mem_Write>
			check=1;
		}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800195c:	f10d 0315 	add.w	r3, sp, #21
 8001960:	9300      	str	r3, [sp, #0]
 8001962:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001966:	462b      	mov	r3, r5
 8001968:	2237      	movs	r2, #55	@ 0x37
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 800196a:	4604      	mov	r4, r0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800196c:	218e      	movs	r1, #142	@ 0x8e
 800196e:	481d      	ldr	r0, [pc, #116]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
 8001970:	f005 fa18 	bl	8006da4 <HAL_I2C_Mem_Write>
 8001974:	4304      	orrs	r4, r0
					check=1;
				}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 8001976:	f10d 0316 	add.w	r3, sp, #22
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800197a:	b2e4      	uxtb	r4, r4
 800197c:	3c00      	subs	r4, #0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 800197e:	9300      	str	r3, [sp, #0]
 8001980:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001984:	462b      	mov	r3, r5
 8001986:	f04f 0230 	mov.w	r2, #48	@ 0x30
 800198a:	f04f 018e 	mov.w	r1, #142	@ 0x8e
 800198e:	4815      	ldr	r0, [pc, #84]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 8001990:	bf18      	it	ne
 8001992:	2401      	movne	r4, #1
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 8001994:	f005 fa06 	bl	8006da4 <HAL_I2C_Mem_Write>
				check=1;
			}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 8001998:	f10d 0317 	add.w	r3, sp, #23
				check=1;
 800199c:	2800      	cmp	r0, #0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 800199e:	9300      	str	r3, [sp, #0]
 80019a0:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80019a4:	462b      	mov	r3, r5
 80019a6:	f04f 0230 	mov.w	r2, #48	@ 0x30
 80019aa:	f04f 018e 	mov.w	r1, #142	@ 0x8e
 80019ae:	480d      	ldr	r0, [pc, #52]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
				check=1;
 80019b0:	bf18      	it	ne
 80019b2:	462c      	movne	r4, r5
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 80019b4:	f005 f9f6 	bl	8006da4 <HAL_I2C_Mem_Write>
					check=1;
				}
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019b8:	4b0b      	ldr	r3, [pc, #44]	@ (80019e8 <bmp581_init_precise_normal+0xc0>)
 80019ba:	9300      	str	r3, [sp, #0]
					check=1;
 80019bc:	2800      	cmp	r0, #0
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019be:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80019c2:	462b      	mov	r3, r5
 80019c4:	f04f 0238 	mov.w	r2, #56	@ 0x38
 80019c8:	f04f 018f 	mov.w	r1, #143	@ 0x8f
 80019cc:	4805      	ldr	r0, [pc, #20]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
					check=1;
 80019ce:	bf18      	it	ne
 80019d0:	462c      	movne	r4, r5
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019d2:	f005 fae3 	bl	8006f9c <HAL_I2C_Mem_Read>
 80019d6:	2800      	cmp	r0, #0
				}


	return check;

}
 80019d8:	bf0c      	ite	eq
 80019da:	4620      	moveq	r0, r4
 80019dc:	4628      	movne	r0, r5
 80019de:	b006      	add	sp, #24
 80019e0:	bd70      	pop	{r4, r5, r6, pc}
 80019e2:	bf00      	nop
 80019e4:	20000478 	.word	0x20000478
 80019e8:	20000400 	.word	0x20000400
 80019ec:	00000000 	.word	0x00000000

080019f0 <bmp581_read_precise_normal>:




uint8_t bmp581_read_precise_normal(BMP_t * bmp581){
 80019f0:	b570      	push	{r4, r5, r6, lr}
 80019f2:	b086      	sub	sp, #24
//			check=1;
//		}
//		if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_PRESS_DATA_MSB, 1, &recarray[5], 1, 100)!=HAL_OK){
//			check=1;
//		}
		if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_TEMP_DATA_XLSB, 1, &recarray, 6, 100)!=HAL_OK){
 80019f4:	2164      	movs	r1, #100	@ 0x64
 80019f6:	2206      	movs	r2, #6
 80019f8:	ab04      	add	r3, sp, #16
 80019fa:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80019fe:	9300      	str	r3, [sp, #0]
 8001a00:	4829      	ldr	r0, [pc, #164]	@ (8001aa8 <bmp581_read_precise_normal+0xb8>)
 8001a02:	2301      	movs	r3, #1
 8001a04:	221d      	movs	r2, #29
 8001a06:	218f      	movs	r1, #143	@ 0x8f
 8001a08:	f005 fac8 	bl	8006f9c <HAL_I2C_Mem_Read>
 8001a0c:	2800      	cmp	r0, #0
 8001a0e:	d141      	bne.n	8001a94 <bmp581_read_precise_normal+0xa4>
				}


		if(check==0){

		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a10:	f89d 3011 	ldrb.w	r3, [sp, #17]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a14:	f89d 5014 	ldrb.w	r5, [sp, #20]
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a18:	f89d 1012 	ldrb.w	r1, [sp, #18]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a1c:	f89d 2015 	ldrb.w	r2, [sp, #21]
		bmptemp=(double)intbuffertemp/65536.0;
 8001a20:	4e22      	ldr	r6, [pc, #136]	@ (8001aac <bmp581_read_precise_normal+0xbc>)
 8001a22:	4604      	mov	r4, r0
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a24:	021b      	lsls	r3, r3, #8
 8001a26:	f89d 0010 	ldrb.w	r0, [sp, #16]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a2a:	022d      	lsls	r5, r5, #8
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a2c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a30:	ea45 4502 	orr.w	r5, r5, r2, lsl #16
 8001a34:	f89d 2013 	ldrb.w	r2, [sp, #19]
		bmptemp=(double)intbuffertemp/65536.0;
 8001a38:	4318      	orrs	r0, r3
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a3a:	4315      	orrs	r5, r2
		bmptemp=(double)intbuffertemp/65536.0;
 8001a3c:	f7fe fd4a 	bl	80004d4 <__aeabi_i2d>
 8001a40:	4b1b      	ldr	r3, [pc, #108]	@ (8001ab0 <bmp581_read_precise_normal+0xc0>)
 8001a42:	2200      	movs	r2, #0
 8001a44:	f7fe fdb0 	bl	80005a8 <__aeabi_dmul>
 8001a48:	4602      	mov	r2, r0
 8001a4a:	460b      	mov	r3, r1
 8001a4c:	e9c6 2300 	strd	r2, r3, [r6]
		bmppress=(double) intbufferpres/64.0;
 8001a50:	4628      	mov	r0, r5
 8001a52:	f7fe fd3f 	bl	80004d4 <__aeabi_i2d>
 8001a56:	4b17      	ldr	r3, [pc, #92]	@ (8001ab4 <bmp581_read_precise_normal+0xc4>)
		bmpalt=(double) ((8.314*298.15)/(9.80665*0.028964))*log(P0/(bmppress));
 8001a58:	4d17      	ldr	r5, [pc, #92]	@ (8001ab8 <bmp581_read_precise_normal+0xc8>)
		bmppress=(double) intbufferpres/64.0;
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	f7fe fda4 	bl	80005a8 <__aeabi_dmul>
 8001a60:	460b      	mov	r3, r1
 8001a62:	4916      	ldr	r1, [pc, #88]	@ (8001abc <bmp581_read_precise_normal+0xcc>)
 8001a64:	4602      	mov	r2, r0
 8001a66:	e9c1 2300 	strd	r2, r3, [r1]
		bmpalt=(double) ((8.314*298.15)/(9.80665*0.028964))*log(P0/(bmppress));
 8001a6a:	e9d5 0100 	ldrd	r0, r1, [r5]
 8001a6e:	f7fe fec5 	bl	80007fc <__aeabi_ddiv>
 8001a72:	ec41 0b10 	vmov	d0, r0, r1
 8001a76:	f012 f867 	bl	8013b48 <log>
 8001a7a:	a309      	add	r3, pc, #36	@ (adr r3, 8001aa0 <bmp581_read_precise_normal+0xb0>)
 8001a7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a80:	ec51 0b10 	vmov	r0, r1, d0
 8001a84:	f7fe fd90 	bl	80005a8 <__aeabi_dmul>
 8001a88:	4d0d      	ldr	r5, [pc, #52]	@ (8001ac0 <bmp581_read_precise_normal+0xd0>)
 8001a8a:	e9c5 0100 	strd	r0, r1, [r5]

		}

		return check;
}
 8001a8e:	4620      	mov	r0, r4
 8001a90:	b006      	add	sp, #24
 8001a92:	bd70      	pop	{r4, r5, r6, pc}
 8001a94:	2401      	movs	r4, #1
 8001a96:	4620      	mov	r0, r4
 8001a98:	b006      	add	sp, #24
 8001a9a:	bd70      	pop	{r4, r5, r6, pc}
 8001a9c:	f3af 8000 	nop.w
 8001aa0:	a7b85a1b 	.word	0xa7b85a1b
 8001aa4:	40c10b81 	.word	0x40c10b81
 8001aa8:	20000478 	.word	0x20000478
 8001aac:	20000418 	.word	0x20000418
 8001ab0:	3ef00000 	.word	0x3ef00000
 8001ab4:	3f900000 	.word	0x3f900000
 8001ab8:	20000010 	.word	0x20000010
 8001abc:	20000410 	.word	0x20000410
 8001ac0:	20000408 	.word	0x20000408

08001ac4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001ac4:	b510      	push	{r4, lr}
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001ac6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001aca:	b082      	sub	sp, #8
 8001acc:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8001ace:	f040 0004 	orr.w	r0, r0, #4
 8001ad2:	6498      	str	r0, [r3, #72]	@ 0x48
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001ad4:	6c9c      	ldr	r4, [r3, #72]	@ 0x48
 8001ad6:	f004 0404 	and.w	r4, r4, #4
 8001ada:	9401      	str	r4, [sp, #4]
  (void)tmpreg;
 8001adc:	9c01      	ldr	r4, [sp, #4]
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001ade:	6c9c      	ldr	r4, [r3, #72]	@ 0x48
 8001ae0:	f044 0401 	orr.w	r4, r4, #1
 8001ae4:	649c      	str	r4, [r3, #72]	@ 0x48
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001ae6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ae8:	f003 0301 	and.w	r3, r3, #1
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
  __HAL_RCC_DMA1_CLK_ENABLE();

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 5, 0);
 8001aec:	2200      	movs	r2, #0
 8001aee:	2105      	movs	r1, #5
 8001af0:	9300      	str	r3, [sp, #0]
 8001af2:	200b      	movs	r0, #11
  (void)tmpreg;
 8001af4:	9b00      	ldr	r3, [sp, #0]
 8001af6:	f004 fa77 	bl	8005fe8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001afa:	200b      	movs	r0, #11
 8001afc:	f004 fab0 	bl	8006060 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 6, 0);
 8001b00:	2200      	movs	r2, #0
 8001b02:	2106      	movs	r1, #6
 8001b04:	200c      	movs	r0, #12
 8001b06:	f004 fa6f 	bl	8005fe8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 8001b0a:	200c      	movs	r0, #12
 8001b0c:	f004 faa8 	bl	8006060 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 5, 0);
 8001b10:	2200      	movs	r2, #0
 8001b12:	2105      	movs	r1, #5
 8001b14:	200d      	movs	r0, #13
 8001b16:	f004 fa67 	bl	8005fe8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b1a:	200d      	movs	r0, #13

}
 8001b1c:	b002      	add	sp, #8
 8001b1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b22:	f004 ba9d 	b.w	8006060 <HAL_NVIC_EnableIRQ>
 8001b26:	bf00      	nop

08001b28 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001b28:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2a:	2400      	movs	r4, #0
{
 8001b2c:	b08a      	sub	sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001b32:	e9cd 4406 	strd	r4, r4, [sp, #24]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b36:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001b3a:	9408      	str	r4, [sp, #32]
 8001b3c:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|SPI_CS_Pin, GPIO_PIN_RESET);
 8001b3e:	4e27      	ldr	r6, [pc, #156]	@ (8001bdc <MX_GPIO_Init+0xb4>)
 8001b40:	f041 0104 	orr.w	r1, r1, #4
 8001b44:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b46:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b48:	f001 0104 	and.w	r1, r1, #4
 8001b4c:	9103      	str	r1, [sp, #12]
  (void)tmpreg;
 8001b4e:	9903      	ldr	r1, [sp, #12]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b50:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b52:	f041 0102 	orr.w	r1, r1, #2
 8001b56:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b58:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b5a:	f001 0102 	and.w	r1, r1, #2
 8001b5e:	9102      	str	r1, [sp, #8]
  (void)tmpreg;
 8001b60:	9902      	ldr	r1, [sp, #8]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b62:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b64:	f041 0101 	orr.w	r1, r1, #1
 8001b68:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b6a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b6c:	f003 0301 	and.w	r3, r3, #1
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 8001b70:	4622      	mov	r2, r4
 8001b72:	9301      	str	r3, [sp, #4]
 8001b74:	2101      	movs	r1, #1
 8001b76:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8001b7a:	9b01      	ldr	r3, [sp, #4]
 8001b7c:	f004 fdc8 	bl	8006710 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|SPI_CS_Pin, GPIO_PIN_RESET);
 8001b80:	4622      	mov	r2, r4
 8001b82:	4630      	mov	r0, r6
 8001b84:	2183      	movs	r1, #131	@ 0x83
 8001b86:	f004 fdc3 	bl	8006710 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC14 PC15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001b8a:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001b8e:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b92:	a904      	add	r1, sp, #16
 8001b94:	4812      	ldr	r0, [pc, #72]	@ (8001be0 <MX_GPIO_Init+0xb8>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b96:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001b98:	e9cd 2304 	strd	r2, r3, [sp, #16]

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001b9c:	2501      	movs	r5, #1
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b9e:	f004 fc15 	bl	80063cc <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba2:	a904      	add	r1, sp, #16
 8001ba4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ba8:	e9cd 5504 	strd	r5, r5, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bac:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb0:	f004 fc0c 	bl	80063cc <HAL_GPIO_Init>

  /*Configure GPIO pins : LED0_Pin LED1_Pin SPI_CS_Pin */
  GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin|SPI_CS_Pin;
 8001bb4:	2383      	movs	r3, #131	@ 0x83
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb6:	a904      	add	r1, sp, #16
 8001bb8:	4630      	mov	r0, r6
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	e9cd 3504 	strd	r3, r5, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bbe:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc2:	f004 fc03 	bl	80063cc <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001bc6:	4622      	mov	r2, r4
 8001bc8:	2105      	movs	r1, #5
 8001bca:	2028      	movs	r0, #40	@ 0x28
 8001bcc:	f004 fa0c 	bl	8005fe8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001bd0:	2028      	movs	r0, #40	@ 0x28
 8001bd2:	f004 fa45 	bl	8006060 <HAL_NVIC_EnableIRQ>

}
 8001bd6:	b00a      	add	sp, #40	@ 0x28
 8001bd8:	bd70      	pop	{r4, r5, r6, pc}
 8001bda:	bf00      	nop
 8001bdc:	48000400 	.word	0x48000400
 8001be0:	48000800 	.word	0x48000800

08001be4 <MX_I2C1_Init>:
I2C_HandleTypeDef hi2c1;
I2C_HandleTypeDef hi2c3;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8001be4:	b510      	push	{r4, lr}
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001be6:	4818      	ldr	r0, [pc, #96]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001be8:	4c18      	ldr	r4, [pc, #96]	@ (8001c4c <MX_I2C1_Init+0x68>)
  hi2c1.Init.Timing = 0x10B17DB5;
 8001bea:	4919      	ldr	r1, [pc, #100]	@ (8001c50 <MX_I2C1_Init+0x6c>)
 8001bec:	2300      	movs	r3, #0
 8001bee:	2201      	movs	r2, #1
 8001bf0:	e9c0 4100 	strd	r4, r1, [r0]
 8001bf4:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8001bf8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001bfc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8001c00:	6203      	str	r3, [r0, #32]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001c02:	f005 f875 	bl	8006cf0 <HAL_I2C_Init>
 8001c06:	b950      	cbnz	r0, 8001c1e <MX_I2C1_Init+0x3a>
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c08:	480f      	ldr	r0, [pc, #60]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	f005 fac4 	bl	8007198 <HAL_I2CEx_ConfigAnalogFilter>
 8001c10:	b968      	cbnz	r0, 8001c2e <MX_I2C1_Init+0x4a>
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001c12:	480d      	ldr	r0, [pc, #52]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c14:	2100      	movs	r1, #0
 8001c16:	f005 fae9 	bl	80071ec <HAL_I2CEx_ConfigDigitalFilter>
 8001c1a:	b980      	cbnz	r0, 8001c3e <MX_I2C1_Init+0x5a>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001c1c:	bd10      	pop	{r4, pc}
    Error_Handler();
 8001c1e:	f000 fb33 	bl	8002288 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c22:	4809      	ldr	r0, [pc, #36]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c24:	2100      	movs	r1, #0
 8001c26:	f005 fab7 	bl	8007198 <HAL_I2CEx_ConfigAnalogFilter>
 8001c2a:	2800      	cmp	r0, #0
 8001c2c:	d0f1      	beq.n	8001c12 <MX_I2C1_Init+0x2e>
    Error_Handler();
 8001c2e:	f000 fb2b 	bl	8002288 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001c32:	4805      	ldr	r0, [pc, #20]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c34:	2100      	movs	r1, #0
 8001c36:	f005 fad9 	bl	80071ec <HAL_I2CEx_ConfigDigitalFilter>
 8001c3a:	2800      	cmp	r0, #0
 8001c3c:	d0ee      	beq.n	8001c1c <MX_I2C1_Init+0x38>
}
 8001c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8001c42:	f000 bb21 	b.w	8002288 <Error_Handler>
 8001c46:	bf00      	nop
 8001c48:	20000478 	.word	0x20000478
 8001c4c:	40005400 	.word	0x40005400
 8001c50:	10b17db5 	.word	0x10b17db5

08001c54 <MX_I2C3_Init>:
/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8001c54:	b510      	push	{r4, lr}
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8001c56:	481c      	ldr	r0, [pc, #112]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c58:	4c1c      	ldr	r4, [pc, #112]	@ (8001ccc <MX_I2C3_Init+0x78>)
  hi2c3.Init.Timing = 0x00910B1C;
 8001c5a:	491d      	ldr	r1, [pc, #116]	@ (8001cd0 <MX_I2C3_Init+0x7c>)
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	2201      	movs	r2, #1
 8001c60:	e9c0 4100 	strd	r4, r1, [r0]
 8001c64:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8001c68:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001c6c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8001c70:	6203      	str	r3, [r0, #32]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c3.Init.OwnAddress2 = 0;
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c72:	f005 f83d 	bl	8006cf0 <HAL_I2C_Init>
 8001c76:	b978      	cbnz	r0, 8001c98 <MX_I2C3_Init+0x44>
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c78:	4813      	ldr	r0, [pc, #76]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c7a:	2100      	movs	r1, #0
 8001c7c:	f005 fa8c 	bl	8007198 <HAL_I2CEx_ConfigAnalogFilter>
 8001c80:	b990      	cbnz	r0, 8001ca8 <MX_I2C3_Init+0x54>
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c82:	4811      	ldr	r0, [pc, #68]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c84:	2100      	movs	r1, #0
 8001c86:	f005 fab1 	bl	80071ec <HAL_I2CEx_ConfigDigitalFilter>
 8001c8a:	b9a8      	cbnz	r0, 8001cb8 <MX_I2C3_Init+0x64>
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
 8001c90:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8001c94:	f005 bad6 	b.w	8007244 <HAL_I2CEx_EnableFastModePlus>
    Error_Handler();
 8001c98:	f000 faf6 	bl	8002288 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c9c:	480a      	ldr	r0, [pc, #40]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c9e:	2100      	movs	r1, #0
 8001ca0:	f005 fa7a 	bl	8007198 <HAL_I2CEx_ConfigAnalogFilter>
 8001ca4:	2800      	cmp	r0, #0
 8001ca6:	d0ec      	beq.n	8001c82 <MX_I2C3_Init+0x2e>
    Error_Handler();
 8001ca8:	f000 faee 	bl	8002288 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001cac:	4806      	ldr	r0, [pc, #24]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001cae:	2100      	movs	r1, #0
 8001cb0:	f005 fa9c 	bl	80071ec <HAL_I2CEx_ConfigDigitalFilter>
 8001cb4:	2800      	cmp	r0, #0
 8001cb6:	d0e9      	beq.n	8001c8c <MX_I2C3_Init+0x38>
    Error_Handler();
 8001cb8:	f000 fae6 	bl	8002288 <Error_Handler>
}
 8001cbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
 8001cc0:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8001cc4:	f005 babe 	b.w	8007244 <HAL_I2CEx_EnableFastModePlus>
 8001cc8:	20000420 	.word	0x20000420
 8001ccc:	40005c00 	.word	0x40005c00
 8001cd0:	00910b1c 	.word	0x00910b1c

08001cd4 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cd6:	4604      	mov	r4, r0
 8001cd8:	b0a1      	sub	sp, #132	@ 0x84

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cda:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cdc:	2250      	movs	r2, #80	@ 0x50
 8001cde:	a80c      	add	r0, sp, #48	@ 0x30
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ce0:	e9cd 1106 	strd	r1, r1, [sp, #24]
 8001ce4:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001ce8:	910a      	str	r1, [sp, #40]	@ 0x28
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cea:	f00e fbcc 	bl	8010486 <memset>
  if(i2cHandle->Instance==I2C1)
 8001cee:	4a40      	ldr	r2, [pc, #256]	@ (8001df0 <HAL_I2C_MspInit+0x11c>)
 8001cf0:	6823      	ldr	r3, [r4, #0]
 8001cf2:	4293      	cmp	r3, r2
 8001cf4:	d004      	beq.n	8001d00 <HAL_I2C_MspInit+0x2c>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
  else if(i2cHandle->Instance==I2C3)
 8001cf6:	4a3f      	ldr	r2, [pc, #252]	@ (8001df4 <HAL_I2C_MspInit+0x120>)
 8001cf8:	4293      	cmp	r3, r2
 8001cfa:	d030      	beq.n	8001d5e <HAL_I2C_MspInit+0x8a>
    __HAL_RCC_I2C3_CLK_ENABLE();
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8001cfc:	b021      	add	sp, #132	@ 0x84
 8001cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001d00:	2204      	movs	r2, #4
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001d02:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d06:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001d08:	920c      	str	r2, [sp, #48]	@ 0x30
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001d0a:	9314      	str	r3, [sp, #80]	@ 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d0c:	f007 f982 	bl	8009014 <HAL_RCCEx_PeriphCLKConfig>
 8001d10:	2800      	cmp	r0, #0
 8001d12:	d167      	bne.n	8001de4 <HAL_I2C_MspInit+0x110>
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d14:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d18:	4837      	ldr	r0, [pc, #220]	@ (8001df8 <HAL_I2C_MspInit+0x124>)
 8001d1a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d1c:	f043 0302 	orr.w	r3, r3, #2
 8001d20:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d22:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d24:	f003 0302 	and.w	r3, r3, #2
 8001d28:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001d2a:	2304      	movs	r3, #4
  (void)tmpreg;
 8001d2c:	9a02      	ldr	r2, [sp, #8]
 8001d2e:	930a      	str	r3, [sp, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001d30:	2200      	movs	r2, #0
 8001d32:	2300      	movs	r3, #0
 8001d34:	f44f 7640 	mov.w	r6, #768	@ 0x300
 8001d38:	2712      	movs	r7, #18
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d3a:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001d3c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001d40:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d44:	f004 fb42 	bl	80063cc <HAL_GPIO_Init>
  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR1, Periphs);
 8001d48:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d4a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001d4e:	65a3      	str	r3, [r4, #88]	@ 0x58
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8001d50:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d52:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001d56:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8001d58:	9b01      	ldr	r3, [sp, #4]
}
 8001d5a:	b021      	add	sp, #132	@ 0x84
 8001d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001d5e:	2208      	movs	r2, #8
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8001d60:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d64:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001d66:	920c      	str	r2, [sp, #48]	@ 0x30
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8001d68:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d6a:	f007 f953 	bl	8009014 <HAL_RCCEx_PeriphCLKConfig>
 8001d6e:	2800      	cmp	r0, #0
 8001d70:	d13b      	bne.n	8001dea <HAL_I2C_MspInit+0x116>
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d72:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001d76:	2080      	movs	r0, #128	@ 0x80
 8001d78:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d7a:	f043 0301 	orr.w	r3, r3, #1
 8001d7e:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d80:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d82:	f003 0301 	and.w	r3, r3, #1
 8001d86:	9305      	str	r3, [sp, #20]
  (void)tmpreg;
 8001d88:	9b05      	ldr	r3, [sp, #20]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d8a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d8c:	f043 0302 	orr.w	r3, r3, #2
 8001d90:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d92:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d94:	2112      	movs	r1, #18
 8001d96:	f003 0302 	and.w	r3, r3, #2
 8001d9a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8001d9e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001da0:	2504      	movs	r5, #4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da2:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001da4:	2600      	movs	r6, #0
 8001da6:	2700      	movs	r7, #0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8001dac:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dae:	950a      	str	r5, [sp, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001db0:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001db4:	f004 fb0a 	bl	80063cc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001db8:	2210      	movs	r2, #16
 8001dba:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dbc:	480e      	ldr	r0, [pc, #56]	@ (8001df8 <HAL_I2C_MspInit+0x124>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dbe:	950a      	str	r5, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dc0:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001dc2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001dc6:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dca:	f004 faff 	bl	80063cc <HAL_GPIO_Init>
  SET_BIT(RCC->APB1ENR1, Periphs);
 8001dce:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001dd0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001dd4:	65a3      	str	r3, [r4, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8001dd6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001dd8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001ddc:	9303      	str	r3, [sp, #12]
  (void)tmpreg;
 8001dde:	9b03      	ldr	r3, [sp, #12]
}
 8001de0:	b021      	add	sp, #132	@ 0x84
 8001de2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      Error_Handler();
 8001de4:	f000 fa50 	bl	8002288 <Error_Handler>
 8001de8:	e794      	b.n	8001d14 <HAL_I2C_MspInit+0x40>
      Error_Handler();
 8001dea:	f000 fa4d 	bl	8002288 <Error_Handler>
 8001dee:	e7c0      	b.n	8001d72 <HAL_I2C_MspInit+0x9e>
 8001df0:	40005400 	.word	0x40005400
 8001df4:	40005c00 	.word	0x40005c00
 8001df8:	48000400 	.word	0x48000400

08001dfc <MX_IPCC_Init>:
  /* USER CODE END IPCC_Init 0 */

  /* USER CODE BEGIN IPCC_Init 1 */

  /* USER CODE END IPCC_Init 1 */
  hipcc.Instance = IPCC;
 8001dfc:	4805      	ldr	r0, [pc, #20]	@ (8001e14 <MX_IPCC_Init+0x18>)
{
 8001dfe:	b508      	push	{r3, lr}
  hipcc.Instance = IPCC;
 8001e00:	4b05      	ldr	r3, [pc, #20]	@ (8001e18 <MX_IPCC_Init+0x1c>)
 8001e02:	6003      	str	r3, [r0, #0]
  if (HAL_IPCC_Init(&hipcc) != HAL_OK)
 8001e04:	f005 fa2a 	bl	800725c <HAL_IPCC_Init>
 8001e08:	b900      	cbnz	r0, 8001e0c <MX_IPCC_Init+0x10>
  }
  /* USER CODE BEGIN IPCC_Init 2 */

  /* USER CODE END IPCC_Init 2 */

}
 8001e0a:	bd08      	pop	{r3, pc}
 8001e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8001e10:	f000 ba3a 	b.w	8002288 <Error_Handler>
 8001e14:	200004cc 	.word	0x200004cc
 8001e18:	58000c00 	.word	0x58000c00

08001e1c <HAL_IPCC_MspInit>:

void HAL_IPCC_MspInit(IPCC_HandleTypeDef* ipccHandle)
{

  if(ipccHandle->Instance==IPCC)
 8001e1c:	4b12      	ldr	r3, [pc, #72]	@ (8001e68 <HAL_IPCC_MspInit+0x4c>)
 8001e1e:	6802      	ldr	r2, [r0, #0]
 8001e20:	429a      	cmp	r2, r3
 8001e22:	d000      	beq.n	8001e26 <HAL_IPCC_MspInit+0xa>
 8001e24:	4770      	bx	lr
{
 8001e26:	b500      	push	{lr}
  SET_BIT(RCC->AHB3ENR, Periphs);
 8001e28:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001e2c:	b083      	sub	sp, #12
 8001e2e:	6d18      	ldr	r0, [r3, #80]	@ 0x50
 8001e30:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 8001e34:	6518      	str	r0, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 8001e36:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001e38:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
  /* USER CODE END IPCC_MspInit 0 */
    /* IPCC clock enable */
    __HAL_RCC_IPCC_CLK_ENABLE();

    /* IPCC interrupt Init */
    HAL_NVIC_SetPriority(IPCC_C1_RX_IRQn, 5, 0);
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	2105      	movs	r1, #5
 8001e40:	9301      	str	r3, [sp, #4]
 8001e42:	202c      	movs	r0, #44	@ 0x2c
  (void)tmpreg;
 8001e44:	9b01      	ldr	r3, [sp, #4]
 8001e46:	f004 f8cf 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(IPCC_C1_RX_IRQn);
 8001e4a:	202c      	movs	r0, #44	@ 0x2c
 8001e4c:	f004 f908 	bl	8006060 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(IPCC_C1_TX_IRQn, 5, 0);
 8001e50:	2200      	movs	r2, #0
 8001e52:	2105      	movs	r1, #5
 8001e54:	202d      	movs	r0, #45	@ 0x2d
 8001e56:	f004 f8c7 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(IPCC_C1_TX_IRQn);
 8001e5a:	202d      	movs	r0, #45	@ 0x2d
  /* USER CODE BEGIN IPCC_MspInit 1 */

  /* USER CODE END IPCC_MspInit 1 */
  }
}
 8001e5c:	b003      	add	sp, #12
 8001e5e:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(IPCC_C1_TX_IRQn);
 8001e62:	f004 b8fd 	b.w	8006060 <HAL_NVIC_EnableIRQ>
 8001e66:	bf00      	nop
 8001e68:	58000c00 	.word	0x58000c00

08001e6c <HAL_GPIO_EXTI_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)//lors d'un appuie sur un bouton, le systeme s'interrompt afin d'arriver dans cette fonction redefinie avec en parametre d'entre , le bouton sur lequel l'on a appuiyé
{
	if(GPIO_Pin==GPIO_PIN_14){
 8001e6c:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
{
 8001e70:	b510      	push	{r4, lr}
 8001e72:	4601      	mov	r1, r0
	if(GPIO_Pin==GPIO_PIN_14){
 8001e74:	d023      	beq.n	8001ebe <HAL_GPIO_EXTI_Callback+0x52>
			BTN_A_LONG++;
			BTN_A=0;
		}

	}
	if(GPIO_Pin==GPIO_PIN_15){
 8001e76:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8001e7a:	d000      	beq.n	8001e7e <HAL_GPIO_EXTI_Callback+0x12>
		}



	}
}
 8001e7c:	bd10      	pop	{r4, pc}
		if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_15)== GPIO_PIN_RESET){
 8001e7e:	482b      	ldr	r0, [pc, #172]	@ (8001f2c <HAL_GPIO_EXTI_Callback+0xc0>)
 8001e80:	f004 fc40 	bl	8006704 <HAL_GPIO_ReadPin>
 8001e84:	2800      	cmp	r0, #0
 8001e86:	d047      	beq.n	8001f18 <HAL_GPIO_EXTI_Callback+0xac>
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e88:	f003 fc6c 	bl	8005764 <HAL_GetTick>
 8001e8c:	4a28      	ldr	r2, [pc, #160]	@ (8001f30 <HAL_GPIO_EXTI_Callback+0xc4>)
 8001e8e:	4c29      	ldr	r4, [pc, #164]	@ (8001f34 <HAL_GPIO_EXTI_Callback+0xc8>)
 8001e90:	6813      	ldr	r3, [r2, #0]
			tbtn2=0;
 8001e92:	2100      	movs	r1, #0
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e94:	1ac0      	subs	r0, r0, r3
 8001e96:	4603      	mov	r3, r0
 8001e98:	6020      	str	r0, [r4, #0]
			tbtn2=0;
 8001e9a:	6011      	str	r1, [r2, #0]
		if(boutonBtime>=50 && boutonBtime<=400){
 8001e9c:	3832      	subs	r0, #50	@ 0x32
 8001e9e:	f5b0 7faf 	cmp.w	r0, #350	@ 0x15e
 8001ea2:	d806      	bhi.n	8001eb2 <HAL_GPIO_EXTI_Callback+0x46>
			BTN_B++;
 8001ea4:	4924      	ldr	r1, [pc, #144]	@ (8001f38 <HAL_GPIO_EXTI_Callback+0xcc>)
			BTN_B_LONG=0;
 8001ea6:	4825      	ldr	r0, [pc, #148]	@ (8001f3c <HAL_GPIO_EXTI_Callback+0xd0>)
			BTN_B++;
 8001ea8:	680a      	ldr	r2, [r1, #0]
			BTN_B_LONG=0;
 8001eaa:	2400      	movs	r4, #0
			BTN_B++;
 8001eac:	3201      	adds	r2, #1
 8001eae:	600a      	str	r2, [r1, #0]
			BTN_B_LONG=0;
 8001eb0:	6004      	str	r4, [r0, #0]
		if(boutonBtime>=400){
 8001eb2:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 8001eb6:	dbe1      	blt.n	8001e7c <HAL_GPIO_EXTI_Callback+0x10>
			BTN_B_LONG++;
 8001eb8:	4a20      	ldr	r2, [pc, #128]	@ (8001f3c <HAL_GPIO_EXTI_Callback+0xd0>)
			BTN_B=0;
 8001eba:	491f      	ldr	r1, [pc, #124]	@ (8001f38 <HAL_GPIO_EXTI_Callback+0xcc>)
 8001ebc:	e01d      	b.n	8001efa <HAL_GPIO_EXTI_Callback+0x8e>
		if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)== GPIO_PIN_RESET){
 8001ebe:	481b      	ldr	r0, [pc, #108]	@ (8001f2c <HAL_GPIO_EXTI_Callback+0xc0>)
 8001ec0:	f004 fc20 	bl	8006704 <HAL_GPIO_ReadPin>
 8001ec4:	b1f8      	cbz	r0, 8001f06 <HAL_GPIO_EXTI_Callback+0x9a>
					boutonAtime=HAL_GetTick()-tbtn1;
 8001ec6:	f003 fc4d 	bl	8005764 <HAL_GetTick>
 8001eca:	4a1d      	ldr	r2, [pc, #116]	@ (8001f40 <HAL_GPIO_EXTI_Callback+0xd4>)
 8001ecc:	4c1d      	ldr	r4, [pc, #116]	@ (8001f44 <HAL_GPIO_EXTI_Callback+0xd8>)
 8001ece:	6813      	ldr	r3, [r2, #0]
					tbtn1=0;
 8001ed0:	2100      	movs	r1, #0
					boutonAtime=HAL_GetTick()-tbtn1;
 8001ed2:	1ac0      	subs	r0, r0, r3
 8001ed4:	4603      	mov	r3, r0
 8001ed6:	6020      	str	r0, [r4, #0]
					tbtn1=0;
 8001ed8:	6011      	str	r1, [r2, #0]
		if(boutonAtime>=50 && boutonAtime<=400){
 8001eda:	3832      	subs	r0, #50	@ 0x32
 8001edc:	f5b0 7faf 	cmp.w	r0, #350	@ 0x15e
 8001ee0:	d806      	bhi.n	8001ef0 <HAL_GPIO_EXTI_Callback+0x84>
			BTN_A++;
 8001ee2:	4919      	ldr	r1, [pc, #100]	@ (8001f48 <HAL_GPIO_EXTI_Callback+0xdc>)
			BTN_A_LONG=0;
 8001ee4:	4819      	ldr	r0, [pc, #100]	@ (8001f4c <HAL_GPIO_EXTI_Callback+0xe0>)
			BTN_A++;
 8001ee6:	680a      	ldr	r2, [r1, #0]
			BTN_A_LONG=0;
 8001ee8:	2400      	movs	r4, #0
			BTN_A++;
 8001eea:	3201      	adds	r2, #1
 8001eec:	600a      	str	r2, [r1, #0]
			BTN_A_LONG=0;
 8001eee:	6004      	str	r4, [r0, #0]
		if(boutonAtime>=400){
 8001ef0:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 8001ef4:	dbc2      	blt.n	8001e7c <HAL_GPIO_EXTI_Callback+0x10>
			BTN_A_LONG++;
 8001ef6:	4a15      	ldr	r2, [pc, #84]	@ (8001f4c <HAL_GPIO_EXTI_Callback+0xe0>)
			BTN_A=0;
 8001ef8:	4913      	ldr	r1, [pc, #76]	@ (8001f48 <HAL_GPIO_EXTI_Callback+0xdc>)
			BTN_B_LONG++;
 8001efa:	6813      	ldr	r3, [r2, #0]
			BTN_B=0;
 8001efc:	2000      	movs	r0, #0
			BTN_B_LONG++;
 8001efe:	3301      	adds	r3, #1
 8001f00:	6013      	str	r3, [r2, #0]
			BTN_B=0;
 8001f02:	6008      	str	r0, [r1, #0]
}
 8001f04:	bd10      	pop	{r4, pc}
					boutonAtime=0;
 8001f06:	4c0f      	ldr	r4, [pc, #60]	@ (8001f44 <HAL_GPIO_EXTI_Callback+0xd8>)
 8001f08:	6020      	str	r0, [r4, #0]
					tbtn1=HAL_GetTick();
 8001f0a:	f003 fc2b 	bl	8005764 <HAL_GetTick>
 8001f0e:	4a0c      	ldr	r2, [pc, #48]	@ (8001f40 <HAL_GPIO_EXTI_Callback+0xd4>)
		if(boutonAtime>=50 && boutonAtime<=400){
 8001f10:	6823      	ldr	r3, [r4, #0]
					tbtn1=HAL_GetTick();
 8001f12:	6010      	str	r0, [r2, #0]
		if(boutonAtime>=50 && boutonAtime<=400){
 8001f14:	4618      	mov	r0, r3
 8001f16:	e7e0      	b.n	8001eda <HAL_GPIO_EXTI_Callback+0x6e>
			boutonBtime=0;
 8001f18:	4c06      	ldr	r4, [pc, #24]	@ (8001f34 <HAL_GPIO_EXTI_Callback+0xc8>)
 8001f1a:	6020      	str	r0, [r4, #0]
			tbtn2=HAL_GetTick();
 8001f1c:	f003 fc22 	bl	8005764 <HAL_GetTick>
 8001f20:	4a03      	ldr	r2, [pc, #12]	@ (8001f30 <HAL_GPIO_EXTI_Callback+0xc4>)
		if(boutonBtime>=50 && boutonBtime<=400){
 8001f22:	6823      	ldr	r3, [r4, #0]
			tbtn2=HAL_GetTick();
 8001f24:	6010      	str	r0, [r2, #0]
		if(boutonBtime>=50 && boutonBtime<=400){
 8001f26:	4618      	mov	r0, r3
 8001f28:	e7b8      	b.n	8001e9c <HAL_GPIO_EXTI_Callback+0x30>
 8001f2a:	bf00      	nop
 8001f2c:	48000800 	.word	0x48000800
 8001f30:	200005e8 	.word	0x200005e8
 8001f34:	200005f0 	.word	0x200005f0
 8001f38:	20000ff4 	.word	0x20000ff4
 8001f3c:	200005e4 	.word	0x200005e4
 8001f40:	200005ec 	.word	0x200005ec
 8001f44:	200005f4 	.word	0x200005f4
 8001f48:	20000ff8 	.word	0x20000ff8
 8001f4c:	200005e0 	.word	0x200005e0

08001f50 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001f50:	b510      	push	{r4, lr}
 8001f52:	b09c      	sub	sp, #112	@ 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f54:	2224      	movs	r2, #36	@ 0x24
 8001f56:	2100      	movs	r1, #0
 8001f58:	a80c      	add	r0, sp, #48	@ 0x30
 8001f5a:	f00e fa94 	bl	8010486 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f5e:	2300      	movs	r3, #0
 8001f60:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001f64:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001f68:	e9cd 3306 	strd	r3, r3, [sp, #24]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f6c:	4a24      	ldr	r2, [pc, #144]	@ (8002000 <SystemClock_Config+0xb0>)
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f6e:	9308      	str	r3, [sp, #32]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f70:	6813      	ldr	r3, [r2, #0]
 8001f72:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001f76:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001f7a:	6013      	str	r3, [r2, #0]
 8001f7c:	6813      	ldr	r3, [r2, #0]
 8001f7e:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001f82:	f44f 7180 	mov.w	r1, #256	@ 0x100
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f86:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001f88:	2340      	movs	r3, #64	@ 0x40
 8001f8a:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8001f8e:	ed9f 7b18 	vldr	d7, [pc, #96]	@ 8001ff0 <SystemClock_Config+0xa0>
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 8001f92:	2310      	movs	r3, #16
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001f94:	2202      	movs	r2, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001f96:	2403      	movs	r4, #3
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 8001f98:	9317      	str	r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLN = 8;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001f9a:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001f9e:	e9cd 2415 	strd	r2, r4, [sp, #84]	@ 0x54
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001fa2:	9801      	ldr	r0, [sp, #4]
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001fa4:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001fa6:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001fa8:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001fac:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fb0:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8001fb2:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001fb6:	e9cd 2319 	strd	r2, r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001fba:	9118      	str	r1, [sp, #96]	@ 0x60
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fbc:	f006 fab2 	bl	8008524 <HAL_RCC_OscConfig>
 8001fc0:	b108      	cbz	r0, 8001fc6 <SystemClock_Config+0x76>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001fc2:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001fc4:	e7fe      	b.n	8001fc4 <SystemClock_Config+0x74>
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fc6:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 8001ff8 <SystemClock_Config+0xa8>
 8001fca:	4603      	mov	r3, r0
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 8001fcc:	226f      	movs	r2, #111	@ 0x6f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001fce:	a802      	add	r0, sp, #8
 8001fd0:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fd2:	ed8d 7b06 	vstr	d7, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001fd6:	e9cd 4303 	strd	r4, r3, [sp, #12]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 8001fda:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001fdc:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 8001fde:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001fe0:	f006 fdf6 	bl	8008bd0 <HAL_RCC_ClockConfig>
 8001fe4:	b108      	cbz	r0, 8001fea <SystemClock_Config+0x9a>
 8001fe6:	b672      	cpsid	i
  while (1)
 8001fe8:	e7fe      	b.n	8001fe8 <SystemClock_Config+0x98>
}
 8001fea:	b01c      	add	sp, #112	@ 0x70
 8001fec:	bd10      	pop	{r4, pc}
 8001fee:	bf00      	nop
 8001ff0:	00000003 	.word	0x00000003
 8001ff4:	00010000 	.word	0x00010000
 8001ff8:	00000000 	.word	0x00000000
 8001ffc:	00000080 	.word	0x00000080
 8002000:	58000400 	.word	0x58000400
 8002004:	00000000 	.word	0x00000000

08002008 <PeriphCommonClock_Config>:
{
 8002008:	b510      	push	{r4, lr}
 800200a:	b094      	sub	sp, #80	@ 0x50
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800200c:	2238      	movs	r2, #56	@ 0x38
 800200e:	2100      	movs	r1, #0
 8002010:	a806      	add	r0, sp, #24
 8002012:	f00e fa38 	bl	8010486 <memset>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS|RCC_PERIPHCLK_RFWAKEUP
 8002016:	f44f 5254 	mov.w	r2, #13568	@ 0x3500
  PeriphClkInitStruct.PLLSAI1.PLLN = 6;
 800201a:	2306      	movs	r3, #6
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 800201c:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 8002060 <PeriphCommonClock_Config+0x58>
  PeriphClkInitStruct.PLLSAI1.PLLN = 6;
 8002020:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 8002024:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 8002028:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  PeriphClkInitStruct.PLLSAI1.PLLP = RCC_PLLP_DIV2;
 800202c:	f44f 3400 	mov.w	r4, #131072	@ 0x20000
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 8002030:	e9cd 4002 	strd	r4, r0, [sp, #8]
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 8002034:	f04f 5180 	mov.w	r1, #268435456	@ 0x10000000
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002038:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 800203c:	930d      	str	r3, [sp, #52]	@ 0x34
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800203e:	4668      	mov	r0, sp
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002040:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 8002042:	ed8d 7b04 	vstr	d7, [sp, #16]
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002046:	e9cd 2311 	strd	r2, r3, [sp, #68]	@ 0x44
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 800204a:	910f      	str	r1, [sp, #60]	@ 0x3c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800204c:	f006 ffe2 	bl	8009014 <HAL_RCCEx_PeriphCLKConfig>
 8002050:	b108      	cbz	r0, 8002056 <PeriphCommonClock_Config+0x4e>
 8002052:	b672      	cpsid	i
  while (1)
 8002054:	e7fe      	b.n	8002054 <PeriphCommonClock_Config+0x4c>
}
 8002056:	b014      	add	sp, #80	@ 0x50
 8002058:	bd10      	pop	{r4, pc}
 800205a:	bf00      	nop
 800205c:	f3af 8000 	nop.w
 8002060:	20000000 	.word	0x20000000
 8002064:	11000000 	.word	0x11000000

08002068 <main>:
{
 8002068:	b530      	push	{r4, r5, lr}
 800206a:	b089      	sub	sp, #36	@ 0x24
  HAL_Init();
 800206c:	f003 fb56 	bl	800571c <HAL_Init>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002070:	2300      	movs	r3, #0
 8002072:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002076:	e9cd 3306 	strd	r3, r3, [sp, #24]
  SET_BIT(RCC->AHB2ENR, Periphs);
 800207a:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207e:	4866      	ldr	r0, [pc, #408]	@ (8002218 <main+0x1b0>)
 8002080:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 8002082:	f043 0304 	orr.w	r3, r3, #4
 8002086:	64d3      	str	r3, [r2, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8002088:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 800208a:	f003 0304 	and.w	r3, r3, #4
 800208e:	9302      	str	r3, [sp, #8]
 8002090:	a903      	add	r1, sp, #12
   GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14;
 8002092:	f44f 4440 	mov.w	r4, #49152	@ 0xc000
  (void)tmpreg;
 8002096:	9b02      	ldr	r3, [sp, #8]
 8002098:	9403      	str	r4, [sp, #12]
   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800209a:	f004 f997 	bl	80063cc <HAL_GPIO_Init>
   if ((HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_RESET) &&
 800209e:	485e      	ldr	r0, [pc, #376]	@ (8002218 <main+0x1b0>)
 80020a0:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80020a4:	f004 fb2e 	bl	8006704 <HAL_GPIO_ReadPin>
 80020a8:	2800      	cmp	r0, #0
 80020aa:	f000 808f 	beq.w	80021cc <main+0x164>
   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)==GPIO_PIN_RESET){
 80020ae:	485a      	ldr	r0, [pc, #360]	@ (8002218 <main+0x1b0>)
	   modesansechec=1;
 80020b0:	4d5a      	ldr	r5, [pc, #360]	@ (800221c <main+0x1b4>)
   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)==GPIO_PIN_RESET){
 80020b2:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80020b6:	f004 fb25 	bl	8006704 <HAL_GPIO_ReadPin>
 80020ba:	b908      	cbnz	r0, 80020c0 <main+0x58>
	   modesansechec=1;
 80020bc:	2301      	movs	r3, #1
 80020be:	602b      	str	r3, [r5, #0]
  SystemClock_Config();
 80020c0:	f7ff ff46 	bl	8001f50 <SystemClock_Config>
  PeriphCommonClock_Config();
 80020c4:	f7ff ffa0 	bl	8002008 <PeriphCommonClock_Config>
  MX_IPCC_Init();
 80020c8:	f7ff fe98 	bl	8001dfc <MX_IPCC_Init>
  MX_GPIO_Init();
 80020cc:	f7ff fd2c 	bl	8001b28 <MX_GPIO_Init>
  MX_DMA_Init();
 80020d0:	f7ff fcf8 	bl	8001ac4 <MX_DMA_Init>
  MX_ADC1_Init();
 80020d4:	f7ff f956 	bl	8001384 <MX_ADC1_Init>
  MX_I2C1_Init();
 80020d8:	f7ff fd84 	bl	8001be4 <MX_I2C1_Init>
  MX_I2C3_Init();
 80020dc:	f7ff fdba 	bl	8001c54 <MX_I2C3_Init>
  MX_LPUART1_UART_Init();
 80020e0:	f003 f86e 	bl	80051c0 <MX_LPUART1_UART_Init>
  MX_TIM2_Init();
 80020e4:	f002 ffac 	bl	8005040 <MX_TIM2_Init>
  MX_TIM17_Init();
 80020e8:	f003 f802 	bl	80050f0 <MX_TIM17_Init>
  MX_SPI1_Init();
 80020ec:	f000 f9b6 	bl	800245c <MX_SPI1_Init>
  MX_RTC_Init();
 80020f0:	f000 f8ce 	bl	8002290 <MX_RTC_Init>
  MX_TIM16_Init();
 80020f4:	f002 ffe0 	bl	80050b8 <MX_TIM16_Init>
  MX_RF_Init();
 80020f8:	f000 f8c8 	bl	800228c <MX_RF_Init>
  	ssd1306_Init();
 80020fc:	f000 fcc0 	bl	8002a80 <ssd1306_Init>
  	HAL_Delay(10);
 8002100:	200a      	movs	r0, #10
 8002102:	f003 fb3b 	bl	800577c <HAL_Delay>
  	ssd1306_Fill(Black);
 8002106:	2000      	movs	r0, #0
 8002108:	f000 fc62 	bl	80029d0 <ssd1306_Fill>
  	ssd1306_DrawBitmap(32, 32, startimg, 64, 32, White);
 800210c:	2401      	movs	r4, #1
 800210e:	2120      	movs	r1, #32
 8002110:	2340      	movs	r3, #64	@ 0x40
 8002112:	4608      	mov	r0, r1
 8002114:	e9cd 1400 	strd	r1, r4, [sp]
 8002118:	4a41      	ldr	r2, [pc, #260]	@ (8002220 <main+0x1b8>)
 800211a:	f000 ff23 	bl	8002f64 <ssd1306_DrawBitmap>
  	ssd1306_UpdateScreen();
 800211e:	f000 fc63 	bl	80029e8 <ssd1306_UpdateScreen>
  	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 8002122:	4940      	ldr	r1, [pc, #256]	@ (8002224 <main+0x1bc>)
 8002124:	4840      	ldr	r0, [pc, #256]	@ (8002228 <main+0x1c0>)
 8002126:	2203      	movs	r2, #3
 8002128:	f003 fef8 	bl	8005f1c <HAL_ADC_Start_DMA>
  	HAL_TIM_Base_Start(&htim2);
 800212c:	483f      	ldr	r0, [pc, #252]	@ (800222c <main+0x1c4>)
 800212e:	f008 fbad 	bl	800a88c <HAL_TIM_Base_Start>
  	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_0,GPIO_PIN_SET);
 8002132:	4622      	mov	r2, r4
 8002134:	4621      	mov	r1, r4
 8002136:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800213a:	f004 fae9 	bl	8006710 <HAL_GPIO_WritePin>
  	HAL_Delay(100);
 800213e:	2064      	movs	r0, #100	@ 0x64
 8002140:	f003 fb1c 	bl	800577c <HAL_Delay>
  	GNSS_Init(&GNSSData, &hlpuart1);
 8002144:	493a      	ldr	r1, [pc, #232]	@ (8002230 <main+0x1c8>)
 8002146:	483b      	ldr	r0, [pc, #236]	@ (8002234 <main+0x1cc>)
 8002148:	f7fe ff42 	bl	8000fd0 <GNSS_Init>
  	HAL_UART_Abort(&hlpuart1);
 800214c:	4838      	ldr	r0, [pc, #224]	@ (8002230 <main+0x1c8>)
 800214e:	f008 fddf 	bl	800ad10 <HAL_UART_Abort>
  	HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8002152:	4939      	ldr	r1, [pc, #228]	@ (8002238 <main+0x1d0>)
 8002154:	4836      	ldr	r0, [pc, #216]	@ (8002230 <main+0x1c8>)
 8002156:	2264      	movs	r2, #100	@ 0x64
 8002158:	f009 fc62 	bl	800ba20 <HAL_UART_Receive_DMA>
  	memset(flashread,'1',256);
 800215c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002160:	2131      	movs	r1, #49	@ 0x31
 8002162:	4836      	ldr	r0, [pc, #216]	@ (800223c <main+0x1d4>)
 8002164:	f00e f98f 	bl	8010486 <memset>
  	memset(flashwrite,'\0',256);
 8002168:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800216c:	2100      	movs	r1, #0
 800216e:	4834      	ldr	r0, [pc, #208]	@ (8002240 <main+0x1d8>)
 8002170:	f00e f989 	bl	8010486 <memset>
  	memset((uint8_t *)bufferscreen ,'\0',50);
 8002174:	2232      	movs	r2, #50	@ 0x32
 8002176:	2100      	movs	r1, #0
 8002178:	4832      	ldr	r0, [pc, #200]	@ (8002244 <main+0x1dc>)
 800217a:	f00e f984 	bl	8010486 <memset>
  	SPIF_Init(&hspif1, &hspi1, GPIOB, GPIO_PIN_7);
 800217e:	2380      	movs	r3, #128	@ 0x80
 8002180:	4a31      	ldr	r2, [pc, #196]	@ (8002248 <main+0x1e0>)
 8002182:	4932      	ldr	r1, [pc, #200]	@ (800224c <main+0x1e4>)
 8002184:	4832      	ldr	r0, [pc, #200]	@ (8002250 <main+0x1e8>)
 8002186:	f00c fd15 	bl	800ebb4 <SPIF_Init>
  	HAL_Delay(100);
 800218a:	2064      	movs	r0, #100	@ 0x64
 800218c:	f003 faf6 	bl	800577c <HAL_Delay>
  	if(modesansechec==0){
 8002190:	682b      	ldr	r3, [r5, #0]
 8002192:	2b00      	cmp	r3, #0
 8002194:	d03d      	beq.n	8002212 <main+0x1aa>
  	ssd1306_Fill(Black);
 8002196:	2000      	movs	r0, #0
 8002198:	f000 fc1a 	bl	80029d0 <ssd1306_Fill>
  	bmp581->i2c=&hi2c1;
 800219c:	482d      	ldr	r0, [pc, #180]	@ (8002254 <main+0x1ec>)
 800219e:	492e      	ldr	r1, [pc, #184]	@ (8002258 <main+0x1f0>)
 80021a0:	6803      	ldr	r3, [r0, #0]
  	bmp581->addr=0x47;
 80021a2:	2247      	movs	r2, #71	@ 0x47
  	bmp581->i2c=&hi2c1;
 80021a4:	6019      	str	r1, [r3, #0]
  	bmp581->addr=0x47;
 80021a6:	711a      	strb	r2, [r3, #4]
  	if(bmp581_init_precise_normal(&bmp581)!=0){
 80021a8:	f7ff fbbe 	bl	8001928 <bmp581_init_precise_normal>
 80021ac:	b9f8      	cbnz	r0, 80021ee <main+0x186>
  	BTN_A=0;
 80021ae:	492b      	ldr	r1, [pc, #172]	@ (800225c <main+0x1f4>)
  	BTN_A_LONG=0;
 80021b0:	4a2b      	ldr	r2, [pc, #172]	@ (8002260 <main+0x1f8>)
  	state=STATE_SPEED;
 80021b2:	4c2c      	ldr	r4, [pc, #176]	@ (8002264 <main+0x1fc>)
 80021b4:	2300      	movs	r3, #0
  	HAL_Delay(200);
 80021b6:	20c8      	movs	r0, #200	@ 0xc8
  	state=STATE_SPEED;
 80021b8:	7023      	strb	r3, [r4, #0]
  	BTN_A=0;
 80021ba:	600b      	str	r3, [r1, #0]
  	BTN_A_LONG=0;
 80021bc:	6013      	str	r3, [r2, #0]
  	HAL_Delay(200);
 80021be:	f003 fadd 	bl	800577c <HAL_Delay>
  MX_FREERTOS_Init();
 80021c2:	f7ff fb3f 	bl	8001844 <MX_FREERTOS_Init>
  osKernelStart();
 80021c6:	f00b f99b 	bl	800d500 <osKernelStart>
  while (1)
 80021ca:	e7fe      	b.n	80021ca <main+0x162>
 	  (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) == GPIO_PIN_RESET))
 80021cc:	4812      	ldr	r0, [pc, #72]	@ (8002218 <main+0x1b0>)
 80021ce:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021d2:	f004 fa97 	bl	8006704 <HAL_GPIO_ReadPin>
   if ((HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_RESET) &&
 80021d6:	2800      	cmp	r0, #0
 80021d8:	f47f af69 	bne.w	80020ae <main+0x46>
 	  HAL_DeInit();
 80021dc:	f003 fa78 	bl	80056d0 <HAL_DeInit>
 	  __set_MSP(*(__IO uint32_t*)SYS_MEM_START_ADDR);
 80021e0:	4b21      	ldr	r3, [pc, #132]	@ (8002268 <main+0x200>)
 80021e2:	681a      	ldr	r2, [r3, #0]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 80021e4:	f382 8808 	msr	MSP, r2
 	  boot_jump();
 80021e8:	685b      	ldr	r3, [r3, #4]
 80021ea:	4798      	blx	r3
 80021ec:	e75f      	b.n	80020ae <main+0x46>
  		ssd1306_SetCursor(32,42);
 80021ee:	212a      	movs	r1, #42	@ 0x2a
 80021f0:	2020      	movs	r0, #32
 80021f2:	f000 feb1 	bl	8002f58 <ssd1306_SetCursor>
  		ssd1306_WriteString("bmp prbm", Font_7x10, White);
 80021f6:	4b1d      	ldr	r3, [pc, #116]	@ (800226c <main+0x204>)
 80021f8:	481d      	ldr	r0, [pc, #116]	@ (8002270 <main+0x208>)
 80021fa:	e893 0006 	ldmia.w	r3, {r1, r2}
 80021fe:	2301      	movs	r3, #1
 8002200:	f000 fe8e 	bl	8002f20 <ssd1306_WriteString>
  		ssd1306_UpdateScreen();
 8002204:	f000 fbf0 	bl	80029e8 <ssd1306_UpdateScreen>
  		HAL_Delay(1000);
 8002208:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800220c:	f003 fab6 	bl	800577c <HAL_Delay>
 8002210:	e7cd      	b.n	80021ae <main+0x146>
  		getindex();
 8002212:	f000 fa35 	bl	8002680 <getindex>
 8002216:	e7be      	b.n	8002196 <main+0x12e>
 8002218:	48000800 	.word	0x48000800
 800221c:	20000508 	.word	0x20000508
 8002220:	08016314 	.word	0x08016314
 8002224:	20000fcc 	.word	0x20000fcc
 8002228:	20000388 	.word	0x20000388
 800222c:	20001648 	.word	0x20001648
 8002230:	20001758 	.word	0x20001758
 8002234:	20000510 	.word	0x20000510
 8002238:	20000ffc 	.word	0x20000ffc
 800223c:	200006c0 	.word	0x200006c0
 8002240:	20000ec0 	.word	0x20000ec0
 8002244:	20000680 	.word	0x20000680
 8002248:	48000400 	.word	0x48000400
 800224c:	20001098 	.word	0x20001098
 8002250:	20000fd4 	.word	0x20000fd4
 8002254:	200005d8 	.word	0x200005d8
 8002258:	20000478 	.word	0x20000478
 800225c:	20000ff8 	.word	0x20000ff8
 8002260:	200005e0 	.word	0x200005e0
 8002264:	20001070 	.word	0x20001070
 8002268:	1fff0000 	.word	0x1fff0000
 800226c:	20000024 	.word	0x20000024
 8002270:	08015fd0 	.word	0x08015fd0

08002274 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM1)
 8002274:	4b03      	ldr	r3, [pc, #12]	@ (8002284 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002276:	6802      	ldr	r2, [r0, #0]
 8002278:	429a      	cmp	r2, r3
 800227a:	d000      	beq.n	800227e <HAL_TIM_PeriodElapsedCallback+0xa>
}
 800227c:	4770      	bx	lr
    HAL_IncTick();
 800227e:	f003 ba65 	b.w	800574c <HAL_IncTick>
 8002282:	bf00      	nop
 8002284:	40012c00 	.word	0x40012c00

08002288 <Error_Handler>:
  __ASM volatile ("cpsid i" : : : "memory");
 8002288:	b672      	cpsid	i
  while (1)
 800228a:	e7fe      	b.n	800228a <Error_Handler+0x2>

0800228c <MX_RF_Init>:
  /* USER CODE END RF_Init 1 */
  /* USER CODE BEGIN RF_Init 2 */

  /* USER CODE END RF_Init 2 */

}
 800228c:	4770      	bx	lr
 800228e:	bf00      	nop

08002290 <MX_RTC_Init>:

RTC_HandleTypeDef hrtc;

/* RTC init function */
void MX_RTC_Init(void)
{
 8002290:	b500      	push	{lr}

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8002292:	4822      	ldr	r0, [pc, #136]	@ (800231c <MX_RTC_Init+0x8c>)
 8002294:	4922      	ldr	r1, [pc, #136]	@ (8002320 <MX_RTC_Init+0x90>)
{
 8002296:	b087      	sub	sp, #28
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
  hrtc.Init.AsynchPrediv = 99;
 8002298:	2263      	movs	r2, #99	@ 0x63
  RTC_TimeTypeDef sTime = {0};
 800229a:	2300      	movs	r3, #0
  hrtc.Init.AsynchPrediv = 99;
 800229c:	6082      	str	r2, [r0, #8]
  hrtc.Init.SynchPrediv = 9999;
 800229e:	f242 720f 	movw	r2, #9999	@ 0x270f
  RTC_TimeTypeDef sTime = {0};
 80022a2:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80022a6:	e9cd 3303 	strd	r3, r3, [sp, #12]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 80022aa:	e9c0 1300 	strd	r1, r3, [r0]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 80022ae:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 80022b2:	e9c0 3306 	strd	r3, r3, [r0, #24]
  RTC_TimeTypeDef sTime = {0};
 80022b6:	9305      	str	r3, [sp, #20]
  RTC_DateTypeDef sDate = {0};
 80022b8:	9300      	str	r3, [sp, #0]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 80022ba:	6143      	str	r3, [r0, #20]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 80022bc:	f007 f896 	bl	80093ec <HAL_RTC_Init>
 80022c0:	b9f0      	cbnz	r0, 8002300 <MX_RTC_Init+0x70>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 80022c2:	2300      	movs	r3, #0
  sTime.Minutes = 0x0;
  sTime.Seconds = 0x0;
  sTime.SubSeconds = 0x0;
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022c4:	4815      	ldr	r0, [pc, #84]	@ (800231c <MX_RTC_Init+0x8c>)
  sTime.Hours = 0x0;
 80022c6:	f8ad 3004 	strh.w	r3, [sp, #4]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022ca:	2201      	movs	r2, #1
 80022cc:	a901      	add	r1, sp, #4
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80022ce:	e9cd 3304 	strd	r3, r3, [sp, #16]
  sTime.Seconds = 0x0;
 80022d2:	f88d 3006 	strb.w	r3, [sp, #6]
  sTime.SubSeconds = 0x0;
 80022d6:	9302      	str	r3, [sp, #8]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022d8:	f007 f908 	bl	80094ec <HAL_RTC_SetTime>
 80022dc:	b9d8      	cbnz	r0, 8002316 <MX_RTC_Init+0x86>
  {
    Error_Handler();
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80022de:	4b11      	ldr	r3, [pc, #68]	@ (8002324 <MX_RTC_Init+0x94>)
  sDate.Month = RTC_MONTH_JANUARY;
  sDate.Date = 0x1;
  sDate.Year = 0x0;

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80022e0:	480e      	ldr	r0, [pc, #56]	@ (800231c <MX_RTC_Init+0x8c>)
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80022e2:	9300      	str	r3, [sp, #0]
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80022e4:	2201      	movs	r2, #1
 80022e6:	4669      	mov	r1, sp
 80022e8:	f007 f9f0 	bl	80096cc <HAL_RTC_SetDate>
 80022ec:	b980      	cbnz	r0, 8002310 <MX_RTC_Init+0x80>
    Error_Handler();
  }

  /** Enable the WakeUp
  */
  if (HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 0, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 80022ee:	480b      	ldr	r0, [pc, #44]	@ (800231c <MX_RTC_Init+0x8c>)
 80022f0:	2204      	movs	r2, #4
 80022f2:	2100      	movs	r1, #0
 80022f4:	f007 facc 	bl	8009890 <HAL_RTCEx_SetWakeUpTimer_IT>
 80022f8:	b928      	cbnz	r0, 8002306 <MX_RTC_Init+0x76>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 80022fa:	b007      	add	sp, #28
 80022fc:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002300:	f7ff ffc2 	bl	8002288 <Error_Handler>
 8002304:	e7dd      	b.n	80022c2 <MX_RTC_Init+0x32>
    Error_Handler();
 8002306:	f7ff ffbf 	bl	8002288 <Error_Handler>
}
 800230a:	b007      	add	sp, #28
 800230c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8002310:	f7ff ffba 	bl	8002288 <Error_Handler>
 8002314:	e7eb      	b.n	80022ee <MX_RTC_Init+0x5e>
    Error_Handler();
 8002316:	f7ff ffb7 	bl	8002288 <Error_Handler>
 800231a:	e7e0      	b.n	80022de <MX_RTC_Init+0x4e>
 800231c:	20001074 	.word	0x20001074
 8002320:	40002800 	.word	0x40002800
 8002324:	00010101 	.word	0x00010101

08002328 <HAL_RTC_MspInit>:

void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
{
 8002328:	b510      	push	{r4, lr}
 800232a:	4604      	mov	r4, r0
 800232c:	b096      	sub	sp, #88	@ 0x58

  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800232e:	2250      	movs	r2, #80	@ 0x50
 8002330:	2100      	movs	r1, #0
 8002332:	a802      	add	r0, sp, #8
 8002334:	f00e f8a7 	bl	8010486 <memset>
  if(rtcHandle->Instance==RTC)
 8002338:	4b18      	ldr	r3, [pc, #96]	@ (800239c <HAL_RTC_MspInit+0x74>)
 800233a:	6822      	ldr	r2, [r4, #0]
 800233c:	429a      	cmp	r2, r3
 800233e:	d001      	beq.n	8002344 <HAL_RTC_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }
}
 8002340:	b016      	add	sp, #88	@ 0x58
 8002342:	bd10      	pop	{r4, pc}
	  HAL_PWR_EnableBkUpAccess();
 8002344:	f006 f826 	bl	8008394 <HAL_PWR_EnableBkUpAccess>
	  HAL_PWR_EnableBkUpAccess();
 8002348:	f006 f824 	bl	8008394 <HAL_PWR_EnableBkUpAccess>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 800234c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
 8002350:	f44f 7340 	mov.w	r3, #768	@ 0x300
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002354:	a802      	add	r0, sp, #8
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8002356:	9202      	str	r2, [sp, #8]
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
 8002358:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800235a:	f006 fe5b 	bl	8009014 <HAL_RCCEx_PeriphCLKConfig>
 800235e:	b9d0      	cbnz	r0, 8002396 <HAL_RTC_MspInit+0x6e>
  * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
  * @retval None
  */
__STATIC_INLINE void LL_RCC_EnableRTC(void)
{
  SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
 8002360:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(RTC_WKUP_IRQn, 5, 0);
 8002364:	2200      	movs	r2, #0
 8002366:	f8d3 0090 	ldr.w	r0, [r3, #144]	@ 0x90
 800236a:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 800236e:	f8c3 0090 	str.w	r0, [r3, #144]	@ 0x90
  SET_BIT(RCC->APB1ENR1, Periphs);
 8002372:	6d9c      	ldr	r4, [r3, #88]	@ 0x58
 8002374:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 8002378:	659c      	str	r4, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800237a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800237c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002380:	2105      	movs	r1, #5
 8002382:	9301      	str	r3, [sp, #4]
 8002384:	2003      	movs	r0, #3
  (void)tmpreg;
 8002386:	9b01      	ldr	r3, [sp, #4]
 8002388:	f003 fe2e 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 800238c:	2003      	movs	r0, #3
 800238e:	f003 fe67 	bl	8006060 <HAL_NVIC_EnableIRQ>
}
 8002392:	b016      	add	sp, #88	@ 0x58
 8002394:	bd10      	pop	{r4, pc}
      Error_Handler();
 8002396:	f7ff ff77 	bl	8002288 <Error_Handler>
 800239a:	e7e1      	b.n	8002360 <HAL_RTC_MspInit+0x38>
 800239c:	40002800 	.word	0x40002800

080023a0 <set_time>:
}

/* USER CODE BEGIN 1 */

void set_time (uint8_t hr, uint8_t min, uint8_t sec)
{
 80023a0:	b500      	push	{lr}
 80023a2:	b087      	sub	sp, #28
	RTC_TimeTypeDef sTime = {0};
 80023a4:	2300      	movs	r3, #0
{
 80023a6:	4686      	mov	lr, r0
 80023a8:	4694      	mov	ip, r2
	sTime.Hours = hr;
	sTime.Minutes = min;
 80023aa:	f88d 1005 	strb.w	r1, [sp, #5]
	sTime.Seconds = sec;
	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
	sTime.StoreOperation = RTC_STOREOPERATION_RESET;
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 80023ae:	480e      	ldr	r0, [pc, #56]	@ (80023e8 <set_time+0x48>)
	sTime.Hours = hr;
 80023b0:	f88d e004 	strb.w	lr, [sp, #4]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 80023b4:	461a      	mov	r2, r3
 80023b6:	a901      	add	r1, sp, #4
	RTC_TimeTypeDef sTime = {0};
 80023b8:	f88d 3017 	strb.w	r3, [sp, #23]
 80023bc:	f8cd 3007 	str.w	r3, [sp, #7]
 80023c0:	f8cd 300b 	str.w	r3, [sp, #11]
 80023c4:	f8cd 300f 	str.w	r3, [sp, #15]
 80023c8:	f8cd 3013 	str.w	r3, [sp, #19]
	sTime.Seconds = sec;
 80023cc:	f88d c006 	strb.w	ip, [sp, #6]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 80023d0:	f007 f88c 	bl	80094ec <HAL_RTC_SetTime>
 80023d4:	b910      	cbnz	r0, 80023dc <set_time+0x3c>
	{
		Error_Handler();
	}
}
 80023d6:	b007      	add	sp, #28
 80023d8:	f85d fb04 	ldr.w	pc, [sp], #4
		Error_Handler();
 80023dc:	f7ff ff54 	bl	8002288 <Error_Handler>
}
 80023e0:	b007      	add	sp, #28
 80023e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80023e6:	bf00      	nop
 80023e8:	20001074 	.word	0x20001074

080023ec <get_time_date>:
	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x2345);  // backup register
}


void get_time_date()
{
 80023ec:	b510      	push	{r4, lr}
  RTC_DateTypeDef gDate;
  RTC_TimeTypeDef gTime;

  /* Get the RTC current Time */
  HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 80023ee:	4c14      	ldr	r4, [pc, #80]	@ (8002440 <get_time_date+0x54>)
{
 80023f0:	b086      	sub	sp, #24
  HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 80023f2:	a901      	add	r1, sp, #4
 80023f4:	2200      	movs	r2, #0
 80023f6:	4620      	mov	r0, r4
 80023f8:	f007 f92c 	bl	8009654 <HAL_RTC_GetTime>
  /* Get the RTC current Date */
  HAL_RTC_GetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 80023fc:	4669      	mov	r1, sp
 80023fe:	2200      	movs	r2, #0
 8002400:	4620      	mov	r0, r4
 8002402:	f007 fa0f 	bl	8009824 <HAL_RTC_GetDate>

  SEC=gTime.Seconds;
  HR=gTime.Hours;
 8002406:	4c0f      	ldr	r4, [pc, #60]	@ (8002444 <get_time_date+0x58>)
  SEC=gTime.Seconds;
 8002408:	490f      	ldr	r1, [pc, #60]	@ (8002448 <get_time_date+0x5c>)
 800240a:	f89d 0006 	ldrb.w	r0, [sp, #6]
  MINUTE=gTime.Minutes;
 800240e:	4a0f      	ldr	r2, [pc, #60]	@ (800244c <get_time_date+0x60>)
  HR=gTime.Hours;
 8002410:	f89d c004 	ldrb.w	ip, [sp, #4]
  SEC=gTime.Seconds;
 8002414:	7008      	strb	r0, [r1, #0]
  HR=gTime.Hours;
 8002416:	f884 c000 	strb.w	ip, [r4]
  JOURS=gDate.Date;
 800241a:	480d      	ldr	r0, [pc, #52]	@ (8002450 <get_time_date+0x64>)
  MINUTE=gTime.Minutes;
 800241c:	f89d 4005 	ldrb.w	r4, [sp, #5]
 8002420:	7014      	strb	r4, [r2, #0]
  MOIS=gDate.Month;
  ANNEE=gDate.Year+2000;
 8002422:	f89d 3003 	ldrb.w	r3, [sp, #3]
  JOURS=gDate.Date;
 8002426:	f89d 4002 	ldrb.w	r4, [sp, #2]
  MOIS=gDate.Month;
 800242a:	490a      	ldr	r1, [pc, #40]	@ (8002454 <get_time_date+0x68>)
  ANNEE=gDate.Year+2000;
 800242c:	4a0a      	ldr	r2, [pc, #40]	@ (8002458 <get_time_date+0x6c>)
  JOURS=gDate.Date;
 800242e:	7004      	strb	r4, [r0, #0]
  MOIS=gDate.Month;
 8002430:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8002434:	7008      	strb	r0, [r1, #0]
  ANNEE=gDate.Year+2000;
 8002436:	f503 63fa 	add.w	r3, r3, #2000	@ 0x7d0
 800243a:	8013      	strh	r3, [r2, #0]
  /* Display time Format: hh:mm:ss */
  //sprintf((char*)time,"%02d:%02d:%02d",gTime.Hours, gTime.Minutes, gTime.Seconds);

  /* Display date Format: dd-mm-yyyy */
  //sprintf((char*)date,"%02d-%02d-%2d",gDate.Date, gDate.Month, 2000 + gDate.Year);
}
 800243c:	b006      	add	sp, #24
 800243e:	bd10      	pop	{r4, pc}
 8002440:	20001074 	.word	0x20001074
 8002444:	200005fd 	.word	0x200005fd
 8002448:	200005fe 	.word	0x200005fe
 800244c:	200005fc 	.word	0x200005fc
 8002450:	2000001b 	.word	0x2000001b
 8002454:	2000001a 	.word	0x2000001a
 8002458:	20000018 	.word	0x20000018

0800245c <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 800245c:	b510      	push	{r4, lr}
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 800245e:	4811      	ldr	r0, [pc, #68]	@ (80024a4 <MX_SPI1_Init+0x48>)
 8002460:	4c11      	ldr	r4, [pc, #68]	@ (80024a8 <MX_SPI1_Init+0x4c>)
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002462:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002466:	2300      	movs	r3, #0
 8002468:	e9c0 4200 	strd	r4, r2, [r0]
 800246c:	f44f 61e0 	mov.w	r1, #1792	@ 0x700
 8002470:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002474:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8002478:	2410      	movs	r4, #16
 800247a:	6182      	str	r2, [r0, #24]
 800247c:	2107      	movs	r1, #7
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi1.Init.CRCPolynomial = 7;
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800247e:	2208      	movs	r2, #8
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002480:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002484:	e9c0 4307 	strd	r4, r3, [r0, #28]
 8002488:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 800248c:	e9c0 130b 	strd	r1, r3, [r0, #44]	@ 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8002490:	6342      	str	r2, [r0, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002492:	f007 fbb7 	bl	8009c04 <HAL_SPI_Init>
 8002496:	b900      	cbnz	r0, 800249a <MX_SPI1_Init+0x3e>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002498:	bd10      	pop	{r4, pc}
 800249a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 800249e:	f7ff bef3 	b.w	8002288 <Error_Handler>
 80024a2:	bf00      	nop
 80024a4:	20001098 	.word	0x20001098
 80024a8:	40013000 	.word	0x40013000

080024ac <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 80024ac:	b530      	push	{r4, r5, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(spiHandle->Instance==SPI1)
 80024ae:	4b25      	ldr	r3, [pc, #148]	@ (8002544 <HAL_SPI_MspInit+0x98>)
 80024b0:	6802      	ldr	r2, [r0, #0]
{
 80024b2:	b08b      	sub	sp, #44	@ 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024b4:	2400      	movs	r4, #0
  if(spiHandle->Instance==SPI1)
 80024b6:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024b8:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80024bc:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80024c0:	9408      	str	r4, [sp, #32]
  if(spiHandle->Instance==SPI1)
 80024c2:	d001      	beq.n	80024c8 <HAL_SPI_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 80024c4:	b00b      	add	sp, #44	@ 0x2c
 80024c6:	bd30      	pop	{r4, r5, pc}
  * @retval None
  */
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 80024c8:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80024cc:	2505      	movs	r5, #5
 80024ce:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80024d0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80024d4:	661a      	str	r2, [r3, #96]	@ 0x60
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 80024d6:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80024d8:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80024dc:	9203      	str	r2, [sp, #12]
  (void)tmpreg;
 80024de:	9a03      	ldr	r2, [sp, #12]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80024e0:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024e2:	f042 0201 	orr.w	r2, r2, #1
 80024e6:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80024e8:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024ea:	f002 0201 	and.w	r2, r2, #1
 80024ee:	9202      	str	r2, [sp, #8]
  (void)tmpreg;
 80024f0:	9a02      	ldr	r2, [sp, #8]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80024f2:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024f4:	f042 0202 	orr.w	r2, r2, #2
 80024f8:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80024fa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80024fc:	9508      	str	r5, [sp, #32]
 80024fe:	f003 0302 	and.w	r3, r3, #2
 8002502:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 8002504:	2242      	movs	r2, #66	@ 0x42
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002506:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 8002508:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800250a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 800250e:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)tmpreg;
 8002512:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002514:	f003 ff5a 	bl	80063cc <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002518:	2302      	movs	r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 800251a:	2220      	movs	r2, #32
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800251c:	a904      	add	r1, sp, #16
 800251e:	480a      	ldr	r0, [pc, #40]	@ (8002548 <HAL_SPI_MspInit+0x9c>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8002520:	9508      	str	r5, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002522:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002526:	e9cd 4406 	strd	r4, r4, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800252a:	f003 ff4f 	bl	80063cc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(SPI1_IRQn, 7, 0);
 800252e:	4622      	mov	r2, r4
 8002530:	2107      	movs	r1, #7
 8002532:	2022      	movs	r0, #34	@ 0x22
 8002534:	f003 fd58 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002538:	2022      	movs	r0, #34	@ 0x22
 800253a:	f003 fd91 	bl	8006060 <HAL_NVIC_EnableIRQ>
}
 800253e:	b00b      	add	sp, #44	@ 0x2c
 8002540:	bd30      	pop	{r4, r5, pc}
 8002542:	bf00      	nop
 8002544:	40013000 	.word	0x40013000
 8002548:	48000400 	.word	0x48000400
 800254c:	00000000 	.word	0x00000000

08002550 <csvframe>:
  /* USER CODE END SPI1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 8002550:	b084      	sub	sp, #16
 8002552:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	int framesize=0;
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 8002554:	ed8d 2b1a 	vstr	d2, [sp, #104]	@ 0x68
 8002558:	4e2b      	ldr	r6, [pc, #172]	@ (8002608 <csvframe+0xb8>)
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 800255a:	9f39      	ldr	r7, [sp, #228]	@ 0xe4
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 800255c:	7836      	ldrb	r6, [r6, #0]
 800255e:	9621      	str	r6, [sp, #132]	@ 0x84
 8002560:	4e2a      	ldr	r6, [pc, #168]	@ (800260c <csvframe+0xbc>)
 8002562:	7836      	ldrb	r6, [r6, #0]
 8002564:	9620      	str	r6, [sp, #128]	@ 0x80
 8002566:	4e2a      	ldr	r6, [pc, #168]	@ (8002610 <csvframe+0xc0>)
 8002568:	7836      	ldrb	r6, [r6, #0]
 800256a:	961f      	str	r6, [sp, #124]	@ 0x7c
 800256c:	4e29      	ldr	r6, [pc, #164]	@ (8002614 <csvframe+0xc4>)
 800256e:	7836      	ldrb	r6, [r6, #0]
 8002570:	961e      	str	r6, [sp, #120]	@ 0x78
 8002572:	4e29      	ldr	r6, [pc, #164]	@ (8002618 <csvframe+0xc8>)
 8002574:	7836      	ldrb	r6, [r6, #0]
 8002576:	961d      	str	r6, [sp, #116]	@ 0x74
 8002578:	4e28      	ldr	r6, [pc, #160]	@ (800261c <csvframe+0xcc>)
 800257a:	8836      	ldrh	r6, [r6, #0]
 800257c:	961c      	str	r6, [sp, #112]	@ 0x70
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 800257e:	ae07      	add	r6, sp, #28
 8002580:	e886 000e 	stmia.w	r6, {r1, r2, r3}
 8002584:	4604      	mov	r4, r0
 8002586:	ee11 0a10 	vmov	r0, s2
 800258a:	ee10 5a10 	vmov	r5, s0
 800258e:	ee10 6a90 	vmov	r6, s1
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 8002592:	f7fd ffb1 	bl	80004f8 <__aeabi_f2d>
 8002596:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
 800259a:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 800259c:	9716      	str	r7, [sp, #88]	@ 0x58
 800259e:	f7fd ffab 	bl	80004f8 <__aeabi_f2d>
 80025a2:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
 80025a6:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80025a8:	f7fd ffa6 	bl	80004f8 <__aeabi_f2d>
 80025ac:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
 80025b0:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80025b2:	f7fd ffa1 	bl	80004f8 <__aeabi_f2d>
 80025b6:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80025ba:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 80025bc:	f7fd ff9c 	bl	80004f8 <__aeabi_f2d>
 80025c0:	a30f      	add	r3, pc, #60	@ (adr r3, 8002600 <csvframe+0xb0>)
 80025c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025c6:	f7fd ffef 	bl	80005a8 <__aeabi_dmul>
 80025ca:	4602      	mov	r2, r0
 80025cc:	460b      	mov	r3, r1
 80025ce:	4630      	mov	r0, r6
 80025d0:	e9cd 230e 	strd	r2, r3, [sp, #56]	@ 0x38
 80025d4:	f7fd ff90 	bl	80004f8 <__aeabi_f2d>
 80025d8:	4602      	mov	r2, r0
 80025da:	460b      	mov	r3, r1
 80025dc:	4628      	mov	r0, r5
 80025de:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80025e2:	f7fd ff89 	bl	80004f8 <__aeabi_f2d>
 80025e6:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80025ea:	4620      	mov	r0, r4
	return framesize;
}
 80025ec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 80025f0:	4a0b      	ldr	r2, [pc, #44]	@ (8002620 <csvframe+0xd0>)
 80025f2:	f44f 7180 	mov.w	r1, #256	@ 0x100
}
 80025f6:	b004      	add	sp, #16
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 80025f8:	f00d beaa 	b.w	8010350 <sniprintf>
 80025fc:	f3af 8000 	nop.w
 8002600:	cccccccd 	.word	0xcccccccd
 8002604:	400ccccc 	.word	0x400ccccc
 8002608:	200005fe 	.word	0x200005fe
 800260c:	200005fc 	.word	0x200005fc
 8002610:	200005fd 	.word	0x200005fd
 8002614:	2000001b 	.word	0x2000001b
 8002618:	2000001a 	.word	0x2000001a
 800261c:	20000018 	.word	0x20000018
 8002620:	08015fdc 	.word	0x08015fdc

08002624 <storeindex>:


void storeindex(void){
 8002624:	b530      	push	{r4, r5, lr}
	int writepage=MAX_WRITE_PAGE+1;
	uint8_t writebuffer[10];
	memset((uint8_t*)writebuffer,'\0',10);
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002626:	4b13      	ldr	r3, [pc, #76]	@ (8002674 <storeindex+0x50>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
	writebuffer[1]=debut;
	writebuffer[2]=fin;
	writebuffer[3]=6;
	writebuffer[4]=6;
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002628:	4d13      	ldr	r5, [pc, #76]	@ (8002678 <storeindex+0x54>)
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800262a:	681b      	ldr	r3, [r3, #0]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800262c:	4a13      	ldr	r2, [pc, #76]	@ (800267c <storeindex+0x58>)
void storeindex(void){
 800262e:	b087      	sub	sp, #28
	memset((uint8_t*)writebuffer,'\0',10);
 8002630:	2400      	movs	r4, #0
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 8002632:	f88d 300e 	strb.w	r3, [sp, #14]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002636:	f3c3 2307 	ubfx	r3, r3, #8, #8
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800263a:	6812      	ldr	r2, [r2, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800263c:	f88d 300d 	strb.w	r3, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002640:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 8002644:	f240 6306 	movw	r3, #1542	@ 0x606
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002648:	4628      	mov	r0, r5
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800264a:	f88d 200c 	strb.w	r2, [sp, #12]
	writebuffer[3]=6;
 800264e:	f8ad 300f 	strh.w	r3, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 8002652:	f88d 4015 	strb.w	r4, [sp, #21]
 8002656:	f8cd 4011 	str.w	r4, [sp, #17]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800265a:	f00c faf5 	bl	800ec48 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 800265e:	2305      	movs	r3, #5
 8002660:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 8002664:	9400      	str	r4, [sp, #0]
 8002666:	aa03      	add	r2, sp, #12
 8002668:	4628      	mov	r0, r5
 800266a:	f00c fb71 	bl	800ed50 <SPIF_WritePage>

}
 800266e:	b007      	add	sp, #28
 8002670:	bd30      	pop	{r4, r5, pc}
 8002672:	bf00      	nop
 8002674:	200006b8 	.word	0x200006b8
 8002678:	20000fd4 	.word	0x20000fd4
 800267c:	200006bc 	.word	0x200006bc

08002680 <getindex>:

void getindex(void){
 8002680:	b510      	push	{r4, lr}
	int readpage=MAX_WRITE_PAGE+1;
	SPIF_ReadPage(&hspif1, readpage, (uint8_t *)indexbuffer, 5, 0);
 8002682:	4c20      	ldr	r4, [pc, #128]	@ (8002704 <getindex+0x84>)
 8002684:	4820      	ldr	r0, [pc, #128]	@ (8002708 <getindex+0x88>)
void getindex(void){
 8002686:	b086      	sub	sp, #24
	SPIF_ReadPage(&hspif1, readpage, (uint8_t *)indexbuffer, 5, 0);
 8002688:	2300      	movs	r3, #0
 800268a:	9300      	str	r3, [sp, #0]
 800268c:	4622      	mov	r2, r4
 800268e:	2305      	movs	r3, #5
 8002690:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 8002694:	f00c fb7a 	bl	800ed8c <SPIF_ReadPage>
	if((indexbuffer[3]==6)&&(indexbuffer[4]==6) ){
 8002698:	78e3      	ldrb	r3, [r4, #3]
 800269a:	2b06      	cmp	r3, #6
 800269c:	d102      	bne.n	80026a4 <getindex+0x24>
 800269e:	7923      	ldrb	r3, [r4, #4]
 80026a0:	2b06      	cmp	r3, #6
 80026a2:	d023      	beq.n	80026ec <getindex+0x6c>
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 80026a4:	4b19      	ldr	r3, [pc, #100]	@ (800270c <getindex+0x8c>)
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 80026a6:	4a1a      	ldr	r2, [pc, #104]	@ (8002710 <getindex+0x90>)
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 80026a8:	681b      	ldr	r3, [r3, #0]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 80026aa:	6811      	ldr	r1, [r2, #0]
 80026ac:	f88d 100c 	strb.w	r1, [sp, #12]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 80026b0:	f3c3 2207 	ubfx	r2, r3, #8, #8
	memset((uint8_t*)writebuffer,'\0',10);
 80026b4:	2400      	movs	r4, #0
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 80026b6:	f88d 200d 	strb.w	r2, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 80026ba:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 80026be:	f240 6206 	movw	r2, #1542	@ 0x606
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 80026c2:	4811      	ldr	r0, [pc, #68]	@ (8002708 <getindex+0x88>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 80026c4:	f88d 300e 	strb.w	r3, [sp, #14]
	writebuffer[3]=6;
 80026c8:	f8ad 200f 	strh.w	r2, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 80026cc:	f88d 4015 	strb.w	r4, [sp, #21]
 80026d0:	f8cd 4011 	str.w	r4, [sp, #17]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 80026d4:	f00c fab8 	bl	800ec48 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 80026d8:	2305      	movs	r3, #5
 80026da:	9400      	str	r4, [sp, #0]
 80026dc:	aa03      	add	r2, sp, #12
 80026de:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 80026e2:	4809      	ldr	r0, [pc, #36]	@ (8002708 <getindex+0x88>)
 80026e4:	f00c fb34 	bl	800ed50 <SPIF_WritePage>
	}
	else{
		storeindex();
	}

}
 80026e8:	b006      	add	sp, #24
 80026ea:	bd10      	pop	{r4, pc}
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026ec:	f8b4 3001 	ldrh.w	r3, [r4, #1]
		pageoffset=(int)indexbuffer[0];
 80026f0:	4907      	ldr	r1, [pc, #28]	@ (8002710 <getindex+0x90>)
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026f2:	4a06      	ldr	r2, [pc, #24]	@ (800270c <getindex+0x8c>)
		pageoffset=(int)indexbuffer[0];
 80026f4:	7820      	ldrb	r0, [r4, #0]
 80026f6:	6008      	str	r0, [r1, #0]
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026f8:	ba5b      	rev16	r3, r3
 80026fa:	b29b      	uxth	r3, r3
 80026fc:	6013      	str	r3, [r2, #0]
}
 80026fe:	b006      	add	sp, #24
 8002700:	bd10      	pop	{r4, pc}
 8002702:	bf00      	nop
 8002704:	200010fc 	.word	0x200010fc
 8002708:	20000fd4 	.word	0x20000fd4
 800270c:	200006b8 	.word	0x200006b8
 8002710:	200006bc 	.word	0x200006bc

08002714 <writebuffertoflash>:

void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 8002714:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	if((pagenumber+1)%16==0){
 8002718:	4f38      	ldr	r7, [pc, #224]	@ (80027fc <writebuffertoflash+0xe8>)
		if(sectoreraseen==0){
 800271a:	f8df 80ec 	ldr.w	r8, [pc, #236]	@ 8002808 <writebuffertoflash+0xf4>
	if((pagenumber+1)%16==0){
 800271e:	f8d7 c000 	ldr.w	ip, [r7]
void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 8002722:	460c      	mov	r4, r1
	if((pagenumber+1)%16==0){
 8002724:	f10c 0201 	add.w	r2, ip, #1
		if(sectoreraseen==0){
 8002728:	f8d8 1000 	ldr.w	r1, [r8]
 800272c:	f002 030f 	and.w	r3, r2, #15
 8002730:	430b      	orrs	r3, r1
void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 8002732:	b087      	sub	sp, #28
 8002734:	4606      	mov	r6, r0
		if(sectoreraseen==0){
 8002736:	d053      	beq.n	80027e0 <writebuffertoflash+0xcc>
		SPIF_EraseSector(&hspif1, (int)floor((pagenumber+1)/16));
		sectoreraseen=1;
		}

		  }
	if(bufferlenght+pageoffset<256){
 8002738:	4d31      	ldr	r5, [pc, #196]	@ (8002800 <writebuffertoflash+0xec>)
 800273a:	682b      	ldr	r3, [r5, #0]
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 800273c:	9300      	str	r3, [sp, #0]
	if(bufferlenght+pageoffset<256){
 800273e:	191a      	adds	r2, r3, r4
 8002740:	2aff      	cmp	r2, #255	@ 0xff
 8002742:	dc2a      	bgt.n	800279a <writebuffertoflash+0x86>
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 8002744:	4623      	mov	r3, r4
 8002746:	4632      	mov	r2, r6
 8002748:	482e      	ldr	r0, [pc, #184]	@ (8002804 <writebuffertoflash+0xf0>)
 800274a:	4661      	mov	r1, ip
 800274c:	f00c fb00 	bl	800ed50 <SPIF_WritePage>
		pageoffset=pageoffset+bufferlenght;
 8002750:	682a      	ldr	r2, [r5, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002752:	683b      	ldr	r3, [r7, #0]
		pageoffset=pageoffset+bufferlenght;
 8002754:	4414      	add	r4, r2
 8002756:	602c      	str	r4, [r5, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002758:	f3c3 2107 	ubfx	r1, r3, #8, #8
	memset((uint8_t*)writebuffer,'\0',10);
 800275c:	2500      	movs	r5, #0
	writebuffer[3]=6;
 800275e:	f240 6206 	movw	r2, #1542	@ 0x606
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002762:	f88d 100d 	strb.w	r1, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002766:	4827      	ldr	r0, [pc, #156]	@ (8002804 <writebuffertoflash+0xf0>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 8002768:	f88d 300e 	strb.w	r3, [sp, #14]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800276c:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 8002770:	f8ad 200f 	strh.w	r2, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 8002774:	f88d 5015 	strb.w	r5, [sp, #21]
 8002778:	f8cd 5011 	str.w	r5, [sp, #17]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800277c:	f88d 400c 	strb.w	r4, [sp, #12]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002780:	f00c fa62 	bl	800ec48 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 8002784:	2305      	movs	r3, #5
 8002786:	9500      	str	r5, [sp, #0]
 8002788:	aa03      	add	r2, sp, #12
 800278a:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 800278e:	481d      	ldr	r0, [pc, #116]	@ (8002804 <writebuffertoflash+0xf0>)
 8002790:	f00c fade 	bl	800ed50 <SPIF_WritePage>
		sectoreraseen=0;
		pageoffset=(bufferlenght-(256-pageoffset));
	}
	storeindex();

}
 8002794:	b007      	add	sp, #28
 8002796:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, 256-pageoffset,pageoffset);
 800279a:	4661      	mov	r1, ip
 800279c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80027a0:	4632      	mov	r2, r6
 80027a2:	4818      	ldr	r0, [pc, #96]	@ (8002804 <writebuffertoflash+0xf0>)
 80027a4:	f00c fad4 	bl	800ed50 <SPIF_WritePage>
		SPIF_WritePage(&hspif1,pagenumber+1, (uint8_t *)buffer+(256-pageoffset), bufferlenght-(256-pageoffset),0);
 80027a8:	f04f 0900 	mov.w	r9, #0
		HAL_Delay(100);
 80027ac:	2064      	movs	r0, #100	@ 0x64
 80027ae:	f002 ffe5 	bl	800577c <HAL_Delay>
		SPIF_WritePage(&hspif1,pagenumber+1, (uint8_t *)buffer+(256-pageoffset), bufferlenght-(256-pageoffset),0);
 80027b2:	f8cd 9000 	str.w	r9, [sp]
 80027b6:	682b      	ldr	r3, [r5, #0]
 80027b8:	6839      	ldr	r1, [r7, #0]
 80027ba:	4812      	ldr	r0, [pc, #72]	@ (8002804 <writebuffertoflash+0xf0>)
 80027bc:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80027c0:	18f2      	adds	r2, r6, r3
 80027c2:	3101      	adds	r1, #1
 80027c4:	1ae3      	subs	r3, r4, r3
 80027c6:	f00c fac3 	bl	800ed50 <SPIF_WritePage>
		pageoffset=(bufferlenght-(256-pageoffset));
 80027ca:	682b      	ldr	r3, [r5, #0]
		sectoreraseen=0;
 80027cc:	f8c8 9000 	str.w	r9, [r8]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027d0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80027d4:	1ae4      	subs	r4, r4, r3
		pagenumber=pagenumber+1;
 80027d6:	683b      	ldr	r3, [r7, #0]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027d8:	602c      	str	r4, [r5, #0]
		pagenumber=pagenumber+1;
 80027da:	3301      	adds	r3, #1
 80027dc:	603b      	str	r3, [r7, #0]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027de:	e7bb      	b.n	8002758 <writebuffertoflash+0x44>
		SPIF_EraseSector(&hspif1, (int)floor((pagenumber+1)/16));
 80027e0:	1e11      	subs	r1, r2, #0
 80027e2:	bfb8      	it	lt
 80027e4:	f10c 0110 	addlt.w	r1, ip, #16
 80027e8:	4806      	ldr	r0, [pc, #24]	@ (8002804 <writebuffertoflash+0xf0>)
 80027ea:	1109      	asrs	r1, r1, #4
 80027ec:	f00c fa2c 	bl	800ec48 <SPIF_EraseSector>
		sectoreraseen=1;
 80027f0:	2301      	movs	r3, #1
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 80027f2:	f8d7 c000 	ldr.w	ip, [r7]
		sectoreraseen=1;
 80027f6:	f8c8 3000 	str.w	r3, [r8]
 80027fa:	e79d      	b.n	8002738 <writebuffertoflash+0x24>
 80027fc:	200006b8 	.word	0x200006b8
 8002800:	200006bc 	.word	0x200006bc
 8002804:	20000fd4 	.word	0x20000fd4
 8002808:	200006b4 	.word	0x200006b4

0800280c <ssd1306_Line.constprop.0>:
    SSD1306.CurrentX = x;
    SSD1306.CurrentY = y;
}

/* Draw line by Bresenhem's algorithm */
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 800280c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    int32_t deltaX = abs(x2 - x1);
 8002810:	1a16      	subs	r6, r2, r0
    int32_t deltaY = abs(y2 - y1);
 8002812:	eba3 0b01 	sub.w	fp, r3, r1
    int32_t deltaX = abs(x2 - x1);
 8002816:	2e00      	cmp	r6, #0
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 8002818:	b085      	sub	sp, #20
    int32_t deltaX = abs(x2 - x1);
 800281a:	bfb8      	it	lt
 800281c:	4276      	neglt	r6, r6
    int32_t deltaY = abs(y2 - y1);
 800281e:	f1bb 0f00 	cmp.w	fp, #0
 8002822:	bfb8      	it	lt
 8002824:	f1cb 0b00 	rsblt	fp, fp, #0
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 8002828:	469a      	mov	sl, r3
    int32_t signX = ((x1 < x2) ? 1 : -1);
 800282a:	4282      	cmp	r2, r0
 800282c:	bf94      	ite	ls
 800282e:	f04f 33ff 	movls.w	r3, #4294967295
 8002832:	2301      	movhi	r3, #1
 8002834:	9301      	str	r3, [sp, #4]
    int32_t signY = ((y1 < y2) ? 1 : -1);
 8002836:	458a      	cmp	sl, r1
 8002838:	bf94      	ite	ls
 800283a:	f04f 33ff 	movls.w	r3, #4294967295
 800283e:	2301      	movhi	r3, #1
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002840:	0617      	lsls	r7, r2, #24
    int32_t signY = ((y1 < y2) ? 1 : -1);
 8002842:	9302      	str	r3, [sp, #8]
    int32_t error = deltaX - deltaY;
 8002844:	eba6 0e0b 	sub.w	lr, r6, fp
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002848:	d40f      	bmi.n	800286a <ssd1306_Line.constprop.0+0x5e>
 800284a:	f1ba 0f3f 	cmp.w	sl, #63	@ 0x3f
 800284e:	d80c      	bhi.n	800286a <ssd1306_Line.constprop.0+0x5e>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002850:	ea4f 04da 	mov.w	r4, sl, lsr #3
 8002854:	4d21      	ldr	r5, [pc, #132]	@ (80028dc <ssd1306_Line.constprop.0+0xd0>)
 8002856:	eb02 14c4 	add.w	r4, r2, r4, lsl #7
 800285a:	f00a 0c07 	and.w	ip, sl, #7
 800285e:	5d2f      	ldrb	r7, [r5, r4]
 8002860:	2301      	movs	r3, #1
 8002862:	fa03 f30c 	lsl.w	r3, r3, ip
 8002866:	433b      	orrs	r3, r7
 8002868:	552b      	strb	r3, [r5, r4]
 800286a:	4b1c      	ldr	r3, [pc, #112]	@ (80028dc <ssd1306_Line.constprop.0+0xd0>)
 800286c:	f8cd b00c 	str.w	fp, [sp, #12]
 8002870:	2780      	movs	r7, #128	@ 0x80
    ssd1306_DrawPixel(x2, y2, color);

    while((x1 != x2) || (y1 != y2)) {
        ssd1306_DrawPixel(x1, y1, color);
        error2 = error * 2;
        if(error2 > -deltaY) {
 8002872:	f1cb 0800 	rsb	r8, fp, #0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002876:	08cc      	lsrs	r4, r1, #3
    while((x1 != x2) || (y1 != y2)) {
 8002878:	4282      	cmp	r2, r0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800287a:	fb17 0404 	smlabb	r4, r7, r4, r0
        error2 = error * 2;
 800287e:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
    while((x1 != x2) || (y1 != y2)) {
 8002882:	d101      	bne.n	8002888 <ssd1306_Line.constprop.0+0x7c>
 8002884:	458a      	cmp	sl, r1
 8002886:	d026      	beq.n	80028d6 <ssd1306_Line.constprop.0+0xca>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002888:	0605      	lsls	r5, r0, #24
 800288a:	d40c      	bmi.n	80028a6 <ssd1306_Line.constprop.0+0x9a>
 800288c:	293f      	cmp	r1, #63	@ 0x3f
 800288e:	d80a      	bhi.n	80028a6 <ssd1306_Line.constprop.0+0x9a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002890:	f813 9004 	ldrb.w	r9, [r3, r4]
 8002894:	f001 0507 	and.w	r5, r1, #7
 8002898:	f04f 0b01 	mov.w	fp, #1
 800289c:	fa0b f505 	lsl.w	r5, fp, r5
 80028a0:	ea45 0509 	orr.w	r5, r5, r9
 80028a4:	551d      	strb	r5, [r3, r4]
        if(error2 > -deltaY) {
 80028a6:	ebb8 0f4e 	cmp.w	r8, lr, lsl #1
 80028aa:	da05      	bge.n	80028b8 <ssd1306_Line.constprop.0+0xac>
            error -= deltaY;
            x1 += signX;
 80028ac:	9c01      	ldr	r4, [sp, #4]
 80028ae:	4420      	add	r0, r4
            error -= deltaY;
 80028b0:	9c03      	ldr	r4, [sp, #12]
            x1 += signX;
 80028b2:	b2c0      	uxtb	r0, r0
            error -= deltaY;
 80028b4:	ebae 0e04 	sub.w	lr, lr, r4
        }
        
        if(error2 < deltaX) {
 80028b8:	4566      	cmp	r6, ip
 80028ba:	dddc      	ble.n	8002876 <ssd1306_Line.constprop.0+0x6a>
            error += deltaX;
            y1 += signY;
 80028bc:	9c02      	ldr	r4, [sp, #8]
 80028be:	4421      	add	r1, r4
 80028c0:	b2c9      	uxtb	r1, r1
            error += deltaX;
 80028c2:	44b6      	add	lr, r6
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028c4:	08cc      	lsrs	r4, r1, #3
    while((x1 != x2) || (y1 != y2)) {
 80028c6:	4282      	cmp	r2, r0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028c8:	fb17 0404 	smlabb	r4, r7, r4, r0
        error2 = error * 2;
 80028cc:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
    while((x1 != x2) || (y1 != y2)) {
 80028d0:	d1da      	bne.n	8002888 <ssd1306_Line.constprop.0+0x7c>
 80028d2:	458a      	cmp	sl, r1
 80028d4:	d1d8      	bne.n	8002888 <ssd1306_Line.constprop.0+0x7c>
        }
    }
    return;
}
 80028d6:	b005      	add	sp, #20
 80028d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80028dc:	20001138 	.word	0x20001138

080028e0 <ssd1306_WriteChar.constprop.0.isra.0>:
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 80028e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (ch < 32 || ch > 126)
 80028e4:	f1a0 0520 	sub.w	r5, r0, #32
 80028e8:	b2ec      	uxtb	r4, r5
 80028ea:	2c5e      	cmp	r4, #94	@ 0x5e
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 80028ec:	b083      	sub	sp, #12
    if (ch < 32 || ch > 126)
 80028ee:	d866      	bhi.n	80029be <ssd1306_WriteChar.constprop.0.isra.0+0xde>
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 80028f0:	4f35      	ldr	r7, [pc, #212]	@ (80029c8 <ssd1306_WriteChar.constprop.0.isra.0+0xe8>)
 80028f2:	883e      	ldrh	r6, [r7, #0]
 80028f4:	1874      	adds	r4, r6, r1
 80028f6:	2c80      	cmp	r4, #128	@ 0x80
 80028f8:	dc61      	bgt.n	80029be <ssd1306_WriteChar.constprop.0.isra.0+0xde>
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 80028fa:	887f      	ldrh	r7, [r7, #2]
 80028fc:	eb07 0c02 	add.w	ip, r7, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002900:	f1bc 0f40 	cmp.w	ip, #64	@ 0x40
 8002904:	dc5b      	bgt.n	80029be <ssd1306_WriteChar.constprop.0.isra.0+0xde>
    for(i = 0; i < Font.FontHeight; i++) {
 8002906:	2a00      	cmp	r2, #0
 8002908:	d054      	beq.n	80029b4 <ssd1306_WriteChar.constprop.0.isra.0+0xd4>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 800290a:	fb02 f505 	mul.w	r5, r2, r5
 800290e:	2900      	cmp	r1, #0
 8002910:	d050      	beq.n	80029b4 <ssd1306_WriteChar.constprop.0.isra.0+0xd4>
 8002912:	442a      	add	r2, r5
 8002914:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 8002918:	3d01      	subs	r5, #1
 800291a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800291e:	f8df 80ac 	ldr.w	r8, [pc, #172]	@ 80029cc <ssd1306_WriteChar.constprop.0.isra.0+0xec>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002922:	9001      	str	r0, [sp, #4]
 8002924:	3b02      	subs	r3, #2
 8002926:	eb03 0942 	add.w	r9, r3, r2, lsl #1
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 800292a:	fa5f fb86 	uxtb.w	fp, r6
 800292e:	b2fb      	uxtb	r3, r7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002930:	46a4      	mov	ip, r4
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002932:	2b3f      	cmp	r3, #63	@ 0x3f
 8002934:	f105 0502 	add.w	r5, r5, #2
        for(j = 0; j < Font.FontWidth; j++) {
 8002938:	d836      	bhi.n	80029a8 <ssd1306_WriteChar.constprop.0.isra.0+0xc8>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800293a:	f003 0e07 	and.w	lr, r3, #7
 800293e:	2201      	movs	r2, #1
 8002940:	fa02 fe0e 	lsl.w	lr, r2, lr
 8002944:	ea6f 0a0e 	mvn.w	sl, lr
 8002948:	08dc      	lsrs	r4, r3, #3
 800294a:	fa5f fa8a 	uxtb.w	sl, sl
        for(j = 0; j < Font.FontWidth; j++) {
 800294e:	9300      	str	r3, [sp, #0]
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002950:	882e      	ldrh	r6, [r5, #0]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002952:	01e4      	lsls	r4, r4, #7
 8002954:	fa5f fe8e 	uxtb.w	lr, lr
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002958:	465a      	mov	r2, fp
        for(j = 0; j < Font.FontWidth; j++) {
 800295a:	2000      	movs	r0, #0
 800295c:	4653      	mov	r3, sl
 800295e:	e00d      	b.n	800297c <ssd1306_WriteChar.constprop.0.isra.0+0x9c>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002960:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002964:	d105      	bne.n	8002972 <ssd1306_WriteChar.constprop.0.isra.0+0x92>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002966:	f818 a007 	ldrb.w	sl, [r8, r7]
 800296a:	ea03 0a0a 	and.w	sl, r3, sl
 800296e:	f808 a007 	strb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 8002972:	3001      	adds	r0, #1
 8002974:	3201      	adds	r2, #1
 8002976:	4288      	cmp	r0, r1
 8002978:	b2d2      	uxtb	r2, r2
 800297a:	d014      	beq.n	80029a6 <ssd1306_WriteChar.constprop.0.isra.0+0xc6>
            if((b << j) & 0x8000)  {
 800297c:	fa06 f700 	lsl.w	r7, r6, r0
 8002980:	f417 4f00 	tst.w	r7, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002984:	eb02 0704 	add.w	r7, r2, r4
            if((b << j) & 0x8000)  {
 8002988:	d0ea      	beq.n	8002960 <ssd1306_WriteChar.constprop.0.isra.0+0x80>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 800298a:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800298e:	d1f0      	bne.n	8002972 <ssd1306_WriteChar.constprop.0.isra.0+0x92>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002990:	f818 a007 	ldrb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 8002994:	3001      	adds	r0, #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002996:	ea4e 0a0a 	orr.w	sl, lr, sl
        for(j = 0; j < Font.FontWidth; j++) {
 800299a:	3201      	adds	r2, #1
 800299c:	4288      	cmp	r0, r1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800299e:	f808 a007 	strb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 80029a2:	b2d2      	uxtb	r2, r2
 80029a4:	d1ea      	bne.n	800297c <ssd1306_WriteChar.constprop.0.isra.0+0x9c>
 80029a6:	9b00      	ldr	r3, [sp, #0]
    for(i = 0; i < Font.FontHeight; i++) {
 80029a8:	3301      	adds	r3, #1
 80029aa:	45a9      	cmp	r9, r5
 80029ac:	b2db      	uxtb	r3, r3
 80029ae:	d1c0      	bne.n	8002932 <ssd1306_WriteChar.constprop.0.isra.0+0x52>
 80029b0:	9801      	ldr	r0, [sp, #4]
 80029b2:	4664      	mov	r4, ip
    SSD1306.CurrentX += Font.FontWidth;
 80029b4:	4b04      	ldr	r3, [pc, #16]	@ (80029c8 <ssd1306_WriteChar.constprop.0.isra.0+0xe8>)
 80029b6:	801c      	strh	r4, [r3, #0]
}
 80029b8:	b003      	add	sp, #12
 80029ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return 0;
 80029be:	2000      	movs	r0, #0
}
 80029c0:	b003      	add	sp, #12
 80029c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029c6:	bf00      	nop
 80029c8:	20001130 	.word	0x20001130
 80029cc:	20001138 	.word	0x20001138

080029d0 <ssd1306_Fill>:
    memset(SSD1306_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 80029d0:	2800      	cmp	r0, #0
 80029d2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80029d6:	4803      	ldr	r0, [pc, #12]	@ (80029e4 <ssd1306_Fill+0x14>)
 80029d8:	bf14      	ite	ne
 80029da:	21ff      	movne	r1, #255	@ 0xff
 80029dc:	2100      	moveq	r1, #0
 80029de:	f00d bd52 	b.w	8010486 <memset>
 80029e2:	bf00      	nop
 80029e4:	20001138 	.word	0x20001138

080029e8 <ssd1306_UpdateScreen>:
void ssd1306_UpdateScreen(void) {
 80029e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029ec:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8002a7c <ssd1306_UpdateScreen+0x94>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80029f0:	4f21      	ldr	r7, [pc, #132]	@ (8002a78 <ssd1306_UpdateScreen+0x90>)
void ssd1306_UpdateScreen(void) {
 80029f2:	b086      	sub	sp, #24
 80029f4:	25b0      	movs	r5, #176	@ 0xb0
 80029f6:	f10d 0817 	add.w	r8, sp, #23
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80029fa:	f04f 0a00 	mov.w	sl, #0
 80029fe:	2401      	movs	r4, #1
 8002a00:	f04f 36ff 	mov.w	r6, #4294967295
 8002a04:	4623      	mov	r3, r4
 8002a06:	2200      	movs	r2, #0
 8002a08:	2178      	movs	r1, #120	@ 0x78
 8002a0a:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002a0e:	f8cd 8000 	str.w	r8, [sp]
 8002a12:	4638      	mov	r0, r7
 8002a14:	f88d 5017 	strb.w	r5, [sp, #23]
 8002a18:	f004 f9c4 	bl	8006da4 <HAL_I2C_Mem_Write>
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	2178      	movs	r1, #120	@ 0x78
 8002a20:	4623      	mov	r3, r4
 8002a22:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002a26:	f8cd 8000 	str.w	r8, [sp]
 8002a2a:	4638      	mov	r0, r7
 8002a2c:	f88d a017 	strb.w	sl, [sp, #23]
 8002a30:	f004 f9b8 	bl	8006da4 <HAL_I2C_Mem_Write>
        ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 8002a34:	f04f 0c10 	mov.w	ip, #16
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a38:	2200      	movs	r2, #0
 8002a3a:	4623      	mov	r3, r4
 8002a3c:	2178      	movs	r1, #120	@ 0x78
 8002a3e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002a42:	f8cd 8000 	str.w	r8, [sp]
 8002a46:	4638      	mov	r0, r7
 8002a48:	f88d c017 	strb.w	ip, [sp, #23]
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a4c:	4425      	add	r5, r4
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a4e:	f004 f9a9 	bl	8006da4 <HAL_I2C_Mem_Write>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8002a52:	2380      	movs	r3, #128	@ 0x80
 8002a54:	e9cd 3601 	strd	r3, r6, [sp, #4]
 8002a58:	f8cd 9000 	str.w	r9, [sp]
 8002a5c:	2240      	movs	r2, #64	@ 0x40
 8002a5e:	4623      	mov	r3, r4
 8002a60:	2178      	movs	r1, #120	@ 0x78
 8002a62:	4638      	mov	r0, r7
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a64:	b2ed      	uxtb	r5, r5
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8002a66:	f004 f99d 	bl	8006da4 <HAL_I2C_Mem_Write>
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a6a:	2db8      	cmp	r5, #184	@ 0xb8
 8002a6c:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 8002a70:	d1c5      	bne.n	80029fe <ssd1306_UpdateScreen+0x16>
}
 8002a72:	b006      	add	sp, #24
 8002a74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a78:	20000420 	.word	0x20000420
 8002a7c:	20001138 	.word	0x20001138

08002a80 <ssd1306_Init>:
void ssd1306_Init(void) {
 8002a80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    HAL_Delay(100);
 8002a84:	2064      	movs	r0, #100	@ 0x64
void ssd1306_Init(void) {
 8002a86:	b086      	sub	sp, #24
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a88:	4fc2      	ldr	r7, [pc, #776]	@ (8002d94 <ssd1306_Init+0x314>)
    if (on) {
        value = 0xAF;   // Display on
        SSD1306.DisplayOn = 1;
    } else {
        value = 0xAE;   // Display off
        SSD1306.DisplayOn = 0;
 8002a8a:	f8df 9310 	ldr.w	r9, [pc, #784]	@ 8002d9c <ssd1306_Init+0x31c>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a8e:	2401      	movs	r4, #1
        SSD1306.DisplayOn = 0;
 8002a90:	2500      	movs	r5, #0
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a92:	f04f 36ff 	mov.w	r6, #4294967295
 8002a96:	f10d 0817 	add.w	r8, sp, #23
    HAL_Delay(100);
 8002a9a:	f002 fe6f 	bl	800577c <HAL_Delay>
        SSD1306.DisplayOn = 0;
 8002a9e:	23ae      	movs	r3, #174	@ 0xae
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002aa0:	9401      	str	r4, [sp, #4]
 8002aa2:	f88d 3017 	strb.w	r3, [sp, #23]
        SSD1306.DisplayOn = 0;
 8002aa6:	f889 5005 	strb.w	r5, [r9, #5]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002aaa:	4623      	mov	r3, r4
 8002aac:	462a      	mov	r2, r5
 8002aae:	9602      	str	r6, [sp, #8]
 8002ab0:	f8cd 8000 	str.w	r8, [sp]
 8002ab4:	2178      	movs	r1, #120	@ 0x78
 8002ab6:	4638      	mov	r0, r7
 8002ab8:	f004 f974 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 8002abc:	f04f 0a20 	mov.w	sl, #32
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ac0:	4623      	mov	r3, r4
 8002ac2:	462a      	mov	r2, r5
 8002ac4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ac8:	f8cd 8000 	str.w	r8, [sp]
 8002acc:	2178      	movs	r1, #120	@ 0x78
 8002ace:	4638      	mov	r0, r7
 8002ad0:	f88d a017 	strb.w	sl, [sp, #23]
 8002ad4:	f004 f966 	bl	8006da4 <HAL_I2C_Mem_Write>
 8002ad8:	4623      	mov	r3, r4
 8002ada:	462a      	mov	r2, r5
 8002adc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ae0:	f8cd 8000 	str.w	r8, [sp]
 8002ae4:	2178      	movs	r1, #120	@ 0x78
 8002ae6:	4638      	mov	r0, r7
 8002ae8:	f88d 5017 	strb.w	r5, [sp, #23]
 8002aec:	f004 f95a 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8002af0:	23b0      	movs	r3, #176	@ 0xb0
 8002af2:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002af6:	462a      	mov	r2, r5
 8002af8:	4623      	mov	r3, r4
 8002afa:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002afe:	f8cd 8000 	str.w	r8, [sp]
 8002b02:	2178      	movs	r1, #120	@ 0x78
 8002b04:	4638      	mov	r0, r7
 8002b06:	f004 f94d 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 8002b0a:	23c8      	movs	r3, #200	@ 0xc8
 8002b0c:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b10:	462a      	mov	r2, r5
 8002b12:	4623      	mov	r3, r4
 8002b14:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b18:	f8cd 8000 	str.w	r8, [sp]
 8002b1c:	2178      	movs	r1, #120	@ 0x78
 8002b1e:	4638      	mov	r0, r7
 8002b20:	f004 f940 	bl	8006da4 <HAL_I2C_Mem_Write>
 8002b24:	4623      	mov	r3, r4
 8002b26:	462a      	mov	r2, r5
 8002b28:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b2c:	f8cd 8000 	str.w	r8, [sp]
 8002b30:	2178      	movs	r1, #120	@ 0x78
 8002b32:	4638      	mov	r0, r7
 8002b34:	f88d 5017 	strb.w	r5, [sp, #23]
 8002b38:	f004 f934 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x10); //---set high column address
 8002b3c:	2310      	movs	r3, #16
 8002b3e:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b42:	462a      	mov	r2, r5
 8002b44:	4623      	mov	r3, r4
 8002b46:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b4a:	f8cd 8000 	str.w	r8, [sp]
 8002b4e:	2178      	movs	r1, #120	@ 0x78
 8002b50:	4638      	mov	r0, r7
 8002b52:	f004 f927 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 8002b56:	2340      	movs	r3, #64	@ 0x40
 8002b58:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b5c:	462a      	mov	r2, r5
 8002b5e:	4623      	mov	r3, r4
 8002b60:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b64:	f8cd 8000 	str.w	r8, [sp]
 8002b68:	2178      	movs	r1, #120	@ 0x78
 8002b6a:	4638      	mov	r0, r7
 8002b6c:	f004 f91a 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(kSetContrastControlRegister);
 8002b70:	2381      	movs	r3, #129	@ 0x81
 8002b72:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b76:	462a      	mov	r2, r5
 8002b78:	4623      	mov	r3, r4
 8002b7a:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b7e:	f8cd 8000 	str.w	r8, [sp]
 8002b82:	2178      	movs	r1, #120	@ 0x78
 8002b84:	4638      	mov	r0, r7
 8002b86:	f004 f90d 	bl	8006da4 <HAL_I2C_Mem_Write>
 8002b8a:	4623      	mov	r3, r4
 8002b8c:	462a      	mov	r2, r5
 8002b8e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b92:	f8cd 8000 	str.w	r8, [sp]
 8002b96:	2178      	movs	r1, #120	@ 0x78
 8002b98:	4638      	mov	r0, r7
 8002b9a:	f88d 6017 	strb.w	r6, [sp, #23]
 8002b9e:	f004 f901 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 8002ba2:	23a1      	movs	r3, #161	@ 0xa1
 8002ba4:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ba8:	462a      	mov	r2, r5
 8002baa:	4623      	mov	r3, r4
 8002bac:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bb0:	f8cd 8000 	str.w	r8, [sp]
 8002bb4:	2178      	movs	r1, #120	@ 0x78
 8002bb6:	4638      	mov	r0, r7
 8002bb8:	f004 f8f4 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA6); //--set normal color
 8002bbc:	23a6      	movs	r3, #166	@ 0xa6
 8002bbe:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bc2:	462a      	mov	r2, r5
 8002bc4:	4623      	mov	r3, r4
 8002bc6:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bca:	f8cd 8000 	str.w	r8, [sp]
 8002bce:	2178      	movs	r1, #120	@ 0x78
 8002bd0:	4638      	mov	r0, r7
 8002bd2:	f004 f8e7 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 8002bd6:	23a8      	movs	r3, #168	@ 0xa8
 8002bd8:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bdc:	462a      	mov	r2, r5
 8002bde:	4623      	mov	r3, r4
 8002be0:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002be4:	f8cd 8000 	str.w	r8, [sp]
 8002be8:	2178      	movs	r1, #120	@ 0x78
 8002bea:	4638      	mov	r0, r7
 8002bec:	f004 f8da 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x3F); //
 8002bf0:	233f      	movs	r3, #63	@ 0x3f
 8002bf2:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bf6:	462a      	mov	r2, r5
 8002bf8:	4623      	mov	r3, r4
 8002bfa:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bfe:	f8cd 8000 	str.w	r8, [sp]
 8002c02:	2178      	movs	r1, #120	@ 0x78
 8002c04:	4638      	mov	r0, r7
 8002c06:	f004 f8cd 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8002c0a:	23a4      	movs	r3, #164	@ 0xa4
 8002c0c:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c10:	462a      	mov	r2, r5
 8002c12:	4623      	mov	r3, r4
 8002c14:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c18:	f8cd 8000 	str.w	r8, [sp]
 8002c1c:	2178      	movs	r1, #120	@ 0x78
 8002c1e:	4638      	mov	r0, r7
 8002c20:	f004 f8c0 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 8002c24:	23d3      	movs	r3, #211	@ 0xd3
 8002c26:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c2a:	462a      	mov	r2, r5
 8002c2c:	4623      	mov	r3, r4
 8002c2e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c32:	f8cd 8000 	str.w	r8, [sp]
 8002c36:	2178      	movs	r1, #120	@ 0x78
 8002c38:	4638      	mov	r0, r7
 8002c3a:	f004 f8b3 	bl	8006da4 <HAL_I2C_Mem_Write>
 8002c3e:	4623      	mov	r3, r4
 8002c40:	462a      	mov	r2, r5
 8002c42:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c46:	f8cd 8000 	str.w	r8, [sp]
 8002c4a:	2178      	movs	r1, #120	@ 0x78
 8002c4c:	4638      	mov	r0, r7
 8002c4e:	f88d 5017 	strb.w	r5, [sp, #23]
 8002c52:	f004 f8a7 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 8002c56:	23d5      	movs	r3, #213	@ 0xd5
 8002c58:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c5c:	462a      	mov	r2, r5
 8002c5e:	4623      	mov	r3, r4
 8002c60:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c64:	f8cd 8000 	str.w	r8, [sp]
 8002c68:	2178      	movs	r1, #120	@ 0x78
 8002c6a:	4638      	mov	r0, r7
 8002c6c:	f004 f89a 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xF0); //--set divide ratio
 8002c70:	23f0      	movs	r3, #240	@ 0xf0
 8002c72:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c76:	462a      	mov	r2, r5
 8002c78:	4623      	mov	r3, r4
 8002c7a:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c7e:	f8cd 8000 	str.w	r8, [sp]
 8002c82:	2178      	movs	r1, #120	@ 0x78
 8002c84:	4638      	mov	r0, r7
 8002c86:	f004 f88d 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD9); //--set pre-charge period
 8002c8a:	23d9      	movs	r3, #217	@ 0xd9
 8002c8c:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c90:	462a      	mov	r2, r5
 8002c92:	4623      	mov	r3, r4
 8002c94:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c98:	f8cd 8000 	str.w	r8, [sp]
 8002c9c:	2178      	movs	r1, #120	@ 0x78
 8002c9e:	4638      	mov	r0, r7
 8002ca0:	f004 f880 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x22); //
 8002ca4:	2322      	movs	r3, #34	@ 0x22
 8002ca6:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002caa:	462a      	mov	r2, r5
 8002cac:	4623      	mov	r3, r4
 8002cae:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cb2:	f8cd 8000 	str.w	r8, [sp]
 8002cb6:	2178      	movs	r1, #120	@ 0x78
 8002cb8:	4638      	mov	r0, r7
 8002cba:	f004 f873 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 8002cbe:	23da      	movs	r3, #218	@ 0xda
 8002cc0:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cc4:	462a      	mov	r2, r5
 8002cc6:	4623      	mov	r3, r4
 8002cc8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ccc:	f8cd 8000 	str.w	r8, [sp]
 8002cd0:	2178      	movs	r1, #120	@ 0x78
 8002cd2:	4638      	mov	r0, r7
 8002cd4:	f004 f866 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x12);
 8002cd8:	2312      	movs	r3, #18
 8002cda:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cde:	462a      	mov	r2, r5
 8002ce0:	4623      	mov	r3, r4
 8002ce2:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ce6:	f8cd 8000 	str.w	r8, [sp]
 8002cea:	2178      	movs	r1, #120	@ 0x78
 8002cec:	4638      	mov	r0, r7
 8002cee:	f004 f859 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xDB); //--set vcomh
 8002cf2:	23db      	movs	r3, #219	@ 0xdb
 8002cf4:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cf8:	462a      	mov	r2, r5
 8002cfa:	4623      	mov	r3, r4
 8002cfc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d00:	f8cd 8000 	str.w	r8, [sp]
 8002d04:	2178      	movs	r1, #120	@ 0x78
 8002d06:	4638      	mov	r0, r7
 8002d08:	f004 f84c 	bl	8006da4 <HAL_I2C_Mem_Write>
 8002d0c:	4623      	mov	r3, r4
 8002d0e:	462a      	mov	r2, r5
 8002d10:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d14:	f8cd 8000 	str.w	r8, [sp]
 8002d18:	2178      	movs	r1, #120	@ 0x78
 8002d1a:	4638      	mov	r0, r7
 8002d1c:	f88d a017 	strb.w	sl, [sp, #23]
 8002d20:	f004 f840 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 8002d24:	238d      	movs	r3, #141	@ 0x8d
 8002d26:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d2a:	462a      	mov	r2, r5
 8002d2c:	4623      	mov	r3, r4
 8002d2e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d32:	f8cd 8000 	str.w	r8, [sp]
 8002d36:	2178      	movs	r1, #120	@ 0x78
 8002d38:	4638      	mov	r0, r7
 8002d3a:	f004 f833 	bl	8006da4 <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x14); //
 8002d3e:	2314      	movs	r3, #20
 8002d40:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d44:	462a      	mov	r2, r5
 8002d46:	4623      	mov	r3, r4
 8002d48:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d4c:	f8cd 8000 	str.w	r8, [sp]
 8002d50:	2178      	movs	r1, #120	@ 0x78
 8002d52:	4638      	mov	r0, r7
 8002d54:	f004 f826 	bl	8006da4 <HAL_I2C_Mem_Write>
        SSD1306.DisplayOn = 1;
 8002d58:	22af      	movs	r2, #175	@ 0xaf
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d5a:	4623      	mov	r3, r4
 8002d5c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d60:	f8cd 8000 	str.w	r8, [sp]
 8002d64:	f88d 2017 	strb.w	r2, [sp, #23]
 8002d68:	4638      	mov	r0, r7
 8002d6a:	462a      	mov	r2, r5
        SSD1306.DisplayOn = 1;
 8002d6c:	f889 4005 	strb.w	r4, [r9, #5]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d70:	2178      	movs	r1, #120	@ 0x78
 8002d72:	f004 f817 	bl	8006da4 <HAL_I2C_Mem_Write>
    memset(SSD1306_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 8002d76:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002d7a:	4629      	mov	r1, r5
 8002d7c:	4806      	ldr	r0, [pc, #24]	@ (8002d98 <ssd1306_Init+0x318>)
 8002d7e:	f00d fb82 	bl	8010486 <memset>
    ssd1306_UpdateScreen();
 8002d82:	f7ff fe31 	bl	80029e8 <ssd1306_UpdateScreen>
    SSD1306.CurrentX = 0;
 8002d86:	f8c9 5000 	str.w	r5, [r9]
    SSD1306.Initialized = 1;
 8002d8a:	f889 4004 	strb.w	r4, [r9, #4]
}
 8002d8e:	b006      	add	sp, #24
 8002d90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002d94:	20000420 	.word	0x20000420
 8002d98:	20001138 	.word	0x20001138
 8002d9c:	20001130 	.word	0x20001130

08002da0 <ssd1306_WriteChar>:
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002da4:	b087      	sub	sp, #28
    if (ch < 32 || ch > 126)
 8002da6:	f1a0 0520 	sub.w	r5, r0, #32
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002daa:	ac06      	add	r4, sp, #24
 8002dac:	e904 0006 	stmdb	r4, {r1, r2}
    if (ch < 32 || ch > 126)
 8002db0:	b2ea      	uxtb	r2, r5
 8002db2:	2a5e      	cmp	r2, #94	@ 0x5e
 8002db4:	d85c      	bhi.n	8002e70 <ssd1306_WriteChar+0xd0>
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002db6:	4e58      	ldr	r6, [pc, #352]	@ (8002f18 <ssd1306_WriteChar+0x178>)
 8002db8:	f89d 4010 	ldrb.w	r4, [sp, #16]
 8002dbc:	8831      	ldrh	r1, [r6, #0]
 8002dbe:	eb01 0e04 	add.w	lr, r1, r4
 8002dc2:	f1be 0f80 	cmp.w	lr, #128	@ 0x80
 8002dc6:	dc53      	bgt.n	8002e70 <ssd1306_WriteChar+0xd0>
 8002dc8:	f89d 2011 	ldrb.w	r2, [sp, #17]
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 8002dcc:	f8b6 c002 	ldrh.w	ip, [r6, #2]
 8002dd0:	eb0c 0602 	add.w	r6, ip, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002dd4:	2e40      	cmp	r6, #64	@ 0x40
 8002dd6:	dc4b      	bgt.n	8002e70 <ssd1306_WriteChar+0xd0>
    for(i = 0; i < Font.FontHeight; i++) {
 8002dd8:	2a00      	cmp	r2, #0
 8002dda:	d043      	beq.n	8002e64 <ssd1306_WriteChar+0xc4>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002ddc:	fb02 f605 	mul.w	r6, r2, r5
 8002de0:	9d05      	ldr	r5, [sp, #20]
 8002de2:	2c00      	cmp	r4, #0
 8002de4:	d03e      	beq.n	8002e64 <ssd1306_WriteChar+0xc4>
 8002de6:	4432      	add	r2, r6
 8002de8:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 8002dec:	3e01      	subs	r6, #1
 8002dee:	eb05 0646 	add.w	r6, r5, r6, lsl #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002df2:	e9cd 0e02 	strd	r0, lr, [sp, #8]
 8002df6:	3d02      	subs	r5, #2
 8002df8:	eb05 0a42 	add.w	sl, r5, r2, lsl #1
 8002dfc:	4d47      	ldr	r5, [pc, #284]	@ (8002f1c <ssd1306_WriteChar+0x17c>)
 8002dfe:	fa5f fc8c 	uxtb.w	ip, ip
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002e02:	fa5f fb81 	uxtb.w	fp, r1
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002e06:	f1bc 0f3f 	cmp.w	ip, #63	@ 0x3f
 8002e0a:	f106 0602 	add.w	r6, r6, #2
        for(j = 0; j < Font.FontWidth; j++) {
 8002e0e:	d821      	bhi.n	8002e54 <ssd1306_WriteChar+0xb4>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e10:	2201      	movs	r2, #1
 8002e12:	f00c 0807 	and.w	r8, ip, #7
 8002e16:	fa02 f808 	lsl.w	r8, r2, r8
 8002e1a:	ea4f 00dc 	mov.w	r0, ip, lsr #3
 8002e1e:	ea6f 0e08 	mvn.w	lr, r8
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002e22:	8837      	ldrh	r7, [r6, #0]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e24:	01c0      	lsls	r0, r0, #7
 8002e26:	fa5f fe8e 	uxtb.w	lr, lr
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002e2a:	465a      	mov	r2, fp
 8002e2c:	b323      	cbz	r3, 8002e78 <ssd1306_WriteChar+0xd8>
 8002e2e:	2b01      	cmp	r3, #1
        for(j = 0; j < Font.FontWidth; j++) {
 8002e30:	f04f 0100 	mov.w	r1, #0
 8002e34:	d04e      	beq.n	8002ed4 <ssd1306_WriteChar+0x134>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e36:	0617      	lsls	r7, r2, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e38:	eb02 0800 	add.w	r8, r2, r0
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e3c:	d405      	bmi.n	8002e4a <ssd1306_WriteChar+0xaa>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e3e:	f815 9008 	ldrb.w	r9, [r5, r8]
 8002e42:	ea0e 0909 	and.w	r9, lr, r9
 8002e46:	f805 9008 	strb.w	r9, [r5, r8]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e4a:	3101      	adds	r1, #1
 8002e4c:	3201      	adds	r2, #1
 8002e4e:	428c      	cmp	r4, r1
 8002e50:	b2d2      	uxtb	r2, r2
 8002e52:	d1f0      	bne.n	8002e36 <ssd1306_WriteChar+0x96>
    for(i = 0; i < Font.FontHeight; i++) {
 8002e54:	f10c 0c01 	add.w	ip, ip, #1
 8002e58:	4556      	cmp	r6, sl
 8002e5a:	fa5f fc8c 	uxtb.w	ip, ip
 8002e5e:	d1d2      	bne.n	8002e06 <ssd1306_WriteChar+0x66>
 8002e60:	e9dd 0e02 	ldrd	r0, lr, [sp, #8]
    SSD1306.CurrentX += Font.FontWidth;
 8002e64:	4b2c      	ldr	r3, [pc, #176]	@ (8002f18 <ssd1306_WriteChar+0x178>)
 8002e66:	f8a3 e000 	strh.w	lr, [r3]
}
 8002e6a:	b007      	add	sp, #28
 8002e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return 0;
 8002e70:	2000      	movs	r0, #0
}
 8002e72:	b007      	add	sp, #28
 8002e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        for(j = 0; j < Font.FontWidth; j++) {
 8002e78:	4619      	mov	r1, r3
 8002e7a:	9601      	str	r6, [sp, #4]
 8002e7c:	e00d      	b.n	8002e9a <ssd1306_WriteChar+0xfa>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e7e:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002e82:	d105      	bne.n	8002e90 <ssd1306_WriteChar+0xf0>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002e84:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002e88:	ea49 0908 	orr.w	r9, r9, r8
 8002e8c:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e90:	3101      	adds	r1, #1
 8002e92:	3201      	adds	r2, #1
 8002e94:	42a1      	cmp	r1, r4
 8002e96:	b2d2      	uxtb	r2, r2
 8002e98:	d014      	beq.n	8002ec4 <ssd1306_WriteChar+0x124>
            if((b << j) & 0x8000)  {
 8002e9a:	fa07 f601 	lsl.w	r6, r7, r1
 8002e9e:	f416 4f00 	tst.w	r6, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002ea2:	eb02 0600 	add.w	r6, r2, r0
            if((b << j) & 0x8000)  {
 8002ea6:	d0ea      	beq.n	8002e7e <ssd1306_WriteChar+0xde>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002ea8:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002eac:	d1f0      	bne.n	8002e90 <ssd1306_WriteChar+0xf0>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002eae:	f815 9006 	ldrb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002eb2:	3101      	adds	r1, #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002eb4:	ea0e 0909 	and.w	r9, lr, r9
        for(j = 0; j < Font.FontWidth; j++) {
 8002eb8:	3201      	adds	r2, #1
 8002eba:	42a1      	cmp	r1, r4
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002ebc:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002ec0:	b2d2      	uxtb	r2, r2
 8002ec2:	d1ea      	bne.n	8002e9a <ssd1306_WriteChar+0xfa>
 8002ec4:	9e01      	ldr	r6, [sp, #4]
    for(i = 0; i < Font.FontHeight; i++) {
 8002ec6:	f10c 0c01 	add.w	ip, ip, #1
 8002eca:	4556      	cmp	r6, sl
 8002ecc:	fa5f fc8c 	uxtb.w	ip, ip
 8002ed0:	d199      	bne.n	8002e06 <ssd1306_WriteChar+0x66>
 8002ed2:	e7c5      	b.n	8002e60 <ssd1306_WriteChar+0xc0>
        for(j = 0; j < Font.FontWidth; j++) {
 8002ed4:	9601      	str	r6, [sp, #4]
 8002ed6:	e00d      	b.n	8002ef4 <ssd1306_WriteChar+0x154>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002ed8:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002edc:	d105      	bne.n	8002eea <ssd1306_WriteChar+0x14a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002ede:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002ee2:	ea49 0908 	orr.w	r9, r9, r8
 8002ee6:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002eea:	3101      	adds	r1, #1
 8002eec:	3201      	adds	r2, #1
 8002eee:	42a1      	cmp	r1, r4
 8002ef0:	b2d2      	uxtb	r2, r2
 8002ef2:	d0e7      	beq.n	8002ec4 <ssd1306_WriteChar+0x124>
            if((b << j) & 0x8000)  {
 8002ef4:	fa07 f601 	lsl.w	r6, r7, r1
 8002ef8:	f416 4f00 	tst.w	r6, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002efc:	eb02 0600 	add.w	r6, r2, r0
            if((b << j) & 0x8000)  {
 8002f00:	d1ea      	bne.n	8002ed8 <ssd1306_WriteChar+0x138>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f02:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002f06:	d1f0      	bne.n	8002eea <ssd1306_WriteChar+0x14a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002f08:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002f0c:	ea0e 0909 	and.w	r9, lr, r9
 8002f10:	f805 9006 	strb.w	r9, [r5, r6]
 8002f14:	e7e9      	b.n	8002eea <ssd1306_WriteChar+0x14a>
 8002f16:	bf00      	nop
 8002f18:	20001130 	.word	0x20001130
 8002f1c:	20001138 	.word	0x20001138

08002f20 <ssd1306_WriteString>:
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002f20:	b570      	push	{r4, r5, r6, lr}
 8002f22:	4604      	mov	r4, r0
 8002f24:	b082      	sub	sp, #8
    while (*str) {
 8002f26:	7800      	ldrb	r0, [r0, #0]
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002f28:	466d      	mov	r5, sp
 8002f2a:	e885 0006 	stmia.w	r5, {r1, r2}
    while (*str) {
 8002f2e:	b178      	cbz	r0, 8002f50 <ssd1306_WriteString+0x30>
 8002f30:	461e      	mov	r6, r3
 8002f32:	e002      	b.n	8002f3a <ssd1306_WriteString+0x1a>
 8002f34:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8002f38:	b150      	cbz	r0, 8002f50 <ssd1306_WriteString+0x30>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 8002f3a:	e895 0006 	ldmia.w	r5, {r1, r2}
 8002f3e:	4633      	mov	r3, r6
 8002f40:	f7ff ff2e 	bl	8002da0 <ssd1306_WriteChar>
 8002f44:	7822      	ldrb	r2, [r4, #0]
 8002f46:	4290      	cmp	r0, r2
 8002f48:	d0f4      	beq.n	8002f34 <ssd1306_WriteString+0x14>
}
 8002f4a:	4610      	mov	r0, r2
 8002f4c:	b002      	add	sp, #8
 8002f4e:	bd70      	pop	{r4, r5, r6, pc}
    return *str;
 8002f50:	2200      	movs	r2, #0
}
 8002f52:	4610      	mov	r0, r2
 8002f54:	b002      	add	sp, #8
 8002f56:	bd70      	pop	{r4, r5, r6, pc}

08002f58 <ssd1306_SetCursor>:
    SSD1306.CurrentX = x;
 8002f58:	4b01      	ldr	r3, [pc, #4]	@ (8002f60 <ssd1306_SetCursor+0x8>)
 8002f5a:	8018      	strh	r0, [r3, #0]
    SSD1306.CurrentY = y;
 8002f5c:	8059      	strh	r1, [r3, #2]
}
 8002f5e:	4770      	bx	lr
 8002f60:	20001130 	.word	0x20001130

08002f64 <ssd1306_DrawBitmap>:
void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SSD1306_COLOR color) {
 8002f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f68:	4606      	mov	r6, r0
 8002f6a:	b085      	sub	sp, #20
    if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f6c:	0635      	lsls	r5, r6, #24
void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SSD1306_COLOR color) {
 8002f6e:	f89d 4038 	ldrb.w	r4, [sp, #56]	@ 0x38
 8002f72:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
    if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f76:	d46a      	bmi.n	800304e <ssd1306_DrawBitmap+0xea>
 8002f78:	293f      	cmp	r1, #63	@ 0x3f
 8002f7a:	d868      	bhi.n	800304e <ssd1306_DrawBitmap+0xea>
    for (uint8_t j = 0; j < h; j++, y++) {
 8002f7c:	2c00      	cmp	r4, #0
 8002f7e:	d066      	beq.n	800304e <ssd1306_DrawBitmap+0xea>
 8002f80:	4615      	mov	r5, r2
    int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 8002f82:	1dda      	adds	r2, r3, #7
 8002f84:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d060      	beq.n	800304e <ssd1306_DrawBitmap+0xea>
 8002f8c:	440c      	add	r4, r1
 8002f8e:	fa5f fb84 	uxtb.w	fp, r4
 8002f92:	2400      	movs	r4, #0
 8002f94:	46b1      	mov	r9, r6
    uint8_t byte = 0;
 8002f96:	46a4      	mov	ip, r4
 8002f98:	4606      	mov	r6, r0
        for (uint8_t i = 0; i < w; i++) {
 8002f9a:	293f      	cmp	r1, #63	@ 0x3f
 8002f9c:	d841      	bhi.n	8003022 <ssd1306_DrawBitmap+0xbe>
 8002f9e:	2e01      	cmp	r6, #1
 8002fa0:	9503      	str	r5, [sp, #12]
 8002fa2:	d057      	beq.n	8003054 <ssd1306_DrawBitmap+0xf0>
 8002fa4:	46b0      	mov	r8, r6
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002fa6:	2001      	movs	r0, #1
 8002fa8:	f001 0207 	and.w	r2, r1, #7
 8002fac:	fa00 f202 	lsl.w	r2, r0, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fb0:	43d2      	mvns	r2, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fb2:	9e03      	ldr	r6, [sp, #12]
 8002fb4:	b2d5      	uxtb	r5, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002fb6:	ea4f 0ed1 	mov.w	lr, r1, lsr #3
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fba:	e9cd 5101 	strd	r5, r1, [sp, #4]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002fbe:	ea4f 1ece 	mov.w	lr, lr, lsl #7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fc2:	4648      	mov	r0, r9
 8002fc4:	2200      	movs	r2, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fc6:	1937      	adds	r7, r6, r4
 8002fc8:	e002      	b.n	8002fd0 <ssd1306_DrawBitmap+0x6c>
        for (uint8_t i = 0; i < w; i++) {
 8002fca:	429a      	cmp	r2, r3
 8002fcc:	b2e8      	uxtb	r0, r5
 8002fce:	d01e      	beq.n	800300e <ssd1306_DrawBitmap+0xaa>
                byte <<= 1;
 8002fd0:	b2d5      	uxtb	r5, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fd2:	08ed      	lsrs	r5, r5, #3
            if (i & 7) {
 8002fd4:	f012 0f07 	tst.w	r2, #7
                byte <<= 1;
 8002fd8:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fdc:	bf0c      	ite	eq
 8002fde:	f817 c005 	ldrbeq.w	ip, [r7, r5]
                byte <<= 1;
 8002fe2:	fa5f fc8c 	uxtbne.w	ip, ip
            if (byte & 0x80) {
 8002fe6:	f01c 0f80 	tst.w	ip, #128	@ 0x80
        for (uint8_t i = 0; i < w; i++) {
 8002fea:	f100 0501 	add.w	r5, r0, #1
 8002fee:	f102 0201 	add.w	r2, r2, #1
            if (byte & 0x80) {
 8002ff2:	d0ea      	beq.n	8002fca <ssd1306_DrawBitmap+0x66>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002ff4:	0601      	lsls	r1, r0, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002ff6:	eb00 060e 	add.w	r6, r0, lr
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002ffa:	d4e6      	bmi.n	8002fca <ssd1306_DrawBitmap+0x66>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002ffc:	4833      	ldr	r0, [pc, #204]	@ (80030cc <ssd1306_DrawBitmap+0x168>)
 8002ffe:	9901      	ldr	r1, [sp, #4]
 8003000:	5d80      	ldrb	r0, [r0, r6]
 8003002:	4008      	ands	r0, r1
 8003004:	4931      	ldr	r1, [pc, #196]	@ (80030cc <ssd1306_DrawBitmap+0x168>)
        for (uint8_t i = 0; i < w; i++) {
 8003006:	429a      	cmp	r2, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8003008:	5588      	strb	r0, [r1, r6]
        for (uint8_t i = 0; i < w; i++) {
 800300a:	b2e8      	uxtb	r0, r5
 800300c:	d1e0      	bne.n	8002fd0 <ssd1306_DrawBitmap+0x6c>
 800300e:	9902      	ldr	r1, [sp, #8]
    for (uint8_t j = 0; j < h; j++, y++) {
 8003010:	3101      	adds	r1, #1
 8003012:	b2c9      	uxtb	r1, r1
 8003014:	4559      	cmp	r1, fp
 8003016:	4454      	add	r4, sl
 8003018:	d019      	beq.n	800304e <ssd1306_DrawBitmap+0xea>
        for (uint8_t i = 0; i < w; i++) {
 800301a:	2940      	cmp	r1, #64	@ 0x40
 800301c:	d1c3      	bne.n	8002fa6 <ssd1306_DrawBitmap+0x42>
 800301e:	9d03      	ldr	r5, [sp, #12]
 8003020:	4646      	mov	r6, r8
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003022:	2000      	movs	r0, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003024:	192f      	adds	r7, r5, r4
                byte <<= 1;
 8003026:	b2c2      	uxtb	r2, r0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003028:	08d2      	lsrs	r2, r2, #3
            if (i & 7) {
 800302a:	f010 0f07 	tst.w	r0, #7
                byte <<= 1;
 800302e:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
        for (uint8_t i = 0; i < w; i++) {
 8003032:	f100 0001 	add.w	r0, r0, #1
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003036:	bf0c      	ite	eq
 8003038:	f817 c002 	ldrbeq.w	ip, [r7, r2]
                byte <<= 1;
 800303c:	fa5f fc8c 	uxtbne.w	ip, ip
        for (uint8_t i = 0; i < w; i++) {
 8003040:	4283      	cmp	r3, r0
 8003042:	d1f0      	bne.n	8003026 <ssd1306_DrawBitmap+0xc2>
    for (uint8_t j = 0; j < h; j++, y++) {
 8003044:	3101      	adds	r1, #1
 8003046:	b2c9      	uxtb	r1, r1
 8003048:	4559      	cmp	r1, fp
 800304a:	4454      	add	r4, sl
 800304c:	d1a5      	bne.n	8002f9a <ssd1306_DrawBitmap+0x36>
}
 800304e:	b005      	add	sp, #20
 8003050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003054:	f001 0207 	and.w	r2, r1, #7
 8003058:	fa06 f202 	lsl.w	r2, r6, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800305c:	9f03      	ldr	r7, [sp, #12]
 800305e:	b2d5      	uxtb	r5, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003060:	ea4f 08d1 	mov.w	r8, r1, lsr #3
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003064:	e9cd 5101 	strd	r5, r1, [sp, #4]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003068:	ea4f 18c8 	mov.w	r8, r8, lsl #7
 800306c:	4648      	mov	r0, r9
 800306e:	2200      	movs	r2, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003070:	eb07 0e04 	add.w	lr, r7, r4
 8003074:	e002      	b.n	800307c <ssd1306_DrawBitmap+0x118>
        for (uint8_t i = 0; i < w; i++) {
 8003076:	4293      	cmp	r3, r2
 8003078:	b2e8      	uxtb	r0, r5
 800307a:	d01d      	beq.n	80030b8 <ssd1306_DrawBitmap+0x154>
                byte <<= 1;
 800307c:	b2d5      	uxtb	r5, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800307e:	08ed      	lsrs	r5, r5, #3
            if (i & 7) {
 8003080:	0757      	lsls	r7, r2, #29
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003082:	bf0e      	itee	eq
 8003084:	f81e c005 	ldrbeq.w	ip, [lr, r5]
                byte <<= 1;
 8003088:	ea4f 0c4c 	movne.w	ip, ip, lsl #1
 800308c:	fa5f fc8c 	uxtbne.w	ip, ip
            if (byte & 0x80) {
 8003090:	f01c 0f80 	tst.w	ip, #128	@ 0x80
        for (uint8_t i = 0; i < w; i++) {
 8003094:	f100 0501 	add.w	r5, r0, #1
 8003098:	f102 0201 	add.w	r2, r2, #1
            if (byte & 0x80) {
 800309c:	d0eb      	beq.n	8003076 <ssd1306_DrawBitmap+0x112>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 800309e:	0601      	lsls	r1, r0, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80030a0:	eb00 0708 	add.w	r7, r0, r8
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 80030a4:	d4e7      	bmi.n	8003076 <ssd1306_DrawBitmap+0x112>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80030a6:	4809      	ldr	r0, [pc, #36]	@ (80030cc <ssd1306_DrawBitmap+0x168>)
 80030a8:	9901      	ldr	r1, [sp, #4]
 80030aa:	5dc0      	ldrb	r0, [r0, r7]
 80030ac:	4308      	orrs	r0, r1
 80030ae:	4907      	ldr	r1, [pc, #28]	@ (80030cc <ssd1306_DrawBitmap+0x168>)
        for (uint8_t i = 0; i < w; i++) {
 80030b0:	4293      	cmp	r3, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80030b2:	55c8      	strb	r0, [r1, r7]
        for (uint8_t i = 0; i < w; i++) {
 80030b4:	b2e8      	uxtb	r0, r5
 80030b6:	d1e1      	bne.n	800307c <ssd1306_DrawBitmap+0x118>
 80030b8:	9902      	ldr	r1, [sp, #8]
    for (uint8_t j = 0; j < h; j++, y++) {
 80030ba:	3101      	adds	r1, #1
 80030bc:	b2c9      	uxtb	r1, r1
 80030be:	458b      	cmp	fp, r1
 80030c0:	4454      	add	r4, sl
 80030c2:	d0c4      	beq.n	800304e <ssd1306_DrawBitmap+0xea>
        for (uint8_t i = 0; i < w; i++) {
 80030c4:	2940      	cmp	r1, #64	@ 0x40
 80030c6:	d1c5      	bne.n	8003054 <ssd1306_DrawBitmap+0xf0>
 80030c8:	9d03      	ldr	r5, [sp, #12]
 80030ca:	e7aa      	b.n	8003022 <ssd1306_DrawBitmap+0xbe>
 80030cc:	20001138 	.word	0x20001138

080030d0 <batterygauge>:



}

void batterygauge(float vbat,int x, int y,int currentsquare){
 80030d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030d4:	b2cc      	uxtb	r4, r1
 80030d6:	b2c5      	uxtb	r5, r0
 80030d8:	1c66      	adds	r6, r4, #1
 80030da:	1d67      	adds	r7, r4, #5
 80030dc:	f105 010f 	add.w	r1, r5, #15
 80030e0:	b2c9      	uxtb	r1, r1
 80030e2:	b2f6      	uxtb	r6, r6
 80030e4:	b2ff      	uxtb	r7, r7
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030e6:	b081      	sub	sp, #4
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030e8:	463b      	mov	r3, r7
 80030ea:	4608      	mov	r0, r1
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030ec:	4691      	mov	r9, r2
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030ee:	460a      	mov	r2, r1
 80030f0:	4631      	mov	r1, r6
 80030f2:	f7ff fb8b 	bl	800280c <ssd1306_Line.constprop.0>
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030f6:	f105 0210 	add.w	r2, r5, #16
 80030fa:	463b      	mov	r3, r7
 80030fc:	b2d2      	uxtb	r2, r2
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030fe:	f105 070e 	add.w	r7, r5, #14
 8003102:	b2ff      	uxtb	r7, r7
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 8003104:	4631      	mov	r1, r6
 8003106:	4610      	mov	r0, r2
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 8003108:	1da6      	adds	r6, r4, #6
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 800310a:	f7ff fb7f 	bl	800280c <ssd1306_Line.constprop.0>
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 800310e:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 8003110:	463a      	mov	r2, r7
 8003112:	4623      	mov	r3, r4
 8003114:	4621      	mov	r1, r4
 8003116:	4628      	mov	r0, r5
 8003118:	f7ff fb78 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 800311c:	4633      	mov	r3, r6
 800311e:	4621      	mov	r1, r4
 8003120:	4638      	mov	r0, r7
 8003122:	f7ff fb73 	bl	800280c <ssd1306_Line.constprop.0>
void batterygauge(float vbat,int x, int y,int currentsquare){
 8003126:	ee10 8a10 	vmov	r8, s0
    ssd1306_Line(x2,y2,x1,y2,color);
 800312a:	462a      	mov	r2, r5
 800312c:	4633      	mov	r3, r6
 800312e:	4631      	mov	r1, r6
 8003130:	4638      	mov	r0, r7
 8003132:	f7ff fb6b 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003136:	4623      	mov	r3, r4
 8003138:	4631      	mov	r1, r6
 800313a:	4628      	mov	r0, r5
 800313c:	f7ff fb66 	bl	800280c <ssd1306_Line.constprop.0>
	if(vbat<=3.7){
 8003140:	4640      	mov	r0, r8
 8003142:	f7fd f9d9 	bl	80004f8 <__aeabi_f2d>
		else{

		}
	}
	if(vbat>3.7 && vbat<= 3.9){
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
 8003146:	f104 0a02 	add.w	sl, r4, #2
 800314a:	f105 0802 	add.w	r8, r5, #2
 800314e:	3404      	adds	r4, #4
 8003150:	f105 0b03 	add.w	fp, r5, #3
	if(vbat<=3.7){
 8003154:	a384      	add	r3, pc, #528	@ (adr r3, 8003368 <batterygauge+0x298>)
 8003156:	e9d3 2300 	ldrd	r2, r3, [r3]
 800315a:	4606      	mov	r6, r0
 800315c:	460f      	mov	r7, r1
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
 800315e:	fa5f f888 	uxtb.w	r8, r8
 8003162:	fa5f fa8a 	uxtb.w	sl, sl
 8003166:	b2e4      	uxtb	r4, r4
 8003168:	fa5f fb8b 	uxtb.w	fp, fp
	if(vbat<=3.7){
 800316c:	f7fd fc98 	bl	8000aa0 <__aeabi_dcmple>
 8003170:	2800      	cmp	r0, #0
 8003172:	d166      	bne.n	8003242 <batterygauge+0x172>
	if(vbat>3.7 && vbat<= 3.9){
 8003174:	a37e      	add	r3, pc, #504	@ (adr r3, 8003370 <batterygauge+0x2a0>)
 8003176:	e9d3 2300 	ldrd	r2, r3, [r3]
 800317a:	4630      	mov	r0, r6
 800317c:	4639      	mov	r1, r7
 800317e:	f7fd fc8f 	bl	8000aa0 <__aeabi_dcmple>
 8003182:	2800      	cmp	r0, #0
 8003184:	f040 808f 	bne.w	80032a6 <batterygauge+0x1d6>
				else{

				}

	}
	if(vbat>3.9 && vbat<=4.1){
 8003188:	a37b      	add	r3, pc, #492	@ (adr r3, 8003378 <batterygauge+0x2a8>)
 800318a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800318e:	4639      	mov	r1, r7
 8003190:	4630      	mov	r0, r6
 8003192:	f7fd fc85 	bl	8000aa0 <__aeabi_dcmple>
			ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
 8003196:	1d6f      	adds	r7, r5, #5
 8003198:	1dae      	adds	r6, r5, #6
 800319a:	b2ff      	uxtb	r7, r7
 800319c:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 800319e:	4653      	mov	r3, sl
 80031a0:	465a      	mov	r2, fp
 80031a2:	4651      	mov	r1, sl
	if(vbat>3.9 && vbat<=4.1){
 80031a4:	2800      	cmp	r0, #0
 80031a6:	f040 809a 	bne.w	80032de <batterygauge+0x20e>
    ssd1306_Line(x1,y1,x2,y1,color);
 80031aa:	4640      	mov	r0, r8
 80031ac:	f7ff fb2e 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80031b0:	4623      	mov	r3, r4
 80031b2:	4651      	mov	r1, sl
 80031b4:	4658      	mov	r0, fp
 80031b6:	f7ff fb29 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80031ba:	4642      	mov	r2, r8
 80031bc:	4623      	mov	r3, r4
 80031be:	4621      	mov	r1, r4
 80031c0:	4658      	mov	r0, fp
 80031c2:	f7ff fb23 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80031c6:	4653      	mov	r3, sl
 80031c8:	4621      	mov	r1, r4
 80031ca:	4640      	mov	r0, r8
 80031cc:	f7ff fb1e 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80031d0:	4632      	mov	r2, r6
 80031d2:	4638      	mov	r0, r7
 80031d4:	4653      	mov	r3, sl
 80031d6:	4651      	mov	r1, sl
 80031d8:	f7ff fb18 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80031dc:	4630      	mov	r0, r6
 80031de:	4623      	mov	r3, r4
 80031e0:	4651      	mov	r1, sl
 80031e2:	f7ff fb13 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80031e6:	463a      	mov	r2, r7
 80031e8:	4630      	mov	r0, r6
 80031ea:	4623      	mov	r3, r4
 80031ec:	4621      	mov	r1, r4
 80031ee:	f7ff fb0d 	bl	800280c <ssd1306_Line.constprop.0>
	}

	if(vbat>4.1){
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
		ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
		ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 80031f2:	f105 0609 	add.w	r6, r5, #9
    ssd1306_Line(x1,y2,x1,y1,color);
 80031f6:	4638      	mov	r0, r7
		ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 80031f8:	f105 0708 	add.w	r7, r5, #8
 80031fc:	b2ff      	uxtb	r7, r7
 80031fe:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y2,x1,y1,color);
 8003200:	4653      	mov	r3, sl
 8003202:	4621      	mov	r1, r4
 8003204:	f7ff fb02 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 8003208:	4632      	mov	r2, r6
 800320a:	4653      	mov	r3, sl
 800320c:	4651      	mov	r1, sl
 800320e:	4638      	mov	r0, r7
 8003210:	f7ff fafc 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003214:	4623      	mov	r3, r4
 8003216:	4651      	mov	r1, sl
 8003218:	4630      	mov	r0, r6
 800321a:	f7ff faf7 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800321e:	4623      	mov	r3, r4
 8003220:	463a      	mov	r2, r7
 8003222:	4621      	mov	r1, r4
 8003224:	4630      	mov	r0, r6
 8003226:	f7ff faf1 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 800322a:	4653      	mov	r3, sl
 800322c:	4621      	mov	r1, r4
 800322e:	4638      	mov	r0, r7
 8003230:	f7ff faec 	bl	800280c <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 8003234:	f1b9 0f01 	cmp.w	r9, #1
 8003238:	f000 8081 	beq.w	800333e <batterygauge+0x26e>
	}




}
 800323c:	b001      	add	sp, #4
 800323e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ssd1306_Line(x1,y1,x2,y1,color);
 8003242:	465a      	mov	r2, fp
 8003244:	4653      	mov	r3, sl
 8003246:	4651      	mov	r1, sl
 8003248:	4640      	mov	r0, r8
 800324a:	f7ff fadf 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 800324e:	4623      	mov	r3, r4
 8003250:	4651      	mov	r1, sl
 8003252:	4658      	mov	r0, fp
 8003254:	f7ff fada 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003258:	4623      	mov	r3, r4
 800325a:	4642      	mov	r2, r8
 800325c:	4621      	mov	r1, r4
 800325e:	4658      	mov	r0, fp
 8003260:	f7ff fad4 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003264:	4653      	mov	r3, sl
 8003266:	4621      	mov	r1, r4
 8003268:	4640      	mov	r0, r8
 800326a:	f7ff facf 	bl	800280c <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 800326e:	f1b9 0f01 	cmp.w	r9, #1
 8003272:	d1e3      	bne.n	800323c <batterygauge+0x16c>
    ssd1306_Line(x1,y1,x2,y1,color);
 8003274:	465a      	mov	r2, fp
 8003276:	4653      	mov	r3, sl
 8003278:	4651      	mov	r1, sl
 800327a:	4640      	mov	r0, r8
 800327c:	f7ff fac6 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003280:	4623      	mov	r3, r4
 8003282:	4651      	mov	r1, sl
 8003284:	4658      	mov	r0, fp
 8003286:	f7ff fac1 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800328a:	4623      	mov	r3, r4
 800328c:	4642      	mov	r2, r8
 800328e:	4621      	mov	r1, r4
 8003290:	4658      	mov	r0, fp
 8003292:	f7ff fabb 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003296:	4653      	mov	r3, sl
 8003298:	4621      	mov	r1, r4
 800329a:	4610      	mov	r0, r2
}
 800329c:	b001      	add	sp, #4
 800329e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ssd1306_Line(x1,y2,x1,y1,color);
 80032a2:	f7ff bab3 	b.w	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80032a6:	465a      	mov	r2, fp
 80032a8:	4653      	mov	r3, sl
 80032aa:	4651      	mov	r1, sl
 80032ac:	4640      	mov	r0, r8
 80032ae:	f7ff faad 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80032b2:	4623      	mov	r3, r4
 80032b4:	4651      	mov	r1, sl
 80032b6:	4658      	mov	r0, fp
 80032b8:	f7ff faa8 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80032bc:	4623      	mov	r3, r4
 80032be:	4642      	mov	r2, r8
 80032c0:	4621      	mov	r1, r4
 80032c2:	4658      	mov	r0, fp
 80032c4:	f7ff faa2 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032c8:	4653      	mov	r3, sl
 80032ca:	4621      	mov	r1, r4
 80032cc:	4640      	mov	r0, r8
 80032ce:	f7ff fa9d 	bl	800280c <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 80032d2:	f1b9 0f01 	cmp.w	r9, #1
 80032d6:	d1b1      	bne.n	800323c <batterygauge+0x16c>
			ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
 80032d8:	1d6e      	adds	r6, r5, #5
 80032da:	3506      	adds	r5, #6
 80032dc:	e032      	b.n	8003344 <batterygauge+0x274>
    ssd1306_Line(x1,y1,x2,y1,color);
 80032de:	4640      	mov	r0, r8
 80032e0:	f7ff fa94 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80032e4:	4623      	mov	r3, r4
 80032e6:	4651      	mov	r1, sl
 80032e8:	4658      	mov	r0, fp
 80032ea:	f7ff fa8f 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80032ee:	4642      	mov	r2, r8
 80032f0:	4623      	mov	r3, r4
 80032f2:	4621      	mov	r1, r4
 80032f4:	4658      	mov	r0, fp
 80032f6:	f7ff fa89 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032fa:	4653      	mov	r3, sl
 80032fc:	4621      	mov	r1, r4
 80032fe:	4640      	mov	r0, r8
 8003300:	f7ff fa84 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 8003304:	4632      	mov	r2, r6
 8003306:	4653      	mov	r3, sl
 8003308:	4651      	mov	r1, sl
 800330a:	4638      	mov	r0, r7
 800330c:	f7ff fa7e 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003310:	4623      	mov	r3, r4
 8003312:	4651      	mov	r1, sl
 8003314:	4630      	mov	r0, r6
 8003316:	f7ff fa79 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800331a:	4623      	mov	r3, r4
 800331c:	463a      	mov	r2, r7
 800331e:	4621      	mov	r1, r4
 8003320:	4630      	mov	r0, r6
 8003322:	f7ff fa73 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003326:	4653      	mov	r3, sl
 8003328:	4621      	mov	r1, r4
 800332a:	4638      	mov	r0, r7
 800332c:	f7ff fa6e 	bl	800280c <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 8003330:	f1b9 0f01 	cmp.w	r9, #1
 8003334:	d182      	bne.n	800323c <batterygauge+0x16c>
			ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 8003336:	f105 0608 	add.w	r6, r5, #8
 800333a:	3509      	adds	r5, #9
 800333c:	e002      	b.n	8003344 <batterygauge+0x274>
			ssd1306_DrawRectangle(x+11, y+2, x+12, y+4, White);
 800333e:	f105 060b 	add.w	r6, r5, #11
 8003342:	350c      	adds	r5, #12
 8003344:	b2ed      	uxtb	r5, r5
 8003346:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 8003348:	462a      	mov	r2, r5
 800334a:	4653      	mov	r3, sl
 800334c:	4651      	mov	r1, sl
 800334e:	4630      	mov	r0, r6
 8003350:	f7ff fa5c 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003354:	4623      	mov	r3, r4
 8003356:	4651      	mov	r1, sl
 8003358:	4628      	mov	r0, r5
 800335a:	f7ff fa57 	bl	800280c <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 800335e:	4623      	mov	r3, r4
 8003360:	4632      	mov	r2, r6
 8003362:	4621      	mov	r1, r4
 8003364:	4628      	mov	r0, r5
 8003366:	e794      	b.n	8003292 <batterygauge+0x1c2>
 8003368:	9999999a 	.word	0x9999999a
 800336c:	400d9999 	.word	0x400d9999
 8003370:	33333333 	.word	0x33333333
 8003374:	400f3333 	.word	0x400f3333
 8003378:	66666666 	.word	0x66666666
 800337c:	40106666 	.word	0x40106666

08003380 <percentage>:

void percentage(float percent){
 8003380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003384:	ee10 0a10 	vmov	r0, s0
 8003388:	b082      	sub	sp, #8
	ssd1306_FillRectangle(32, 40, floor(0.63*percent+32), 56, White);
 800338a:	f7fd f8b5 	bl	80004f8 <__aeabi_f2d>
 800338e:	a380      	add	r3, pc, #512	@ (adr r3, 8003590 <percentage+0x210>)
 8003390:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003394:	4604      	mov	r4, r0
 8003396:	460d      	mov	r5, r1
 8003398:	f7fd f906 	bl	80005a8 <__aeabi_dmul>
 800339c:	4b74      	ldr	r3, [pc, #464]	@ (8003570 <percentage+0x1f0>)
 800339e:	4e75      	ldr	r6, [pc, #468]	@ (8003574 <percentage+0x1f4>)
 80033a0:	2200      	movs	r2, #0
 80033a2:	f7fc ff4b 	bl	800023c <__adddf3>
 80033a6:	ec41 0b10 	vmov	d0, r0, r1
 80033aa:	f010 fd1d 	bl	8013de8 <floor>
 80033ae:	ec51 0b10 	vmov	r0, r1, d0
 80033b2:	f7fd fbd1 	bl	8000b58 <__aeabi_d2uiz>
 80033b6:	fa5f fc80 	uxtb.w	ip, r0
    uint8_t x_start = ((x1<=x2) ? x1 : x2);
 80033ba:	4667      	mov	r7, ip
 80033bc:	2f20      	cmp	r7, #32
 80033be:	bf28      	it	cs
 80033c0:	2720      	movcs	r7, #32
    uint8_t x_end   = ((x1<=x2) ? x2 : x1);
 80033c2:	f1bc 0f20 	cmp.w	ip, #32
 80033c6:	bf38      	it	cc
 80033c8:	f04f 0c20 	movcc.w	ip, #32
    for (uint8_t y= y_start; (y<= y_end)&&(y<SSD1306_HEIGHT); y++) {
 80033cc:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80033d0:	f107 3aff 	add.w	sl, r7, #4294967295
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033d4:	f04f 0901 	mov.w	r9, #1
 80033d8:	f04f 0880 	mov.w	r8, #128	@ 0x80
 80033dc:	f00e 0007 	and.w	r0, lr, #7
 80033e0:	ea4f 01de 	mov.w	r1, lr, lsr #3
 80033e4:	fa09 f000 	lsl.w	r0, r9, r0
 80033e8:	fb18 a101 	smlabb	r1, r8, r1, sl
 80033ec:	b2c0      	uxtb	r0, r0
 80033ee:	4431      	add	r1, r6
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033f0:	463b      	mov	r3, r7
 80033f2:	e001      	b.n	80033f8 <percentage+0x78>
 80033f4:	061a      	lsls	r2, r3, #24
 80033f6:	d407      	bmi.n	8003408 <percentage+0x88>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033f8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033fc:	3301      	adds	r3, #1
 80033fe:	b2db      	uxtb	r3, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003400:	4302      	orrs	r2, r0
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 8003402:	459c      	cmp	ip, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003404:	700a      	strb	r2, [r1, #0]
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 8003406:	d2f5      	bcs.n	80033f4 <percentage+0x74>
    for (uint8_t y= y_start; (y<= y_end)&&(y<SSD1306_HEIGHT); y++) {
 8003408:	f10e 0e01 	add.w	lr, lr, #1
 800340c:	fa5f fe8e 	uxtb.w	lr, lr
 8003410:	f1be 0f39 	cmp.w	lr, #57	@ 0x39
 8003414:	d1e2      	bne.n	80033dc <percentage+0x5c>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003416:	f8d6 22a0 	ldr.w	r2, [r6, #672]	@ 0x2a0
 800341a:	f8b6 32dc 	ldrh.w	r3, [r6, #732]	@ 0x2dc
 800341e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003422:	f8c6 22a0 	str.w	r2, [r6, #672]	@ 0x2a0
 8003426:	f8d6 22a4 	ldr.w	r2, [r6, #676]	@ 0x2a4
 800342a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800342e:	f8c6 22a4 	str.w	r2, [r6, #676]	@ 0x2a4
 8003432:	f8d6 22a8 	ldr.w	r2, [r6, #680]	@ 0x2a8
 8003436:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800343a:	f8c6 22a8 	str.w	r2, [r6, #680]	@ 0x2a8
 800343e:	f8d6 22ac 	ldr.w	r2, [r6, #684]	@ 0x2ac
 8003442:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003446:	f8c6 22ac 	str.w	r2, [r6, #684]	@ 0x2ac
 800344a:	f8d6 22b0 	ldr.w	r2, [r6, #688]	@ 0x2b0
 800344e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003452:	f8c6 22b0 	str.w	r2, [r6, #688]	@ 0x2b0
 8003456:	f8d6 22b4 	ldr.w	r2, [r6, #692]	@ 0x2b4
 800345a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800345e:	f8c6 22b4 	str.w	r2, [r6, #692]	@ 0x2b4
 8003462:	f8d6 22b8 	ldr.w	r2, [r6, #696]	@ 0x2b8
 8003466:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800346a:	f8c6 22b8 	str.w	r2, [r6, #696]	@ 0x2b8
 800346e:	f8d6 22bc 	ldr.w	r2, [r6, #700]	@ 0x2bc
 8003472:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003476:	f8c6 22bc 	str.w	r2, [r6, #700]	@ 0x2bc
 800347a:	f8d6 22c0 	ldr.w	r2, [r6, #704]	@ 0x2c0
 800347e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003482:	f8c6 22c0 	str.w	r2, [r6, #704]	@ 0x2c0
 8003486:	f8d6 22c4 	ldr.w	r2, [r6, #708]	@ 0x2c4
 800348a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800348e:	f8c6 22c4 	str.w	r2, [r6, #708]	@ 0x2c4
 8003492:	f8d6 22c8 	ldr.w	r2, [r6, #712]	@ 0x2c8
 8003496:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800349a:	f8c6 22c8 	str.w	r2, [r6, #712]	@ 0x2c8
 800349e:	f8d6 22cc 	ldr.w	r2, [r6, #716]	@ 0x2cc
 80034a2:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80034a6:	f8c6 22cc 	str.w	r2, [r6, #716]	@ 0x2cc
 80034aa:	f8d6 22d0 	ldr.w	r2, [r6, #720]	@ 0x2d0
 80034ae:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80034b2:	f8c6 22d0 	str.w	r2, [r6, #720]	@ 0x2d0
 80034b6:	f8d6 22d4 	ldr.w	r2, [r6, #724]	@ 0x2d4
 80034ba:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80034be:	f8c6 22d4 	str.w	r2, [r6, #724]	@ 0x2d4
 80034c2:	f8d6 22d8 	ldr.w	r2, [r6, #728]	@ 0x2d8
 80034c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80034ca:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80034ce:	f043 0301 	orr.w	r3, r3, #1
 80034d2:	f8c6 22d8 	str.w	r2, [r6, #728]	@ 0x2d8
 80034d6:	f896 22de 	ldrb.w	r2, [r6, #734]	@ 0x2de
 80034da:	f8a6 32dc 	strh.w	r3, [r6, #732]	@ 0x2dc
 80034de:	f896 33df 	ldrb.w	r3, [r6, #991]	@ 0x3df
 80034e2:	f042 0201 	orr.w	r2, r2, #1
 80034e6:	f043 0301 	orr.w	r3, r3, #1
 80034ea:	f886 22de 	strb.w	r2, [r6, #734]	@ 0x2de
 80034ee:	f896 23a0 	ldrb.w	r2, [r6, #928]	@ 0x3a0
 80034f2:	f886 33df 	strb.w	r3, [r6, #991]	@ 0x3df
 80034f6:	4b20      	ldr	r3, [pc, #128]	@ (8003578 <percentage+0x1f8>)
 80034f8:	21ff      	movs	r1, #255	@ 0xff
 80034fa:	f042 0201 	orr.w	r2, r2, #1
 80034fe:	f886 12df 	strb.w	r1, [r6, #735]	@ 0x2df
 8003502:	f886 135f 	strb.w	r1, [r6, #863]	@ 0x35f
 8003506:	f886 23a0 	strb.w	r2, [r6, #928]	@ 0x3a0
 800350a:	f1a3 013f 	sub.w	r1, r3, #63	@ 0x3f
 800350e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003512:	f042 0201 	orr.w	r2, r2, #1
    while((x1 != x2) || (y1 != y2)) {
 8003516:	4299      	cmp	r1, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003518:	701a      	strb	r2, [r3, #0]
    while((x1 != x2) || (y1 != y2)) {
 800351a:	d1f8      	bne.n	800350e <percentage+0x18e>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800351c:	f896 33a0 	ldrb.w	r3, [r6, #928]	@ 0x3a0
	ssd1306_DrawRectangle(32, 40, 95, 56, White);
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 8003520:	4f16      	ldr	r7, [pc, #88]	@ (800357c <percentage+0x1fc>)
 8003522:	4a17      	ldr	r2, [pc, #92]	@ (8003580 <percentage+0x200>)
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003524:	21ff      	movs	r1, #255	@ 0xff
 8003526:	f043 0301 	orr.w	r3, r3, #1
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 800352a:	e9cd 4500 	strd	r4, r5, [sp]
 800352e:	4638      	mov	r0, r7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003530:	f886 33a0 	strb.w	r3, [r6, #928]	@ 0x3a0
 8003534:	f886 1320 	strb.w	r1, [r6, #800]	@ 0x320
 8003538:	f886 12a0 	strb.w	r1, [r6, #672]	@ 0x2a0
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 800353c:	2114      	movs	r1, #20
 800353e:	f00c ff07 	bl	8010350 <sniprintf>
    SSD1306.CurrentX = x;
 8003542:	4a10      	ldr	r2, [pc, #64]	@ (8003584 <percentage+0x204>)
 8003544:	4810      	ldr	r0, [pc, #64]	@ (8003588 <percentage+0x208>)
 8003546:	4b11      	ldr	r3, [pc, #68]	@ (800358c <percentage+0x20c>)
 8003548:	6010      	str	r0, [r2, #0]
    while (*str) {
 800354a:	7838      	ldrb	r0, [r7, #0]
 800354c:	7819      	ldrb	r1, [r3, #0]
 800354e:	785d      	ldrb	r5, [r3, #1]
 8003550:	685e      	ldr	r6, [r3, #4]
 8003552:	b918      	cbnz	r0, 800355c <percentage+0x1dc>
 8003554:	e009      	b.n	800356a <percentage+0x1ea>
 8003556:	f817 0f01 	ldrb.w	r0, [r7, #1]!
 800355a:	b130      	cbz	r0, 800356a <percentage+0x1ea>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 800355c:	4633      	mov	r3, r6
 800355e:	462a      	mov	r2, r5
 8003560:	f7ff f9be 	bl	80028e0 <ssd1306_WriteChar.constprop.0.isra.0>
 8003564:	783b      	ldrb	r3, [r7, #0]
 8003566:	4283      	cmp	r3, r0
 8003568:	d0f5      	beq.n	8003556 <percentage+0x1d6>
	ssd1306_SetCursor(45,44);
	ssd1306_WriteString((char  *)bufferscreen,Font_6x8,White);


}
 800356a:	b002      	add	sp, #8
 800356c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003570:	40400000 	.word	0x40400000
 8003574:	20001138 	.word	0x20001138
 8003578:	20001518 	.word	0x20001518
 800357c:	20000680 	.word	0x20000680
 8003580:	08016038 	.word	0x08016038
 8003584:	20001130 	.word	0x20001130
 8003588:	002c002d 	.word	0x002c002d
 800358c:	2000002c 	.word	0x2000002c
 8003590:	c28f5c29 	.word	0xc28f5c29
 8003594:	3fe428f5 	.word	0x3fe428f5

08003598 <statemachine>:
int flag_50kmh=0;
int flag_100kmh=0;
float time50kmh=0.0;
float time100kmh=0.0;

void statemachine(void){
 8003598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800359c:	ed2d 8b04 	vpush	{d8-d9}
	switch(state){
 80035a0:	4caf      	ldr	r4, [pc, #700]	@ (8003860 <statemachine+0x2c8>)
 80035a2:	7823      	ldrb	r3, [r4, #0]
void statemachine(void){
 80035a4:	b085      	sub	sp, #20
	switch(state){
 80035a6:	2b05      	cmp	r3, #5
 80035a8:	d87d      	bhi.n	80036a6 <statemachine+0x10e>
 80035aa:	e8df f013 	tbh	[pc, r3, lsl #1]
 80035ae:	009a      	.short	0x009a
 80035b0:	019900ef 	.word	0x019900ef
 80035b4:	01a90006 	.word	0x01a90006
 80035b8:	0081      	.short	0x0081
									 									 									  			 	BTN_A_LONG=0;
									 									 									  	}
			  break;
		  case STATE_CHRONOMETER:

			  ssd1306_Fill(Black);
 80035ba:	2000      	movs	r0, #0
 80035bc:	f7ff fa08 	bl	80029d0 <ssd1306_Fill>
			  ssd1306_SetCursor(32, 32);
 80035c0:	2120      	movs	r1, #32
 80035c2:	4608      	mov	r0, r1
 80035c4:	f7ff fcc8 	bl	8002f58 <ssd1306_SetCursor>
			  ssd1306_WriteString("chrono", Font_6x8, White);
 80035c8:	4ba6      	ldr	r3, [pc, #664]	@ (8003864 <statemachine+0x2cc>)
 80035ca:	48a7      	ldr	r0, [pc, #668]	@ (8003868 <statemachine+0x2d0>)
 80035cc:	e893 0006 	ldmia.w	r3, {r1, r2}
 80035d0:	2301      	movs	r3, #1
 80035d2:	f7ff fca5 	bl	8002f20 <ssd1306_WriteString>
			  ssd1306_SetCursor(32,40);
 80035d6:	2128      	movs	r1, #40	@ 0x28
 80035d8:	2020      	movs	r0, #32
 80035da:	f7ff fcbd 	bl	8002f58 <ssd1306_SetCursor>

			  switch(chronostate){
 80035de:	49a3      	ldr	r1, [pc, #652]	@ (800386c <statemachine+0x2d4>)
 80035e0:	780a      	ldrb	r2, [r1, #0]
 80035e2:	2a01      	cmp	r2, #1
 80035e4:	f000 870f 	beq.w	8004406 <statemachine+0xe6e>
 80035e8:	2a02      	cmp	r2, #2
 80035ea:	f000 86b0 	beq.w	800434e <statemachine+0xdb6>
 80035ee:	2a00      	cmp	r2, #0
 80035f0:	f040 8194 	bne.w	800391c <statemachine+0x384>
			  case STATE_RESET:
				  min=0;
 80035f4:	4b9e      	ldr	r3, [pc, #632]	@ (8003870 <statemachine+0x2d8>)
				  seconde=0;
 80035f6:	4e9f      	ldr	r6, [pc, #636]	@ (8003874 <statemachine+0x2dc>)
				  calctime=0;

				  	 if(BTN_B>=1){
 80035f8:	4d9f      	ldr	r5, [pc, #636]	@ (8003878 <statemachine+0x2e0>)
				  min=0;
 80035fa:	2000      	movs	r0, #0
 80035fc:	6018      	str	r0, [r3, #0]
				  seconde=0;
 80035fe:	6030      	str	r0, [r6, #0]
				  calctime=0;
 8003600:	489e      	ldr	r0, [pc, #632]	@ (800387c <statemachine+0x2e4>)
 8003602:	6002      	str	r2, [r0, #0]
				  	 if(BTN_B>=1){
 8003604:	6828      	ldr	r0, [r5, #0]
 8003606:	2800      	cmp	r0, #0
 8003608:	dd06      	ble.n	8003618 <statemachine+0x80>
				  		chronostate++;
				  		BTN_B=0;
 800360a:	602a      	str	r2, [r5, #0]
				  		starttime=uwTick;
 800360c:	4a9c      	ldr	r2, [pc, #624]	@ (8003880 <statemachine+0x2e8>)
 800360e:	6810      	ldr	r0, [r2, #0]
 8003610:	4a9c      	ldr	r2, [pc, #624]	@ (8003884 <statemachine+0x2ec>)
 8003612:	6010      	str	r0, [r2, #0]
				  		chronostate++;
 8003614:	2201      	movs	r2, #1
 8003616:	700a      	strb	r2, [r1, #0]
				  timehandler=calctime;

				  if(BTN_B>=1){
				  			chronostate--;
				  			BTN_B=0;
				  			starttime=uwTick;
 8003618:	ed9f 8a9b 	vldr	s16, [pc, #620]	@ 8003888 <statemachine+0x2f0>
 800361c:	2000      	movs	r0, #0
 800361e:	2100      	movs	r1, #0
 8003620:	eef0 8a48 	vmov.f32	s17, s16
			  }

			  min=floor((float) calctime/60000);
			  seconde=(float) ((calctime-(min*60000))/1000);
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003624:	4d99      	ldr	r5, [pc, #612]	@ (800388c <statemachine+0x2f4>)
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003626:	4a9a      	ldr	r2, [pc, #616]	@ (8003890 <statemachine+0x2f8>)
 8003628:	e9cd 0100 	strd	r0, r1, [sp]
 800362c:	210f      	movs	r1, #15
			  min=floor((float) calctime/60000);
 800362e:	edc3 8a00 	vstr	s17, [r3]
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003632:	4898      	ldr	r0, [pc, #608]	@ (8003894 <statemachine+0x2fc>)
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003634:	ed86 8a00 	vstr	s16, [r6]
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003638:	f00c fe8a 	bl	8010350 <sniprintf>
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 800363c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003640:	2301      	movs	r3, #1
 8003642:	4894      	ldr	r0, [pc, #592]	@ (8003894 <statemachine+0x2fc>)
 8003644:	f7ff fc6c 	bl	8002f20 <ssd1306_WriteString>
			  ssd1306_SetCursor(32, 50);
 8003648:	2132      	movs	r1, #50	@ 0x32
 800364a:	2020      	movs	r0, #32
 800364c:	f7ff fc84 	bl	8002f58 <ssd1306_SetCursor>
			  snprintf((char *)bufferscreen,15, "%0.3fs",seconde);
 8003650:	6830      	ldr	r0, [r6, #0]
 8003652:	f7fc ff51 	bl	80004f8 <__aeabi_f2d>
 8003656:	4a90      	ldr	r2, [pc, #576]	@ (8003898 <statemachine+0x300>)
 8003658:	e9cd 0100 	strd	r0, r1, [sp]
 800365c:	210f      	movs	r1, #15
 800365e:	488d      	ldr	r0, [pc, #564]	@ (8003894 <statemachine+0x2fc>)
 8003660:	f00c fe76 	bl	8010350 <sniprintf>
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003664:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003668:	488a      	ldr	r0, [pc, #552]	@ (8003894 <statemachine+0x2fc>)
 800366a:	2301      	movs	r3, #1
 800366c:	f7ff fc58 	bl	8002f20 <ssd1306_WriteString>


			  if(BTN_A>=1){
 8003670:	f8df b244 	ldr.w	fp, [pc, #580]	@ 80038b8 <statemachine+0x320>
 8003674:	f8db 2000 	ldr.w	r2, [fp]
 8003678:	2a00      	cmp	r2, #0
 800367a:	dd07      	ble.n	800368c <statemachine+0xf4>
			 	state++;
 800367c:	7822      	ldrb	r2, [r4, #0]
			 	BTN_A=0;
			 	BTN_B=0;
 800367e:	487e      	ldr	r0, [pc, #504]	@ (8003878 <statemachine+0x2e0>)
			 	BTN_A=0;
 8003680:	2100      	movs	r1, #0
			 	state++;
 8003682:	3201      	adds	r2, #1
 8003684:	7022      	strb	r2, [r4, #0]
			 	BTN_A=0;
 8003686:	f8cb 1000 	str.w	r1, [fp]
			 	BTN_B=0;
 800368a:	6001      	str	r1, [r0, #0]
						  	state--;
						  	BTN_A=0;
						  	BTN_B=0;
						  }

		 					if(BTN_A_LONG>=1){
 800368c:	4a83      	ldr	r2, [pc, #524]	@ (800389c <statemachine+0x304>)
 800368e:	6811      	ldr	r1, [r2, #0]
 8003690:	2900      	cmp	r1, #0
 8003692:	dd08      	ble.n	80036a6 <statemachine+0x10e>
			 								state--;
 8003694:	7820      	ldrb	r0, [r4, #0]
			 								BTN_A=0;
			 								BTN_B=0;
 8003696:	4d78      	ldr	r5, [pc, #480]	@ (8003878 <statemachine+0x2e0>)
			 								BTN_A=0;
 8003698:	2100      	movs	r1, #0
			 								state--;
 800369a:	1e43      	subs	r3, r0, #1
			 								BTN_A=0;
 800369c:	f8cb 1000 	str.w	r1, [fp]
			 								state--;
 80036a0:	7023      	strb	r3, [r4, #0]
			 								BTN_B=0;
 80036a2:	6029      	str	r1, [r5, #0]
			 								BTN_A_LONG=0;
 80036a4:	6011      	str	r1, [r2, #0]

					  break;

	}
return ;
}
 80036a6:	b005      	add	sp, #20
 80036a8:	ecbd 8b04 	vpop	{d8-d9}
 80036ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					  ssd1306_Fill(Black);
 80036b0:	2000      	movs	r0, #0
 80036b2:	f7ff f98d 	bl	80029d0 <ssd1306_Fill>
					  ssd1306_WriteString("0-100",Font_6x8,White);
 80036b6:	4d6b      	ldr	r5, [pc, #428]	@ (8003864 <statemachine+0x2cc>)
					  switch(accelstate){
 80036b8:	4f79      	ldr	r7, [pc, #484]	@ (80038a0 <statemachine+0x308>)
					  ssd1306_SetCursor(32,32);
 80036ba:	2120      	movs	r1, #32
 80036bc:	4608      	mov	r0, r1
 80036be:	f7ff fc4b 	bl	8002f58 <ssd1306_SetCursor>
					  ssd1306_WriteString("0-100",Font_6x8,White);
 80036c2:	2301      	movs	r3, #1
 80036c4:	e895 0006 	ldmia.w	r5, {r1, r2}
 80036c8:	4876      	ldr	r0, [pc, #472]	@ (80038a4 <statemachine+0x30c>)
 80036ca:	f7ff fc29 	bl	8002f20 <ssd1306_WriteString>
					  switch(accelstate){
 80036ce:	783b      	ldrb	r3, [r7, #0]
 80036d0:	2b04      	cmp	r3, #4
 80036d2:	d8e8      	bhi.n	80036a6 <statemachine+0x10e>
 80036d4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80036d8:	033b0359 	.word	0x033b0359
 80036dc:	02dd037b 	.word	0x02dd037b
 80036e0:	0274      	.short	0x0274
				 if(GNSSData.fgSpeed>=vitmax){
 80036e2:	4f71      	ldr	r7, [pc, #452]	@ (80038a8 <statemachine+0x310>)
 80036e4:	4e71      	ldr	r6, [pc, #452]	@ (80038ac <statemachine+0x314>)
		ssd1306_Fill(Black);
 80036e6:	2000      	movs	r0, #0
 80036e8:	f7ff f972 	bl	80029d0 <ssd1306_Fill>
				 if(GNSSData.fgSpeed>=vitmax){
 80036ec:	ed96 8a30 	vldr	s16, [r6, #192]	@ 0xc0
 80036f0:	edd7 7a00 	vldr	s15, [r7]
 80036f4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80036f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
								 if (GNSSData.fgSpeed!=0){
 80036fc:	eeb5 8a40 	vcmp.f32	s16, #0.0
									 vitmax=GNSSData.fgSpeed;
 8003700:	bfa8      	it	ge
 8003702:	ed87 8a00 	vstrge	s16, [r7]
								 if (GNSSData.fgSpeed!=0){
 8003706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800370a:	f000 8104 	beq.w	8003916 <statemachine+0x37e>
									 pace=1000/(60*GNSSData.fgSpeed);
 800370e:	eddf 7a68 	vldr	s15, [pc, #416]	@ 80038b0 <statemachine+0x318>
									 sec=(pace-floor(pace))*60;
 8003712:	eec7 7a88 	vdiv.f32	s15, s15, s16
 8003716:	ee17 0a90 	vmov	r0, s15
 800371a:	f7fc feed 	bl	80004f8 <__aeabi_f2d>
 800371e:	ec41 0b19 	vmov	d9, r0, r1
 8003722:	eeb0 0a49 	vmov.f32	s0, s18
 8003726:	eef0 0a69 	vmov.f32	s1, s19
 800372a:	f010 fb5d 	bl	8013de8 <floor>
 800372e:	ec51 0b19 	vmov	r0, r1, d9
 8003732:	ec53 2b10 	vmov	r2, r3, d0
 8003736:	f7fc fd7f 	bl	8000238 <__aeabi_dsub>
 800373a:	4b5e      	ldr	r3, [pc, #376]	@ (80038b4 <statemachine+0x31c>)
 800373c:	2200      	movs	r2, #0
 800373e:	f7fc ff33 	bl	80005a8 <__aeabi_dmul>
 8003742:	f7fd fa29 	bl	8000b98 <__aeabi_d2f>
 8003746:	ee08 0a10 	vmov	s16, r0
				  switch(spdstate){
 800374a:	f8df 818c 	ldr.w	r8, [pc, #396]	@ 80038d8 <statemachine+0x340>
 800374e:	f898 5000 	ldrb.w	r5, [r8]
 8003752:	2d01      	cmp	r5, #1
 8003754:	f000 861c 	beq.w	8004390 <statemachine+0xdf8>
 8003758:	2d02      	cmp	r5, #2
 800375a:	f001 802d 	beq.w	80047b8 <statemachine+0x1220>
 800375e:	2d00      	cmp	r5, #0
 8003760:	f000 810f 	beq.w	8003982 <statemachine+0x3ea>
				  					if(BTN_A>=1){
 8003764:	4b54      	ldr	r3, [pc, #336]	@ (80038b8 <statemachine+0x320>)
 8003766:	681a      	ldr	r2, [r3, #0]
 8003768:	2a00      	cmp	r2, #0
 800376a:	dd06      	ble.n	800377a <statemachine+0x1e2>
				  									 					state++;
 800376c:	7822      	ldrb	r2, [r4, #0]
				  									 					BTN_B=0;
 800376e:	4842      	ldr	r0, [pc, #264]	@ (8003878 <statemachine+0x2e0>)
				  									 					BTN_A=0;
 8003770:	2100      	movs	r1, #0
 8003772:	6019      	str	r1, [r3, #0]
				  									 					state++;
 8003774:	1c53      	adds	r3, r2, #1
 8003776:	7023      	strb	r3, [r4, #0]
				  									 					BTN_B=0;
 8003778:	6001      	str	r1, [r0, #0]
				  									 	 if(BTN_B_LONG>=1){
 800377a:	4b50      	ldr	r3, [pc, #320]	@ (80038bc <statemachine+0x324>)
 800377c:	681a      	ldr	r2, [r3, #0]
 800377e:	2a00      	cmp	r2, #0
 8003780:	dd91      	ble.n	80036a6 <statemachine+0x10e>
				  									 					  							  vitmax=0;
 8003782:	2100      	movs	r1, #0
				  									 					  							BTN_B_LONG=0;
 8003784:	2200      	movs	r2, #0
				  									 					  							  vitmax=0;
 8003786:	6039      	str	r1, [r7, #0]
				  									 					  							BTN_B_LONG=0;
 8003788:	601a      	str	r2, [r3, #0]
 800378a:	e78c      	b.n	80036a6 <statemachine+0x10e>
					  if(settimeen==0){
 800378c:	4f4c      	ldr	r7, [pc, #304]	@ (80038c0 <statemachine+0x328>)
					  ssd1306_Fill(Black);
 800378e:	2000      	movs	r0, #0
 8003790:	f7ff f91e 	bl	80029d0 <ssd1306_Fill>
					  if(settimeen==0){
 8003794:	683b      	ldr	r3, [r7, #0]
 8003796:	b92b      	cbnz	r3, 80037a4 <statemachine+0x20c>
						  if(GNSSData.fixType>=1){
 8003798:	4e44      	ldr	r6, [pc, #272]	@ (80038ac <statemachine+0x314>)
 800379a:	f896 3077 	ldrb.w	r3, [r6, #119]	@ 0x77
 800379e:	2b00      	cmp	r3, #0
 80037a0:	f040 80e0 	bne.w	8003964 <statemachine+0x3cc>
					  switch(balisestate){
 80037a4:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 80038dc <statemachine+0x344>
 80037a8:	f898 5000 	ldrb.w	r5, [r8]
 80037ac:	2d01      	cmp	r5, #1
 80037ae:	f000 8649 	beq.w	8004444 <statemachine+0xeac>
 80037b2:	2d02      	cmp	r5, #2
 80037b4:	f000 8590 	beq.w	80042d8 <statemachine+0xd40>
 80037b8:	2d00      	cmp	r5, #0
 80037ba:	f47f af74 	bne.w	80036a6 <statemachine+0x10e>
						  ssd1306_SetCursor(32,32);
 80037be:	2120      	movs	r1, #32
 80037c0:	4608      	mov	r0, r1
 80037c2:	f7ff fbc9 	bl	8002f58 <ssd1306_SetCursor>
						  ssd1306_WriteString("Tracker",Font_6x8,White);
 80037c6:	4b27      	ldr	r3, [pc, #156]	@ (8003864 <statemachine+0x2cc>)
 80037c8:	483e      	ldr	r0, [pc, #248]	@ (80038c4 <statemachine+0x32c>)
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80037ca:	4e30      	ldr	r6, [pc, #192]	@ (800388c <statemachine+0x2f4>)
						  ssd1306_WriteString("Tracker",Font_6x8,White);
 80037cc:	e893 0006 	ldmia.w	r3, {r1, r2}
 80037d0:	2301      	movs	r3, #1
 80037d2:	f7ff fba5 	bl	8002f20 <ssd1306_WriteString>
						  snprintf((char *)bufferscreen,50, "offset=%d",pageoffset);
 80037d6:	4b3c      	ldr	r3, [pc, #240]	@ (80038c8 <statemachine+0x330>)
 80037d8:	4a3c      	ldr	r2, [pc, #240]	@ (80038cc <statemachine+0x334>)
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	482d      	ldr	r0, [pc, #180]	@ (8003894 <statemachine+0x2fc>)
 80037de:	2132      	movs	r1, #50	@ 0x32
 80037e0:	f00c fdb6 	bl	8010350 <sniprintf>
						  ssd1306_SetCursor(32,42);
 80037e4:	212a      	movs	r1, #42	@ 0x2a
 80037e6:	2020      	movs	r0, #32
 80037e8:	f7ff fbb6 	bl	8002f58 <ssd1306_SetCursor>
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80037ec:	e896 0006 	ldmia.w	r6, {r1, r2}
 80037f0:	2301      	movs	r3, #1
 80037f2:	4828      	ldr	r0, [pc, #160]	@ (8003894 <statemachine+0x2fc>)
 80037f4:	f7ff fb94 	bl	8002f20 <ssd1306_WriteString>
						  snprintf((char *)bufferscreen,50, "page=%d",pagenumber);
 80037f8:	4b35      	ldr	r3, [pc, #212]	@ (80038d0 <statemachine+0x338>)
 80037fa:	4a36      	ldr	r2, [pc, #216]	@ (80038d4 <statemachine+0x33c>)
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	4825      	ldr	r0, [pc, #148]	@ (8003894 <statemachine+0x2fc>)
 8003800:	2132      	movs	r1, #50	@ 0x32
 8003802:	f00c fda5 	bl	8010350 <sniprintf>
						  ssd1306_SetCursor(32,52);
 8003806:	2134      	movs	r1, #52	@ 0x34
 8003808:	2020      	movs	r0, #32
 800380a:	f7ff fba5 	bl	8002f58 <ssd1306_SetCursor>
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800380e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003812:	2301      	movs	r3, #1
 8003814:	481f      	ldr	r0, [pc, #124]	@ (8003894 <statemachine+0x2fc>)
 8003816:	f7ff fb83 	bl	8002f20 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 800381a:	4b28      	ldr	r3, [pc, #160]	@ (80038bc <statemachine+0x324>)
 800381c:	681a      	ldr	r2, [r3, #0]
 800381e:	2a00      	cmp	r2, #0
 8003820:	f301 804d 	bgt.w	80048be <statemachine+0x1326>
 8003824:	f8df b090 	ldr.w	fp, [pc, #144]	@ 80038b8 <statemachine+0x320>
						  if(BTN_A>=1){
 8003828:	f8db 2000 	ldr.w	r2, [fp]
 800382c:	2a00      	cmp	r2, #0
 800382e:	dd08      	ble.n	8003842 <statemachine+0x2aa>
						  				  			 	state++;
 8003830:	7821      	ldrb	r1, [r4, #0]
						  				  			 	BTN_B=0;
 8003832:	4811      	ldr	r0, [pc, #68]	@ (8003878 <statemachine+0x2e0>)
						  				  			 	BTN_A=0;
 8003834:	2200      	movs	r2, #0
						  				  			 	state++;
 8003836:	1c4b      	adds	r3, r1, #1
						  				  			 	BTN_A=0;
 8003838:	f8cb 2000 	str.w	r2, [fp]
						  				  			 	state++;
 800383c:	7023      	strb	r3, [r4, #0]
						  				  			 	BTN_B=0;
 800383e:	6002      	str	r2, [r0, #0]
						  				  			 	settimeen=0;
 8003840:	603a      	str	r2, [r7, #0]
						  if(BTN_A_LONG>=1){
 8003842:	4b16      	ldr	r3, [pc, #88]	@ (800389c <statemachine+0x304>)
 8003844:	681a      	ldr	r2, [r3, #0]
 8003846:	2a00      	cmp	r2, #0
 8003848:	f77f af2d 	ble.w	80036a6 <statemachine+0x10e>
									  state--;
 800384c:	7821      	ldrb	r1, [r4, #0]
									BTN_B=0;
 800384e:	480a      	ldr	r0, [pc, #40]	@ (8003878 <statemachine+0x2e0>)
									BTN_A_LONG=0;
 8003850:	2200      	movs	r2, #0
 8003852:	601a      	str	r2, [r3, #0]
									  state--;
 8003854:	1e4b      	subs	r3, r1, #1
 8003856:	7023      	strb	r3, [r4, #0]
									BTN_B=0;
 8003858:	6002      	str	r2, [r0, #0]
									settimeen=0;
 800385a:	603a      	str	r2, [r7, #0]
 800385c:	e723      	b.n	80036a6 <statemachine+0x10e>
 800385e:	bf00      	nop
 8003860:	20001070 	.word	0x20001070
 8003864:	2000002c 	.word	0x2000002c
 8003868:	080161e4 	.word	0x080161e4
 800386c:	2000106d 	.word	0x2000106d
 8003870:	20000634 	.word	0x20000634
 8003874:	20000638 	.word	0x20000638
 8003878:	20000ff4 	.word	0x20000ff4
 800387c:	2000062c 	.word	0x2000062c
 8003880:	20001804 	.word	0x20001804
 8003884:	20000630 	.word	0x20000630
 8003888:	00000000 	.word	0x00000000
 800388c:	20000024 	.word	0x20000024
 8003890:	080161ec 	.word	0x080161ec
 8003894:	20000680 	.word	0x20000680
 8003898:	080161f8 	.word	0x080161f8
 800389c:	200005e0 	.word	0x200005e0
 80038a0:	2000106a 	.word	0x2000106a
 80038a4:	0801624c 	.word	0x0801624c
 80038a8:	2000063c 	.word	0x2000063c
 80038ac:	20000510 	.word	0x20000510
 80038b0:	41855556 	.word	0x41855556
 80038b4:	404e0000 	.word	0x404e0000
 80038b8:	20000ff8 	.word	0x20000ff8
 80038bc:	200005e4 	.word	0x200005e4
 80038c0:	200005f8 	.word	0x200005f8
 80038c4:	08016084 	.word	0x08016084
 80038c8:	200006bc 	.word	0x200006bc
 80038cc:	0801608c 	.word	0x0801608c
 80038d0:	200006b8 	.word	0x200006b8
 80038d4:	08016098 	.word	0x08016098
 80038d8:	2000106f 	.word	0x2000106f
 80038dc:	2000106b 	.word	0x2000106b
			  switch(posstate){
 80038e0:	4d9b      	ldr	r5, [pc, #620]	@ (8003b50 <statemachine+0x5b8>)
			  ssd1306_Fill(Black);
 80038e2:	2000      	movs	r0, #0
 80038e4:	f7ff f874 	bl	80029d0 <ssd1306_Fill>
			  switch(posstate){
 80038e8:	782b      	ldrb	r3, [r5, #0]
 80038ea:	2b05      	cmp	r3, #5
 80038ec:	f63f aec0 	bhi.w	8003670 <statemachine+0xd8>
 80038f0:	e8df f013 	tbh	[pc, r3, lsl #1]
 80038f4:	04af03ce 	.word	0x04af03ce
 80038f8:	037c0464 	.word	0x037c0464
 80038fc:	02c8031a 	.word	0x02c8031a
				  switch(usbstate){
 8003900:	4e94      	ldr	r6, [pc, #592]	@ (8003b54 <statemachine+0x5bc>)
 8003902:	7833      	ldrb	r3, [r6, #0]
 8003904:	2b03      	cmp	r3, #3
 8003906:	f63f aece 	bhi.w	80036a6 <statemachine+0x10e>
 800390a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800390e:	0074      	.short	0x0074
 8003910:	00cb00db 	.word	0x00cb00db
 8003914:	00aa      	.short	0x00aa
 8003916:	ed9f 9b8a 	vldr	d9, [pc, #552]	@ 8003b40 <statemachine+0x5a8>
 800391a:	e716      	b.n	800374a <statemachine+0x1b2>
				  timehandler=calctime;
 800391c:	4b8e      	ldr	r3, [pc, #568]	@ (8003b58 <statemachine+0x5c0>)
			  min=floor((float) calctime/60000);
 800391e:	eddf 7a8f 	vldr	s15, [pc, #572]	@ 8003b5c <statemachine+0x5c4>
 8003922:	ed93 8a00 	vldr	s16, [r3]
 8003926:	eeb8 8a48 	vcvt.f32.u32	s16, s16
 800392a:	ee68 7a27 	vmul.f32	s15, s16, s15
 800392e:	ee17 0a90 	vmov	r0, s15
 8003932:	f7fc fde1 	bl	80004f8 <__aeabi_f2d>
 8003936:	ec41 0b10 	vmov	d0, r0, r1
 800393a:	f010 fa55 	bl	8013de8 <floor>
 800393e:	ec51 0b10 	vmov	r0, r1, d0
 8003942:	f7fd f929 	bl	8000b98 <__aeabi_d2f>
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003946:	ed9f 7a86 	vldr	s14, [pc, #536]	@ 8003b60 <statemachine+0x5c8>
 800394a:	eddf 7a86 	vldr	s15, [pc, #536]	@ 8003b64 <statemachine+0x5cc>
 800394e:	4e86      	ldr	r6, [pc, #536]	@ (8003b68 <statemachine+0x5d0>)
			  min=floor((float) calctime/60000);
 8003950:	ee08 0a90 	vmov	s17, r0
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003954:	eea8 8ac7 	vfms.f32	s16, s17, s14
 8003958:	ee28 8a27 	vmul.f32	s16, s16, s15
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 800395c:	f7fc fdcc 	bl	80004f8 <__aeabi_f2d>
 8003960:	4b82      	ldr	r3, [pc, #520]	@ (8003b6c <statemachine+0x5d4>)
 8003962:	e65f      	b.n	8003624 <statemachine+0x8c>
							HR=GNSSData.hour;
 8003964:	4b82      	ldr	r3, [pc, #520]	@ (8003b70 <statemachine+0x5d8>)
 8003966:	f896 2074 	ldrb.w	r2, [r6, #116]	@ 0x74
 800396a:	701a      	strb	r2, [r3, #0]
							settimeen=1;
 800396c:	2101      	movs	r1, #1
							MINUTE=GNSSData.min;
 800396e:	4b81      	ldr	r3, [pc, #516]	@ (8003b74 <statemachine+0x5dc>)
							settimeen=1;
 8003970:	6039      	str	r1, [r7, #0]
							MINUTE=GNSSData.min;
 8003972:	f896 1075 	ldrb.w	r1, [r6, #117]	@ 0x75
 8003976:	7019      	strb	r1, [r3, #0]
							SEC=GNSSData.sec;
 8003978:	4b7f      	ldr	r3, [pc, #508]	@ (8003b78 <statemachine+0x5e0>)
 800397a:	f896 2076 	ldrb.w	r2, [r6, #118]	@ 0x76
 800397e:	701a      	strb	r2, [r3, #0]
 8003980:	e710      	b.n	80037a4 <statemachine+0x20c>
						ssd1306_SetCursor(32, 32);
 8003982:	2120      	movs	r1, #32
 8003984:	4608      	mov	r0, r1
 8003986:	f7ff fae7 	bl	8002f58 <ssd1306_SetCursor>
						snprintf((char *)bufferscreen,15, "%0.1f",(GNSSData.fgSpeed)*3.6);
 800398a:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 800398e:	f7fc fdb3 	bl	80004f8 <__aeabi_f2d>
 8003992:	a36d      	add	r3, pc, #436	@ (adr r3, 8003b48 <statemachine+0x5b0>)
 8003994:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003998:	f7fc fe06 	bl	80005a8 <__aeabi_dmul>
 800399c:	4a77      	ldr	r2, [pc, #476]	@ (8003b7c <statemachine+0x5e4>)
 800399e:	e9cd 0100 	strd	r0, r1, [sp]
 80039a2:	210f      	movs	r1, #15
 80039a4:	4876      	ldr	r0, [pc, #472]	@ (8003b80 <statemachine+0x5e8>)
 80039a6:	f00c fcd3 	bl	8010350 <sniprintf>
						ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 80039aa:	4b76      	ldr	r3, [pc, #472]	@ (8003b84 <statemachine+0x5ec>)
 80039ac:	4874      	ldr	r0, [pc, #464]	@ (8003b80 <statemachine+0x5e8>)
 80039ae:	e893 0006 	ldmia.w	r3, {r1, r2}
 80039b2:	2301      	movs	r3, #1
 80039b4:	f7ff fab4 	bl	8002f20 <ssd1306_WriteString>
						ssd1306_SetCursor(32, 56);
 80039b8:	2138      	movs	r1, #56	@ 0x38
 80039ba:	2020      	movs	r0, #32
 80039bc:	f7ff facc 	bl	8002f58 <ssd1306_SetCursor>
						ssd1306_WriteString("Vit(kmh)", Font_6x8, White);
 80039c0:	4b71      	ldr	r3, [pc, #452]	@ (8003b88 <statemachine+0x5f0>)
 80039c2:	4872      	ldr	r0, [pc, #456]	@ (8003b8c <statemachine+0x5f4>)
 80039c4:	e893 0006 	ldmia.w	r3, {r1, r2}
 80039c8:	2301      	movs	r3, #1
 80039ca:	f7ff faa9 	bl	8002f20 <ssd1306_WriteString>
						batterygauge(vbat,79, 57,1);
 80039ce:	4b70      	ldr	r3, [pc, #448]	@ (8003b90 <statemachine+0x5f8>)
 80039d0:	2201      	movs	r2, #1
 80039d2:	ed93 0a00 	vldr	s0, [r3]
 80039d6:	2139      	movs	r1, #57	@ 0x39
 80039d8:	204f      	movs	r0, #79	@ 0x4f
 80039da:	f7ff fb79 	bl	80030d0 <batterygauge>
					 if(BTN_B>=1){
 80039de:	4b6d      	ldr	r3, [pc, #436]	@ (8003b94 <statemachine+0x5fc>)
 80039e0:	681a      	ldr	r2, [r3, #0]
 80039e2:	2a00      	cmp	r2, #0
 80039e4:	f77f aebe 	ble.w	8003764 <statemachine+0x1cc>
							BTN_B=0;
 80039e8:	601d      	str	r5, [r3, #0]
							spdstate++;
 80039ea:	f898 3000 	ldrb.w	r3, [r8]
 80039ee:	3301      	adds	r3, #1
 80039f0:	f888 3000 	strb.w	r3, [r8]
							BTN_B=0;
 80039f4:	e6b6      	b.n	8003764 <statemachine+0x1cc>
				 					 ssd1306_Fill(Black);
 80039f6:	2000      	movs	r0, #0
 80039f8:	f7fe ffea 	bl	80029d0 <ssd1306_Fill>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 80039fc:	4d62      	ldr	r5, [pc, #392]	@ (8003b88 <statemachine+0x5f0>)
				 									  ssd1306_SetCursor(32,32);
 80039fe:	2120      	movs	r1, #32
 8003a00:	4608      	mov	r0, r1
 8003a02:	f7ff faa9 	bl	8002f58 <ssd1306_SetCursor>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003a06:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	4862      	ldr	r0, [pc, #392]	@ (8003b98 <statemachine+0x600>)
 8003a0e:	f7ff fa87 	bl	8002f20 <ssd1306_WriteString>
				 					  ssd1306_SetCursor(32,40);
 8003a12:	2128      	movs	r1, #40	@ 0x28
 8003a14:	2020      	movs	r0, #32
 8003a16:	f7ff fa9f 	bl	8002f58 <ssd1306_SetCursor>
				 					  ssd1306_WriteString("do nothing",Font_6x8,White);
 8003a1a:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003a1e:	2301      	movs	r3, #1
 8003a20:	485e      	ldr	r0, [pc, #376]	@ (8003b9c <statemachine+0x604>)
 8003a22:	f7ff fa7d 	bl	8002f20 <ssd1306_WriteString>
				 					  usbtransmiten=0;
 8003a26:	4b5e      	ldr	r3, [pc, #376]	@ (8003ba0 <statemachine+0x608>)
				 					  if(BTN_B>=1){
 8003a28:	4a5a      	ldr	r2, [pc, #360]	@ (8003b94 <statemachine+0x5fc>)
				 					  usbtransmiten=0;
 8003a2a:	2100      	movs	r1, #0
 8003a2c:	6019      	str	r1, [r3, #0]
				 					  if(BTN_B>=1){
 8003a2e:	6813      	ldr	r3, [r2, #0]
 8003a30:	428b      	cmp	r3, r1
 8003a32:	f340 8720 	ble.w	8004876 <statemachine+0x12de>
				 						  usbstate++;
 8003a36:	7833      	ldrb	r3, [r6, #0]
				 						  BTN_A=0;
 8003a38:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8003bb8 <statemachine+0x620>
				 						  BTN_B=0;
 8003a3c:	6011      	str	r1, [r2, #0]
				 						  usbstate++;
 8003a3e:	3301      	adds	r3, #1
 8003a40:	7033      	strb	r3, [r6, #0]
				 						  BTN_A=0;
 8003a42:	f8cb 1000 	str.w	r1, [fp]
						 					if(BTN_A_LONG>=1){
 8003a46:	4957      	ldr	r1, [pc, #348]	@ (8003ba4 <statemachine+0x60c>)
 8003a48:	6808      	ldr	r0, [r1, #0]
 8003a4a:	2800      	cmp	r0, #0
 8003a4c:	f77f ae2b 	ble.w	80036a6 <statemachine+0x10e>
						 								state--;
 8003a50:	7820      	ldrb	r0, [r4, #0]
 8003a52:	3801      	subs	r0, #1
 8003a54:	7020      	strb	r0, [r4, #0]
						 								BTN_A=0;
 8003a56:	2000      	movs	r0, #0
 8003a58:	f8cb 0000 	str.w	r0, [fp]
						 								BTN_B=0;
 8003a5c:	6010      	str	r0, [r2, #0]
						 								BTN_A_LONG=0;
 8003a5e:	6008      	str	r0, [r1, #0]
 8003a60:	e621      	b.n	80036a6 <statemachine+0x10e>
				 						ssd1306_Fill(Black);
 8003a62:	2000      	movs	r0, #0
 8003a64:	f7fe ffb4 	bl	80029d0 <ssd1306_Fill>
				 						ssd1306_SetCursor(32,40);
 8003a68:	2128      	movs	r1, #40	@ 0x28
 8003a6a:	2020      	movs	r0, #32
 8003a6c:	f7ff fa74 	bl	8002f58 <ssd1306_SetCursor>
				 						ssd1306_WriteString("finished",Font_6x8,White);
 8003a70:	4a45      	ldr	r2, [pc, #276]	@ (8003b88 <statemachine+0x5f0>)
 8003a72:	484d      	ldr	r0, [pc, #308]	@ (8003ba8 <statemachine+0x610>)
 8003a74:	ca06      	ldmia	r2, {r1, r2}
 8003a76:	2301      	movs	r3, #1
 8003a78:	f7ff fa52 	bl	8002f20 <ssd1306_WriteString>
				 						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 8003a7c:	2200      	movs	r2, #0
 8003a7e:	484b      	ldr	r0, [pc, #300]	@ (8003bac <statemachine+0x614>)
 8003a80:	2102      	movs	r1, #2
 8003a82:	f002 fe45 	bl	8006710 <HAL_GPIO_WritePin>
						 					if(BTN_B>=1){
 8003a86:	4a43      	ldr	r2, [pc, #268]	@ (8003b94 <statemachine+0x5fc>)
 8003a88:	6813      	ldr	r3, [r2, #0]
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	f340 8702 	ble.w	8004894 <statemachine+0x12fc>
						 						usbstate--;
 8003a90:	7831      	ldrb	r1, [r6, #0]
						 						BTN_A=0;
 8003a92:	f8df b124 	ldr.w	fp, [pc, #292]	@ 8003bb8 <statemachine+0x620>
						 						BTN_B=0;
 8003a96:	2000      	movs	r0, #0
						 						usbstate--;
 8003a98:	3903      	subs	r1, #3
 8003a9a:	7031      	strb	r1, [r6, #0]
						 						BTN_B=0;
 8003a9c:	6010      	str	r0, [r2, #0]
						 						BTN_A=0;
 8003a9e:	f8cb 0000 	str.w	r0, [fp]
						 					 if(BTN_A>=1){
 8003aa2:	e7d0      	b.n	8003a46 <statemachine+0x4ae>
if(usbtransmiten==0){
 8003aa4:	4c3e      	ldr	r4, [pc, #248]	@ (8003ba0 <statemachine+0x608>)
 8003aa6:	6820      	ldr	r0, [r4, #0]
 8003aa8:	2800      	cmp	r0, #0
 8003aaa:	f000 87db 	beq.w	8004a64 <statemachine+0x14cc>
				 					if(BTN_A>=1){
 8003aae:	f8df b108 	ldr.w	fp, [pc, #264]	@ 8003bb8 <statemachine+0x620>
 8003ab2:	f8db 2000 	ldr.w	r2, [fp]
 8003ab6:	2a00      	cmp	r2, #0
 8003ab8:	f77f adf5 	ble.w	80036a6 <statemachine+0x10e>
				 					BTN_A=0;
 8003abc:	2200      	movs	r2, #0
 8003abe:	f8cb 2000 	str.w	r2, [fp]
 8003ac2:	e5f0      	b.n	80036a6 <statemachine+0x10e>
				 					 ssd1306_Fill(Black);
 8003ac4:	2000      	movs	r0, #0
 8003ac6:	f7fe ff83 	bl	80029d0 <ssd1306_Fill>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003aca:	4d2f      	ldr	r5, [pc, #188]	@ (8003b88 <statemachine+0x5f0>)
				 					if(erasedisplay==1){
 8003acc:	f8df a0ec 	ldr.w	sl, [pc, #236]	@ 8003bbc <statemachine+0x624>
				 									  ssd1306_SetCursor(32,32);
 8003ad0:	2120      	movs	r1, #32
 8003ad2:	4608      	mov	r0, r1
 8003ad4:	f7ff fa40 	bl	8002f58 <ssd1306_SetCursor>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003ad8:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003adc:	2301      	movs	r3, #1
 8003ade:	482e      	ldr	r0, [pc, #184]	@ (8003b98 <statemachine+0x600>)
 8003ae0:	f7ff fa1e 	bl	8002f20 <ssd1306_WriteString>
				 					 ssd1306_SetCursor(32,40);
 8003ae4:	2128      	movs	r1, #40	@ 0x28
 8003ae6:	2020      	movs	r0, #32
 8003ae8:	f7ff fa36 	bl	8002f58 <ssd1306_SetCursor>
				 					ssd1306_WriteString("Push A",Font_6x8,White);
 8003aec:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003af0:	2301      	movs	r3, #1
 8003af2:	482f      	ldr	r0, [pc, #188]	@ (8003bb0 <statemachine+0x618>)
 8003af4:	f7ff fa14 	bl	8002f20 <ssd1306_WriteString>
				 					ssd1306_SetCursor(32,48);
 8003af8:	2130      	movs	r1, #48	@ 0x30
 8003afa:	2020      	movs	r0, #32
 8003afc:	f7ff fa2c 	bl	8002f58 <ssd1306_SetCursor>
				 					ssd1306_WriteString("to erase",Font_6x8,White);
 8003b00:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003b04:	482b      	ldr	r0, [pc, #172]	@ (8003bb4 <statemachine+0x61c>)
 8003b06:	2301      	movs	r3, #1
 8003b08:	f7ff fa0a 	bl	8002f20 <ssd1306_WriteString>
				 					if(erasedisplay==1){
 8003b0c:	f8da 4000 	ldr.w	r4, [sl]
 8003b10:	2c01      	cmp	r4, #1
 8003b12:	f001 8034 	beq.w	8004b7e <statemachine+0x15e6>
				 					if(BTN_A>=1){
 8003b16:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 8003bb8 <statemachine+0x620>
 8003b1a:	f8db 2000 	ldr.w	r2, [fp]
 8003b1e:	2a00      	cmp	r2, #0
 8003b20:	f300 86ec 	bgt.w	80048fc <statemachine+0x1364>
				 					if(BTN_B>=1){
 8003b24:	481b      	ldr	r0, [pc, #108]	@ (8003b94 <statemachine+0x5fc>)
 8003b26:	6802      	ldr	r2, [r0, #0]
 8003b28:	2a00      	cmp	r2, #0
 8003b2a:	f77f adbc 	ble.w	80036a6 <statemachine+0x10e>
					 						usbstate++;
 8003b2e:	7832      	ldrb	r2, [r6, #0]
					 						  BTN_B=0;
 8003b30:	2100      	movs	r1, #0
					 						usbstate++;
 8003b32:	3201      	adds	r2, #1
 8003b34:	7032      	strb	r2, [r6, #0]
					 						  BTN_B=0;
 8003b36:	6001      	str	r1, [r0, #0]
					 						  BTN_A=0;
 8003b38:	f8cb 1000 	str.w	r1, [fp]
 8003b3c:	e5b3      	b.n	80036a6 <statemachine+0x10e>
 8003b3e:	bf00      	nop
 8003b40:	00000000 	.word	0x00000000
 8003b44:	4058c000 	.word	0x4058c000
 8003b48:	cccccccd 	.word	0xcccccccd
 8003b4c:	400ccccc 	.word	0x400ccccc
 8003b50:	2000106e 	.word	0x2000106e
 8003b54:	2000106c 	.word	0x2000106c
 8003b58:	2000062c 	.word	0x2000062c
 8003b5c:	378bcf65 	.word	0x378bcf65
 8003b60:	476a6000 	.word	0x476a6000
 8003b64:	3a83126f 	.word	0x3a83126f
 8003b68:	20000638 	.word	0x20000638
 8003b6c:	20000634 	.word	0x20000634
 8003b70:	200005fd 	.word	0x200005fd
 8003b74:	200005fc 	.word	0x200005fc
 8003b78:	200005fe 	.word	0x200005fe
 8003b7c:	08016044 	.word	0x08016044
 8003b80:	20000680 	.word	0x20000680
 8003b84:	2000001c 	.word	0x2000001c
 8003b88:	2000002c 	.word	0x2000002c
 8003b8c:	0801604c 	.word	0x0801604c
 8003b90:	20000fc0 	.word	0x20000fc0
 8003b94:	20000ff4 	.word	0x20000ff4
 8003b98:	08016200 	.word	0x08016200
 8003b9c:	08016204 	.word	0x08016204
 8003ba0:	20000618 	.word	0x20000618
 8003ba4:	200005e0 	.word	0x200005e0
 8003ba8:	08016240 	.word	0x08016240
 8003bac:	48000400 	.word	0x48000400
 8003bb0:	08016210 	.word	0x08016210
 8003bb4:	08016218 	.word	0x08016218
 8003bb8:	20000ff8 	.word	0x20000ff8
 8003bbc:	2000061c 	.word	0x2000061c
						  ssd1306_Fill(Black);
 8003bc0:	2000      	movs	r0, #0
 8003bc2:	f7fe ff05 	bl	80029d0 <ssd1306_Fill>
						 ssd1306_SetCursor(32,32);
 8003bc6:	2120      	movs	r1, #32
 8003bc8:	4608      	mov	r0, r1
 8003bca:	f7ff f9c5 	bl	8002f58 <ssd1306_SetCursor>
						 snprintf((char *)bufferscreen,15, "%0.1fs",time50kmh);
 8003bce:	f8df 82ac 	ldr.w	r8, [pc, #684]	@ 8003e7c <statemachine+0x8e4>
						 ssd1306_WriteString("0-50kmh",Font_6x8,White);
 8003bd2:	4895      	ldr	r0, [pc, #596]	@ (8003e28 <statemachine+0x890>)
						 snprintf((char *)bufferscreen,15, "%0.1fs",time100kmh);
 8003bd4:	4e95      	ldr	r6, [pc, #596]	@ (8003e2c <statemachine+0x894>)
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 8003bd6:	f8df b2a8 	ldr.w	fp, [pc, #680]	@ 8003e80 <statemachine+0x8e8>
						 ssd1306_WriteString("0-50kmh",Font_6x8,White);
 8003bda:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003bde:	2301      	movs	r3, #1
 8003be0:	f7ff f99e 	bl	8002f20 <ssd1306_WriteString>
						 ssd1306_SetCursor(32,40);
 8003be4:	2128      	movs	r1, #40	@ 0x28
 8003be6:	2020      	movs	r0, #32
 8003be8:	f7ff f9b6 	bl	8002f58 <ssd1306_SetCursor>
						 snprintf((char *)bufferscreen,15, "%0.1fs",time50kmh);
 8003bec:	f8d8 0000 	ldr.w	r0, [r8]
 8003bf0:	f7fc fc82 	bl	80004f8 <__aeabi_f2d>
 8003bf4:	4a8e      	ldr	r2, [pc, #568]	@ (8003e30 <statemachine+0x898>)
 8003bf6:	e9cd 0100 	strd	r0, r1, [sp]
 8003bfa:	210f      	movs	r1, #15
 8003bfc:	488d      	ldr	r0, [pc, #564]	@ (8003e34 <statemachine+0x89c>)
 8003bfe:	f00c fba7 	bl	8010350 <sniprintf>
						 ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8003c02:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003c06:	2301      	movs	r3, #1
 8003c08:	488a      	ldr	r0, [pc, #552]	@ (8003e34 <statemachine+0x89c>)
 8003c0a:	f7ff f989 	bl	8002f20 <ssd1306_WriteString>
						 ssd1306_SetCursor(32,48);
 8003c0e:	2130      	movs	r1, #48	@ 0x30
 8003c10:	2020      	movs	r0, #32
 8003c12:	f7ff f9a1 	bl	8002f58 <ssd1306_SetCursor>
						 ssd1306_WriteString("0-100kmh",Font_6x8,White);
 8003c16:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003c1a:	2301      	movs	r3, #1
 8003c1c:	4886      	ldr	r0, [pc, #536]	@ (8003e38 <statemachine+0x8a0>)
 8003c1e:	f7ff f97f 	bl	8002f20 <ssd1306_WriteString>
						 ssd1306_SetCursor(32,56);
 8003c22:	2138      	movs	r1, #56	@ 0x38
 8003c24:	2020      	movs	r0, #32
 8003c26:	f7ff f997 	bl	8002f58 <ssd1306_SetCursor>
						 snprintf((char *)bufferscreen,15, "%0.1fs",time100kmh);
 8003c2a:	6830      	ldr	r0, [r6, #0]
 8003c2c:	f7fc fc64 	bl	80004f8 <__aeabi_f2d>
 8003c30:	4a7f      	ldr	r2, [pc, #508]	@ (8003e30 <statemachine+0x898>)
 8003c32:	e9cd 0100 	strd	r0, r1, [sp]
 8003c36:	210f      	movs	r1, #15
 8003c38:	487e      	ldr	r0, [pc, #504]	@ (8003e34 <statemachine+0x89c>)
 8003c3a:	f00c fb89 	bl	8010350 <sniprintf>
						 ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8003c3e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003c42:	487c      	ldr	r0, [pc, #496]	@ (8003e34 <statemachine+0x89c>)
 8003c44:	2301      	movs	r3, #1
 8003c46:	f7ff f96b 	bl	8002f20 <ssd1306_WriteString>
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 8003c4a:	f8db 2000 	ldr.w	r2, [fp]
 8003c4e:	2a00      	cmp	r2, #0
 8003c50:	f340 86bb 	ble.w	80049ca <statemachine+0x1432>
							 flag_100kmh=0;
 8003c54:	4b79      	ldr	r3, [pc, #484]	@ (8003e3c <statemachine+0x8a4>)
		 					if(BTN_A_LONG>=1){
 8003c56:	4d7a      	ldr	r5, [pc, #488]	@ (8003e40 <statemachine+0x8a8>)
						  	state--;
 8003c58:	7821      	ldrb	r1, [r4, #0]
							 flag_50kmh=0;
 8003c5a:	2000      	movs	r0, #0
							 time50kmh=0.0;
 8003c5c:	2200      	movs	r2, #0
							 flag_100kmh=0;
 8003c5e:	6018      	str	r0, [r3, #0]
		 					if(BTN_A_LONG>=1){
 8003c60:	682b      	ldr	r3, [r5, #0]
							 time100kmh=0.0;
 8003c62:	6032      	str	r2, [r6, #0]
						  	state--;
 8003c64:	3905      	subs	r1, #5
							 flag_50kmh=0;
 8003c66:	4e77      	ldr	r6, [pc, #476]	@ (8003e44 <statemachine+0x8ac>)
							 time50kmh=0.0;
 8003c68:	f8c8 2000 	str.w	r2, [r8]
						  	BTN_B=0;
 8003c6c:	4a76      	ldr	r2, [pc, #472]	@ (8003e48 <statemachine+0x8b0>)
							 flag_50kmh=0;
 8003c6e:	6030      	str	r0, [r6, #0]
						  	state--;
 8003c70:	b2c9      	uxtb	r1, r1
		 					if(BTN_A_LONG>=1){
 8003c72:	4283      	cmp	r3, r0
						  	state--;
 8003c74:	7021      	strb	r1, [r4, #0]
							 accelstate=WAITFORGPS;
 8003c76:	7038      	strb	r0, [r7, #0]
						  	BTN_A=0;
 8003c78:	f8cb 0000 	str.w	r0, [fp]
						  	BTN_B=0;
 8003c7c:	6010      	str	r0, [r2, #0]
		 					if(BTN_A_LONG>=1){
 8003c7e:	f77f ad12 	ble.w	80036a6 <statemachine+0x10e>
			 								state--;
 8003c82:	3901      	subs	r1, #1
 8003c84:	7021      	strb	r1, [r4, #0]
			 								BTN_A=0;
 8003c86:	2100      	movs	r1, #0
 8003c88:	f8cb 1000 	str.w	r1, [fp]
			 								BTN_B=0;
 8003c8c:	6011      	str	r1, [r2, #0]
			 								BTN_A_LONG=0;
 8003c8e:	6029      	str	r1, [r5, #0]
		 					if(BTN_B>=1){
 8003c90:	e509      	b.n	80036a6 <statemachine+0x10e>
						  if(((GNSSData.fgSpeed*3.6)>=50.0)&&(flag_50kmh==0)){
 8003c92:	4e6e      	ldr	r6, [pc, #440]	@ (8003e4c <statemachine+0x8b4>)
 8003c94:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 8003c98:	f7fc fc2e 	bl	80004f8 <__aeabi_f2d>
 8003c9c:	a35a      	add	r3, pc, #360	@ (adr r3, 8003e08 <statemachine+0x870>)
 8003c9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ca2:	4604      	mov	r4, r0
 8003ca4:	460d      	mov	r5, r1
 8003ca6:	f7fc ff05 	bl	8000ab4 <__aeabi_dcmpge>
 8003caa:	b320      	cbz	r0, 8003cf6 <statemachine+0x75e>
 8003cac:	f8df 8194 	ldr.w	r8, [pc, #404]	@ 8003e44 <statemachine+0x8ac>
 8003cb0:	f8d8 3000 	ldr.w	r3, [r8]
 8003cb4:	b993      	cbnz	r3, 8003cdc <statemachine+0x744>
							  time50kmh=(float)(htim16.Instance->CNT/1000.0);
 8003cb6:	4b66      	ldr	r3, [pc, #408]	@ (8003e50 <statemachine+0x8b8>)
 8003cb8:	f8df 91c0 	ldr.w	r9, [pc, #448]	@ 8003e7c <statemachine+0x8e4>
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8003cc0:	f7fc fbf8 	bl	80004b4 <__aeabi_ui2d>
 8003cc4:	a352      	add	r3, pc, #328	@ (adr r3, 8003e10 <statemachine+0x878>)
 8003cc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cca:	f7fc fc6d 	bl	80005a8 <__aeabi_dmul>
 8003cce:	f7fc ff63 	bl	8000b98 <__aeabi_d2f>
							  flag_50kmh=1;
 8003cd2:	2301      	movs	r3, #1
							  time50kmh=(float)(htim16.Instance->CNT/1000.0);
 8003cd4:	f8c9 0000 	str.w	r0, [r9]
							  flag_50kmh=1;
 8003cd8:	f8c8 3000 	str.w	r3, [r8]
						  if(((GNSSData.fgSpeed*3.6)>=100.0)&&(flag_100kmh==0)){
 8003cdc:	a34e      	add	r3, pc, #312	@ (adr r3, 8003e18 <statemachine+0x880>)
 8003cde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ce2:	4620      	mov	r0, r4
 8003ce4:	4629      	mov	r1, r5
 8003ce6:	f7fc fee5 	bl	8000ab4 <__aeabi_dcmpge>
 8003cea:	b120      	cbz	r0, 8003cf6 <statemachine+0x75e>
 8003cec:	4d53      	ldr	r5, [pc, #332]	@ (8003e3c <statemachine+0x8a4>)
 8003cee:	682c      	ldr	r4, [r5, #0]
 8003cf0:	2c00      	cmp	r4, #0
 8003cf2:	f000 878c 	beq.w	8004c0e <statemachine+0x1676>
						  ssd1306_SetCursor(32,40);
 8003cf6:	2128      	movs	r1, #40	@ 0x28
 8003cf8:	2020      	movs	r0, #32
 8003cfa:	f7ff f92d 	bl	8002f58 <ssd1306_SetCursor>
						  snprintf((char *)bufferscreen,15, "%0.1f",GNSSData.fgSpeed*3.6);
 8003cfe:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 8003d02:	f7fc fbf9 	bl	80004f8 <__aeabi_f2d>
 8003d06:	a346      	add	r3, pc, #280	@ (adr r3, 8003e20 <statemachine+0x888>)
 8003d08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d0c:	f7fc fc4c 	bl	80005a8 <__aeabi_dmul>
 8003d10:	4a50      	ldr	r2, [pc, #320]	@ (8003e54 <statemachine+0x8bc>)
 8003d12:	e9cd 0100 	strd	r0, r1, [sp]
 8003d16:	210f      	movs	r1, #15
 8003d18:	4846      	ldr	r0, [pc, #280]	@ (8003e34 <statemachine+0x89c>)
 8003d1a:	f00c fb19 	bl	8010350 <sniprintf>
						  ssd1306_WriteString((char *)bufferscreen,Font_16x24,White);
 8003d1e:	4b4e      	ldr	r3, [pc, #312]	@ (8003e58 <statemachine+0x8c0>)
 8003d20:	4844      	ldr	r0, [pc, #272]	@ (8003e34 <statemachine+0x89c>)
 8003d22:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003d26:	2301      	movs	r3, #1
 8003d28:	f7ff f8fa 	bl	8002f20 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 8003d2c:	4b4b      	ldr	r3, [pc, #300]	@ (8003e5c <statemachine+0x8c4>)
 8003d2e:	681a      	ldr	r2, [r3, #0]
 8003d30:	2a00      	cmp	r2, #0
 8003d32:	f77f acb8 	ble.w	80036a6 <statemachine+0x10e>
							  accelstate++;
 8003d36:	783a      	ldrb	r2, [r7, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8003d38:	4d45      	ldr	r5, [pc, #276]	@ (8003e50 <statemachine+0x8b8>)
							  accelstate++;
 8003d3a:	3201      	adds	r2, #1
							  BTN_B_LONG=0;
 8003d3c:	2400      	movs	r4, #0
							  HAL_TIM_Base_Stop(&htim16);
 8003d3e:	4628      	mov	r0, r5
							  BTN_B_LONG=0;
 8003d40:	601c      	str	r4, [r3, #0]
							  accelstate++;
 8003d42:	703a      	strb	r2, [r7, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8003d44:	f006 fdc6 	bl	800a8d4 <HAL_TIM_Base_Stop>
							  htim16.Instance->CNT=0;
 8003d48:	682b      	ldr	r3, [r5, #0]
 8003d4a:	625c      	str	r4, [r3, #36]	@ 0x24
 8003d4c:	e4ab      	b.n	80036a6 <statemachine+0x10e>
						  timecounter++;
 8003d4e:	4d44      	ldr	r5, [pc, #272]	@ (8003e60 <statemachine+0x8c8>)
 8003d50:	682b      	ldr	r3, [r5, #0]
 8003d52:	3301      	adds	r3, #1
						  if(timecounter>=10){
 8003d54:	2b09      	cmp	r3, #9
						  timecounter++;
 8003d56:	602b      	str	r3, [r5, #0]
						  if(timecounter>=10){
 8003d58:	f340 85ac 	ble.w	80048b4 <statemachine+0x131c>
							  timecounter=0;
 8003d5c:	2300      	movs	r3, #0
 8003d5e:	602b      	str	r3, [r5, #0]
							  ssd1306_SetCursor(32,40);
 8003d60:	2128      	movs	r1, #40	@ 0x28
 8003d62:	2020      	movs	r0, #32
 8003d64:	f7ff f8f8 	bl	8002f58 <ssd1306_SetCursor>
							  ssd1306_WriteString("Push B",Font_7x10,White);
 8003d68:	4a3e      	ldr	r2, [pc, #248]	@ (8003e64 <statemachine+0x8cc>)
 8003d6a:	483f      	ldr	r0, [pc, #252]	@ (8003e68 <statemachine+0x8d0>)
 8003d6c:	ca06      	ldmia	r2, {r1, r2}
 8003d6e:	2301      	movs	r3, #1
 8003d70:	f7ff f8d6 	bl	8002f20 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 8003d74:	4b39      	ldr	r3, [pc, #228]	@ (8003e5c <statemachine+0x8c4>)
 8003d76:	681a      	ldr	r2, [r3, #0]
 8003d78:	2a00      	cmp	r2, #0
 8003d7a:	f340 863f 	ble.w	80049fc <statemachine+0x1464>
							  accelstate++;
 8003d7e:	783a      	ldrb	r2, [r7, #0]
						  				 						BTN_B_LONG=0;
 8003d80:	2100      	movs	r1, #0
							  accelstate++;
 8003d82:	3201      	adds	r2, #1
 8003d84:	703a      	strb	r2, [r7, #0]
						  				 						BTN_B_LONG=0;
 8003d86:	6019      	str	r1, [r3, #0]
 8003d88:	e48d      	b.n	80036a6 <statemachine+0x10e>
						  ssd1306_SetCursor(32,40);
 8003d8a:	2128      	movs	r1, #40	@ 0x28
 8003d8c:	2020      	movs	r0, #32
 8003d8e:	f7ff f8e3 	bl	8002f58 <ssd1306_SetCursor>
						  ssd1306_WriteString("GPS fix",Font_7x10,White);
 8003d92:	4a34      	ldr	r2, [pc, #208]	@ (8003e64 <statemachine+0x8cc>)
 8003d94:	4835      	ldr	r0, [pc, #212]	@ (8003e6c <statemachine+0x8d4>)
 8003d96:	2301      	movs	r3, #1
 8003d98:	ca06      	ldmia	r2, {r1, r2}
 8003d9a:	f7ff f8c1 	bl	8002f20 <ssd1306_WriteString>
						  if(GNSSData.fixType>=2){
 8003d9e:	4b2b      	ldr	r3, [pc, #172]	@ (8003e4c <statemachine+0x8b4>)
 8003da0:	f893 3077 	ldrb.w	r3, [r3, #119]	@ 0x77
 8003da4:	2b01      	cmp	r3, #1
 8003da6:	d902      	bls.n	8003dae <statemachine+0x816>
							  accelstate++;
 8003da8:	783b      	ldrb	r3, [r7, #0]
 8003daa:	3301      	adds	r3, #1
 8003dac:	703b      	strb	r3, [r7, #0]
						  if(BTN_A>=1){
 8003dae:	f8df b0d0 	ldr.w	fp, [pc, #208]	@ 8003e80 <statemachine+0x8e8>
 8003db2:	f8db 2000 	ldr.w	r2, [fp]
 8003db6:	2a00      	cmp	r2, #0
 8003db8:	f77f ac68 	ble.w	800368c <statemachine+0xf4>
						  	state--;
 8003dbc:	7822      	ldrb	r2, [r4, #0]
						  	BTN_B=0;
 8003dbe:	4822      	ldr	r0, [pc, #136]	@ (8003e48 <statemachine+0x8b0>)
						  	BTN_A=0;
 8003dc0:	2100      	movs	r1, #0
						  	state--;
 8003dc2:	3a05      	subs	r2, #5
 8003dc4:	7022      	strb	r2, [r4, #0]
						  	BTN_A=0;
 8003dc6:	f8cb 1000 	str.w	r1, [fp]
						  	BTN_B=0;
 8003dca:	6001      	str	r1, [r0, #0]
 8003dcc:	e45e      	b.n	800368c <statemachine+0xf4>
						  if(GNSSData.fgSpeed<=1.0){
 8003dce:	4b1f      	ldr	r3, [pc, #124]	@ (8003e4c <statemachine+0x8b4>)
 8003dd0:	ed93 7a30 	vldr	s14, [r3, #192]	@ 0xc0
 8003dd4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8003dd8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003ddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
							  ssd1306_SetCursor(56,40);
 8003de0:	f04f 0128 	mov.w	r1, #40	@ 0x28
						  if(GNSSData.fgSpeed<=1.0){
 8003de4:	f240 8616 	bls.w	8004a14 <statemachine+0x147c>
							  ssd1306_SetCursor(32,40);
 8003de8:	2020      	movs	r0, #32
 8003dea:	f7ff f8b5 	bl	8002f58 <ssd1306_SetCursor>
							  ssd1306_WriteString("Please stop",Font_6x8,White);
 8003dee:	e895 0006 	ldmia.w	r5, {r1, r2}
 8003df2:	2301      	movs	r3, #1
 8003df4:	481e      	ldr	r0, [pc, #120]	@ (8003e70 <statemachine+0x8d8>)
 8003df6:	f7ff f893 	bl	8002f20 <ssd1306_WriteString>
							  counterforstart=0;
 8003dfa:	491e      	ldr	r1, [pc, #120]	@ (8003e74 <statemachine+0x8dc>)
							  indexcounterforstart=0;
 8003dfc:	4a1e      	ldr	r2, [pc, #120]	@ (8003e78 <statemachine+0x8e0>)
							  counterforstart=0;
 8003dfe:	2300      	movs	r3, #0
 8003e00:	600b      	str	r3, [r1, #0]
							  indexcounterforstart=0;
 8003e02:	6013      	str	r3, [r2, #0]
 8003e04:	e44f      	b.n	80036a6 <statemachine+0x10e>
 8003e06:	bf00      	nop
 8003e08:	71c71c72 	.word	0x71c71c72
 8003e0c:	402bc71c 	.word	0x402bc71c
 8003e10:	d2f1a9fc 	.word	0xd2f1a9fc
 8003e14:	3f50624d 	.word	0x3f50624d
 8003e18:	71c71c72 	.word	0x71c71c72
 8003e1c:	403bc71c 	.word	0x403bc71c
 8003e20:	cccccccd 	.word	0xcccccccd
 8003e24:	400ccccc 	.word	0x400ccccc
 8003e28:	08016270 	.word	0x08016270
 8003e2c:	20001538 	.word	0x20001538
 8003e30:	08016278 	.word	0x08016278
 8003e34:	20000680 	.word	0x20000680
 8003e38:	08016280 	.word	0x08016280
 8003e3c:	20001540 	.word	0x20001540
 8003e40:	200005e0 	.word	0x200005e0
 8003e44:	20001544 	.word	0x20001544
 8003e48:	20000ff4 	.word	0x20000ff4
 8003e4c:	20000510 	.word	0x20000510
 8003e50:	200015f8 	.word	0x200015f8
 8003e54:	08016044 	.word	0x08016044
 8003e58:	2000001c 	.word	0x2000001c
 8003e5c:	200005e4 	.word	0x200005e4
 8003e60:	20001550 	.word	0x20001550
 8003e64:	20000024 	.word	0x20000024
 8003e68:	0801625c 	.word	0x0801625c
 8003e6c:	08016254 	.word	0x08016254
 8003e70:	08016264 	.word	0x08016264
 8003e74:	2000154c 	.word	0x2000154c
 8003e78:	20001548 	.word	0x20001548
 8003e7c:	2000153c 	.word	0x2000153c
 8003e80:	20000ff8 	.word	0x20000ff8
			  			  ssd1306_Fill(Black);
 8003e84:	2000      	movs	r0, #0
 8003e86:	f7fe fda3 	bl	80029d0 <ssd1306_Fill>
			  			  if(settimeen==0){
 8003e8a:	4bb1      	ldr	r3, [pc, #708]	@ (8004150 <statemachine+0xbb8>)
 8003e8c:	681a      	ldr	r2, [r3, #0]
 8003e8e:	2a00      	cmp	r2, #0
 8003e90:	f000 8660 	beq.w	8004b54 <statemachine+0x15bc>
 8003e94:	4eaf      	ldr	r6, [pc, #700]	@ (8004154 <statemachine+0xbbc>)
 8003e96:	f8df 831c 	ldr.w	r8, [pc, #796]	@ 80041b4 <statemachine+0xc1c>
 8003e9a:	4faf      	ldr	r7, [pc, #700]	@ (8004158 <statemachine+0xbc0>)
			  			get_time_date();
 8003e9c:	f7fe faa6 	bl	80023ec <get_time_date>
			  				  ssd1306_SetCursor(32, 32);
 8003ea0:	2120      	movs	r1, #32
 8003ea2:	4608      	mov	r0, r1
 8003ea4:	f7ff f858 	bl	8002f58 <ssd1306_SetCursor>
			  				  ssd1306_WriteString("hr GMT:", Font_6x8, White);
 8003ea8:	4bac      	ldr	r3, [pc, #688]	@ (800415c <statemachine+0xbc4>)
 8003eaa:	48ad      	ldr	r0, [pc, #692]	@ (8004160 <statemachine+0xbc8>)
 8003eac:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003eb0:	2301      	movs	r3, #1
 8003eb2:	f7ff f835 	bl	8002f20 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 42);
 8003eb6:	212a      	movs	r1, #42	@ 0x2a
 8003eb8:	2020      	movs	r0, #32
 8003eba:	f7ff f84d 	bl	8002f58 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15, "%02d:%02d",HR,MINUTE);
 8003ebe:	7833      	ldrb	r3, [r6, #0]
 8003ec0:	f898 2000 	ldrb.w	r2, [r8]
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003ec4:	4ea7      	ldr	r6, [pc, #668]	@ (8004164 <statemachine+0xbcc>)
			  				snprintf((char *)bufferscreen,15, "%02d:%02d",HR,MINUTE);
 8003ec6:	9200      	str	r2, [sp, #0]
 8003ec8:	210f      	movs	r1, #15
 8003eca:	4aa7      	ldr	r2, [pc, #668]	@ (8004168 <statemachine+0xbd0>)
 8003ecc:	48a7      	ldr	r0, [pc, #668]	@ (800416c <statemachine+0xbd4>)
 8003ece:	f00c fa3f 	bl	8010350 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003ed2:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003ed6:	2301      	movs	r3, #1
 8003ed8:	48a4      	ldr	r0, [pc, #656]	@ (800416c <statemachine+0xbd4>)
 8003eda:	f7ff f821 	bl	8002f20 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 52);
 8003ede:	2134      	movs	r1, #52	@ 0x34
 8003ee0:	2020      	movs	r0, #32
 8003ee2:	f7ff f839 	bl	8002f58 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15, "%02d sec",SEC);
 8003ee6:	4aa2      	ldr	r2, [pc, #648]	@ (8004170 <statemachine+0xbd8>)
 8003ee8:	783b      	ldrb	r3, [r7, #0]
 8003eea:	48a0      	ldr	r0, [pc, #640]	@ (800416c <statemachine+0xbd4>)
 8003eec:	210f      	movs	r1, #15
 8003eee:	f00c fa2f 	bl	8010350 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003ef2:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003ef6:	2301      	movs	r3, #1
 8003ef8:	489c      	ldr	r0, [pc, #624]	@ (800416c <statemachine+0xbd4>)
 8003efa:	f7ff f811 	bl	8002f20 <ssd1306_WriteString>
			  				if(BTN_B>=1){
 8003efe:	4b9d      	ldr	r3, [pc, #628]	@ (8004174 <statemachine+0xbdc>)
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	2a00      	cmp	r2, #0
 8003f04:	dd04      	ble.n	8003f10 <statemachine+0x978>
			  					posstate--;
 8003f06:	782a      	ldrb	r2, [r5, #0]
			  					BTN_B=0;
 8003f08:	2100      	movs	r1, #0
			  					posstate--;
 8003f0a:	3a05      	subs	r2, #5
 8003f0c:	702a      	strb	r2, [r5, #0]
			  					BTN_B=0;
 8003f0e:	6019      	str	r1, [r3, #0]
			  				if(BTN_B_LONG>=1){
 8003f10:	4b99      	ldr	r3, [pc, #612]	@ (8004178 <statemachine+0xbe0>)
 8003f12:	681a      	ldr	r2, [r3, #0]
 8003f14:	2a00      	cmp	r2, #0
 8003f16:	f77f abab 	ble.w	8003670 <statemachine+0xd8>
			  							  					posstate--;
 8003f1a:	782a      	ldrb	r2, [r5, #0]
			  							  					BTN_B_LONG=0;
 8003f1c:	2100      	movs	r1, #0
			  							  					posstate--;
 8003f1e:	3a01      	subs	r2, #1
 8003f20:	702a      	strb	r2, [r5, #0]
			  							  					BTN_B_LONG=0;
 8003f22:	6019      	str	r1, [r3, #0]
					if(BTN_A>=1){
 8003f24:	f7ff bba4 	b.w	8003670 <statemachine+0xd8>
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f28:	4b94      	ldr	r3, [pc, #592]	@ (800417c <statemachine+0xbe4>)
				  						snprintf((char *)bufferscreen,15, "baroalt:");
 8003f2a:	4e90      	ldr	r6, [pc, #576]	@ (800416c <statemachine+0xbd4>)
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f2c:	6818      	ldr	r0, [r3, #0]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f2e:	4f8b      	ldr	r7, [pc, #556]	@ (800415c <statemachine+0xbc4>)
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f30:	f7fd fd5e 	bl	80019f0 <bmp581_read_precise_normal>
				  						ssd1306_SetCursor(32, 32);
 8003f34:	2120      	movs	r1, #32
 8003f36:	4608      	mov	r0, r1
 8003f38:	f7ff f80e 	bl	8002f58 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "baroalt:");
 8003f3c:	4b90      	ldr	r3, [pc, #576]	@ (8004180 <statemachine+0xbe8>)
 8003f3e:	cb03      	ldmia	r3!, {r0, r1}
 8003f40:	781b      	ldrb	r3, [r3, #0]
 8003f42:	6030      	str	r0, [r6, #0]
 8003f44:	6071      	str	r1, [r6, #4]
 8003f46:	7233      	strb	r3, [r6, #8]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f48:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003f4c:	2301      	movs	r3, #1
 8003f4e:	4630      	mov	r0, r6
 8003f50:	f7fe ffe6 	bl	8002f20 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.2lf m",bmpalt);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003f54:	4b8b      	ldr	r3, [pc, #556]	@ (8004184 <statemachine+0xbec>)
 8003f56:	4a8c      	ldr	r2, [pc, #560]	@ (8004188 <statemachine+0xbf0>)
 8003f58:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003f5c:	e9cd 0100 	strd	r0, r1, [sp]
 8003f60:	210f      	movs	r1, #15
 8003f62:	4630      	mov	r0, r6
 8003f64:	f00c f9f4 	bl	8010350 <sniprintf>
				  						ssd1306_SetCursor(32, 40);
 8003f68:	2128      	movs	r1, #40	@ 0x28
 8003f6a:	2020      	movs	r0, #32
 8003f6c:	f7fe fff4 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f70:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003f74:	2301      	movs	r3, #1
 8003f76:	4630      	mov	r0, r6
 8003f78:	f7fe ffd2 	bl	8002f20 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "baropress:");
 8003f7c:	4b83      	ldr	r3, [pc, #524]	@ (800418c <statemachine+0xbf4>)
 8003f7e:	cb03      	ldmia	r3!, {r0, r1}
 8003f80:	881a      	ldrh	r2, [r3, #0]
 8003f82:	6030      	str	r0, [r6, #0]
 8003f84:	789b      	ldrb	r3, [r3, #2]
 8003f86:	6071      	str	r1, [r6, #4]
				  						ssd1306_SetCursor(32, 48);
 8003f88:	2020      	movs	r0, #32
 8003f8a:	2130      	movs	r1, #48	@ 0x30
				  						snprintf((char *)bufferscreen,15, "baropress:");
 8003f8c:	8132      	strh	r2, [r6, #8]
 8003f8e:	72b3      	strb	r3, [r6, #10]
				  						ssd1306_SetCursor(32, 48);
 8003f90:	f7fe ffe2 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f94:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003f98:	2301      	movs	r3, #1
 8003f9a:	4630      	mov	r0, r6
 8003f9c:	f7fe ffc0 	bl	8002f20 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.3lfkPa",bmppress/1000.0);
 8003fa0:	4b7b      	ldr	r3, [pc, #492]	@ (8004190 <statemachine+0xbf8>)
 8003fa2:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003fa6:	a368      	add	r3, pc, #416	@ (adr r3, 8004148 <statemachine+0xbb0>)
 8003fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fac:	f7fc fafc 	bl	80005a8 <__aeabi_dmul>
 8003fb0:	4a78      	ldr	r2, [pc, #480]	@ (8004194 <statemachine+0xbfc>)
 8003fb2:	e9cd 0100 	strd	r0, r1, [sp]
 8003fb6:	210f      	movs	r1, #15
 8003fb8:	4630      	mov	r0, r6
 8003fba:	f00c f9c9 	bl	8010350 <sniprintf>
				  						ssd1306_SetCursor(32, 56);
 8003fbe:	2138      	movs	r1, #56	@ 0x38
 8003fc0:	2020      	movs	r0, #32
 8003fc2:	f7fe ffc9 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003fc6:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003fca:	2301      	movs	r3, #1
 8003fcc:	4630      	mov	r0, r6
 8003fce:	f7fe ffa7 	bl	8002f20 <ssd1306_WriteString>
				  						HAL_Delay(200);
 8003fd2:	20c8      	movs	r0, #200	@ 0xc8
 8003fd4:	f001 fbd2 	bl	800577c <HAL_Delay>
				  if(BTN_B>=1){
 8003fd8:	4b66      	ldr	r3, [pc, #408]	@ (8004174 <statemachine+0xbdc>)
 8003fda:	681a      	ldr	r2, [r3, #0]
 8003fdc:	2a00      	cmp	r2, #0
 8003fde:	dd97      	ble.n	8003f10 <statemachine+0x978>
				  					posstate++;
 8003fe0:	782a      	ldrb	r2, [r5, #0]
				  					BTN_B=0;
 8003fe2:	2100      	movs	r1, #0
				  					posstate++;
 8003fe4:	3201      	adds	r2, #1
 8003fe6:	702a      	strb	r2, [r5, #0]
				  					BTN_B=0;
 8003fe8:	6019      	str	r1, [r3, #0]
				  if(BTN_B_LONG>=1){
 8003fea:	e791      	b.n	8003f10 <statemachine+0x978>
				  						ssd1306_SetCursor(32, 32);
 8003fec:	2120      	movs	r1, #32
 8003fee:	4608      	mov	r0, r1
 8003ff0:	f7fe ffb2 	bl	8002f58 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "altitude:");
 8003ff4:	4b68      	ldr	r3, [pc, #416]	@ (8004198 <statemachine+0xc00>)
 8003ff6:	4e5d      	ldr	r6, [pc, #372]	@ (800416c <statemachine+0xbd4>)
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003ff8:	4f58      	ldr	r7, [pc, #352]	@ (800415c <statemachine+0xbc4>)
				  						snprintf((char *)bufferscreen,15, "%0.2f m",GNSSData.fhMSL);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003ffa:	f8df 81bc 	ldr.w	r8, [pc, #444]	@ 80041b8 <statemachine+0xc20>
				  						snprintf((char *)bufferscreen,15, "altitude:");
 8003ffe:	cb03      	ldmia	r3!, {r0, r1}
 8004000:	881b      	ldrh	r3, [r3, #0]
 8004002:	6030      	str	r0, [r6, #0]
 8004004:	6071      	str	r1, [r6, #4]
 8004006:	8133      	strh	r3, [r6, #8]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004008:	e897 0006 	ldmia.w	r7, {r1, r2}
 800400c:	2301      	movs	r3, #1
 800400e:	4630      	mov	r0, r6
 8004010:	f7fe ff86 	bl	8002f20 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.2f m",GNSSData.fhMSL);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8004014:	f8d8 00a4 	ldr.w	r0, [r8, #164]	@ 0xa4
 8004018:	f7fc fa6e 	bl	80004f8 <__aeabi_f2d>
 800401c:	4a5f      	ldr	r2, [pc, #380]	@ (800419c <statemachine+0xc04>)
 800401e:	e9cd 0100 	strd	r0, r1, [sp]
 8004022:	210f      	movs	r1, #15
 8004024:	4630      	mov	r0, r6
 8004026:	f00c f993 	bl	8010350 <sniprintf>
				  						ssd1306_SetCursor(32, 40);
 800402a:	2128      	movs	r1, #40	@ 0x28
 800402c:	2020      	movs	r0, #32
 800402e:	f7fe ff93 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004032:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004036:	2301      	movs	r3, #1
 8004038:	4630      	mov	r0, r6
 800403a:	f7fe ff71 	bl	8002f20 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "Accuracy(m)");
 800403e:	4b58      	ldr	r3, [pc, #352]	@ (80041a0 <statemachine+0xc08>)
 8004040:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004042:	6030      	str	r0, [r6, #0]
 8004044:	6071      	str	r1, [r6, #4]
				  						ssd1306_SetCursor(32, 48);
 8004046:	2020      	movs	r0, #32
 8004048:	2130      	movs	r1, #48	@ 0x30
				  						snprintf((char *)bufferscreen,15, "Accuracy(m)");
 800404a:	60b2      	str	r2, [r6, #8]
				  						ssd1306_SetCursor(32, 48);
 800404c:	f7fe ff84 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004050:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004054:	2301      	movs	r3, #1
 8004056:	4630      	mov	r0, r6
 8004058:	f7fe ff62 	bl	8002f20 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.1f",GNSSData.fvACC);
 800405c:	f8d8 00b4 	ldr.w	r0, [r8, #180]	@ 0xb4
 8004060:	f7fc fa4a 	bl	80004f8 <__aeabi_f2d>
 8004064:	4a4f      	ldr	r2, [pc, #316]	@ (80041a4 <statemachine+0xc0c>)
 8004066:	e9cd 0100 	strd	r0, r1, [sp]
 800406a:	210f      	movs	r1, #15
 800406c:	4630      	mov	r0, r6
 800406e:	f00c f96f 	bl	8010350 <sniprintf>
				  						ssd1306_SetCursor(32, 56);
 8004072:	2138      	movs	r1, #56	@ 0x38
 8004074:	2020      	movs	r0, #32
 8004076:	f7fe ff6f 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800407a:	e897 0006 	ldmia.w	r7, {r1, r2}
 800407e:	2301      	movs	r3, #1
 8004080:	4630      	mov	r0, r6
 8004082:	f7fe ff4d 	bl	8002f20 <ssd1306_WriteString>
				  if(BTN_B>=1){
 8004086:	4b3b      	ldr	r3, [pc, #236]	@ (8004174 <statemachine+0xbdc>)
 8004088:	681a      	ldr	r2, [r3, #0]
 800408a:	2a00      	cmp	r2, #0
 800408c:	dca8      	bgt.n	8003fe0 <statemachine+0xa48>
 800408e:	e73f      	b.n	8003f10 <statemachine+0x978>
						ssd1306_SetCursor(32, 32);
 8004090:	2120      	movs	r1, #32
 8004092:	4608      	mov	r0, r1
 8004094:	f7fe ff60 	bl	8002f58 <ssd1306_SetCursor>
						snprintf((char *)bufferscreen,15, "Latitude:");
 8004098:	4b43      	ldr	r3, [pc, #268]	@ (80041a8 <statemachine+0xc10>)
 800409a:	4e34      	ldr	r6, [pc, #208]	@ (800416c <statemachine+0xbd4>)
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800409c:	4f2f      	ldr	r7, [pc, #188]	@ (800415c <statemachine+0xbc4>)
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLat);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 800409e:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 80041b8 <statemachine+0xc20>
						snprintf((char *)bufferscreen,15, "Latitude:");
 80040a2:	cb03      	ldmia	r3!, {r0, r1}
 80040a4:	881b      	ldrh	r3, [r3, #0]
 80040a6:	6030      	str	r0, [r6, #0]
 80040a8:	6071      	str	r1, [r6, #4]
 80040aa:	8133      	strh	r3, [r6, #8]
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80040ac:	e897 0006 	ldmia.w	r7, {r1, r2}
 80040b0:	2301      	movs	r3, #1
 80040b2:	4630      	mov	r0, r6
 80040b4:	f7fe ff34 	bl	8002f20 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLat);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 80040b8:	f8d8 0090 	ldr.w	r0, [r8, #144]	@ 0x90
 80040bc:	f7fc fa1c 	bl	80004f8 <__aeabi_f2d>
 80040c0:	4a3a      	ldr	r2, [pc, #232]	@ (80041ac <statemachine+0xc14>)
 80040c2:	e9cd 0100 	strd	r0, r1, [sp]
 80040c6:	210f      	movs	r1, #15
 80040c8:	4630      	mov	r0, r6
 80040ca:	f00c f941 	bl	8010350 <sniprintf>
						ssd1306_SetCursor(32, 40);
 80040ce:	2128      	movs	r1, #40	@ 0x28
 80040d0:	2020      	movs	r0, #32
 80040d2:	f7fe ff41 	bl	8002f58 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80040d6:	e897 0006 	ldmia.w	r7, {r1, r2}
 80040da:	2301      	movs	r3, #1
 80040dc:	4630      	mov	r0, r6
 80040de:	f7fe ff1f 	bl	8002f20 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "Longitude:");
 80040e2:	4b33      	ldr	r3, [pc, #204]	@ (80041b0 <statemachine+0xc18>)
 80040e4:	cb03      	ldmia	r3!, {r0, r1}
 80040e6:	881a      	ldrh	r2, [r3, #0]
 80040e8:	6030      	str	r0, [r6, #0]
 80040ea:	789b      	ldrb	r3, [r3, #2]
 80040ec:	6071      	str	r1, [r6, #4]
						ssd1306_SetCursor(32, 48);
 80040ee:	2020      	movs	r0, #32
 80040f0:	2130      	movs	r1, #48	@ 0x30
						snprintf((char *)bufferscreen,15, "Longitude:");
 80040f2:	8132      	strh	r2, [r6, #8]
 80040f4:	72b3      	strb	r3, [r6, #10]
						ssd1306_SetCursor(32, 48);
 80040f6:	f7fe ff2f 	bl	8002f58 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80040fa:	2301      	movs	r3, #1
 80040fc:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004100:	4630      	mov	r0, r6
 8004102:	f7fe ff0d 	bl	8002f20 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLon);
 8004106:	f8d8 008c 	ldr.w	r0, [r8, #140]	@ 0x8c
 800410a:	f7fc f9f5 	bl	80004f8 <__aeabi_f2d>
 800410e:	4a27      	ldr	r2, [pc, #156]	@ (80041ac <statemachine+0xc14>)
 8004110:	e9cd 0100 	strd	r0, r1, [sp]
 8004114:	210f      	movs	r1, #15
 8004116:	4630      	mov	r0, r6
 8004118:	f00c f91a 	bl	8010350 <sniprintf>
						ssd1306_SetCursor(32, 56);
 800411c:	2138      	movs	r1, #56	@ 0x38
 800411e:	2020      	movs	r0, #32
 8004120:	f7fe ff1a 	bl	8002f58 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004124:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004128:	2301      	movs	r3, #1
 800412a:	4630      	mov	r0, r6
 800412c:	f7fe fef8 	bl	8002f20 <ssd1306_WriteString>
				  if(BTN_B>=1){
 8004130:	4b10      	ldr	r3, [pc, #64]	@ (8004174 <statemachine+0xbdc>)
 8004132:	681a      	ldr	r2, [r3, #0]
 8004134:	2a00      	cmp	r2, #0
 8004136:	f77f aa9b 	ble.w	8003670 <statemachine+0xd8>
					  posstate++;
 800413a:	782a      	ldrb	r2, [r5, #0]
					  BTN_B=0;
 800413c:	2100      	movs	r1, #0
					  posstate++;
 800413e:	3201      	adds	r2, #1
 8004140:	702a      	strb	r2, [r5, #0]
					  BTN_B=0;
 8004142:	6019      	str	r1, [r3, #0]
 8004144:	f7ff ba94 	b.w	8003670 <statemachine+0xd8>
 8004148:	d2f1a9fc 	.word	0xd2f1a9fc
 800414c:	3f50624d 	.word	0x3f50624d
 8004150:	200005f8 	.word	0x200005f8
 8004154:	200005fd 	.word	0x200005fd
 8004158:	200005fe 	.word	0x200005fe
 800415c:	2000002c 	.word	0x2000002c
 8004160:	080161c4 	.word	0x080161c4
 8004164:	20000024 	.word	0x20000024
 8004168:	080161cc 	.word	0x080161cc
 800416c:	20000680 	.word	0x20000680
 8004170:	080161d8 	.word	0x080161d8
 8004174:	20000ff4 	.word	0x20000ff4
 8004178:	200005e4 	.word	0x200005e4
 800417c:	200005d8 	.word	0x200005d8
 8004180:	08016194 	.word	0x08016194
 8004184:	20000408 	.word	0x20000408
 8004188:	080161a0 	.word	0x080161a0
 800418c:	080161ac 	.word	0x080161ac
 8004190:	20000410 	.word	0x20000410
 8004194:	080161b8 	.word	0x080161b8
 8004198:	08016174 	.word	0x08016174
 800419c:	08016180 	.word	0x08016180
 80041a0:	08016188 	.word	0x08016188
 80041a4:	08016044 	.word	0x08016044
 80041a8:	08016108 	.word	0x08016108
 80041ac:	08016114 	.word	0x08016114
 80041b0:	0801611c 	.word	0x0801611c
 80041b4:	200005fc 	.word	0x200005fc
 80041b8:	20000510 	.word	0x20000510
			  				ssd1306_Fill(Black);
 80041bc:	2000      	movs	r0, #0
 80041be:	f7fe fc07 	bl	80029d0 <ssd1306_Fill>
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041c2:	4bab      	ldr	r3, [pc, #684]	@ (8004470 <statemachine+0xed8>)
 80041c4:	4eab      	ldr	r6, [pc, #684]	@ (8004474 <statemachine+0xedc>)
 80041c6:	6818      	ldr	r0, [r3, #0]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80041c8:	4fab      	ldr	r7, [pc, #684]	@ (8004478 <statemachine+0xee0>)
			  				snprintf((char *)bufferscreen,20, "%d sat",GNSSData.numSV);
 80041ca:	f8df 82bc 	ldr.w	r8, [pc, #700]	@ 8004488 <statemachine+0xef0>
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041ce:	889a      	ldrh	r2, [r3, #4]
 80041d0:	6030      	str	r0, [r6, #0]
			  				ssd1306_SetCursor(32, 32);
 80041d2:	2120      	movs	r1, #32
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041d4:	799b      	ldrb	r3, [r3, #6]
 80041d6:	80b2      	strh	r2, [r6, #4]
			  				ssd1306_SetCursor(32, 32);
 80041d8:	4608      	mov	r0, r1
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 80041da:	71b3      	strb	r3, [r6, #6]
			  				ssd1306_SetCursor(32, 32);
 80041dc:	f7fe febc 	bl	8002f58 <ssd1306_SetCursor>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 80041e0:	e897 0006 	ldmia.w	r7, {r1, r2}
 80041e4:	2301      	movs	r3, #1
 80041e6:	4630      	mov	r0, r6
 80041e8:	f7fe fe9a 	bl	8002f20 <ssd1306_WriteString>
			  				snprintf((char *)bufferscreen,20, "%d sat",GNSSData.numSV);
 80041ec:	f898 3078 	ldrb.w	r3, [r8, #120]	@ 0x78
 80041f0:	4aa2      	ldr	r2, [pc, #648]	@ (800447c <statemachine+0xee4>)
 80041f2:	2114      	movs	r1, #20
 80041f4:	4630      	mov	r0, r6
 80041f6:	f00c f8ab 	bl	8010350 <sniprintf>
			  				ssd1306_SetCursor(32, 40);
 80041fa:	2128      	movs	r1, #40	@ 0x28
 80041fc:	2020      	movs	r0, #32
 80041fe:	f7fe feab 	bl	8002f58 <ssd1306_SetCursor>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004202:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004206:	2301      	movs	r3, #1
 8004208:	4630      	mov	r0, r6
 800420a:	f7fe fe89 	bl	8002f20 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 48);
 800420e:	2130      	movs	r1, #48	@ 0x30
 8004210:	2020      	movs	r0, #32
 8004212:	f7fe fea1 	bl	8002f58 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15,  "DateJ/M/Y");
 8004216:	4a9a      	ldr	r2, [pc, #616]	@ (8004480 <statemachine+0xee8>)
 8004218:	ca03      	ldmia	r2!, {r0, r1}
 800421a:	8812      	ldrh	r2, [r2, #0]
 800421c:	6030      	str	r0, [r6, #0]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800421e:	2301      	movs	r3, #1
			  				snprintf((char *)bufferscreen,15,  "DateJ/M/Y");
 8004220:	6071      	str	r1, [r6, #4]
 8004222:	8132      	strh	r2, [r6, #8]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004224:	4630      	mov	r0, r6
 8004226:	e897 0006 	ldmia.w	r7, {r1, r2}
 800422a:	f7fe fe79 	bl	8002f20 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 56);
 800422e:	2138      	movs	r1, #56	@ 0x38
 8004230:	2020      	movs	r0, #32
 8004232:	f7fe fe91 	bl	8002f58 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15,  "%d/%d/%d",GNSSData.day,GNSSData.month,GNSSData.year);
 8004236:	f8b8 306e 	ldrh.w	r3, [r8, #110]	@ 0x6e
 800423a:	9301      	str	r3, [sp, #4]
 800423c:	f898 3072 	ldrb.w	r3, [r8, #114]	@ 0x72
 8004240:	9300      	str	r3, [sp, #0]
 8004242:	4a90      	ldr	r2, [pc, #576]	@ (8004484 <statemachine+0xeec>)
 8004244:	f898 3073 	ldrb.w	r3, [r8, #115]	@ 0x73
 8004248:	210f      	movs	r1, #15
 800424a:	4630      	mov	r0, r6
 800424c:	f00c f880 	bl	8010350 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004250:	e713      	b.n	800407a <statemachine+0xae2>
				ssd1306_Fill(Black);
 8004252:	2000      	movs	r0, #0
 8004254:	f7fe fbbc 	bl	80029d0 <ssd1306_Fill>
				snprintf((char *)bufferscreen,15, "hacc=%0.2fm",GNSSData.fhACC);//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8004258:	4b8b      	ldr	r3, [pc, #556]	@ (8004488 <statemachine+0xef0>)
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 800425a:	4e8c      	ldr	r6, [pc, #560]	@ (800448c <statemachine+0xef4>)
				snprintf((char *)bufferscreen,15, "hacc=%0.2fm",GNSSData.fhACC);//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 800425c:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
 8004260:	f7fc f94a 	bl	80004f8 <__aeabi_f2d>
 8004264:	4a8a      	ldr	r2, [pc, #552]	@ (8004490 <statemachine+0xef8>)
 8004266:	e9cd 0100 	strd	r0, r1, [sp]
 800426a:	210f      	movs	r1, #15
 800426c:	4881      	ldr	r0, [pc, #516]	@ (8004474 <statemachine+0xedc>)
 800426e:	f00c f86f 	bl	8010350 <sniprintf>
				ssd1306_SetCursor(32, 32);
 8004272:	2120      	movs	r1, #32
 8004274:	4608      	mov	r0, r1
 8004276:	f7fe fe6f 	bl	8002f58 <ssd1306_SetCursor>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 800427a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800427e:	2301      	movs	r3, #1
 8004280:	487c      	ldr	r0, [pc, #496]	@ (8004474 <statemachine+0xedc>)
 8004282:	f7fe fe4d 	bl	8002f20 <ssd1306_WriteString>
				snprintf((char *)bufferscreen,20, "v=%0.2fV",vbat);
 8004286:	4b83      	ldr	r3, [pc, #524]	@ (8004494 <statemachine+0xefc>)
 8004288:	6818      	ldr	r0, [r3, #0]
 800428a:	f7fc f935 	bl	80004f8 <__aeabi_f2d>
 800428e:	4a82      	ldr	r2, [pc, #520]	@ (8004498 <statemachine+0xf00>)
 8004290:	e9cd 0100 	strd	r0, r1, [sp]
 8004294:	2114      	movs	r1, #20
 8004296:	4877      	ldr	r0, [pc, #476]	@ (8004474 <statemachine+0xedc>)
 8004298:	f00c f85a 	bl	8010350 <sniprintf>
				ssd1306_SetCursor(32, 42);
 800429c:	212a      	movs	r1, #42	@ 0x2a
 800429e:	2020      	movs	r0, #32
 80042a0:	f7fe fe5a 	bl	8002f58 <ssd1306_SetCursor>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80042a4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80042a8:	2301      	movs	r3, #1
 80042aa:	4872      	ldr	r0, [pc, #456]	@ (8004474 <statemachine+0xedc>)
 80042ac:	f7fe fe38 	bl	8002f20 <ssd1306_WriteString>
				ssd1306_SetCursor(32, 52);
 80042b0:	2134      	movs	r1, #52	@ 0x34
 80042b2:	2020      	movs	r0, #32
 80042b4:	f7fe fe50 	bl	8002f58 <ssd1306_SetCursor>
				snprintf((char *)bufferscreen,15,  "T=%0.2fC",temp);
 80042b8:	4b78      	ldr	r3, [pc, #480]	@ (800449c <statemachine+0xf04>)
 80042ba:	6818      	ldr	r0, [r3, #0]
 80042bc:	f7fc f91c 	bl	80004f8 <__aeabi_f2d>
 80042c0:	4a77      	ldr	r2, [pc, #476]	@ (80044a0 <statemachine+0xf08>)
 80042c2:	e9cd 0100 	strd	r0, r1, [sp]
 80042c6:	210f      	movs	r1, #15
 80042c8:	486a      	ldr	r0, [pc, #424]	@ (8004474 <statemachine+0xedc>)
 80042ca:	f00c f841 	bl	8010350 <sniprintf>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80042ce:	e896 0006 	ldmia.w	r6, {r1, r2}
 80042d2:	4868      	ldr	r0, [pc, #416]	@ (8004474 <statemachine+0xedc>)
 80042d4:	2301      	movs	r3, #1
 80042d6:	e6d4      	b.n	8004082 <statemachine+0xaea>
						  ssd1306_WriteString("fin de",Font_6x8,White);
 80042d8:	4d67      	ldr	r5, [pc, #412]	@ (8004478 <statemachine+0xee0>)
						  if(BTN_A>=1){
 80042da:	f8df b208 	ldr.w	fp, [pc, #520]	@ 80044e4 <statemachine+0xf4c>
						  ssd1306_SetCursor(32,32);
 80042de:	2120      	movs	r1, #32
 80042e0:	4608      	mov	r0, r1
 80042e2:	f7fe fe39 	bl	8002f58 <ssd1306_SetCursor>
						  ssd1306_WriteString("fin de",Font_6x8,White);
 80042e6:	e895 0006 	ldmia.w	r5, {r1, r2}
 80042ea:	2301      	movs	r3, #1
 80042ec:	486d      	ldr	r0, [pc, #436]	@ (80044a4 <statemachine+0xf0c>)
 80042ee:	f7fe fe17 	bl	8002f20 <ssd1306_WriteString>
						  ssd1306_SetCursor(32,42);
 80042f2:	212a      	movs	r1, #42	@ 0x2a
 80042f4:	2020      	movs	r0, #32
 80042f6:	f7fe fe2f 	bl	8002f58 <ssd1306_SetCursor>
						  ssd1306_WriteString("memoire",Font_6x8,White);
 80042fa:	e895 0006 	ldmia.w	r5, {r1, r2}
 80042fe:	2301      	movs	r3, #1
 8004300:	4869      	ldr	r0, [pc, #420]	@ (80044a8 <statemachine+0xf10>)
 8004302:	f7fe fe0d 	bl	8002f20 <ssd1306_WriteString>
						  ssd1306_SetCursor(32,52);
 8004306:	2134      	movs	r1, #52	@ 0x34
 8004308:	2020      	movs	r0, #32
 800430a:	f7fe fe25 	bl	8002f58 <ssd1306_SetCursor>
						  snprintf((char *)bufferscreen,50,"%d,%d",pageoffset,pagenumber);
 800430e:	4a67      	ldr	r2, [pc, #412]	@ (80044ac <statemachine+0xf14>)
 8004310:	4b67      	ldr	r3, [pc, #412]	@ (80044b0 <statemachine+0xf18>)
 8004312:	6812      	ldr	r2, [r2, #0]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	4857      	ldr	r0, [pc, #348]	@ (8004474 <statemachine+0xedc>)
 8004318:	9200      	str	r2, [sp, #0]
 800431a:	2132      	movs	r1, #50	@ 0x32
 800431c:	4a65      	ldr	r2, [pc, #404]	@ (80044b4 <statemachine+0xf1c>)
 800431e:	f00c f817 	bl	8010350 <sniprintf>
						  ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004322:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004326:	4853      	ldr	r0, [pc, #332]	@ (8004474 <statemachine+0xedc>)
 8004328:	2301      	movs	r3, #1
 800432a:	f7fe fdf9 	bl	8002f20 <ssd1306_WriteString>
						  if(BTN_A>=1){
 800432e:	f8db 2000 	ldr.w	r2, [fp]
 8004332:	2a00      	cmp	r2, #0
 8004334:	f77f a9aa 	ble.w	800368c <statemachine+0xf4>
						  				  			 	state++;
 8004338:	7821      	ldrb	r1, [r4, #0]
						  				  			 	BTN_B=0;
 800433a:	485f      	ldr	r0, [pc, #380]	@ (80044b8 <statemachine+0xf20>)
						  				  			 	BTN_A=0;
 800433c:	2200      	movs	r2, #0
						  				  			 	state++;
 800433e:	3101      	adds	r1, #1
						  				  			 	BTN_B=0;
 8004340:	6002      	str	r2, [r0, #0]
						  				  			 	state++;
 8004342:	7021      	strb	r1, [r4, #0]
						  				  			 	BTN_A=0;
 8004344:	f8cb 2000 	str.w	r2, [fp]
						  				  			settimeen=0;
 8004348:	603a      	str	r2, [r7, #0]
						  if(BTN_A_LONG>=1){
 800434a:	f7ff b99f 	b.w	800368c <statemachine+0xf4>
				  if(BTN_B>=1){
 800434e:	4d5a      	ldr	r5, [pc, #360]	@ (80044b8 <statemachine+0xf20>)
				  timehandler=calctime;
 8004350:	4b5a      	ldr	r3, [pc, #360]	@ (80044bc <statemachine+0xf24>)
				  if(BTN_B>=1){
 8004352:	682e      	ldr	r6, [r5, #0]
				  timehandler=calctime;
 8004354:	485a      	ldr	r0, [pc, #360]	@ (80044c0 <statemachine+0xf28>)
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	6003      	str	r3, [r0, #0]
				  if(BTN_B>=1){
 800435a:	2e00      	cmp	r6, #0
 800435c:	dd07      	ble.n	800436e <statemachine+0xdd6>
				  			starttime=uwTick;
 800435e:	4a59      	ldr	r2, [pc, #356]	@ (80044c4 <statemachine+0xf2c>)
 8004360:	6816      	ldr	r6, [r2, #0]
 8004362:	4a59      	ldr	r2, [pc, #356]	@ (80044c8 <statemachine+0xf30>)
 8004364:	6016      	str	r6, [r2, #0]
				  			chronostate--;
 8004366:	2201      	movs	r2, #1
				  			BTN_B=0;
 8004368:	2600      	movs	r6, #0
				  			chronostate--;
 800436a:	700a      	strb	r2, [r1, #0]
				  			BTN_B=0;
 800436c:	602e      	str	r6, [r5, #0]
				  if(BTN_B_LONG>=1){
 800436e:	4d57      	ldr	r5, [pc, #348]	@ (80044cc <statemachine+0xf34>)
 8004370:	682e      	ldr	r6, [r5, #0]
 8004372:	2e00      	cmp	r6, #0
 8004374:	dd04      	ble.n	8004380 <statemachine+0xde8>
				  				  	chronostate--;
 8004376:	3a02      	subs	r2, #2
 8004378:	700a      	strb	r2, [r1, #0]
				  				  	BTN_B_LONG=0;
 800437a:	2200      	movs	r2, #0
 800437c:	602a      	str	r2, [r5, #0]
				  				  	timehandler=0;
 800437e:	6002      	str	r2, [r0, #0]
			  min=floor((float) calctime/60000);
 8004380:	ee07 3a90 	vmov	s15, r3
 8004384:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8004388:	eddf 7a51 	vldr	s15, [pc, #324]	@ 80044d0 <statemachine+0xf38>
 800438c:	f7ff bacd 	b.w	800392a <statemachine+0x392>
					 ssd1306_SetCursor(32, 32);
 8004390:	2120      	movs	r1, #32
 8004392:	4608      	mov	r0, r1
 8004394:	f7fe fde0 	bl	8002f58 <ssd1306_SetCursor>
					 snprintf((char *)bufferscreen,15, "%0.1f",vitmax*3.6);
 8004398:	6838      	ldr	r0, [r7, #0]
 800439a:	f7fc f8ad 	bl	80004f8 <__aeabi_f2d>
 800439e:	a332      	add	r3, pc, #200	@ (adr r3, 8004468 <statemachine+0xed0>)
 80043a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043a4:	f7fc f900 	bl	80005a8 <__aeabi_dmul>
 80043a8:	4a4a      	ldr	r2, [pc, #296]	@ (80044d4 <statemachine+0xf3c>)
 80043aa:	e9cd 0100 	strd	r0, r1, [sp]
 80043ae:	210f      	movs	r1, #15
 80043b0:	4830      	ldr	r0, [pc, #192]	@ (8004474 <statemachine+0xedc>)
 80043b2:	f00b ffcd 	bl	8010350 <sniprintf>
					 ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 80043b6:	4b48      	ldr	r3, [pc, #288]	@ (80044d8 <statemachine+0xf40>)
 80043b8:	482e      	ldr	r0, [pc, #184]	@ (8004474 <statemachine+0xedc>)
 80043ba:	e893 0006 	ldmia.w	r3, {r1, r2}
 80043be:	462b      	mov	r3, r5
 80043c0:	f7fe fdae 	bl	8002f20 <ssd1306_WriteString>
					 ssd1306_SetCursor(32, 56);
 80043c4:	2138      	movs	r1, #56	@ 0x38
 80043c6:	2020      	movs	r0, #32
 80043c8:	f7fe fdc6 	bl	8002f58 <ssd1306_SetCursor>
					 ssd1306_WriteString("maxV", Font_6x8, White);
 80043cc:	4b2a      	ldr	r3, [pc, #168]	@ (8004478 <statemachine+0xee0>)
 80043ce:	4843      	ldr	r0, [pc, #268]	@ (80044dc <statemachine+0xf44>)
 80043d0:	e893 0006 	ldmia.w	r3, {r1, r2}
 80043d4:	462b      	mov	r3, r5
 80043d6:	f7fe fda3 	bl	8002f20 <ssd1306_WriteString>
					 batterygauge(vbat,79, 57,1);
 80043da:	4b2e      	ldr	r3, [pc, #184]	@ (8004494 <statemachine+0xefc>)
 80043dc:	462a      	mov	r2, r5
 80043de:	ed93 0a00 	vldr	s0, [r3]
 80043e2:	2139      	movs	r1, #57	@ 0x39
 80043e4:	204f      	movs	r0, #79	@ 0x4f
 80043e6:	f7fe fe73 	bl	80030d0 <batterygauge>
					 if(BTN_B>=1){
 80043ea:	4b33      	ldr	r3, [pc, #204]	@ (80044b8 <statemachine+0xf20>)
 80043ec:	681a      	ldr	r2, [r3, #0]
 80043ee:	2a00      	cmp	r2, #0
 80043f0:	f77f a9b8 	ble.w	8003764 <statemachine+0x1cc>
					 							spdstate++;
 80043f4:	f898 2000 	ldrb.w	r2, [r8]
 80043f8:	3201      	adds	r2, #1
 80043fa:	f888 2000 	strb.w	r2, [r8]
					 							BTN_B=0;
 80043fe:	2200      	movs	r2, #0
 8004400:	601a      	str	r2, [r3, #0]
 8004402:	f7ff b9af 	b.w	8003764 <statemachine+0x1cc>
				  calctime=uwTick-starttime+timehandler;
 8004406:	4b2f      	ldr	r3, [pc, #188]	@ (80044c4 <statemachine+0xf2c>)
 8004408:	482d      	ldr	r0, [pc, #180]	@ (80044c0 <statemachine+0xf28>)
 800440a:	4a2f      	ldr	r2, [pc, #188]	@ (80044c8 <statemachine+0xf30>)
 800440c:	6800      	ldr	r0, [r0, #0]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	6812      	ldr	r2, [r2, #0]
 8004412:	4403      	add	r3, r0
 8004414:	1a9b      	subs	r3, r3, r2
 8004416:	4829      	ldr	r0, [pc, #164]	@ (80044bc <statemachine+0xf24>)
				  if(BTN_B>=1){
 8004418:	4a27      	ldr	r2, [pc, #156]	@ (80044b8 <statemachine+0xf20>)
				  calctime=uwTick-starttime+timehandler;
 800441a:	6003      	str	r3, [r0, #0]
				  if(BTN_B>=1){
 800441c:	6810      	ldr	r0, [r2, #0]
			  min=floor((float) calctime/60000);
 800441e:	ee07 3a90 	vmov	s15, r3
				  if(BTN_B>=1){
 8004422:	2800      	cmp	r0, #0
			  min=floor((float) calctime/60000);
 8004424:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8004428:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80044d0 <statemachine+0xf38>
				  if(BTN_B>=1){
 800442c:	f77f aa7d 	ble.w	800392a <statemachine+0x392>
			  min=floor((float) calctime/60000);
 8004430:	ee68 7a27 	vmul.f32	s15, s16, s15
				  		chronostate++;
 8004434:	2002      	movs	r0, #2
				  		BTN_B=0;
 8004436:	2300      	movs	r3, #0
				  		chronostate++;
 8004438:	7008      	strb	r0, [r1, #0]
				  		BTN_B=0;
 800443a:	6013      	str	r3, [r2, #0]
			  min=floor((float) calctime/60000);
 800443c:	ee17 0a90 	vmov	r0, s15
 8004440:	f7ff ba77 	b.w	8003932 <statemachine+0x39a>
						  ssd1306_SetCursor(32,32);
 8004444:	2120      	movs	r1, #32
						  switch(ecranstate){
 8004446:	4f26      	ldr	r7, [pc, #152]	@ (80044e0 <statemachine+0xf48>)
						  ssd1306_SetCursor(32,32);
 8004448:	4608      	mov	r0, r1
 800444a:	f7fe fd85 	bl	8002f58 <ssd1306_SetCursor>
						  switch(ecranstate){
 800444e:	783b      	ldrb	r3, [r7, #0]
 8004450:	2b05      	cmp	r3, #5
 8004452:	f200 840a 	bhi.w	8004c6a <statemachine+0x16d2>
 8004456:	e8df f013 	tbh	[pc, r3, lsl #1]
 800445a:	015b      	.short	0x015b
 800445c:	010c013c 	.word	0x010c013c
 8004460:	00c000e9 	.word	0x00c000e9
 8004464:	0047      	.short	0x0047
 8004466:	bf00      	nop
 8004468:	cccccccd 	.word	0xcccccccd
 800446c:	400ccccc 	.word	0x400ccccc
 8004470:	0801614c 	.word	0x0801614c
 8004474:	20000680 	.word	0x20000680
 8004478:	2000002c 	.word	0x2000002c
 800447c:	08016154 	.word	0x08016154
 8004480:	0801615c 	.word	0x0801615c
 8004484:	08016168 	.word	0x08016168
 8004488:	20000510 	.word	0x20000510
 800448c:	20000024 	.word	0x20000024
 8004490:	08016128 	.word	0x08016128
 8004494:	20000fc0 	.word	0x20000fc0
 8004498:	08016134 	.word	0x08016134
 800449c:	20000fc8 	.word	0x20000fc8
 80044a0:	08016140 	.word	0x08016140
 80044a4:	080160f0 	.word	0x080160f0
 80044a8:	080160f8 	.word	0x080160f8
 80044ac:	200006b8 	.word	0x200006b8
 80044b0:	200006bc 	.word	0x200006bc
 80044b4:	08016100 	.word	0x08016100
 80044b8:	20000ff4 	.word	0x20000ff4
 80044bc:	2000062c 	.word	0x2000062c
 80044c0:	20000628 	.word	0x20000628
 80044c4:	20001804 	.word	0x20001804
 80044c8:	20000630 	.word	0x20000630
 80044cc:	200005e4 	.word	0x200005e4
 80044d0:	378bcf65 	.word	0x378bcf65
 80044d4:	08016044 	.word	0x08016044
 80044d8:	2000001c 	.word	0x2000001c
 80044dc:	08016058 	.word	0x08016058
 80044e0:	200005dc 	.word	0x200005dc
 80044e4:	20000ff8 	.word	0x20000ff8
							  snprintf((char  *)bufferscreen,50,"%0.1f",vitmax*3.6);
 80044e8:	4b99      	ldr	r3, [pc, #612]	@ (8004750 <statemachine+0x11b8>)
							  							ssd1306_WriteString("MaxV",Font_6x8,White);
 80044ea:	4d9a      	ldr	r5, [pc, #616]	@ (8004754 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",vitmax*3.6);
 80044ec:	6818      	ldr	r0, [r3, #0]
 80044ee:	f7fc f803 	bl	80004f8 <__aeabi_f2d>
 80044f2:	a393      	add	r3, pc, #588	@ (adr r3, 8004740 <statemachine+0x11a8>)
 80044f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044f8:	f7fc f856 	bl	80005a8 <__aeabi_dmul>
 80044fc:	4a96      	ldr	r2, [pc, #600]	@ (8004758 <statemachine+0x11c0>)
 80044fe:	e9cd 0100 	strd	r0, r1, [sp]
 8004502:	2132      	movs	r1, #50	@ 0x32
 8004504:	4895      	ldr	r0, [pc, #596]	@ (800475c <statemachine+0x11c4>)
 8004506:	f00b ff23 	bl	8010350 <sniprintf>
							  							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800450a:	4a95      	ldr	r2, [pc, #596]	@ (8004760 <statemachine+0x11c8>)
 800450c:	4893      	ldr	r0, [pc, #588]	@ (800475c <statemachine+0x11c4>)
 800450e:	ca06      	ldmia	r2, {r1, r2}
 8004510:	2301      	movs	r3, #1
 8004512:	f7fe fd05 	bl	8002f20 <ssd1306_WriteString>
							  							ssd1306_SetCursor(32,42);
 8004516:	212a      	movs	r1, #42	@ 0x2a
 8004518:	2020      	movs	r0, #32
 800451a:	f7fe fd1d 	bl	8002f58 <ssd1306_SetCursor>
							  							ssd1306_WriteString("MaxV",Font_6x8,White);
 800451e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004522:	2301      	movs	r3, #1
 8004524:	488f      	ldr	r0, [pc, #572]	@ (8004764 <statemachine+0x11cc>)
 8004526:	f7fe fcfb 	bl	8002f20 <ssd1306_WriteString>
							  if(BTN_B>=1){
 800452a:	4b8f      	ldr	r3, [pc, #572]	@ (8004768 <statemachine+0x11d0>)
 800452c:	681a      	ldr	r2, [r3, #0]
 800452e:	2a00      	cmp	r2, #0
 8004530:	f340 82c4 	ble.w	8004abc <statemachine+0x1524>
							  														ecranstate--;
 8004534:	783a      	ldrb	r2, [r7, #0]
 8004536:	3a05      	subs	r2, #5
							  													  	BTN_A=0;
 8004538:	498c      	ldr	r1, [pc, #560]	@ (800476c <statemachine+0x11d4>)
							  														ecranstate--;
 800453a:	703a      	strb	r2, [r7, #0]
							  													  	BTN_B=0;
 800453c:	4e8c      	ldr	r6, [pc, #560]	@ (8004770 <statemachine+0x11d8>)
 800453e:	2200      	movs	r2, #0
 8004540:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 8004542:	600a      	str	r2, [r1, #0]
 8004544:	4c8b      	ldr	r4, [pc, #556]	@ (8004774 <statemachine+0x11dc>)
						 	batterygauge(vbat,79, 42,1);
 8004546:	ed94 0a00 	vldr	s0, [r4]
 800454a:	2201      	movs	r2, #1
 800454c:	212a      	movs	r1, #42	@ 0x2a
 800454e:	204f      	movs	r0, #79	@ 0x4f
 8004550:	f7fe fdbe 	bl	80030d0 <batterygauge>
						 	ssd1306_SetCursor(32,52);
 8004554:	2134      	movs	r1, #52	@ 0x34
 8004556:	2020      	movs	r0, #32
 8004558:	f7fe fcfe 	bl	8002f58 <ssd1306_SetCursor>
						 	snprintf((char  *)bufferscreen,50, "%0.2fV",vbat);
 800455c:	6820      	ldr	r0, [r4, #0]
 800455e:	f7fb ffcb 	bl	80004f8 <__aeabi_f2d>
 8004562:	4a85      	ldr	r2, [pc, #532]	@ (8004778 <statemachine+0x11e0>)
 8004564:	e9cd 0100 	strd	r0, r1, [sp]
 8004568:	2132      	movs	r1, #50	@ 0x32
 800456a:	487c      	ldr	r0, [pc, #496]	@ (800475c <statemachine+0x11c4>)
 800456c:	f00b fef0 	bl	8010350 <sniprintf>
						 	ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004570:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004574:	2301      	movs	r3, #1
 8004576:	4879      	ldr	r0, [pc, #484]	@ (800475c <statemachine+0x11c4>)
 8004578:	f7fe fcd2 	bl	8002f20 <ssd1306_WriteString>
						 	ssd1306_SetCursor(65,52);
 800457c:	2134      	movs	r1, #52	@ 0x34
 800457e:	2041      	movs	r0, #65	@ 0x41
 8004580:	f7fe fcea 	bl	8002f58 <ssd1306_SetCursor>
						 	snprintf((char  *)bufferscreen,50, "sat=%d",GNSSData.numSV);
 8004584:	4a7d      	ldr	r2, [pc, #500]	@ (800477c <statemachine+0x11e4>)
 8004586:	f896 3078 	ldrb.w	r3, [r6, #120]	@ 0x78
 800458a:	4874      	ldr	r0, [pc, #464]	@ (800475c <statemachine+0x11c4>)
 800458c:	2132      	movs	r1, #50	@ 0x32
 800458e:	f00b fedf 	bl	8010350 <sniprintf>
						 	ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004592:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004596:	2301      	movs	r3, #1
 8004598:	4870      	ldr	r0, [pc, #448]	@ (800475c <statemachine+0x11c4>)
 800459a:	f7fe fcc1 	bl	8002f20 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 800459e:	4b78      	ldr	r3, [pc, #480]	@ (8004780 <statemachine+0x11e8>)
 80045a0:	681a      	ldr	r2, [r3, #0]
 80045a2:	2a00      	cmp	r2, #0
 80045a4:	f77f a87f 	ble.w	80036a6 <statemachine+0x10e>
						  						  balisestate--;
 80045a8:	f898 2000 	ldrb.w	r2, [r8]
						  						osThreadSuspend(BALISEHandle);
 80045ac:	4875      	ldr	r0, [pc, #468]	@ (8004784 <statemachine+0x11ec>)
						  						  BTN_A=0;
 80045ae:	496f      	ldr	r1, [pc, #444]	@ (800476c <statemachine+0x11d4>)
						  						osThreadSuspend(BALISEHandle);
 80045b0:	6800      	ldr	r0, [r0, #0]
						  						  BTN_B_LONG=0;
 80045b2:	2400      	movs	r4, #0
 80045b4:	601c      	str	r4, [r3, #0]
						  						  balisestate--;
 80045b6:	1e53      	subs	r3, r2, #1
						  						  BTN_A=0;
 80045b8:	600c      	str	r4, [r1, #0]
						  						  balisestate--;
 80045ba:	f888 3000 	strb.w	r3, [r8]
						  						osThreadSuspend(BALISEHandle);
 80045be:	f008 ffd3 	bl	800d568 <osThreadSuspend>
						  						storeindex();
 80045c2:	f7fe f82f 	bl	8002624 <storeindex>
						  						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 80045c6:	4870      	ldr	r0, [pc, #448]	@ (8004788 <statemachine+0x11f0>)
 80045c8:	4622      	mov	r2, r4
 80045ca:	2102      	movs	r1, #2
}
 80045cc:	b005      	add	sp, #20
 80045ce:	ecbd 8b04 	vpop	{d8-d9}
 80045d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
						  						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 80045d6:	f002 b89b 	b.w	8006710 <HAL_GPIO_WritePin>
							  snprintf((char  *)bufferscreen,50,"%0.1f",vbat);
 80045da:	4c66      	ldr	r4, [pc, #408]	@ (8004774 <statemachine+0x11dc>)
							  ssd1306_WriteString("Vbat(V)",Font_6x8,White);
 80045dc:	4d5d      	ldr	r5, [pc, #372]	@ (8004754 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",vbat);
 80045de:	6820      	ldr	r0, [r4, #0]
 80045e0:	f7fb ff8a 	bl	80004f8 <__aeabi_f2d>
 80045e4:	4a5c      	ldr	r2, [pc, #368]	@ (8004758 <statemachine+0x11c0>)
 80045e6:	e9cd 0100 	strd	r0, r1, [sp]
 80045ea:	2132      	movs	r1, #50	@ 0x32
 80045ec:	485b      	ldr	r0, [pc, #364]	@ (800475c <statemachine+0x11c4>)
 80045ee:	f00b feaf 	bl	8010350 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80045f2:	4a5b      	ldr	r2, [pc, #364]	@ (8004760 <statemachine+0x11c8>)
 80045f4:	4859      	ldr	r0, [pc, #356]	@ (800475c <statemachine+0x11c4>)
 80045f6:	ca06      	ldmia	r2, {r1, r2}
 80045f8:	2301      	movs	r3, #1
 80045fa:	f7fe fc91 	bl	8002f20 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 80045fe:	212a      	movs	r1, #42	@ 0x2a
 8004600:	2020      	movs	r0, #32
 8004602:	f7fe fca9 	bl	8002f58 <ssd1306_SetCursor>
							  ssd1306_WriteString("Vbat(V)",Font_6x8,White);
 8004606:	e895 0006 	ldmia.w	r5, {r1, r2}
 800460a:	2301      	movs	r3, #1
 800460c:	485f      	ldr	r0, [pc, #380]	@ (800478c <statemachine+0x11f4>)
 800460e:	f7fe fc87 	bl	8002f20 <ssd1306_WriteString>
							  if(BTN_B>=1){
 8004612:	4b55      	ldr	r3, [pc, #340]	@ (8004768 <statemachine+0x11d0>)
 8004614:	681a      	ldr	r2, [r3, #0]
 8004616:	2a00      	cmp	r2, #0
 8004618:	dd06      	ble.n	8004628 <statemachine+0x1090>
							  														  ecranstate++;
 800461a:	783a      	ldrb	r2, [r7, #0]
 800461c:	3201      	adds	r2, #1
 800461e:	703a      	strb	r2, [r7, #0]
							  													  	BTN_B=0;
 8004620:	2200      	movs	r2, #0
 8004622:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 8004624:	4b51      	ldr	r3, [pc, #324]	@ (800476c <statemachine+0x11d4>)
 8004626:	601a      	str	r2, [r3, #0]
 8004628:	4e51      	ldr	r6, [pc, #324]	@ (8004770 <statemachine+0x11d8>)
 800462a:	e78c      	b.n	8004546 <statemachine+0xfae>
							  snprintf((char  *)bufferscreen,50,"%0.1lf",bmpalt);
 800462c:	4b58      	ldr	r3, [pc, #352]	@ (8004790 <statemachine+0x11f8>)
 800462e:	4a59      	ldr	r2, [pc, #356]	@ (8004794 <statemachine+0x11fc>)
							  							ssd1306_WriteString("alt(m)",Font_6x8,White);
 8004630:	4d48      	ldr	r5, [pc, #288]	@ (8004754 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1lf",bmpalt);
 8004632:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004636:	e9cd 0100 	strd	r0, r1, [sp]
 800463a:	2132      	movs	r1, #50	@ 0x32
 800463c:	4847      	ldr	r0, [pc, #284]	@ (800475c <statemachine+0x11c4>)
 800463e:	f00b fe87 	bl	8010350 <sniprintf>
							  							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004642:	4a47      	ldr	r2, [pc, #284]	@ (8004760 <statemachine+0x11c8>)
 8004644:	4845      	ldr	r0, [pc, #276]	@ (800475c <statemachine+0x11c4>)
 8004646:	ca06      	ldmia	r2, {r1, r2}
 8004648:	2301      	movs	r3, #1
 800464a:	f7fe fc69 	bl	8002f20 <ssd1306_WriteString>
							  							ssd1306_SetCursor(32,42);
 800464e:	212a      	movs	r1, #42	@ 0x2a
 8004650:	2020      	movs	r0, #32
 8004652:	f7fe fc81 	bl	8002f58 <ssd1306_SetCursor>
							  							ssd1306_WriteString("alt(m)",Font_6x8,White);
 8004656:	e895 0006 	ldmia.w	r5, {r1, r2}
 800465a:	484f      	ldr	r0, [pc, #316]	@ (8004798 <statemachine+0x1200>)
 800465c:	2301      	movs	r3, #1
 800465e:	f7fe fc5f 	bl	8002f20 <ssd1306_WriteString>
							  if(BTN_B>=1){
 8004662:	4b41      	ldr	r3, [pc, #260]	@ (8004768 <statemachine+0x11d0>)
 8004664:	681a      	ldr	r2, [r3, #0]
 8004666:	2a00      	cmp	r2, #0
 8004668:	f340 8228 	ble.w	8004abc <statemachine+0x1524>
							  														  ecranstate++;
 800466c:	783a      	ldrb	r2, [r7, #0]
 800466e:	3201      	adds	r2, #1
 8004670:	e762      	b.n	8004538 <statemachine+0xfa0>
							  snprintf((char  *)bufferscreen,50,"%0.1f",GNSSData.fgSpeed*3.6);
 8004672:	4e3f      	ldr	r6, [pc, #252]	@ (8004770 <statemachine+0x11d8>)
							  ssd1306_WriteString("Vit(kmh)",Font_6x8,White);
 8004674:	4d37      	ldr	r5, [pc, #220]	@ (8004754 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",GNSSData.fgSpeed*3.6);
 8004676:	f8d6 00c0 	ldr.w	r0, [r6, #192]	@ 0xc0
 800467a:	f7fb ff3d 	bl	80004f8 <__aeabi_f2d>
 800467e:	a330      	add	r3, pc, #192	@ (adr r3, 8004740 <statemachine+0x11a8>)
 8004680:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004684:	f7fb ff90 	bl	80005a8 <__aeabi_dmul>
 8004688:	4a33      	ldr	r2, [pc, #204]	@ (8004758 <statemachine+0x11c0>)
 800468a:	e9cd 0100 	strd	r0, r1, [sp]
 800468e:	2132      	movs	r1, #50	@ 0x32
 8004690:	4832      	ldr	r0, [pc, #200]	@ (800475c <statemachine+0x11c4>)
 8004692:	f00b fe5d 	bl	8010350 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004696:	4a32      	ldr	r2, [pc, #200]	@ (8004760 <statemachine+0x11c8>)
 8004698:	4830      	ldr	r0, [pc, #192]	@ (800475c <statemachine+0x11c4>)
 800469a:	ca06      	ldmia	r2, {r1, r2}
 800469c:	2301      	movs	r3, #1
 800469e:	f7fe fc3f 	bl	8002f20 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 80046a2:	212a      	movs	r1, #42	@ 0x2a
 80046a4:	2020      	movs	r0, #32
 80046a6:	f7fe fc57 	bl	8002f58 <ssd1306_SetCursor>
							  ssd1306_WriteString("Vit(kmh)",Font_6x8,White);
 80046aa:	e895 0006 	ldmia.w	r5, {r1, r2}
 80046ae:	2301      	movs	r3, #1
 80046b0:	483a      	ldr	r0, [pc, #232]	@ (800479c <statemachine+0x1204>)
 80046b2:	f7fe fc35 	bl	8002f20 <ssd1306_WriteString>
							  if(BTN_B>=1){
 80046b6:	4b2c      	ldr	r3, [pc, #176]	@ (8004768 <statemachine+0x11d0>)
 80046b8:	681a      	ldr	r2, [r3, #0]
 80046ba:	2a00      	cmp	r2, #0
 80046bc:	f77f af42 	ble.w	8004544 <statemachine+0xfac>
							  														  ecranstate++;
 80046c0:	783a      	ldrb	r2, [r7, #0]
 80046c2:	4c2c      	ldr	r4, [pc, #176]	@ (8004774 <statemachine+0x11dc>)
 80046c4:	3201      	adds	r2, #1
 80046c6:	703a      	strb	r2, [r7, #0]
							  													  	BTN_B=0;
 80046c8:	2200      	movs	r2, #0
 80046ca:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 80046cc:	4b27      	ldr	r3, [pc, #156]	@ (800476c <statemachine+0x11d4>)
 80046ce:	601a      	str	r2, [r3, #0]
 80046d0:	e739      	b.n	8004546 <statemachine+0xfae>
							  snprintf((char  *)bufferscreen,50,"%0.3lf",distanceparcouru/1000);
 80046d2:	4933      	ldr	r1, [pc, #204]	@ (80047a0 <statemachine+0x1208>)
							  ssd1306_WriteString("Dist(km)",Font_6x8,White);
 80046d4:	4d1f      	ldr	r5, [pc, #124]	@ (8004754 <statemachine+0x11bc>)
							  snprintf((char  *)bufferscreen,50,"%0.3lf",distanceparcouru/1000);
 80046d6:	a31c      	add	r3, pc, #112	@ (adr r3, 8004748 <statemachine+0x11b0>)
 80046d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046dc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80046e0:	f7fb ff62 	bl	80005a8 <__aeabi_dmul>
 80046e4:	4a2f      	ldr	r2, [pc, #188]	@ (80047a4 <statemachine+0x120c>)
 80046e6:	e9cd 0100 	strd	r0, r1, [sp]
 80046ea:	2132      	movs	r1, #50	@ 0x32
 80046ec:	481b      	ldr	r0, [pc, #108]	@ (800475c <statemachine+0x11c4>)
 80046ee:	f00b fe2f 	bl	8010350 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80046f2:	4a1b      	ldr	r2, [pc, #108]	@ (8004760 <statemachine+0x11c8>)
 80046f4:	4819      	ldr	r0, [pc, #100]	@ (800475c <statemachine+0x11c4>)
 80046f6:	ca06      	ldmia	r2, {r1, r2}
 80046f8:	2301      	movs	r3, #1
 80046fa:	f7fe fc11 	bl	8002f20 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 80046fe:	212a      	movs	r1, #42	@ 0x2a
 8004700:	2020      	movs	r0, #32
 8004702:	f7fe fc29 	bl	8002f58 <ssd1306_SetCursor>
							  ssd1306_WriteString("Dist(km)",Font_6x8,White);
 8004706:	e895 0006 	ldmia.w	r5, {r1, r2}
 800470a:	4827      	ldr	r0, [pc, #156]	@ (80047a8 <statemachine+0x1210>)
 800470c:	2301      	movs	r3, #1
 800470e:	e7a6      	b.n	800465e <statemachine+0x10c6>
							  snprintf((char *)bufferscreen,50,"%d",pagenumber);
 8004710:	4b26      	ldr	r3, [pc, #152]	@ (80047ac <statemachine+0x1214>)
 8004712:	4a27      	ldr	r2, [pc, #156]	@ (80047b0 <statemachine+0x1218>)
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	4811      	ldr	r0, [pc, #68]	@ (800475c <statemachine+0x11c4>)
							  ssd1306_WriteString("PageNb",Font_6x8,White);
 8004718:	4d0e      	ldr	r5, [pc, #56]	@ (8004754 <statemachine+0x11bc>)
							  snprintf((char *)bufferscreen,50,"%d",pagenumber);
 800471a:	2132      	movs	r1, #50	@ 0x32
 800471c:	f00b fe18 	bl	8010350 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004720:	4a0f      	ldr	r2, [pc, #60]	@ (8004760 <statemachine+0x11c8>)
 8004722:	480e      	ldr	r0, [pc, #56]	@ (800475c <statemachine+0x11c4>)
 8004724:	ca06      	ldmia	r2, {r1, r2}
 8004726:	2301      	movs	r3, #1
 8004728:	f7fe fbfa 	bl	8002f20 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 800472c:	212a      	movs	r1, #42	@ 0x2a
 800472e:	2020      	movs	r0, #32
 8004730:	f7fe fc12 	bl	8002f58 <ssd1306_SetCursor>
							  ssd1306_WriteString("PageNb",Font_6x8,White);
 8004734:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004738:	481e      	ldr	r0, [pc, #120]	@ (80047b4 <statemachine+0x121c>)
 800473a:	2301      	movs	r3, #1
 800473c:	e78f      	b.n	800465e <statemachine+0x10c6>
 800473e:	bf00      	nop
 8004740:	cccccccd 	.word	0xcccccccd
 8004744:	400ccccc 	.word	0x400ccccc
 8004748:	d2f1a9fc 	.word	0xd2f1a9fc
 800474c:	3f50624d 	.word	0x3f50624d
 8004750:	2000063c 	.word	0x2000063c
 8004754:	2000002c 	.word	0x2000002c
 8004758:	08016044 	.word	0x08016044
 800475c:	20000680 	.word	0x20000680
 8004760:	20000024 	.word	0x20000024
 8004764:	080160d8 	.word	0x080160d8
 8004768:	20000ff4 	.word	0x20000ff4
 800476c:	20000ff8 	.word	0x20000ff8
 8004770:	20000510 	.word	0x20000510
 8004774:	20000fc0 	.word	0x20000fc0
 8004778:	080160e0 	.word	0x080160e0
 800477c:	080160e8 	.word	0x080160e8
 8004780:	200005e4 	.word	0x200005e4
 8004784:	200003f4 	.word	0x200003f4
 8004788:	48000400 	.word	0x48000400
 800478c:	080160d0 	.word	0x080160d0
 8004790:	20000408 	.word	0x20000408
 8004794:	080160c0 	.word	0x080160c0
 8004798:	080160c8 	.word	0x080160c8
 800479c:	0801604c 	.word	0x0801604c
 80047a0:	20000610 	.word	0x20000610
 80047a4:	080160ac 	.word	0x080160ac
 80047a8:	080160b4 	.word	0x080160b4
 80047ac:	200006b8 	.word	0x200006b8
 80047b0:	080160a0 	.word	0x080160a0
 80047b4:	080160a4 	.word	0x080160a4
				  						ssd1306_SetCursor(32, 32);
 80047b8:	2120      	movs	r1, #32
 80047ba:	4608      	mov	r0, r1
 80047bc:	f7fe fbcc 	bl	8002f58 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "%0.0fmin%0.0fs",floor(pace),floor(sec));
 80047c0:	eeb0 0a49 	vmov.f32	s0, s18
 80047c4:	eef0 0a69 	vmov.f32	s1, s19
 80047c8:	f00f fb0e 	bl	8013de8 <floor>
 80047cc:	ee18 0a10 	vmov	r0, s16
 80047d0:	eeb0 8a40 	vmov.f32	s16, s0
 80047d4:	eef0 8a60 	vmov.f32	s17, s1
 80047d8:	f7fb fe8e 	bl	80004f8 <__aeabi_f2d>
 80047dc:	ec41 0b10 	vmov	d0, r0, r1
 80047e0:	f00f fb02 	bl	8013de8 <floor>
 80047e4:	4aba      	ldr	r2, [pc, #744]	@ (8004ad0 <statemachine+0x1538>)
 80047e6:	48bb      	ldr	r0, [pc, #748]	@ (8004ad4 <statemachine+0x153c>)
				  						ssd1306_WriteString("pace", Font_6x8, White);
 80047e8:	4dbb      	ldr	r5, [pc, #748]	@ (8004ad8 <statemachine+0x1540>)
				  						snprintf((char *)bufferscreen,15, "%0.0fmin%0.0fs",floor(pace),floor(sec));
 80047ea:	ed8d 0b02 	vstr	d0, [sp, #8]
 80047ee:	210f      	movs	r1, #15
 80047f0:	ed8d 8b00 	vstr	d8, [sp]
 80047f4:	f00b fdac 	bl	8010350 <sniprintf>
				  						ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80047f8:	4ab8      	ldr	r2, [pc, #736]	@ (8004adc <statemachine+0x1544>)
 80047fa:	48b6      	ldr	r0, [pc, #728]	@ (8004ad4 <statemachine+0x153c>)
 80047fc:	ca06      	ldmia	r2, {r1, r2}
 80047fe:	2301      	movs	r3, #1
 8004800:	f7fe fb8e 	bl	8002f20 <ssd1306_WriteString>
				  						ssd1306_SetCursor(32, 42);
 8004804:	212a      	movs	r1, #42	@ 0x2a
 8004806:	2020      	movs	r0, #32
 8004808:	f7fe fba6 	bl	8002f58 <ssd1306_SetCursor>
				  						ssd1306_WriteString("pace", Font_6x8, White);
 800480c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004810:	2301      	movs	r3, #1
 8004812:	48b3      	ldr	r0, [pc, #716]	@ (8004ae0 <statemachine+0x1548>)
 8004814:	f7fe fb84 	bl	8002f20 <ssd1306_WriteString>
				  						ssd1306_SetCursor(32, 56);
 8004818:	2138      	movs	r1, #56	@ 0x38
 800481a:	2020      	movs	r0, #32
 800481c:	f7fe fb9c 	bl	8002f58 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "V=%0.1fkmh",vitmax*3.6);
 8004820:	6838      	ldr	r0, [r7, #0]
 8004822:	f7fb fe69 	bl	80004f8 <__aeabi_f2d>
 8004826:	a3a8      	add	r3, pc, #672	@ (adr r3, 8004ac8 <statemachine+0x1530>)
 8004828:	e9d3 2300 	ldrd	r2, r3, [r3]
 800482c:	f7fb febc 	bl	80005a8 <__aeabi_dmul>
 8004830:	4aac      	ldr	r2, [pc, #688]	@ (8004ae4 <statemachine+0x154c>)
 8004832:	e9cd 0100 	strd	r0, r1, [sp]
 8004836:	210f      	movs	r1, #15
 8004838:	48a6      	ldr	r0, [pc, #664]	@ (8004ad4 <statemachine+0x153c>)
 800483a:	f00b fd89 	bl	8010350 <sniprintf>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800483e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004842:	2301      	movs	r3, #1
 8004844:	48a3      	ldr	r0, [pc, #652]	@ (8004ad4 <statemachine+0x153c>)
 8004846:	f7fe fb6b 	bl	8002f20 <ssd1306_WriteString>
				  						batterygauge(vbat,79, 43,1);
 800484a:	4ba7      	ldr	r3, [pc, #668]	@ (8004ae8 <statemachine+0x1550>)
 800484c:	2201      	movs	r2, #1
 800484e:	ed93 0a00 	vldr	s0, [r3]
 8004852:	212b      	movs	r1, #43	@ 0x2b
 8004854:	204f      	movs	r0, #79	@ 0x4f
 8004856:	f7fe fc3b 	bl	80030d0 <batterygauge>
				  					 if(BTN_B>=1){
 800485a:	4ba4      	ldr	r3, [pc, #656]	@ (8004aec <statemachine+0x1554>)
 800485c:	681a      	ldr	r2, [r3, #0]
 800485e:	2a00      	cmp	r2, #0
 8004860:	f77e af80 	ble.w	8003764 <statemachine+0x1cc>
				  								spdstate--;
 8004864:	f898 2000 	ldrb.w	r2, [r8]
 8004868:	3a02      	subs	r2, #2
 800486a:	f888 2000 	strb.w	r2, [r8]
				  								BTN_B=0;
 800486e:	2200      	movs	r2, #0
 8004870:	601a      	str	r2, [r3, #0]
 8004872:	f7fe bf77 	b.w	8003764 <statemachine+0x1cc>
				 					 if(BTN_A>=1){
 8004876:	f8df b2d4 	ldr.w	fp, [pc, #724]	@ 8004b4c <statemachine+0x15b4>
 800487a:	f8db 0000 	ldr.w	r0, [fp]
 800487e:	2800      	cmp	r0, #0
 8004880:	f77f a8e1 	ble.w	8003a46 <statemachine+0x4ae>
				 						 state++;
 8004884:	7820      	ldrb	r0, [r4, #0]
				 									  			 	BTN_A=0;
 8004886:	f8cb 1000 	str.w	r1, [fp]
				 						 state++;
 800488a:	3001      	adds	r0, #1
 800488c:	7020      	strb	r0, [r4, #0]
				 									  			 	BTN_B=0;
 800488e:	6011      	str	r1, [r2, #0]
				 					if(BTN_A_LONG>=1){
 8004890:	f7ff b8d9 	b.w	8003a46 <statemachine+0x4ae>
						 					 if(BTN_A>=1){
 8004894:	f8df b2b4 	ldr.w	fp, [pc, #692]	@ 8004b4c <statemachine+0x15b4>
 8004898:	f8db 1000 	ldr.w	r1, [fp]
 800489c:	2900      	cmp	r1, #0
 800489e:	f77f a8d2 	ble.w	8003a46 <statemachine+0x4ae>
						 						 	state++;
 80048a2:	7821      	ldrb	r1, [r4, #0]
						 							BTN_A=0;
 80048a4:	2000      	movs	r0, #0
						 						 	state++;
 80048a6:	3101      	adds	r1, #1
 80048a8:	7021      	strb	r1, [r4, #0]
						 							BTN_A=0;
 80048aa:	f8cb 0000 	str.w	r0, [fp]
						 							BTN_B=0;
 80048ae:	6010      	str	r0, [r2, #0]
 80048b0:	f7ff b8c9 	b.w	8003a46 <statemachine+0x4ae>
						  if(timecounter%2==0){
 80048b4:	07db      	lsls	r3, r3, #31
 80048b6:	f53f aa5d 	bmi.w	8003d74 <statemachine+0x7dc>
 80048ba:	f7ff ba51 	b.w	8003d60 <statemachine+0x7c8>
							osThreadResume(BALISEHandle);
 80048be:	4a8c      	ldr	r2, [pc, #560]	@ (8004af0 <statemachine+0x1558>)
							BTN_A=0;
 80048c0:	f8df b288 	ldr.w	fp, [pc, #648]	@ 8004b4c <statemachine+0x15b4>
							osThreadResume(BALISEHandle);
 80048c4:	6810      	ldr	r0, [r2, #0]
							balisestate++;
 80048c6:	f898 2000 	ldrb.w	r2, [r8]
							BTN_B_LONG=0;
 80048ca:	601d      	str	r5, [r3, #0]
							BTN_A=0;
 80048cc:	f8cb 5000 	str.w	r5, [fp]
							oldlat=GNSSData.fLat;
 80048d0:	4d88      	ldr	r5, [pc, #544]	@ (8004af4 <statemachine+0x155c>)
 80048d2:	4e89      	ldr	r6, [pc, #548]	@ (8004af8 <statemachine+0x1560>)
							balisestate++;
 80048d4:	3201      	adds	r2, #1
 80048d6:	f888 2000 	strb.w	r2, [r8]
							osThreadResume(BALISEHandle);
 80048da:	f008 fe4b 	bl	800d574 <osThreadResume>
							oldlat=GNSSData.fLat;
 80048de:	f8d5 0090 	ldr.w	r0, [r5, #144]	@ 0x90
 80048e2:	f7fb fe09 	bl	80004f8 <__aeabi_f2d>
 80048e6:	e9c6 0100 	strd	r0, r1, [r6]
							oldlong=GNSSData.fLon;
 80048ea:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 80048ee:	4d83      	ldr	r5, [pc, #524]	@ (8004afc <statemachine+0x1564>)
 80048f0:	f7fb fe02 	bl	80004f8 <__aeabi_f2d>
 80048f4:	e9c5 0100 	strd	r0, r1, [r5]
 80048f8:	f7fe bf96 	b.w	8003828 <statemachine+0x290>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80048fc:	4f80      	ldr	r7, [pc, #512]	@ (8004b00 <statemachine+0x1568>)
				 						erasetime=HAL_GetTick();
 80048fe:	f000 ff31 	bl	8005764 <HAL_GetTick>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004902:	683a      	ldr	r2, [r7, #0]
				 						erasetime=HAL_GetTick();
 8004904:	4b7f      	ldr	r3, [pc, #508]	@ (8004b04 <statemachine+0x156c>)
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004906:	320f      	adds	r2, #15
				 						erasetime=HAL_GetTick();
 8004908:	6018      	str	r0, [r3, #0]
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800490a:	db38      	blt.n	800497e <statemachine+0x13e6>
 800490c:	2600      	movs	r6, #0
				 								percentage((float) 0);
 800490e:	ed9f 8a7e 	vldr	s16, [pc, #504]	@ 8004b08 <statemachine+0x1570>
				 							ssd1306_WriteString("usb",Font_6x8,White);
 8004912:	f8df 923c 	ldr.w	r9, [pc, #572]	@ 8004b50 <statemachine+0x15b8>
				 							SPIF_EraseSector(&hspif1,i);
 8004916:	f8df 81f4 	ldr.w	r8, [pc, #500]	@ 8004b0c <statemachine+0x1574>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800491a:	4634      	mov	r4, r6
				 							ssd1306_Fill(Black);
 800491c:	2000      	movs	r0, #0
 800491e:	f7fe f857 	bl	80029d0 <ssd1306_Fill>
				 							ssd1306_SetCursor(32,32);
 8004922:	2120      	movs	r1, #32
 8004924:	4608      	mov	r0, r1
 8004926:	f7fe fb17 	bl	8002f58 <ssd1306_SetCursor>
				 							ssd1306_WriteString("usb",Font_6x8,White);
 800492a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800492e:	2301      	movs	r3, #1
 8004930:	4648      	mov	r0, r9
 8004932:	f7fe faf5 	bl	8002f20 <ssd1306_WriteString>
				 							SPIF_EraseSector(&hspif1,i);
 8004936:	4621      	mov	r1, r4
 8004938:	4640      	mov	r0, r8
 800493a:	f00a f985 	bl	800ec48 <SPIF_EraseSector>
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 800493e:	ee07 6a90 	vmov	s15, r6
				 								percentage((float) 0);
 8004942:	eeb0 0a48 	vmov.f32	s0, s16
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004946:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				 							if(i>=1){
 800494a:	b394      	cbz	r4, 80049b2 <statemachine+0x141a>
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 800494c:	683b      	ldr	r3, [r7, #0]
 800494e:	2b00      	cmp	r3, #0
 8004950:	bfb8      	it	lt
 8004952:	330f      	addlt	r3, #15
 8004954:	111b      	asrs	r3, r3, #4
 8004956:	ee07 3a10 	vmov	s14, r3
 800495a:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800495e:	3401      	adds	r4, #1
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004960:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8004964:	f7fe fd0c 	bl	8003380 <percentage>
				 							ssd1306_UpdateScreen();
 8004968:	f7fe f83e 	bl	80029e8 <ssd1306_UpdateScreen>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800496c:	683b      	ldr	r3, [r7, #0]
 800496e:	2b00      	cmp	r3, #0
 8004970:	bfb8      	it	lt
 8004972:	330f      	addlt	r3, #15
 8004974:	ebb4 1f23 	cmp.w	r4, r3, asr #4
 8004978:	f106 0664 	add.w	r6, r6, #100	@ 0x64
 800497c:	ddce      	ble.n	800491c <statemachine+0x1384>
				 						SPIF_EraseSector(&hspif1, (int)floor((MAX_WRITE_PAGE+1)/16));
 800497e:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
 8004982:	4862      	ldr	r0, [pc, #392]	@ (8004b0c <statemachine+0x1574>)
 8004984:	f00a f960 	bl	800ec48 <SPIF_EraseSector>
				 						erasetime=HAL_GetTick()-erasetime;
 8004988:	f000 feec 	bl	8005764 <HAL_GetTick>
 800498c:	4b5d      	ldr	r3, [pc, #372]	@ (8004b04 <statemachine+0x156c>)
				 						pageoffset=0;
 800498e:	4960      	ldr	r1, [pc, #384]	@ (8004b10 <statemachine+0x1578>)
				 						erasetime=HAL_GetTick()-erasetime;
 8004990:	681a      	ldr	r2, [r3, #0]
 8004992:	1a82      	subs	r2, r0, r2
				 						pageoffset=0;
 8004994:	2400      	movs	r4, #0
				 						erasetime=HAL_GetTick()-erasetime;
 8004996:	601a      	str	r2, [r3, #0]
				 						erasedisplay=1;
 8004998:	2201      	movs	r2, #1
 800499a:	f8ca 2000 	str.w	r2, [sl]
				 						pageoffset=0;
 800499e:	600c      	str	r4, [r1, #0]
				 						pagenumber=0;
 80049a0:	603c      	str	r4, [r7, #0]
				 						storeindex();
 80049a2:	f7fd fe3f 	bl	8002624 <storeindex>
				 						BTN_B=0;
 80049a6:	4a51      	ldr	r2, [pc, #324]	@ (8004aec <statemachine+0x1554>)
				 						BTN_A=0;
 80049a8:	f8cb 4000 	str.w	r4, [fp]
				 						BTN_B=0;
 80049ac:	6014      	str	r4, [r2, #0]
				 					if(BTN_B>=1){
 80049ae:	f7fe be7a 	b.w	80036a6 <statemachine+0x10e>
				 								percentage((float) 0);
 80049b2:	f7fe fce5 	bl	8003380 <percentage>
				 							ssd1306_UpdateScreen();
 80049b6:	f7fe f817 	bl	80029e8 <ssd1306_UpdateScreen>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80049ba:	683b      	ldr	r3, [r7, #0]
 80049bc:	2b0f      	cmp	r3, #15
 80049be:	f04f 0401 	mov.w	r4, #1
 80049c2:	f106 0664 	add.w	r6, r6, #100	@ 0x64
 80049c6:	dca9      	bgt.n	800491c <statemachine+0x1384>
 80049c8:	e7d9      	b.n	800497e <statemachine+0x13e6>
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 80049ca:	4a48      	ldr	r2, [pc, #288]	@ (8004aec <statemachine+0x1554>)
 80049cc:	4d51      	ldr	r5, [pc, #324]	@ (8004b14 <statemachine+0x157c>)
 80049ce:	6811      	ldr	r1, [r2, #0]
 80049d0:	6828      	ldr	r0, [r5, #0]
 80049d2:	2900      	cmp	r1, #0
 80049d4:	f340 810b 	ble.w	8004bee <statemachine+0x1656>
							 time50kmh=0.0;
 80049d8:	2100      	movs	r1, #0
							 time100kmh=0.0;
 80049da:	6031      	str	r1, [r6, #0]
							 flag_50kmh=0;
 80049dc:	4b4e      	ldr	r3, [pc, #312]	@ (8004b18 <statemachine+0x1580>)
							 flag_100kmh=0;
 80049de:	4e4f      	ldr	r6, [pc, #316]	@ (8004b1c <statemachine+0x1584>)
							 time50kmh=0.0;
 80049e0:	f8c8 1000 	str.w	r1, [r8]
							 flag_50kmh=0;
 80049e4:	2100      	movs	r1, #0
		 					if(BTN_A_LONG>=1){
 80049e6:	4288      	cmp	r0, r1
							 flag_50kmh=0;
 80049e8:	6019      	str	r1, [r3, #0]
							 flag_100kmh=0;
 80049ea:	6031      	str	r1, [r6, #0]
							 accelstate=WAITFORGPS;
 80049ec:	7039      	strb	r1, [r7, #0]
			 								state--;
 80049ee:	bfc8      	it	gt
 80049f0:	7821      	ldrbgt	r1, [r4, #0]
		 					if(BTN_A_LONG>=1){
 80049f2:	f73f a946 	bgt.w	8003c82 <statemachine+0x6ea>
		 						BTN_B=0;
 80049f6:	6011      	str	r1, [r2, #0]
return ;
 80049f8:	f7fe be55 	b.w	80036a6 <statemachine+0x10e>
						  if(BTN_A>=1){
 80049fc:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8004b4c <statemachine+0x15b4>
						  timecounter++;
 8004a00:	682a      	ldr	r2, [r5, #0]
						  if(BTN_A>=1){
 8004a02:	f8db 1000 	ldr.w	r1, [fp]
						  timecounter++;
 8004a06:	3201      	adds	r2, #1
						  if(BTN_A>=1){
 8004a08:	2900      	cmp	r1, #0
						  timecounter++;
 8004a0a:	602a      	str	r2, [r5, #0]
						  if(BTN_A>=1){
 8004a0c:	f73f a9d6 	bgt.w	8003dbc <statemachine+0x824>
 8004a10:	f7fe be3c 	b.w	800368c <statemachine+0xf4>
							  snprintf((char *)bufferscreen,15, "%d",3-counterforstart);
 8004a14:	4c42      	ldr	r4, [pc, #264]	@ (8004b20 <statemachine+0x1588>)
							  ssd1306_SetCursor(56,40);
 8004a16:	2038      	movs	r0, #56	@ 0x38
 8004a18:	f7fe fa9e 	bl	8002f58 <ssd1306_SetCursor>
							  snprintf((char *)bufferscreen,15, "%d",3-counterforstart);
 8004a1c:	6823      	ldr	r3, [r4, #0]
 8004a1e:	4a41      	ldr	r2, [pc, #260]	@ (8004b24 <statemachine+0x158c>)
 8004a20:	482c      	ldr	r0, [pc, #176]	@ (8004ad4 <statemachine+0x153c>)
 8004a22:	210f      	movs	r1, #15
 8004a24:	f1c3 0303 	rsb	r3, r3, #3
 8004a28:	f00b fc92 	bl	8010350 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 8004a2c:	4a3e      	ldr	r2, [pc, #248]	@ (8004b28 <statemachine+0x1590>)
 8004a2e:	4829      	ldr	r0, [pc, #164]	@ (8004ad4 <statemachine+0x153c>)
 8004a30:	2301      	movs	r3, #1
 8004a32:	ca06      	ldmia	r2, {r1, r2}
 8004a34:	f7fe fa74 	bl	8002f20 <ssd1306_WriteString>
							  if(counterforstart==3){
 8004a38:	6823      	ldr	r3, [r4, #0]
 8004a3a:	2b03      	cmp	r3, #3
 8004a3c:	f000 8105 	beq.w	8004c4a <statemachine+0x16b2>
 8004a40:	4d3a      	ldr	r5, [pc, #232]	@ (8004b2c <statemachine+0x1594>)
							  indexcounterforstart++;
 8004a42:	682b      	ldr	r3, [r5, #0]
 8004a44:	493a      	ldr	r1, [pc, #232]	@ (8004b30 <statemachine+0x1598>)
 8004a46:	4a3b      	ldr	r2, [pc, #236]	@ (8004b34 <statemachine+0x159c>)
 8004a48:	3301      	adds	r3, #1
 8004a4a:	fb01 2203 	mla	r2, r1, r3, r2
							  if(indexcounterforstart%10==0){
 8004a4e:	493a      	ldr	r1, [pc, #232]	@ (8004b38 <statemachine+0x15a0>)
							  indexcounterforstart++;
 8004a50:	602b      	str	r3, [r5, #0]
							  if(indexcounterforstart%10==0){
 8004a52:	ebb1 0f72 	cmp.w	r1, r2, ror #1
 8004a56:	f67e ae26 	bls.w	80036a6 <statemachine+0x10e>
								  counterforstart++;
 8004a5a:	6823      	ldr	r3, [r4, #0]
 8004a5c:	3301      	adds	r3, #1
 8004a5e:	6023      	str	r3, [r4, #0]
 8004a60:	f7fe be21 	b.w	80036a6 <statemachine+0x10e>
				 					ssd1306_WriteString("push A",Font_6x8,White);
 8004a64:	4d1c      	ldr	r5, [pc, #112]	@ (8004ad8 <statemachine+0x1540>)
				 					if(BTN_A>=1){
 8004a66:	f8df b0e4 	ldr.w	fp, [pc, #228]	@ 8004b4c <statemachine+0x15b4>
				 					ssd1306_Fill(Black);
 8004a6a:	f7fd ffb1 	bl	80029d0 <ssd1306_Fill>
				 					ssd1306_SetCursor(32,40);
 8004a6e:	2128      	movs	r1, #40	@ 0x28
 8004a70:	2020      	movs	r0, #32
 8004a72:	f7fe fa71 	bl	8002f58 <ssd1306_SetCursor>
				 					ssd1306_WriteString("push A",Font_6x8,White);
 8004a76:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004a7a:	2301      	movs	r3, #1
 8004a7c:	482f      	ldr	r0, [pc, #188]	@ (8004b3c <statemachine+0x15a4>)
 8004a7e:	f7fe fa4f 	bl	8002f20 <ssd1306_WriteString>
				 					ssd1306_SetCursor(32,32);
 8004a82:	2120      	movs	r1, #32
 8004a84:	4608      	mov	r0, r1
 8004a86:	f7fe fa67 	bl	8002f58 <ssd1306_SetCursor>
				 					ssd1306_WriteString("write",Font_6x8,White);
 8004a8a:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004a8e:	482c      	ldr	r0, [pc, #176]	@ (8004b40 <statemachine+0x15a8>)
 8004a90:	2301      	movs	r3, #1
 8004a92:	f7fe fa45 	bl	8002f20 <ssd1306_WriteString>
				 					if(BTN_A>=1){
 8004a96:	f8db 2000 	ldr.w	r2, [fp]
 8004a9a:	2a00      	cmp	r2, #0
 8004a9c:	f77e ae03 	ble.w	80036a6 <statemachine+0x10e>
				 					if(usbtransmiten==0){
 8004aa0:	6822      	ldr	r2, [r4, #0]
 8004aa2:	2a00      	cmp	r2, #0
 8004aa4:	f47f a80a 	bne.w	8003abc <statemachine+0x524>
				 						osThreadResume(USBTRANSMITHandle);
 8004aa8:	4826      	ldr	r0, [pc, #152]	@ (8004b44 <statemachine+0x15ac>)
				 						usbtransmitstate=STATE_UNDER16PAGES1;
 8004aaa:	4927      	ldr	r1, [pc, #156]	@ (8004b48 <statemachine+0x15b0>)
				 						osThreadResume(USBTRANSMITHandle);
 8004aac:	6800      	ldr	r0, [r0, #0]
				 						usbtransmitstate=STATE_UNDER16PAGES1;
 8004aae:	700a      	strb	r2, [r1, #0]
				 						osThreadResume(USBTRANSMITHandle);
 8004ab0:	f008 fd60 	bl	800d574 <osThreadResume>
				 					usbtransmiten=1;
 8004ab4:	2201      	movs	r2, #1
 8004ab6:	6022      	str	r2, [r4, #0]
 8004ab8:	f7ff b800 	b.w	8003abc <statemachine+0x524>
 8004abc:	4e0d      	ldr	r6, [pc, #52]	@ (8004af4 <statemachine+0x155c>)
 8004abe:	4c0a      	ldr	r4, [pc, #40]	@ (8004ae8 <statemachine+0x1550>)
 8004ac0:	e541      	b.n	8004546 <statemachine+0xfae>
 8004ac2:	bf00      	nop
 8004ac4:	f3af 8000 	nop.w
 8004ac8:	cccccccd 	.word	0xcccccccd
 8004acc:	400ccccc 	.word	0x400ccccc
 8004ad0:	08016060 	.word	0x08016060
 8004ad4:	20000680 	.word	0x20000680
 8004ad8:	2000002c 	.word	0x2000002c
 8004adc:	20000024 	.word	0x20000024
 8004ae0:	08016070 	.word	0x08016070
 8004ae4:	08016078 	.word	0x08016078
 8004ae8:	20000fc0 	.word	0x20000fc0
 8004aec:	20000ff4 	.word	0x20000ff4
 8004af0:	200003f4 	.word	0x200003f4
 8004af4:	20000510 	.word	0x20000510
 8004af8:	20000608 	.word	0x20000608
 8004afc:	20000600 	.word	0x20000600
 8004b00:	200006b8 	.word	0x200006b8
 8004b04:	20000620 	.word	0x20000620
 8004b08:	00000000 	.word	0x00000000
 8004b0c:	20000fd4 	.word	0x20000fd4
 8004b10:	200006bc 	.word	0x200006bc
 8004b14:	200005e0 	.word	0x200005e0
 8004b18:	20001544 	.word	0x20001544
 8004b1c:	20001540 	.word	0x20001540
 8004b20:	2000154c 	.word	0x2000154c
 8004b24:	080160a0 	.word	0x080160a0
 8004b28:	2000001c 	.word	0x2000001c
 8004b2c:	20001548 	.word	0x20001548
 8004b30:	cccccccd 	.word	0xcccccccd
 8004b34:	19999998 	.word	0x19999998
 8004b38:	19999999 	.word	0x19999999
 8004b3c:	08016230 	.word	0x08016230
 8004b40:	08016238 	.word	0x08016238
 8004b44:	200003f0 	.word	0x200003f0
 8004b48:	200017f8 	.word	0x200017f8
 8004b4c:	20000ff8 	.word	0x20000ff8
 8004b50:	08016200 	.word	0x08016200
			  							HR=GNSSData.hour;
 8004b54:	4a4a      	ldr	r2, [pc, #296]	@ (8004c80 <statemachine+0x16e8>)
 8004b56:	4e4b      	ldr	r6, [pc, #300]	@ (8004c84 <statemachine+0x16ec>)
			  							MINUTE=GNSSData.min;
 8004b58:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 8004cbc <statemachine+0x1724>
			  							SEC=GNSSData.sec;
 8004b5c:	4f4a      	ldr	r7, [pc, #296]	@ (8004c88 <statemachine+0x16f0>)
			  							HR=GNSSData.hour;
 8004b5e:	f892 0074 	ldrb.w	r0, [r2, #116]	@ 0x74
 8004b62:	7030      	strb	r0, [r6, #0]
			  							settimeen=1;
 8004b64:	2101      	movs	r1, #1
 8004b66:	6019      	str	r1, [r3, #0]
			  							MINUTE=GNSSData.min;
 8004b68:	f892 1075 	ldrb.w	r1, [r2, #117]	@ 0x75
			  							SEC=GNSSData.sec;
 8004b6c:	f892 2076 	ldrb.w	r2, [r2, #118]	@ 0x76
			  							MINUTE=GNSSData.min;
 8004b70:	f888 1000 	strb.w	r1, [r8]
			  							SEC=GNSSData.sec;
 8004b74:	703a      	strb	r2, [r7, #0]
			  							set_time (HR, MINUTE, SEC);
 8004b76:	f7fd fc13 	bl	80023a0 <set_time>
 8004b7a:	f7ff b98f 	b.w	8003e9c <statemachine+0x904>
					 					 ssd1306_Fill(Black);
 8004b7e:	2000      	movs	r0, #0
 8004b80:	f7fd ff26 	bl	80029d0 <ssd1306_Fill>
					 					 ssd1306_SetCursor(32,32);
 8004b84:	2120      	movs	r1, #32
 8004b86:	4608      	mov	r0, r1
 8004b88:	f7fe f9e6 	bl	8002f58 <ssd1306_SetCursor>
					 					ssd1306_WriteString("usb",Font_6x8,White);
 8004b8c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004b90:	4623      	mov	r3, r4
 8004b92:	483e      	ldr	r0, [pc, #248]	@ (8004c8c <statemachine+0x16f4>)
 8004b94:	f7fe f9c4 	bl	8002f20 <ssd1306_WriteString>
					 					ssd1306_SetCursor(32,42);
 8004b98:	212a      	movs	r1, #42	@ 0x2a
 8004b9a:	2020      	movs	r0, #32
 8004b9c:	f7fe f9dc 	bl	8002f58 <ssd1306_SetCursor>
					 					ssd1306_WriteString("FIN",Font_7x10,White);
 8004ba0:	4b3b      	ldr	r3, [pc, #236]	@ (8004c90 <statemachine+0x16f8>)
 8004ba2:	483c      	ldr	r0, [pc, #240]	@ (8004c94 <statemachine+0x16fc>)
 8004ba4:	e893 0006 	ldmia.w	r3, {r1, r2}
 8004ba8:	4623      	mov	r3, r4
 8004baa:	f7fe f9b9 	bl	8002f20 <ssd1306_WriteString>
					 					ssd1306_SetCursor(32,56);
 8004bae:	2138      	movs	r1, #56	@ 0x38
 8004bb0:	2020      	movs	r0, #32
 8004bb2:	f7fe f9d1 	bl	8002f58 <ssd1306_SetCursor>
				 						snprintf((char  *)bufferscreen,50,"t=%0.2f",(float)erasetime/1000);
 8004bb6:	4b38      	ldr	r3, [pc, #224]	@ (8004c98 <statemachine+0x1700>)
 8004bb8:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8004c9c <statemachine+0x1704>
 8004bbc:	edd3 7a00 	vldr	s15, [r3]
 8004bc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bc4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004bc8:	ee17 0a90 	vmov	r0, s15
 8004bcc:	f7fb fc94 	bl	80004f8 <__aeabi_f2d>
 8004bd0:	4a33      	ldr	r2, [pc, #204]	@ (8004ca0 <statemachine+0x1708>)
 8004bd2:	e9cd 0100 	strd	r0, r1, [sp]
 8004bd6:	2132      	movs	r1, #50	@ 0x32
 8004bd8:	4832      	ldr	r0, [pc, #200]	@ (8004ca4 <statemachine+0x170c>)
 8004bda:	f00b fbb9 	bl	8010350 <sniprintf>
				 						ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004bde:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004be2:	4623      	mov	r3, r4
 8004be4:	482f      	ldr	r0, [pc, #188]	@ (8004ca4 <statemachine+0x170c>)
 8004be6:	f7fe f99b 	bl	8002f20 <ssd1306_WriteString>
 8004bea:	f7fe bf94 	b.w	8003b16 <statemachine+0x57e>
						 if((BTN_A>=1)||(BTN_B>=1)||(BTN_A_LONG>=1)){
 8004bee:	2800      	cmp	r0, #0
 8004bf0:	f77e ad59 	ble.w	80036a6 <statemachine+0x10e>
							 time50kmh=0.0;
 8004bf4:	2100      	movs	r1, #0
							 time100kmh=0.0;
 8004bf6:	6031      	str	r1, [r6, #0]
							 flag_100kmh=0;
 8004bf8:	482b      	ldr	r0, [pc, #172]	@ (8004ca8 <statemachine+0x1710>)
							 flag_50kmh=0;
 8004bfa:	4e2c      	ldr	r6, [pc, #176]	@ (8004cac <statemachine+0x1714>)
							 time50kmh=0.0;
 8004bfc:	f8c8 1000 	str.w	r1, [r8]
							 flag_50kmh=0;
 8004c00:	2100      	movs	r1, #0
 8004c02:	6031      	str	r1, [r6, #0]
							 flag_100kmh=0;
 8004c04:	6001      	str	r1, [r0, #0]
							 accelstate=WAITFORGPS;
 8004c06:	7039      	strb	r1, [r7, #0]
			 								state--;
 8004c08:	7821      	ldrb	r1, [r4, #0]
 8004c0a:	f7ff b83a 	b.w	8003c82 <statemachine+0x6ea>
							  time100kmh=(float)(htim16.Instance->CNT/1000.0);
 8004c0e:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8004cc0 <statemachine+0x1728>
 8004c12:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8004cc4 <statemachine+0x172c>
 8004c16:	f8d8 3000 	ldr.w	r3, [r8]
 8004c1a:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8004c1c:	f7fb fc4a 	bl	80004b4 <__aeabi_ui2d>
 8004c20:	a315      	add	r3, pc, #84	@ (adr r3, 8004c78 <statemachine+0x16e0>)
 8004c22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c26:	f7fb fcbf 	bl	80005a8 <__aeabi_dmul>
 8004c2a:	f7fb ffb5 	bl	8000b98 <__aeabi_d2f>
							  flag_100kmh=1;
 8004c2e:	2301      	movs	r3, #1
							  time100kmh=(float)(htim16.Instance->CNT/1000.0);
 8004c30:	f8c9 0000 	str.w	r0, [r9]
							  flag_100kmh=1;
 8004c34:	602b      	str	r3, [r5, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8004c36:	4640      	mov	r0, r8
							  accelstate++;
 8004c38:	2304      	movs	r3, #4
 8004c3a:	703b      	strb	r3, [r7, #0]
							  HAL_TIM_Base_Stop(&htim16);
 8004c3c:	f005 fe4a 	bl	800a8d4 <HAL_TIM_Base_Stop>
							  htim16.Instance->CNT=0;
 8004c40:	f8d8 3000 	ldr.w	r3, [r8]
 8004c44:	625c      	str	r4, [r3, #36]	@ 0x24
 8004c46:	f7ff b856 	b.w	8003cf6 <statemachine+0x75e>
							  				accelstate++;
 8004c4a:	783b      	ldrb	r3, [r7, #0]
							  				HAL_TIM_Base_Start(&htim16);
 8004c4c:	f8df 8070 	ldr.w	r8, [pc, #112]	@ 8004cc0 <statemachine+0x1728>
							  				indexcounterforstart=0;
 8004c50:	4d17      	ldr	r5, [pc, #92]	@ (8004cb0 <statemachine+0x1718>)
							  				counterforstart=0;
 8004c52:	2600      	movs	r6, #0
							  				accelstate++;
 8004c54:	3301      	adds	r3, #1
							  				HAL_TIM_Base_Start(&htim16);
 8004c56:	4640      	mov	r0, r8
							  				accelstate++;
 8004c58:	703b      	strb	r3, [r7, #0]
							  				counterforstart=0;
 8004c5a:	6026      	str	r6, [r4, #0]
							  				indexcounterforstart=0;
 8004c5c:	602e      	str	r6, [r5, #0]
							  				HAL_TIM_Base_Start(&htim16);
 8004c5e:	f005 fe15 	bl	800a88c <HAL_TIM_Base_Start>
							  				htim16.Instance->CNT=0;
 8004c62:	f8d8 3000 	ldr.w	r3, [r8]
 8004c66:	625e      	str	r6, [r3, #36]	@ 0x24
 8004c68:	e6eb      	b.n	8004a42 <statemachine+0x14aa>
 8004c6a:	4e05      	ldr	r6, [pc, #20]	@ (8004c80 <statemachine+0x16e8>)
 8004c6c:	4d11      	ldr	r5, [pc, #68]	@ (8004cb4 <statemachine+0x171c>)
 8004c6e:	4c12      	ldr	r4, [pc, #72]	@ (8004cb8 <statemachine+0x1720>)
 8004c70:	e469      	b.n	8004546 <statemachine+0xfae>
 8004c72:	bf00      	nop
 8004c74:	f3af 8000 	nop.w
 8004c78:	d2f1a9fc 	.word	0xd2f1a9fc
 8004c7c:	3f50624d 	.word	0x3f50624d
 8004c80:	20000510 	.word	0x20000510
 8004c84:	200005fd 	.word	0x200005fd
 8004c88:	200005fe 	.word	0x200005fe
 8004c8c:	08016200 	.word	0x08016200
 8004c90:	20000024 	.word	0x20000024
 8004c94:	08016224 	.word	0x08016224
 8004c98:	20000620 	.word	0x20000620
 8004c9c:	3a83126f 	.word	0x3a83126f
 8004ca0:	08016228 	.word	0x08016228
 8004ca4:	20000680 	.word	0x20000680
 8004ca8:	20001540 	.word	0x20001540
 8004cac:	20001544 	.word	0x20001544
 8004cb0:	20001548 	.word	0x20001548
 8004cb4:	2000002c 	.word	0x2000002c
 8004cb8:	20000fc0 	.word	0x20000fc0
 8004cbc:	200005fc 	.word	0x200005fc
 8004cc0:	200015f8 	.word	0x200015f8
 8004cc4:	20001538 	.word	0x20001538

08004cc8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004cc8:	b500      	push	{lr}
  SET_BIT(RCC->AHB3ENR, Periphs);
 8004cca:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8004cce:	b083      	sub	sp, #12
 8004cd0:	6d18      	ldr	r0, [r3, #80]	@ 0x50
 8004cd2:	f440 2000 	orr.w	r0, r0, #524288	@ 0x80000
 8004cd6:	6518      	str	r0, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 8004cd8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004cda:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004cde:	9301      	str	r3, [sp, #4]

  __HAL_RCC_HSEM_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8004ce0:	2200      	movs	r2, #0
 8004ce2:	210f      	movs	r1, #15
 8004ce4:	f06f 0001 	mvn.w	r0, #1
  (void)tmpreg;
 8004ce8:	9b01      	ldr	r3, [sp, #4]
 8004cea:	f001 f97d 	bl	8005fe8 <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* HSEM_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(HSEM_IRQn, 5, 0);
 8004cee:	2200      	movs	r2, #0
 8004cf0:	2105      	movs	r1, #5
 8004cf2:	202e      	movs	r0, #46	@ 0x2e
 8004cf4:	f001 f978 	bl	8005fe8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(HSEM_IRQn);
 8004cf8:	202e      	movs	r0, #46	@ 0x2e

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8004cfa:	b003      	add	sp, #12
 8004cfc:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_NVIC_EnableIRQ(HSEM_IRQn);
 8004d00:	f001 b9ae 	b.w	8006060 <HAL_NVIC_EnableIRQ>

08004d04 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004d04:	b570      	push	{r4, r5, r6, lr}
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status = HAL_OK;

  /*Configure the TIM1 IRQ priority */
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8004d06:	4601      	mov	r1, r0
{
 8004d08:	b08a      	sub	sp, #40	@ 0x28
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8004d0a:	2200      	movs	r2, #0
{
 8004d0c:	4606      	mov	r6, r0
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8004d0e:	2019      	movs	r0, #25
 8004d10:	f001 f96a 	bl	8005fe8 <HAL_NVIC_SetPriority>
  /* Enable the TIM1 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8004d14:	2019      	movs	r0, #25
 8004d16:	f001 f9a3 	bl	8006060 <HAL_NVIC_EnableIRQ>
  SET_BIT(RCC->APB2ENR, Periphs);
 8004d1a:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000

  /* Enable TIM1 clock */
  __HAL_RCC_TIM1_CLK_ENABLE();

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8004d1e:	a901      	add	r1, sp, #4
 8004d20:	6e1a      	ldr	r2, [r3, #96]	@ 0x60

  /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM1 */
  htim1.Instance = TIM1;
 8004d22:	4c1c      	ldr	r4, [pc, #112]	@ (8004d94 <HAL_InitTick+0x90>)
 8004d24:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004d28:	661a      	str	r2, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8004d2a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004d2c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8004d30:	a803      	add	r0, sp, #12
 8004d32:	9302      	str	r3, [sp, #8]
  (void)tmpreg;
 8004d34:	9b02      	ldr	r3, [sp, #8]
 8004d36:	f004 f943 	bl	8008fc0 <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK2Freq();
 8004d3a:	f004 f8ff 	bl	8008f3c <HAL_RCC_GetPCLK2Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004d3e:	4a16      	ldr	r2, [pc, #88]	@ (8004d98 <HAL_InitTick+0x94>)
  htim1.Instance = TIM1;
 8004d40:	4916      	ldr	r1, [pc, #88]	@ (8004d9c <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004d42:	fba2 2300 	umull	r2, r3, r2, r0
 8004d46:	0c9b      	lsrs	r3, r3, #18
 8004d48:	3b01      	subs	r3, #1
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim1.Init.Period = (1000000U / 1000U) - 1U;
  htim1.Init.Prescaler = uwPrescalerValue;
  htim1.Init.ClockDivision = 0;
 8004d4a:	2200      	movs	r2, #0
  htim1.Init.Prescaler = uwPrescalerValue;
 8004d4c:	e9c4 1300 	strd	r1, r3, [r4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim1);
 8004d50:	4620      	mov	r0, r4
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8004d52:	f240 33e7 	movw	r3, #999	@ 0x3e7
  htim1.Init.ClockDivision = 0;
 8004d56:	6122      	str	r2, [r4, #16]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004d58:	60a2      	str	r2, [r4, #8]
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8004d5a:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim1);
 8004d5c:	f005 fd28 	bl	800a7b0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8004d60:	4605      	mov	r5, r0
 8004d62:	b110      	cbz	r0, 8004d6a <HAL_InitTick+0x66>
    }
  }

 /* Return function status */
  return status;
}
 8004d64:	4628      	mov	r0, r5
 8004d66:	b00a      	add	sp, #40	@ 0x28
 8004d68:	bd70      	pop	{r4, r5, r6, pc}
    status = HAL_TIM_Base_Start_IT(&htim1);
 8004d6a:	4620      	mov	r0, r4
 8004d6c:	f005 fdc8 	bl	800a900 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8004d70:	4605      	mov	r5, r0
 8004d72:	2800      	cmp	r0, #0
 8004d74:	d1f6      	bne.n	8004d64 <HAL_InitTick+0x60>
        HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8004d76:	2019      	movs	r0, #25
 8004d78:	f001 f972 	bl	8006060 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8004d7c:	2e0f      	cmp	r6, #15
 8004d7e:	d901      	bls.n	8004d84 <HAL_InitTick+0x80>
        status = HAL_ERROR;
 8004d80:	2501      	movs	r5, #1
 8004d82:	e7ef      	b.n	8004d64 <HAL_InitTick+0x60>
        HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority, 0U);
 8004d84:	462a      	mov	r2, r5
 8004d86:	4631      	mov	r1, r6
 8004d88:	2019      	movs	r0, #25
 8004d8a:	f001 f92d 	bl	8005fe8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8004d8e:	4b04      	ldr	r3, [pc, #16]	@ (8004da0 <HAL_InitTick+0x9c>)
 8004d90:	601e      	str	r6, [r3, #0]
 8004d92:	e7e7      	b.n	8004d64 <HAL_InitTick+0x60>
 8004d94:	20001554 	.word	0x20001554
 8004d98:	431bde83 	.word	0x431bde83
 8004d9c:	40012c00 	.word	0x40012c00
 8004da0:	2000003c 	.word	0x2000003c

08004da4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004da4:	b508      	push	{r3, lr}
 8004da6:	4c07      	ldr	r4, [pc, #28]	@ (8004dc4 <NMI_Handler+0x20>)
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
  {
	   ssd1306_SetCursor(32, 20);
	   	  ssd1306_WriteString("NMI", Font_7x10, White);
 8004da8:	4d07      	ldr	r5, [pc, #28]	@ (8004dc8 <NMI_Handler+0x24>)
	   ssd1306_SetCursor(32, 20);
 8004daa:	2114      	movs	r1, #20
 8004dac:	2020      	movs	r0, #32
 8004dae:	f7fe f8d3 	bl	8002f58 <ssd1306_SetCursor>
	   	  ssd1306_WriteString("NMI", Font_7x10, White);
 8004db2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004db6:	2301      	movs	r3, #1
 8004db8:	4628      	mov	r0, r5
 8004dba:	f7fe f8b1 	bl	8002f20 <ssd1306_WriteString>
	   	  ssd1306_UpdateScreen();
 8004dbe:	f7fd fe13 	bl	80029e8 <ssd1306_UpdateScreen>
   while (1)
 8004dc2:	e7f2      	b.n	8004daa <NMI_Handler+0x6>
 8004dc4:	20000024 	.word	0x20000024
 8004dc8:	0801628c 	.word	0x0801628c

08004dcc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004dcc:	b508      	push	{r3, lr}
 8004dce:	4c07      	ldr	r4, [pc, #28]	@ (8004dec <HardFault_Handler+0x20>)
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  ssd1306_WriteString("hardfault", Font_7x10, White);
 8004dd0:	4d07      	ldr	r5, [pc, #28]	@ (8004df0 <HardFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004dd2:	2114      	movs	r1, #20
 8004dd4:	2020      	movs	r0, #32
 8004dd6:	f7fe f8bf 	bl	8002f58 <ssd1306_SetCursor>
	  ssd1306_WriteString("hardfault", Font_7x10, White);
 8004dda:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004dde:	2301      	movs	r3, #1
 8004de0:	4628      	mov	r0, r5
 8004de2:	f7fe f89d 	bl	8002f20 <ssd1306_WriteString>
	  ssd1306_UpdateScreen();
 8004de6:	f7fd fdff 	bl	80029e8 <ssd1306_UpdateScreen>
  while (1)
 8004dea:	e7f2      	b.n	8004dd2 <HardFault_Handler+0x6>
 8004dec:	20000024 	.word	0x20000024
 8004df0:	08016290 	.word	0x08016290

08004df4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004df4:	b508      	push	{r3, lr}
 8004df6:	4c07      	ldr	r4, [pc, #28]	@ (8004e14 <MemManage_Handler+0x20>)
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("mem", Font_7x10, White);
 8004df8:	4d07      	ldr	r5, [pc, #28]	@ (8004e18 <MemManage_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004dfa:	2114      	movs	r1, #20
 8004dfc:	2020      	movs	r0, #32
 8004dfe:	f7fe f8ab 	bl	8002f58 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("mem", Font_7x10, White);
 8004e02:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004e06:	2301      	movs	r3, #1
 8004e08:	4628      	mov	r0, r5
 8004e0a:	f7fe f889 	bl	8002f20 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004e0e:	f7fd fdeb 	bl	80029e8 <ssd1306_UpdateScreen>
  while (1)
 8004e12:	e7f2      	b.n	8004dfa <MemManage_Handler+0x6>
 8004e14:	20000024 	.word	0x20000024
 8004e18:	0801629c 	.word	0x0801629c

08004e1c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004e1c:	b508      	push	{r3, lr}
 8004e1e:	4c07      	ldr	r4, [pc, #28]	@ (8004e3c <BusFault_Handler+0x20>)
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_BusFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("bus", Font_7x10, White);
 8004e20:	4d07      	ldr	r5, [pc, #28]	@ (8004e40 <BusFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004e22:	2114      	movs	r1, #20
 8004e24:	2020      	movs	r0, #32
 8004e26:	f7fe f897 	bl	8002f58 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("bus", Font_7x10, White);
 8004e2a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004e2e:	2301      	movs	r3, #1
 8004e30:	4628      	mov	r0, r5
 8004e32:	f7fe f875 	bl	8002f20 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004e36:	f7fd fdd7 	bl	80029e8 <ssd1306_UpdateScreen>
  while (1)
 8004e3a:	e7f2      	b.n	8004e22 <BusFault_Handler+0x6>
 8004e3c:	20000024 	.word	0x20000024
 8004e40:	080162a0 	.word	0x080162a0

08004e44 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004e44:	b508      	push	{r3, lr}
 8004e46:	4c07      	ldr	r4, [pc, #28]	@ (8004e64 <UsageFault_Handler+0x20>)
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("usage", Font_7x10, White);
 8004e48:	4d07      	ldr	r5, [pc, #28]	@ (8004e68 <UsageFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004e4a:	2114      	movs	r1, #20
 8004e4c:	2020      	movs	r0, #32
 8004e4e:	f7fe f883 	bl	8002f58 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("usage", Font_7x10, White);
 8004e52:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004e56:	2301      	movs	r3, #1
 8004e58:	4628      	mov	r0, r5
 8004e5a:	f7fe f861 	bl	8002f20 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004e5e:	f7fd fdc3 	bl	80029e8 <ssd1306_UpdateScreen>
  while (1)
 8004e62:	e7f2      	b.n	8004e4a <UsageFault_Handler+0x6>
 8004e64:	20000024 	.word	0x20000024
 8004e68:	080162a4 	.word	0x080162a4

08004e6c <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004e6c:	4770      	bx	lr
 8004e6e:	bf00      	nop

08004e70 <RTC_WKUP_IRQHandler>:
void RTC_WKUP_IRQHandler(void)
{
  /* USER CODE BEGIN RTC_WKUP_IRQn 0 */

  /* USER CODE END RTC_WKUP_IRQn 0 */
  HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 8004e70:	4801      	ldr	r0, [pc, #4]	@ (8004e78 <RTC_WKUP_IRQHandler+0x8>)
 8004e72:	f004 bd8b 	b.w	800998c <HAL_RTCEx_WakeUpTimerIRQHandler>
 8004e76:	bf00      	nop
 8004e78:	20001074 	.word	0x20001074

08004e7c <DMA1_Channel1_IRQHandler>:
void DMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8004e7c:	4801      	ldr	r0, [pc, #4]	@ (8004e84 <DMA1_Channel1_IRQHandler+0x8>)
 8004e7e:	f001 ba55 	b.w	800632c <HAL_DMA_IRQHandler>
 8004e82:	bf00      	nop
 8004e84:	20000328 	.word	0x20000328

08004e88 <DMA1_Channel2_IRQHandler>:
void DMA1_Channel2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_rx);
 8004e88:	4801      	ldr	r0, [pc, #4]	@ (8004e90 <DMA1_Channel2_IRQHandler+0x8>)
 8004e8a:	f001 ba4f 	b.w	800632c <HAL_DMA_IRQHandler>
 8004e8e:	bf00      	nop
 8004e90:	200016f8 	.word	0x200016f8

08004e94 <DMA1_Channel3_IRQHandler>:
void DMA1_Channel3_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */

  /* USER CODE END DMA1_Channel3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_tx);
 8004e94:	4801      	ldr	r0, [pc, #4]	@ (8004e9c <DMA1_Channel3_IRQHandler+0x8>)
 8004e96:	f001 ba49 	b.w	800632c <HAL_DMA_IRQHandler>
 8004e9a:	bf00      	nop
 8004e9c:	20001698 	.word	0x20001698

08004ea0 <USB_LP_IRQHandler>:
void USB_LP_IRQHandler(void)
{
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8004ea0:	4801      	ldr	r0, [pc, #4]	@ (8004ea8 <USB_LP_IRQHandler+0x8>)
 8004ea2:	f002 bb63 	b.w	800756c <HAL_PCD_IRQHandler>
 8004ea6:	bf00      	nop
 8004ea8:	2000576c 	.word	0x2000576c

08004eac <TIM1_UP_TIM16_IRQHandler>:
void TIM1_UP_TIM16_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  if (htim1.Instance != NULL)
 8004eac:	4806      	ldr	r0, [pc, #24]	@ (8004ec8 <TIM1_UP_TIM16_IRQHandler+0x1c>)
{
 8004eae:	b508      	push	{r3, lr}
  if (htim1.Instance != NULL)
 8004eb0:	6803      	ldr	r3, [r0, #0]
 8004eb2:	b10b      	cbz	r3, 8004eb8 <TIM1_UP_TIM16_IRQHandler+0xc>
  {
    HAL_TIM_IRQHandler(&htim1);
 8004eb4:	f005 fe06 	bl	800aac4 <HAL_TIM_IRQHandler>
  }
  if (htim16.Instance != NULL)
 8004eb8:	4804      	ldr	r0, [pc, #16]	@ (8004ecc <TIM1_UP_TIM16_IRQHandler+0x20>)
 8004eba:	6803      	ldr	r3, [r0, #0]
 8004ebc:	b11b      	cbz	r3, 8004ec6 <TIM1_UP_TIM16_IRQHandler+0x1a>
    HAL_TIM_IRQHandler(&htim16);
  }
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 8004ebe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_TIM_IRQHandler(&htim16);
 8004ec2:	f005 bdff 	b.w	800aac4 <HAL_TIM_IRQHandler>
}
 8004ec6:	bd08      	pop	{r3, pc}
 8004ec8:	20001554 	.word	0x20001554
 8004ecc:	200015f8 	.word	0x200015f8

08004ed0 <TIM1_TRG_COM_TIM17_IRQHandler>:
void TIM1_TRG_COM_TIM17_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
  HAL_TIM_IRQHandler(&htim17);
 8004ed0:	4801      	ldr	r0, [pc, #4]	@ (8004ed8 <TIM1_TRG_COM_TIM17_IRQHandler+0x8>)
 8004ed2:	f005 bdf7 	b.w	800aac4 <HAL_TIM_IRQHandler>
 8004ed6:	bf00      	nop
 8004ed8:	200015a8 	.word	0x200015a8

08004edc <SPI1_IRQHandler>:
void SPI1_IRQHandler(void)
{
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8004edc:	4801      	ldr	r0, [pc, #4]	@ (8004ee4 <SPI1_IRQHandler+0x8>)
 8004ede:	f005 bbb5 	b.w	800a64c <HAL_SPI_IRQHandler>
 8004ee2:	bf00      	nop
 8004ee4:	20001098 	.word	0x20001098

08004ee8 <LPUART1_IRQHandler>:
void LPUART1_IRQHandler(void)
{
  /* USER CODE BEGIN LPUART1_IRQn 0 */

  /* USER CODE END LPUART1_IRQn 0 */
  HAL_UART_IRQHandler(&hlpuart1);
 8004ee8:	4801      	ldr	r0, [pc, #4]	@ (8004ef0 <LPUART1_IRQHandler+0x8>)
 8004eea:	f006 b849 	b.w	800af80 <HAL_UART_IRQHandler>
 8004eee:	bf00      	nop
 8004ef0:	20001758 	.word	0x20001758

08004ef4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8004ef4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 8004ef6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8004efa:	f001 fc19 	bl	8006730 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8004efe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
 8004f02:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8004f06:	f001 bc13 	b.w	8006730 <HAL_GPIO_EXTI_IRQHandler>
 8004f0a:	bf00      	nop

08004f0c <IPCC_C1_RX_IRQHandler>:
void IPCC_C1_RX_IRQHandler(void)
{
  /* USER CODE BEGIN IPCC_C1_RX_IRQn 0 */

  /* USER CODE END IPCC_C1_RX_IRQn 0 */
  HAL_IPCC_RX_IRQHandler(&hipcc);
 8004f0c:	4801      	ldr	r0, [pc, #4]	@ (8004f14 <IPCC_C1_RX_IRQHandler+0x8>)
 8004f0e:	f002 ba01 	b.w	8007314 <HAL_IPCC_RX_IRQHandler>
 8004f12:	bf00      	nop
 8004f14:	200004cc 	.word	0x200004cc

08004f18 <IPCC_C1_TX_IRQHandler>:
void IPCC_C1_TX_IRQHandler(void)
{
  /* USER CODE BEGIN IPCC_C1_TX_IRQn 0 */

  /* USER CODE END IPCC_C1_TX_IRQn 0 */
  HAL_IPCC_TX_IRQHandler(&hipcc);
 8004f18:	4801      	ldr	r0, [pc, #4]	@ (8004f20 <IPCC_C1_TX_IRQHandler+0x8>)
 8004f1a:	f002 b9cf 	b.w	80072bc <HAL_IPCC_TX_IRQHandler>
 8004f1e:	bf00      	nop
 8004f20:	200004cc 	.word	0x200004cc

08004f24 <HSEM_IRQHandler>:
void HSEM_IRQHandler(void)
{
  /* USER CODE BEGIN HSEM_IRQn 0 */

  /* USER CODE END HSEM_IRQn 0 */
  HAL_HSEM_IRQHandler();
 8004f24:	f001 bc12 	b.w	800674c <HAL_HSEM_IRQHandler>

08004f28 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8004f28:	2001      	movs	r0, #1
 8004f2a:	4770      	bx	lr

08004f2c <_kill>:

int _kill(int pid, int sig)
{
 8004f2c:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8004f2e:	f00b fafd 	bl	801052c <__errno>
 8004f32:	2316      	movs	r3, #22
 8004f34:	6003      	str	r3, [r0, #0]
  return -1;
}
 8004f36:	f04f 30ff 	mov.w	r0, #4294967295
 8004f3a:	bd08      	pop	{r3, pc}

08004f3c <_exit>:

void _exit (int status)
{
 8004f3c:	b508      	push	{r3, lr}
  errno = EINVAL;
 8004f3e:	f00b faf5 	bl	801052c <__errno>
 8004f42:	2316      	movs	r3, #22
 8004f44:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8004f46:	e7fe      	b.n	8004f46 <_exit+0xa>

08004f48 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004f48:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f4a:	1e16      	subs	r6, r2, #0
 8004f4c:	dd07      	ble.n	8004f5e <_read+0x16>
 8004f4e:	460c      	mov	r4, r1
 8004f50:	198d      	adds	r5, r1, r6
  {
    *ptr++ = __io_getchar();
 8004f52:	f3af 8000 	nop.w
 8004f56:	f804 0b01 	strb.w	r0, [r4], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f5a:	42a5      	cmp	r5, r4
 8004f5c:	d1f9      	bne.n	8004f52 <_read+0xa>
  }

  return len;
}
 8004f5e:	4630      	mov	r0, r6
 8004f60:	bd70      	pop	{r4, r5, r6, pc}
 8004f62:	bf00      	nop

08004f64 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004f64:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f66:	1e16      	subs	r6, r2, #0
 8004f68:	dd07      	ble.n	8004f7a <_write+0x16>
 8004f6a:	460c      	mov	r4, r1
 8004f6c:	198d      	adds	r5, r1, r6
  {
    __io_putchar(*ptr++);
 8004f6e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8004f72:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f76:	42a5      	cmp	r5, r4
 8004f78:	d1f9      	bne.n	8004f6e <_write+0xa>
  }
  return len;
}
 8004f7a:	4630      	mov	r0, r6
 8004f7c:	bd70      	pop	{r4, r5, r6, pc}
 8004f7e:	bf00      	nop

08004f80 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8004f80:	f04f 30ff 	mov.w	r0, #4294967295
 8004f84:	4770      	bx	lr
 8004f86:	bf00      	nop

08004f88 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8004f88:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8004f8c:	604b      	str	r3, [r1, #4]
  return 0;
}
 8004f8e:	2000      	movs	r0, #0
 8004f90:	4770      	bx	lr
 8004f92:	bf00      	nop

08004f94 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8004f94:	2001      	movs	r0, #1
 8004f96:	4770      	bx	lr

08004f98 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8004f98:	2000      	movs	r0, #0
 8004f9a:	4770      	bx	lr

08004f9c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004f9c:	490c      	ldr	r1, [pc, #48]	@ (8004fd0 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004f9e:	4a0d      	ldr	r2, [pc, #52]	@ (8004fd4 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8004fa0:	680b      	ldr	r3, [r1, #0]
{
 8004fa2:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004fa4:	4c0c      	ldr	r4, [pc, #48]	@ (8004fd8 <_sbrk+0x3c>)
 8004fa6:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8004fa8:	b12b      	cbz	r3, 8004fb6 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004faa:	4418      	add	r0, r3
 8004fac:	4290      	cmp	r0, r2
 8004fae:	d807      	bhi.n	8004fc0 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8004fb0:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 8004fb2:	4618      	mov	r0, r3
 8004fb4:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8004fb6:	4b09      	ldr	r3, [pc, #36]	@ (8004fdc <_sbrk+0x40>)
 8004fb8:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8004fba:	4418      	add	r0, r3
 8004fbc:	4290      	cmp	r0, r2
 8004fbe:	d9f7      	bls.n	8004fb0 <_sbrk+0x14>
    errno = ENOMEM;
 8004fc0:	f00b fab4 	bl	801052c <__errno>
 8004fc4:	230c      	movs	r3, #12
 8004fc6:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8004fc8:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004fcc:	4618      	mov	r0, r3
 8004fce:	bd10      	pop	{r4, pc}
 8004fd0:	200015a0 	.word	0x200015a0
 8004fd4:	20030000 	.word	0x20030000
 8004fd8:	00000400 	.word	0x00000400
 8004fdc:	20005b98 	.word	0x20005b98

08004fe0 <SystemInit>:
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif /* USER_VECT_TAB_ADDRESS */

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << (10UL * 2UL)) | (3UL << (11UL * 2UL))); /* set CP10 and CP11 Full Access */
 8004fe0:	4914      	ldr	r1, [pc, #80]	@ (8005034 <SystemInit+0x54>)
 8004fe2:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
#endif /* FPU */

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8004fe6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
  SCB->CPACR |= ((3UL << (10UL * 2UL)) | (3UL << (11UL * 2UL))); /* set CP10 and CP11 Full Access */
 8004fea:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004fee:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  RCC->CR |= RCC_CR_MSION;
 8004ff2:	6819      	ldr	r1, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00070000U;

  /* Reset PLLSAI1ON, PLLON, HSECSSON, HSEON, HSION, and MSIPLLON bits */
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004ff4:	4a10      	ldr	r2, [pc, #64]	@ (8005038 <SystemInit+0x58>)
  RCC->CFGR = 0x00070000U;
 8004ff6:	f44f 20e0 	mov.w	r0, #458752	@ 0x70000
  RCC->CR |= RCC_CR_MSION;
 8004ffa:	f041 0101 	orr.w	r1, r1, #1
 8004ffe:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00070000U;
 8005000:	6098      	str	r0, [r3, #8]
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8005002:	6818      	ldr	r0, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x22041000U;
 8005004:	490d      	ldr	r1, [pc, #52]	@ (800503c <SystemInit+0x5c>)
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8005006:	4002      	ands	r2, r0
 8005008:	601a      	str	r2, [r3, #0]
  RCC->CSR &= (uint32_t)0xFFFFFFFAU;
 800500a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800500e:	f022 0205 	bic.w	r2, r2, #5
 8005012:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8005016:	f8d3 2098 	ldr.w	r2, [r3, #152]	@ 0x98
 800501a:	f022 0201 	bic.w	r2, r2, #1
 800501e:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  RCC->PLLCFGR = 0x22041000U;
 8005022:	60d9      	str	r1, [r3, #12]

#if defined(STM32WB55xx) || defined(STM32WB5Mxx)
  /* Reset PLLSAI1CFGR register */
  RCC->PLLSAI1CFGR = 0x22041000U;
 8005024:	6119      	str	r1, [r3, #16]
#endif /* STM32WB55xx || STM32WB5Mxx */

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8005026:	681a      	ldr	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8005028:	2100      	movs	r1, #0
  RCC->CR &= 0xFFFBFFFFU;
 800502a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800502e:	601a      	str	r2, [r3, #0]
  RCC->CIER = 0x00000000;
 8005030:	6199      	str	r1, [r3, #24]
}
 8005032:	4770      	bx	lr
 8005034:	e000ed00 	.word	0xe000ed00
 8005038:	faf6fefb 	.word	0xfaf6fefb
 800503c:	22041000 	.word	0x22041000

08005040 <MX_TIM2_Init>:
TIM_HandleTypeDef htim16;
TIM_HandleTypeDef htim17;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8005040:	b500      	push	{lr}
  TIM_MasterConfigTypeDef sMasterConfig = {0};

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005042:	481c      	ldr	r0, [pc, #112]	@ (80050b4 <MX_TIM2_Init+0x74>)
 8005044:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
{
 8005048:	b089      	sub	sp, #36	@ 0x24
  htim2.Instance = TIM2;
 800504a:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 6400-1;
 800504c:	f641 02ff 	movw	r2, #6399	@ 0x18ff
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005050:	2300      	movs	r3, #0
  htim2.Init.Prescaler = 6400-1;
 8005052:	6042      	str	r2, [r0, #4]
 8005054:	f240 32e7 	movw	r2, #999	@ 0x3e7
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005058:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800505c:	e9cd 3306 	strd	r3, r3, [sp, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005060:	e9cd 3301 	strd	r3, r3, [sp, #4]
  htim2.Init.Prescaler = 6400-1;
 8005064:	e9c0 3202 	strd	r3, r2, [r0, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005068:	9303      	str	r3, [sp, #12]
  htim2.Init.Prescaler = 6400-1;
 800506a:	6103      	str	r3, [r0, #16]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim2.Init.Period = 1000-1;
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800506c:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800506e:	f005 fb9f 	bl	800a7b0 <HAL_TIM_Base_Init>
 8005072:	b998      	cbnz	r0, 800509c <MX_TIM2_Init+0x5c>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005074:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8005078:	480e      	ldr	r0, [pc, #56]	@ (80050b4 <MX_TIM2_Init+0x74>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800507a:	9304      	str	r3, [sp, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800507c:	a904      	add	r1, sp, #16
 800507e:	f005 fc67 	bl	800a950 <HAL_TIM_ConfigClockSource>
 8005082:	b998      	cbnz	r0, 80050ac <MX_TIM2_Init+0x6c>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8005084:	2220      	movs	r2, #32
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005086:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005088:	480a      	ldr	r0, [pc, #40]	@ (80050b4 <MX_TIM2_Init+0x74>)
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800508a:	9201      	str	r2, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800508c:	a901      	add	r1, sp, #4
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800508e:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005090:	f005 fdc2 	bl	800ac18 <HAL_TIMEx_MasterConfigSynchronization>
 8005094:	b928      	cbnz	r0, 80050a2 <MX_TIM2_Init+0x62>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8005096:	b009      	add	sp, #36	@ 0x24
 8005098:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800509c:	f7fd f8f4 	bl	8002288 <Error_Handler>
 80050a0:	e7e8      	b.n	8005074 <MX_TIM2_Init+0x34>
    Error_Handler();
 80050a2:	f7fd f8f1 	bl	8002288 <Error_Handler>
}
 80050a6:	b009      	add	sp, #36	@ 0x24
 80050a8:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80050ac:	f7fd f8ec 	bl	8002288 <Error_Handler>
 80050b0:	e7e8      	b.n	8005084 <MX_TIM2_Init+0x44>
 80050b2:	bf00      	nop
 80050b4:	20001648 	.word	0x20001648

080050b8 <MX_TIM16_Init>:
/* TIM16 init function */
void MX_TIM16_Init(void)
{
 80050b8:	b510      	push	{r4, lr}
  /* USER CODE END TIM16_Init 0 */

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 80050ba:	480b      	ldr	r0, [pc, #44]	@ (80050e8 <MX_TIM16_Init+0x30>)
 80050bc:	4c0b      	ldr	r4, [pc, #44]	@ (80050ec <MX_TIM16_Init+0x34>)
  htim16.Init.Prescaler = 64000-1;
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 80050be:	2300      	movs	r3, #0
  htim16.Init.Prescaler = 64000-1;
 80050c0:	f64f 11ff 	movw	r1, #63999	@ 0xf9ff
  htim16.Init.Period = 65535;
 80050c4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  htim16.Init.Prescaler = 64000-1;
 80050c8:	e9c0 4100 	strd	r4, r1, [r0]
  htim16.Init.Period = 65535;
 80050cc:	e9c0 3202 	strd	r3, r2, [r0, #8]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim16.Init.RepetitionCounter = 0;
 80050d0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80050d4:	6183      	str	r3, [r0, #24]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 80050d6:	f005 fb6b 	bl	800a7b0 <HAL_TIM_Base_Init>
 80050da:	b900      	cbnz	r0, 80050de <MX_TIM16_Init+0x26>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 80050dc:	bd10      	pop	{r4, pc}
 80050de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 80050e2:	f7fd b8d1 	b.w	8002288 <Error_Handler>
 80050e6:	bf00      	nop
 80050e8:	200015f8 	.word	0x200015f8
 80050ec:	40014400 	.word	0x40014400

080050f0 <MX_TIM17_Init>:
/* TIM17 init function */
void MX_TIM17_Init(void)
{
 80050f0:	b510      	push	{r4, lr}
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 80050f2:	480a      	ldr	r0, [pc, #40]	@ (800511c <MX_TIM17_Init+0x2c>)
 80050f4:	4c0a      	ldr	r4, [pc, #40]	@ (8005120 <MX_TIM17_Init+0x30>)
  htim17.Init.Prescaler = 64000-1;
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 80050f6:	2300      	movs	r3, #0
  htim17.Init.Prescaler = 64000-1;
 80050f8:	f64f 11ff 	movw	r1, #63999	@ 0xf9ff
  htim17.Init.Period = 200-1;
 80050fc:	22c7      	movs	r2, #199	@ 0xc7
  htim17.Init.Prescaler = 64000-1;
 80050fe:	e9c0 4100 	strd	r4, r1, [r0]
  htim17.Init.Period = 200-1;
 8005102:	e9c0 3202 	strd	r3, r2, [r0, #8]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim17.Init.RepetitionCounter = 0;
 8005106:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800510a:	6183      	str	r3, [r0, #24]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 800510c:	f005 fb50 	bl	800a7b0 <HAL_TIM_Base_Init>
 8005110:	b900      	cbnz	r0, 8005114 <MX_TIM17_Init+0x24>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 8005112:	bd10      	pop	{r4, pc}
 8005114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8005118:	f7fd b8b6 	b.w	8002288 <Error_Handler>
 800511c:	200015a8 	.word	0x200015a8
 8005120:	40014800 	.word	0x40014800

08005124 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8005124:	b500      	push	{lr}

  if(tim_baseHandle->Instance==TIM2)
 8005126:	6803      	ldr	r3, [r0, #0]
 8005128:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
{
 800512c:	b085      	sub	sp, #20
  if(tim_baseHandle->Instance==TIM2)
 800512e:	d008      	beq.n	8005142 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM16)
 8005130:	4a21      	ldr	r2, [pc, #132]	@ (80051b8 <HAL_TIM_Base_MspInit+0x94>)
 8005132:	4293      	cmp	r3, r2
 8005134:	d029      	beq.n	800518a <HAL_TIM_Base_MspInit+0x66>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
  /* USER CODE BEGIN TIM16_MspInit 1 */

  /* USER CODE END TIM16_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM17)
 8005136:	4a21      	ldr	r2, [pc, #132]	@ (80051bc <HAL_TIM_Base_MspInit+0x98>)
 8005138:	4293      	cmp	r3, r2
 800513a:	d010      	beq.n	800515e <HAL_TIM_Base_MspInit+0x3a>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
  /* USER CODE BEGIN TIM17_MspInit 1 */

  /* USER CODE END TIM17_MspInit 1 */
  }
}
 800513c:	b005      	add	sp, #20
 800513e:	f85d fb04 	ldr.w	pc, [sp], #4
  SET_BIT(RCC->APB1ENR1, Periphs);
 8005142:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8005146:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8005148:	f042 0201 	orr.w	r2, r2, #1
 800514c:	659a      	str	r2, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800514e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005150:	f003 0301 	and.w	r3, r3, #1
 8005154:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8005156:	9b01      	ldr	r3, [sp, #4]
 8005158:	b005      	add	sp, #20
 800515a:	f85d fb04 	ldr.w	pc, [sp], #4
  SET_BIT(RCC->APB2ENR, Periphs);
 800515e:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 5, 0);
 8005162:	2200      	movs	r2, #0
 8005164:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8005166:	f440 2080 	orr.w	r0, r0, #262144	@ 0x40000
 800516a:	6618      	str	r0, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 800516c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800516e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8005172:	9303      	str	r3, [sp, #12]
 8005174:	2105      	movs	r1, #5
 8005176:	201a      	movs	r0, #26
  (void)tmpreg;
 8005178:	9b03      	ldr	r3, [sp, #12]
 800517a:	f000 ff35 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 800517e:	201a      	movs	r0, #26
}
 8005180:	b005      	add	sp, #20
 8005182:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8005186:	f000 bf6b 	b.w	8006060 <HAL_NVIC_EnableIRQ>
  SET_BIT(RCC->APB2ENR, Periphs);
 800518a:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 15, 0);
 800518e:	2200      	movs	r2, #0
 8005190:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8005192:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
 8005196:	6618      	str	r0, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8005198:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800519a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800519e:	9302      	str	r3, [sp, #8]
 80051a0:	210f      	movs	r1, #15
 80051a2:	2019      	movs	r0, #25
  (void)tmpreg;
 80051a4:	9b02      	ldr	r3, [sp, #8]
 80051a6:	f000 ff1f 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 80051aa:	2019      	movs	r0, #25
}
 80051ac:	b005      	add	sp, #20
 80051ae:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 80051b2:	f000 bf55 	b.w	8006060 <HAL_NVIC_EnableIRQ>
 80051b6:	bf00      	nop
 80051b8:	40014400 	.word	0x40014400
 80051bc:	40014800 	.word	0x40014800

080051c0 <MX_LPUART1_UART_Init>:
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
  hlpuart1.Init.Parity = UART_PARITY_NONE;
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80051c0:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8005248 <MX_LPUART1_UART_Init+0x88>
{
 80051c4:	b510      	push	{r4, lr}
  hlpuart1.Instance = LPUART1;
 80051c6:	4822      	ldr	r0, [pc, #136]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 80051c8:	4c22      	ldr	r4, [pc, #136]	@ (8005254 <MX_LPUART1_UART_Init+0x94>)
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 80051ca:	2300      	movs	r3, #0
  hlpuart1.Init.BaudRate = 115200;
 80051cc:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 80051d0:	220c      	movs	r2, #12
  hlpuart1.Init.BaudRate = 115200;
 80051d2:	e9c0 4100 	strd	r4, r1, [r0]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80051d6:	ed80 7b08 	vstr	d7, [r0, #32]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 80051da:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 80051de:	e9c0 3204 	strd	r3, r2, [r0, #16]
 80051e2:	6183      	str	r3, [r0, #24]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80051e4:	6283      	str	r3, [r0, #40]	@ 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 80051e6:	6643      	str	r3, [r0, #100]	@ 0x64
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 80051e8:	f006 fa98 	bl	800b71c <HAL_UART_Init>
 80051ec:	b970      	cbnz	r0, 800520c <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80051ee:	4818      	ldr	r0, [pc, #96]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 80051f0:	2100      	movs	r1, #0
 80051f2:	f006 fc5b 	bl	800baac <HAL_UARTEx_SetTxFifoThreshold>
 80051f6:	b988      	cbnz	r0, 800521c <MX_LPUART1_UART_Init+0x5c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80051f8:	4815      	ldr	r0, [pc, #84]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 80051fa:	2100      	movs	r1, #0
 80051fc:	f006 fc98 	bl	800bb30 <HAL_UARTEx_SetRxFifoThreshold>
 8005200:	b9a0      	cbnz	r0, 800522c <MX_LPUART1_UART_Init+0x6c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8005202:	4813      	ldr	r0, [pc, #76]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 8005204:	f006 fc34 	bl	800ba70 <HAL_UARTEx_DisableFifoMode>
 8005208:	b9b8      	cbnz	r0, 800523a <MX_LPUART1_UART_Init+0x7a>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 800520a:	bd10      	pop	{r4, pc}
    Error_Handler();
 800520c:	f7fd f83c 	bl	8002288 <Error_Handler>
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8005210:	480f      	ldr	r0, [pc, #60]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 8005212:	2100      	movs	r1, #0
 8005214:	f006 fc4a 	bl	800baac <HAL_UARTEx_SetTxFifoThreshold>
 8005218:	2800      	cmp	r0, #0
 800521a:	d0ed      	beq.n	80051f8 <MX_LPUART1_UART_Init+0x38>
    Error_Handler();
 800521c:	f7fd f834 	bl	8002288 <Error_Handler>
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8005220:	480b      	ldr	r0, [pc, #44]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 8005222:	2100      	movs	r1, #0
 8005224:	f006 fc84 	bl	800bb30 <HAL_UARTEx_SetRxFifoThreshold>
 8005228:	2800      	cmp	r0, #0
 800522a:	d0ea      	beq.n	8005202 <MX_LPUART1_UART_Init+0x42>
    Error_Handler();
 800522c:	f7fd f82c 	bl	8002288 <Error_Handler>
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8005230:	4807      	ldr	r0, [pc, #28]	@ (8005250 <MX_LPUART1_UART_Init+0x90>)
 8005232:	f006 fc1d 	bl	800ba70 <HAL_UARTEx_DisableFifoMode>
 8005236:	2800      	cmp	r0, #0
 8005238:	d0e7      	beq.n	800520a <MX_LPUART1_UART_Init+0x4a>
}
 800523a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 800523e:	f7fd b823 	b.w	8002288 <Error_Handler>
 8005242:	bf00      	nop
 8005244:	f3af 8000 	nop.w
	...
 8005250:	20001758 	.word	0x20001758
 8005254:	40008000 	.word	0x40008000

08005258 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8005258:	b570      	push	{r4, r5, r6, lr}
 800525a:	4604      	mov	r4, r0
 800525c:	b09c      	sub	sp, #112	@ 0x70

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800525e:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8005260:	2250      	movs	r2, #80	@ 0x50
 8005262:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005264:	e9cd 1102 	strd	r1, r1, [sp, #8]
 8005268:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800526c:	9106      	str	r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800526e:	f00b f90a 	bl	8010486 <memset>
  if(uartHandle->Instance==LPUART1)
 8005272:	4b3d      	ldr	r3, [pc, #244]	@ (8005368 <HAL_UART_MspInit+0x110>)
 8005274:	6822      	ldr	r2, [r4, #0]
 8005276:	429a      	cmp	r2, r3
 8005278:	d001      	beq.n	800527e <HAL_UART_MspInit+0x26>
    HAL_NVIC_EnableIRQ(LPUART1_IRQn);
  /* USER CODE BEGIN LPUART1_MspInit 1 */

  /* USER CODE END LPUART1_MspInit 1 */
  }
}
 800527a:	b01c      	add	sp, #112	@ 0x70
 800527c:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 800527e:	2202      	movs	r2, #2
    PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 8005280:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8005284:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8005286:	9208      	str	r2, [sp, #32]
    PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 8005288:	930f      	str	r3, [sp, #60]	@ 0x3c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800528a:	f003 fec3 	bl	8009014 <HAL_RCCEx_PeriphCLKConfig>
 800528e:	2800      	cmp	r0, #0
 8005290:	d157      	bne.n	8005342 <HAL_UART_MspInit+0xea>
  SET_BIT(RCC->APB1ENR2, Periphs);
 8005292:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8005296:	ed9f 7b30 	vldr	d7, [pc, #192]	@ 8005358 <HAL_UART_MspInit+0x100>
 800529a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
    hdma_lpuart1_rx.Instance = DMA1_Channel2;
 800529c:	4e33      	ldr	r6, [pc, #204]	@ (800536c <HAL_UART_MspInit+0x114>)
 800529e:	f042 0201 	orr.w	r2, r2, #1
 80052a2:	65da      	str	r2, [r3, #92]	@ 0x5c
  tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 80052a4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80052a6:	f002 0201 	and.w	r2, r2, #1
 80052aa:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 80052ac:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80052ae:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80052b0:	f042 0201 	orr.w	r2, r2, #1
 80052b4:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80052b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80052b8:	ed8d 7b02 	vstr	d7, [sp, #8]
 80052bc:	ed9f 7b28 	vldr	d7, [pc, #160]	@ 8005360 <HAL_UART_MspInit+0x108>
 80052c0:	f003 0301 	and.w	r3, r3, #1
 80052c4:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80052c6:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 80052c8:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80052ca:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 80052ce:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 80052d0:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80052d2:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80052d6:	f001 f879 	bl	80063cc <HAL_GPIO_Init>
    hdma_lpuart1_rx.Init.Request = DMA_REQUEST_LPUART1_RX;
 80052da:	4925      	ldr	r1, [pc, #148]	@ (8005370 <HAL_UART_MspInit+0x118>)
 80052dc:	2210      	movs	r2, #16
 80052de:	2300      	movs	r3, #0
 80052e0:	e9c6 1200 	strd	r1, r2, [r6]
    if (HAL_DMA_Init(&hdma_lpuart1_rx) != HAL_OK)
 80052e4:	4630      	mov	r0, r6
    hdma_lpuart1_rx.Init.Request = DMA_REQUEST_LPUART1_RX;
 80052e6:	2180      	movs	r1, #128	@ 0x80
 80052e8:	2220      	movs	r2, #32
 80052ea:	e9c6 3302 	strd	r3, r3, [r6, #8]
 80052ee:	e9c6 1304 	strd	r1, r3, [r6, #16]
 80052f2:	e9c6 3206 	strd	r3, r2, [r6, #24]
 80052f6:	6233      	str	r3, [r6, #32]
    if (HAL_DMA_Init(&hdma_lpuart1_rx) != HAL_OK)
 80052f8:	f000 fec0 	bl	800607c <HAL_DMA_Init>
 80052fc:	bb38      	cbnz	r0, 800534e <HAL_UART_MspInit+0xf6>
    hdma_lpuart1_tx.Instance = DMA1_Channel3;
 80052fe:	4d1d      	ldr	r5, [pc, #116]	@ (8005374 <HAL_UART_MspInit+0x11c>)
 8005300:	491d      	ldr	r1, [pc, #116]	@ (8005378 <HAL_UART_MspInit+0x120>)
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_lpuart1_rx);
 8005302:	f8c4 6080 	str.w	r6, [r4, #128]	@ 0x80
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8005306:	2211      	movs	r2, #17
 8005308:	2300      	movs	r3, #0
 800530a:	e9c5 1200 	strd	r1, r2, [r5]
    if (HAL_DMA_Init(&hdma_lpuart1_tx) != HAL_OK)
 800530e:	4628      	mov	r0, r5
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8005310:	2110      	movs	r1, #16
 8005312:	2280      	movs	r2, #128	@ 0x80
 8005314:	e9c5 1302 	strd	r1, r3, [r5, #8]
 8005318:	e9c5 3305 	strd	r3, r3, [r5, #20]
 800531c:	e9c5 3307 	strd	r3, r3, [r5, #28]
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_lpuart1_rx);
 8005320:	62b4      	str	r4, [r6, #40]	@ 0x28
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8005322:	612a      	str	r2, [r5, #16]
    if (HAL_DMA_Init(&hdma_lpuart1_tx) != HAL_OK)
 8005324:	f000 feaa 	bl	800607c <HAL_DMA_Init>
 8005328:	b970      	cbnz	r0, 8005348 <HAL_UART_MspInit+0xf0>
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 800532a:	2200      	movs	r2, #0
 800532c:	2106      	movs	r1, #6
    __HAL_LINKDMA(uartHandle,hdmatx,hdma_lpuart1_tx);
 800532e:	67e5      	str	r5, [r4, #124]	@ 0x7c
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8005330:	2025      	movs	r0, #37	@ 0x25
    __HAL_LINKDMA(uartHandle,hdmatx,hdma_lpuart1_tx);
 8005332:	62ac      	str	r4, [r5, #40]	@ 0x28
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8005334:	f000 fe58 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LPUART1_IRQn);
 8005338:	2025      	movs	r0, #37	@ 0x25
 800533a:	f000 fe91 	bl	8006060 <HAL_NVIC_EnableIRQ>
}
 800533e:	b01c      	add	sp, #112	@ 0x70
 8005340:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 8005342:	f7fc ffa1 	bl	8002288 <Error_Handler>
 8005346:	e7a4      	b.n	8005292 <HAL_UART_MspInit+0x3a>
      Error_Handler();
 8005348:	f7fc ff9e 	bl	8002288 <Error_Handler>
 800534c:	e7ed      	b.n	800532a <HAL_UART_MspInit+0xd2>
      Error_Handler();
 800534e:	f7fc ff9b 	bl	8002288 <Error_Handler>
 8005352:	e7d4      	b.n	80052fe <HAL_UART_MspInit+0xa6>
 8005354:	f3af 8000 	nop.w
 8005358:	0000000c 	.word	0x0000000c
 800535c:	00000002 	.word	0x00000002
	...
 8005368:	40008000 	.word	0x40008000
 800536c:	200016f8 	.word	0x200016f8
 8005370:	4002001c 	.word	0x4002001c
 8005374:	20001698 	.word	0x20001698
 8005378:	40020030 	.word	0x40020030

0800537c <HAL_UART_RxCpltCallback>:
  }
}

/* USER CODE BEGIN 1 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
	if(huart->Instance==LPUART1){
 800537c:	4b18      	ldr	r3, [pc, #96]	@ (80053e0 <HAL_UART_RxCpltCallback+0x64>)
 800537e:	6802      	ldr	r2, [r0, #0]
 8005380:	429a      	cmp	r2, r3
 8005382:	d000      	beq.n	8005386 <HAL_UART_RxCpltCallback+0xa>
 8005384:	4770      	bx	lr
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8005386:	b510      	push	{r4, lr}
		if(itest==0){
 8005388:	4c16      	ldr	r4, [pc, #88]	@ (80053e4 <HAL_UART_RxCpltCallback+0x68>)
 800538a:	6823      	ldr	r3, [r4, #0]
 800538c:	b1c3      	cbz	r3, 80053c0 <HAL_UART_RxCpltCallback+0x44>
			timetest1=HAL_GetTick();
		}
		itest++;
 800538e:	3301      	adds	r3, #1
		if(itest>=10){
 8005390:	2b09      	cmp	r3, #9
 8005392:	dc1b      	bgt.n	80053cc <HAL_UART_RxCpltCallback+0x50>
		itest++;
 8005394:	6023      	str	r3, [r4, #0]




		}
		received_flag=1;
 8005396:	4b14      	ldr	r3, [pc, #80]	@ (80053e8 <HAL_UART_RxCpltCallback+0x6c>)
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 8005398:	4914      	ldr	r1, [pc, #80]	@ (80053ec <HAL_UART_RxCpltCallback+0x70>)
 800539a:	4815      	ldr	r0, [pc, #84]	@ (80053f0 <HAL_UART_RxCpltCallback+0x74>)
		received_flag=1;
 800539c:	2401      	movs	r4, #1
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 800539e:	2264      	movs	r2, #100	@ 0x64
		received_flag=1;
 80053a0:	601c      	str	r4, [r3, #0]
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 80053a2:	f00b f8f0 	bl	8010586 <memcpy>
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 80053a6:	4b13      	ldr	r3, [pc, #76]	@ (80053f4 <HAL_UART_RxCpltCallback+0x78>)
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 80053a8:	4910      	ldr	r1, [pc, #64]	@ (80053ec <HAL_UART_RxCpltCallback+0x70>)
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 80053aa:	681c      	ldr	r4, [r3, #0]
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 80053ac:	4812      	ldr	r0, [pc, #72]	@ (80053f8 <HAL_UART_RxCpltCallback+0x7c>)
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 80053ae:	6823      	ldr	r3, [r4, #0]
 80053b0:	f023 0304 	bic.w	r3, r3, #4
 80053b4:	6023      	str	r3, [r4, #0]
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 80053b6:	2264      	movs	r2, #100	@ 0x64

	}

}
 80053b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 80053bc:	f006 bb30 	b.w	800ba20 <HAL_UART_Receive_DMA>
			timetest1=HAL_GetTick();
 80053c0:	f000 f9d0 	bl	8005764 <HAL_GetTick>
 80053c4:	4a0d      	ldr	r2, [pc, #52]	@ (80053fc <HAL_UART_RxCpltCallback+0x80>)
		itest++;
 80053c6:	6823      	ldr	r3, [r4, #0]
			timetest1=HAL_GetTick();
 80053c8:	6010      	str	r0, [r2, #0]
 80053ca:	e7e0      	b.n	800538e <HAL_UART_RxCpltCallback+0x12>
			itest=0;
 80053cc:	2300      	movs	r3, #0
 80053ce:	6023      	str	r3, [r4, #0]
			timetest2=HAL_GetTick()-timetest1;
 80053d0:	f000 f9c8 	bl	8005764 <HAL_GetTick>
 80053d4:	4a09      	ldr	r2, [pc, #36]	@ (80053fc <HAL_UART_RxCpltCallback+0x80>)
 80053d6:	4b0a      	ldr	r3, [pc, #40]	@ (8005400 <HAL_UART_RxCpltCallback+0x84>)
 80053d8:	6812      	ldr	r2, [r2, #0]
 80053da:	1a80      	subs	r0, r0, r2
 80053dc:	6018      	str	r0, [r3, #0]
 80053de:	e7da      	b.n	8005396 <HAL_UART_RxCpltCallback+0x1a>
 80053e0:	40008000 	.word	0x40008000
 80053e4:	200017ec 	.word	0x200017ec
 80053e8:	2000050c 	.word	0x2000050c
 80053ec:	20000ffc 	.word	0x20000ffc
 80053f0:	20000518 	.word	0x20000518
 80053f4:	200016f8 	.word	0x200016f8
 80053f8:	20001758 	.word	0x20001758
 80053fc:	200017f4 	.word	0x200017f4
 8005400:	200017f0 	.word	0x200017f0

08005404 <usbtransmit>:
	gpupower=atoi((uint8_t *)usbnumbuf2);


}

void usbtransmit(void){
 8005404:	b5f0      	push	{r4, r5, r6, r7, lr}

	if(pagenumber>0){
 8005406:	4c83      	ldr	r4, [pc, #524]	@ (8005614 <usbtransmit+0x210>)
 8005408:	6823      	ldr	r3, [r4, #0]
 800540a:	2b00      	cmp	r3, #0
void usbtransmit(void){
 800540c:	b083      	sub	sp, #12
		ssd1306_Fill(Black);
 800540e:	f04f 0000 	mov.w	r0, #0
	if(pagenumber>0){
 8005412:	dd3a      	ble.n	800548a <usbtransmit+0x86>
		ssd1306_Fill(Black);
 8005414:	f7fd fadc 	bl	80029d0 <ssd1306_Fill>
		ssd1306_SetCursor(32,32);
 8005418:	2120      	movs	r1, #32
 800541a:	4608      	mov	r0, r1
 800541c:	f7fd fd9c 	bl	8002f58 <ssd1306_SetCursor>
		ssd1306_WriteString("write",Font_6x8,White);
 8005420:	4b7d      	ldr	r3, [pc, #500]	@ (8005618 <usbtransmit+0x214>)
		int taillefin=0;
	switch(usbtransmitstate){
 8005422:	4d7e      	ldr	r5, [pc, #504]	@ (800561c <usbtransmit+0x218>)
		ssd1306_WriteString("write",Font_6x8,White);
 8005424:	487e      	ldr	r0, [pc, #504]	@ (8005620 <usbtransmit+0x21c>)
 8005426:	e893 0006 	ldmia.w	r3, {r1, r2}
 800542a:	2301      	movs	r3, #1
 800542c:	f7fd fd78 	bl	8002f20 <ssd1306_WriteString>
	switch(usbtransmitstate){
 8005430:	782b      	ldrb	r3, [r5, #0]
 8005432:	2b06      	cmp	r3, #6
 8005434:	d827      	bhi.n	8005486 <usbtransmit+0x82>
 8005436:	e8df f013 	tbh	[pc, r3, lsl #1]
 800543a:	00b7      	.short	0x00b7
 800543c:	00500007 	.word	0x00500007
 8005440:	0086005a 	.word	0x0086005a
 8005444:	005000de 	.word	0x005000de

		}

		break;
	case STATE_UNDER16PAGES2:
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
 8005448:	4e76      	ldr	r6, [pc, #472]	@ (8005624 <usbtransmit+0x220>)
 800544a:	6821      	ldr	r1, [r4, #0]
 800544c:	6833      	ldr	r3, [r6, #0]
 800544e:	4876      	ldr	r0, [pc, #472]	@ (8005628 <usbtransmit+0x224>)
 8005450:	2200      	movs	r2, #0
 8005452:	9200      	str	r2, [sp, #0]
 8005454:	4a75      	ldr	r2, [pc, #468]	@ (800562c <usbtransmit+0x228>)
 8005456:	f009 fc99 	bl	800ed8c <SPIF_ReadPage>
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
 800545a:	4874      	ldr	r0, [pc, #464]	@ (800562c <usbtransmit+0x228>)
 800545c:	8831      	ldrh	r1, [r6, #0]
 800545e:	f009 fd4f 	bl	800ef00 <CDC_Transmit_FS>
		HAL_Delay(100);
 8005462:	2064      	movs	r0, #100	@ 0x64
 8005464:	f000 f98a 	bl	800577c <HAL_Delay>

		break;
	case STATE_OVER16PAGES3:
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
		taillefin = snprintf((char  *)usbbuffer,64,"findetrame\n\r");
 8005468:	4b71      	ldr	r3, [pc, #452]	@ (8005630 <usbtransmit+0x22c>)
 800546a:	4c72      	ldr	r4, [pc, #456]	@ (8005634 <usbtransmit+0x230>)
 800546c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800546e:	781b      	ldrb	r3, [r3, #0]
 8005470:	6020      	str	r0, [r4, #0]
 8005472:	6061      	str	r1, [r4, #4]
		CDC_Transmit_FS((char  *)usbbuffer,taillefin);
 8005474:	4620      	mov	r0, r4
 8005476:	210c      	movs	r1, #12
		taillefin = snprintf((char  *)usbbuffer,64,"findetrame\n\r");
 8005478:	60a2      	str	r2, [r4, #8]
 800547a:	7323      	strb	r3, [r4, #12]
		CDC_Transmit_FS((char  *)usbbuffer,taillefin);
 800547c:	f009 fd40 	bl	800ef00 <CDC_Transmit_FS>
		usbtransmitstate++;
 8005480:	782b      	ldrb	r3, [r5, #0]
 8005482:	3301      	adds	r3, #1
 8005484:	702b      	strb	r3, [r5, #0]


				}


}
 8005486:	b003      	add	sp, #12
 8005488:	bdf0      	pop	{r4, r5, r6, r7, pc}
					ssd1306_WriteString("write",Font_7x10,White);
 800548a:	4c6b      	ldr	r4, [pc, #428]	@ (8005638 <usbtransmit+0x234>)
					ssd1306_Fill(Black);
 800548c:	f7fd faa0 	bl	80029d0 <ssd1306_Fill>
					ssd1306_SetCursor(32,40);
 8005490:	2128      	movs	r1, #40	@ 0x28
 8005492:	2020      	movs	r0, #32
 8005494:	f7fd fd60 	bl	8002f58 <ssd1306_SetCursor>
					ssd1306_WriteString("write",Font_7x10,White);
 8005498:	e894 0006 	ldmia.w	r4, {r1, r2}
 800549c:	2301      	movs	r3, #1
 800549e:	4860      	ldr	r0, [pc, #384]	@ (8005620 <usbtransmit+0x21c>)
 80054a0:	f7fd fd3e 	bl	8002f20 <ssd1306_WriteString>
					ssd1306_SetCursor(32,50);
 80054a4:	2132      	movs	r1, #50	@ 0x32
 80054a6:	2020      	movs	r0, #32
 80054a8:	f7fd fd56 	bl	8002f58 <ssd1306_SetCursor>
					ssd1306_WriteString("nothing",Font_7x10,White);
 80054ac:	e894 0006 	ldmia.w	r4, {r1, r2}
 80054b0:	4862      	ldr	r0, [pc, #392]	@ (800563c <usbtransmit+0x238>)
 80054b2:	2301      	movs	r3, #1
 80054b4:	f7fd fd34 	bl	8002f20 <ssd1306_WriteString>
					osThreadSuspend(USBTRANSMITHandle);
 80054b8:	4861      	ldr	r0, [pc, #388]	@ (8005640 <usbtransmit+0x23c>)
					usbtransmiten=0;
 80054ba:	4d62      	ldr	r5, [pc, #392]	@ (8005644 <usbtransmit+0x240>)
					usbstate=USBSTATEFINISH;
 80054bc:	4c62      	ldr	r4, [pc, #392]	@ (8005648 <usbtransmit+0x244>)
					usbindexsecteur=0;
 80054be:	4963      	ldr	r1, [pc, #396]	@ (800564c <usbtransmit+0x248>)
							usbindexpage=0;
 80054c0:	4a63      	ldr	r2, [pc, #396]	@ (8005650 <usbtransmit+0x24c>)
					osThreadSuspend(USBTRANSMITHandle);
 80054c2:	6800      	ldr	r0, [r0, #0]
					usbtransmiten=0;
 80054c4:	2300      	movs	r3, #0
 80054c6:	602b      	str	r3, [r5, #0]
					usbstate=USBSTATEFINISH;
 80054c8:	2503      	movs	r5, #3
 80054ca:	7025      	strb	r5, [r4, #0]
					usbindexsecteur=0;
 80054cc:	600b      	str	r3, [r1, #0]
							usbindexpage=0;
 80054ce:	6013      	str	r3, [r2, #0]
}
 80054d0:	b003      	add	sp, #12
 80054d2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
					osThreadSuspend(USBTRANSMITHandle);
 80054d6:	f008 b847 	b.w	800d568 <osThreadSuspend>
		ssd1306_SetCursor(32,48);
 80054da:	2130      	movs	r1, #48	@ 0x30
 80054dc:	2020      	movs	r0, #32
 80054de:	f7fd fd3b 	bl	8002f58 <ssd1306_SetCursor>
		ssd1306_WriteString("finish",Font_7x10,White);
 80054e2:	4b55      	ldr	r3, [pc, #340]	@ (8005638 <usbtransmit+0x234>)
 80054e4:	485b      	ldr	r0, [pc, #364]	@ (8005654 <usbtransmit+0x250>)
 80054e6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80054ea:	2301      	movs	r3, #1
 80054ec:	e7e2      	b.n	80054b4 <usbtransmit+0xb0>
			SPIF_ReadSector(&hspif1,usbindexsecteur, (uint8_t  *)flashread, 2048, 0);
 80054ee:	4e57      	ldr	r6, [pc, #348]	@ (800564c <usbtransmit+0x248>)
 80054f0:	4a4e      	ldr	r2, [pc, #312]	@ (800562c <usbtransmit+0x228>)
 80054f2:	484d      	ldr	r0, [pc, #308]	@ (8005628 <usbtransmit+0x224>)
 80054f4:	2300      	movs	r3, #0
 80054f6:	9300      	str	r3, [sp, #0]
 80054f8:	6831      	ldr	r1, [r6, #0]
 80054fa:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80054fe:	f009 fc67 	bl	800edd0 <SPIF_ReadSector>
			CDC_Transmit_FS((char  * )flashread,2048);
 8005502:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8005506:	4849      	ldr	r0, [pc, #292]	@ (800562c <usbtransmit+0x228>)
 8005508:	f009 fcfa 	bl	800ef00 <CDC_Transmit_FS>
			percentage((float) (usbindexsecteur*16*100)/pagenumber);
 800550c:	6833      	ldr	r3, [r6, #0]
 800550e:	ed94 7a00 	vldr	s14, [r4]
 8005512:	f44f 62c8 	mov.w	r2, #1600	@ 0x640
 8005516:	fb02 f303 	mul.w	r3, r2, r3
 800551a:	ee07 3a90 	vmov	s15, r3
 800551e:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8005522:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005526:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800552a:	f7fd ff29 	bl	8003380 <percentage>
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 800552e:	6822      	ldr	r2, [r4, #0]
			usbindexsecteur++;
 8005530:	6833      	ldr	r3, [r6, #0]
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005532:	2a00      	cmp	r2, #0
			usbindexsecteur++;
 8005534:	f103 0301 	add.w	r3, r3, #1
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005538:	bfb8      	it	lt
 800553a:	320f      	addlt	r2, #15
 800553c:	ebb3 1f22 	cmp.w	r3, r2, asr #4
			usbindexsecteur++;
 8005540:	6033      	str	r3, [r6, #0]
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005542:	d1a0      	bne.n	8005486 <usbtransmit+0x82>
 8005544:	e79c      	b.n	8005480 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,(usbindexsecteur*16+usbindexpage), (uint8_t  *)flashread, 256, 0);
 8005546:	4e42      	ldr	r6, [pc, #264]	@ (8005650 <usbtransmit+0x24c>)
 8005548:	4f40      	ldr	r7, [pc, #256]	@ (800564c <usbtransmit+0x248>)
 800554a:	6833      	ldr	r3, [r6, #0]
 800554c:	6839      	ldr	r1, [r7, #0]
 800554e:	4a37      	ldr	r2, [pc, #220]	@ (800562c <usbtransmit+0x228>)
 8005550:	4835      	ldr	r0, [pc, #212]	@ (8005628 <usbtransmit+0x224>)
 8005552:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 8005556:	2300      	movs	r3, #0
 8005558:	9300      	str	r3, [sp, #0]
 800555a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800555e:	f009 fc15 	bl	800ed8c <SPIF_ReadPage>
		CDC_Transmit_FS((char  * )flashread,256);
 8005562:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8005566:	4831      	ldr	r0, [pc, #196]	@ (800562c <usbtransmit+0x228>)
 8005568:	f009 fcca 	bl	800ef00 <CDC_Transmit_FS>
		percentage((float) ((usbindexsecteur*16+usbindexpage)*100)/pagenumber);
 800556c:	683a      	ldr	r2, [r7, #0]
 800556e:	6833      	ldr	r3, [r6, #0]
 8005570:	edd4 7a00 	vldr	s15, [r4]
 8005574:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 8005578:	2264      	movs	r2, #100	@ 0x64
 800557a:	fb02 f303 	mul.w	r3, r2, r3
 800557e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8005582:	ee07 3a90 	vmov	s15, r3
 8005586:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800558a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800558e:	f7fd fef7 	bl	8003380 <percentage>
		usbindexpage++;
 8005592:	6833      	ldr	r3, [r6, #0]
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 8005594:	683a      	ldr	r2, [r7, #0]
 8005596:	6821      	ldr	r1, [r4, #0]
		usbindexpage++;
 8005598:	3301      	adds	r3, #1
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 800559a:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 800559e:	428a      	cmp	r2, r1
		usbindexpage++;
 80055a0:	6033      	str	r3, [r6, #0]
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 80055a2:	f47f af70 	bne.w	8005486 <usbtransmit+0x82>
 80055a6:	e76b      	b.n	8005480 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,usbindexpage, (uint8_t  *)flashread, 256, 0);
 80055a8:	4e29      	ldr	r6, [pc, #164]	@ (8005650 <usbtransmit+0x24c>)
 80055aa:	4a20      	ldr	r2, [pc, #128]	@ (800562c <usbtransmit+0x228>)
 80055ac:	481e      	ldr	r0, [pc, #120]	@ (8005628 <usbtransmit+0x224>)
 80055ae:	2300      	movs	r3, #0
 80055b0:	9300      	str	r3, [sp, #0]
 80055b2:	6831      	ldr	r1, [r6, #0]
 80055b4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80055b8:	f009 fbe8 	bl	800ed8c <SPIF_ReadPage>
		CDC_Transmit_FS((char  * )flashread,256);
 80055bc:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80055c0:	481a      	ldr	r0, [pc, #104]	@ (800562c <usbtransmit+0x228>)
 80055c2:	f009 fc9d 	bl	800ef00 <CDC_Transmit_FS>
		percentage((float) (usbindexpage*100)/pagenumber);
 80055c6:	6833      	ldr	r3, [r6, #0]
 80055c8:	ed94 7a00 	vldr	s14, [r4]
 80055cc:	2264      	movs	r2, #100	@ 0x64
 80055ce:	fb02 f303 	mul.w	r3, r2, r3
 80055d2:	ee07 3a90 	vmov	s15, r3
 80055d6:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 80055da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055de:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80055e2:	f7fd fecd 	bl	8003380 <percentage>
		usbindexpage++;
 80055e6:	6833      	ldr	r3, [r6, #0]
		if(usbindexpage==pagenumber){
 80055e8:	6822      	ldr	r2, [r4, #0]
		usbindexpage++;
 80055ea:	3301      	adds	r3, #1
		if(usbindexpage==pagenumber){
 80055ec:	4293      	cmp	r3, r2
		usbindexpage++;
 80055ee:	6033      	str	r3, [r6, #0]
		if(usbindexpage==pagenumber){
 80055f0:	f47f af49 	bne.w	8005486 <usbtransmit+0x82>
 80055f4:	e744      	b.n	8005480 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
 80055f6:	4e0b      	ldr	r6, [pc, #44]	@ (8005624 <usbtransmit+0x220>)
 80055f8:	6821      	ldr	r1, [r4, #0]
 80055fa:	6833      	ldr	r3, [r6, #0]
 80055fc:	480a      	ldr	r0, [pc, #40]	@ (8005628 <usbtransmit+0x224>)
 80055fe:	2200      	movs	r2, #0
 8005600:	9200      	str	r2, [sp, #0]
 8005602:	4a0a      	ldr	r2, [pc, #40]	@ (800562c <usbtransmit+0x228>)
 8005604:	f009 fbc2 	bl	800ed8c <SPIF_ReadPage>
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
 8005608:	8831      	ldrh	r1, [r6, #0]
 800560a:	4808      	ldr	r0, [pc, #32]	@ (800562c <usbtransmit+0x228>)
 800560c:	f009 fc78 	bl	800ef00 <CDC_Transmit_FS>
 8005610:	e72a      	b.n	8005468 <usbtransmit+0x64>
 8005612:	bf00      	nop
 8005614:	200006b8 	.word	0x200006b8
 8005618:	2000002c 	.word	0x2000002c
 800561c:	200017f8 	.word	0x200017f8
 8005620:	08016238 	.word	0x08016238
 8005624:	200006bc 	.word	0x200006bc
 8005628:	20000fd4 	.word	0x20000fd4
 800562c:	200006c0 	.word	0x200006c0
 8005630:	080162ac 	.word	0x080162ac
 8005634:	20000640 	.word	0x20000640
 8005638:	20000024 	.word	0x20000024
 800563c:	080162c4 	.word	0x080162c4
 8005640:	200003f0 	.word	0x200003f0
 8005644:	20000618 	.word	0x20000618
 8005648:	2000106c 	.word	0x2000106c
 800564c:	200017fc 	.word	0x200017fc
 8005650:	20001800 	.word	0x20001800
 8005654:	080162bc 	.word	0x080162bc

08005658 <CopyDataInit>:
 8005658:	58d4      	ldr	r4, [r2, r3]
 800565a:	50c4      	str	r4, [r0, r3]
 800565c:	3304      	adds	r3, #4

0800565e <LoopCopyDataInit>:
 800565e:	18c4      	adds	r4, r0, r3
 8005660:	428c      	cmp	r4, r1
 8005662:	d3f9      	bcc.n	8005658 <CopyDataInit>
 8005664:	4770      	bx	lr

08005666 <FillZerobss>:
 8005666:	6003      	str	r3, [r0, #0]
 8005668:	3004      	adds	r0, #4

0800566a <LoopFillZerobss>:
 800566a:	4288      	cmp	r0, r1
 800566c:	d3fb      	bcc.n	8005666 <FillZerobss>
 800566e:	4770      	bx	lr

08005670 <Reset_Handler>:
 8005670:	480c      	ldr	r0, [pc, #48]	@ (80056a4 <LoopForever+0x2>)
 8005672:	4685      	mov	sp, r0
 8005674:	f7ff fcb4 	bl	8004fe0 <SystemInit>
 8005678:	480b      	ldr	r0, [pc, #44]	@ (80056a8 <LoopForever+0x6>)
 800567a:	490c      	ldr	r1, [pc, #48]	@ (80056ac <LoopForever+0xa>)
 800567c:	4a0c      	ldr	r2, [pc, #48]	@ (80056b0 <LoopForever+0xe>)
 800567e:	2300      	movs	r3, #0
 8005680:	f7ff ffed 	bl	800565e <LoopCopyDataInit>
 8005684:	480b      	ldr	r0, [pc, #44]	@ (80056b4 <LoopForever+0x12>)
 8005686:	490c      	ldr	r1, [pc, #48]	@ (80056b8 <LoopForever+0x16>)
 8005688:	4a0c      	ldr	r2, [pc, #48]	@ (80056bc <LoopForever+0x1a>)
 800568a:	2300      	movs	r3, #0
 800568c:	f7ff ffe7 	bl	800565e <LoopCopyDataInit>
 8005690:	480b      	ldr	r0, [pc, #44]	@ (80056c0 <LoopForever+0x1e>)
 8005692:	490c      	ldr	r1, [pc, #48]	@ (80056c4 <LoopForever+0x22>)
 8005694:	2300      	movs	r3, #0
 8005696:	f7ff ffe8 	bl	800566a <LoopFillZerobss>
 800569a:	f00a ff4d 	bl	8010538 <__libc_init_array>
 800569e:	f7fc fce3 	bl	8002068 <main>

080056a2 <LoopForever>:
 80056a2:	e7fe      	b.n	80056a2 <LoopForever>
 80056a4:	20030000 	.word	0x20030000
 80056a8:	20000008 	.word	0x20000008
 80056ac:	200002fc 	.word	0x200002fc
 80056b0:	08018a40 	.word	0x08018a40
 80056b4:	20030000 	.word	0x20030000
 80056b8:	20030000 	.word	0x20030000
 80056bc:	08018d34 	.word	0x08018d34
 80056c0:	20000300 	.word	0x20000300
 80056c4:	20005b94 	.word	0x20005b94

080056c8 <ADC1_IRQHandler>:
 80056c8:	e7fe      	b.n	80056c8 <ADC1_IRQHandler>
	...

080056cc <HAL_MspDeInit>:
 80056cc:	4770      	bx	lr
 80056ce:	bf00      	nop

080056d0 <HAL_DeInit>:
 80056d0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80056d4:	f04f 32ff 	mov.w	r2, #4294967295
 80056d8:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80056da:	b510      	push	{r4, lr}
 80056dc:	639a      	str	r2, [r3, #56]	@ 0x38
 80056de:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 80056e0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80056e2:	2400      	movs	r4, #0
 80056e4:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80056e6:	639c      	str	r4, [r3, #56]	@ 0x38
 80056e8:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 80056ea:	63dc      	str	r4, [r3, #60]	@ 0x3c
 80056ec:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80056ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80056f0:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80056f2:	641c      	str	r4, [r3, #64]	@ 0x40
 80056f4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80056f6:	645a      	str	r2, [r3, #68]	@ 0x44
 80056f8:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80056fa:	645c      	str	r4, [r3, #68]	@ 0x44
 80056fc:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 80056fe:	629a      	str	r2, [r3, #40]	@ 0x28
 8005700:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 8005702:	629c      	str	r4, [r3, #40]	@ 0x28
 8005704:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8005706:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005708:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800570a:	62dc      	str	r4, [r3, #44]	@ 0x2c
 800570c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800570e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005710:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005712:	631c      	str	r4, [r3, #48]	@ 0x30
 8005714:	f7ff ffda 	bl	80056cc <HAL_MspDeInit>
 8005718:	4620      	mov	r0, r4
 800571a:	bd10      	pop	{r4, pc}

0800571c <HAL_Init>:
 800571c:	4a0a      	ldr	r2, [pc, #40]	@ (8005748 <HAL_Init+0x2c>)
 800571e:	6813      	ldr	r3, [r2, #0]
 8005720:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005724:	b510      	push	{r4, lr}
 8005726:	2003      	movs	r0, #3
 8005728:	6013      	str	r3, [r2, #0]
 800572a:	f000 fc4b 	bl	8005fc4 <HAL_NVIC_SetPriorityGrouping>
 800572e:	200f      	movs	r0, #15
 8005730:	f7ff fae8 	bl	8004d04 <HAL_InitTick>
 8005734:	b110      	cbz	r0, 800573c <HAL_Init+0x20>
 8005736:	2401      	movs	r4, #1
 8005738:	4620      	mov	r0, r4
 800573a:	bd10      	pop	{r4, pc}
 800573c:	4604      	mov	r4, r0
 800573e:	f7ff fac3 	bl	8004cc8 <HAL_MspInit>
 8005742:	4620      	mov	r0, r4
 8005744:	bd10      	pop	{r4, pc}
 8005746:	bf00      	nop
 8005748:	58004000 	.word	0x58004000

0800574c <HAL_IncTick>:
 800574c:	4a03      	ldr	r2, [pc, #12]	@ (800575c <HAL_IncTick+0x10>)
 800574e:	4b04      	ldr	r3, [pc, #16]	@ (8005760 <HAL_IncTick+0x14>)
 8005750:	6811      	ldr	r1, [r2, #0]
 8005752:	781b      	ldrb	r3, [r3, #0]
 8005754:	440b      	add	r3, r1
 8005756:	6013      	str	r3, [r2, #0]
 8005758:	4770      	bx	lr
 800575a:	bf00      	nop
 800575c:	20001804 	.word	0x20001804
 8005760:	20000038 	.word	0x20000038

08005764 <HAL_GetTick>:
 8005764:	4b01      	ldr	r3, [pc, #4]	@ (800576c <HAL_GetTick+0x8>)
 8005766:	6818      	ldr	r0, [r3, #0]
 8005768:	4770      	bx	lr
 800576a:	bf00      	nop
 800576c:	20001804 	.word	0x20001804

08005770 <HAL_GetTickPrio>:
 8005770:	4b01      	ldr	r3, [pc, #4]	@ (8005778 <HAL_GetTickPrio+0x8>)
 8005772:	6818      	ldr	r0, [r3, #0]
 8005774:	4770      	bx	lr
 8005776:	bf00      	nop
 8005778:	2000003c 	.word	0x2000003c

0800577c <HAL_Delay>:
 800577c:	b538      	push	{r3, r4, r5, lr}
 800577e:	4604      	mov	r4, r0
 8005780:	f7ff fff0 	bl	8005764 <HAL_GetTick>
 8005784:	1c63      	adds	r3, r4, #1
 8005786:	4605      	mov	r5, r0
 8005788:	d002      	beq.n	8005790 <HAL_Delay+0x14>
 800578a:	4b04      	ldr	r3, [pc, #16]	@ (800579c <HAL_Delay+0x20>)
 800578c:	781b      	ldrb	r3, [r3, #0]
 800578e:	441c      	add	r4, r3
 8005790:	f7ff ffe8 	bl	8005764 <HAL_GetTick>
 8005794:	1b40      	subs	r0, r0, r5
 8005796:	42a0      	cmp	r0, r4
 8005798:	d3fa      	bcc.n	8005790 <HAL_Delay+0x14>
 800579a:	bd38      	pop	{r3, r4, r5, pc}
 800579c:	20000038 	.word	0x20000038

080057a0 <HAL_ADC_Init>:
 80057a0:	b530      	push	{r4, r5, lr}
 80057a2:	b083      	sub	sp, #12
 80057a4:	2300      	movs	r3, #0
 80057a6:	9301      	str	r3, [sp, #4]
 80057a8:	2800      	cmp	r0, #0
 80057aa:	f000 8087 	beq.w	80058bc <HAL_ADC_Init+0x11c>
 80057ae:	6d45      	ldr	r5, [r0, #84]	@ 0x54
 80057b0:	4604      	mov	r4, r0
 80057b2:	2d00      	cmp	r5, #0
 80057b4:	f000 8087 	beq.w	80058c6 <HAL_ADC_Init+0x126>
 80057b8:	6822      	ldr	r2, [r4, #0]
 80057ba:	6893      	ldr	r3, [r2, #8]
 80057bc:	0098      	lsls	r0, r3, #2
 80057be:	d505      	bpl.n	80057cc <HAL_ADC_Init+0x2c>
 80057c0:	6893      	ldr	r3, [r2, #8]
 80057c2:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 80057c6:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80057ca:	6093      	str	r3, [r2, #8]
 80057cc:	6893      	ldr	r3, [r2, #8]
 80057ce:	00d9      	lsls	r1, r3, #3
 80057d0:	d419      	bmi.n	8005806 <HAL_ADC_Init+0x66>
 80057d2:	4b59      	ldr	r3, [pc, #356]	@ (8005938 <HAL_ADC_Init+0x198>)
 80057d4:	4859      	ldr	r0, [pc, #356]	@ (800593c <HAL_ADC_Init+0x19c>)
 80057d6:	681b      	ldr	r3, [r3, #0]
 80057d8:	6891      	ldr	r1, [r2, #8]
 80057da:	099b      	lsrs	r3, r3, #6
 80057dc:	fba0 0303 	umull	r0, r3, r0, r3
 80057e0:	f021 4110 	bic.w	r1, r1, #2415919104	@ 0x90000000
 80057e4:	099b      	lsrs	r3, r3, #6
 80057e6:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80057ea:	3301      	adds	r3, #1
 80057ec:	005b      	lsls	r3, r3, #1
 80057ee:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80057f2:	6091      	str	r1, [r2, #8]
 80057f4:	9301      	str	r3, [sp, #4]
 80057f6:	9b01      	ldr	r3, [sp, #4]
 80057f8:	b12b      	cbz	r3, 8005806 <HAL_ADC_Init+0x66>
 80057fa:	9b01      	ldr	r3, [sp, #4]
 80057fc:	3b01      	subs	r3, #1
 80057fe:	9301      	str	r3, [sp, #4]
 8005800:	9b01      	ldr	r3, [sp, #4]
 8005802:	2b00      	cmp	r3, #0
 8005804:	d1f9      	bne.n	80057fa <HAL_ADC_Init+0x5a>
 8005806:	6893      	ldr	r3, [r2, #8]
 8005808:	00db      	lsls	r3, r3, #3
 800580a:	d45a      	bmi.n	80058c2 <HAL_ADC_Init+0x122>
 800580c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800580e:	f043 0310 	orr.w	r3, r3, #16
 8005812:	6563      	str	r3, [r4, #84]	@ 0x54
 8005814:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005816:	2001      	movs	r0, #1
 8005818:	4303      	orrs	r3, r0
 800581a:	65a3      	str	r3, [r4, #88]	@ 0x58
 800581c:	6893      	ldr	r3, [r2, #8]
 800581e:	f013 0f04 	tst.w	r3, #4
 8005822:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005824:	d146      	bne.n	80058b4 <HAL_ADC_Init+0x114>
 8005826:	06dd      	lsls	r5, r3, #27
 8005828:	d444      	bmi.n	80058b4 <HAL_ADC_Init+0x114>
 800582a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800582c:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8005830:	f043 0302 	orr.w	r3, r3, #2
 8005834:	6563      	str	r3, [r4, #84]	@ 0x54
 8005836:	6893      	ldr	r3, [r2, #8]
 8005838:	07d9      	lsls	r1, r3, #31
 800583a:	d40a      	bmi.n	8005852 <HAL_ADC_Init+0xb2>
 800583c:	4b40      	ldr	r3, [pc, #256]	@ (8005940 <HAL_ADC_Init+0x1a0>)
 800583e:	689b      	ldr	r3, [r3, #8]
 8005840:	07db      	lsls	r3, r3, #31
 8005842:	d406      	bmi.n	8005852 <HAL_ADC_Init+0xb2>
 8005844:	493f      	ldr	r1, [pc, #252]	@ (8005944 <HAL_ADC_Init+0x1a4>)
 8005846:	6865      	ldr	r5, [r4, #4]
 8005848:	688b      	ldr	r3, [r1, #8]
 800584a:	f423 137c 	bic.w	r3, r3, #4128768	@ 0x3f0000
 800584e:	432b      	orrs	r3, r5
 8005850:	608b      	str	r3, [r1, #8]
 8005852:	68e5      	ldr	r5, [r4, #12]
 8005854:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005856:	f894 1020 	ldrb.w	r1, [r4, #32]
 800585a:	432b      	orrs	r3, r5
 800585c:	68a5      	ldr	r5, [r4, #8]
 800585e:	432b      	orrs	r3, r5
 8005860:	7e65      	ldrb	r5, [r4, #25]
 8005862:	2901      	cmp	r1, #1
 8005864:	ea43 3345 	orr.w	r3, r3, r5, lsl #13
 8005868:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800586c:	d047      	beq.n	80058fe <HAL_ADC_Init+0x15e>
 800586e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8005870:	b121      	cbz	r1, 800587c <HAL_ADC_Init+0xdc>
 8005872:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
 8005874:	f401 7170 	and.w	r1, r1, #960	@ 0x3c0
 8005878:	4329      	orrs	r1, r5
 800587a:	430b      	orrs	r3, r1
 800587c:	68d5      	ldr	r5, [r2, #12]
 800587e:	4932      	ldr	r1, [pc, #200]	@ (8005948 <HAL_ADC_Init+0x1a8>)
 8005880:	4029      	ands	r1, r5
 8005882:	4319      	orrs	r1, r3
 8005884:	60d1      	str	r1, [r2, #12]
 8005886:	6891      	ldr	r1, [r2, #8]
 8005888:	6893      	ldr	r3, [r2, #8]
 800588a:	f001 0104 	and.w	r1, r1, #4
 800588e:	f003 0308 	and.w	r3, r3, #8
 8005892:	430b      	orrs	r3, r1
 8005894:	d01d      	beq.n	80058d2 <HAL_ADC_Init+0x132>
 8005896:	6923      	ldr	r3, [r4, #16]
 8005898:	2b01      	cmp	r3, #1
 800589a:	d035      	beq.n	8005908 <HAL_ADC_Init+0x168>
 800589c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800589e:	f023 030f 	bic.w	r3, r3, #15
 80058a2:	6313      	str	r3, [r2, #48]	@ 0x30
 80058a4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80058a6:	f023 0303 	bic.w	r3, r3, #3
 80058aa:	f043 0301 	orr.w	r3, r3, #1
 80058ae:	6563      	str	r3, [r4, #84]	@ 0x54
 80058b0:	b003      	add	sp, #12
 80058b2:	bd30      	pop	{r4, r5, pc}
 80058b4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80058b6:	f043 0310 	orr.w	r3, r3, #16
 80058ba:	6563      	str	r3, [r4, #84]	@ 0x54
 80058bc:	2001      	movs	r0, #1
 80058be:	b003      	add	sp, #12
 80058c0:	bd30      	pop	{r4, r5, pc}
 80058c2:	2000      	movs	r0, #0
 80058c4:	e7aa      	b.n	800581c <HAL_ADC_Init+0x7c>
 80058c6:	f7fb fdc3 	bl	8001450 <HAL_ADC_MspInit>
 80058ca:	65a5      	str	r5, [r4, #88]	@ 0x58
 80058cc:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 80058d0:	e772      	b.n	80057b8 <HAL_ADC_Init+0x18>
 80058d2:	68d1      	ldr	r1, [r2, #12]
 80058d4:	f894 3030 	ldrb.w	r3, [r4, #48]	@ 0x30
 80058d8:	7e25      	ldrb	r5, [r4, #24]
 80058da:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
 80058de:	005b      	lsls	r3, r3, #1
 80058e0:	f021 0102 	bic.w	r1, r1, #2
 80058e4:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
 80058e8:	430b      	orrs	r3, r1
 80058ea:	60d3      	str	r3, [r2, #12]
 80058ec:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80058f0:	2b01      	cmp	r3, #1
 80058f2:	d011      	beq.n	8005918 <HAL_ADC_Init+0x178>
 80058f4:	6913      	ldr	r3, [r2, #16]
 80058f6:	f023 0301 	bic.w	r3, r3, #1
 80058fa:	6113      	str	r3, [r2, #16]
 80058fc:	e7cb      	b.n	8005896 <HAL_ADC_Init+0xf6>
 80058fe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005900:	3901      	subs	r1, #1
 8005902:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
 8005906:	e7b2      	b.n	800586e <HAL_ADC_Init+0xce>
 8005908:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 800590a:	69e3      	ldr	r3, [r4, #28]
 800590c:	f021 010f 	bic.w	r1, r1, #15
 8005910:	3b01      	subs	r3, #1
 8005912:	430b      	orrs	r3, r1
 8005914:	6313      	str	r3, [r2, #48]	@ 0x30
 8005916:	e7c5      	b.n	80058a4 <HAL_ADC_Init+0x104>
 8005918:	6911      	ldr	r1, [r2, #16]
 800591a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800591c:	6c25      	ldr	r5, [r4, #64]	@ 0x40
 800591e:	f36f 018a 	bfc	r1, #2, #9
 8005922:	432b      	orrs	r3, r5
 8005924:	430b      	orrs	r3, r1
 8005926:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8005928:	430b      	orrs	r3, r1
 800592a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800592c:	430b      	orrs	r3, r1
 800592e:	f043 0301 	orr.w	r3, r3, #1
 8005932:	6113      	str	r3, [r2, #16]
 8005934:	e7af      	b.n	8005896 <HAL_ADC_Init+0xf6>
 8005936:	bf00      	nop
 8005938:	20000034 	.word	0x20000034
 800593c:	053e2d63 	.word	0x053e2d63
 8005940:	50040000 	.word	0x50040000
 8005944:	50040300 	.word	0x50040300
 8005948:	fff0c007 	.word	0xfff0c007

0800594c <HAL_ADC_ConvHalfCpltCallback>:
 800594c:	4770      	bx	lr
 800594e:	bf00      	nop

08005950 <ADC_DMAHalfConvCplt>:
 8005950:	b508      	push	{r3, lr}
 8005952:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8005954:	f7ff fffa 	bl	800594c <HAL_ADC_ConvHalfCpltCallback>
 8005958:	bd08      	pop	{r3, pc}
 800595a:	bf00      	nop

0800595c <HAL_ADC_ErrorCallback>:
 800595c:	4770      	bx	lr
 800595e:	bf00      	nop

08005960 <ADC_DMAConvCplt>:
 8005960:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005962:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005964:	f012 0f50 	tst.w	r2, #80	@ 0x50
 8005968:	b510      	push	{r4, lr}
 800596a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800596c:	d11d      	bne.n	80059aa <ADC_DMAConvCplt+0x4a>
 800596e:	6819      	ldr	r1, [r3, #0]
 8005970:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005974:	655a      	str	r2, [r3, #84]	@ 0x54
 8005976:	680a      	ldr	r2, [r1, #0]
 8005978:	f012 0f08 	tst.w	r2, #8
 800597c:	68ca      	ldr	r2, [r1, #12]
 800597e:	d01b      	beq.n	80059b8 <ADC_DMAConvCplt+0x58>
 8005980:	f412 6f40 	tst.w	r2, #3072	@ 0xc00
 8005984:	d10d      	bne.n	80059a2 <ADC_DMAConvCplt+0x42>
 8005986:	68ca      	ldr	r2, [r1, #12]
 8005988:	0494      	lsls	r4, r2, #18
 800598a:	d40a      	bmi.n	80059a2 <ADC_DMAConvCplt+0x42>
 800598c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800598e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005992:	655a      	str	r2, [r3, #84]	@ 0x54
 8005994:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005996:	04d1      	lsls	r1, r2, #19
 8005998:	d403      	bmi.n	80059a2 <ADC_DMAConvCplt+0x42>
 800599a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800599c:	f042 0201 	orr.w	r2, r2, #1
 80059a0:	655a      	str	r2, [r3, #84]	@ 0x54
 80059a2:	4618      	mov	r0, r3
 80059a4:	f7fb fda4 	bl	80014f0 <HAL_ADC_ConvCpltCallback>
 80059a8:	bd10      	pop	{r4, pc}
 80059aa:	06d2      	lsls	r2, r2, #27
 80059ac:	d40a      	bmi.n	80059c4 <ADC_DMAConvCplt+0x64>
 80059ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80059b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80059b4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80059b6:	4718      	bx	r3
 80059b8:	0790      	lsls	r0, r2, #30
 80059ba:	d5e7      	bpl.n	800598c <ADC_DMAConvCplt+0x2c>
 80059bc:	4618      	mov	r0, r3
 80059be:	f7fb fd97 	bl	80014f0 <HAL_ADC_ConvCpltCallback>
 80059c2:	e7f1      	b.n	80059a8 <ADC_DMAConvCplt+0x48>
 80059c4:	4618      	mov	r0, r3
 80059c6:	f7ff ffc9 	bl	800595c <HAL_ADC_ErrorCallback>
 80059ca:	bd10      	pop	{r4, pc}

080059cc <ADC_DMAError>:
 80059cc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80059ce:	b508      	push	{r3, lr}
 80059d0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80059d2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80059d6:	6543      	str	r3, [r0, #84]	@ 0x54
 80059d8:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 80059da:	f043 0304 	orr.w	r3, r3, #4
 80059de:	6583      	str	r3, [r0, #88]	@ 0x58
 80059e0:	f7ff ffbc 	bl	800595c <HAL_ADC_ErrorCallback>
 80059e4:	bd08      	pop	{r3, pc}
 80059e6:	bf00      	nop

080059e8 <HAL_ADC_ConfigChannel>:
 80059e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059ea:	f890 2050 	ldrb.w	r2, [r0, #80]	@ 0x50
 80059ee:	b083      	sub	sp, #12
 80059f0:	4603      	mov	r3, r0
 80059f2:	2a01      	cmp	r2, #1
 80059f4:	f04f 0000 	mov.w	r0, #0
 80059f8:	9001      	str	r0, [sp, #4]
 80059fa:	f000 80e9 	beq.w	8005bd0 <HAL_ADC_ConfigChannel+0x1e8>
 80059fe:	2001      	movs	r0, #1
 8005a00:	681a      	ldr	r2, [r3, #0]
 8005a02:	f883 0050 	strb.w	r0, [r3, #80]	@ 0x50
 8005a06:	6890      	ldr	r0, [r2, #8]
 8005a08:	0745      	lsls	r5, r0, #29
 8005a0a:	d509      	bpl.n	8005a20 <HAL_ADC_ConfigChannel+0x38>
 8005a0c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005a0e:	f042 0220 	orr.w	r2, r2, #32
 8005a12:	655a      	str	r2, [r3, #84]	@ 0x54
 8005a14:	2001      	movs	r0, #1
 8005a16:	2200      	movs	r2, #0
 8005a18:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005a1c:	b003      	add	sp, #12
 8005a1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a20:	6848      	ldr	r0, [r1, #4]
 8005a22:	ea4f 1e90 	mov.w	lr, r0, lsr #6
 8005a26:	f000 0c1f 	and.w	ip, r0, #31
 8005a2a:	f00e 0e0c 	and.w	lr, lr, #12
 8005a2e:	6808      	ldr	r0, [r1, #0]
 8005a30:	f102 0430 	add.w	r4, r2, #48	@ 0x30
 8005a34:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005a38:	f854 500e 	ldr.w	r5, [r4, lr]
 8005a3c:	261f      	movs	r6, #31
 8005a3e:	fa00 f00c 	lsl.w	r0, r0, ip
 8005a42:	fa06 fc0c 	lsl.w	ip, r6, ip
 8005a46:	ea25 0c0c 	bic.w	ip, r5, ip
 8005a4a:	ea40 000c 	orr.w	r0, r0, ip
 8005a4e:	f844 000e 	str.w	r0, [r4, lr]
 8005a52:	6890      	ldr	r0, [r2, #8]
 8005a54:	f010 0f04 	tst.w	r0, #4
 8005a58:	6890      	ldr	r0, [r2, #8]
 8005a5a:	d101      	bne.n	8005a60 <HAL_ADC_ConfigChannel+0x78>
 8005a5c:	0704      	lsls	r4, r0, #28
 8005a5e:	d538      	bpl.n	8005ad2 <HAL_ADC_ConfigChannel+0xea>
 8005a60:	6890      	ldr	r0, [r2, #8]
 8005a62:	07c0      	lsls	r0, r0, #31
 8005a64:	d433      	bmi.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005a66:	68ce      	ldr	r6, [r1, #12]
 8005a68:	680c      	ldr	r4, [r1, #0]
 8005a6a:	48be      	ldr	r0, [pc, #760]	@ (8005d64 <HAL_ADC_ConfigChannel+0x37c>)
 8005a6c:	f8d2 50b0 	ldr.w	r5, [r2, #176]	@ 0xb0
 8005a70:	f006 0718 	and.w	r7, r6, #24
 8005a74:	40f8      	lsrs	r0, r7
 8005a76:	f3c4 0712 	ubfx	r7, r4, #0, #19
 8005a7a:	4020      	ands	r0, r4
 8005a7c:	ea25 0507 	bic.w	r5, r5, r7
 8005a80:	4328      	orrs	r0, r5
 8005a82:	f8c2 00b0 	str.w	r0, [r2, #176]	@ 0xb0
 8005a86:	48b8      	ldr	r0, [pc, #736]	@ (8005d68 <HAL_ADC_ConfigChannel+0x380>)
 8005a88:	4286      	cmp	r6, r0
 8005a8a:	d051      	beq.n	8005b30 <HAL_ADC_ConfigChannel+0x148>
 8005a8c:	49b7      	ldr	r1, [pc, #732]	@ (8005d6c <HAL_ADC_ConfigChannel+0x384>)
 8005a8e:	420c      	tst	r4, r1
 8005a90:	d01d      	beq.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005a92:	48b7      	ldr	r0, [pc, #732]	@ (8005d70 <HAL_ADC_ConfigChannel+0x388>)
 8005a94:	49b7      	ldr	r1, [pc, #732]	@ (8005d74 <HAL_ADC_ConfigChannel+0x38c>)
 8005a96:	6886      	ldr	r6, [r0, #8]
 8005a98:	688d      	ldr	r5, [r1, #8]
 8005a9a:	07ef      	lsls	r7, r5, #31
 8005a9c:	d4b6      	bmi.n	8005a0c <HAL_ADC_ConfigChannel+0x24>
 8005a9e:	4db6      	ldr	r5, [pc, #728]	@ (8005d78 <HAL_ADC_ConfigChannel+0x390>)
 8005aa0:	42ac      	cmp	r4, r5
 8005aa2:	f006 77e0 	and.w	r7, r6, #29360128	@ 0x1c00000
 8005aa6:	f000 80aa 	beq.w	8005bfe <HAL_ADC_ConfigChannel+0x216>
 8005aaa:	4db4      	ldr	r5, [pc, #720]	@ (8005d7c <HAL_ADC_ConfigChannel+0x394>)
 8005aac:	42ac      	cmp	r4, r5
 8005aae:	f000 816f 	beq.w	8005d90 <HAL_ADC_ConfigChannel+0x3a8>
 8005ab2:	4db3      	ldr	r5, [pc, #716]	@ (8005d80 <HAL_ADC_ConfigChannel+0x398>)
 8005ab4:	42ac      	cmp	r4, r5
 8005ab6:	d10a      	bne.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005ab8:	0274      	lsls	r4, r6, #9
 8005aba:	d408      	bmi.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005abc:	428a      	cmp	r2, r1
 8005abe:	d106      	bne.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005ac0:	6882      	ldr	r2, [r0, #8]
 8005ac2:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005ac6:	433a      	orrs	r2, r7
 8005ac8:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8005acc:	6082      	str	r2, [r0, #8]
 8005ace:	2000      	movs	r0, #0
 8005ad0:	e7a1      	b.n	8005a16 <HAL_ADC_ConfigChannel+0x2e>
 8005ad2:	680c      	ldr	r4, [r1, #0]
 8005ad4:	6888      	ldr	r0, [r1, #8]
 8005ad6:	0de5      	lsrs	r5, r4, #23
 8005ad8:	f005 0504 	and.w	r5, r5, #4
 8005adc:	f102 0614 	add.w	r6, r2, #20
 8005ae0:	f3c4 5404 	ubfx	r4, r4, #20, #5
 8005ae4:	fa00 f704 	lsl.w	r7, r0, r4
 8005ae8:	f04f 0c07 	mov.w	ip, #7
 8005aec:	5970      	ldr	r0, [r6, r5]
 8005aee:	fa0c f404 	lsl.w	r4, ip, r4
 8005af2:	ea20 0004 	bic.w	r0, r0, r4
 8005af6:	4338      	orrs	r0, r7
 8005af8:	5170      	str	r0, [r6, r5]
 8005afa:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 8005afe:	2d04      	cmp	r5, #4
 8005b00:	68d4      	ldr	r4, [r2, #12]
 8005b02:	f000 80a0 	beq.w	8005c46 <HAL_ADC_ConfigChannel+0x25e>
 8005b06:	f102 0660 	add.w	r6, r2, #96	@ 0x60
 8005b0a:	f3c4 04c1 	ubfx	r4, r4, #3, #2
 8005b0e:	0064      	lsls	r4, r4, #1
 8005b10:	f856 c025 	ldr.w	ip, [r6, r5, lsl #2]
 8005b14:	4f9b      	ldr	r7, [pc, #620]	@ (8005d84 <HAL_ADC_ConfigChannel+0x39c>)
 8005b16:	40a0      	lsls	r0, r4
 8005b18:	680c      	ldr	r4, [r1, #0]
 8005b1a:	ea0c 0707 	and.w	r7, ip, r7
 8005b1e:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
 8005b22:	433c      	orrs	r4, r7
 8005b24:	4320      	orrs	r0, r4
 8005b26:	f040 4000 	orr.w	r0, r0, #2147483648	@ 0x80000000
 8005b2a:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 8005b2e:	e797      	b.n	8005a60 <HAL_ADC_ConfigChannel+0x78>
 8005b30:	2f00      	cmp	r7, #0
 8005b32:	d050      	beq.n	8005bd6 <HAL_ADC_ConfigChannel+0x1ee>
 8005b34:	fa94 f0a4 	rbit	r0, r4
 8005b38:	2800      	cmp	r0, #0
 8005b3a:	f000 80b4 	beq.w	8005ca6 <HAL_ADC_ConfigChannel+0x2be>
 8005b3e:	fab0 f080 	clz	r0, r0
 8005b42:	3001      	adds	r0, #1
 8005b44:	f000 001f 	and.w	r0, r0, #31
 8005b48:	2809      	cmp	r0, #9
 8005b4a:	f240 80ac 	bls.w	8005ca6 <HAL_ADC_ConfigChannel+0x2be>
 8005b4e:	fa94 f0a4 	rbit	r0, r4
 8005b52:	2800      	cmp	r0, #0
 8005b54:	f000 8167 	beq.w	8005e26 <HAL_ADC_ConfigChannel+0x43e>
 8005b58:	fab0 f080 	clz	r0, r0
 8005b5c:	3001      	adds	r0, #1
 8005b5e:	0680      	lsls	r0, r0, #26
 8005b60:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
 8005b64:	fa94 f5a4 	rbit	r5, r4
 8005b68:	2d00      	cmp	r5, #0
 8005b6a:	f000 8166 	beq.w	8005e3a <HAL_ADC_ConfigChannel+0x452>
 8005b6e:	fab5 f585 	clz	r5, r5
 8005b72:	3501      	adds	r5, #1
 8005b74:	f005 051f 	and.w	r5, r5, #31
 8005b78:	2601      	movs	r6, #1
 8005b7a:	fa06 f505 	lsl.w	r5, r6, r5
 8005b7e:	4328      	orrs	r0, r5
 8005b80:	fa94 f4a4 	rbit	r4, r4
 8005b84:	2c00      	cmp	r4, #0
 8005b86:	f000 8156 	beq.w	8005e36 <HAL_ADC_ConfigChannel+0x44e>
 8005b8a:	fab4 f484 	clz	r4, r4
 8005b8e:	1c65      	adds	r5, r4, #1
 8005b90:	f005 051f 	and.w	r5, r5, #31
 8005b94:	2403      	movs	r4, #3
 8005b96:	f06f 061d 	mvn.w	r6, #29
 8005b9a:	fb14 6405 	smlabb	r4, r4, r5, r6
 8005b9e:	0524      	lsls	r4, r4, #20
 8005ba0:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
 8005ba4:	4320      	orrs	r0, r4
 8005ba6:	0dc5      	lsrs	r5, r0, #23
 8005ba8:	688c      	ldr	r4, [r1, #8]
 8005baa:	f005 0504 	and.w	r5, r5, #4
 8005bae:	f102 0614 	add.w	r6, r2, #20
 8005bb2:	f3c0 5004 	ubfx	r0, r0, #20, #5
 8005bb6:	fa04 f700 	lsl.w	r7, r4, r0
 8005bba:	f04f 0c07 	mov.w	ip, #7
 8005bbe:	5974      	ldr	r4, [r6, r5]
 8005bc0:	fa0c f000 	lsl.w	r0, ip, r0
 8005bc4:	ea24 0000 	bic.w	r0, r4, r0
 8005bc8:	4338      	orrs	r0, r7
 8005bca:	5170      	str	r0, [r6, r5]
 8005bcc:	680c      	ldr	r4, [r1, #0]
 8005bce:	e75d      	b.n	8005a8c <HAL_ADC_ConfigChannel+0xa4>
 8005bd0:	2002      	movs	r0, #2
 8005bd2:	b003      	add	sp, #12
 8005bd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005bd6:	0ea4      	lsrs	r4, r4, #26
 8005bd8:	3401      	adds	r4, #1
 8005bda:	f004 051f 	and.w	r5, r4, #31
 8005bde:	2001      	movs	r0, #1
 8005be0:	06a4      	lsls	r4, r4, #26
 8005be2:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
 8005be6:	40a8      	lsls	r0, r5
 8005be8:	2d09      	cmp	r5, #9
 8005bea:	ea40 0004 	orr.w	r0, r0, r4
 8005bee:	eb05 0445 	add.w	r4, r5, r5, lsl #1
 8005bf2:	d97d      	bls.n	8005cf0 <HAL_ADC_ConfigChannel+0x308>
 8005bf4:	3c1e      	subs	r4, #30
 8005bf6:	0524      	lsls	r4, r4, #20
 8005bf8:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
 8005bfc:	e7d2      	b.n	8005ba4 <HAL_ADC_ConfigChannel+0x1bc>
 8005bfe:	0236      	lsls	r6, r6, #8
 8005c00:	f53f af65 	bmi.w	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005c04:	428a      	cmp	r2, r1
 8005c06:	f47f af62 	bne.w	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005c0a:	6882      	ldr	r2, [r0, #8]
 8005c0c:	495e      	ldr	r1, [pc, #376]	@ (8005d88 <HAL_ADC_ConfigChannel+0x3a0>)
 8005c0e:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005c12:	433a      	orrs	r2, r7
 8005c14:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8005c18:	6082      	str	r2, [r0, #8]
 8005c1a:	680a      	ldr	r2, [r1, #0]
 8005c1c:	495b      	ldr	r1, [pc, #364]	@ (8005d8c <HAL_ADC_ConfigChannel+0x3a4>)
 8005c1e:	0992      	lsrs	r2, r2, #6
 8005c20:	fba1 1202 	umull	r1, r2, r1, r2
 8005c24:	0992      	lsrs	r2, r2, #6
 8005c26:	3201      	adds	r2, #1
 8005c28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005c2c:	0092      	lsls	r2, r2, #2
 8005c2e:	9201      	str	r2, [sp, #4]
 8005c30:	9a01      	ldr	r2, [sp, #4]
 8005c32:	2a00      	cmp	r2, #0
 8005c34:	f43f af4b 	beq.w	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005c38:	9a01      	ldr	r2, [sp, #4]
 8005c3a:	3a01      	subs	r2, #1
 8005c3c:	9201      	str	r2, [sp, #4]
 8005c3e:	9a01      	ldr	r2, [sp, #4]
 8005c40:	2a00      	cmp	r2, #0
 8005c42:	d1f9      	bne.n	8005c38 <HAL_ADC_ConfigChannel+0x250>
 8005c44:	e743      	b.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005c46:	6808      	ldr	r0, [r1, #0]
 8005c48:	6e14      	ldr	r4, [r2, #96]	@ 0x60
 8005c4a:	6e14      	ldr	r4, [r2, #96]	@ 0x60
 8005c4c:	f3c0 0512 	ubfx	r5, r0, #0, #19
 8005c50:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005c54:	2d00      	cmp	r5, #0
 8005c56:	d14d      	bne.n	8005cf4 <HAL_ADC_ConfigChannel+0x30c>
 8005c58:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005c5c:	4284      	cmp	r4, r0
 8005c5e:	f000 80cd 	beq.w	8005dfc <HAL_ADC_ConfigChannel+0x414>
 8005c62:	6e54      	ldr	r4, [r2, #100]	@ 0x64
 8005c64:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005c66:	f102 0460 	add.w	r4, r2, #96	@ 0x60
 8005c6a:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005c6e:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005c72:	4285      	cmp	r5, r0
 8005c74:	f000 80ad 	beq.w	8005dd2 <HAL_ADC_ConfigChannel+0x3ea>
 8005c78:	68a5      	ldr	r5, [r4, #8]
 8005c7a:	68a5      	ldr	r5, [r4, #8]
 8005c7c:	f104 0608 	add.w	r6, r4, #8
 8005c80:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005c84:	4285      	cmp	r5, r0
 8005c86:	f000 8091 	beq.w	8005dac <HAL_ADC_ConfigChannel+0x3c4>
 8005c8a:	68e5      	ldr	r5, [r4, #12]
 8005c8c:	68e5      	ldr	r5, [r4, #12]
 8005c8e:	f104 070c 	add.w	r7, r4, #12
 8005c92:	f3c5 6484 	ubfx	r4, r5, #26, #5
 8005c96:	42a0      	cmp	r0, r4
 8005c98:	f47f aee2 	bne.w	8005a60 <HAL_ADC_ConfigChannel+0x78>
 8005c9c:	6838      	ldr	r0, [r7, #0]
 8005c9e:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005ca2:	6038      	str	r0, [r7, #0]
 8005ca4:	e6dc      	b.n	8005a60 <HAL_ADC_ConfigChannel+0x78>
 8005ca6:	fa94 f0a4 	rbit	r0, r4
 8005caa:	2800      	cmp	r0, #0
 8005cac:	f000 80d1 	beq.w	8005e52 <HAL_ADC_ConfigChannel+0x46a>
 8005cb0:	fab0 f080 	clz	r0, r0
 8005cb4:	3001      	adds	r0, #1
 8005cb6:	0680      	lsls	r0, r0, #26
 8005cb8:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
 8005cbc:	fa94 f5a4 	rbit	r5, r4
 8005cc0:	2d00      	cmp	r5, #0
 8005cc2:	f000 80c4 	beq.w	8005e4e <HAL_ADC_ConfigChannel+0x466>
 8005cc6:	fab5 f585 	clz	r5, r5
 8005cca:	3501      	adds	r5, #1
 8005ccc:	f005 051f 	and.w	r5, r5, #31
 8005cd0:	2601      	movs	r6, #1
 8005cd2:	fa06 f505 	lsl.w	r5, r6, r5
 8005cd6:	4328      	orrs	r0, r5
 8005cd8:	fa94 f4a4 	rbit	r4, r4
 8005cdc:	2c00      	cmp	r4, #0
 8005cde:	f000 80b3 	beq.w	8005e48 <HAL_ADC_ConfigChannel+0x460>
 8005ce2:	fab4 f484 	clz	r4, r4
 8005ce6:	3401      	adds	r4, #1
 8005ce8:	f004 041f 	and.w	r4, r4, #31
 8005cec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005cf0:	0524      	lsls	r4, r4, #20
 8005cf2:	e757      	b.n	8005ba4 <HAL_ADC_ConfigChannel+0x1bc>
 8005cf4:	fa90 f5a0 	rbit	r5, r0
 8005cf8:	b11d      	cbz	r5, 8005d02 <HAL_ADC_ConfigChannel+0x31a>
 8005cfa:	fab5 f585 	clz	r5, r5
 8005cfe:	42ac      	cmp	r4, r5
 8005d00:	d07c      	beq.n	8005dfc <HAL_ADC_ConfigChannel+0x414>
 8005d02:	6e54      	ldr	r4, [r2, #100]	@ 0x64
 8005d04:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005d06:	f102 0460 	add.w	r4, r2, #96	@ 0x60
 8005d0a:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005d0e:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005d12:	fa90 f7a0 	rbit	r7, r0
 8005d16:	f104 0608 	add.w	r6, r4, #8
 8005d1a:	46b6      	mov	lr, r6
 8005d1c:	2f00      	cmp	r7, #0
 8005d1e:	f000 808e 	beq.w	8005e3e <HAL_ADC_ConfigChannel+0x456>
 8005d22:	fab7 f787 	clz	r7, r7
 8005d26:	42af      	cmp	r7, r5
 8005d28:	d055      	beq.n	8005dd6 <HAL_ADC_ConfigChannel+0x3ee>
 8005d2a:	6835      	ldr	r5, [r6, #0]
 8005d2c:	6835      	ldr	r5, [r6, #0]
 8005d2e:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005d32:	fa90 fca0 	rbit	ip, r0
 8005d36:	f104 070c 	add.w	r7, r4, #12
 8005d3a:	46be      	mov	lr, r7
 8005d3c:	f1bc 0f00 	cmp.w	ip, #0
 8005d40:	d074      	beq.n	8005e2c <HAL_ADC_ConfigChannel+0x444>
 8005d42:	fabc fc8c 	clz	ip, ip
 8005d46:	45ac      	cmp	ip, r5
 8005d48:	d032      	beq.n	8005db0 <HAL_ADC_ConfigChannel+0x3c8>
 8005d4a:	683c      	ldr	r4, [r7, #0]
 8005d4c:	683c      	ldr	r4, [r7, #0]
 8005d4e:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005d52:	fa90 f0a0 	rbit	r0, r0
 8005d56:	2800      	cmp	r0, #0
 8005d58:	f43f ae82 	beq.w	8005a60 <HAL_ADC_ConfigChannel+0x78>
 8005d5c:	fab0 f080 	clz	r0, r0
 8005d60:	e799      	b.n	8005c96 <HAL_ADC_ConfigChannel+0x2ae>
 8005d62:	bf00      	nop
 8005d64:	0007ffff 	.word	0x0007ffff
 8005d68:	407f0000 	.word	0x407f0000
 8005d6c:	80080000 	.word	0x80080000
 8005d70:	50040300 	.word	0x50040300
 8005d74:	50040000 	.word	0x50040000
 8005d78:	c7520000 	.word	0xc7520000
 8005d7c:	cb840000 	.word	0xcb840000
 8005d80:	80000001 	.word	0x80000001
 8005d84:	03fff000 	.word	0x03fff000
 8005d88:	20000034 	.word	0x20000034
 8005d8c:	053e2d63 	.word	0x053e2d63
 8005d90:	01f5      	lsls	r5, r6, #7
 8005d92:	f53f ae9c 	bmi.w	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005d96:	428a      	cmp	r2, r1
 8005d98:	f47f ae99 	bne.w	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005d9c:	6882      	ldr	r2, [r0, #8]
 8005d9e:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005da2:	433a      	orrs	r2, r7
 8005da4:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8005da8:	6082      	str	r2, [r0, #8]
 8005daa:	e690      	b.n	8005ace <HAL_ADC_ConfigChannel+0xe6>
 8005dac:	f104 0e0c 	add.w	lr, r4, #12
 8005db0:	6830      	ldr	r0, [r6, #0]
 8005db2:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005db6:	6030      	str	r0, [r6, #0]
 8005db8:	68e0      	ldr	r0, [r4, #12]
 8005dba:	6808      	ldr	r0, [r1, #0]
 8005dbc:	68e4      	ldr	r4, [r4, #12]
 8005dbe:	f3c0 0512 	ubfx	r5, r0, #0, #19
 8005dc2:	4677      	mov	r7, lr
 8005dc4:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005dc8:	2d00      	cmp	r5, #0
 8005dca:	d1c2      	bne.n	8005d52 <HAL_ADC_ConfigChannel+0x36a>
 8005dcc:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005dd0:	e761      	b.n	8005c96 <HAL_ADC_ConfigChannel+0x2ae>
 8005dd2:	f104 0e08 	add.w	lr, r4, #8
 8005dd6:	f8dc 0000 	ldr.w	r0, [ip]
 8005dda:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005dde:	f8cc 0000 	str.w	r0, [ip]
 8005de2:	68a0      	ldr	r0, [r4, #8]
 8005de4:	6808      	ldr	r0, [r1, #0]
 8005de6:	68a5      	ldr	r5, [r4, #8]
 8005de8:	f3c0 0712 	ubfx	r7, r0, #0, #19
 8005dec:	4676      	mov	r6, lr
 8005dee:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005df2:	2f00      	cmp	r7, #0
 8005df4:	d19d      	bne.n	8005d32 <HAL_ADC_ConfigChannel+0x34a>
 8005df6:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005dfa:	e743      	b.n	8005c84 <HAL_ADC_ConfigChannel+0x29c>
 8005dfc:	6e10      	ldr	r0, [r2, #96]	@ 0x60
 8005dfe:	4614      	mov	r4, r2
 8005e00:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005e04:	f844 0f60 	str.w	r0, [r4, #96]!
 8005e08:	6e50      	ldr	r0, [r2, #100]	@ 0x64
 8005e0a:	6808      	ldr	r0, [r1, #0]
 8005e0c:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005e0e:	f3c0 0612 	ubfx	r6, r0, #0, #19
 8005e12:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005e16:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005e1a:	2e00      	cmp	r6, #0
 8005e1c:	f47f af79 	bne.w	8005d12 <HAL_ADC_ConfigChannel+0x32a>
 8005e20:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005e24:	e725      	b.n	8005c72 <HAL_ADC_ConfigChannel+0x28a>
 8005e26:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 8005e2a:	e69b      	b.n	8005b64 <HAL_ADC_ConfigChannel+0x17c>
 8005e2c:	68e5      	ldr	r5, [r4, #12]
 8005e2e:	68e4      	ldr	r4, [r4, #12]
 8005e30:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005e34:	e78d      	b.n	8005d52 <HAL_ADC_ConfigChannel+0x36a>
 8005e36:	4c08      	ldr	r4, [pc, #32]	@ (8005e58 <HAL_ADC_ConfigChannel+0x470>)
 8005e38:	e6b4      	b.n	8005ba4 <HAL_ADC_ConfigChannel+0x1bc>
 8005e3a:	2502      	movs	r5, #2
 8005e3c:	e69f      	b.n	8005b7e <HAL_ADC_ConfigChannel+0x196>
 8005e3e:	68a5      	ldr	r5, [r4, #8]
 8005e40:	68a5      	ldr	r5, [r4, #8]
 8005e42:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005e46:	e774      	b.n	8005d32 <HAL_ADC_ConfigChannel+0x34a>
 8005e48:	f44f 1440 	mov.w	r4, #3145728	@ 0x300000
 8005e4c:	e6aa      	b.n	8005ba4 <HAL_ADC_ConfigChannel+0x1bc>
 8005e4e:	2502      	movs	r5, #2
 8005e50:	e741      	b.n	8005cd6 <HAL_ADC_ConfigChannel+0x2ee>
 8005e52:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 8005e56:	e731      	b.n	8005cbc <HAL_ADC_ConfigChannel+0x2d4>
 8005e58:	fe500000 	.word	0xfe500000

08005e5c <ADC_Enable>:
 8005e5c:	b570      	push	{r4, r5, r6, lr}
 8005e5e:	b082      	sub	sp, #8
 8005e60:	2200      	movs	r2, #0
 8005e62:	6803      	ldr	r3, [r0, #0]
 8005e64:	9201      	str	r2, [sp, #4]
 8005e66:	689a      	ldr	r2, [r3, #8]
 8005e68:	07d4      	lsls	r4, r2, #31
 8005e6a:	d430      	bmi.n	8005ece <ADC_Enable+0x72>
 8005e6c:	6899      	ldr	r1, [r3, #8]
 8005e6e:	4a26      	ldr	r2, [pc, #152]	@ (8005f08 <ADC_Enable+0xac>)
 8005e70:	4211      	tst	r1, r2
 8005e72:	4604      	mov	r4, r0
 8005e74:	d120      	bne.n	8005eb8 <ADC_Enable+0x5c>
 8005e76:	689a      	ldr	r2, [r3, #8]
 8005e78:	4924      	ldr	r1, [pc, #144]	@ (8005f0c <ADC_Enable+0xb0>)
 8005e7a:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8005e7e:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8005e82:	f042 0201 	orr.w	r2, r2, #1
 8005e86:	609a      	str	r2, [r3, #8]
 8005e88:	688b      	ldr	r3, [r1, #8]
 8005e8a:	0218      	lsls	r0, r3, #8
 8005e8c:	d428      	bmi.n	8005ee0 <ADC_Enable+0x84>
 8005e8e:	f7ff fc69 	bl	8005764 <HAL_GetTick>
 8005e92:	4e1f      	ldr	r6, [pc, #124]	@ (8005f10 <ADC_Enable+0xb4>)
 8005e94:	4605      	mov	r5, r0
 8005e96:	6823      	ldr	r3, [r4, #0]
 8005e98:	681a      	ldr	r2, [r3, #0]
 8005e9a:	07d2      	lsls	r2, r2, #31
 8005e9c:	d417      	bmi.n	8005ece <ADC_Enable+0x72>
 8005e9e:	689a      	ldr	r2, [r3, #8]
 8005ea0:	07d1      	lsls	r1, r2, #31
 8005ea2:	d417      	bmi.n	8005ed4 <ADC_Enable+0x78>
 8005ea4:	689a      	ldr	r2, [r3, #8]
 8005ea6:	4032      	ands	r2, r6
 8005ea8:	f042 0201 	orr.w	r2, r2, #1
 8005eac:	609a      	str	r2, [r3, #8]
 8005eae:	f7ff fc59 	bl	8005764 <HAL_GetTick>
 8005eb2:	1b40      	subs	r0, r0, r5
 8005eb4:	2802      	cmp	r0, #2
 8005eb6:	d9ee      	bls.n	8005e96 <ADC_Enable+0x3a>
 8005eb8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005eba:	f043 0310 	orr.w	r3, r3, #16
 8005ebe:	6563      	str	r3, [r4, #84]	@ 0x54
 8005ec0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005ec2:	2001      	movs	r0, #1
 8005ec4:	f043 0301 	orr.w	r3, r3, #1
 8005ec8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005eca:	b002      	add	sp, #8
 8005ecc:	bd70      	pop	{r4, r5, r6, pc}
 8005ece:	2000      	movs	r0, #0
 8005ed0:	b002      	add	sp, #8
 8005ed2:	bd70      	pop	{r4, r5, r6, pc}
 8005ed4:	f7ff fc46 	bl	8005764 <HAL_GetTick>
 8005ed8:	1b40      	subs	r0, r0, r5
 8005eda:	2802      	cmp	r0, #2
 8005edc:	d9db      	bls.n	8005e96 <ADC_Enable+0x3a>
 8005ede:	e7eb      	b.n	8005eb8 <ADC_Enable+0x5c>
 8005ee0:	4b0c      	ldr	r3, [pc, #48]	@ (8005f14 <ADC_Enable+0xb8>)
 8005ee2:	4a0d      	ldr	r2, [pc, #52]	@ (8005f18 <ADC_Enable+0xbc>)
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	099b      	lsrs	r3, r3, #6
 8005ee8:	fba2 2303 	umull	r2, r3, r2, r3
 8005eec:	099b      	lsrs	r3, r3, #6
 8005eee:	3301      	adds	r3, #1
 8005ef0:	9301      	str	r3, [sp, #4]
 8005ef2:	9b01      	ldr	r3, [sp, #4]
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	d0ca      	beq.n	8005e8e <ADC_Enable+0x32>
 8005ef8:	9b01      	ldr	r3, [sp, #4]
 8005efa:	3b01      	subs	r3, #1
 8005efc:	9301      	str	r3, [sp, #4]
 8005efe:	9b01      	ldr	r3, [sp, #4]
 8005f00:	2b00      	cmp	r3, #0
 8005f02:	d1f9      	bne.n	8005ef8 <ADC_Enable+0x9c>
 8005f04:	e7c3      	b.n	8005e8e <ADC_Enable+0x32>
 8005f06:	bf00      	nop
 8005f08:	8000003f 	.word	0x8000003f
 8005f0c:	50040300 	.word	0x50040300
 8005f10:	7fffffc0 	.word	0x7fffffc0
 8005f14:	20000034 	.word	0x20000034
 8005f18:	053e2d63 	.word	0x053e2d63

08005f1c <HAL_ADC_Start_DMA>:
 8005f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f1e:	6803      	ldr	r3, [r0, #0]
 8005f20:	689d      	ldr	r5, [r3, #8]
 8005f22:	f015 0504 	ands.w	r5, r5, #4
 8005f26:	d141      	bne.n	8005fac <HAL_ADC_Start_DMA+0x90>
 8005f28:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 8005f2c:	2b01      	cmp	r3, #1
 8005f2e:	4604      	mov	r4, r0
 8005f30:	d03c      	beq.n	8005fac <HAL_ADC_Start_DMA+0x90>
 8005f32:	2301      	movs	r3, #1
 8005f34:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 8005f38:	460f      	mov	r7, r1
 8005f3a:	4616      	mov	r6, r2
 8005f3c:	f7ff ff8e 	bl	8005e5c <ADC_Enable>
 8005f40:	2800      	cmp	r0, #0
 8005f42:	d135      	bne.n	8005fb0 <HAL_ADC_Start_DMA+0x94>
 8005f44:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f46:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8005f48:	6821      	ldr	r1, [r4, #0]
 8005f4a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8005f4e:	f023 0301 	bic.w	r3, r3, #1
 8005f52:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005f56:	6563      	str	r3, [r4, #84]	@ 0x54
 8005f58:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f5a:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005f5e:	bf1c      	itt	ne
 8005f60:	6da3      	ldrne	r3, [r4, #88]	@ 0x58
 8005f62:	f023 0306 	bicne.w	r3, r3, #6
 8005f66:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005f68:	4b13      	ldr	r3, [pc, #76]	@ (8005fb8 <HAL_ADC_Start_DMA+0x9c>)
 8005f6a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8005f6c:	4b13      	ldr	r3, [pc, #76]	@ (8005fbc <HAL_ADC_Start_DMA+0xa0>)
 8005f6e:	6303      	str	r3, [r0, #48]	@ 0x30
 8005f70:	251c      	movs	r5, #28
 8005f72:	4b13      	ldr	r3, [pc, #76]	@ (8005fc0 <HAL_ADC_Start_DMA+0xa4>)
 8005f74:	6343      	str	r3, [r0, #52]	@ 0x34
 8005f76:	600d      	str	r5, [r1, #0]
 8005f78:	2500      	movs	r5, #0
 8005f7a:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005f7e:	684d      	ldr	r5, [r1, #4]
 8005f80:	f045 0510 	orr.w	r5, r5, #16
 8005f84:	604d      	str	r5, [r1, #4]
 8005f86:	68cd      	ldr	r5, [r1, #12]
 8005f88:	f045 0501 	orr.w	r5, r5, #1
 8005f8c:	4633      	mov	r3, r6
 8005f8e:	463a      	mov	r2, r7
 8005f90:	60cd      	str	r5, [r1, #12]
 8005f92:	3140      	adds	r1, #64	@ 0x40
 8005f94:	f000 f904 	bl	80061a0 <HAL_DMA_Start_IT>
 8005f98:	6822      	ldr	r2, [r4, #0]
 8005f9a:	6893      	ldr	r3, [r2, #8]
 8005f9c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005fa0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8005fa4:	f043 0304 	orr.w	r3, r3, #4
 8005fa8:	6093      	str	r3, [r2, #8]
 8005faa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005fac:	2002      	movs	r0, #2
 8005fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005fb0:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005fb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005fb6:	bf00      	nop
 8005fb8:	08005961 	.word	0x08005961
 8005fbc:	08005951 	.word	0x08005951
 8005fc0:	080059cd 	.word	0x080059cd

08005fc4 <HAL_NVIC_SetPriorityGrouping>:
 8005fc4:	4907      	ldr	r1, [pc, #28]	@ (8005fe4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005fc6:	68ca      	ldr	r2, [r1, #12]
 8005fc8:	0203      	lsls	r3, r0, #8
 8005fca:	f64f 00ff 	movw	r0, #63743	@ 0xf8ff
 8005fce:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8005fd2:	4002      	ands	r2, r0
 8005fd4:	4313      	orrs	r3, r2
 8005fd6:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8005fda:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005fde:	60cb      	str	r3, [r1, #12]
 8005fe0:	4770      	bx	lr
 8005fe2:	bf00      	nop
 8005fe4:	e000ed00 	.word	0xe000ed00

08005fe8 <HAL_NVIC_SetPriority>:
 8005fe8:	4b1b      	ldr	r3, [pc, #108]	@ (8006058 <HAL_NVIC_SetPriority+0x70>)
 8005fea:	68db      	ldr	r3, [r3, #12]
 8005fec:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8005ff0:	b500      	push	{lr}
 8005ff2:	f1c3 0e07 	rsb	lr, r3, #7
 8005ff6:	f1be 0f04 	cmp.w	lr, #4
 8005ffa:	f103 0c04 	add.w	ip, r3, #4
 8005ffe:	bf28      	it	cs
 8006000:	f04f 0e04 	movcs.w	lr, #4
 8006004:	f1bc 0f06 	cmp.w	ip, #6
 8006008:	d91c      	bls.n	8006044 <HAL_NVIC_SetPriority+0x5c>
 800600a:	f1a3 0c03 	sub.w	ip, r3, #3
 800600e:	f04f 33ff 	mov.w	r3, #4294967295
 8006012:	fa03 f30c 	lsl.w	r3, r3, ip
 8006016:	ea22 0203 	bic.w	r2, r2, r3
 800601a:	f04f 33ff 	mov.w	r3, #4294967295
 800601e:	fa03 f30e 	lsl.w	r3, r3, lr
 8006022:	ea21 0303 	bic.w	r3, r1, r3
 8006026:	fa03 f30c 	lsl.w	r3, r3, ip
 800602a:	4313      	orrs	r3, r2
 800602c:	011b      	lsls	r3, r3, #4
 800602e:	2800      	cmp	r0, #0
 8006030:	b2db      	uxtb	r3, r3
 8006032:	db0a      	blt.n	800604a <HAL_NVIC_SetPriority+0x62>
 8006034:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8006038:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 800603c:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
 8006040:	f85d fb04 	ldr.w	pc, [sp], #4
 8006044:	2200      	movs	r2, #0
 8006046:	4694      	mov	ip, r2
 8006048:	e7e7      	b.n	800601a <HAL_NVIC_SetPriority+0x32>
 800604a:	4a04      	ldr	r2, [pc, #16]	@ (800605c <HAL_NVIC_SetPriority+0x74>)
 800604c:	f000 000f 	and.w	r0, r0, #15
 8006050:	4402      	add	r2, r0
 8006052:	7613      	strb	r3, [r2, #24]
 8006054:	f85d fb04 	ldr.w	pc, [sp], #4
 8006058:	e000ed00 	.word	0xe000ed00
 800605c:	e000ecfc 	.word	0xe000ecfc

08006060 <HAL_NVIC_EnableIRQ>:
 8006060:	2800      	cmp	r0, #0
 8006062:	db07      	blt.n	8006074 <HAL_NVIC_EnableIRQ+0x14>
 8006064:	4a04      	ldr	r2, [pc, #16]	@ (8006078 <HAL_NVIC_EnableIRQ+0x18>)
 8006066:	0941      	lsrs	r1, r0, #5
 8006068:	2301      	movs	r3, #1
 800606a:	f000 001f 	and.w	r0, r0, #31
 800606e:	4083      	lsls	r3, r0
 8006070:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8006074:	4770      	bx	lr
 8006076:	bf00      	nop
 8006078:	e000e100 	.word	0xe000e100

0800607c <HAL_DMA_Init>:
 800607c:	2800      	cmp	r0, #0
 800607e:	d075      	beq.n	800616c <HAL_DMA_Init+0xf0>
 8006080:	6802      	ldr	r2, [r0, #0]
 8006082:	493b      	ldr	r1, [pc, #236]	@ (8006170 <HAL_DMA_Init+0xf4>)
 8006084:	428a      	cmp	r2, r1
 8006086:	b570      	push	{r4, r5, r6, lr}
 8006088:	4603      	mov	r3, r0
 800608a:	d95b      	bls.n	8006144 <HAL_DMA_Init+0xc8>
 800608c:	4939      	ldr	r1, [pc, #228]	@ (8006174 <HAL_DMA_Init+0xf8>)
 800608e:	483a      	ldr	r0, [pc, #232]	@ (8006178 <HAL_DMA_Init+0xfc>)
 8006090:	4d3a      	ldr	r5, [pc, #232]	@ (800617c <HAL_DMA_Init+0x100>)
 8006092:	4411      	add	r1, r2
 8006094:	fba0 0101 	umull	r0, r1, r0, r1
 8006098:	0909      	lsrs	r1, r1, #4
 800609a:	0089      	lsls	r1, r1, #2
 800609c:	6898      	ldr	r0, [r3, #8]
 800609e:	468c      	mov	ip, r1
 80060a0:	e9c3 5110 	strd	r5, r1, [r3, #64]	@ 0x40
 80060a4:	2402      	movs	r4, #2
 80060a6:	68d9      	ldr	r1, [r3, #12]
 80060a8:	f883 4025 	strb.w	r4, [r3, #37]	@ 0x25
 80060ac:	691c      	ldr	r4, [r3, #16]
 80060ae:	4301      	orrs	r1, r0
 80060b0:	4321      	orrs	r1, r4
 80060b2:	695c      	ldr	r4, [r3, #20]
 80060b4:	4321      	orrs	r1, r4
 80060b6:	699c      	ldr	r4, [r3, #24]
 80060b8:	4321      	orrs	r1, r4
 80060ba:	69dc      	ldr	r4, [r3, #28]
 80060bc:	4321      	orrs	r1, r4
 80060be:	6814      	ldr	r4, [r2, #0]
 80060c0:	f424 4eff 	bic.w	lr, r4, #32640	@ 0x7f80
 80060c4:	6a1c      	ldr	r4, [r3, #32]
 80060c6:	f02e 0e70 	bic.w	lr, lr, #112	@ 0x70
 80060ca:	4321      	orrs	r1, r4
 80060cc:	ea41 010e 	orr.w	r1, r1, lr
 80060d0:	6011      	str	r1, [r2, #0]
 80060d2:	4927      	ldr	r1, [pc, #156]	@ (8006170 <HAL_DMA_Init+0xf4>)
 80060d4:	4c2a      	ldr	r4, [pc, #168]	@ (8006180 <HAL_DMA_Init+0x104>)
 80060d6:	428a      	cmp	r2, r1
 80060d8:	bf8d      	iteet	hi
 80060da:	492a      	ldrhi	r1, [pc, #168]	@ (8006184 <HAL_DMA_Init+0x108>)
 80060dc:	f10c 4180 	addls.w	r1, ip, #1073741824	@ 0x40000000
 80060e0:	f501 3102 	addls.w	r1, r1, #133120	@ 0x20800
 80060e4:	4461      	addhi	r1, ip
 80060e6:	e9c3 1412 	strd	r1, r4, [r3, #72]	@ 0x48
 80060ea:	b2d2      	uxtb	r2, r2
 80060ec:	4c22      	ldr	r4, [pc, #136]	@ (8006178 <HAL_DMA_Init+0xfc>)
 80060ee:	3a08      	subs	r2, #8
 80060f0:	fba4 4202 	umull	r4, r2, r4, r2
 80060f4:	f3c2 1204 	ubfx	r2, r2, #4, #5
 80060f8:	2401      	movs	r4, #1
 80060fa:	fa04 f202 	lsl.w	r2, r4, r2
 80060fe:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
 8006102:	651a      	str	r2, [r3, #80]	@ 0x50
 8006104:	d027      	beq.n	8006156 <HAL_DMA_Init+0xda>
 8006106:	685d      	ldr	r5, [r3, #4]
 8006108:	4e1f      	ldr	r6, [pc, #124]	@ (8006188 <HAL_DMA_Init+0x10c>)
 800610a:	f005 003f 	and.w	r0, r5, #63	@ 0x3f
 800610e:	3d01      	subs	r5, #1
 8006110:	2d03      	cmp	r5, #3
 8006112:	6008      	str	r0, [r1, #0]
 8006114:	f8c6 2084 	str.w	r2, [r6, #132]	@ 0x84
 8006118:	d823      	bhi.n	8006162 <HAL_DMA_Init+0xe6>
 800611a:	4a1c      	ldr	r2, [pc, #112]	@ (800618c <HAL_DMA_Init+0x110>)
 800611c:	4d1c      	ldr	r5, [pc, #112]	@ (8006190 <HAL_DMA_Init+0x114>)
 800611e:	4402      	add	r2, r0
 8006120:	0092      	lsls	r2, r2, #2
 8006122:	3801      	subs	r0, #1
 8006124:	4084      	lsls	r4, r0
 8006126:	2100      	movs	r1, #0
 8006128:	e9c3 2515 	strd	r2, r5, [r3, #84]	@ 0x54
 800612c:	65dc      	str	r4, [r3, #92]	@ 0x5c
 800612e:	6011      	str	r1, [r2, #0]
 8006130:	4a18      	ldr	r2, [pc, #96]	@ (8006194 <HAL_DMA_Init+0x118>)
 8006132:	6454      	str	r4, [r2, #68]	@ 0x44
 8006134:	2000      	movs	r0, #0
 8006136:	2201      	movs	r2, #1
 8006138:	63d8      	str	r0, [r3, #60]	@ 0x3c
 800613a:	f883 0024 	strb.w	r0, [r3, #36]	@ 0x24
 800613e:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8006142:	bd70      	pop	{r4, r5, r6, pc}
 8006144:	4914      	ldr	r1, [pc, #80]	@ (8006198 <HAL_DMA_Init+0x11c>)
 8006146:	480c      	ldr	r0, [pc, #48]	@ (8006178 <HAL_DMA_Init+0xfc>)
 8006148:	4d14      	ldr	r5, [pc, #80]	@ (800619c <HAL_DMA_Init+0x120>)
 800614a:	4411      	add	r1, r2
 800614c:	fba0 0101 	umull	r0, r1, r0, r1
 8006150:	0909      	lsrs	r1, r1, #4
 8006152:	0089      	lsls	r1, r1, #2
 8006154:	e7a2      	b.n	800609c <HAL_DMA_Init+0x20>
 8006156:	4c0c      	ldr	r4, [pc, #48]	@ (8006188 <HAL_DMA_Init+0x10c>)
 8006158:	2000      	movs	r0, #0
 800615a:	6058      	str	r0, [r3, #4]
 800615c:	6008      	str	r0, [r1, #0]
 800615e:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
 8006162:	2200      	movs	r2, #0
 8006164:	e9c3 2215 	strd	r2, r2, [r3, #84]	@ 0x54
 8006168:	65da      	str	r2, [r3, #92]	@ 0x5c
 800616a:	e7e3      	b.n	8006134 <HAL_DMA_Init+0xb8>
 800616c:	2001      	movs	r0, #1
 800616e:	4770      	bx	lr
 8006170:	40020407 	.word	0x40020407
 8006174:	bffdfbf8 	.word	0xbffdfbf8
 8006178:	cccccccd 	.word	0xcccccccd
 800617c:	40020400 	.word	0x40020400
 8006180:	40020880 	.word	0x40020880
 8006184:	4002081c 	.word	0x4002081c
 8006188:	40020800 	.word	0x40020800
 800618c:	1000823f 	.word	0x1000823f
 8006190:	40020940 	.word	0x40020940
 8006194:	40020900 	.word	0x40020900
 8006198:	bffdfff8 	.word	0xbffdfff8
 800619c:	40020000 	.word	0x40020000

080061a0 <HAL_DMA_Start_IT>:
 80061a0:	b4f0      	push	{r4, r5, r6, r7}
 80061a2:	f890 4024 	ldrb.w	r4, [r0, #36]	@ 0x24
 80061a6:	2c01      	cmp	r4, #1
 80061a8:	d009      	beq.n	80061be <HAL_DMA_Start_IT+0x1e>
 80061aa:	2401      	movs	r4, #1
 80061ac:	f880 4024 	strb.w	r4, [r0, #36]	@ 0x24
 80061b0:	f890 4025 	ldrb.w	r4, [r0, #37]	@ 0x25
 80061b4:	2c01      	cmp	r4, #1
 80061b6:	d005      	beq.n	80061c4 <HAL_DMA_Start_IT+0x24>
 80061b8:	2300      	movs	r3, #0
 80061ba:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 80061be:	2002      	movs	r0, #2
 80061c0:	bcf0      	pop	{r4, r5, r6, r7}
 80061c2:	4770      	bx	lr
 80061c4:	2402      	movs	r4, #2
 80061c6:	f880 4025 	strb.w	r4, [r0, #37]	@ 0x25
 80061ca:	2400      	movs	r4, #0
 80061cc:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80061ce:	6804      	ldr	r4, [r0, #0]
 80061d0:	6cc6      	ldr	r6, [r0, #76]	@ 0x4c
 80061d2:	6825      	ldr	r5, [r4, #0]
 80061d4:	f025 0501 	bic.w	r5, r5, #1
 80061d8:	6025      	str	r5, [r4, #0]
 80061da:	e9d0 7514 	ldrd	r7, r5, [r0, #80]	@ 0x50
 80061de:	6077      	str	r7, [r6, #4]
 80061e0:	b115      	cbz	r5, 80061e8 <HAL_DMA_Start_IT+0x48>
 80061e2:	e9d0 6716 	ldrd	r6, r7, [r0, #88]	@ 0x58
 80061e6:	6077      	str	r7, [r6, #4]
 80061e8:	6c46      	ldr	r6, [r0, #68]	@ 0x44
 80061ea:	6c07      	ldr	r7, [r0, #64]	@ 0x40
 80061ec:	f006 0c1c 	and.w	ip, r6, #28
 80061f0:	2601      	movs	r6, #1
 80061f2:	fa06 f60c 	lsl.w	r6, r6, ip
 80061f6:	607e      	str	r6, [r7, #4]
 80061f8:	6063      	str	r3, [r4, #4]
 80061fa:	6883      	ldr	r3, [r0, #8]
 80061fc:	2b10      	cmp	r3, #16
 80061fe:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8006200:	bf0b      	itete	eq
 8006202:	60a2      	streq	r2, [r4, #8]
 8006204:	60a1      	strne	r1, [r4, #8]
 8006206:	60e1      	streq	r1, [r4, #12]
 8006208:	60e2      	strne	r2, [r4, #12]
 800620a:	b1bb      	cbz	r3, 800623c <HAL_DMA_Start_IT+0x9c>
 800620c:	6823      	ldr	r3, [r4, #0]
 800620e:	f043 030e 	orr.w	r3, r3, #14
 8006212:	6023      	str	r3, [r4, #0]
 8006214:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8006216:	681a      	ldr	r2, [r3, #0]
 8006218:	03d2      	lsls	r2, r2, #15
 800621a:	d503      	bpl.n	8006224 <HAL_DMA_Start_IT+0x84>
 800621c:	681a      	ldr	r2, [r3, #0]
 800621e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006222:	601a      	str	r2, [r3, #0]
 8006224:	b11d      	cbz	r5, 800622e <HAL_DMA_Start_IT+0x8e>
 8006226:	682b      	ldr	r3, [r5, #0]
 8006228:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800622c:	602b      	str	r3, [r5, #0]
 800622e:	6823      	ldr	r3, [r4, #0]
 8006230:	f043 0301 	orr.w	r3, r3, #1
 8006234:	2000      	movs	r0, #0
 8006236:	6023      	str	r3, [r4, #0]
 8006238:	bcf0      	pop	{r4, r5, r6, r7}
 800623a:	4770      	bx	lr
 800623c:	6823      	ldr	r3, [r4, #0]
 800623e:	f023 0304 	bic.w	r3, r3, #4
 8006242:	6023      	str	r3, [r4, #0]
 8006244:	6823      	ldr	r3, [r4, #0]
 8006246:	f043 030a 	orr.w	r3, r3, #10
 800624a:	6023      	str	r3, [r4, #0]
 800624c:	e7e2      	b.n	8006214 <HAL_DMA_Start_IT+0x74>
 800624e:	bf00      	nop

08006250 <HAL_DMA_Abort>:
 8006250:	2800      	cmp	r0, #0
 8006252:	d033      	beq.n	80062bc <HAL_DMA_Abort+0x6c>
 8006254:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8006258:	2b02      	cmp	r3, #2
 800625a:	d12a      	bne.n	80062b2 <HAL_DMA_Abort+0x62>
 800625c:	6803      	ldr	r3, [r0, #0]
 800625e:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 8006260:	6819      	ldr	r1, [r3, #0]
 8006262:	b430      	push	{r4, r5}
 8006264:	f021 010e 	bic.w	r1, r1, #14
 8006268:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 800626a:	6019      	str	r1, [r3, #0]
 800626c:	6821      	ldr	r1, [r4, #0]
 800626e:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8006270:	f421 7180 	bic.w	r1, r1, #256	@ 0x100
 8006274:	6021      	str	r1, [r4, #0]
 8006276:	6819      	ldr	r1, [r3, #0]
 8006278:	f021 0101 	bic.w	r1, r1, #1
 800627c:	6019      	str	r1, [r3, #0]
 800627e:	f002 021c 	and.w	r2, r2, #28
 8006282:	2301      	movs	r3, #1
 8006284:	4093      	lsls	r3, r2
 8006286:	e9d0 4214 	ldrd	r4, r2, [r0, #80]	@ 0x50
 800628a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 800628c:	606b      	str	r3, [r5, #4]
 800628e:	604c      	str	r4, [r1, #4]
 8006290:	b132      	cbz	r2, 80062a0 <HAL_DMA_Abort+0x50>
 8006292:	6813      	ldr	r3, [r2, #0]
 8006294:	e9d0 1416 	ldrd	r1, r4, [r0, #88]	@ 0x58
 8006298:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800629c:	6013      	str	r3, [r2, #0]
 800629e:	604c      	str	r4, [r1, #4]
 80062a0:	2300      	movs	r3, #0
 80062a2:	2201      	movs	r2, #1
 80062a4:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 80062a8:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 80062ac:	bc30      	pop	{r4, r5}
 80062ae:	4618      	mov	r0, r3
 80062b0:	4770      	bx	lr
 80062b2:	2204      	movs	r2, #4
 80062b4:	2300      	movs	r3, #0
 80062b6:	63c2      	str	r2, [r0, #60]	@ 0x3c
 80062b8:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 80062bc:	2001      	movs	r0, #1
 80062be:	4770      	bx	lr

080062c0 <HAL_DMA_Abort_IT>:
 80062c0:	b538      	push	{r3, r4, r5, lr}
 80062c2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80062c6:	2b02      	cmp	r3, #2
 80062c8:	d003      	beq.n	80062d2 <HAL_DMA_Abort_IT+0x12>
 80062ca:	2304      	movs	r3, #4
 80062cc:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80062ce:	2001      	movs	r0, #1
 80062d0:	bd38      	pop	{r3, r4, r5, pc}
 80062d2:	6803      	ldr	r3, [r0, #0]
 80062d4:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 80062d6:	6819      	ldr	r1, [r3, #0]
 80062d8:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 80062da:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80062dc:	f021 010e 	bic.w	r1, r1, #14
 80062e0:	6019      	str	r1, [r3, #0]
 80062e2:	6819      	ldr	r1, [r3, #0]
 80062e4:	f021 0101 	bic.w	r1, r1, #1
 80062e8:	6019      	str	r1, [r3, #0]
 80062ea:	6823      	ldr	r3, [r4, #0]
 80062ec:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 80062ee:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80062f2:	6023      	str	r3, [r4, #0]
 80062f4:	f002 021c 	and.w	r2, r2, #28
 80062f8:	2301      	movs	r3, #1
 80062fa:	4093      	lsls	r3, r2
 80062fc:	e9d0 4214 	ldrd	r4, r2, [r0, #80]	@ 0x50
 8006300:	606b      	str	r3, [r5, #4]
 8006302:	604c      	str	r4, [r1, #4]
 8006304:	b132      	cbz	r2, 8006314 <HAL_DMA_Abort_IT+0x54>
 8006306:	6813      	ldr	r3, [r2, #0]
 8006308:	e9d0 1416 	ldrd	r1, r4, [r0, #88]	@ 0x58
 800630c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006310:	6013      	str	r3, [r2, #0]
 8006312:	604c      	str	r4, [r1, #4]
 8006314:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8006316:	2101      	movs	r1, #1
 8006318:	2200      	movs	r2, #0
 800631a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800631e:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8006322:	b103      	cbz	r3, 8006326 <HAL_DMA_Abort_IT+0x66>
 8006324:	4798      	blx	r3
 8006326:	2000      	movs	r0, #0
 8006328:	bd38      	pop	{r3, r4, r5, pc}
 800632a:	bf00      	nop

0800632c <HAL_DMA_IRQHandler>:
 800632c:	b470      	push	{r4, r5, r6}
 800632e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8006330:	6c06      	ldr	r6, [r0, #64]	@ 0x40
 8006332:	6805      	ldr	r5, [r0, #0]
 8006334:	6831      	ldr	r1, [r6, #0]
 8006336:	682c      	ldr	r4, [r5, #0]
 8006338:	f003 031c 	and.w	r3, r3, #28
 800633c:	2204      	movs	r2, #4
 800633e:	409a      	lsls	r2, r3
 8006340:	420a      	tst	r2, r1
 8006342:	d00e      	beq.n	8006362 <HAL_DMA_IRQHandler+0x36>
 8006344:	f014 0f04 	tst.w	r4, #4
 8006348:	d00b      	beq.n	8006362 <HAL_DMA_IRQHandler+0x36>
 800634a:	682b      	ldr	r3, [r5, #0]
 800634c:	069b      	lsls	r3, r3, #26
 800634e:	d403      	bmi.n	8006358 <HAL_DMA_IRQHandler+0x2c>
 8006350:	682b      	ldr	r3, [r5, #0]
 8006352:	f023 0304 	bic.w	r3, r3, #4
 8006356:	602b      	str	r3, [r5, #0]
 8006358:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800635a:	6072      	str	r2, [r6, #4]
 800635c:	b1cb      	cbz	r3, 8006392 <HAL_DMA_IRQHandler+0x66>
 800635e:	bc70      	pop	{r4, r5, r6}
 8006360:	4718      	bx	r3
 8006362:	2202      	movs	r2, #2
 8006364:	409a      	lsls	r2, r3
 8006366:	420a      	tst	r2, r1
 8006368:	d015      	beq.n	8006396 <HAL_DMA_IRQHandler+0x6a>
 800636a:	f014 0f02 	tst.w	r4, #2
 800636e:	d012      	beq.n	8006396 <HAL_DMA_IRQHandler+0x6a>
 8006370:	682b      	ldr	r3, [r5, #0]
 8006372:	0699      	lsls	r1, r3, #26
 8006374:	d406      	bmi.n	8006384 <HAL_DMA_IRQHandler+0x58>
 8006376:	682b      	ldr	r3, [r5, #0]
 8006378:	f023 030a 	bic.w	r3, r3, #10
 800637c:	602b      	str	r3, [r5, #0]
 800637e:	2301      	movs	r3, #1
 8006380:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8006384:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8006386:	6072      	str	r2, [r6, #4]
 8006388:	2100      	movs	r1, #0
 800638a:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800638e:	2b00      	cmp	r3, #0
 8006390:	d1e5      	bne.n	800635e <HAL_DMA_IRQHandler+0x32>
 8006392:	bc70      	pop	{r4, r5, r6}
 8006394:	4770      	bx	lr
 8006396:	2208      	movs	r2, #8
 8006398:	409a      	lsls	r2, r3
 800639a:	420a      	tst	r2, r1
 800639c:	d0f9      	beq.n	8006392 <HAL_DMA_IRQHandler+0x66>
 800639e:	0722      	lsls	r2, r4, #28
 80063a0:	d5f7      	bpl.n	8006392 <HAL_DMA_IRQHandler+0x66>
 80063a2:	682a      	ldr	r2, [r5, #0]
 80063a4:	6b41      	ldr	r1, [r0, #52]	@ 0x34
 80063a6:	f022 020e 	bic.w	r2, r2, #14
 80063aa:	602a      	str	r2, [r5, #0]
 80063ac:	2201      	movs	r2, #1
 80063ae:	fa02 f303 	lsl.w	r3, r2, r3
 80063b2:	2400      	movs	r4, #0
 80063b4:	6073      	str	r3, [r6, #4]
 80063b6:	63c2      	str	r2, [r0, #60]	@ 0x3c
 80063b8:	f880 4024 	strb.w	r4, [r0, #36]	@ 0x24
 80063bc:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 80063c0:	2900      	cmp	r1, #0
 80063c2:	d0e6      	beq.n	8006392 <HAL_DMA_IRQHandler+0x66>
 80063c4:	bc70      	pop	{r4, r5, r6}
 80063c6:	4708      	bx	r1

080063c8 <HAL_DMA_GetError>:
 80063c8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80063ca:	4770      	bx	lr

080063cc <HAL_GPIO_Init>:
 80063cc:	680b      	ldr	r3, [r1, #0]
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	f000 8181 	beq.w	80066d6 <HAL_GPIO_Init+0x30a>
 80063d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063d8:	f1b0 4f90 	cmp.w	r0, #1207959552	@ 0x48000000
 80063dc:	b083      	sub	sp, #12
 80063de:	f04f 0200 	mov.w	r2, #0
 80063e2:	f04f 0b01 	mov.w	fp, #1
 80063e6:	f000 80f6 	beq.w	80065d6 <HAL_GPIO_Init+0x20a>
 80063ea:	f8df e30c 	ldr.w	lr, [pc, #780]	@ 80066f8 <HAL_GPIO_Init+0x32c>
 80063ee:	9300      	str	r3, [sp, #0]
 80063f0:	9b00      	ldr	r3, [sp, #0]
 80063f2:	fa0b fc02 	lsl.w	ip, fp, r2
 80063f6:	ea1c 0a03 	ands.w	sl, ip, r3
 80063fa:	d068      	beq.n	80064ce <HAL_GPIO_Init+0x102>
 80063fc:	684d      	ldr	r5, [r1, #4]
 80063fe:	f005 0703 	and.w	r7, r5, #3
 8006402:	0054      	lsls	r4, r2, #1
 8006404:	2303      	movs	r3, #3
 8006406:	f107 38ff 	add.w	r8, r7, #4294967295
 800640a:	fa03 f604 	lsl.w	r6, r3, r4
 800640e:	f1b8 0f01 	cmp.w	r8, #1
 8006412:	ea6f 0606 	mvn.w	r6, r6
 8006416:	f240 8102 	bls.w	800661e <HAL_GPIO_Init+0x252>
 800641a:	2f03      	cmp	r7, #3
 800641c:	f040 815c 	bne.w	80066d8 <HAL_GPIO_Init+0x30c>
 8006420:	fa07 f404 	lsl.w	r4, r7, r4
 8006424:	6807      	ldr	r7, [r0, #0]
 8006426:	403e      	ands	r6, r7
 8006428:	4334      	orrs	r4, r6
 800642a:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
 800642e:	6004      	str	r4, [r0, #0]
 8006430:	d04d      	beq.n	80064ce <HAL_GPIO_Init+0x102>
 8006432:	f022 0403 	bic.w	r4, r2, #3
 8006436:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 800643a:	f002 0703 	and.w	r7, r2, #3
 800643e:	230f      	movs	r3, #15
 8006440:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
 8006444:	00bf      	lsls	r7, r7, #2
 8006446:	fa03 fc07 	lsl.w	ip, r3, r7
 800644a:	4ba9      	ldr	r3, [pc, #676]	@ (80066f0 <HAL_GPIO_Init+0x324>)
 800644c:	68a6      	ldr	r6, [r4, #8]
 800644e:	4298      	cmp	r0, r3
 8006450:	ea26 060c 	bic.w	r6, r6, ip
 8006454:	f000 8133 	beq.w	80066be <HAL_GPIO_Init+0x2f2>
 8006458:	4ba6      	ldr	r3, [pc, #664]	@ (80066f4 <HAL_GPIO_Init+0x328>)
 800645a:	4298      	cmp	r0, r3
 800645c:	f000 8120 	beq.w	80066a0 <HAL_GPIO_Init+0x2d4>
 8006460:	f8df c298 	ldr.w	ip, [pc, #664]	@ 80066fc <HAL_GPIO_Init+0x330>
 8006464:	4560      	cmp	r0, ip
 8006466:	f000 8130 	beq.w	80066ca <HAL_GPIO_Init+0x2fe>
 800646a:	f8df c294 	ldr.w	ip, [pc, #660]	@ 8006700 <HAL_GPIO_Init+0x334>
 800646e:	4560      	cmp	r0, ip
 8006470:	bf0c      	ite	eq
 8006472:	f04f 0c04 	moveq.w	ip, #4
 8006476:	f04f 0c07 	movne.w	ip, #7
 800647a:	fa0c f707 	lsl.w	r7, ip, r7
 800647e:	433e      	orrs	r6, r7
 8006480:	60a6      	str	r6, [r4, #8]
 8006482:	f8de 4000 	ldr.w	r4, [lr]
 8006486:	ea6f 060a 	mvn.w	r6, sl
 800648a:	02ef      	lsls	r7, r5, #11
 800648c:	bf54      	ite	pl
 800648e:	4034      	andpl	r4, r6
 8006490:	ea4a 0404 	orrmi.w	r4, sl, r4
 8006494:	f8ce 4000 	str.w	r4, [lr]
 8006498:	f8de 4004 	ldr.w	r4, [lr, #4]
 800649c:	02ab      	lsls	r3, r5, #10
 800649e:	bf54      	ite	pl
 80064a0:	4034      	andpl	r4, r6
 80064a2:	ea4a 0404 	orrmi.w	r4, sl, r4
 80064a6:	f8ce 4004 	str.w	r4, [lr, #4]
 80064aa:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
 80064ae:	03ef      	lsls	r7, r5, #15
 80064b0:	bf54      	ite	pl
 80064b2:	4034      	andpl	r4, r6
 80064b4:	ea4a 0404 	orrmi.w	r4, sl, r4
 80064b8:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
 80064bc:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
 80064c0:	03ab      	lsls	r3, r5, #14
 80064c2:	bf54      	ite	pl
 80064c4:	4034      	andpl	r4, r6
 80064c6:	ea4a 0404 	orrmi.w	r4, sl, r4
 80064ca:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
 80064ce:	9b00      	ldr	r3, [sp, #0]
 80064d0:	3201      	adds	r2, #1
 80064d2:	fa33 f402 	lsrs.w	r4, r3, r2
 80064d6:	d18b      	bne.n	80063f0 <HAL_GPIO_Init+0x24>
 80064d8:	b003      	add	sp, #12
 80064da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064de:	f8d0 a008 	ldr.w	sl, [r0, #8]
 80064e2:	68ce      	ldr	r6, [r1, #12]
 80064e4:	ea0e 0a0a 	and.w	sl, lr, sl
 80064e8:	fa06 f907 	lsl.w	r9, r6, r7
 80064ec:	ea49 090a 	orr.w	r9, r9, sl
 80064f0:	f8c0 9008 	str.w	r9, [r0, #8]
 80064f4:	f8d0 9004 	ldr.w	r9, [r0, #4]
 80064f8:	ea29 0908 	bic.w	r9, r9, r8
 80064fc:	f3c5 1800 	ubfx	r8, r5, #4, #1
 8006500:	fa08 f802 	lsl.w	r8, r8, r2
 8006504:	ea48 0809 	orr.w	r8, r8, r9
 8006508:	f8c0 8004 	str.w	r8, [r0, #4]
 800650c:	f8d0 900c 	ldr.w	r9, [r0, #12]
 8006510:	688e      	ldr	r6, [r1, #8]
 8006512:	ea0e 0909 	and.w	r9, lr, r9
 8006516:	fa06 f807 	lsl.w	r8, r6, r7
 800651a:	ea48 0809 	orr.w	r8, r8, r9
 800651e:	2c02      	cmp	r4, #2
 8006520:	f8c0 800c 	str.w	r8, [r0, #12]
 8006524:	d119      	bne.n	800655a <HAL_GPIO_Init+0x18e>
 8006526:	ea4f 08d2 	mov.w	r8, r2, lsr #3
 800652a:	ea4f 0888 	mov.w	r8, r8, lsl #2
 800652e:	f108 4690 	add.w	r6, r8, #1207959552	@ 0x48000000
 8006532:	9600      	str	r6, [sp, #0]
 8006534:	f8d6 9020 	ldr.w	r9, [r6, #32]
 8006538:	690e      	ldr	r6, [r1, #16]
 800653a:	f002 0807 	and.w	r8, r2, #7
 800653e:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8006542:	fa06 fa08 	lsl.w	sl, r6, r8
 8006546:	260f      	movs	r6, #15
 8006548:	fa06 f808 	lsl.w	r8, r6, r8
 800654c:	ea29 0908 	bic.w	r9, r9, r8
 8006550:	9e00      	ldr	r6, [sp, #0]
 8006552:	ea4a 0a09 	orr.w	sl, sl, r9
 8006556:	f8c6 a020 	str.w	sl, [r6, #32]
 800655a:	40bc      	lsls	r4, r7
 800655c:	6807      	ldr	r7, [r0, #0]
 800655e:	ea07 070e 	and.w	r7, r7, lr
 8006562:	433c      	orrs	r4, r7
 8006564:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
 8006568:	6004      	str	r4, [r0, #0]
 800656a:	d030      	beq.n	80065ce <HAL_GPIO_Init+0x202>
 800656c:	f022 0403 	bic.w	r4, r2, #3
 8006570:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 8006574:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
 8006578:	f002 0703 	and.w	r7, r2, #3
 800657c:	f8d4 e008 	ldr.w	lr, [r4, #8]
 8006580:	260f      	movs	r6, #15
 8006582:	00bf      	lsls	r7, r7, #2
 8006584:	fa06 f707 	lsl.w	r7, r6, r7
 8006588:	ea2e 0707 	bic.w	r7, lr, r7
 800658c:	60a7      	str	r7, [r4, #8]
 800658e:	4c5a      	ldr	r4, [pc, #360]	@ (80066f8 <HAL_GPIO_Init+0x32c>)
 8006590:	02ee      	lsls	r6, r5, #11
 8006592:	6824      	ldr	r4, [r4, #0]
 8006594:	ea6f 070c 	mvn.w	r7, ip
 8006598:	d47f      	bmi.n	800669a <HAL_GPIO_Init+0x2ce>
 800659a:	403c      	ands	r4, r7
 800659c:	4e56      	ldr	r6, [pc, #344]	@ (80066f8 <HAL_GPIO_Init+0x32c>)
 800659e:	6034      	str	r4, [r6, #0]
 80065a0:	6874      	ldr	r4, [r6, #4]
 80065a2:	02ae      	lsls	r6, r5, #10
 80065a4:	f100 8088 	bmi.w	80066b8 <HAL_GPIO_Init+0x2ec>
 80065a8:	403c      	ands	r4, r7
 80065aa:	4e53      	ldr	r6, [pc, #332]	@ (80066f8 <HAL_GPIO_Init+0x32c>)
 80065ac:	6074      	str	r4, [r6, #4]
 80065ae:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
 80065b2:	03ee      	lsls	r6, r5, #15
 80065b4:	d47d      	bmi.n	80066b2 <HAL_GPIO_Init+0x2e6>
 80065b6:	403c      	ands	r4, r7
 80065b8:	4e4f      	ldr	r6, [pc, #316]	@ (80066f8 <HAL_GPIO_Init+0x32c>)
 80065ba:	03ad      	lsls	r5, r5, #14
 80065bc:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
 80065c0:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
 80065c4:	d472      	bmi.n	80066ac <HAL_GPIO_Init+0x2e0>
 80065c6:	403c      	ands	r4, r7
 80065c8:	4d4b      	ldr	r5, [pc, #300]	@ (80066f8 <HAL_GPIO_Init+0x32c>)
 80065ca:	f8c5 4084 	str.w	r4, [r5, #132]	@ 0x84
 80065ce:	3201      	adds	r2, #1
 80065d0:	fa33 f402 	lsrs.w	r4, r3, r2
 80065d4:	d080      	beq.n	80064d8 <HAL_GPIO_Init+0x10c>
 80065d6:	fa0b f802 	lsl.w	r8, fp, r2
 80065da:	ea13 0c08 	ands.w	ip, r3, r8
 80065de:	d0f6      	beq.n	80065ce <HAL_GPIO_Init+0x202>
 80065e0:	684d      	ldr	r5, [r1, #4]
 80065e2:	f005 0403 	and.w	r4, r5, #3
 80065e6:	0057      	lsls	r7, r2, #1
 80065e8:	2603      	movs	r6, #3
 80065ea:	f104 39ff 	add.w	r9, r4, #4294967295
 80065ee:	fa06 fe07 	lsl.w	lr, r6, r7
 80065f2:	f1b9 0f01 	cmp.w	r9, #1
 80065f6:	ea6f 0e0e 	mvn.w	lr, lr
 80065fa:	f67f af70 	bls.w	80064de <HAL_GPIO_Init+0x112>
 80065fe:	2c03      	cmp	r4, #3
 8006600:	d0ab      	beq.n	800655a <HAL_GPIO_Init+0x18e>
 8006602:	f04f 4990 	mov.w	r9, #1207959552	@ 0x48000000
 8006606:	688e      	ldr	r6, [r1, #8]
 8006608:	f8d9 a00c 	ldr.w	sl, [r9, #12]
 800660c:	fa06 f807 	lsl.w	r8, r6, r7
 8006610:	ea0e 0a0a 	and.w	sl, lr, sl
 8006614:	ea48 080a 	orr.w	r8, r8, sl
 8006618:	f8c9 800c 	str.w	r8, [r9, #12]
 800661c:	e79d      	b.n	800655a <HAL_GPIO_Init+0x18e>
 800661e:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8006622:	68cb      	ldr	r3, [r1, #12]
 8006624:	ea09 0906 	and.w	r9, r9, r6
 8006628:	fa03 f804 	lsl.w	r8, r3, r4
 800662c:	ea48 0809 	orr.w	r8, r8, r9
 8006630:	f8c0 8008 	str.w	r8, [r0, #8]
 8006634:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8006638:	688b      	ldr	r3, [r1, #8]
 800663a:	ea28 080c 	bic.w	r8, r8, ip
 800663e:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8006642:	fa0c fc02 	lsl.w	ip, ip, r2
 8006646:	ea4c 0c08 	orr.w	ip, ip, r8
 800664a:	f8c0 c004 	str.w	ip, [r0, #4]
 800664e:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8006652:	fa03 fc04 	lsl.w	ip, r3, r4
 8006656:	ea08 0806 	and.w	r8, r8, r6
 800665a:	ea4c 0c08 	orr.w	ip, ip, r8
 800665e:	2f02      	cmp	r7, #2
 8006660:	f8c0 c00c 	str.w	ip, [r0, #12]
 8006664:	f47f aedc 	bne.w	8006420 <HAL_GPIO_Init+0x54>
 8006668:	690b      	ldr	r3, [r1, #16]
 800666a:	ea4f 08d2 	mov.w	r8, r2, lsr #3
 800666e:	f002 0c07 	and.w	ip, r2, #7
 8006672:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8006676:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800667a:	fa03 f30c 	lsl.w	r3, r3, ip
 800667e:	f8d8 9020 	ldr.w	r9, [r8, #32]
 8006682:	9301      	str	r3, [sp, #4]
 8006684:	230f      	movs	r3, #15
 8006686:	fa03 fc0c 	lsl.w	ip, r3, ip
 800668a:	9b01      	ldr	r3, [sp, #4]
 800668c:	ea29 090c 	bic.w	r9, r9, ip
 8006690:	ea43 0c09 	orr.w	ip, r3, r9
 8006694:	f8c8 c020 	str.w	ip, [r8, #32]
 8006698:	e6c2      	b.n	8006420 <HAL_GPIO_Init+0x54>
 800669a:	ea4c 0404 	orr.w	r4, ip, r4
 800669e:	e77d      	b.n	800659c <HAL_GPIO_Init+0x1d0>
 80066a0:	f04f 0c02 	mov.w	ip, #2
 80066a4:	fa0c f707 	lsl.w	r7, ip, r7
 80066a8:	433e      	orrs	r6, r7
 80066aa:	e6e9      	b.n	8006480 <HAL_GPIO_Init+0xb4>
 80066ac:	ea44 040c 	orr.w	r4, r4, ip
 80066b0:	e78a      	b.n	80065c8 <HAL_GPIO_Init+0x1fc>
 80066b2:	ea4c 0404 	orr.w	r4, ip, r4
 80066b6:	e77f      	b.n	80065b8 <HAL_GPIO_Init+0x1ec>
 80066b8:	ea44 040c 	orr.w	r4, r4, ip
 80066bc:	e775      	b.n	80065aa <HAL_GPIO_Init+0x1de>
 80066be:	f04f 0c01 	mov.w	ip, #1
 80066c2:	fa0c f707 	lsl.w	r7, ip, r7
 80066c6:	433e      	orrs	r6, r7
 80066c8:	e6da      	b.n	8006480 <HAL_GPIO_Init+0xb4>
 80066ca:	f04f 0c03 	mov.w	ip, #3
 80066ce:	fa0c f707 	lsl.w	r7, ip, r7
 80066d2:	433e      	orrs	r6, r7
 80066d4:	e6d4      	b.n	8006480 <HAL_GPIO_Init+0xb4>
 80066d6:	4770      	bx	lr
 80066d8:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80066dc:	688b      	ldr	r3, [r1, #8]
 80066de:	ea08 0806 	and.w	r8, r8, r6
 80066e2:	fa03 fc04 	lsl.w	ip, r3, r4
 80066e6:	ea4c 0c08 	orr.w	ip, ip, r8
 80066ea:	f8c0 c00c 	str.w	ip, [r0, #12]
 80066ee:	e697      	b.n	8006420 <HAL_GPIO_Init+0x54>
 80066f0:	48000400 	.word	0x48000400
 80066f4:	48000800 	.word	0x48000800
 80066f8:	58000800 	.word	0x58000800
 80066fc:	48000c00 	.word	0x48000c00
 8006700:	48001000 	.word	0x48001000

08006704 <HAL_GPIO_ReadPin>:
 8006704:	6903      	ldr	r3, [r0, #16]
 8006706:	4219      	tst	r1, r3
 8006708:	bf14      	ite	ne
 800670a:	2001      	movne	r0, #1
 800670c:	2000      	moveq	r0, #0
 800670e:	4770      	bx	lr

08006710 <HAL_GPIO_WritePin>:
 8006710:	b10a      	cbz	r2, 8006716 <HAL_GPIO_WritePin+0x6>
 8006712:	6181      	str	r1, [r0, #24]
 8006714:	4770      	bx	lr
 8006716:	6281      	str	r1, [r0, #40]	@ 0x28
 8006718:	4770      	bx	lr
 800671a:	bf00      	nop

0800671c <HAL_GPIO_TogglePin>:
 800671c:	6943      	ldr	r3, [r0, #20]
 800671e:	ea01 0203 	and.w	r2, r1, r3
 8006722:	ea21 0103 	bic.w	r1, r1, r3
 8006726:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800672a:	6181      	str	r1, [r0, #24]
 800672c:	4770      	bx	lr
 800672e:	bf00      	nop

08006730 <HAL_GPIO_EXTI_IRQHandler>:
 8006730:	4a04      	ldr	r2, [pc, #16]	@ (8006744 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8006732:	68d1      	ldr	r1, [r2, #12]
 8006734:	4201      	tst	r1, r0
 8006736:	d100      	bne.n	800673a <HAL_GPIO_EXTI_IRQHandler+0xa>
 8006738:	4770      	bx	lr
 800673a:	b508      	push	{r3, lr}
 800673c:	60d0      	str	r0, [r2, #12]
 800673e:	f7fb fb95 	bl	8001e6c <HAL_GPIO_EXTI_Callback>
 8006742:	bd08      	pop	{r3, pc}
 8006744:	58000800 	.word	0x58000800

08006748 <HAL_HSEM_FreeCallback>:
 8006748:	4770      	bx	lr
 800674a:	bf00      	nop

0800674c <HAL_HSEM_IRQHandler>:
 800674c:	b508      	push	{r3, lr}
 800674e:	4b05      	ldr	r3, [pc, #20]	@ (8006764 <HAL_HSEM_IRQHandler+0x18>)
 8006750:	68d8      	ldr	r0, [r3, #12]
 8006752:	681a      	ldr	r2, [r3, #0]
 8006754:	ea22 0200 	bic.w	r2, r2, r0
 8006758:	601a      	str	r2, [r3, #0]
 800675a:	6058      	str	r0, [r3, #4]
 800675c:	f7ff fff4 	bl	8006748 <HAL_HSEM_FreeCallback>
 8006760:	bd08      	pop	{r3, pc}
 8006762:	bf00      	nop
 8006764:	58001500 	.word	0x58001500

08006768 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
 8006768:	6803      	ldr	r3, [r0, #0]
 800676a:	699a      	ldr	r2, [r3, #24]
 800676c:	0412      	lsls	r2, r2, #16
 800676e:	f140 8097 	bpl.w	80068a0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
 8006772:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006776:	4604      	mov	r4, r0
 8006778:	460e      	mov	r6, r1
 800677a:	2710      	movs	r7, #16
 800677c:	699a      	ldr	r2, [r3, #24]
 800677e:	f012 0810 	ands.w	r8, r2, #16
 8006782:	d07f      	beq.n	8006884 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
 8006784:	61df      	str	r7, [r3, #28]
 8006786:	4635      	mov	r5, r6
 8006788:	699a      	ldr	r2, [r3, #24]
 800678a:	f012 0820 	ands.w	r8, r2, #32
 800678e:	d17b      	bne.n	8006888 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
 8006790:	f7fe ffe8 	bl	8005764 <HAL_GetTick>
 8006794:	1b40      	subs	r0, r0, r5
 8006796:	2819      	cmp	r0, #25
 8006798:	6823      	ldr	r3, [r4, #0]
 800679a:	d83d      	bhi.n	8006818 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
 800679c:	699a      	ldr	r2, [r3, #24]
 800679e:	0690      	lsls	r0, r2, #26
 80067a0:	d5f6      	bpl.n	8006790 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>
 80067a2:	2220      	movs	r2, #32
 80067a4:	61da      	str	r2, [r3, #28]
 80067a6:	f048 0804 	orr.w	r8, r8, #4
 80067aa:	2501      	movs	r5, #1
 80067ac:	699a      	ldr	r2, [r3, #24]
 80067ae:	05d1      	lsls	r1, r2, #23
 80067b0:	d552      	bpl.n	8006858 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
 80067b2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80067b6:	0555      	lsls	r5, r2, #21
 80067b8:	61d9      	str	r1, [r3, #28]
 80067ba:	f048 0801 	orr.w	r8, r8, #1
 80067be:	d504      	bpl.n	80067ca <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
 80067c0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80067c4:	61d9      	str	r1, [r3, #28]
 80067c6:	f048 0808 	orr.w	r8, r8, #8
 80067ca:	0591      	lsls	r1, r2, #22
 80067cc:	d504      	bpl.n	80067d8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
 80067ce:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80067d2:	f048 0802 	orr.w	r8, r8, #2
 80067d6:	61da      	str	r2, [r3, #28]
 80067d8:	699a      	ldr	r2, [r3, #24]
 80067da:	0795      	lsls	r5, r2, #30
 80067dc:	bf44      	itt	mi
 80067de:	2200      	movmi	r2, #0
 80067e0:	629a      	strmi	r2, [r3, #40]	@ 0x28
 80067e2:	699a      	ldr	r2, [r3, #24]
 80067e4:	07d0      	lsls	r0, r2, #31
 80067e6:	d403      	bmi.n	80067f0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
 80067e8:	699a      	ldr	r2, [r3, #24]
 80067ea:	f042 0201 	orr.w	r2, r2, #1
 80067ee:	619a      	str	r2, [r3, #24]
 80067f0:	685a      	ldr	r2, [r3, #4]
 80067f2:	482c      	ldr	r0, [pc, #176]	@ (80068a4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
 80067f4:	4002      	ands	r2, r0
 80067f6:	605a      	str	r2, [r3, #4]
 80067f8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80067fa:	2120      	movs	r1, #32
 80067fc:	2200      	movs	r2, #0
 80067fe:	ea43 0308 	orr.w	r3, r3, r8
 8006802:	6463      	str	r3, [r4, #68]	@ 0x44
 8006804:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006808:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 800680c:	2300      	movs	r3, #0
 800680e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006812:	2001      	movs	r0, #1
 8006814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006818:	6858      	ldr	r0, [r3, #4]
 800681a:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 800681e:	6999      	ldr	r1, [r3, #24]
 8006820:	0409      	lsls	r1, r1, #16
 8006822:	b2d2      	uxtb	r2, r2
 8006824:	d50b      	bpl.n	800683e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 8006826:	0441      	lsls	r1, r0, #17
 8006828:	d409      	bmi.n	800683e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 800682a:	2a20      	cmp	r2, #32
 800682c:	d007      	beq.n	800683e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 800682e:	685a      	ldr	r2, [r3, #4]
 8006830:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006834:	605a      	str	r2, [r3, #4]
 8006836:	f7fe ff95 	bl	8005764 <HAL_GetTick>
 800683a:	6823      	ldr	r3, [r4, #0]
 800683c:	4605      	mov	r5, r0
 800683e:	699a      	ldr	r2, [r3, #24]
 8006840:	0690      	lsls	r0, r2, #26
 8006842:	d4a1      	bmi.n	8006788 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
 8006844:	f7fe ff8e 	bl	8005764 <HAL_GetTick>
 8006848:	1b40      	subs	r0, r0, r5
 800684a:	2819      	cmp	r0, #25
 800684c:	6823      	ldr	r3, [r4, #0]
 800684e:	d9f6      	bls.n	800683e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 8006850:	699a      	ldr	r2, [r3, #24]
 8006852:	f04f 0820 	mov.w	r8, #32
 8006856:	e7a6      	b.n	80067a6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
 8006858:	0550      	lsls	r0, r2, #21
 800685a:	d4b1      	bmi.n	80067c0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
 800685c:	0592      	lsls	r2, r2, #22
 800685e:	d4b6      	bmi.n	80067ce <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
 8006860:	2d00      	cmp	r5, #0
 8006862:	d1b9      	bne.n	80067d8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
 8006864:	f7fe ff7e 	bl	8005764 <HAL_GetTick>
 8006868:	1b80      	subs	r0, r0, r6
 800686a:	2819      	cmp	r0, #25
 800686c:	6823      	ldr	r3, [r4, #0]
 800686e:	d902      	bls.n	8006876 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
 8006870:	699a      	ldr	r2, [r3, #24]
 8006872:	0411      	lsls	r1, r2, #16
 8006874:	d40b      	bmi.n	800688e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
 8006876:	699a      	ldr	r2, [r3, #24]
 8006878:	0412      	lsls	r2, r2, #16
 800687a:	f53f af7f 	bmi.w	800677c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
 800687e:	2000      	movs	r0, #0
 8006880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006884:	4645      	mov	r5, r8
 8006886:	e791      	b.n	80067ac <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
 8006888:	f04f 0800 	mov.w	r8, #0
 800688c:	e789      	b.n	80067a2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
 800688e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006890:	2220      	movs	r2, #32
 8006892:	4313      	orrs	r3, r2
 8006894:	6463      	str	r3, [r4, #68]	@ 0x44
 8006896:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
 800689a:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
 800689e:	e7b5      	b.n	800680c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
 80068a0:	2000      	movs	r0, #0
 80068a2:	4770      	bx	lr
 80068a4:	fe00e800 	.word	0xfe00e800

080068a8 <I2C_WaitOnTXISFlagUntilTimeout>:
 80068a8:	6803      	ldr	r3, [r0, #0]
 80068aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80068ae:	4681      	mov	r9, r0
 80068b0:	460d      	mov	r5, r1
 80068b2:	4690      	mov	r8, r2
 80068b4:	2610      	movs	r6, #16
 80068b6:	2720      	movs	r7, #32
 80068b8:	699c      	ldr	r4, [r3, #24]
 80068ba:	f014 0402 	ands.w	r4, r4, #2
 80068be:	d168      	bne.n	8006992 <I2C_WaitOnTXISFlagUntilTimeout+0xea>
 80068c0:	699a      	ldr	r2, [r3, #24]
 80068c2:	f012 0c10 	ands.w	ip, r2, #16
 80068c6:	d062      	beq.n	800698e <I2C_WaitOnTXISFlagUntilTimeout+0xe6>
 80068c8:	1c6a      	adds	r2, r5, #1
 80068ca:	61de      	str	r6, [r3, #28]
 80068cc:	d164      	bne.n	8006998 <I2C_WaitOnTXISFlagUntilTimeout+0xf0>
 80068ce:	699a      	ldr	r2, [r3, #24]
 80068d0:	0691      	lsls	r1, r2, #26
 80068d2:	d5fc      	bpl.n	80068ce <I2C_WaitOnTXISFlagUntilTimeout+0x26>
 80068d4:	61df      	str	r7, [r3, #28]
 80068d6:	f044 0c04 	orr.w	ip, r4, #4
 80068da:	2101      	movs	r1, #1
 80068dc:	699a      	ldr	r2, [r3, #24]
 80068de:	05d0      	lsls	r0, r2, #23
 80068e0:	d534      	bpl.n	800694c <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
 80068e2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80068e6:	0554      	lsls	r4, r2, #21
 80068e8:	61d9      	str	r1, [r3, #28]
 80068ea:	f04c 0c01 	orr.w	ip, ip, #1
 80068ee:	d504      	bpl.n	80068fa <I2C_WaitOnTXISFlagUntilTimeout+0x52>
 80068f0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80068f4:	61d9      	str	r1, [r3, #28]
 80068f6:	f04c 0c08 	orr.w	ip, ip, #8
 80068fa:	0595      	lsls	r5, r2, #22
 80068fc:	d504      	bpl.n	8006908 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
 80068fe:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006902:	f04c 0c02 	orr.w	ip, ip, #2
 8006906:	61da      	str	r2, [r3, #28]
 8006908:	699a      	ldr	r2, [r3, #24]
 800690a:	0790      	lsls	r0, r2, #30
 800690c:	bf44      	itt	mi
 800690e:	2200      	movmi	r2, #0
 8006910:	629a      	strmi	r2, [r3, #40]	@ 0x28
 8006912:	699a      	ldr	r2, [r3, #24]
 8006914:	07d1      	lsls	r1, r2, #31
 8006916:	d403      	bmi.n	8006920 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8006918:	699a      	ldr	r2, [r3, #24]
 800691a:	f042 0201 	orr.w	r2, r2, #1
 800691e:	619a      	str	r2, [r3, #24]
 8006920:	685a      	ldr	r2, [r3, #4]
 8006922:	483b      	ldr	r0, [pc, #236]	@ (8006a10 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
 8006924:	4002      	ands	r2, r0
 8006926:	605a      	str	r2, [r3, #4]
 8006928:	f8d9 3044 	ldr.w	r3, [r9, #68]	@ 0x44
 800692c:	2120      	movs	r1, #32
 800692e:	2200      	movs	r2, #0
 8006930:	ea43 030c 	orr.w	r3, r3, ip
 8006934:	f8c9 3044 	str.w	r3, [r9, #68]	@ 0x44
 8006938:	f889 1041 	strb.w	r1, [r9, #65]	@ 0x41
 800693c:	f889 2042 	strb.w	r2, [r9, #66]	@ 0x42
 8006940:	2300      	movs	r3, #0
 8006942:	f889 3040 	strb.w	r3, [r9, #64]	@ 0x40
 8006946:	2001      	movs	r0, #1
 8006948:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800694c:	0550      	lsls	r0, r2, #21
 800694e:	d4cf      	bmi.n	80068f0 <I2C_WaitOnTXISFlagUntilTimeout+0x48>
 8006950:	0594      	lsls	r4, r2, #22
 8006952:	d4d4      	bmi.n	80068fe <I2C_WaitOnTXISFlagUntilTimeout+0x56>
 8006954:	2900      	cmp	r1, #0
 8006956:	d1d7      	bne.n	8006908 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
 8006958:	1c6a      	adds	r2, r5, #1
 800695a:	d0ad      	beq.n	80068b8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
 800695c:	f7fe ff02 	bl	8005764 <HAL_GetTick>
 8006960:	eba0 0308 	sub.w	r3, r0, r8
 8006964:	42ab      	cmp	r3, r5
 8006966:	f8d9 3000 	ldr.w	r3, [r9]
 800696a:	d801      	bhi.n	8006970 <I2C_WaitOnTXISFlagUntilTimeout+0xc8>
 800696c:	2d00      	cmp	r5, #0
 800696e:	d1a2      	bne.n	80068b6 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006970:	699a      	ldr	r2, [r3, #24]
 8006972:	f012 0202 	ands.w	r2, r2, #2
 8006976:	d19e      	bne.n	80068b6 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006978:	f8d9 3044 	ldr.w	r3, [r9, #68]	@ 0x44
 800697c:	2120      	movs	r1, #32
 800697e:	430b      	orrs	r3, r1
 8006980:	f8c9 3044 	str.w	r3, [r9, #68]	@ 0x44
 8006984:	f889 1041 	strb.w	r1, [r9, #65]	@ 0x41
 8006988:	f889 2042 	strb.w	r2, [r9, #66]	@ 0x42
 800698c:	e7d8      	b.n	8006940 <I2C_WaitOnTXISFlagUntilTimeout+0x98>
 800698e:	4661      	mov	r1, ip
 8006990:	e7a4      	b.n	80068dc <I2C_WaitOnTXISFlagUntilTimeout+0x34>
 8006992:	2000      	movs	r0, #0
 8006994:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006998:	46c2      	mov	sl, r8
 800699a:	699a      	ldr	r2, [r3, #24]
 800699c:	0692      	lsls	r2, r2, #26
 800699e:	d499      	bmi.n	80068d4 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
 80069a0:	f7fe fee0 	bl	8005764 <HAL_GetTick>
 80069a4:	eba0 000a 	sub.w	r0, r0, sl
 80069a8:	4285      	cmp	r5, r0
 80069aa:	d300      	bcc.n	80069ae <I2C_WaitOnTXISFlagUntilTimeout+0x106>
 80069ac:	bb1d      	cbnz	r5, 80069f6 <I2C_WaitOnTXISFlagUntilTimeout+0x14e>
 80069ae:	f8d9 3000 	ldr.w	r3, [r9]
 80069b2:	6858      	ldr	r0, [r3, #4]
 80069b4:	f899 2042 	ldrb.w	r2, [r9, #66]	@ 0x42
 80069b8:	6999      	ldr	r1, [r3, #24]
 80069ba:	0409      	lsls	r1, r1, #16
 80069bc:	b2d2      	uxtb	r2, r2
 80069be:	d50c      	bpl.n	80069da <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069c0:	0441      	lsls	r1, r0, #17
 80069c2:	d40a      	bmi.n	80069da <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069c4:	2a20      	cmp	r2, #32
 80069c6:	d008      	beq.n	80069da <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069c8:	685a      	ldr	r2, [r3, #4]
 80069ca:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80069ce:	605a      	str	r2, [r3, #4]
 80069d0:	f7fe fec8 	bl	8005764 <HAL_GetTick>
 80069d4:	f8d9 3000 	ldr.w	r3, [r9]
 80069d8:	4682      	mov	sl, r0
 80069da:	699a      	ldr	r2, [r3, #24]
 80069dc:	0690      	lsls	r0, r2, #26
 80069de:	d4dc      	bmi.n	800699a <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
 80069e0:	f7fe fec0 	bl	8005764 <HAL_GetTick>
 80069e4:	eba0 000a 	sub.w	r0, r0, sl
 80069e8:	2819      	cmp	r0, #25
 80069ea:	f8d9 3000 	ldr.w	r3, [r9]
 80069ee:	d9f4      	bls.n	80069da <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 80069f0:	699a      	ldr	r2, [r3, #24]
 80069f2:	2420      	movs	r4, #32
 80069f4:	e76f      	b.n	80068d6 <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
 80069f6:	f8d9 3000 	ldr.w	r3, [r9]
 80069fa:	699a      	ldr	r2, [r3, #24]
 80069fc:	0690      	lsls	r0, r2, #26
 80069fe:	f53f af69 	bmi.w	80068d4 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
 8006a02:	f7fe feaf 	bl	8005764 <HAL_GetTick>
 8006a06:	eba0 000a 	sub.w	r0, r0, sl
 8006a0a:	4285      	cmp	r5, r0
 8006a0c:	d2f3      	bcs.n	80069f6 <I2C_WaitOnTXISFlagUntilTimeout+0x14e>
 8006a0e:	e7ce      	b.n	80069ae <I2C_WaitOnTXISFlagUntilTimeout+0x106>
 8006a10:	fe00e800 	.word	0xfe00e800

08006a14 <I2C_WaitOnFlagUntilTimeout>:
 8006a14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006a18:	4604      	mov	r4, r0
 8006a1a:	6800      	ldr	r0, [r0, #0]
 8006a1c:	460f      	mov	r7, r1
 8006a1e:	4616      	mov	r6, r2
 8006a20:	461d      	mov	r5, r3
 8006a22:	f04f 0810 	mov.w	r8, #16
 8006a26:	f04f 0920 	mov.w	r9, #32
 8006a2a:	6983      	ldr	r3, [r0, #24]
 8006a2c:	ea37 0303 	bics.w	r3, r7, r3
 8006a30:	bf0c      	ite	eq
 8006a32:	2301      	moveq	r3, #1
 8006a34:	2300      	movne	r3, #0
 8006a36:	42b3      	cmp	r3, r6
 8006a38:	d16c      	bne.n	8006b14 <I2C_WaitOnFlagUntilTimeout+0x100>
 8006a3a:	6983      	ldr	r3, [r0, #24]
 8006a3c:	f013 0310 	ands.w	r3, r3, #16
 8006a40:	d066      	beq.n	8006b10 <I2C_WaitOnFlagUntilTimeout+0xfc>
 8006a42:	1c6b      	adds	r3, r5, #1
 8006a44:	f8c0 801c 	str.w	r8, [r0, #28]
 8006a48:	d167      	bne.n	8006b1a <I2C_WaitOnFlagUntilTimeout+0x106>
 8006a4a:	6983      	ldr	r3, [r0, #24]
 8006a4c:	069a      	lsls	r2, r3, #26
 8006a4e:	d5fc      	bpl.n	8006a4a <I2C_WaitOnFlagUntilTimeout+0x36>
 8006a50:	f8c0 901c 	str.w	r9, [r0, #28]
 8006a54:	2300      	movs	r3, #0
 8006a56:	f043 0304 	orr.w	r3, r3, #4
 8006a5a:	2101      	movs	r1, #1
 8006a5c:	6982      	ldr	r2, [r0, #24]
 8006a5e:	f412 7f80 	tst.w	r2, #256	@ 0x100
 8006a62:	d031      	beq.n	8006ac8 <I2C_WaitOnFlagUntilTimeout+0xb4>
 8006a64:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006a68:	61c1      	str	r1, [r0, #28]
 8006a6a:	0551      	lsls	r1, r2, #21
 8006a6c:	f043 0301 	orr.w	r3, r3, #1
 8006a70:	d504      	bpl.n	8006a7c <I2C_WaitOnFlagUntilTimeout+0x68>
 8006a72:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8006a76:	61c1      	str	r1, [r0, #28]
 8006a78:	f043 0308 	orr.w	r3, r3, #8
 8006a7c:	0591      	lsls	r1, r2, #22
 8006a7e:	d504      	bpl.n	8006a8a <I2C_WaitOnFlagUntilTimeout+0x76>
 8006a80:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006a84:	f043 0302 	orr.w	r3, r3, #2
 8006a88:	61c2      	str	r2, [r0, #28]
 8006a8a:	6982      	ldr	r2, [r0, #24]
 8006a8c:	0791      	lsls	r1, r2, #30
 8006a8e:	bf44      	itt	mi
 8006a90:	2200      	movmi	r2, #0
 8006a92:	6282      	strmi	r2, [r0, #40]	@ 0x28
 8006a94:	6982      	ldr	r2, [r0, #24]
 8006a96:	07d2      	lsls	r2, r2, #31
 8006a98:	d403      	bmi.n	8006aa2 <I2C_WaitOnFlagUntilTimeout+0x8e>
 8006a9a:	6982      	ldr	r2, [r0, #24]
 8006a9c:	f042 0201 	orr.w	r2, r2, #1
 8006aa0:	6182      	str	r2, [r0, #24]
 8006aa2:	6842      	ldr	r2, [r0, #4]
 8006aa4:	4939      	ldr	r1, [pc, #228]	@ (8006b8c <I2C_WaitOnFlagUntilTimeout+0x178>)
 8006aa6:	400a      	ands	r2, r1
 8006aa8:	6042      	str	r2, [r0, #4]
 8006aaa:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8006aac:	2520      	movs	r5, #32
 8006aae:	2100      	movs	r1, #0
 8006ab0:	4313      	orrs	r3, r2
 8006ab2:	6463      	str	r3, [r4, #68]	@ 0x44
 8006ab4:	f884 5041 	strb.w	r5, [r4, #65]	@ 0x41
 8006ab8:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
 8006abc:	2300      	movs	r3, #0
 8006abe:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006ac2:	2001      	movs	r0, #1
 8006ac4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ac8:	f412 6f80 	tst.w	r2, #1024	@ 0x400
 8006acc:	d1d1      	bne.n	8006a72 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8006ace:	0592      	lsls	r2, r2, #22
 8006ad0:	d4d6      	bmi.n	8006a80 <I2C_WaitOnFlagUntilTimeout+0x6c>
 8006ad2:	2900      	cmp	r1, #0
 8006ad4:	d1d9      	bne.n	8006a8a <I2C_WaitOnFlagUntilTimeout+0x76>
 8006ad6:	1c6b      	adds	r3, r5, #1
 8006ad8:	d0a7      	beq.n	8006a2a <I2C_WaitOnFlagUntilTimeout+0x16>
 8006ada:	f7fe fe43 	bl	8005764 <HAL_GetTick>
 8006ade:	9b08      	ldr	r3, [sp, #32]
 8006ae0:	1ac3      	subs	r3, r0, r3
 8006ae2:	42ab      	cmp	r3, r5
 8006ae4:	6820      	ldr	r0, [r4, #0]
 8006ae6:	d801      	bhi.n	8006aec <I2C_WaitOnFlagUntilTimeout+0xd8>
 8006ae8:	2d00      	cmp	r5, #0
 8006aea:	d19c      	bne.n	8006a26 <I2C_WaitOnFlagUntilTimeout+0x12>
 8006aec:	6983      	ldr	r3, [r0, #24]
 8006aee:	ea37 0303 	bics.w	r3, r7, r3
 8006af2:	bf0c      	ite	eq
 8006af4:	2301      	moveq	r3, #1
 8006af6:	2300      	movne	r3, #0
 8006af8:	42b3      	cmp	r3, r6
 8006afa:	d194      	bne.n	8006a26 <I2C_WaitOnFlagUntilTimeout+0x12>
 8006afc:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006afe:	2120      	movs	r1, #32
 8006b00:	430b      	orrs	r3, r1
 8006b02:	2200      	movs	r2, #0
 8006b04:	6463      	str	r3, [r4, #68]	@ 0x44
 8006b06:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006b0a:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006b0e:	e7d5      	b.n	8006abc <I2C_WaitOnFlagUntilTimeout+0xa8>
 8006b10:	4619      	mov	r1, r3
 8006b12:	e7a3      	b.n	8006a5c <I2C_WaitOnFlagUntilTimeout+0x48>
 8006b14:	2000      	movs	r0, #0
 8006b16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b1a:	f8dd a020 	ldr.w	sl, [sp, #32]
 8006b1e:	6983      	ldr	r3, [r0, #24]
 8006b20:	069b      	lsls	r3, r3, #26
 8006b22:	d495      	bmi.n	8006a50 <I2C_WaitOnFlagUntilTimeout+0x3c>
 8006b24:	f7fe fe1e 	bl	8005764 <HAL_GetTick>
 8006b28:	eba0 000a 	sub.w	r0, r0, sl
 8006b2c:	4285      	cmp	r5, r0
 8006b2e:	d300      	bcc.n	8006b32 <I2C_WaitOnFlagUntilTimeout+0x11e>
 8006b30:	bb05      	cbnz	r5, 8006b74 <I2C_WaitOnFlagUntilTimeout+0x160>
 8006b32:	6820      	ldr	r0, [r4, #0]
 8006b34:	6841      	ldr	r1, [r0, #4]
 8006b36:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
 8006b3a:	6982      	ldr	r2, [r0, #24]
 8006b3c:	0412      	lsls	r2, r2, #16
 8006b3e:	b2db      	uxtb	r3, r3
 8006b40:	d50b      	bpl.n	8006b5a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b42:	044a      	lsls	r2, r1, #17
 8006b44:	d409      	bmi.n	8006b5a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b46:	2b20      	cmp	r3, #32
 8006b48:	d007      	beq.n	8006b5a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b4a:	6843      	ldr	r3, [r0, #4]
 8006b4c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006b50:	6043      	str	r3, [r0, #4]
 8006b52:	f7fe fe07 	bl	8005764 <HAL_GetTick>
 8006b56:	4682      	mov	sl, r0
 8006b58:	6820      	ldr	r0, [r4, #0]
 8006b5a:	6983      	ldr	r3, [r0, #24]
 8006b5c:	0699      	lsls	r1, r3, #26
 8006b5e:	d4de      	bmi.n	8006b1e <I2C_WaitOnFlagUntilTimeout+0x10a>
 8006b60:	f7fe fe00 	bl	8005764 <HAL_GetTick>
 8006b64:	eba0 000a 	sub.w	r0, r0, sl
 8006b68:	2819      	cmp	r0, #25
 8006b6a:	6820      	ldr	r0, [r4, #0]
 8006b6c:	d9f5      	bls.n	8006b5a <I2C_WaitOnFlagUntilTimeout+0x146>
 8006b6e:	6983      	ldr	r3, [r0, #24]
 8006b70:	2320      	movs	r3, #32
 8006b72:	e770      	b.n	8006a56 <I2C_WaitOnFlagUntilTimeout+0x42>
 8006b74:	6820      	ldr	r0, [r4, #0]
 8006b76:	6983      	ldr	r3, [r0, #24]
 8006b78:	0699      	lsls	r1, r3, #26
 8006b7a:	f53f af69 	bmi.w	8006a50 <I2C_WaitOnFlagUntilTimeout+0x3c>
 8006b7e:	f7fe fdf1 	bl	8005764 <HAL_GetTick>
 8006b82:	eba0 000a 	sub.w	r0, r0, sl
 8006b86:	4285      	cmp	r5, r0
 8006b88:	d2f4      	bcs.n	8006b74 <I2C_WaitOnFlagUntilTimeout+0x160>
 8006b8a:	e7d2      	b.n	8006b32 <I2C_WaitOnFlagUntilTimeout+0x11e>
 8006b8c:	fe00e800 	.word	0xfe00e800

08006b90 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8006b90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b94:	6803      	ldr	r3, [r0, #0]
 8006b96:	4604      	mov	r4, r0
 8006b98:	6998      	ldr	r0, [r3, #24]
 8006b9a:	0680      	lsls	r0, r0, #26
 8006b9c:	d45f      	bmi.n	8006c5e <I2C_WaitOnSTOPFlagUntilTimeout+0xce>
 8006b9e:	460d      	mov	r5, r1
 8006ba0:	4616      	mov	r6, r2
 8006ba2:	2710      	movs	r7, #16
 8006ba4:	f04f 0820 	mov.w	r8, #32
 8006ba8:	699a      	ldr	r2, [r3, #24]
 8006baa:	f012 0c10 	ands.w	ip, r2, #16
 8006bae:	d059      	beq.n	8006c64 <I2C_WaitOnSTOPFlagUntilTimeout+0xd4>
 8006bb0:	1c6a      	adds	r2, r5, #1
 8006bb2:	61df      	str	r7, [r3, #28]
 8006bb4:	d161      	bne.n	8006c7a <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
 8006bb6:	699a      	ldr	r2, [r3, #24]
 8006bb8:	0691      	lsls	r1, r2, #26
 8006bba:	d5fc      	bpl.n	8006bb6 <I2C_WaitOnSTOPFlagUntilTimeout+0x26>
 8006bbc:	f8c3 801c 	str.w	r8, [r3, #28]
 8006bc0:	f04f 0c00 	mov.w	ip, #0
 8006bc4:	f04c 0c04 	orr.w	ip, ip, #4
 8006bc8:	2101      	movs	r1, #1
 8006bca:	699a      	ldr	r2, [r3, #24]
 8006bcc:	05d0      	lsls	r0, r2, #23
 8006bce:	d532      	bpl.n	8006c36 <I2C_WaitOnSTOPFlagUntilTimeout+0xa6>
 8006bd0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006bd4:	0555      	lsls	r5, r2, #21
 8006bd6:	61d9      	str	r1, [r3, #28]
 8006bd8:	f04c 0c01 	orr.w	ip, ip, #1
 8006bdc:	d504      	bpl.n	8006be8 <I2C_WaitOnSTOPFlagUntilTimeout+0x58>
 8006bde:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8006be2:	61d9      	str	r1, [r3, #28]
 8006be4:	f04c 0c08 	orr.w	ip, ip, #8
 8006be8:	0591      	lsls	r1, r2, #22
 8006bea:	d504      	bpl.n	8006bf6 <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
 8006bec:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006bf0:	f04c 0c02 	orr.w	ip, ip, #2
 8006bf4:	61da      	str	r2, [r3, #28]
 8006bf6:	699a      	ldr	r2, [r3, #24]
 8006bf8:	0790      	lsls	r0, r2, #30
 8006bfa:	bf44      	itt	mi
 8006bfc:	2200      	movmi	r2, #0
 8006bfe:	629a      	strmi	r2, [r3, #40]	@ 0x28
 8006c00:	699a      	ldr	r2, [r3, #24]
 8006c02:	07d1      	lsls	r1, r2, #31
 8006c04:	d403      	bmi.n	8006c0e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8006c06:	699a      	ldr	r2, [r3, #24]
 8006c08:	f042 0201 	orr.w	r2, r2, #1
 8006c0c:	619a      	str	r2, [r3, #24]
 8006c0e:	685a      	ldr	r2, [r3, #4]
 8006c10:	4836      	ldr	r0, [pc, #216]	@ (8006cec <I2C_WaitOnSTOPFlagUntilTimeout+0x15c>)
 8006c12:	4002      	ands	r2, r0
 8006c14:	605a      	str	r2, [r3, #4]
 8006c16:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006c18:	2120      	movs	r1, #32
 8006c1a:	2200      	movs	r2, #0
 8006c1c:	ea43 030c 	orr.w	r3, r3, ip
 8006c20:	6463      	str	r3, [r4, #68]	@ 0x44
 8006c22:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006c26:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006c2a:	2300      	movs	r3, #0
 8006c2c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006c30:	2001      	movs	r0, #1
 8006c32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006c36:	0550      	lsls	r0, r2, #21
 8006c38:	d4d1      	bmi.n	8006bde <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
 8006c3a:	0592      	lsls	r2, r2, #22
 8006c3c:	d4d6      	bmi.n	8006bec <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
 8006c3e:	2900      	cmp	r1, #0
 8006c40:	d1d9      	bne.n	8006bf6 <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
 8006c42:	f7fe fd8f 	bl	8005764 <HAL_GetTick>
 8006c46:	1b80      	subs	r0, r0, r6
 8006c48:	42a8      	cmp	r0, r5
 8006c4a:	6823      	ldr	r3, [r4, #0]
 8006c4c:	d800      	bhi.n	8006c50 <I2C_WaitOnSTOPFlagUntilTimeout+0xc0>
 8006c4e:	b91d      	cbnz	r5, 8006c58 <I2C_WaitOnSTOPFlagUntilTimeout+0xc8>
 8006c50:	699a      	ldr	r2, [r3, #24]
 8006c52:	f012 0220 	ands.w	r2, r2, #32
 8006c56:	d007      	beq.n	8006c68 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
 8006c58:	699a      	ldr	r2, [r3, #24]
 8006c5a:	0692      	lsls	r2, r2, #26
 8006c5c:	d5a4      	bpl.n	8006ba8 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
 8006c5e:	2000      	movs	r0, #0
 8006c60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006c64:	4661      	mov	r1, ip
 8006c66:	e7b0      	b.n	8006bca <I2C_WaitOnSTOPFlagUntilTimeout+0x3a>
 8006c68:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006c6a:	2120      	movs	r1, #32
 8006c6c:	430b      	orrs	r3, r1
 8006c6e:	6463      	str	r3, [r4, #68]	@ 0x44
 8006c70:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006c74:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006c78:	e7d7      	b.n	8006c2a <I2C_WaitOnSTOPFlagUntilTimeout+0x9a>
 8006c7a:	46b1      	mov	r9, r6
 8006c7c:	699a      	ldr	r2, [r3, #24]
 8006c7e:	0692      	lsls	r2, r2, #26
 8006c80:	d49c      	bmi.n	8006bbc <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8006c82:	f7fe fd6f 	bl	8005764 <HAL_GetTick>
 8006c86:	eba0 0009 	sub.w	r0, r0, r9
 8006c8a:	4285      	cmp	r5, r0
 8006c8c:	d300      	bcc.n	8006c90 <I2C_WaitOnSTOPFlagUntilTimeout+0x100>
 8006c8e:	bb0d      	cbnz	r5, 8006cd4 <I2C_WaitOnSTOPFlagUntilTimeout+0x144>
 8006c90:	6823      	ldr	r3, [r4, #0]
 8006c92:	6858      	ldr	r0, [r3, #4]
 8006c94:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 8006c98:	6999      	ldr	r1, [r3, #24]
 8006c9a:	0409      	lsls	r1, r1, #16
 8006c9c:	b2d2      	uxtb	r2, r2
 8006c9e:	d50b      	bpl.n	8006cb8 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006ca0:	0441      	lsls	r1, r0, #17
 8006ca2:	d409      	bmi.n	8006cb8 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006ca4:	2a20      	cmp	r2, #32
 8006ca6:	d007      	beq.n	8006cb8 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006ca8:	685a      	ldr	r2, [r3, #4]
 8006caa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006cae:	605a      	str	r2, [r3, #4]
 8006cb0:	f7fe fd58 	bl	8005764 <HAL_GetTick>
 8006cb4:	6823      	ldr	r3, [r4, #0]
 8006cb6:	4681      	mov	r9, r0
 8006cb8:	699a      	ldr	r2, [r3, #24]
 8006cba:	0690      	lsls	r0, r2, #26
 8006cbc:	d4de      	bmi.n	8006c7c <I2C_WaitOnSTOPFlagUntilTimeout+0xec>
 8006cbe:	f7fe fd51 	bl	8005764 <HAL_GetTick>
 8006cc2:	eba0 0009 	sub.w	r0, r0, r9
 8006cc6:	2819      	cmp	r0, #25
 8006cc8:	6823      	ldr	r3, [r4, #0]
 8006cca:	d9f5      	bls.n	8006cb8 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006ccc:	699a      	ldr	r2, [r3, #24]
 8006cce:	f04f 0c20 	mov.w	ip, #32
 8006cd2:	e777      	b.n	8006bc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
 8006cd4:	6823      	ldr	r3, [r4, #0]
 8006cd6:	699a      	ldr	r2, [r3, #24]
 8006cd8:	0690      	lsls	r0, r2, #26
 8006cda:	f53f af6f 	bmi.w	8006bbc <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8006cde:	f7fe fd41 	bl	8005764 <HAL_GetTick>
 8006ce2:	eba0 0009 	sub.w	r0, r0, r9
 8006ce6:	4285      	cmp	r5, r0
 8006ce8:	d2f4      	bcs.n	8006cd4 <I2C_WaitOnSTOPFlagUntilTimeout+0x144>
 8006cea:	e7d1      	b.n	8006c90 <I2C_WaitOnSTOPFlagUntilTimeout+0x100>
 8006cec:	fe00e800 	.word	0xfe00e800

08006cf0 <HAL_I2C_Init>:
 8006cf0:	2800      	cmp	r0, #0
 8006cf2:	d054      	beq.n	8006d9e <HAL_I2C_Init+0xae>
 8006cf4:	b510      	push	{r4, lr}
 8006cf6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006cfa:	4604      	mov	r4, r0
 8006cfc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006d00:	2b00      	cmp	r3, #0
 8006d02:	d047      	beq.n	8006d94 <HAL_I2C_Init+0xa4>
 8006d04:	6823      	ldr	r3, [r4, #0]
 8006d06:	2224      	movs	r2, #36	@ 0x24
 8006d08:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
 8006d0c:	6819      	ldr	r1, [r3, #0]
 8006d0e:	6862      	ldr	r2, [r4, #4]
 8006d10:	f021 0101 	bic.w	r1, r1, #1
 8006d14:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8006d18:	6019      	str	r1, [r3, #0]
 8006d1a:	611a      	str	r2, [r3, #16]
 8006d1c:	689a      	ldr	r2, [r3, #8]
 8006d1e:	68e1      	ldr	r1, [r4, #12]
 8006d20:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006d24:	2901      	cmp	r1, #1
 8006d26:	609a      	str	r2, [r3, #8]
 8006d28:	68a2      	ldr	r2, [r4, #8]
 8006d2a:	d009      	beq.n	8006d40 <HAL_I2C_Init+0x50>
 8006d2c:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8006d30:	2902      	cmp	r1, #2
 8006d32:	609a      	str	r2, [r3, #8]
 8006d34:	d107      	bne.n	8006d46 <HAL_I2C_Init+0x56>
 8006d36:	685a      	ldr	r2, [r3, #4]
 8006d38:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006d3c:	605a      	str	r2, [r3, #4]
 8006d3e:	e006      	b.n	8006d4e <HAL_I2C_Init+0x5e>
 8006d40:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006d44:	609a      	str	r2, [r3, #8]
 8006d46:	685a      	ldr	r2, [r3, #4]
 8006d48:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006d4c:	605a      	str	r2, [r3, #4]
 8006d4e:	6859      	ldr	r1, [r3, #4]
 8006d50:	6922      	ldr	r2, [r4, #16]
 8006d52:	f041 7100 	orr.w	r1, r1, #33554432	@ 0x2000000
 8006d56:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8006d5a:	6059      	str	r1, [r3, #4]
 8006d5c:	6961      	ldr	r1, [r4, #20]
 8006d5e:	68d8      	ldr	r0, [r3, #12]
 8006d60:	430a      	orrs	r2, r1
 8006d62:	69a1      	ldr	r1, [r4, #24]
 8006d64:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
 8006d68:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006d6c:	69e1      	ldr	r1, [r4, #28]
 8006d6e:	60d8      	str	r0, [r3, #12]
 8006d70:	6a20      	ldr	r0, [r4, #32]
 8006d72:	60da      	str	r2, [r3, #12]
 8006d74:	4301      	orrs	r1, r0
 8006d76:	6019      	str	r1, [r3, #0]
 8006d78:	6819      	ldr	r1, [r3, #0]
 8006d7a:	f041 0101 	orr.w	r1, r1, #1
 8006d7e:	6019      	str	r1, [r3, #0]
 8006d80:	2200      	movs	r2, #0
 8006d82:	2320      	movs	r3, #32
 8006d84:	6462      	str	r2, [r4, #68]	@ 0x44
 8006d86:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006d8a:	6322      	str	r2, [r4, #48]	@ 0x30
 8006d8c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006d90:	4610      	mov	r0, r2
 8006d92:	bd10      	pop	{r4, pc}
 8006d94:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
 8006d98:	f7fa ff9c 	bl	8001cd4 <HAL_I2C_MspInit>
 8006d9c:	e7b2      	b.n	8006d04 <HAL_I2C_Init+0x14>
 8006d9e:	2001      	movs	r0, #1
 8006da0:	4770      	bx	lr
 8006da2:	bf00      	nop

08006da4 <HAL_I2C_Mem_Write>:
 8006da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006da8:	4604      	mov	r4, r0
 8006daa:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
 8006dae:	b082      	sub	sp, #8
 8006db0:	2820      	cmp	r0, #32
 8006db2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8006db6:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8006db8:	f040 80a2 	bne.w	8006f00 <HAL_I2C_Mem_Write+0x15c>
 8006dbc:	4698      	mov	r8, r3
 8006dbe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	f000 8096 	beq.w	8006ef2 <HAL_I2C_Mem_Write+0x14e>
 8006dc6:	f1ba 0f00 	cmp.w	sl, #0
 8006dca:	f000 8092 	beq.w	8006ef2 <HAL_I2C_Mem_Write+0x14e>
 8006dce:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006dd2:	2b01      	cmp	r3, #1
 8006dd4:	f000 8094 	beq.w	8006f00 <HAL_I2C_Mem_Write+0x15c>
 8006dd8:	2301      	movs	r3, #1
 8006dda:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006dde:	460d      	mov	r5, r1
 8006de0:	4691      	mov	r9, r2
 8006de2:	f7fe fcbf 	bl	8005764 <HAL_GetTick>
 8006de6:	4606      	mov	r6, r0
 8006de8:	4601      	mov	r1, r0
 8006dea:	4620      	mov	r0, r4
 8006dec:	f7ff fcbc 	bl	8006768 <I2C_WaitOnFlagUntilTimeout.constprop.0>
 8006df0:	2800      	cmp	r0, #0
 8006df2:	f040 8081 	bne.w	8006ef8 <HAL_I2C_Mem_Write+0x154>
 8006df6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006df8:	6263      	str	r3, [r4, #36]	@ 0x24
 8006dfa:	2321      	movs	r3, #33	@ 0x21
 8006dfc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006e00:	6822      	ldr	r2, [r4, #0]
 8006e02:	4963      	ldr	r1, [pc, #396]	@ (8006f90 <HAL_I2C_Mem_Write+0x1ec>)
 8006e04:	6360      	str	r0, [r4, #52]	@ 0x34
 8006e06:	2340      	movs	r3, #64	@ 0x40
 8006e08:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006e0c:	6460      	str	r0, [r4, #68]	@ 0x44
 8006e0e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 8006e12:	6853      	ldr	r3, [r2, #4]
 8006e14:	400b      	ands	r3, r1
 8006e16:	fa5f f188 	uxtb.w	r1, r8
 8006e1a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006e1e:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8006e22:	432b      	orrs	r3, r5
 8006e24:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006e28:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8006e2c:	6053      	str	r3, [r2, #4]
 8006e2e:	4639      	mov	r1, r7
 8006e30:	4632      	mov	r2, r6
 8006e32:	4620      	mov	r0, r4
 8006e34:	f7ff fd38 	bl	80068a8 <I2C_WaitOnTXISFlagUntilTimeout>
 8006e38:	2800      	cmp	r0, #0
 8006e3a:	d165      	bne.n	8006f08 <HAL_I2C_Mem_Write+0x164>
 8006e3c:	f1b8 0f01 	cmp.w	r8, #1
 8006e40:	6823      	ldr	r3, [r4, #0]
 8006e42:	d165      	bne.n	8006f10 <HAL_I2C_Mem_Write+0x16c>
 8006e44:	fa5f f289 	uxtb.w	r2, r9
 8006e48:	629a      	str	r2, [r3, #40]	@ 0x28
 8006e4a:	9600      	str	r6, [sp, #0]
 8006e4c:	463b      	mov	r3, r7
 8006e4e:	2200      	movs	r2, #0
 8006e50:	2180      	movs	r1, #128	@ 0x80
 8006e52:	4620      	mov	r0, r4
 8006e54:	f7ff fdde 	bl	8006a14 <I2C_WaitOnFlagUntilTimeout>
 8006e58:	2800      	cmp	r0, #0
 8006e5a:	d155      	bne.n	8006f08 <HAL_I2C_Mem_Write+0x164>
 8006e5c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e5e:	6822      	ldr	r2, [r4, #0]
 8006e60:	b29b      	uxth	r3, r3
 8006e62:	2bff      	cmp	r3, #255	@ 0xff
 8006e64:	d970      	bls.n	8006f48 <HAL_I2C_Mem_Write+0x1a4>
 8006e66:	6853      	ldr	r3, [r2, #4]
 8006e68:	494a      	ldr	r1, [pc, #296]	@ (8006f94 <HAL_I2C_Mem_Write+0x1f0>)
 8006e6a:	400b      	ands	r3, r1
 8006e6c:	432b      	orrs	r3, r5
 8006e6e:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006e72:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e76:	21ff      	movs	r1, #255	@ 0xff
 8006e78:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006e7a:	6053      	str	r3, [r2, #4]
 8006e7c:	e003      	b.n	8006e86 <HAL_I2C_Mem_Write+0xe2>
 8006e7e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e80:	b29b      	uxth	r3, r3
 8006e82:	2b00      	cmp	r3, #0
 8006e84:	d06e      	beq.n	8006f64 <HAL_I2C_Mem_Write+0x1c0>
 8006e86:	4632      	mov	r2, r6
 8006e88:	4639      	mov	r1, r7
 8006e8a:	4620      	mov	r0, r4
 8006e8c:	f7ff fd0c 	bl	80068a8 <I2C_WaitOnTXISFlagUntilTimeout>
 8006e90:	2800      	cmp	r0, #0
 8006e92:	d131      	bne.n	8006ef8 <HAL_I2C_Mem_Write+0x154>
 8006e94:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006e96:	6823      	ldr	r3, [r4, #0]
 8006e98:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006e9c:	629a      	str	r2, [r3, #40]	@ 0x28
 8006e9e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006ea0:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8006ea2:	6261      	str	r1, [r4, #36]	@ 0x24
 8006ea4:	3b01      	subs	r3, #1
 8006ea6:	b29b      	uxth	r3, r3
 8006ea8:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8006eaa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006eac:	3a01      	subs	r2, #1
 8006eae:	b292      	uxth	r2, r2
 8006eb0:	b29b      	uxth	r3, r3
 8006eb2:	8522      	strh	r2, [r4, #40]	@ 0x28
 8006eb4:	2b00      	cmp	r3, #0
 8006eb6:	d0e2      	beq.n	8006e7e <HAL_I2C_Mem_Write+0xda>
 8006eb8:	2a00      	cmp	r2, #0
 8006eba:	d1e0      	bne.n	8006e7e <HAL_I2C_Mem_Write+0xda>
 8006ebc:	2180      	movs	r1, #128	@ 0x80
 8006ebe:	9600      	str	r6, [sp, #0]
 8006ec0:	463b      	mov	r3, r7
 8006ec2:	4620      	mov	r0, r4
 8006ec4:	f7ff fda6 	bl	8006a14 <I2C_WaitOnFlagUntilTimeout>
 8006ec8:	21ff      	movs	r1, #255	@ 0xff
 8006eca:	b9a8      	cbnz	r0, 8006ef8 <HAL_I2C_Mem_Write+0x154>
 8006ecc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006ece:	f8df c0c4 	ldr.w	ip, [pc, #196]	@ 8006f94 <HAL_I2C_Mem_Write+0x1f0>
 8006ed2:	6822      	ldr	r2, [r4, #0]
 8006ed4:	b29b      	uxth	r3, r3
 8006ed6:	428b      	cmp	r3, r1
 8006ed8:	4660      	mov	r0, ip
 8006eda:	d928      	bls.n	8006f2e <HAL_I2C_Mem_Write+0x18a>
 8006edc:	6853      	ldr	r3, [r2, #4]
 8006ede:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006ee0:	ea03 030c 	and.w	r3, r3, ip
 8006ee4:	432b      	orrs	r3, r5
 8006ee6:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006eea:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006eee:	6053      	str	r3, [r2, #4]
 8006ef0:	e7c5      	b.n	8006e7e <HAL_I2C_Mem_Write+0xda>
 8006ef2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8006ef6:	6463      	str	r3, [r4, #68]	@ 0x44
 8006ef8:	2001      	movs	r0, #1
 8006efa:	b002      	add	sp, #8
 8006efc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f00:	2002      	movs	r0, #2
 8006f02:	b002      	add	sp, #8
 8006f04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f08:	2300      	movs	r3, #0
 8006f0a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006f0e:	e7f3      	b.n	8006ef8 <HAL_I2C_Mem_Write+0x154>
 8006f10:	ea4f 2219 	mov.w	r2, r9, lsr #8
 8006f14:	629a      	str	r2, [r3, #40]	@ 0x28
 8006f16:	4639      	mov	r1, r7
 8006f18:	4632      	mov	r2, r6
 8006f1a:	4620      	mov	r0, r4
 8006f1c:	f7ff fcc4 	bl	80068a8 <I2C_WaitOnTXISFlagUntilTimeout>
 8006f20:	2800      	cmp	r0, #0
 8006f22:	d1f1      	bne.n	8006f08 <HAL_I2C_Mem_Write+0x164>
 8006f24:	6823      	ldr	r3, [r4, #0]
 8006f26:	fa5f f289 	uxtb.w	r2, r9
 8006f2a:	629a      	str	r2, [r3, #40]	@ 0x28
 8006f2c:	e78d      	b.n	8006e4a <HAL_I2C_Mem_Write+0xa6>
 8006f2e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006f30:	6851      	ldr	r1, [r2, #4]
 8006f32:	b29b      	uxth	r3, r3
 8006f34:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006f36:	b2db      	uxtb	r3, r3
 8006f38:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006f3c:	4001      	ands	r1, r0
 8006f3e:	430b      	orrs	r3, r1
 8006f40:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006f44:	6053      	str	r3, [r2, #4]
 8006f46:	e79a      	b.n	8006e7e <HAL_I2C_Mem_Write+0xda>
 8006f48:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006f4a:	4812      	ldr	r0, [pc, #72]	@ (8006f94 <HAL_I2C_Mem_Write+0x1f0>)
 8006f4c:	6851      	ldr	r1, [r2, #4]
 8006f4e:	b29b      	uxth	r3, r3
 8006f50:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006f52:	b2db      	uxtb	r3, r3
 8006f54:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006f58:	4001      	ands	r1, r0
 8006f5a:	430b      	orrs	r3, r1
 8006f5c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006f60:	6053      	str	r3, [r2, #4]
 8006f62:	e790      	b.n	8006e86 <HAL_I2C_Mem_Write+0xe2>
 8006f64:	4632      	mov	r2, r6
 8006f66:	4639      	mov	r1, r7
 8006f68:	4620      	mov	r0, r4
 8006f6a:	f7ff fe11 	bl	8006b90 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006f6e:	2800      	cmp	r0, #0
 8006f70:	d1c2      	bne.n	8006ef8 <HAL_I2C_Mem_Write+0x154>
 8006f72:	6823      	ldr	r3, [r4, #0]
 8006f74:	4d08      	ldr	r5, [pc, #32]	@ (8006f98 <HAL_I2C_Mem_Write+0x1f4>)
 8006f76:	2120      	movs	r1, #32
 8006f78:	61d9      	str	r1, [r3, #28]
 8006f7a:	685a      	ldr	r2, [r3, #4]
 8006f7c:	402a      	ands	r2, r5
 8006f7e:	605a      	str	r2, [r3, #4]
 8006f80:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006f84:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
 8006f88:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 8006f8c:	e7b5      	b.n	8006efa <HAL_I2C_Mem_Write+0x156>
 8006f8e:	bf00      	nop
 8006f90:	fc009800 	.word	0xfc009800
 8006f94:	fc009c00 	.word	0xfc009c00
 8006f98:	fe00e800 	.word	0xfe00e800

08006f9c <HAL_I2C_Mem_Read>:
 8006f9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006fa0:	4604      	mov	r4, r0
 8006fa2:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
 8006fa6:	b082      	sub	sp, #8
 8006fa8:	2820      	cmp	r0, #32
 8006faa:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8006fae:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8006fb0:	f040 80a3 	bne.w	80070fa <HAL_I2C_Mem_Read+0x15e>
 8006fb4:	4698      	mov	r8, r3
 8006fb6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	f000 8097 	beq.w	80070ec <HAL_I2C_Mem_Read+0x150>
 8006fbe:	f1ba 0f00 	cmp.w	sl, #0
 8006fc2:	f000 8093 	beq.w	80070ec <HAL_I2C_Mem_Read+0x150>
 8006fc6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006fca:	2b01      	cmp	r3, #1
 8006fcc:	f000 8095 	beq.w	80070fa <HAL_I2C_Mem_Read+0x15e>
 8006fd0:	2301      	movs	r3, #1
 8006fd2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006fd6:	460d      	mov	r5, r1
 8006fd8:	4691      	mov	r9, r2
 8006fda:	f7fe fbc3 	bl	8005764 <HAL_GetTick>
 8006fde:	4606      	mov	r6, r0
 8006fe0:	4601      	mov	r1, r0
 8006fe2:	4620      	mov	r0, r4
 8006fe4:	f7ff fbc0 	bl	8006768 <I2C_WaitOnFlagUntilTimeout.constprop.0>
 8006fe8:	2800      	cmp	r0, #0
 8006fea:	f040 8082 	bne.w	80070f2 <HAL_I2C_Mem_Read+0x156>
 8006fee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006ff0:	6263      	str	r3, [r4, #36]	@ 0x24
 8006ff2:	2322      	movs	r3, #34	@ 0x22
 8006ff4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006ff8:	6822      	ldr	r2, [r4, #0]
 8006ffa:	4964      	ldr	r1, [pc, #400]	@ (800718c <HAL_I2C_Mem_Read+0x1f0>)
 8006ffc:	6360      	str	r0, [r4, #52]	@ 0x34
 8006ffe:	2340      	movs	r3, #64	@ 0x40
 8007000:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007004:	6460      	str	r0, [r4, #68]	@ 0x44
 8007006:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 800700a:	6853      	ldr	r3, [r2, #4]
 800700c:	400b      	ands	r3, r1
 800700e:	fa5f f188 	uxtb.w	r1, r8
 8007012:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007016:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800701a:	432b      	orrs	r3, r5
 800701c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8007020:	6053      	str	r3, [r2, #4]
 8007022:	4639      	mov	r1, r7
 8007024:	4632      	mov	r2, r6
 8007026:	4620      	mov	r0, r4
 8007028:	f7ff fc3e 	bl	80068a8 <I2C_WaitOnTXISFlagUntilTimeout>
 800702c:	2800      	cmp	r0, #0
 800702e:	d168      	bne.n	8007102 <HAL_I2C_Mem_Read+0x166>
 8007030:	f1b8 0f01 	cmp.w	r8, #1
 8007034:	6823      	ldr	r3, [r4, #0]
 8007036:	d168      	bne.n	800710a <HAL_I2C_Mem_Read+0x16e>
 8007038:	fa5f f289 	uxtb.w	r2, r9
 800703c:	629a      	str	r2, [r3, #40]	@ 0x28
 800703e:	9600      	str	r6, [sp, #0]
 8007040:	463b      	mov	r3, r7
 8007042:	2200      	movs	r2, #0
 8007044:	2140      	movs	r1, #64	@ 0x40
 8007046:	4620      	mov	r0, r4
 8007048:	f7ff fce4 	bl	8006a14 <I2C_WaitOnFlagUntilTimeout>
 800704c:	2800      	cmp	r0, #0
 800704e:	d158      	bne.n	8007102 <HAL_I2C_Mem_Read+0x166>
 8007050:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007052:	6822      	ldr	r2, [r4, #0]
 8007054:	b29b      	uxth	r3, r3
 8007056:	2bff      	cmp	r3, #255	@ 0xff
 8007058:	d973      	bls.n	8007142 <HAL_I2C_Mem_Read+0x1a6>
 800705a:	6853      	ldr	r3, [r2, #4]
 800705c:	494b      	ldr	r1, [pc, #300]	@ (800718c <HAL_I2C_Mem_Read+0x1f0>)
 800705e:	400b      	ands	r3, r1
 8007060:	432b      	orrs	r3, r5
 8007062:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8007066:	f443 3392 	orr.w	r3, r3, #74752	@ 0x12400
 800706a:	21ff      	movs	r1, #255	@ 0xff
 800706c:	8521      	strh	r1, [r4, #40]	@ 0x28
 800706e:	6053      	str	r3, [r2, #4]
 8007070:	e003      	b.n	800707a <HAL_I2C_Mem_Read+0xde>
 8007072:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007074:	b29b      	uxth	r3, r3
 8007076:	2b00      	cmp	r3, #0
 8007078:	d073      	beq.n	8007162 <HAL_I2C_Mem_Read+0x1c6>
 800707a:	9600      	str	r6, [sp, #0]
 800707c:	463b      	mov	r3, r7
 800707e:	2200      	movs	r2, #0
 8007080:	2104      	movs	r1, #4
 8007082:	4620      	mov	r0, r4
 8007084:	f7ff fcc6 	bl	8006a14 <I2C_WaitOnFlagUntilTimeout>
 8007088:	2800      	cmp	r0, #0
 800708a:	d132      	bne.n	80070f2 <HAL_I2C_Mem_Read+0x156>
 800708c:	6822      	ldr	r2, [r4, #0]
 800708e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007090:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8007092:	701a      	strb	r2, [r3, #0]
 8007094:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007096:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8007098:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800709a:	3b01      	subs	r3, #1
 800709c:	b29b      	uxth	r3, r3
 800709e:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80070a0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80070a2:	3a01      	subs	r2, #1
 80070a4:	b292      	uxth	r2, r2
 80070a6:	3101      	adds	r1, #1
 80070a8:	b29b      	uxth	r3, r3
 80070aa:	6261      	str	r1, [r4, #36]	@ 0x24
 80070ac:	8522      	strh	r2, [r4, #40]	@ 0x28
 80070ae:	2b00      	cmp	r3, #0
 80070b0:	d0df      	beq.n	8007072 <HAL_I2C_Mem_Read+0xd6>
 80070b2:	2a00      	cmp	r2, #0
 80070b4:	d1dd      	bne.n	8007072 <HAL_I2C_Mem_Read+0xd6>
 80070b6:	2180      	movs	r1, #128	@ 0x80
 80070b8:	9600      	str	r6, [sp, #0]
 80070ba:	463b      	mov	r3, r7
 80070bc:	4620      	mov	r0, r4
 80070be:	f7ff fca9 	bl	8006a14 <I2C_WaitOnFlagUntilTimeout>
 80070c2:	21ff      	movs	r1, #255	@ 0xff
 80070c4:	b9a8      	cbnz	r0, 80070f2 <HAL_I2C_Mem_Read+0x156>
 80070c6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80070c8:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 8007194 <HAL_I2C_Mem_Read+0x1f8>
 80070cc:	6822      	ldr	r2, [r4, #0]
 80070ce:	b29b      	uxth	r3, r3
 80070d0:	428b      	cmp	r3, r1
 80070d2:	4660      	mov	r0, ip
 80070d4:	d928      	bls.n	8007128 <HAL_I2C_Mem_Read+0x18c>
 80070d6:	6853      	ldr	r3, [r2, #4]
 80070d8:	8521      	strh	r1, [r4, #40]	@ 0x28
 80070da:	ea03 030c 	and.w	r3, r3, ip
 80070de:	432b      	orrs	r3, r5
 80070e0:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 80070e4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80070e8:	6053      	str	r3, [r2, #4]
 80070ea:	e7c2      	b.n	8007072 <HAL_I2C_Mem_Read+0xd6>
 80070ec:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80070f0:	6463      	str	r3, [r4, #68]	@ 0x44
 80070f2:	2001      	movs	r0, #1
 80070f4:	b002      	add	sp, #8
 80070f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070fa:	2002      	movs	r0, #2
 80070fc:	b002      	add	sp, #8
 80070fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007102:	2300      	movs	r3, #0
 8007104:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8007108:	e7f3      	b.n	80070f2 <HAL_I2C_Mem_Read+0x156>
 800710a:	ea4f 2219 	mov.w	r2, r9, lsr #8
 800710e:	629a      	str	r2, [r3, #40]	@ 0x28
 8007110:	4639      	mov	r1, r7
 8007112:	4632      	mov	r2, r6
 8007114:	4620      	mov	r0, r4
 8007116:	f7ff fbc7 	bl	80068a8 <I2C_WaitOnTXISFlagUntilTimeout>
 800711a:	2800      	cmp	r0, #0
 800711c:	d1f1      	bne.n	8007102 <HAL_I2C_Mem_Read+0x166>
 800711e:	6823      	ldr	r3, [r4, #0]
 8007120:	fa5f f289 	uxtb.w	r2, r9
 8007124:	629a      	str	r2, [r3, #40]	@ 0x28
 8007126:	e78a      	b.n	800703e <HAL_I2C_Mem_Read+0xa2>
 8007128:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800712a:	6851      	ldr	r1, [r2, #4]
 800712c:	b29b      	uxth	r3, r3
 800712e:	8523      	strh	r3, [r4, #40]	@ 0x28
 8007130:	b2db      	uxtb	r3, r3
 8007132:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007136:	4001      	ands	r1, r0
 8007138:	430b      	orrs	r3, r1
 800713a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800713e:	6053      	str	r3, [r2, #4]
 8007140:	e797      	b.n	8007072 <HAL_I2C_Mem_Read+0xd6>
 8007142:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8007144:	4811      	ldr	r0, [pc, #68]	@ (800718c <HAL_I2C_Mem_Read+0x1f0>)
 8007146:	6851      	ldr	r1, [r2, #4]
 8007148:	b29b      	uxth	r3, r3
 800714a:	8523      	strh	r3, [r4, #40]	@ 0x28
 800714c:	b2db      	uxtb	r3, r3
 800714e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007152:	4001      	ands	r1, r0
 8007154:	430b      	orrs	r3, r1
 8007156:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800715a:	f443 5310 	orr.w	r3, r3, #9216	@ 0x2400
 800715e:	6053      	str	r3, [r2, #4]
 8007160:	e78b      	b.n	800707a <HAL_I2C_Mem_Read+0xde>
 8007162:	4632      	mov	r2, r6
 8007164:	4639      	mov	r1, r7
 8007166:	4620      	mov	r0, r4
 8007168:	f7ff fd12 	bl	8006b90 <I2C_WaitOnSTOPFlagUntilTimeout>
 800716c:	2800      	cmp	r0, #0
 800716e:	d1c0      	bne.n	80070f2 <HAL_I2C_Mem_Read+0x156>
 8007170:	6823      	ldr	r3, [r4, #0]
 8007172:	4d07      	ldr	r5, [pc, #28]	@ (8007190 <HAL_I2C_Mem_Read+0x1f4>)
 8007174:	2120      	movs	r1, #32
 8007176:	61d9      	str	r1, [r3, #28]
 8007178:	685a      	ldr	r2, [r3, #4]
 800717a:	402a      	ands	r2, r5
 800717c:	605a      	str	r2, [r3, #4]
 800717e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8007182:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
 8007186:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 800718a:	e7b3      	b.n	80070f4 <HAL_I2C_Mem_Read+0x158>
 800718c:	fc009800 	.word	0xfc009800
 8007190:	fe00e800 	.word	0xfe00e800
 8007194:	fc009c00 	.word	0xfc009c00

08007198 <HAL_I2CEx_ConfigAnalogFilter>:
 8007198:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
 800719c:	2a20      	cmp	r2, #32
 800719e:	d123      	bne.n	80071e8 <HAL_I2CEx_ConfigAnalogFilter+0x50>
 80071a0:	fa5f fc82 	uxtb.w	ip, r2
 80071a4:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80071a8:	2a01      	cmp	r2, #1
 80071aa:	4603      	mov	r3, r0
 80071ac:	d01c      	beq.n	80071e8 <HAL_I2CEx_ConfigAnalogFilter+0x50>
 80071ae:	6802      	ldr	r2, [r0, #0]
 80071b0:	2024      	movs	r0, #36	@ 0x24
 80071b2:	b500      	push	{lr}
 80071b4:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
 80071b8:	6810      	ldr	r0, [r2, #0]
 80071ba:	f020 0001 	bic.w	r0, r0, #1
 80071be:	6010      	str	r0, [r2, #0]
 80071c0:	6810      	ldr	r0, [r2, #0]
 80071c2:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 80071c6:	6010      	str	r0, [r2, #0]
 80071c8:	6810      	ldr	r0, [r2, #0]
 80071ca:	4301      	orrs	r1, r0
 80071cc:	6011      	str	r1, [r2, #0]
 80071ce:	6811      	ldr	r1, [r2, #0]
 80071d0:	f04f 0e00 	mov.w	lr, #0
 80071d4:	f041 0101 	orr.w	r1, r1, #1
 80071d8:	6011      	str	r1, [r2, #0]
 80071da:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
 80071de:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
 80071e2:	4670      	mov	r0, lr
 80071e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80071e8:	2002      	movs	r0, #2
 80071ea:	4770      	bx	lr

080071ec <HAL_I2CEx_ConfigDigitalFilter>:
 80071ec:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
 80071f0:	2a20      	cmp	r2, #32
 80071f2:	d122      	bne.n	800723a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
 80071f4:	b500      	push	{lr}
 80071f6:	fa5f fe82 	uxtb.w	lr, r2
 80071fa:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80071fe:	2a01      	cmp	r2, #1
 8007200:	4603      	mov	r3, r0
 8007202:	d01c      	beq.n	800723e <HAL_I2CEx_ConfigDigitalFilter+0x52>
 8007204:	6802      	ldr	r2, [r0, #0]
 8007206:	2024      	movs	r0, #36	@ 0x24
 8007208:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
 800720c:	6810      	ldr	r0, [r2, #0]
 800720e:	f020 0001 	bic.w	r0, r0, #1
 8007212:	6010      	str	r0, [r2, #0]
 8007214:	6810      	ldr	r0, [r2, #0]
 8007216:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 800721a:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
 800721e:	6011      	str	r1, [r2, #0]
 8007220:	6811      	ldr	r1, [r2, #0]
 8007222:	f04f 0c00 	mov.w	ip, #0
 8007226:	f041 0101 	orr.w	r1, r1, #1
 800722a:	6011      	str	r1, [r2, #0]
 800722c:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
 8007230:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
 8007234:	4660      	mov	r0, ip
 8007236:	f85d fb04 	ldr.w	pc, [sp], #4
 800723a:	2002      	movs	r0, #2
 800723c:	4770      	bx	lr
 800723e:	2002      	movs	r0, #2
 8007240:	f85d fb04 	ldr.w	pc, [sp], #4

08007244 <HAL_I2CEx_EnableFastModePlus>:
 8007244:	4a02      	ldr	r2, [pc, #8]	@ (8007250 <HAL_I2CEx_EnableFastModePlus+0xc>)
 8007246:	6853      	ldr	r3, [r2, #4]
 8007248:	4303      	orrs	r3, r0
 800724a:	6053      	str	r3, [r2, #4]
 800724c:	4770      	bx	lr
 800724e:	bf00      	nop
 8007250:	40010000 	.word	0x40010000

08007254 <HAL_IPCC_TxCallback>:
 8007254:	4770      	bx	lr
 8007256:	bf00      	nop

08007258 <HAL_IPCC_RxCallback>:
 8007258:	4770      	bx	lr
 800725a:	bf00      	nop

0800725c <HAL_IPCC_Init>:
 800725c:	b330      	cbz	r0, 80072ac <HAL_IPCC_Init+0x50>
 800725e:	b510      	push	{r4, lr}
 8007260:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8007264:	4604      	mov	r4, r0
 8007266:	b1f3      	cbz	r3, 80072a6 <HAL_IPCC_Init+0x4a>
 8007268:	4b11      	ldr	r3, [pc, #68]	@ (80072b0 <HAL_IPCC_Init+0x54>)
 800726a:	2000      	movs	r0, #0
 800726c:	f04f 113f 	mov.w	r1, #4128831	@ 0x3f003f
 8007270:	223f      	movs	r2, #63	@ 0x3f
 8007272:	6018      	str	r0, [r3, #0]
 8007274:	6059      	str	r1, [r3, #4]
 8007276:	609a      	str	r2, [r3, #8]
 8007278:	6819      	ldr	r1, [r3, #0]
 800727a:	4a0e      	ldr	r2, [pc, #56]	@ (80072b4 <HAL_IPCC_Init+0x58>)
 800727c:	f041 1101 	orr.w	r1, r1, #65537	@ 0x10001
 8007280:	6019      	str	r1, [r3, #0]
 8007282:	4b0d      	ldr	r3, [pc, #52]	@ (80072b8 <HAL_IPCC_Init+0x5c>)
 8007284:	6360      	str	r0, [r4, #52]	@ 0x34
 8007286:	2101      	movs	r1, #1
 8007288:	f884 1038 	strb.w	r1, [r4, #56]	@ 0x38
 800728c:	e9c4 2201 	strd	r2, r2, [r4, #4]
 8007290:	e9c4 3307 	strd	r3, r3, [r4, #28]
 8007294:	e9c4 2203 	strd	r2, r2, [r4, #12]
 8007298:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
 800729c:	e9c4 2205 	strd	r2, r2, [r4, #20]
 80072a0:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 80072a4:	bd10      	pop	{r4, pc}
 80072a6:	f7fa fdb9 	bl	8001e1c <HAL_IPCC_MspInit>
 80072aa:	e7dd      	b.n	8007268 <HAL_IPCC_Init+0xc>
 80072ac:	2001      	movs	r0, #1
 80072ae:	4770      	bx	lr
 80072b0:	58000c00 	.word	0x58000c00
 80072b4:	08007259 	.word	0x08007259
 80072b8:	08007255 	.word	0x08007255

080072bc <HAL_IPCC_TX_IRQHandler>:
 80072bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072c0:	4f13      	ldr	r7, [pc, #76]	@ (8007310 <HAL_IPCC_TX_IRQHandler+0x54>)
 80072c2:	687e      	ldr	r6, [r7, #4]
 80072c4:	68fb      	ldr	r3, [r7, #12]
 80072c6:	ea46 4603 	orr.w	r6, r6, r3, lsl #16
 80072ca:	43f6      	mvns	r6, r6
 80072cc:	f416 167c 	ands.w	r6, r6, #4128768	@ 0x3f0000
 80072d0:	d01c      	beq.n	800730c <HAL_IPCC_TX_IRQHandler+0x50>
 80072d2:	4682      	mov	sl, r0
 80072d4:	2500      	movs	r5, #0
 80072d6:	f100 091c 	add.w	r9, r0, #28
 80072da:	f04f 0801 	mov.w	r8, #1
 80072de:	e000      	b.n	80072e2 <HAL_IPCC_TX_IRQHandler+0x26>
 80072e0:	3501      	adds	r5, #1
 80072e2:	f005 040f 	and.w	r4, r5, #15
 80072e6:	3410      	adds	r4, #16
 80072e8:	fa08 f404 	lsl.w	r4, r8, r4
 80072ec:	4234      	tst	r4, r6
 80072ee:	d0f7      	beq.n	80072e0 <HAL_IPCC_TX_IRQHandler+0x24>
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	f859 b025 	ldr.w	fp, [r9, r5, lsl #2]
 80072f6:	4323      	orrs	r3, r4
 80072f8:	2200      	movs	r2, #0
 80072fa:	4629      	mov	r1, r5
 80072fc:	4650      	mov	r0, sl
 80072fe:	607b      	str	r3, [r7, #4]
 8007300:	f1bb 0f00 	cmp.w	fp, #0
 8007304:	d000      	beq.n	8007308 <HAL_IPCC_TX_IRQHandler+0x4c>
 8007306:	47d8      	blx	fp
 8007308:	43a6      	bics	r6, r4
 800730a:	d1e9      	bne.n	80072e0 <HAL_IPCC_TX_IRQHandler+0x24>
 800730c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007310:	58000c00 	.word	0x58000c00

08007314 <HAL_IPCC_RX_IRQHandler>:
 8007314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007318:	f8df 804c 	ldr.w	r8, [pc, #76]	@ 8007368 <HAL_IPCC_RX_IRQHandler+0x54>
 800731c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8007320:	f8d8 601c 	ldr.w	r6, [r8, #28]
 8007324:	ea26 0603 	bic.w	r6, r6, r3
 8007328:	f016 063f 	ands.w	r6, r6, #63	@ 0x3f
 800732c:	d01a      	beq.n	8007364 <HAL_IPCC_RX_IRQHandler+0x50>
 800732e:	2501      	movs	r5, #1
 8007330:	4607      	mov	r7, r0
 8007332:	46a9      	mov	r9, r5
 8007334:	e000      	b.n	8007338 <HAL_IPCC_RX_IRQHandler+0x24>
 8007336:	3501      	adds	r5, #1
 8007338:	1e69      	subs	r1, r5, #1
 800733a:	f001 040f 	and.w	r4, r1, #15
 800733e:	fa09 f404 	lsl.w	r4, r9, r4
 8007342:	4234      	tst	r4, r6
 8007344:	d0f7      	beq.n	8007336 <HAL_IPCC_RX_IRQHandler+0x22>
 8007346:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800734a:	f857 a025 	ldr.w	sl, [r7, r5, lsl #2]
 800734e:	4323      	orrs	r3, r4
 8007350:	2201      	movs	r2, #1
 8007352:	4638      	mov	r0, r7
 8007354:	f8c8 3004 	str.w	r3, [r8, #4]
 8007358:	f1ba 0f00 	cmp.w	sl, #0
 800735c:	d000      	beq.n	8007360 <HAL_IPCC_RX_IRQHandler+0x4c>
 800735e:	47d0      	blx	sl
 8007360:	43a6      	bics	r6, r4
 8007362:	d1e8      	bne.n	8007336 <HAL_IPCC_RX_IRQHandler+0x22>
 8007364:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007368:	58000c00 	.word	0x58000c00

0800736c <HAL_PCD_Init>:
 800736c:	2800      	cmp	r0, #0
 800736e:	f000 80d7 	beq.w	8007520 <HAL_PCD_Init+0x1b4>
 8007372:	b510      	push	{r4, lr}
 8007374:	f890 3291 	ldrb.w	r3, [r0, #657]	@ 0x291
 8007378:	4604      	mov	r4, r0
 800737a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800737e:	2b00      	cmp	r3, #0
 8007380:	f000 80c9 	beq.w	8007516 <HAL_PCD_Init+0x1aa>
 8007384:	2303      	movs	r3, #3
 8007386:	6820      	ldr	r0, [r4, #0]
 8007388:	f884 3291 	strb.w	r3, [r4, #657]	@ 0x291
 800738c:	f004 fc1c 	bl	800bbc8 <USB_DisableGlobalInt>
 8007390:	7922      	ldrb	r2, [r4, #4]
 8007392:	2a00      	cmp	r2, #0
 8007394:	f000 80ae 	beq.w	80074f4 <HAL_PCD_Init+0x188>
 8007398:	2300      	movs	r3, #0
 800739a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800739e:	2a01      	cmp	r2, #1
 80073a0:	e9c4 3308 	strd	r3, r3, [r4, #32]
 80073a4:	8221      	strh	r1, [r4, #16]
 80073a6:	74e3      	strb	r3, [r4, #19]
 80073a8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80073aa:	f000 80c0 	beq.w	800752e <HAL_PCD_Init+0x1c2>
 80073ae:	f240 1101 	movw	r1, #257	@ 0x101
 80073b2:	2a02      	cmp	r2, #2
 80073b4:	e9c4 3312 	strd	r3, r3, [r4, #72]	@ 0x48
 80073b8:	8721      	strh	r1, [r4, #56]	@ 0x38
 80073ba:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
 80073be:	6523      	str	r3, [r4, #80]	@ 0x50
 80073c0:	d044      	beq.n	800744c <HAL_PCD_Init+0xe0>
 80073c2:	f44f 7181 	mov.w	r1, #258	@ 0x102
 80073c6:	2a03      	cmp	r2, #3
 80073c8:	e9c4 331c 	strd	r3, r3, [r4, #112]	@ 0x70
 80073cc:	f8a4 1060 	strh.w	r1, [r4, #96]	@ 0x60
 80073d0:	f884 3063 	strb.w	r3, [r4, #99]	@ 0x63
 80073d4:	67a3      	str	r3, [r4, #120]	@ 0x78
 80073d6:	d039      	beq.n	800744c <HAL_PCD_Init+0xe0>
 80073d8:	f240 1103 	movw	r1, #259	@ 0x103
 80073dc:	2a04      	cmp	r2, #4
 80073de:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
 80073e2:	f8a4 1088 	strh.w	r1, [r4, #136]	@ 0x88
 80073e6:	f884 308b 	strb.w	r3, [r4, #139]	@ 0x8b
 80073ea:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 80073ee:	d02d      	beq.n	800744c <HAL_PCD_Init+0xe0>
 80073f0:	f44f 7182 	mov.w	r1, #260	@ 0x104
 80073f4:	2a05      	cmp	r2, #5
 80073f6:	e9c4 3330 	strd	r3, r3, [r4, #192]	@ 0xc0
 80073fa:	f8a4 10b0 	strh.w	r1, [r4, #176]	@ 0xb0
 80073fe:	f884 30b3 	strb.w	r3, [r4, #179]	@ 0xb3
 8007402:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 8007406:	d021      	beq.n	800744c <HAL_PCD_Init+0xe0>
 8007408:	f240 1105 	movw	r1, #261	@ 0x105
 800740c:	2a06      	cmp	r2, #6
 800740e:	e9c4 333a 	strd	r3, r3, [r4, #232]	@ 0xe8
 8007412:	f8a4 10d8 	strh.w	r1, [r4, #216]	@ 0xd8
 8007416:	f884 30db 	strb.w	r3, [r4, #219]	@ 0xdb
 800741a:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 800741e:	d015      	beq.n	800744c <HAL_PCD_Init+0xe0>
 8007420:	f44f 7183 	mov.w	r1, #262	@ 0x106
 8007424:	2a07      	cmp	r2, #7
 8007426:	e9c4 3344 	strd	r3, r3, [r4, #272]	@ 0x110
 800742a:	f8a4 1100 	strh.w	r1, [r4, #256]	@ 0x100
 800742e:	f884 3103 	strb.w	r3, [r4, #259]	@ 0x103
 8007432:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 8007436:	d009      	beq.n	800744c <HAL_PCD_Init+0xe0>
 8007438:	e9c4 334e 	strd	r3, r3, [r4, #312]	@ 0x138
 800743c:	f240 1107 	movw	r1, #263	@ 0x107
 8007440:	f8a4 1128 	strh.w	r1, [r4, #296]	@ 0x128
 8007444:	f884 312b 	strb.w	r3, [r4, #299]	@ 0x12b
 8007448:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 800744c:	2300      	movs	r3, #0
 800744e:	2101      	movs	r1, #1
 8007450:	2a02      	cmp	r2, #2
 8007452:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
 8007456:	e9c4 3362 	strd	r3, r3, [r4, #392]	@ 0x188
 800745a:	f8a4 3150 	strh.w	r3, [r4, #336]	@ 0x150
 800745e:	f884 3153 	strb.w	r3, [r4, #339]	@ 0x153
 8007462:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
 8007466:	f8a4 1178 	strh.w	r1, [r4, #376]	@ 0x178
 800746a:	f884 317b 	strb.w	r3, [r4, #379]	@ 0x17b
 800746e:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
 8007472:	d03f      	beq.n	80074f4 <HAL_PCD_Init+0x188>
 8007474:	2102      	movs	r1, #2
 8007476:	2a03      	cmp	r2, #3
 8007478:	e9c4 336c 	strd	r3, r3, [r4, #432]	@ 0x1b0
 800747c:	f8a4 11a0 	strh.w	r1, [r4, #416]	@ 0x1a0
 8007480:	f884 31a3 	strb.w	r3, [r4, #419]	@ 0x1a3
 8007484:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
 8007488:	d034      	beq.n	80074f4 <HAL_PCD_Init+0x188>
 800748a:	2103      	movs	r1, #3
 800748c:	2a04      	cmp	r2, #4
 800748e:	e9c4 3376 	strd	r3, r3, [r4, #472]	@ 0x1d8
 8007492:	f8a4 11c8 	strh.w	r1, [r4, #456]	@ 0x1c8
 8007496:	f884 31cb 	strb.w	r3, [r4, #459]	@ 0x1cb
 800749a:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
 800749e:	d029      	beq.n	80074f4 <HAL_PCD_Init+0x188>
 80074a0:	2104      	movs	r1, #4
 80074a2:	2a05      	cmp	r2, #5
 80074a4:	e9c4 3380 	strd	r3, r3, [r4, #512]	@ 0x200
 80074a8:	f8a4 11f0 	strh.w	r1, [r4, #496]	@ 0x1f0
 80074ac:	f884 31f3 	strb.w	r3, [r4, #499]	@ 0x1f3
 80074b0:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
 80074b4:	d01e      	beq.n	80074f4 <HAL_PCD_Init+0x188>
 80074b6:	2105      	movs	r1, #5
 80074b8:	2a06      	cmp	r2, #6
 80074ba:	e9c4 338a 	strd	r3, r3, [r4, #552]	@ 0x228
 80074be:	f8a4 1218 	strh.w	r1, [r4, #536]	@ 0x218
 80074c2:	f884 321b 	strb.w	r3, [r4, #539]	@ 0x21b
 80074c6:	f8c4 3230 	str.w	r3, [r4, #560]	@ 0x230
 80074ca:	d013      	beq.n	80074f4 <HAL_PCD_Init+0x188>
 80074cc:	2106      	movs	r1, #6
 80074ce:	2a07      	cmp	r2, #7
 80074d0:	e9c4 3394 	strd	r3, r3, [r4, #592]	@ 0x250
 80074d4:	f8a4 1240 	strh.w	r1, [r4, #576]	@ 0x240
 80074d8:	f884 3243 	strb.w	r3, [r4, #579]	@ 0x243
 80074dc:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
 80074e0:	d008      	beq.n	80074f4 <HAL_PCD_Init+0x188>
 80074e2:	e9c4 339e 	strd	r3, r3, [r4, #632]	@ 0x278
 80074e6:	2207      	movs	r2, #7
 80074e8:	f8a4 2268 	strh.w	r2, [r4, #616]	@ 0x268
 80074ec:	f884 326b 	strb.w	r3, [r4, #619]	@ 0x26b
 80074f0:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
 80074f4:	4623      	mov	r3, r4
 80074f6:	f853 0b04 	ldr.w	r0, [r3], #4
 80074fa:	e893 0006 	ldmia.w	r3, {r1, r2}
 80074fe:	f004 fb6d 	bl	800bbdc <USB_DevInit>
 8007502:	7aa3      	ldrb	r3, [r4, #10]
 8007504:	2201      	movs	r2, #1
 8007506:	2100      	movs	r1, #0
 8007508:	4293      	cmp	r3, r2
 800750a:	7321      	strb	r1, [r4, #12]
 800750c:	f884 2291 	strb.w	r2, [r4, #657]	@ 0x291
 8007510:	d008      	beq.n	8007524 <HAL_PCD_Init+0x1b8>
 8007512:	2000      	movs	r0, #0
 8007514:	bd10      	pop	{r4, pc}
 8007516:	f880 2290 	strb.w	r2, [r0, #656]	@ 0x290
 800751a:	f007 fdf3 	bl	800f104 <HAL_PCD_MspInit>
 800751e:	e731      	b.n	8007384 <HAL_PCD_Init+0x18>
 8007520:	2001      	movs	r0, #1
 8007522:	4770      	bx	lr
 8007524:	4620      	mov	r0, r4
 8007526:	f000 ff1b 	bl	8008360 <HAL_PCDEx_ActivateLPM>
 800752a:	2000      	movs	r0, #0
 800752c:	bd10      	pop	{r4, pc}
 800752e:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
 8007532:	f8a4 3150 	strh.w	r3, [r4, #336]	@ 0x150
 8007536:	f884 3153 	strb.w	r3, [r4, #339]	@ 0x153
 800753a:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
 800753e:	e7d9      	b.n	80074f4 <HAL_PCD_Init+0x188>

08007540 <HAL_PCD_Start>:
 8007540:	f890 3290 	ldrb.w	r3, [r0, #656]	@ 0x290
 8007544:	2b01      	cmp	r3, #1
 8007546:	d00f      	beq.n	8007568 <HAL_PCD_Start+0x28>
 8007548:	b510      	push	{r4, lr}
 800754a:	4604      	mov	r4, r0
 800754c:	2301      	movs	r3, #1
 800754e:	6800      	ldr	r0, [r0, #0]
 8007550:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007554:	f004 fb2e 	bl	800bbb4 <USB_EnableGlobalInt>
 8007558:	6820      	ldr	r0, [r4, #0]
 800755a:	f005 f87d 	bl	800c658 <USB_DevConnect>
 800755e:	2300      	movs	r3, #0
 8007560:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007564:	4618      	mov	r0, r3
 8007566:	bd10      	pop	{r4, pc}
 8007568:	2002      	movs	r0, #2
 800756a:	4770      	bx	lr

0800756c <HAL_PCD_IRQHandler>:
 800756c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007570:	4604      	mov	r4, r0
 8007572:	b083      	sub	sp, #12
 8007574:	6800      	ldr	r0, [r0, #0]
 8007576:	f005 f87b 	bl	800c670 <USB_ReadInterrupts>
 800757a:	f410 4500 	ands.w	r5, r0, #32768	@ 0x8000
 800757e:	d12c      	bne.n	80075da <HAL_PCD_IRQHandler+0x6e>
 8007580:	0543      	lsls	r3, r0, #21
 8007582:	f100 817b 	bmi.w	800787c <HAL_PCD_IRQHandler+0x310>
 8007586:	0447      	lsls	r7, r0, #17
 8007588:	d41b      	bmi.n	80075c2 <HAL_PCD_IRQHandler+0x56>
 800758a:	f410 5100 	ands.w	r1, r0, #8192	@ 0x2000
 800758e:	f040 81d7 	bne.w	8007940 <HAL_PCD_IRQHandler+0x3d4>
 8007592:	04c6      	lsls	r6, r0, #19
 8007594:	f100 808b 	bmi.w	80076ae <HAL_PCD_IRQHandler+0x142>
 8007598:	0505      	lsls	r5, r0, #20
 800759a:	f100 8331 	bmi.w	8007c00 <HAL_PCD_IRQHandler+0x694>
 800759e:	0601      	lsls	r1, r0, #24
 80075a0:	f100 8301 	bmi.w	8007ba6 <HAL_PCD_IRQHandler+0x63a>
 80075a4:	0582      	lsls	r2, r0, #22
 80075a6:	f100 841f 	bmi.w	8007de8 <HAL_PCD_IRQHandler+0x87c>
 80075aa:	05c3      	lsls	r3, r0, #23
 80075ac:	d512      	bpl.n	80075d4 <HAL_PCD_IRQHandler+0x68>
 80075ae:	6822      	ldr	r2, [r4, #0]
 80075b0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80075b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80075b8:	041b      	lsls	r3, r3, #16
 80075ba:	0c1b      	lsrs	r3, r3, #16
 80075bc:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80075c0:	e008      	b.n	80075d4 <HAL_PCD_IRQHandler+0x68>
 80075c2:	6822      	ldr	r2, [r4, #0]
 80075c4:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80075c8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80075cc:	041b      	lsls	r3, r3, #16
 80075ce:	0c1b      	lsrs	r3, r3, #16
 80075d0:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80075d4:	b003      	add	sp, #12
 80075d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075da:	6820      	ldr	r0, [r4, #0]
 80075dc:	f8b0 3044 	ldrh.w	r3, [r0, #68]	@ 0x44
 80075e0:	041f      	lsls	r7, r3, #16
 80075e2:	d5f7      	bpl.n	80075d4 <HAL_PCD_IRQHandler+0x68>
 80075e4:	f8df babc 	ldr.w	fp, [pc, #2748]	@ 80080a4 <HAL_PCD_IRQHandler+0xb38>
 80075e8:	e010      	b.n	800760c <HAL_PCD_IRQHandler+0xa0>
 80075ea:	f011 0110 	ands.w	r1, r1, #16
 80075ee:	f000 80c5 	beq.w	800777c <HAL_PCD_IRQHandler+0x210>
 80075f2:	8801      	ldrh	r1, [r0, #0]
 80075f4:	f411 6500 	ands.w	r5, r1, #2048	@ 0x800
 80075f8:	b28b      	uxth	r3, r1
 80075fa:	f040 80e7 	bne.w	80077cc <HAL_PCD_IRQHandler+0x260>
 80075fe:	041e      	lsls	r6, r3, #16
 8007600:	f100 815a 	bmi.w	80078b8 <HAL_PCD_IRQHandler+0x34c>
 8007604:	f8b0 3044 	ldrh.w	r3, [r0, #68]	@ 0x44
 8007608:	041a      	lsls	r2, r3, #16
 800760a:	d5e3      	bpl.n	80075d4 <HAL_PCD_IRQHandler+0x68>
 800760c:	f8b0 5044 	ldrh.w	r5, [r0, #68]	@ 0x44
 8007610:	b2a9      	uxth	r1, r5
 8007612:	f015 050f 	ands.w	r5, r5, #15
 8007616:	d0e8      	beq.n	80075ea <HAL_PCD_IRQHandler+0x7e>
 8007618:	fa0f f885 	sxth.w	r8, r5
 800761c:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007620:	0419      	lsls	r1, r3, #16
 8007622:	b29e      	uxth	r6, r3
 8007624:	d466      	bmi.n	80076f4 <HAL_PCD_IRQHandler+0x188>
 8007626:	0631      	lsls	r1, r6, #24
 8007628:	d5ec      	bpl.n	8007604 <HAL_PCD_IRQHandler+0x98>
 800762a:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 800762e:	b29b      	uxth	r3, r3
 8007630:	ea03 030b 	and.w	r3, r3, fp
 8007634:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007638:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 800763c:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007640:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007644:	00af      	lsls	r7, r5, #2
 8007646:	7cd3      	ldrb	r3, [r2, #19]
 8007648:	2b01      	cmp	r3, #1
 800764a:	f000 8185 	beq.w	8007958 <HAL_PCD_IRQHandler+0x3ec>
 800764e:	eb08 0888 	add.w	r8, r8, r8, lsl #2
 8007652:	eb04 0cc8 	add.w	ip, r4, r8, lsl #3
 8007656:	7c11      	ldrb	r1, [r2, #16]
 8007658:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
 800765c:	9300      	str	r3, [sp, #0]
 800765e:	f416 7a80 	ands.w	sl, r6, #256	@ 0x100
 8007662:	ea4f 09c8 	mov.w	r9, r8, lsl #3
 8007666:	ea4f 0ec1 	mov.w	lr, r1, lsl #3
 800766a:	fa0f f881 	sxth.w	r8, r1
 800766e:	f040 81a3 	bne.w	80079b8 <HAL_PCD_IRQHandler+0x44c>
 8007672:	f8b0 5050 	ldrh.w	r5, [r0, #80]	@ 0x50
 8007676:	fa1e f585 	uxtah	r5, lr, r5
 800767a:	4405      	add	r5, r0
 800767c:	f8b5 5402 	ldrh.w	r5, [r5, #1026]	@ 0x402
 8007680:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8007684:	429d      	cmp	r5, r3
 8007686:	f080 8191 	bcs.w	80079ac <HAL_PCD_IRQHandler+0x440>
 800768a:	1b5b      	subs	r3, r3, r5
 800768c:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007690:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8007692:	442b      	add	r3, r5
 8007694:	6253      	str	r3, [r2, #36]	@ 0x24
 8007696:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
 800769a:	f109 0110 	add.w	r1, r9, #16
 800769e:	442b      	add	r3, r5
 80076a0:	4421      	add	r1, r4
 80076a2:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
 80076a6:	f004 fdb1 	bl	800c20c <USB_EPStartXfer>
 80076aa:	6820      	ldr	r0, [r4, #0]
 80076ac:	e7aa      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 80076ae:	6822      	ldr	r2, [r4, #0]
 80076b0:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 80076b4:	f023 0304 	bic.w	r3, r3, #4
 80076b8:	041b      	lsls	r3, r3, #16
 80076ba:	0c1b      	lsrs	r3, r3, #16
 80076bc:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 80076c0:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 80076c4:	f023 0308 	bic.w	r3, r3, #8
 80076c8:	041b      	lsls	r3, r3, #16
 80076ca:	0c1b      	lsrs	r3, r3, #16
 80076cc:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 80076d0:	f894 32c8 	ldrb.w	r3, [r4, #712]	@ 0x2c8
 80076d4:	2b01      	cmp	r3, #1
 80076d6:	f000 8395 	beq.w	8007e04 <HAL_PCD_IRQHandler+0x898>
 80076da:	4620      	mov	r0, r4
 80076dc:	f007 fd8c 	bl	800f1f8 <HAL_PCD_ResumeCallback>
 80076e0:	6822      	ldr	r2, [r4, #0]
 80076e2:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80076e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80076ea:	041b      	lsls	r3, r3, #16
 80076ec:	0c1b      	lsrs	r3, r3, #16
 80076ee:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80076f2:	e76f      	b.n	80075d4 <HAL_PCD_IRQHandler+0x68>
 80076f4:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 80076f8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80076fc:	051b      	lsls	r3, r3, #20
 80076fe:	0d1b      	lsrs	r3, r3, #20
 8007700:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007704:	eb05 0185 	add.w	r1, r5, r5, lsl #2
 8007708:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 800770c:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007710:	00af      	lsls	r7, r5, #2
 8007712:	f891 315c 	ldrb.w	r3, [r1, #348]	@ 0x15c
 8007716:	2b00      	cmp	r3, #0
 8007718:	d17b      	bne.n	8007812 <HAL_PCD_IRQHandler+0x2a6>
 800771a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 800771e:	f200 4206 	addw	r2, r0, #1030	@ 0x406
 8007722:	fa12 f383 	uxtah	r3, r2, r3
 8007726:	f891 2150 	ldrb.w	r2, [r1, #336]	@ 0x150
 800772a:	f833 9032 	ldrh.w	r9, [r3, r2, lsl #3]
 800772e:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007732:	f1b9 0f00 	cmp.w	r9, #0
 8007736:	f040 81d0 	bne.w	8007ada <HAL_PCD_IRQHandler+0x56e>
 800773a:	f04f 0900 	mov.w	r9, #0
 800773e:	197b      	adds	r3, r7, r5
 8007740:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007744:	f8d3 216c 	ldr.w	r2, [r3, #364]	@ 0x16c
 8007748:	444a      	add	r2, r9
 800774a:	f8c3 216c 	str.w	r2, [r3, #364]	@ 0x16c
 800774e:	f8d3 2164 	ldr.w	r2, [r3, #356]	@ 0x164
 8007752:	444a      	add	r2, r9
 8007754:	f8c3 2164 	str.w	r2, [r3, #356]	@ 0x164
 8007758:	f8d3 2168 	ldr.w	r2, [r3, #360]	@ 0x168
 800775c:	b122      	cbz	r2, 8007768 <HAL_PCD_IRQHandler+0x1fc>
 800775e:	f8d3 3160 	ldr.w	r3, [r3, #352]	@ 0x160
 8007762:	454b      	cmp	r3, r9
 8007764:	f240 819b 	bls.w	8007a9e <HAL_PCD_IRQHandler+0x532>
 8007768:	442f      	add	r7, r5
 800776a:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 800776e:	4620      	mov	r0, r4
 8007770:	f897 1150 	ldrb.w	r1, [r7, #336]	@ 0x150
 8007774:	f007 fd06 	bl	800f184 <HAL_PCD_DataOutStageCallback>
 8007778:	6820      	ldr	r0, [r4, #0]
 800777a:	e754      	b.n	8007626 <HAL_PCD_IRQHandler+0xba>
 800777c:	8803      	ldrh	r3, [r0, #0]
 800777e:	b29b      	uxth	r3, r3
 8007780:	ea03 030b 	and.w	r3, r3, fp
 8007784:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007788:	8003      	strh	r3, [r0, #0]
 800778a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 800778e:	fa10 f283 	uxtah	r2, r0, r3
 8007792:	7c20      	ldrb	r0, [r4, #16]
 8007794:	f240 4302 	movw	r3, #1026	@ 0x402
 8007798:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800779c:	4620      	mov	r0, r4
 800779e:	5ad3      	ldrh	r3, [r2, r3]
 80077a0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80077a2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80077a6:	441a      	add	r2, r3
 80077a8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80077aa:	6262      	str	r2, [r4, #36]	@ 0x24
 80077ac:	f007 fcf4 	bl	800f198 <HAL_PCD_DataInStageCallback>
 80077b0:	7b23      	ldrb	r3, [r4, #12]
 80077b2:	b363      	cbz	r3, 800780e <HAL_PCD_IRQHandler+0x2a2>
 80077b4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80077b6:	6820      	ldr	r0, [r4, #0]
 80077b8:	2b00      	cmp	r3, #0
 80077ba:	f47f af23 	bne.w	8007604 <HAL_PCD_IRQHandler+0x98>
 80077be:	7b22      	ldrb	r2, [r4, #12]
 80077c0:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80077c4:	f8a0 204c 	strh.w	r2, [r0, #76]	@ 0x4c
 80077c8:	7323      	strb	r3, [r4, #12]
 80077ca:	e71b      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 80077cc:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80077d0:	f894 1150 	ldrb.w	r1, [r4, #336]	@ 0x150
 80077d4:	f240 4306 	movw	r3, #1030	@ 0x406
 80077d8:	fa10 f282 	uxtah	r2, r0, r2
 80077dc:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80077e0:	f504 7126 	add.w	r1, r4, #664	@ 0x298
 80077e4:	5ad3      	ldrh	r3, [r2, r3]
 80077e6:	f8b4 2156 	ldrh.w	r2, [r4, #342]	@ 0x156
 80077ea:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80077ee:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 80077f2:	f004 ff51 	bl	800c698 <USB_ReadPMA>
 80077f6:	6822      	ldr	r2, [r4, #0]
 80077f8:	8813      	ldrh	r3, [r2, #0]
 80077fa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80077fe:	051b      	lsls	r3, r3, #20
 8007800:	0d1b      	lsrs	r3, r3, #20
 8007802:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007806:	8013      	strh	r3, [r2, #0]
 8007808:	4620      	mov	r0, r4
 800780a:	f007 fcb5 	bl	800f178 <HAL_PCD_SetupStageCallback>
 800780e:	6820      	ldr	r0, [r4, #0]
 8007810:	e6f8      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 8007812:	f891 3153 	ldrb.w	r3, [r1, #339]	@ 0x153
 8007816:	f891 2150 	ldrb.w	r2, [r1, #336]	@ 0x150
 800781a:	2b02      	cmp	r3, #2
 800781c:	f000 820b 	beq.w	8007c36 <HAL_PCD_IRQHandler+0x6ca>
 8007820:	b212      	sxth	r2, r2
 8007822:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007826:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800782a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800782e:	041b      	lsls	r3, r3, #16
 8007830:	0c1b      	lsrs	r3, r3, #16
 8007832:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007836:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800783a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800783e:	f891 3150 	ldrb.w	r3, [r1, #336]	@ 0x150
 8007842:	b21a      	sxth	r2, r3
 8007844:	f830 2022 	ldrh.w	r2, [r0, r2, lsl #2]
 8007848:	f412 4f80 	tst.w	r2, #16384	@ 0x4000
 800784c:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007850:	f000 812f 	beq.w	8007ab2 <HAL_PCD_IRQHandler+0x546>
 8007854:	f200 4c02 	addw	ip, r0, #1026	@ 0x402
 8007858:	fa1c f282 	uxtah	r2, ip, r2
 800785c:	f832 9033 	ldrh.w	r9, [r2, r3, lsl #3]
 8007860:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007864:	f1b9 0f00 	cmp.w	r9, #0
 8007868:	f43f af67 	beq.w	800773a <HAL_PCD_IRQHandler+0x1ce>
 800786c:	f8b1 2158 	ldrh.w	r2, [r1, #344]	@ 0x158
 8007870:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007874:	464b      	mov	r3, r9
 8007876:	f004 ff0f 	bl	800c698 <USB_ReadPMA>
 800787a:	e760      	b.n	800773e <HAL_PCD_IRQHandler+0x1d2>
 800787c:	6822      	ldr	r2, [r4, #0]
 800787e:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007882:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007886:	041b      	lsls	r3, r3, #16
 8007888:	0c1b      	lsrs	r3, r3, #16
 800788a:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 800788e:	4620      	mov	r0, r4
 8007890:	f007 fc90 	bl	800f1b4 <HAL_PCD_ResetCallback>
 8007894:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8007898:	2b01      	cmp	r3, #1
 800789a:	f43f ae9b 	beq.w	80075d4 <HAL_PCD_IRQHandler+0x68>
 800789e:	2301      	movs	r3, #1
 80078a0:	6820      	ldr	r0, [r4, #0]
 80078a2:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80078a6:	7325      	strb	r5, [r4, #12]
 80078a8:	4629      	mov	r1, r5
 80078aa:	f004 fecf 	bl	800c64c <USB_SetDevAddress>
 80078ae:	f884 5290 	strb.w	r5, [r4, #656]	@ 0x290
 80078b2:	b003      	add	sp, #12
 80078b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078b8:	8802      	ldrh	r2, [r0, #0]
 80078ba:	f640 738f 	movw	r3, #3983	@ 0xf8f
 80078be:	4013      	ands	r3, r2
 80078c0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80078c4:	8003      	strh	r3, [r0, #0]
 80078c6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80078ca:	f894 1150 	ldrb.w	r1, [r4, #336]	@ 0x150
 80078ce:	f240 4306 	movw	r3, #1030	@ 0x406
 80078d2:	fa10 f282 	uxtah	r2, r0, r2
 80078d6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80078da:	5ad3      	ldrh	r3, [r2, r3]
 80078dc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80078e0:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 80078e4:	b193      	cbz	r3, 800790c <HAL_PCD_IRQHandler+0x3a0>
 80078e6:	f8d4 1164 	ldr.w	r1, [r4, #356]	@ 0x164
 80078ea:	b179      	cbz	r1, 800790c <HAL_PCD_IRQHandler+0x3a0>
 80078ec:	f8b4 2156 	ldrh.w	r2, [r4, #342]	@ 0x156
 80078f0:	f004 fed2 	bl	800c698 <USB_ReadPMA>
 80078f4:	f8d4 3164 	ldr.w	r3, [r4, #356]	@ 0x164
 80078f8:	f8d4 216c 	ldr.w	r2, [r4, #364]	@ 0x16c
 80078fc:	4413      	add	r3, r2
 80078fe:	4620      	mov	r0, r4
 8007900:	4629      	mov	r1, r5
 8007902:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
 8007906:	f007 fc3d 	bl	800f184 <HAL_PCD_DataOutStageCallback>
 800790a:	6820      	ldr	r0, [r4, #0]
 800790c:	8803      	ldrh	r3, [r0, #0]
 800790e:	051d      	lsls	r5, r3, #20
 8007910:	b29a      	uxth	r2, r3
 8007912:	f53f ae77 	bmi.w	8007604 <HAL_PCD_IRQHandler+0x98>
 8007916:	f402 5240 	and.w	r2, r2, #12288	@ 0x3000
 800791a:	f5b2 5f40 	cmp.w	r2, #12288	@ 0x3000
 800791e:	f43f ae71 	beq.w	8007604 <HAL_PCD_IRQHandler+0x98>
 8007922:	8803      	ldrh	r3, [r0, #0]
 8007924:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007928:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800792c:	041b      	lsls	r3, r3, #16
 800792e:	0c1b      	lsrs	r3, r3, #16
 8007930:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 8007934:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007938:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800793c:	8003      	strh	r3, [r0, #0]
 800793e:	e661      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 8007940:	6822      	ldr	r2, [r4, #0]
 8007942:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007946:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800794a:	041b      	lsls	r3, r3, #16
 800794c:	0c1b      	lsrs	r3, r3, #16
 800794e:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007952:	b003      	add	sp, #12
 8007954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007958:	1c6b      	adds	r3, r5, #1
 800795a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800795e:	2100      	movs	r1, #0
 8007960:	f844 1033 	str.w	r1, [r4, r3, lsl #3]
 8007964:	7f13      	ldrb	r3, [r2, #28]
 8007966:	b1c3      	cbz	r3, 800799a <HAL_PCD_IRQHandler+0x42e>
 8007968:	f016 0640 	ands.w	r6, r6, #64	@ 0x40
 800796c:	7c53      	ldrb	r3, [r2, #17]
 800796e:	f040 810f 	bne.w	8007b90 <HAL_PCD_IRQHandler+0x624>
 8007972:	2b00      	cmp	r3, #0
 8007974:	f040 8259 	bne.w	8007e2a <HAL_PCD_IRQHandler+0x8be>
 8007978:	7c13      	ldrb	r3, [r2, #16]
 800797a:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800797e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007982:	f203 4306 	addw	r3, r3, #1030	@ 0x406
 8007986:	b292      	uxth	r2, r2
 8007988:	5a99      	ldrh	r1, [r3, r2]
 800798a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800798e:	5299      	strh	r1, [r3, r2]
 8007990:	5a99      	ldrh	r1, [r3, r2]
 8007992:	b289      	uxth	r1, r1
 8007994:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8007998:	5299      	strh	r1, [r3, r2]
 800799a:	443d      	add	r5, r7
 800799c:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 80079a0:	4620      	mov	r0, r4
 80079a2:	7c29      	ldrb	r1, [r5, #16]
 80079a4:	f007 fbf8 	bl	800f198 <HAL_PCD_DataInStageCallback>
 80079a8:	6820      	ldr	r0, [r4, #0]
 80079aa:	e62b      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 80079ac:	f8cc a028 	str.w	sl, [ip, #40]	@ 0x28
 80079b0:	4620      	mov	r0, r4
 80079b2:	f007 fbf1 	bl	800f198 <HAL_PCD_DataInStageCallback>
 80079b6:	e72a      	b.n	800780e <HAL_PCD_IRQHandler+0x2a2>
 80079b8:	f406 4380 	and.w	r3, r6, #16384	@ 0x4000
 80079bc:	f016 0640 	ands.w	r6, r6, #64	@ 0x40
 80079c0:	9301      	str	r3, [sp, #4]
 80079c2:	f040 8092 	bne.w	8007aea <HAL_PCD_IRQHandler+0x57e>
 80079c6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80079ca:	9b00      	ldr	r3, [sp, #0]
 80079cc:	f200 4a06 	addw	sl, r0, #1030	@ 0x406
 80079d0:	fa1a f282 	uxtah	r2, sl, r2
 80079d4:	f832 9038 	ldrh.w	r9, [r2, r8, lsl #3]
 80079d8:	f3c9 0909 	ubfx	r9, r9, #0, #10
 80079dc:	4599      	cmp	r9, r3
 80079de:	f240 81a5 	bls.w	8007d2c <HAL_PCD_IRQHandler+0x7c0>
 80079e2:	f8cc 6028 	str.w	r6, [ip, #40]	@ 0x28
 80079e6:	197b      	adds	r3, r7, r5
 80079e8:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80079ec:	7c5b      	ldrb	r3, [r3, #17]
 80079ee:	2b00      	cmp	r3, #0
 80079f0:	f040 82a3 	bne.w	8007f3a <HAL_PCD_IRQHandler+0x9ce>
 80079f4:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80079f8:	f20e 4602 	addw	r6, lr, #1026	@ 0x402
 80079fc:	b292      	uxth	r2, r2
 80079fe:	4406      	add	r6, r0
 8007a00:	5ab3      	ldrh	r3, [r6, r2]
 8007a02:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007a06:	52b3      	strh	r3, [r6, r2]
 8007a08:	5ab3      	ldrh	r3, [r6, r2]
 8007a0a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007a0e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007a12:	b29b      	uxth	r3, r3
 8007a14:	52b3      	strh	r3, [r6, r2]
 8007a16:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007a1a:	fa1a f282 	uxtah	r2, sl, r2
 8007a1e:	f832 3038 	ldrh.w	r3, [r2, r8, lsl #3]
 8007a22:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007a26:	f822 3038 	strh.w	r3, [r2, r8, lsl #3]
 8007a2a:	f832 3038 	ldrh.w	r3, [r2, r8, lsl #3]
 8007a2e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007a32:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007a36:	b29b      	uxth	r3, r3
 8007a38:	f822 3038 	strh.w	r3, [r2, r8, lsl #3]
 8007a3c:	197b      	adds	r3, r7, r5
 8007a3e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007a42:	7cdb      	ldrb	r3, [r3, #19]
 8007a44:	2b02      	cmp	r3, #2
 8007a46:	d10f      	bne.n	8007a68 <HAL_PCD_IRQHandler+0x4fc>
 8007a48:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007a4c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a50:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007a54:	041b      	lsls	r3, r3, #16
 8007a56:	0c1b      	lsrs	r3, r3, #16
 8007a58:	f083 0320 	eor.w	r3, r3, #32
 8007a5c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007a60:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007a64:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007a68:	4620      	mov	r0, r4
 8007a6a:	f007 fb95 	bl	800f198 <HAL_PCD_DataInStageCallback>
 8007a6e:	9b01      	ldr	r3, [sp, #4]
 8007a70:	2b00      	cmp	r3, #0
 8007a72:	f47f aecc 	bne.w	800780e <HAL_PCD_IRQHandler+0x2a2>
 8007a76:	197b      	adds	r3, r7, r5
 8007a78:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007a7c:	6820      	ldr	r0, [r4, #0]
 8007a7e:	7c1a      	ldrb	r2, [r3, #16]
 8007a80:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007a84:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a88:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a8c:	041b      	lsls	r3, r3, #16
 8007a8e:	0c1b      	lsrs	r3, r3, #16
 8007a90:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007a94:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007a98:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007a9c:	e5b2      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 8007a9e:	2128      	movs	r1, #40	@ 0x28
 8007aa0:	fb01 4105 	mla	r1, r1, r5, r4
 8007aa4:	6820      	ldr	r0, [r4, #0]
 8007aa6:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8007aaa:	f004 fbaf 	bl	800c20c <USB_EPStartXfer>
 8007aae:	6820      	ldr	r0, [r4, #0]
 8007ab0:	e5b9      	b.n	8007626 <HAL_PCD_IRQHandler+0xba>
 8007ab2:	f200 4c06 	addw	ip, r0, #1030	@ 0x406
 8007ab6:	fa1c f282 	uxtah	r2, ip, r2
 8007aba:	f832 9033 	ldrh.w	r9, [r2, r3, lsl #3]
 8007abe:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007ac2:	f1b9 0f00 	cmp.w	r9, #0
 8007ac6:	f43f ae38 	beq.w	800773a <HAL_PCD_IRQHandler+0x1ce>
 8007aca:	f8b1 215a 	ldrh.w	r2, [r1, #346]	@ 0x15a
 8007ace:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007ad2:	464b      	mov	r3, r9
 8007ad4:	f004 fde0 	bl	800c698 <USB_ReadPMA>
 8007ad8:	e631      	b.n	800773e <HAL_PCD_IRQHandler+0x1d2>
 8007ada:	f8b1 2156 	ldrh.w	r2, [r1, #342]	@ 0x156
 8007ade:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007ae2:	464b      	mov	r3, r9
 8007ae4:	f004 fdd8 	bl	800c698 <USB_ReadPMA>
 8007ae8:	e629      	b.n	800773e <HAL_PCD_IRQHandler+0x1d2>
 8007aea:	f8b0 6050 	ldrh.w	r6, [r0, #80]	@ 0x50
 8007aee:	9b00      	ldr	r3, [sp, #0]
 8007af0:	f200 4a02 	addw	sl, r0, #1026	@ 0x402
 8007af4:	fa1a f686 	uxtah	r6, sl, r6
 8007af8:	f836 9038 	ldrh.w	r9, [r6, r8, lsl #3]
 8007afc:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007b00:	4599      	cmp	r9, r3
 8007b02:	f0c0 80e2 	bcc.w	8007cca <HAL_PCD_IRQHandler+0x75e>
 8007b06:	2600      	movs	r6, #0
 8007b08:	f8cc 6028 	str.w	r6, [ip, #40]	@ 0x28
 8007b0c:	7c53      	ldrb	r3, [r2, #17]
 8007b0e:	2b00      	cmp	r3, #0
 8007b10:	f040 8225 	bne.w	8007f5e <HAL_PCD_IRQHandler+0x9f2>
 8007b14:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007b18:	fa1a f383 	uxtah	r3, sl, r3
 8007b1c:	f20e 4206 	addw	r2, lr, #1030	@ 0x406
 8007b20:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007b24:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007b28:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007b2c:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007b30:	b2b6      	uxth	r6, r6
 8007b32:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 8007b36:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007b3a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007b3e:	4402      	add	r2, r0
 8007b40:	b29b      	uxth	r3, r3
 8007b42:	5ad6      	ldrh	r6, [r2, r3]
 8007b44:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007b48:	52d6      	strh	r6, [r2, r3]
 8007b4a:	5ad6      	ldrh	r6, [r2, r3]
 8007b4c:	b2b6      	uxth	r6, r6
 8007b4e:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 8007b52:	52d6      	strh	r6, [r2, r3]
 8007b54:	197b      	adds	r3, r7, r5
 8007b56:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007b5a:	7cdb      	ldrb	r3, [r3, #19]
 8007b5c:	2b02      	cmp	r3, #2
 8007b5e:	d10f      	bne.n	8007b80 <HAL_PCD_IRQHandler+0x614>
 8007b60:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007b64:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007b68:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007b6c:	041b      	lsls	r3, r3, #16
 8007b6e:	0c1b      	lsrs	r3, r3, #16
 8007b70:	f083 0320 	eor.w	r3, r3, #32
 8007b74:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007b78:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007b7c:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007b80:	4620      	mov	r0, r4
 8007b82:	f007 fb09 	bl	800f198 <HAL_PCD_DataInStageCallback>
 8007b86:	9b01      	ldr	r3, [sp, #4]
 8007b88:	2b00      	cmp	r3, #0
 8007b8a:	f47f af74 	bne.w	8007a76 <HAL_PCD_IRQHandler+0x50a>
 8007b8e:	e63e      	b.n	800780e <HAL_PCD_IRQHandler+0x2a2>
 8007b90:	2b00      	cmp	r3, #0
 8007b92:	f040 813d 	bne.w	8007e10 <HAL_PCD_IRQHandler+0x8a4>
 8007b96:	7c13      	ldrb	r3, [r2, #16]
 8007b98:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007b9c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007ba0:	f203 4302 	addw	r3, r3, #1026	@ 0x402
 8007ba4:	e6ef      	b.n	8007986 <HAL_PCD_IRQHandler+0x41a>
 8007ba6:	6822      	ldr	r2, [r4, #0]
 8007ba8:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007bac:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007bb0:	041b      	lsls	r3, r3, #16
 8007bb2:	0c1b      	lsrs	r3, r3, #16
 8007bb4:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007bb8:	f894 32c8 	ldrb.w	r3, [r4, #712]	@ 0x2c8
 8007bbc:	2b00      	cmp	r3, #0
 8007bbe:	f040 810e 	bne.w	8007dde <HAL_PCD_IRQHandler+0x872>
 8007bc2:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007bc6:	b29b      	uxth	r3, r3
 8007bc8:	f043 0304 	orr.w	r3, r3, #4
 8007bcc:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007bd0:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007bd4:	b29b      	uxth	r3, r3
 8007bd6:	2101      	movs	r1, #1
 8007bd8:	f043 0308 	orr.w	r3, r3, #8
 8007bdc:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007be0:	f884 12c8 	strb.w	r1, [r4, #712]	@ 0x2c8
 8007be4:	f8b2 3054 	ldrh.w	r3, [r2, #84]	@ 0x54
 8007be8:	f3c3 038d 	ubfx	r3, r3, #2, #14
 8007bec:	f003 033c 	and.w	r3, r3, #60	@ 0x3c
 8007bf0:	4620      	mov	r0, r4
 8007bf2:	f8c4 32cc 	str.w	r3, [r4, #716]	@ 0x2cc
 8007bf6:	b003      	add	sp, #12
 8007bf8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bfc:	f007 bbd6 	b.w	800f3ac <HAL_PCDEx_LPM_Callback>
 8007c00:	6822      	ldr	r2, [r4, #0]
 8007c02:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007c06:	b29b      	uxth	r3, r3
 8007c08:	f043 0308 	orr.w	r3, r3, #8
 8007c0c:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007c10:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007c14:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007c18:	041b      	lsls	r3, r3, #16
 8007c1a:	0c1b      	lsrs	r3, r3, #16
 8007c1c:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007c20:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 8007c24:	b29b      	uxth	r3, r3
 8007c26:	f043 0304 	orr.w	r3, r3, #4
 8007c2a:	4620      	mov	r0, r4
 8007c2c:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007c30:	f007 fad2 	bl	800f1d8 <HAL_PCD_SuspendCallback>
 8007c34:	e4ce      	b.n	80075d4 <HAL_PCD_IRQHandler+0x68>
 8007c36:	f8b0 e050 	ldrh.w	lr, [r0, #80]	@ 0x50
 8007c3a:	f8d1 3168 	ldr.w	r3, [r1, #360]	@ 0x168
 8007c3e:	fa0f fc82 	sxth.w	ip, r2
 8007c42:	00d2      	lsls	r2, r2, #3
 8007c44:	fa12 f28e 	uxtah	r2, r2, lr
 8007c48:	f416 4a80 	ands.w	sl, r6, #16384	@ 0x4000
 8007c4c:	4402      	add	r2, r0
 8007c4e:	f000 80f9 	beq.w	8007e44 <HAL_PCD_IRQHandler+0x8d8>
 8007c52:	f8b2 e402 	ldrh.w	lr, [r2, #1026]	@ 0x402
 8007c56:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8007c5a:	459e      	cmp	lr, r3
 8007c5c:	46f1      	mov	r9, lr
 8007c5e:	f200 8165 	bhi.w	8007f2c <HAL_PCD_IRQHandler+0x9c0>
 8007c62:	eba3 030e 	sub.w	r3, r3, lr
 8007c66:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007c6a:	b97b      	cbnz	r3, 8007c8c <HAL_PCD_IRQHandler+0x720>
 8007c6c:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 8007c70:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007c74:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8007c78:	0412      	lsls	r2, r2, #16
 8007c7a:	0c12      	lsrs	r2, r2, #16
 8007c7c:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 8007c80:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007c84:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8007c88:	f820 202c 	strh.w	r2, [r0, ip, lsl #2]
 8007c8c:	0672      	lsls	r2, r6, #25
 8007c8e:	d50d      	bpl.n	8007cac <HAL_PCD_IRQHandler+0x740>
 8007c90:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8007c94:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007c98:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c9c:	041b      	lsls	r3, r3, #16
 8007c9e:	0c1b      	lsrs	r3, r3, #16
 8007ca0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007ca4:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8007ca8:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8007cac:	f1be 0f00 	cmp.w	lr, #0
 8007cb0:	f43f ad45 	beq.w	800773e <HAL_PCD_IRQHandler+0x1d2>
 8007cb4:	1979      	adds	r1, r7, r5
 8007cb6:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007cba:	4673      	mov	r3, lr
 8007cbc:	f8b1 2158 	ldrh.w	r2, [r1, #344]	@ 0x158
 8007cc0:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007cc4:	f004 fce8 	bl	800c698 <USB_ReadPMA>
 8007cc8:	e539      	b.n	800773e <HAL_PCD_IRQHandler+0x1d2>
 8007cca:	eba3 0309 	sub.w	r3, r3, r9
 8007cce:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007cd2:	9b01      	ldr	r3, [sp, #4]
 8007cd4:	b16b      	cbz	r3, 8007cf2 <HAL_PCD_IRQHandler+0x786>
 8007cd6:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007cda:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007cde:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007ce2:	041b      	lsls	r3, r3, #16
 8007ce4:	0c1b      	lsrs	r3, r3, #16
 8007ce6:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007cea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007cee:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007cf2:	197b      	adds	r3, r7, r5
 8007cf4:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007cf8:	f893 2034 	ldrb.w	r2, [r3, #52]	@ 0x34
 8007cfc:	2a01      	cmp	r2, #1
 8007cfe:	f000 80dc 	beq.w	8007eba <HAL_PCD_IRQHandler+0x94e>
 8007d02:	443d      	add	r5, r7
 8007d04:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 8007d08:	7c2a      	ldrb	r2, [r5, #16]
 8007d0a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007d0e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007d12:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007d16:	041b      	lsls	r3, r3, #16
 8007d18:	0c1b      	lsrs	r3, r3, #16
 8007d1a:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
 8007d1e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007d22:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007d26:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007d2a:	e46b      	b.n	8007604 <HAL_PCD_IRQHandler+0x98>
 8007d2c:	eba3 0309 	sub.w	r3, r3, r9
 8007d30:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	f43f ae56 	beq.w	80079e6 <HAL_PCD_IRQHandler+0x47a>
 8007d3a:	9b01      	ldr	r3, [sp, #4]
 8007d3c:	b96b      	cbnz	r3, 8007d5a <HAL_PCD_IRQHandler+0x7ee>
 8007d3e:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007d42:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007d46:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007d4a:	041b      	lsls	r3, r3, #16
 8007d4c:	0c1b      	lsrs	r3, r3, #16
 8007d4e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007d52:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007d56:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007d5a:	197b      	adds	r3, r7, r5
 8007d5c:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007d60:	f893 2034 	ldrb.w	r2, [r3, #52]	@ 0x34
 8007d64:	2a01      	cmp	r2, #1
 8007d66:	d1cc      	bne.n	8007d02 <HAL_PCD_IRQHandler+0x796>
 8007d68:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007d6a:	eb02 0109 	add.w	r1, r2, r9
 8007d6e:	6259      	str	r1, [r3, #36]	@ 0x24
 8007d70:	f8dc 602c 	ldr.w	r6, [ip, #44]	@ 0x2c
 8007d74:	444e      	add	r6, r9
 8007d76:	f8cc 602c 	str.w	r6, [ip, #44]	@ 0x2c
 8007d7a:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8007d7c:	6a1a      	ldr	r2, [r3, #32]
 8007d7e:	4296      	cmp	r6, r2
 8007d80:	f0c0 8109 	bcc.w	8007f96 <HAL_PCD_IRQHandler+0xa2a>
 8007d84:	1ab6      	subs	r6, r6, r2
 8007d86:	631e      	str	r6, [r3, #48]	@ 0x30
 8007d88:	fa1f f982 	uxth.w	r9, r2
 8007d8c:	197b      	adds	r3, r7, r5
 8007d8e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007d92:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007d96:	f1bc 0f00 	cmp.w	ip, #0
 8007d9a:	f040 80f1 	bne.w	8007f80 <HAL_PCD_IRQHandler+0xa14>
 8007d9e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007da2:	fa1a f383 	uxtah	r3, sl, r3
 8007da6:	449e      	add	lr, r3
 8007da8:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007dac:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007db0:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007db4:	2a00      	cmp	r2, #0
 8007db6:	f040 8119 	bne.w	8007fec <HAL_PCD_IRQHandler+0xa80>
 8007dba:	f833 2038 	ldrh.w	r2, [r3, r8, lsl #3]
 8007dbe:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007dc2:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007dc6:	b292      	uxth	r2, r2
 8007dc8:	f823 2038 	strh.w	r2, [r3, r8, lsl #3]
 8007dcc:	197a      	adds	r2, r7, r5
 8007dce:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007dd2:	464b      	mov	r3, r9
 8007dd4:	8b52      	ldrh	r2, [r2, #26]
 8007dd6:	f004 fc4f 	bl	800c678 <USB_WritePMA>
 8007dda:	6820      	ldr	r0, [r4, #0]
 8007ddc:	e791      	b.n	8007d02 <HAL_PCD_IRQHandler+0x796>
 8007dde:	4620      	mov	r0, r4
 8007de0:	f007 f9fa 	bl	800f1d8 <HAL_PCD_SuspendCallback>
 8007de4:	f7ff bbf6 	b.w	80075d4 <HAL_PCD_IRQHandler+0x68>
 8007de8:	6822      	ldr	r2, [r4, #0]
 8007dea:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007dee:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007df2:	041b      	lsls	r3, r3, #16
 8007df4:	0c1b      	lsrs	r3, r3, #16
 8007df6:	4620      	mov	r0, r4
 8007df8:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007dfc:	f007 f9d6 	bl	800f1ac <HAL_PCD_SOFCallback>
 8007e00:	f7ff bbe8 	b.w	80075d4 <HAL_PCD_IRQHandler+0x68>
 8007e04:	f884 12c8 	strb.w	r1, [r4, #712]	@ 0x2c8
 8007e08:	4620      	mov	r0, r4
 8007e0a:	f007 facf 	bl	800f3ac <HAL_PCDEx_LPM_Callback>
 8007e0e:	e464      	b.n	80076da <HAL_PCD_IRQHandler+0x16e>
 8007e10:	2b01      	cmp	r3, #1
 8007e12:	f47f adc2 	bne.w	800799a <HAL_PCD_IRQHandler+0x42e>
 8007e16:	7c13      	ldrb	r3, [r2, #16]
 8007e18:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007e1c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007e20:	f203 4302 	addw	r3, r3, #1026	@ 0x402
 8007e24:	b292      	uxth	r2, r2
 8007e26:	5299      	strh	r1, [r3, r2]
 8007e28:	e5b7      	b.n	800799a <HAL_PCD_IRQHandler+0x42e>
 8007e2a:	2b01      	cmp	r3, #1
 8007e2c:	f47f adb5 	bne.w	800799a <HAL_PCD_IRQHandler+0x42e>
 8007e30:	7c13      	ldrb	r3, [r2, #16]
 8007e32:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007e36:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007e3a:	f203 4306 	addw	r3, r3, #1030	@ 0x406
 8007e3e:	b292      	uxth	r2, r2
 8007e40:	529e      	strh	r6, [r3, r2]
 8007e42:	e5aa      	b.n	800799a <HAL_PCD_IRQHandler+0x42e>
 8007e44:	f8b2 e406 	ldrh.w	lr, [r2, #1030]	@ 0x406
 8007e48:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8007e4c:	459e      	cmp	lr, r3
 8007e4e:	46f1      	mov	r9, lr
 8007e50:	d870      	bhi.n	8007f34 <HAL_PCD_IRQHandler+0x9c8>
 8007e52:	eba3 030e 	sub.w	r3, r3, lr
 8007e56:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007e5a:	b97b      	cbnz	r3, 8007e7c <HAL_PCD_IRQHandler+0x910>
 8007e5c:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 8007e60:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007e64:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8007e68:	0412      	lsls	r2, r2, #16
 8007e6a:	0c12      	lsrs	r2, r2, #16
 8007e6c:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 8007e70:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007e74:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8007e78:	f820 202c 	strh.w	r2, [r0, ip, lsl #2]
 8007e7c:	0673      	lsls	r3, r6, #25
 8007e7e:	d40d      	bmi.n	8007e9c <HAL_PCD_IRQHandler+0x930>
 8007e80:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8007e84:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007e88:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007e8c:	041b      	lsls	r3, r3, #16
 8007e8e:	0c1b      	lsrs	r3, r3, #16
 8007e90:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007e94:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8007e98:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8007e9c:	f1be 0f00 	cmp.w	lr, #0
 8007ea0:	f43f ac4d 	beq.w	800773e <HAL_PCD_IRQHandler+0x1d2>
 8007ea4:	1979      	adds	r1, r7, r5
 8007ea6:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007eaa:	4673      	mov	r3, lr
 8007eac:	f8b1 215a 	ldrh.w	r2, [r1, #346]	@ 0x15a
 8007eb0:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007eb4:	f004 fbf0 	bl	800c698 <USB_ReadPMA>
 8007eb8:	e441      	b.n	800773e <HAL_PCD_IRQHandler+0x1d2>
 8007eba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007ebc:	eb02 0109 	add.w	r1, r2, r9
 8007ec0:	6259      	str	r1, [r3, #36]	@ 0x24
 8007ec2:	f8dc 602c 	ldr.w	r6, [ip, #44]	@ 0x2c
 8007ec6:	444e      	add	r6, r9
 8007ec8:	f8cc 602c 	str.w	r6, [ip, #44]	@ 0x2c
 8007ecc:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8007ece:	6a1a      	ldr	r2, [r3, #32]
 8007ed0:	4296      	cmp	r6, r2
 8007ed2:	d36f      	bcc.n	8007fb4 <HAL_PCD_IRQHandler+0xa48>
 8007ed4:	1ab6      	subs	r6, r6, r2
 8007ed6:	631e      	str	r6, [r3, #48]	@ 0x30
 8007ed8:	fa1f f982 	uxth.w	r9, r2
 8007edc:	197b      	adds	r3, r7, r5
 8007ede:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007ee2:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007ee6:	f1bc 0f00 	cmp.w	ip, #0
 8007eea:	d159      	bne.n	8007fa0 <HAL_PCD_IRQHandler+0xa34>
 8007eec:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007ef0:	fa1a f383 	uxtah	r3, sl, r3
 8007ef4:	449e      	add	lr, r3
 8007ef6:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007efa:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007efe:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007f02:	2a00      	cmp	r2, #0
 8007f04:	f040 8098 	bne.w	8008038 <HAL_PCD_IRQHandler+0xacc>
 8007f08:	f833 2038 	ldrh.w	r2, [r3, r8, lsl #3]
 8007f0c:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007f10:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007f14:	b292      	uxth	r2, r2
 8007f16:	f823 2038 	strh.w	r2, [r3, r8, lsl #3]
 8007f1a:	197a      	adds	r2, r7, r5
 8007f1c:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007f20:	464b      	mov	r3, r9
 8007f22:	8b12      	ldrh	r2, [r2, #24]
 8007f24:	f004 fba8 	bl	800c678 <USB_WritePMA>
 8007f28:	6820      	ldr	r0, [r4, #0]
 8007f2a:	e6ea      	b.n	8007d02 <HAL_PCD_IRQHandler+0x796>
 8007f2c:	2300      	movs	r3, #0
 8007f2e:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007f32:	e69b      	b.n	8007c6c <HAL_PCD_IRQHandler+0x700>
 8007f34:	f8c1 a168 	str.w	sl, [r1, #360]	@ 0x168
 8007f38:	e790      	b.n	8007e5c <HAL_PCD_IRQHandler+0x8f0>
 8007f3a:	2b01      	cmp	r3, #1
 8007f3c:	f47f ad7e 	bne.w	8007a3c <HAL_PCD_IRQHandler+0x4d0>
 8007f40:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f44:	f20e 4202 	addw	r2, lr, #1026	@ 0x402
 8007f48:	b29b      	uxth	r3, r3
 8007f4a:	4402      	add	r2, r0
 8007f4c:	2600      	movs	r6, #0
 8007f4e:	52d6      	strh	r6, [r2, r3]
 8007f50:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f54:	fa1a f383 	uxtah	r3, sl, r3
 8007f58:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007f5c:	e56e      	b.n	8007a3c <HAL_PCD_IRQHandler+0x4d0>
 8007f5e:	2b01      	cmp	r3, #1
 8007f60:	f47f adf8 	bne.w	8007b54 <HAL_PCD_IRQHandler+0x5e8>
 8007f64:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f68:	fa1a f383 	uxtah	r3, sl, r3
 8007f6c:	f20e 4206 	addw	r2, lr, #1030	@ 0x406
 8007f70:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007f74:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f78:	4402      	add	r2, r0
 8007f7a:	b29b      	uxth	r3, r3
 8007f7c:	52d6      	strh	r6, [r2, r3]
 8007f7e:	e5e9      	b.n	8007b54 <HAL_PCD_IRQHandler+0x5e8>
 8007f80:	f1bc 0f01 	cmp.w	ip, #1
 8007f84:	f47f af22 	bne.w	8007dcc <HAL_PCD_IRQHandler+0x860>
 8007f88:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007f8c:	fa1a f383 	uxtah	r3, sl, r3
 8007f90:	f823 9038 	strh.w	r9, [r3, r8, lsl #3]
 8007f94:	e71a      	b.n	8007dcc <HAL_PCD_IRQHandler+0x860>
 8007f96:	b996      	cbnz	r6, 8007fbe <HAL_PCD_IRQHandler+0xa52>
 8007f98:	f883 6034 	strb.w	r6, [r3, #52]	@ 0x34
 8007f9c:	464a      	mov	r2, r9
 8007f9e:	e6f5      	b.n	8007d8c <HAL_PCD_IRQHandler+0x820>
 8007fa0:	f1bc 0f01 	cmp.w	ip, #1
 8007fa4:	d1b9      	bne.n	8007f1a <HAL_PCD_IRQHandler+0x9ae>
 8007fa6:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007faa:	fa1a f383 	uxtah	r3, sl, r3
 8007fae:	f823 9038 	strh.w	r9, [r3, r8, lsl #3]
 8007fb2:	e7b2      	b.n	8007f1a <HAL_PCD_IRQHandler+0x9ae>
 8007fb4:	bb4e      	cbnz	r6, 800800a <HAL_PCD_IRQHandler+0xa9e>
 8007fb6:	f883 6034 	strb.w	r6, [r3, #52]	@ 0x34
 8007fba:	464a      	mov	r2, r9
 8007fbc:	e78e      	b.n	8007edc <HAL_PCD_IRQHandler+0x970>
 8007fbe:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007fc2:	2200      	movs	r2, #0
 8007fc4:	631a      	str	r2, [r3, #48]	@ 0x30
 8007fc6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007fca:	fa1f f986 	uxth.w	r9, r6
 8007fce:	f1bc 0f00 	cmp.w	ip, #0
 8007fd2:	d1d5      	bne.n	8007f80 <HAL_PCD_IRQHandler+0xa14>
 8007fd4:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007fd8:	fa1a f383 	uxtah	r3, sl, r3
 8007fdc:	4632      	mov	r2, r6
 8007fde:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007fe2:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007fe6:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007fea:	449e      	add	lr, r3
 8007fec:	2a3e      	cmp	r2, #62	@ 0x3e
 8007fee:	d832      	bhi.n	8008056 <HAL_PCD_IRQHandler+0xaea>
 8007ff0:	f8be 3000 	ldrh.w	r3, [lr]
 8007ff4:	0856      	lsrs	r6, r2, #1
 8007ff6:	07d2      	lsls	r2, r2, #31
 8007ff8:	bf48      	it	mi
 8007ffa:	3601      	addmi	r6, #1
 8007ffc:	b29b      	uxth	r3, r3
 8007ffe:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8008002:	b29b      	uxth	r3, r3
 8008004:	f8ae 3000 	strh.w	r3, [lr]
 8008008:	e6e0      	b.n	8007dcc <HAL_PCD_IRQHandler+0x860>
 800800a:	f893 c011 	ldrb.w	ip, [r3, #17]
 800800e:	2200      	movs	r2, #0
 8008010:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008014:	631a      	str	r2, [r3, #48]	@ 0x30
 8008016:	fa1f f986 	uxth.w	r9, r6
 800801a:	f1bc 0f00 	cmp.w	ip, #0
 800801e:	d1bf      	bne.n	8007fa0 <HAL_PCD_IRQHandler+0xa34>
 8008020:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8008024:	fa1a f383 	uxtah	r3, sl, r3
 8008028:	4632      	mov	r2, r6
 800802a:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 800802e:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8008032:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8008036:	449e      	add	lr, r3
 8008038:	2a3e      	cmp	r2, #62	@ 0x3e
 800803a:	d81f      	bhi.n	800807c <HAL_PCD_IRQHandler+0xb10>
 800803c:	f8be 3000 	ldrh.w	r3, [lr]
 8008040:	0856      	lsrs	r6, r2, #1
 8008042:	07d2      	lsls	r2, r2, #31
 8008044:	bf48      	it	mi
 8008046:	3601      	addmi	r6, #1
 8008048:	b29b      	uxth	r3, r3
 800804a:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 800804e:	b29b      	uxth	r3, r3
 8008050:	f8ae 3000 	strh.w	r3, [lr]
 8008054:	e761      	b.n	8007f1a <HAL_PCD_IRQHandler+0x9ae>
 8008056:	06d3      	lsls	r3, r2, #27
 8008058:	f8be 3000 	ldrh.w	r3, [lr]
 800805c:	ea4f 1652 	mov.w	r6, r2, lsr #5
 8008060:	bf08      	it	eq
 8008062:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8008066:	b29b      	uxth	r3, r3
 8008068:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 800806c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8008070:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8008074:	b29b      	uxth	r3, r3
 8008076:	f8ae 3000 	strh.w	r3, [lr]
 800807a:	e6a7      	b.n	8007dcc <HAL_PCD_IRQHandler+0x860>
 800807c:	06d3      	lsls	r3, r2, #27
 800807e:	f8be 3000 	ldrh.w	r3, [lr]
 8008082:	ea4f 1652 	mov.w	r6, r2, lsr #5
 8008086:	bf08      	it	eq
 8008088:	f106 36ff 	addeq.w	r6, r6, #4294967295
 800808c:	b29b      	uxth	r3, r3
 800808e:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8008092:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8008096:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800809a:	b29b      	uxth	r3, r3
 800809c:	f8ae 3000 	strh.w	r3, [lr]
 80080a0:	e73b      	b.n	8007f1a <HAL_PCD_IRQHandler+0x9ae>
 80080a2:	bf00      	nop
 80080a4:	ffff8f0f 	.word	0xffff8f0f

080080a8 <HAL_PCD_SetAddress>:
 80080a8:	f890 2290 	ldrb.w	r2, [r0, #656]	@ 0x290
 80080ac:	2a01      	cmp	r2, #1
 80080ae:	d00d      	beq.n	80080cc <HAL_PCD_SetAddress+0x24>
 80080b0:	b510      	push	{r4, lr}
 80080b2:	4604      	mov	r4, r0
 80080b4:	2201      	movs	r2, #1
 80080b6:	6800      	ldr	r0, [r0, #0]
 80080b8:	f884 2290 	strb.w	r2, [r4, #656]	@ 0x290
 80080bc:	7321      	strb	r1, [r4, #12]
 80080be:	f004 fac5 	bl	800c64c <USB_SetDevAddress>
 80080c2:	2300      	movs	r3, #0
 80080c4:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80080c8:	4618      	mov	r0, r3
 80080ca:	bd10      	pop	{r4, pc}
 80080cc:	2002      	movs	r0, #2
 80080ce:	4770      	bx	lr

080080d0 <HAL_PCD_EP_Open>:
 80080d0:	b510      	push	{r4, lr}
 80080d2:	f001 0e07 	and.w	lr, r1, #7
 80080d6:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 80080da:	0609      	lsls	r1, r1, #24
 80080dc:	4604      	mov	r4, r0
 80080de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80080e2:	d423      	bmi.n	800812c <HAL_PCD_EP_Open+0x5c>
 80080e4:	f50c 71a8 	add.w	r1, ip, #336	@ 0x150
 80080e8:	4401      	add	r1, r0
 80080ea:	eb0e 008e 	add.w	r0, lr, lr, lsl #2
 80080ee:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 80080f2:	f04f 0c00 	mov.w	ip, #0
 80080f6:	f880 c151 	strb.w	ip, [r0, #337]	@ 0x151
 80080fa:	2b02      	cmp	r3, #2
 80080fc:	70cb      	strb	r3, [r1, #3]
 80080fe:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8008102:	bf04      	itt	eq
 8008104:	2300      	moveq	r3, #0
 8008106:	710b      	strbeq	r3, [r1, #4]
 8008108:	f881 e000 	strb.w	lr, [r1]
 800810c:	610a      	str	r2, [r1, #16]
 800810e:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008112:	2b01      	cmp	r3, #1
 8008114:	d016      	beq.n	8008144 <HAL_PCD_EP_Open+0x74>
 8008116:	2301      	movs	r3, #1
 8008118:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 800811c:	6820      	ldr	r0, [r4, #0]
 800811e:	f003 fd71 	bl	800bc04 <USB_ActivateEndpoint>
 8008122:	2300      	movs	r3, #0
 8008124:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008128:	4618      	mov	r0, r3
 800812a:	bd10      	pop	{r4, pc}
 800812c:	f10c 0110 	add.w	r1, ip, #16
 8008130:	4401      	add	r1, r0
 8008132:	eb0e 008e 	add.w	r0, lr, lr, lsl #2
 8008136:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 800813a:	f04f 0c01 	mov.w	ip, #1
 800813e:	f880 c011 	strb.w	ip, [r0, #17]
 8008142:	e7da      	b.n	80080fa <HAL_PCD_EP_Open+0x2a>
 8008144:	2002      	movs	r0, #2
 8008146:	bd10      	pop	{r4, pc}

08008148 <HAL_PCD_EP_Close>:
 8008148:	f001 0307 	and.w	r3, r1, #7
 800814c:	f001 0207 	and.w	r2, r1, #7
 8008150:	b510      	push	{r4, lr}
 8008152:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008156:	4604      	mov	r4, r0
 8008158:	0609      	lsls	r1, r1, #24
 800815a:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 800815e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8008162:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 8008166:	d416      	bmi.n	8008196 <HAL_PCD_EP_Close+0x4e>
 8008168:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800816c:	18e1      	adds	r1, r4, r3
 800816e:	f04f 0c00 	mov.w	ip, #0
 8008172:	f880 c151 	strb.w	ip, [r0, #337]	@ 0x151
 8008176:	700a      	strb	r2, [r1, #0]
 8008178:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 800817c:	2b01      	cmp	r3, #1
 800817e:	d015      	beq.n	80081ac <HAL_PCD_EP_Close+0x64>
 8008180:	2301      	movs	r3, #1
 8008182:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008186:	6820      	ldr	r0, [r4, #0]
 8008188:	f003 ff5a 	bl	800c040 <USB_DeactivateEndpoint>
 800818c:	2300      	movs	r3, #0
 800818e:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008192:	4618      	mov	r0, r3
 8008194:	bd10      	pop	{r4, pc}
 8008196:	3310      	adds	r3, #16
 8008198:	18e1      	adds	r1, r4, r3
 800819a:	f04f 0c01 	mov.w	ip, #1
 800819e:	f880 c011 	strb.w	ip, [r0, #17]
 80081a2:	700a      	strb	r2, [r1, #0]
 80081a4:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 80081a8:	2b01      	cmp	r3, #1
 80081aa:	d1e9      	bne.n	8008180 <HAL_PCD_EP_Close+0x38>
 80081ac:	2002      	movs	r0, #2
 80081ae:	bd10      	pop	{r4, pc}

080081b0 <HAL_PCD_EP_Receive>:
 80081b0:	b510      	push	{r4, lr}
 80081b2:	f001 0e07 	and.w	lr, r1, #7
 80081b6:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 80081ba:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 80081be:	2128      	movs	r1, #40	@ 0x28
 80081c0:	2400      	movs	r4, #0
 80081c2:	fb01 010e 	mla	r1, r1, lr, r0
 80081c6:	f8cc 2164 	str.w	r2, [ip, #356]	@ 0x164
 80081ca:	6800      	ldr	r0, [r0, #0]
 80081cc:	f88c e150 	strb.w	lr, [ip, #336]	@ 0x150
 80081d0:	e9cc 345a 	strd	r3, r4, [ip, #360]	@ 0x168
 80081d4:	f88c 4151 	strb.w	r4, [ip, #337]	@ 0x151
 80081d8:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 80081dc:	f004 f816 	bl	800c20c <USB_EPStartXfer>
 80081e0:	4620      	mov	r0, r4
 80081e2:	bd10      	pop	{r4, pc}

080081e4 <HAL_PCD_EP_GetRxCount>:
 80081e4:	f001 0107 	and.w	r1, r1, #7
 80081e8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80081ec:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80081f0:	f8d0 016c 	ldr.w	r0, [r0, #364]	@ 0x16c
 80081f4:	4770      	bx	lr
 80081f6:	bf00      	nop

080081f8 <HAL_PCD_EP_Transmit>:
 80081f8:	b510      	push	{r4, lr}
 80081fa:	f001 0e07 	and.w	lr, r1, #7
 80081fe:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 8008202:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 8008206:	4661      	mov	r1, ip
 8008208:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 800820c:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
 8008210:	2400      	movs	r4, #0
 8008212:	2301      	movs	r3, #1
 8008214:	6800      	ldr	r0, [r0, #0]
 8008216:	f8cc 2024 	str.w	r2, [ip, #36]	@ 0x24
 800821a:	3110      	adds	r1, #16
 800821c:	f88c 3034 	strb.w	r3, [ip, #52]	@ 0x34
 8008220:	f8cc 402c 	str.w	r4, [ip, #44]	@ 0x2c
 8008224:	f88c 3011 	strb.w	r3, [ip, #17]
 8008228:	f88c e010 	strb.w	lr, [ip, #16]
 800822c:	f003 ffee 	bl	800c20c <USB_EPStartXfer>
 8008230:	4620      	mov	r0, r4
 8008232:	bd10      	pop	{r4, pc}

08008234 <HAL_PCD_EP_SetStall>:
 8008234:	7902      	ldrb	r2, [r0, #4]
 8008236:	f001 0307 	and.w	r3, r1, #7
 800823a:	429a      	cmp	r2, r3
 800823c:	d333      	bcc.n	80082a6 <HAL_PCD_EP_SetStall+0x72>
 800823e:	060a      	lsls	r2, r1, #24
 8008240:	b510      	push	{r4, lr}
 8008242:	4604      	mov	r4, r0
 8008244:	d41c      	bmi.n	8008280 <HAL_PCD_EP_SetStall+0x4c>
 8008246:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 800824a:	2028      	movs	r0, #40	@ 0x28
 800824c:	fb00 4101 	mla	r1, r0, r1, r4
 8008250:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8008254:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8008258:	2000      	movs	r0, #0
 800825a:	f882 0151 	strb.w	r0, [r2, #337]	@ 0x151
 800825e:	2201      	movs	r2, #1
 8008260:	708a      	strb	r2, [r1, #2]
 8008262:	700b      	strb	r3, [r1, #0]
 8008264:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008268:	4293      	cmp	r3, r2
 800826a:	d01a      	beq.n	80082a2 <HAL_PCD_EP_SetStall+0x6e>
 800826c:	6820      	ldr	r0, [r4, #0]
 800826e:	f884 2290 	strb.w	r2, [r4, #656]	@ 0x290
 8008272:	f004 f975 	bl	800c560 <USB_EPSetStall>
 8008276:	2300      	movs	r3, #0
 8008278:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 800827c:	4618      	mov	r0, r3
 800827e:	bd10      	pop	{r4, pc}
 8008280:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8008284:	2128      	movs	r1, #40	@ 0x28
 8008286:	fb01 0103 	mla	r1, r1, r3, r0
 800828a:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 800828e:	3110      	adds	r1, #16
 8008290:	2001      	movs	r0, #1
 8008292:	7450      	strb	r0, [r2, #17]
 8008294:	2201      	movs	r2, #1
 8008296:	708a      	strb	r2, [r1, #2]
 8008298:	700b      	strb	r3, [r1, #0]
 800829a:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 800829e:	4293      	cmp	r3, r2
 80082a0:	d1e4      	bne.n	800826c <HAL_PCD_EP_SetStall+0x38>
 80082a2:	2002      	movs	r0, #2
 80082a4:	bd10      	pop	{r4, pc}
 80082a6:	2001      	movs	r0, #1
 80082a8:	4770      	bx	lr
 80082aa:	bf00      	nop

080082ac <HAL_PCD_EP_ClrStall>:
 80082ac:	b538      	push	{r3, r4, r5, lr}
 80082ae:	7902      	ldrb	r2, [r0, #4]
 80082b0:	f001 030f 	and.w	r3, r1, #15
 80082b4:	429a      	cmp	r2, r3
 80082b6:	d332      	bcc.n	800831e <HAL_PCD_EP_ClrStall+0x72>
 80082b8:	f001 0307 	and.w	r3, r1, #7
 80082bc:	f001 0207 	and.w	r2, r1, #7
 80082c0:	4604      	mov	r4, r0
 80082c2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80082c6:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 80082ca:	0609      	lsls	r1, r1, #24
 80082cc:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80082d0:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 80082d4:	d416      	bmi.n	8008304 <HAL_PCD_EP_ClrStall+0x58>
 80082d6:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80082da:	18e1      	adds	r1, r4, r3
 80082dc:	2500      	movs	r5, #0
 80082de:	f880 5151 	strb.w	r5, [r0, #337]	@ 0x151
 80082e2:	2500      	movs	r5, #0
 80082e4:	708d      	strb	r5, [r1, #2]
 80082e6:	700a      	strb	r2, [r1, #0]
 80082e8:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 80082ec:	2b01      	cmp	r3, #1
 80082ee:	d014      	beq.n	800831a <HAL_PCD_EP_ClrStall+0x6e>
 80082f0:	2301      	movs	r3, #1
 80082f2:	6820      	ldr	r0, [r4, #0]
 80082f4:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80082f8:	f004 f95a 	bl	800c5b0 <USB_EPClearStall>
 80082fc:	f884 5290 	strb.w	r5, [r4, #656]	@ 0x290
 8008300:	4628      	mov	r0, r5
 8008302:	bd38      	pop	{r3, r4, r5, pc}
 8008304:	3310      	adds	r3, #16
 8008306:	18e1      	adds	r1, r4, r3
 8008308:	2501      	movs	r5, #1
 800830a:	7445      	strb	r5, [r0, #17]
 800830c:	2500      	movs	r5, #0
 800830e:	708d      	strb	r5, [r1, #2]
 8008310:	700a      	strb	r2, [r1, #0]
 8008312:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008316:	2b01      	cmp	r3, #1
 8008318:	d1ea      	bne.n	80082f0 <HAL_PCD_EP_ClrStall+0x44>
 800831a:	2002      	movs	r0, #2
 800831c:	bd38      	pop	{r3, r4, r5, pc}
 800831e:	2001      	movs	r0, #1
 8008320:	bd38      	pop	{r3, r4, r5, pc}
 8008322:	bf00      	nop

08008324 <HAL_PCDEx_PMAConfig>:
 8008324:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8008328:	d00c      	beq.n	8008344 <HAL_PCDEx_PMAConfig+0x20>
 800832a:	f001 0107 	and.w	r1, r1, #7
 800832e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8008332:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8008336:	3010      	adds	r0, #16
 8008338:	b299      	uxth	r1, r3
 800833a:	b962      	cbnz	r2, 8008356 <HAL_PCDEx_PMAConfig+0x32>
 800833c:	80c1      	strh	r1, [r0, #6]
 800833e:	7302      	strb	r2, [r0, #12]
 8008340:	2000      	movs	r0, #0
 8008342:	4770      	bx	lr
 8008344:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8008348:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 800834c:	f500 70a8 	add.w	r0, r0, #336	@ 0x150
 8008350:	b299      	uxth	r1, r3
 8008352:	2a00      	cmp	r2, #0
 8008354:	d0f2      	beq.n	800833c <HAL_PCDEx_PMAConfig+0x18>
 8008356:	2201      	movs	r2, #1
 8008358:	6083      	str	r3, [r0, #8]
 800835a:	7302      	strb	r2, [r0, #12]
 800835c:	2000      	movs	r0, #0
 800835e:	4770      	bx	lr

08008360 <HAL_PCDEx_ActivateLPM>:
 8008360:	4602      	mov	r2, r0
 8008362:	2000      	movs	r0, #0
 8008364:	6811      	ldr	r1, [r2, #0]
 8008366:	b410      	push	{r4}
 8008368:	f882 02c8 	strb.w	r0, [r2, #712]	@ 0x2c8
 800836c:	f8b1 3054 	ldrh.w	r3, [r1, #84]	@ 0x54
 8008370:	2401      	movs	r4, #1
 8008372:	b29b      	uxth	r3, r3
 8008374:	4323      	orrs	r3, r4
 8008376:	f8c2 42d0 	str.w	r4, [r2, #720]	@ 0x2d0
 800837a:	f8a1 3054 	strh.w	r3, [r1, #84]	@ 0x54
 800837e:	f8b1 3054 	ldrh.w	r3, [r1, #84]	@ 0x54
 8008382:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008386:	b29b      	uxth	r3, r3
 8008388:	f043 0302 	orr.w	r3, r3, #2
 800838c:	f8a1 3054 	strh.w	r3, [r1, #84]	@ 0x54
 8008390:	4770      	bx	lr
 8008392:	bf00      	nop

08008394 <HAL_PWR_EnableBkUpAccess>:
 8008394:	4a02      	ldr	r2, [pc, #8]	@ (80083a0 <HAL_PWR_EnableBkUpAccess+0xc>)
 8008396:	6813      	ldr	r3, [r2, #0]
 8008398:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800839c:	6013      	str	r3, [r2, #0]
 800839e:	4770      	bx	lr
 80083a0:	58000400 	.word	0x58000400

080083a4 <HAL_PWREx_GetVoltageRange>:
 80083a4:	4b02      	ldr	r3, [pc, #8]	@ (80083b0 <HAL_PWREx_GetVoltageRange+0xc>)
 80083a6:	6818      	ldr	r0, [r3, #0]
 80083a8:	f400 60c0 	and.w	r0, r0, #1536	@ 0x600
 80083ac:	4770      	bx	lr
 80083ae:	bf00      	nop
 80083b0:	58000400 	.word	0x58000400

080083b4 <HAL_PWREx_EnableVddUSB>:
 80083b4:	4a02      	ldr	r2, [pc, #8]	@ (80083c0 <HAL_PWREx_EnableVddUSB+0xc>)
 80083b6:	6853      	ldr	r3, [r2, #4]
 80083b8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80083bc:	6053      	str	r3, [r2, #4]
 80083be:	4770      	bx	lr
 80083c0:	58000400 	.word	0x58000400

080083c4 <RCC_SetFlashLatencyFromMSIRange>:
 80083c4:	28b0      	cmp	r0, #176	@ 0xb0
 80083c6:	4b31      	ldr	r3, [pc, #196]	@ (800848c <RCC_SetFlashLatencyFromMSIRange+0xc8>)
 80083c8:	4a31      	ldr	r2, [pc, #196]	@ (8008490 <RCC_SetFlashLatencyFromMSIRange+0xcc>)
 80083ca:	bf98      	it	ls
 80083cc:	0900      	lsrls	r0, r0, #4
 80083ce:	b570      	push	{r4, r5, r6, lr}
 80083d0:	bf8c      	ite	hi
 80083d2:	6adc      	ldrhi	r4, [r3, #44]	@ 0x2c
 80083d4:	f853 4020 	ldrls.w	r4, [r3, r0, lsl #2]
 80083d8:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80083dc:	b084      	sub	sp, #16
 80083de:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 80083e2:	f003 030f 	and.w	r3, r3, #15
 80083e6:	ae04      	add	r6, sp, #16
 80083e8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80083ec:	fbb4 f4f3 	udiv	r4, r4, r3
 80083f0:	f7ff ffd8 	bl	80083a4 <HAL_PWREx_GetVoltageRange>
 80083f4:	4b27      	ldr	r3, [pc, #156]	@ (8008494 <RCC_SetFlashLatencyFromMSIRange+0xd0>)
 80083f6:	4605      	mov	r5, r0
 80083f8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80083fa:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
 80083fe:	e906 000f 	stmdb	r6, {r0, r1, r2, r3}
 8008402:	d029      	beq.n	8008458 <RCC_SetFlashLatencyFromMSIRange+0x94>
 8008404:	4b24      	ldr	r3, [pc, #144]	@ (8008498 <RCC_SetFlashLatencyFromMSIRange+0xd4>)
 8008406:	429c      	cmp	r4, r3
 8008408:	d33a      	bcc.n	8008480 <RCC_SetFlashLatencyFromMSIRange+0xbc>
 800840a:	f503 03b7 	add.w	r3, r3, #5996544	@ 0x5b8000
 800840e:	f603 537f 	addw	r3, r3, #3455	@ 0xd7f
 8008412:	429c      	cmp	r4, r3
 8008414:	d936      	bls.n	8008484 <RCC_SetFlashLatencyFromMSIRange+0xc0>
 8008416:	f503 1374 	add.w	r3, r3, #3997696	@ 0x3d0000
 800841a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800841e:	429c      	cmp	r4, r3
 8008420:	d932      	bls.n	8008488 <RCC_SetFlashLatencyFromMSIRange+0xc4>
 8008422:	2600      	movs	r6, #0
 8008424:	4c1d      	ldr	r4, [pc, #116]	@ (800849c <RCC_SetFlashLatencyFromMSIRange+0xd8>)
 8008426:	6823      	ldr	r3, [r4, #0]
 8008428:	f023 0307 	bic.w	r3, r3, #7
 800842c:	4333      	orrs	r3, r6
 800842e:	6023      	str	r3, [r4, #0]
 8008430:	f7fd f998 	bl	8005764 <HAL_GetTick>
 8008434:	4605      	mov	r5, r0
 8008436:	e004      	b.n	8008442 <RCC_SetFlashLatencyFromMSIRange+0x7e>
 8008438:	f7fd f994 	bl	8005764 <HAL_GetTick>
 800843c:	1b40      	subs	r0, r0, r5
 800843e:	2802      	cmp	r0, #2
 8008440:	d807      	bhi.n	8008452 <RCC_SetFlashLatencyFromMSIRange+0x8e>
 8008442:	6823      	ldr	r3, [r4, #0]
 8008444:	f003 0307 	and.w	r3, r3, #7
 8008448:	429e      	cmp	r6, r3
 800844a:	d1f5      	bne.n	8008438 <RCC_SetFlashLatencyFromMSIRange+0x74>
 800844c:	2000      	movs	r0, #0
 800844e:	b004      	add	sp, #16
 8008450:	bd70      	pop	{r4, r5, r6, pc}
 8008452:	2003      	movs	r0, #3
 8008454:	b004      	add	sp, #16
 8008456:	bd70      	pop	{r4, r5, r6, pc}
 8008458:	4b11      	ldr	r3, [pc, #68]	@ (80084a0 <RCC_SetFlashLatencyFromMSIRange+0xdc>)
 800845a:	429c      	cmp	r4, r3
 800845c:	d910      	bls.n	8008480 <RCC_SetFlashLatencyFromMSIRange+0xbc>
 800845e:	4b11      	ldr	r3, [pc, #68]	@ (80084a4 <RCC_SetFlashLatencyFromMSIRange+0xe0>)
 8008460:	429c      	cmp	r4, r3
 8008462:	d90f      	bls.n	8008484 <RCC_SetFlashLatencyFromMSIRange+0xc0>
 8008464:	4b10      	ldr	r3, [pc, #64]	@ (80084a8 <RCC_SetFlashLatencyFromMSIRange+0xe4>)
 8008466:	429c      	cmp	r4, r3
 8008468:	d90e      	bls.n	8008488 <RCC_SetFlashLatencyFromMSIRange+0xc4>
 800846a:	4b10      	ldr	r3, [pc, #64]	@ (80084ac <RCC_SetFlashLatencyFromMSIRange+0xe8>)
 800846c:	429c      	cmp	r4, r3
 800846e:	bf38      	it	cc
 8008470:	2303      	movcc	r3, #3
 8008472:	d2d6      	bcs.n	8008422 <RCC_SetFlashLatencyFromMSIRange+0x5e>
 8008474:	aa04      	add	r2, sp, #16
 8008476:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800847a:	f853 6c10 	ldr.w	r6, [r3, #-16]
 800847e:	e7d1      	b.n	8008424 <RCC_SetFlashLatencyFromMSIRange+0x60>
 8008480:	2300      	movs	r3, #0
 8008482:	e7f7      	b.n	8008474 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8008484:	2301      	movs	r3, #1
 8008486:	e7f5      	b.n	8008474 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8008488:	2302      	movs	r3, #2
 800848a:	e7f3      	b.n	8008474 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 800848c:	08018340 	.word	0x08018340
 8008490:	080183a0 	.word	0x080183a0
 8008494:	08015f0c 	.word	0x08015f0c
 8008498:	006acfc0 	.word	0x006acfc0
 800849c:	58004000 	.word	0x58004000
 80084a0:	0121eabf 	.word	0x0121eabf
 80084a4:	0234933f 	.word	0x0234933f
 80084a8:	03473bbf 	.word	0x03473bbf
 80084ac:	03dfd240 	.word	0x03dfd240

080084b0 <HAL_RCC_GetSysClockFreq.part.0>:
 80084b0:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80084b4:	b410      	push	{r4}
 80084b6:	68d3      	ldr	r3, [r2, #12]
 80084b8:	f003 0303 	and.w	r3, r3, #3
 80084bc:	2b02      	cmp	r3, #2
 80084be:	d028      	beq.n	8008512 <HAL_RCC_GetSysClockFreq.part.0+0x62>
 80084c0:	2b03      	cmp	r3, #3
 80084c2:	d11b      	bne.n	80084fc <HAL_RCC_GetSysClockFreq.part.0+0x4c>
 80084c4:	6812      	ldr	r2, [r2, #0]
 80084c6:	4b14      	ldr	r3, [pc, #80]	@ (8008518 <HAL_RCC_GetSysClockFreq.part.0+0x68>)
 80084c8:	4c14      	ldr	r4, [pc, #80]	@ (800851c <HAL_RCC_GetSysClockFreq.part.0+0x6c>)
 80084ca:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 80084ce:	bf08      	it	eq
 80084d0:	461c      	moveq	r4, r3
 80084d2:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80084d6:	68cb      	ldr	r3, [r1, #12]
 80084d8:	68ca      	ldr	r2, [r1, #12]
 80084da:	68c8      	ldr	r0, [r1, #12]
 80084dc:	f3c3 2306 	ubfx	r3, r3, #8, #7
 80084e0:	f3c2 1202 	ubfx	r2, r2, #4, #3
 80084e4:	0f40      	lsrs	r0, r0, #29
 80084e6:	fb04 f303 	mul.w	r3, r4, r3
 80084ea:	3201      	adds	r2, #1
 80084ec:	3001      	adds	r0, #1
 80084ee:	fbb3 f3f2 	udiv	r3, r3, r2
 80084f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80084f6:	fbb3 f0f0 	udiv	r0, r3, r0
 80084fa:	4770      	bx	lr
 80084fc:	6813      	ldr	r3, [r2, #0]
 80084fe:	4a08      	ldr	r2, [pc, #32]	@ (8008520 <HAL_RCC_GetSysClockFreq.part.0+0x70>)
 8008500:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008504:	2bb0      	cmp	r3, #176	@ 0xb0
 8008506:	bf28      	it	cs
 8008508:	23b0      	movcs	r3, #176	@ 0xb0
 800850a:	091b      	lsrs	r3, r3, #4
 800850c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8008510:	e7df      	b.n	80084d2 <HAL_RCC_GetSysClockFreq.part.0+0x22>
 8008512:	4c02      	ldr	r4, [pc, #8]	@ (800851c <HAL_RCC_GetSysClockFreq.part.0+0x6c>)
 8008514:	e7dd      	b.n	80084d2 <HAL_RCC_GetSysClockFreq.part.0+0x22>
 8008516:	bf00      	nop
 8008518:	01e84800 	.word	0x01e84800
 800851c:	00f42400 	.word	0x00f42400
 8008520:	08018340 	.word	0x08018340

08008524 <HAL_RCC_OscConfig>:
 8008524:	2800      	cmp	r0, #0
 8008526:	f000 834a 	beq.w	8008bbe <HAL_RCC_OscConfig+0x69a>
 800852a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800852c:	6803      	ldr	r3, [r0, #0]
 800852e:	069d      	lsls	r5, r3, #26
 8008530:	4604      	mov	r4, r0
 8008532:	d529      	bpl.n	8008588 <HAL_RCC_OscConfig+0x64>
 8008534:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008538:	6893      	ldr	r3, [r2, #8]
 800853a:	68d2      	ldr	r2, [r2, #12]
 800853c:	f013 030c 	ands.w	r3, r3, #12
 8008540:	f000 80f9 	beq.w	8008736 <HAL_RCC_OscConfig+0x212>
 8008544:	2b0c      	cmp	r3, #12
 8008546:	f000 80f1 	beq.w	800872c <HAL_RCC_OscConfig+0x208>
 800854a:	69e3      	ldr	r3, [r4, #28]
 800854c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008550:	2b00      	cmp	r3, #0
 8008552:	f000 8274 	beq.w	8008a3e <HAL_RCC_OscConfig+0x51a>
 8008556:	682b      	ldr	r3, [r5, #0]
 8008558:	f043 0301 	orr.w	r3, r3, #1
 800855c:	602b      	str	r3, [r5, #0]
 800855e:	f7fd f901 	bl	8005764 <HAL_GetTick>
 8008562:	4606      	mov	r6, r0
 8008564:	682b      	ldr	r3, [r5, #0]
 8008566:	0798      	lsls	r0, r3, #30
 8008568:	f140 827a 	bpl.w	8008a60 <HAL_RCC_OscConfig+0x53c>
 800856c:	682b      	ldr	r3, [r5, #0]
 800856e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008570:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008574:	4313      	orrs	r3, r2
 8008576:	602b      	str	r3, [r5, #0]
 8008578:	686b      	ldr	r3, [r5, #4]
 800857a:	6a22      	ldr	r2, [r4, #32]
 800857c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008580:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008584:	606b      	str	r3, [r5, #4]
 8008586:	6823      	ldr	r3, [r4, #0]
 8008588:	07da      	lsls	r2, r3, #31
 800858a:	d527      	bpl.n	80085dc <HAL_RCC_OscConfig+0xb8>
 800858c:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008590:	688a      	ldr	r2, [r1, #8]
 8008592:	68c9      	ldr	r1, [r1, #12]
 8008594:	f002 020c 	and.w	r2, r2, #12
 8008598:	2a08      	cmp	r2, #8
 800859a:	f000 81f0 	beq.w	800897e <HAL_RCC_OscConfig+0x45a>
 800859e:	2a0c      	cmp	r2, #12
 80085a0:	f000 81e8 	beq.w	8008974 <HAL_RCC_OscConfig+0x450>
 80085a4:	6863      	ldr	r3, [r4, #4]
 80085a6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80085aa:	f000 8233 	beq.w	8008a14 <HAL_RCC_OscConfig+0x4f0>
 80085ae:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80085b2:	682a      	ldr	r2, [r5, #0]
 80085b4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80085b8:	602a      	str	r2, [r5, #0]
 80085ba:	2b00      	cmp	r3, #0
 80085bc:	f040 8230 	bne.w	8008a20 <HAL_RCC_OscConfig+0x4fc>
 80085c0:	f7fd f8d0 	bl	8005764 <HAL_GetTick>
 80085c4:	4606      	mov	r6, r0
 80085c6:	682b      	ldr	r3, [r5, #0]
 80085c8:	039f      	lsls	r7, r3, #14
 80085ca:	d506      	bpl.n	80085da <HAL_RCC_OscConfig+0xb6>
 80085cc:	f7fd f8ca 	bl	8005764 <HAL_GetTick>
 80085d0:	1b80      	subs	r0, r0, r6
 80085d2:	2864      	cmp	r0, #100	@ 0x64
 80085d4:	d9f7      	bls.n	80085c6 <HAL_RCC_OscConfig+0xa2>
 80085d6:	2003      	movs	r0, #3
 80085d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085da:	6823      	ldr	r3, [r4, #0]
 80085dc:	079d      	lsls	r5, r3, #30
 80085de:	d52c      	bpl.n	800863a <HAL_RCC_OscConfig+0x116>
 80085e0:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80085e4:	688a      	ldr	r2, [r1, #8]
 80085e6:	68c9      	ldr	r1, [r1, #12]
 80085e8:	f002 020c 	and.w	r2, r2, #12
 80085ec:	2a04      	cmp	r2, #4
 80085ee:	f000 811f 	beq.w	8008830 <HAL_RCC_OscConfig+0x30c>
 80085f2:	2a0c      	cmp	r2, #12
 80085f4:	f000 8117 	beq.w	8008826 <HAL_RCC_OscConfig+0x302>
 80085f8:	68e3      	ldr	r3, [r4, #12]
 80085fa:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80085fe:	b183      	cbz	r3, 8008622 <HAL_RCC_OscConfig+0xfe>
 8008600:	682b      	ldr	r3, [r5, #0]
 8008602:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008606:	602b      	str	r3, [r5, #0]
 8008608:	f7fd f8ac 	bl	8005764 <HAL_GetTick>
 800860c:	4606      	mov	r6, r0
 800860e:	682b      	ldr	r3, [r5, #0]
 8008610:	0558      	lsls	r0, r3, #21
 8008612:	f100 8233 	bmi.w	8008a7c <HAL_RCC_OscConfig+0x558>
 8008616:	f7fd f8a5 	bl	8005764 <HAL_GetTick>
 800861a:	1b80      	subs	r0, r0, r6
 800861c:	2802      	cmp	r0, #2
 800861e:	d9f6      	bls.n	800860e <HAL_RCC_OscConfig+0xea>
 8008620:	e7d9      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008622:	682b      	ldr	r3, [r5, #0]
 8008624:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008628:	602b      	str	r3, [r5, #0]
 800862a:	f7fd f89b 	bl	8005764 <HAL_GetTick>
 800862e:	4606      	mov	r6, r0
 8008630:	682b      	ldr	r3, [r5, #0]
 8008632:	0559      	lsls	r1, r3, #21
 8008634:	f100 822b 	bmi.w	8008a8e <HAL_RCC_OscConfig+0x56a>
 8008638:	6823      	ldr	r3, [r4, #0]
 800863a:	f013 0f18 	tst.w	r3, #24
 800863e:	d023      	beq.n	8008688 <HAL_RCC_OscConfig+0x164>
 8008640:	6962      	ldr	r2, [r4, #20]
 8008642:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008646:	2a00      	cmp	r2, #0
 8008648:	f000 80ff 	beq.w	800884a <HAL_RCC_OscConfig+0x326>
 800864c:	f013 0f10 	tst.w	r3, #16
 8008650:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008654:	f000 8234 	beq.w	8008ac0 <HAL_RCC_OscConfig+0x59c>
 8008658:	079a      	lsls	r2, r3, #30
 800865a:	f100 81a3 	bmi.w	80089a4 <HAL_RCC_OscConfig+0x480>
 800865e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008662:	f043 0301 	orr.w	r3, r3, #1
 8008666:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800866a:	f7fd f87b 	bl	8005764 <HAL_GetTick>
 800866e:	4606      	mov	r6, r0
 8008670:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008674:	079b      	lsls	r3, r3, #30
 8008676:	f100 8195 	bmi.w	80089a4 <HAL_RCC_OscConfig+0x480>
 800867a:	f7fd f873 	bl	8005764 <HAL_GetTick>
 800867e:	1b80      	subs	r0, r0, r6
 8008680:	2802      	cmp	r0, #2
 8008682:	d9f5      	bls.n	8008670 <HAL_RCC_OscConfig+0x14c>
 8008684:	e7a7      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008686:	6823      	ldr	r3, [r4, #0]
 8008688:	0758      	lsls	r0, r3, #29
 800868a:	d422      	bmi.n	80086d2 <HAL_RCC_OscConfig+0x1ae>
 800868c:	0658      	lsls	r0, r3, #25
 800868e:	d51b      	bpl.n	80086c8 <HAL_RCC_OscConfig+0x1a4>
 8008690:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008692:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008696:	2b00      	cmp	r3, #0
 8008698:	f000 80b1 	beq.w	80087fe <HAL_RCC_OscConfig+0x2da>
 800869c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80086a0:	f043 0301 	orr.w	r3, r3, #1
 80086a4:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 80086a8:	f7fd f85c 	bl	8005764 <HAL_GetTick>
 80086ac:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80086b0:	0799      	lsls	r1, r3, #30
 80086b2:	4606      	mov	r6, r0
 80086b4:	d408      	bmi.n	80086c8 <HAL_RCC_OscConfig+0x1a4>
 80086b6:	f7fd f855 	bl	8005764 <HAL_GetTick>
 80086ba:	1b80      	subs	r0, r0, r6
 80086bc:	2802      	cmp	r0, #2
 80086be:	d88a      	bhi.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 80086c0:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80086c4:	0799      	lsls	r1, r3, #30
 80086c6:	d5f6      	bpl.n	80086b6 <HAL_RCC_OscConfig+0x192>
 80086c8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80086ca:	2b00      	cmp	r3, #0
 80086cc:	d177      	bne.n	80087be <HAL_RCC_OscConfig+0x29a>
 80086ce:	2000      	movs	r0, #0
 80086d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80086d2:	4dae      	ldr	r5, [pc, #696]	@ (800898c <HAL_RCC_OscConfig+0x468>)
 80086d4:	682b      	ldr	r3, [r5, #0]
 80086d6:	05d9      	lsls	r1, r3, #23
 80086d8:	f140 80db 	bpl.w	8008892 <HAL_RCC_OscConfig+0x36e>
 80086dc:	68a3      	ldr	r3, [r4, #8]
 80086de:	2b01      	cmp	r3, #1
 80086e0:	f000 812f 	beq.w	8008942 <HAL_RCC_OscConfig+0x41e>
 80086e4:	2b05      	cmp	r3, #5
 80086e6:	f000 821a 	beq.w	8008b1e <HAL_RCC_OscConfig+0x5fa>
 80086ea:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80086ee:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 80086f2:	f022 0201 	bic.w	r2, r2, #1
 80086f6:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 80086fa:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 80086fe:	f022 0204 	bic.w	r2, r2, #4
 8008702:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 8008706:	2b00      	cmp	r3, #0
 8008708:	f040 8123 	bne.w	8008952 <HAL_RCC_OscConfig+0x42e>
 800870c:	f7fd f82a 	bl	8005764 <HAL_GetTick>
 8008710:	4606      	mov	r6, r0
 8008712:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8008716:	079f      	lsls	r7, r3, #30
 8008718:	f140 8136 	bpl.w	8008988 <HAL_RCC_OscConfig+0x464>
 800871c:	f7fd f822 	bl	8005764 <HAL_GetTick>
 8008720:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008724:	1b80      	subs	r0, r0, r6
 8008726:	4298      	cmp	r0, r3
 8008728:	d9f3      	bls.n	8008712 <HAL_RCC_OscConfig+0x1ee>
 800872a:	e754      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 800872c:	f002 0203 	and.w	r2, r2, #3
 8008730:	2a01      	cmp	r2, #1
 8008732:	f47f af0a 	bne.w	800854a <HAL_RCC_OscConfig+0x26>
 8008736:	69e3      	ldr	r3, [r4, #28]
 8008738:	2b00      	cmp	r3, #0
 800873a:	d03e      	beq.n	80087ba <HAL_RCC_OscConfig+0x296>
 800873c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008740:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8008742:	682b      	ldr	r3, [r5, #0]
 8008744:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008748:	2bb0      	cmp	r3, #176	@ 0xb0
 800874a:	bf28      	it	cs
 800874c:	23b0      	movcs	r3, #176	@ 0xb0
 800874e:	4298      	cmp	r0, r3
 8008750:	f240 81a4 	bls.w	8008a9c <HAL_RCC_OscConfig+0x578>
 8008754:	f7ff fe36 	bl	80083c4 <RCC_SetFlashLatencyFromMSIRange>
 8008758:	bb78      	cbnz	r0, 80087ba <HAL_RCC_OscConfig+0x296>
 800875a:	682b      	ldr	r3, [r5, #0]
 800875c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800875e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008762:	4313      	orrs	r3, r2
 8008764:	602b      	str	r3, [r5, #0]
 8008766:	686b      	ldr	r3, [r5, #4]
 8008768:	6a22      	ldr	r2, [r4, #32]
 800876a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800876e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008772:	606b      	str	r3, [r5, #4]
 8008774:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008778:	6893      	ldr	r3, [r2, #8]
 800877a:	f013 030c 	ands.w	r3, r3, #12
 800877e:	f000 81c3 	beq.w	8008b08 <HAL_RCC_OscConfig+0x5e4>
 8008782:	2b04      	cmp	r3, #4
 8008784:	f000 8219 	beq.w	8008bba <HAL_RCC_OscConfig+0x696>
 8008788:	2b08      	cmp	r3, #8
 800878a:	f000 820e 	beq.w	8008baa <HAL_RCC_OscConfig+0x686>
 800878e:	f7ff fe8f 	bl	80084b0 <HAL_RCC_GetSysClockFreq.part.0>
 8008792:	4603      	mov	r3, r0
 8008794:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008798:	487d      	ldr	r0, [pc, #500]	@ (8008990 <HAL_RCC_OscConfig+0x46c>)
 800879a:	6892      	ldr	r2, [r2, #8]
 800879c:	497d      	ldr	r1, [pc, #500]	@ (8008994 <HAL_RCC_OscConfig+0x470>)
 800879e:	f3c2 1203 	ubfx	r2, r2, #4, #4
 80087a2:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 80087a6:	4a7c      	ldr	r2, [pc, #496]	@ (8008998 <HAL_RCC_OscConfig+0x474>)
 80087a8:	fbb3 f3f0 	udiv	r3, r3, r0
 80087ac:	6810      	ldr	r0, [r2, #0]
 80087ae:	600b      	str	r3, [r1, #0]
 80087b0:	f7fc faa8 	bl	8004d04 <HAL_InitTick>
 80087b4:	2800      	cmp	r0, #0
 80087b6:	f43f aee6 	beq.w	8008586 <HAL_RCC_OscConfig+0x62>
 80087ba:	2001      	movs	r0, #1
 80087bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80087be:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80087c2:	2b02      	cmp	r3, #2
 80087c4:	68aa      	ldr	r2, [r5, #8]
 80087c6:	68e9      	ldr	r1, [r5, #12]
 80087c8:	f002 020c 	and.w	r2, r2, #12
 80087cc:	d071      	beq.n	80088b2 <HAL_RCC_OscConfig+0x38e>
 80087ce:	2a0c      	cmp	r2, #12
 80087d0:	d0f3      	beq.n	80087ba <HAL_RCC_OscConfig+0x296>
 80087d2:	682b      	ldr	r3, [r5, #0]
 80087d4:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80087d8:	602b      	str	r3, [r5, #0]
 80087da:	f7fc ffc3 	bl	8005764 <HAL_GetTick>
 80087de:	4604      	mov	r4, r0
 80087e0:	e005      	b.n	80087ee <HAL_RCC_OscConfig+0x2ca>
 80087e2:	f7fc ffbf 	bl	8005764 <HAL_GetTick>
 80087e6:	1b00      	subs	r0, r0, r4
 80087e8:	2802      	cmp	r0, #2
 80087ea:	f63f aef4 	bhi.w	80085d6 <HAL_RCC_OscConfig+0xb2>
 80087ee:	682b      	ldr	r3, [r5, #0]
 80087f0:	019b      	lsls	r3, r3, #6
 80087f2:	d4f6      	bmi.n	80087e2 <HAL_RCC_OscConfig+0x2be>
 80087f4:	68ea      	ldr	r2, [r5, #12]
 80087f6:	4b69      	ldr	r3, [pc, #420]	@ (800899c <HAL_RCC_OscConfig+0x478>)
 80087f8:	4013      	ands	r3, r2
 80087fa:	60eb      	str	r3, [r5, #12]
 80087fc:	e767      	b.n	80086ce <HAL_RCC_OscConfig+0x1aa>
 80087fe:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8008802:	f023 0301 	bic.w	r3, r3, #1
 8008806:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 800880a:	f7fc ffab 	bl	8005764 <HAL_GetTick>
 800880e:	4606      	mov	r6, r0
 8008810:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8008814:	079a      	lsls	r2, r3, #30
 8008816:	f57f af57 	bpl.w	80086c8 <HAL_RCC_OscConfig+0x1a4>
 800881a:	f7fc ffa3 	bl	8005764 <HAL_GetTick>
 800881e:	1b80      	subs	r0, r0, r6
 8008820:	2802      	cmp	r0, #2
 8008822:	d9f5      	bls.n	8008810 <HAL_RCC_OscConfig+0x2ec>
 8008824:	e6d7      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008826:	f001 0103 	and.w	r1, r1, #3
 800882a:	2902      	cmp	r1, #2
 800882c:	f47f aee4 	bne.w	80085f8 <HAL_RCC_OscConfig+0xd4>
 8008830:	68e2      	ldr	r2, [r4, #12]
 8008832:	2a00      	cmp	r2, #0
 8008834:	d0c1      	beq.n	80087ba <HAL_RCC_OscConfig+0x296>
 8008836:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 800883a:	6920      	ldr	r0, [r4, #16]
 800883c:	684a      	ldr	r2, [r1, #4]
 800883e:	f022 42fe 	bic.w	r2, r2, #2130706432	@ 0x7f000000
 8008842:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8008846:	604a      	str	r2, [r1, #4]
 8008848:	e6f7      	b.n	800863a <HAL_RCC_OscConfig+0x116>
 800884a:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800884e:	f023 0304 	bic.w	r3, r3, #4
 8008852:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008856:	f7fc ff85 	bl	8005764 <HAL_GetTick>
 800885a:	4606      	mov	r6, r0
 800885c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008860:	071b      	lsls	r3, r3, #28
 8008862:	f100 8104 	bmi.w	8008a6e <HAL_RCC_OscConfig+0x54a>
 8008866:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800886a:	f023 0301 	bic.w	r3, r3, #1
 800886e:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008872:	f7fc ff77 	bl	8005764 <HAL_GetTick>
 8008876:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800887a:	4605      	mov	r5, r0
 800887c:	f8d6 3094 	ldr.w	r3, [r6, #148]	@ 0x94
 8008880:	079f      	lsls	r7, r3, #30
 8008882:	f57f af00 	bpl.w	8008686 <HAL_RCC_OscConfig+0x162>
 8008886:	f7fc ff6d 	bl	8005764 <HAL_GetTick>
 800888a:	1b40      	subs	r0, r0, r5
 800888c:	2802      	cmp	r0, #2
 800888e:	d9f5      	bls.n	800887c <HAL_RCC_OscConfig+0x358>
 8008890:	e6a1      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008892:	f7ff fd7f 	bl	8008394 <HAL_PWR_EnableBkUpAccess>
 8008896:	f7fc ff65 	bl	8005764 <HAL_GetTick>
 800889a:	4606      	mov	r6, r0
 800889c:	e005      	b.n	80088aa <HAL_RCC_OscConfig+0x386>
 800889e:	f7fc ff61 	bl	8005764 <HAL_GetTick>
 80088a2:	1b80      	subs	r0, r0, r6
 80088a4:	2802      	cmp	r0, #2
 80088a6:	f63f ae96 	bhi.w	80085d6 <HAL_RCC_OscConfig+0xb2>
 80088aa:	682b      	ldr	r3, [r5, #0]
 80088ac:	05da      	lsls	r2, r3, #23
 80088ae:	d5f6      	bpl.n	800889e <HAL_RCC_OscConfig+0x37a>
 80088b0:	e714      	b.n	80086dc <HAL_RCC_OscConfig+0x1b8>
 80088b2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80088b4:	f001 0303 	and.w	r3, r1, #3
 80088b8:	4283      	cmp	r3, r0
 80088ba:	f000 813f 	beq.w	8008b3c <HAL_RCC_OscConfig+0x618>
 80088be:	2a0c      	cmp	r2, #12
 80088c0:	f43f af7b 	beq.w	80087ba <HAL_RCC_OscConfig+0x296>
 80088c4:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80088c8:	682b      	ldr	r3, [r5, #0]
 80088ca:	015b      	lsls	r3, r3, #5
 80088cc:	f53f af75 	bmi.w	80087ba <HAL_RCC_OscConfig+0x296>
 80088d0:	682b      	ldr	r3, [r5, #0]
 80088d2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80088d6:	602b      	str	r3, [r5, #0]
 80088d8:	f7fc ff44 	bl	8005764 <HAL_GetTick>
 80088dc:	4606      	mov	r6, r0
 80088de:	e005      	b.n	80088ec <HAL_RCC_OscConfig+0x3c8>
 80088e0:	f7fc ff40 	bl	8005764 <HAL_GetTick>
 80088e4:	1b80      	subs	r0, r0, r6
 80088e6:	2802      	cmp	r0, #2
 80088e8:	f63f ae75 	bhi.w	80085d6 <HAL_RCC_OscConfig+0xb2>
 80088ec:	682b      	ldr	r3, [r5, #0]
 80088ee:	019f      	lsls	r7, r3, #6
 80088f0:	d4f6      	bmi.n	80088e0 <HAL_RCC_OscConfig+0x3bc>
 80088f2:	e9d4 320c 	ldrd	r3, r2, [r4, #48]	@ 0x30
 80088f6:	68e9      	ldr	r1, [r5, #12]
 80088f8:	4313      	orrs	r3, r2
 80088fa:	4a29      	ldr	r2, [pc, #164]	@ (80089a0 <HAL_RCC_OscConfig+0x47c>)
 80088fc:	400a      	ands	r2, r1
 80088fe:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8008900:	4313      	orrs	r3, r2
 8008902:	430b      	orrs	r3, r1
 8008904:	e9d4 0110 	ldrd	r0, r1, [r4, #64]	@ 0x40
 8008908:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800890a:	4303      	orrs	r3, r0
 800890c:	430b      	orrs	r3, r1
 800890e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008912:	60eb      	str	r3, [r5, #12]
 8008914:	682b      	ldr	r3, [r5, #0]
 8008916:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800891a:	602b      	str	r3, [r5, #0]
 800891c:	68eb      	ldr	r3, [r5, #12]
 800891e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008922:	60eb      	str	r3, [r5, #12]
 8008924:	f7fc ff1e 	bl	8005764 <HAL_GetTick>
 8008928:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 800892c:	4604      	mov	r4, r0
 800892e:	682b      	ldr	r3, [r5, #0]
 8008930:	0198      	lsls	r0, r3, #6
 8008932:	f53f aecc 	bmi.w	80086ce <HAL_RCC_OscConfig+0x1aa>
 8008936:	f7fc ff15 	bl	8005764 <HAL_GetTick>
 800893a:	1b00      	subs	r0, r0, r4
 800893c:	2802      	cmp	r0, #2
 800893e:	d9f6      	bls.n	800892e <HAL_RCC_OscConfig+0x40a>
 8008940:	e649      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008942:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008946:	f8d2 3090 	ldr.w	r3, [r2, #144]	@ 0x90
 800894a:	f043 0301 	orr.w	r3, r3, #1
 800894e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8008952:	f7fc ff07 	bl	8005764 <HAL_GetTick>
 8008956:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800895a:	4605      	mov	r5, r0
 800895c:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 8008960:	079b      	lsls	r3, r3, #30
 8008962:	d411      	bmi.n	8008988 <HAL_RCC_OscConfig+0x464>
 8008964:	f7fc fefe 	bl	8005764 <HAL_GetTick>
 8008968:	f241 3388 	movw	r3, #5000	@ 0x1388
 800896c:	1b40      	subs	r0, r0, r5
 800896e:	4298      	cmp	r0, r3
 8008970:	d9f4      	bls.n	800895c <HAL_RCC_OscConfig+0x438>
 8008972:	e630      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008974:	f001 0103 	and.w	r1, r1, #3
 8008978:	2903      	cmp	r1, #3
 800897a:	f47f ae13 	bne.w	80085a4 <HAL_RCC_OscConfig+0x80>
 800897e:	6862      	ldr	r2, [r4, #4]
 8008980:	2a00      	cmp	r2, #0
 8008982:	f47f ae2b 	bne.w	80085dc <HAL_RCC_OscConfig+0xb8>
 8008986:	e718      	b.n	80087ba <HAL_RCC_OscConfig+0x296>
 8008988:	6823      	ldr	r3, [r4, #0]
 800898a:	e67f      	b.n	800868c <HAL_RCC_OscConfig+0x168>
 800898c:	58000400 	.word	0x58000400
 8008990:	080183a0 	.word	0x080183a0
 8008994:	20000034 	.word	0x20000034
 8008998:	2000003c 	.word	0x2000003c
 800899c:	eefefffc 	.word	0xeefefffc
 80089a0:	11c1808c 	.word	0x11c1808c
 80089a4:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80089a8:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089ac:	f043 0304 	orr.w	r3, r3, #4
 80089b0:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80089b4:	f7fc fed6 	bl	8005764 <HAL_GetTick>
 80089b8:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089bc:	071f      	lsls	r7, r3, #28
 80089be:	4606      	mov	r6, r0
 80089c0:	d409      	bmi.n	80089d6 <HAL_RCC_OscConfig+0x4b2>
 80089c2:	f7fc fecf 	bl	8005764 <HAL_GetTick>
 80089c6:	1b80      	subs	r0, r0, r6
 80089c8:	2803      	cmp	r0, #3
 80089ca:	f63f ae04 	bhi.w	80085d6 <HAL_RCC_OscConfig+0xb2>
 80089ce:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089d2:	071f      	lsls	r7, r3, #28
 80089d4:	d5f5      	bpl.n	80089c2 <HAL_RCC_OscConfig+0x49e>
 80089d6:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089da:	69a2      	ldr	r2, [r4, #24]
 80089dc:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80089e0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80089e4:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80089e8:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80089ec:	f023 0301 	bic.w	r3, r3, #1
 80089f0:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80089f4:	f7fc feb6 	bl	8005764 <HAL_GetTick>
 80089f8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80089fc:	4605      	mov	r5, r0
 80089fe:	f8d6 3094 	ldr.w	r3, [r6, #148]	@ 0x94
 8008a02:	0798      	lsls	r0, r3, #30
 8008a04:	f57f ae3f 	bpl.w	8008686 <HAL_RCC_OscConfig+0x162>
 8008a08:	f7fc feac 	bl	8005764 <HAL_GetTick>
 8008a0c:	1b40      	subs	r0, r0, r5
 8008a0e:	2802      	cmp	r0, #2
 8008a10:	d9f5      	bls.n	80089fe <HAL_RCC_OscConfig+0x4da>
 8008a12:	e5e0      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008a14:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008a18:	6813      	ldr	r3, [r2, #0]
 8008a1a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008a1e:	6013      	str	r3, [r2, #0]
 8008a20:	f7fc fea0 	bl	8005764 <HAL_GetTick>
 8008a24:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008a28:	4605      	mov	r5, r0
 8008a2a:	6833      	ldr	r3, [r6, #0]
 8008a2c:	039b      	lsls	r3, r3, #14
 8008a2e:	f53f add4 	bmi.w	80085da <HAL_RCC_OscConfig+0xb6>
 8008a32:	f7fc fe97 	bl	8005764 <HAL_GetTick>
 8008a36:	1b40      	subs	r0, r0, r5
 8008a38:	2864      	cmp	r0, #100	@ 0x64
 8008a3a:	d9f6      	bls.n	8008a2a <HAL_RCC_OscConfig+0x506>
 8008a3c:	e5cb      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008a3e:	682b      	ldr	r3, [r5, #0]
 8008a40:	f023 0301 	bic.w	r3, r3, #1
 8008a44:	602b      	str	r3, [r5, #0]
 8008a46:	f7fc fe8d 	bl	8005764 <HAL_GetTick>
 8008a4a:	4606      	mov	r6, r0
 8008a4c:	682b      	ldr	r3, [r5, #0]
 8008a4e:	0799      	lsls	r1, r3, #30
 8008a50:	f57f ad99 	bpl.w	8008586 <HAL_RCC_OscConfig+0x62>
 8008a54:	f7fc fe86 	bl	8005764 <HAL_GetTick>
 8008a58:	1b80      	subs	r0, r0, r6
 8008a5a:	2802      	cmp	r0, #2
 8008a5c:	d9f6      	bls.n	8008a4c <HAL_RCC_OscConfig+0x528>
 8008a5e:	e5ba      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008a60:	f7fc fe80 	bl	8005764 <HAL_GetTick>
 8008a64:	1b80      	subs	r0, r0, r6
 8008a66:	2802      	cmp	r0, #2
 8008a68:	f67f ad7c 	bls.w	8008564 <HAL_RCC_OscConfig+0x40>
 8008a6c:	e5b3      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008a6e:	f7fc fe79 	bl	8005764 <HAL_GetTick>
 8008a72:	1b80      	subs	r0, r0, r6
 8008a74:	2803      	cmp	r0, #3
 8008a76:	f67f aef1 	bls.w	800885c <HAL_RCC_OscConfig+0x338>
 8008a7a:	e5ac      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008a7c:	686b      	ldr	r3, [r5, #4]
 8008a7e:	6922      	ldr	r2, [r4, #16]
 8008a80:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 8008a84:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008a88:	606b      	str	r3, [r5, #4]
 8008a8a:	6823      	ldr	r3, [r4, #0]
 8008a8c:	e5d5      	b.n	800863a <HAL_RCC_OscConfig+0x116>
 8008a8e:	f7fc fe69 	bl	8005764 <HAL_GetTick>
 8008a92:	1b80      	subs	r0, r0, r6
 8008a94:	2802      	cmp	r0, #2
 8008a96:	f67f adcb 	bls.w	8008630 <HAL_RCC_OscConfig+0x10c>
 8008a9a:	e59c      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008a9c:	682b      	ldr	r3, [r5, #0]
 8008a9e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008aa2:	4303      	orrs	r3, r0
 8008aa4:	602b      	str	r3, [r5, #0]
 8008aa6:	686b      	ldr	r3, [r5, #4]
 8008aa8:	6a22      	ldr	r2, [r4, #32]
 8008aaa:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008aae:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008ab2:	606b      	str	r3, [r5, #4]
 8008ab4:	f7ff fc86 	bl	80083c4 <RCC_SetFlashLatencyFromMSIRange>
 8008ab8:	2800      	cmp	r0, #0
 8008aba:	f43f ae5b 	beq.w	8008774 <HAL_RCC_OscConfig+0x250>
 8008abe:	e67c      	b.n	80087ba <HAL_RCC_OscConfig+0x296>
 8008ac0:	f043 0301 	orr.w	r3, r3, #1
 8008ac4:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008ac8:	f7fc fe4c 	bl	8005764 <HAL_GetTick>
 8008acc:	4606      	mov	r6, r0
 8008ace:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008ad2:	0799      	lsls	r1, r3, #30
 8008ad4:	d405      	bmi.n	8008ae2 <HAL_RCC_OscConfig+0x5be>
 8008ad6:	f7fc fe45 	bl	8005764 <HAL_GetTick>
 8008ada:	1b80      	subs	r0, r0, r6
 8008adc:	2802      	cmp	r0, #2
 8008ade:	d9f6      	bls.n	8008ace <HAL_RCC_OscConfig+0x5aa>
 8008ae0:	e579      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008ae2:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008ae6:	f023 0304 	bic.w	r3, r3, #4
 8008aea:	f04f 47b0 	mov.w	r7, #1476395008	@ 0x58000000
 8008aee:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008af2:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8008af6:	071a      	lsls	r2, r3, #28
 8008af8:	f57f adc5 	bpl.w	8008686 <HAL_RCC_OscConfig+0x162>
 8008afc:	f7fc fe32 	bl	8005764 <HAL_GetTick>
 8008b00:	1b80      	subs	r0, r0, r6
 8008b02:	2803      	cmp	r0, #3
 8008b04:	d9f5      	bls.n	8008af2 <HAL_RCC_OscConfig+0x5ce>
 8008b06:	e566      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008b08:	6813      	ldr	r3, [r2, #0]
 8008b0a:	4a2e      	ldr	r2, [pc, #184]	@ (8008bc4 <HAL_RCC_OscConfig+0x6a0>)
 8008b0c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008b10:	2bb0      	cmp	r3, #176	@ 0xb0
 8008b12:	bf28      	it	cs
 8008b14:	23b0      	movcs	r3, #176	@ 0xb0
 8008b16:	091b      	lsrs	r3, r3, #4
 8008b18:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008b1c:	e63a      	b.n	8008794 <HAL_RCC_OscConfig+0x270>
 8008b1e:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008b22:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 8008b26:	f042 0204 	orr.w	r2, r2, #4
 8008b2a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008b2e:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 8008b32:	f042 0201 	orr.w	r2, r2, #1
 8008b36:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008b3a:	e70a      	b.n	8008952 <HAL_RCC_OscConfig+0x42e>
 8008b3c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8008b3e:	f001 0370 	and.w	r3, r1, #112	@ 0x70
 8008b42:	4283      	cmp	r3, r0
 8008b44:	f47f aebb 	bne.w	80088be <HAL_RCC_OscConfig+0x39a>
 8008b48:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8008b4a:	f3c1 2306 	ubfx	r3, r1, #8, #7
 8008b4e:	4283      	cmp	r3, r0
 8008b50:	f47f aeb5 	bne.w	80088be <HAL_RCC_OscConfig+0x39a>
 8008b54:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8008b56:	f401 1378 	and.w	r3, r1, #4063232	@ 0x3e0000
 8008b5a:	4283      	cmp	r3, r0
 8008b5c:	f47f aeaf 	bne.w	80088be <HAL_RCC_OscConfig+0x39a>
 8008b60:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8008b62:	f001 6360 	and.w	r3, r1, #234881024	@ 0xe000000
 8008b66:	4283      	cmp	r3, r0
 8008b68:	f47f aea9 	bne.w	80088be <HAL_RCC_OscConfig+0x39a>
 8008b6c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8008b6e:	f001 4160 	and.w	r1, r1, #3758096384	@ 0xe0000000
 8008b72:	4299      	cmp	r1, r3
 8008b74:	f47f aea3 	bne.w	80088be <HAL_RCC_OscConfig+0x39a>
 8008b78:	682b      	ldr	r3, [r5, #0]
 8008b7a:	0199      	lsls	r1, r3, #6
 8008b7c:	f53f ada7 	bmi.w	80086ce <HAL_RCC_OscConfig+0x1aa>
 8008b80:	682b      	ldr	r3, [r5, #0]
 8008b82:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8008b86:	602b      	str	r3, [r5, #0]
 8008b88:	68eb      	ldr	r3, [r5, #12]
 8008b8a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008b8e:	60eb      	str	r3, [r5, #12]
 8008b90:	f7fc fde8 	bl	8005764 <HAL_GetTick>
 8008b94:	4604      	mov	r4, r0
 8008b96:	682b      	ldr	r3, [r5, #0]
 8008b98:	019a      	lsls	r2, r3, #6
 8008b9a:	f53f ad98 	bmi.w	80086ce <HAL_RCC_OscConfig+0x1aa>
 8008b9e:	f7fc fde1 	bl	8005764 <HAL_GetTick>
 8008ba2:	1b03      	subs	r3, r0, r4
 8008ba4:	2b02      	cmp	r3, #2
 8008ba6:	d9f6      	bls.n	8008b96 <HAL_RCC_OscConfig+0x672>
 8008ba8:	e515      	b.n	80085d6 <HAL_RCC_OscConfig+0xb2>
 8008baa:	6811      	ldr	r1, [r2, #0]
 8008bac:	4a06      	ldr	r2, [pc, #24]	@ (8008bc8 <HAL_RCC_OscConfig+0x6a4>)
 8008bae:	4b07      	ldr	r3, [pc, #28]	@ (8008bcc <HAL_RCC_OscConfig+0x6a8>)
 8008bb0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8008bb4:	bf08      	it	eq
 8008bb6:	4613      	moveq	r3, r2
 8008bb8:	e5ec      	b.n	8008794 <HAL_RCC_OscConfig+0x270>
 8008bba:	4b04      	ldr	r3, [pc, #16]	@ (8008bcc <HAL_RCC_OscConfig+0x6a8>)
 8008bbc:	e5ea      	b.n	8008794 <HAL_RCC_OscConfig+0x270>
 8008bbe:	2001      	movs	r0, #1
 8008bc0:	4770      	bx	lr
 8008bc2:	bf00      	nop
 8008bc4:	08018340 	.word	0x08018340
 8008bc8:	01e84800 	.word	0x01e84800
 8008bcc:	00f42400 	.word	0x00f42400

08008bd0 <HAL_RCC_ClockConfig>:
 8008bd0:	2800      	cmp	r0, #0
 8008bd2:	f000 8130 	beq.w	8008e36 <HAL_RCC_ClockConfig+0x266>
 8008bd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008bda:	4e9d      	ldr	r6, [pc, #628]	@ (8008e50 <HAL_RCC_ClockConfig+0x280>)
 8008bdc:	6833      	ldr	r3, [r6, #0]
 8008bde:	f003 0307 	and.w	r3, r3, #7
 8008be2:	428b      	cmp	r3, r1
 8008be4:	460c      	mov	r4, r1
 8008be6:	4605      	mov	r5, r0
 8008be8:	f0c0 80d9 	bcc.w	8008d9e <HAL_RCC_ClockConfig+0x1ce>
 8008bec:	682b      	ldr	r3, [r5, #0]
 8008bee:	079a      	lsls	r2, r3, #30
 8008bf0:	d472      	bmi.n	8008cd8 <HAL_RCC_ClockConfig+0x108>
 8008bf2:	0698      	lsls	r0, r3, #26
 8008bf4:	f100 8082 	bmi.w	8008cfc <HAL_RCC_ClockConfig+0x12c>
 8008bf8:	065a      	lsls	r2, r3, #25
 8008bfa:	f100 8094 	bmi.w	8008d26 <HAL_RCC_ClockConfig+0x156>
 8008bfe:	0758      	lsls	r0, r3, #29
 8008c00:	f100 80a7 	bmi.w	8008d52 <HAL_RCC_ClockConfig+0x182>
 8008c04:	071a      	lsls	r2, r3, #28
 8008c06:	f100 80b6 	bmi.w	8008d76 <HAL_RCC_ClockConfig+0x1a6>
 8008c0a:	07df      	lsls	r7, r3, #31
 8008c0c:	d529      	bpl.n	8008c62 <HAL_RCC_ClockConfig+0x92>
 8008c0e:	686b      	ldr	r3, [r5, #4]
 8008c10:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008c14:	2b02      	cmp	r3, #2
 8008c16:	6812      	ldr	r2, [r2, #0]
 8008c18:	f000 8106 	beq.w	8008e28 <HAL_RCC_ClockConfig+0x258>
 8008c1c:	2b03      	cmp	r3, #3
 8008c1e:	f000 80fd 	beq.w	8008e1c <HAL_RCC_ClockConfig+0x24c>
 8008c22:	2b00      	cmp	r3, #0
 8008c24:	f040 8104 	bne.w	8008e30 <HAL_RCC_ClockConfig+0x260>
 8008c28:	0791      	lsls	r1, r2, #30
 8008c2a:	f140 80fa 	bpl.w	8008e22 <HAL_RCC_ClockConfig+0x252>
 8008c2e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008c32:	f241 3888 	movw	r8, #5000	@ 0x1388
 8008c36:	68b2      	ldr	r2, [r6, #8]
 8008c38:	f022 0203 	bic.w	r2, r2, #3
 8008c3c:	4313      	orrs	r3, r2
 8008c3e:	60b3      	str	r3, [r6, #8]
 8008c40:	f7fc fd90 	bl	8005764 <HAL_GetTick>
 8008c44:	4607      	mov	r7, r0
 8008c46:	e005      	b.n	8008c54 <HAL_RCC_ClockConfig+0x84>
 8008c48:	f7fc fd8c 	bl	8005764 <HAL_GetTick>
 8008c4c:	1bc0      	subs	r0, r0, r7
 8008c4e:	4540      	cmp	r0, r8
 8008c50:	f200 80b8 	bhi.w	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008c54:	68b3      	ldr	r3, [r6, #8]
 8008c56:	686a      	ldr	r2, [r5, #4]
 8008c58:	f003 030c 	and.w	r3, r3, #12
 8008c5c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008c60:	d1f2      	bne.n	8008c48 <HAL_RCC_ClockConfig+0x78>
 8008c62:	4d7b      	ldr	r5, [pc, #492]	@ (8008e50 <HAL_RCC_ClockConfig+0x280>)
 8008c64:	682b      	ldr	r3, [r5, #0]
 8008c66:	f003 0307 	and.w	r3, r3, #7
 8008c6a:	42a3      	cmp	r3, r4
 8008c6c:	d913      	bls.n	8008c96 <HAL_RCC_ClockConfig+0xc6>
 8008c6e:	682b      	ldr	r3, [r5, #0]
 8008c70:	f023 0307 	bic.w	r3, r3, #7
 8008c74:	4323      	orrs	r3, r4
 8008c76:	602b      	str	r3, [r5, #0]
 8008c78:	f7fc fd74 	bl	8005764 <HAL_GetTick>
 8008c7c:	4606      	mov	r6, r0
 8008c7e:	e005      	b.n	8008c8c <HAL_RCC_ClockConfig+0xbc>
 8008c80:	f7fc fd70 	bl	8005764 <HAL_GetTick>
 8008c84:	1b80      	subs	r0, r0, r6
 8008c86:	2802      	cmp	r0, #2
 8008c88:	f200 809c 	bhi.w	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008c8c:	682b      	ldr	r3, [r5, #0]
 8008c8e:	f003 0307 	and.w	r3, r3, #7
 8008c92:	42a3      	cmp	r3, r4
 8008c94:	d1f4      	bne.n	8008c80 <HAL_RCC_ClockConfig+0xb0>
 8008c96:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008c9a:	6893      	ldr	r3, [r2, #8]
 8008c9c:	f013 030c 	ands.w	r3, r3, #12
 8008ca0:	f000 80b1 	beq.w	8008e06 <HAL_RCC_ClockConfig+0x236>
 8008ca4:	2b04      	cmp	r3, #4
 8008ca6:	f000 80d0 	beq.w	8008e4a <HAL_RCC_ClockConfig+0x27a>
 8008caa:	2b08      	cmp	r3, #8
 8008cac:	f000 80c5 	beq.w	8008e3a <HAL_RCC_ClockConfig+0x26a>
 8008cb0:	f7ff fbfe 	bl	80084b0 <HAL_RCC_GetSysClockFreq.part.0>
 8008cb4:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008cb8:	4a66      	ldr	r2, [pc, #408]	@ (8008e54 <HAL_RCC_ClockConfig+0x284>)
 8008cba:	689b      	ldr	r3, [r3, #8]
 8008cbc:	4966      	ldr	r1, [pc, #408]	@ (8008e58 <HAL_RCC_ClockConfig+0x288>)
 8008cbe:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008cc2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008cc6:	fbb0 f0f3 	udiv	r0, r0, r3
 8008cca:	6010      	str	r0, [r2, #0]
 8008ccc:	f7fc fd50 	bl	8005770 <HAL_GetTickPrio>
 8008cd0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008cd4:	f7fc b816 	b.w	8004d04 <HAL_InitTick>
 8008cd8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008cdc:	68aa      	ldr	r2, [r5, #8]
 8008cde:	68b3      	ldr	r3, [r6, #8]
 8008ce0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008ce4:	4313      	orrs	r3, r2
 8008ce6:	60b3      	str	r3, [r6, #8]
 8008ce8:	f7fc fd3c 	bl	8005764 <HAL_GetTick>
 8008cec:	4607      	mov	r7, r0
 8008cee:	68b3      	ldr	r3, [r6, #8]
 8008cf0:	03db      	lsls	r3, r3, #15
 8008cf2:	d56a      	bpl.n	8008dca <HAL_RCC_ClockConfig+0x1fa>
 8008cf4:	682b      	ldr	r3, [r5, #0]
 8008cf6:	0698      	lsls	r0, r3, #26
 8008cf8:	f57f af7e 	bpl.w	8008bf8 <HAL_RCC_ClockConfig+0x28>
 8008cfc:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d00:	696a      	ldr	r2, [r5, #20]
 8008d02:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008d06:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008d0a:	4313      	orrs	r3, r2
 8008d0c:	f8c6 3108 	str.w	r3, [r6, #264]	@ 0x108
 8008d10:	f7fc fd28 	bl	8005764 <HAL_GetTick>
 8008d14:	4607      	mov	r7, r0
 8008d16:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008d1a:	0399      	lsls	r1, r3, #14
 8008d1c:	d55b      	bpl.n	8008dd6 <HAL_RCC_ClockConfig+0x206>
 8008d1e:	682b      	ldr	r3, [r5, #0]
 8008d20:	065a      	lsls	r2, r3, #25
 8008d22:	f57f af6c 	bpl.w	8008bfe <HAL_RCC_ClockConfig+0x2e>
 8008d26:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d2a:	69aa      	ldr	r2, [r5, #24]
 8008d2c:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008d30:	f023 030f 	bic.w	r3, r3, #15
 8008d34:	ea43 1312 	orr.w	r3, r3, r2, lsr #4
 8008d38:	f8c6 3108 	str.w	r3, [r6, #264]	@ 0x108
 8008d3c:	f7fc fd12 	bl	8005764 <HAL_GetTick>
 8008d40:	4607      	mov	r7, r0
 8008d42:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008d46:	03db      	lsls	r3, r3, #15
 8008d48:	d54b      	bpl.n	8008de2 <HAL_RCC_ClockConfig+0x212>
 8008d4a:	682b      	ldr	r3, [r5, #0]
 8008d4c:	0758      	lsls	r0, r3, #29
 8008d4e:	f57f af59 	bpl.w	8008c04 <HAL_RCC_ClockConfig+0x34>
 8008d52:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d56:	68ea      	ldr	r2, [r5, #12]
 8008d58:	68b3      	ldr	r3, [r6, #8]
 8008d5a:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8008d5e:	4313      	orrs	r3, r2
 8008d60:	60b3      	str	r3, [r6, #8]
 8008d62:	f7fc fcff 	bl	8005764 <HAL_GetTick>
 8008d66:	4607      	mov	r7, r0
 8008d68:	68b3      	ldr	r3, [r6, #8]
 8008d6a:	0399      	lsls	r1, r3, #14
 8008d6c:	d53f      	bpl.n	8008dee <HAL_RCC_ClockConfig+0x21e>
 8008d6e:	682b      	ldr	r3, [r5, #0]
 8008d70:	071a      	lsls	r2, r3, #28
 8008d72:	f57f af4a 	bpl.w	8008c0a <HAL_RCC_ClockConfig+0x3a>
 8008d76:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008d7a:	692a      	ldr	r2, [r5, #16]
 8008d7c:	68b3      	ldr	r3, [r6, #8]
 8008d7e:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
 8008d82:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008d86:	60b3      	str	r3, [r6, #8]
 8008d88:	f7fc fcec 	bl	8005764 <HAL_GetTick>
 8008d8c:	4607      	mov	r7, r0
 8008d8e:	68b3      	ldr	r3, [r6, #8]
 8008d90:	035b      	lsls	r3, r3, #13
 8008d92:	d532      	bpl.n	8008dfa <HAL_RCC_ClockConfig+0x22a>
 8008d94:	682b      	ldr	r3, [r5, #0]
 8008d96:	07df      	lsls	r7, r3, #31
 8008d98:	f53f af39 	bmi.w	8008c0e <HAL_RCC_ClockConfig+0x3e>
 8008d9c:	e761      	b.n	8008c62 <HAL_RCC_ClockConfig+0x92>
 8008d9e:	6833      	ldr	r3, [r6, #0]
 8008da0:	f023 0307 	bic.w	r3, r3, #7
 8008da4:	430b      	orrs	r3, r1
 8008da6:	6033      	str	r3, [r6, #0]
 8008da8:	f7fc fcdc 	bl	8005764 <HAL_GetTick>
 8008dac:	4607      	mov	r7, r0
 8008dae:	6833      	ldr	r3, [r6, #0]
 8008db0:	f003 0307 	and.w	r3, r3, #7
 8008db4:	42a3      	cmp	r3, r4
 8008db6:	f43f af19 	beq.w	8008bec <HAL_RCC_ClockConfig+0x1c>
 8008dba:	f7fc fcd3 	bl	8005764 <HAL_GetTick>
 8008dbe:	1bc3      	subs	r3, r0, r7
 8008dc0:	2b02      	cmp	r3, #2
 8008dc2:	d9f4      	bls.n	8008dae <HAL_RCC_ClockConfig+0x1de>
 8008dc4:	2003      	movs	r0, #3
 8008dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008dca:	f7fc fccb 	bl	8005764 <HAL_GetTick>
 8008dce:	1bc0      	subs	r0, r0, r7
 8008dd0:	2802      	cmp	r0, #2
 8008dd2:	d98c      	bls.n	8008cee <HAL_RCC_ClockConfig+0x11e>
 8008dd4:	e7f6      	b.n	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008dd6:	f7fc fcc5 	bl	8005764 <HAL_GetTick>
 8008dda:	1bc0      	subs	r0, r0, r7
 8008ddc:	2802      	cmp	r0, #2
 8008dde:	d99a      	bls.n	8008d16 <HAL_RCC_ClockConfig+0x146>
 8008de0:	e7f0      	b.n	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008de2:	f7fc fcbf 	bl	8005764 <HAL_GetTick>
 8008de6:	1bc0      	subs	r0, r0, r7
 8008de8:	2802      	cmp	r0, #2
 8008dea:	d9aa      	bls.n	8008d42 <HAL_RCC_ClockConfig+0x172>
 8008dec:	e7ea      	b.n	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008dee:	f7fc fcb9 	bl	8005764 <HAL_GetTick>
 8008df2:	1bc0      	subs	r0, r0, r7
 8008df4:	2802      	cmp	r0, #2
 8008df6:	d9b7      	bls.n	8008d68 <HAL_RCC_ClockConfig+0x198>
 8008df8:	e7e4      	b.n	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008dfa:	f7fc fcb3 	bl	8005764 <HAL_GetTick>
 8008dfe:	1bc0      	subs	r0, r0, r7
 8008e00:	2802      	cmp	r0, #2
 8008e02:	d9c4      	bls.n	8008d8e <HAL_RCC_ClockConfig+0x1be>
 8008e04:	e7de      	b.n	8008dc4 <HAL_RCC_ClockConfig+0x1f4>
 8008e06:	6813      	ldr	r3, [r2, #0]
 8008e08:	4a14      	ldr	r2, [pc, #80]	@ (8008e5c <HAL_RCC_ClockConfig+0x28c>)
 8008e0a:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008e0e:	2bb0      	cmp	r3, #176	@ 0xb0
 8008e10:	bf28      	it	cs
 8008e12:	23b0      	movcs	r3, #176	@ 0xb0
 8008e14:	091b      	lsrs	r3, r3, #4
 8008e16:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008e1a:	e74b      	b.n	8008cb4 <HAL_RCC_ClockConfig+0xe4>
 8008e1c:	0190      	lsls	r0, r2, #6
 8008e1e:	f53f af06 	bmi.w	8008c2e <HAL_RCC_ClockConfig+0x5e>
 8008e22:	2001      	movs	r0, #1
 8008e24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e28:	0396      	lsls	r6, r2, #14
 8008e2a:	f53f af00 	bmi.w	8008c2e <HAL_RCC_ClockConfig+0x5e>
 8008e2e:	e7f8      	b.n	8008e22 <HAL_RCC_ClockConfig+0x252>
 8008e30:	0552      	lsls	r2, r2, #21
 8008e32:	d5f6      	bpl.n	8008e22 <HAL_RCC_ClockConfig+0x252>
 8008e34:	e6fb      	b.n	8008c2e <HAL_RCC_ClockConfig+0x5e>
 8008e36:	2001      	movs	r0, #1
 8008e38:	4770      	bx	lr
 8008e3a:	6812      	ldr	r2, [r2, #0]
 8008e3c:	4b08      	ldr	r3, [pc, #32]	@ (8008e60 <HAL_RCC_ClockConfig+0x290>)
 8008e3e:	4809      	ldr	r0, [pc, #36]	@ (8008e64 <HAL_RCC_ClockConfig+0x294>)
 8008e40:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008e44:	bf08      	it	eq
 8008e46:	4618      	moveq	r0, r3
 8008e48:	e734      	b.n	8008cb4 <HAL_RCC_ClockConfig+0xe4>
 8008e4a:	4806      	ldr	r0, [pc, #24]	@ (8008e64 <HAL_RCC_ClockConfig+0x294>)
 8008e4c:	e732      	b.n	8008cb4 <HAL_RCC_ClockConfig+0xe4>
 8008e4e:	bf00      	nop
 8008e50:	58004000 	.word	0x58004000
 8008e54:	20000034 	.word	0x20000034
 8008e58:	080183a0 	.word	0x080183a0
 8008e5c:	08018340 	.word	0x08018340
 8008e60:	01e84800 	.word	0x01e84800
 8008e64:	00f42400 	.word	0x00f42400

08008e68 <HAL_RCC_GetSysClockFreq>:
 8008e68:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008e6c:	6893      	ldr	r3, [r2, #8]
 8008e6e:	f013 030c 	ands.w	r3, r3, #12
 8008e72:	d10a      	bne.n	8008e8a <HAL_RCC_GetSysClockFreq+0x22>
 8008e74:	6813      	ldr	r3, [r2, #0]
 8008e76:	4a0d      	ldr	r2, [pc, #52]	@ (8008eac <HAL_RCC_GetSysClockFreq+0x44>)
 8008e78:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008e7c:	2bb0      	cmp	r3, #176	@ 0xb0
 8008e7e:	bf28      	it	cs
 8008e80:	23b0      	movcs	r3, #176	@ 0xb0
 8008e82:	091b      	lsrs	r3, r3, #4
 8008e84:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008e88:	4770      	bx	lr
 8008e8a:	2b04      	cmp	r3, #4
 8008e8c:	d00b      	beq.n	8008ea6 <HAL_RCC_GetSysClockFreq+0x3e>
 8008e8e:	2b08      	cmp	r3, #8
 8008e90:	d001      	beq.n	8008e96 <HAL_RCC_GetSysClockFreq+0x2e>
 8008e92:	f7ff bb0d 	b.w	80084b0 <HAL_RCC_GetSysClockFreq.part.0>
 8008e96:	6812      	ldr	r2, [r2, #0]
 8008e98:	4b05      	ldr	r3, [pc, #20]	@ (8008eb0 <HAL_RCC_GetSysClockFreq+0x48>)
 8008e9a:	4806      	ldr	r0, [pc, #24]	@ (8008eb4 <HAL_RCC_GetSysClockFreq+0x4c>)
 8008e9c:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008ea0:	bf08      	it	eq
 8008ea2:	4618      	moveq	r0, r3
 8008ea4:	4770      	bx	lr
 8008ea6:	4803      	ldr	r0, [pc, #12]	@ (8008eb4 <HAL_RCC_GetSysClockFreq+0x4c>)
 8008ea8:	4770      	bx	lr
 8008eaa:	bf00      	nop
 8008eac:	08018340 	.word	0x08018340
 8008eb0:	01e84800 	.word	0x01e84800
 8008eb4:	00f42400 	.word	0x00f42400

08008eb8 <HAL_RCC_GetPCLK1Freq>:
 8008eb8:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008ebc:	b508      	push	{r3, lr}
 8008ebe:	6893      	ldr	r3, [r2, #8]
 8008ec0:	f013 030c 	ands.w	r3, r3, #12
 8008ec4:	d11e      	bne.n	8008f04 <HAL_RCC_GetPCLK1Freq+0x4c>
 8008ec6:	6813      	ldr	r3, [r2, #0]
 8008ec8:	4a17      	ldr	r2, [pc, #92]	@ (8008f28 <HAL_RCC_GetPCLK1Freq+0x70>)
 8008eca:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008ece:	2bb0      	cmp	r3, #176	@ 0xb0
 8008ed0:	bf28      	it	cs
 8008ed2:	23b0      	movcs	r3, #176	@ 0xb0
 8008ed4:	091b      	lsrs	r3, r3, #4
 8008ed6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008eda:	4914      	ldr	r1, [pc, #80]	@ (8008f2c <HAL_RCC_GetPCLK1Freq+0x74>)
 8008edc:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008ee0:	6893      	ldr	r3, [r2, #8]
 8008ee2:	6892      	ldr	r2, [r2, #8]
 8008ee4:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008ee8:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8008eec:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ef0:	490f      	ldr	r1, [pc, #60]	@ (8008f30 <HAL_RCC_GetPCLK1Freq+0x78>)
 8008ef2:	fbb0 f3f3 	udiv	r3, r0, r3
 8008ef6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008efa:	f000 001f 	and.w	r0, r0, #31
 8008efe:	fa23 f000 	lsr.w	r0, r3, r0
 8008f02:	bd08      	pop	{r3, pc}
 8008f04:	2b04      	cmp	r3, #4
 8008f06:	d004      	beq.n	8008f12 <HAL_RCC_GetPCLK1Freq+0x5a>
 8008f08:	2b08      	cmp	r3, #8
 8008f0a:	d004      	beq.n	8008f16 <HAL_RCC_GetPCLK1Freq+0x5e>
 8008f0c:	f7ff fad0 	bl	80084b0 <HAL_RCC_GetSysClockFreq.part.0>
 8008f10:	e7e3      	b.n	8008eda <HAL_RCC_GetPCLK1Freq+0x22>
 8008f12:	4808      	ldr	r0, [pc, #32]	@ (8008f34 <HAL_RCC_GetPCLK1Freq+0x7c>)
 8008f14:	e7e1      	b.n	8008eda <HAL_RCC_GetPCLK1Freq+0x22>
 8008f16:	6812      	ldr	r2, [r2, #0]
 8008f18:	4b07      	ldr	r3, [pc, #28]	@ (8008f38 <HAL_RCC_GetPCLK1Freq+0x80>)
 8008f1a:	4806      	ldr	r0, [pc, #24]	@ (8008f34 <HAL_RCC_GetPCLK1Freq+0x7c>)
 8008f1c:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008f20:	bf08      	it	eq
 8008f22:	4618      	moveq	r0, r3
 8008f24:	e7d9      	b.n	8008eda <HAL_RCC_GetPCLK1Freq+0x22>
 8008f26:	bf00      	nop
 8008f28:	08018340 	.word	0x08018340
 8008f2c:	080183a0 	.word	0x080183a0
 8008f30:	08018380 	.word	0x08018380
 8008f34:	00f42400 	.word	0x00f42400
 8008f38:	01e84800 	.word	0x01e84800

08008f3c <HAL_RCC_GetPCLK2Freq>:
 8008f3c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008f40:	b508      	push	{r3, lr}
 8008f42:	6893      	ldr	r3, [r2, #8]
 8008f44:	f013 030c 	ands.w	r3, r3, #12
 8008f48:	d11e      	bne.n	8008f88 <HAL_RCC_GetPCLK2Freq+0x4c>
 8008f4a:	6813      	ldr	r3, [r2, #0]
 8008f4c:	4a17      	ldr	r2, [pc, #92]	@ (8008fac <HAL_RCC_GetPCLK2Freq+0x70>)
 8008f4e:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008f52:	2bb0      	cmp	r3, #176	@ 0xb0
 8008f54:	bf28      	it	cs
 8008f56:	23b0      	movcs	r3, #176	@ 0xb0
 8008f58:	091b      	lsrs	r3, r3, #4
 8008f5a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008f5e:	4914      	ldr	r1, [pc, #80]	@ (8008fb0 <HAL_RCC_GetPCLK2Freq+0x74>)
 8008f60:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008f64:	6893      	ldr	r3, [r2, #8]
 8008f66:	6892      	ldr	r2, [r2, #8]
 8008f68:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008f6c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8008f70:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008f74:	490f      	ldr	r1, [pc, #60]	@ (8008fb4 <HAL_RCC_GetPCLK2Freq+0x78>)
 8008f76:	fbb0 f3f3 	udiv	r3, r0, r3
 8008f7a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008f7e:	f000 001f 	and.w	r0, r0, #31
 8008f82:	fa23 f000 	lsr.w	r0, r3, r0
 8008f86:	bd08      	pop	{r3, pc}
 8008f88:	2b04      	cmp	r3, #4
 8008f8a:	d004      	beq.n	8008f96 <HAL_RCC_GetPCLK2Freq+0x5a>
 8008f8c:	2b08      	cmp	r3, #8
 8008f8e:	d004      	beq.n	8008f9a <HAL_RCC_GetPCLK2Freq+0x5e>
 8008f90:	f7ff fa8e 	bl	80084b0 <HAL_RCC_GetSysClockFreq.part.0>
 8008f94:	e7e3      	b.n	8008f5e <HAL_RCC_GetPCLK2Freq+0x22>
 8008f96:	4808      	ldr	r0, [pc, #32]	@ (8008fb8 <HAL_RCC_GetPCLK2Freq+0x7c>)
 8008f98:	e7e1      	b.n	8008f5e <HAL_RCC_GetPCLK2Freq+0x22>
 8008f9a:	6812      	ldr	r2, [r2, #0]
 8008f9c:	4b07      	ldr	r3, [pc, #28]	@ (8008fbc <HAL_RCC_GetPCLK2Freq+0x80>)
 8008f9e:	4806      	ldr	r0, [pc, #24]	@ (8008fb8 <HAL_RCC_GetPCLK2Freq+0x7c>)
 8008fa0:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008fa4:	bf08      	it	eq
 8008fa6:	4618      	moveq	r0, r3
 8008fa8:	e7d9      	b.n	8008f5e <HAL_RCC_GetPCLK2Freq+0x22>
 8008faa:	bf00      	nop
 8008fac:	08018340 	.word	0x08018340
 8008fb0:	080183a0 	.word	0x080183a0
 8008fb4:	08018380 	.word	0x08018380
 8008fb8:	00f42400 	.word	0x00f42400
 8008fbc:	01e84800 	.word	0x01e84800

08008fc0 <HAL_RCC_GetClockConfig>:
 8008fc0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008fc4:	226f      	movs	r2, #111	@ 0x6f
 8008fc6:	b410      	push	{r4}
 8008fc8:	6002      	str	r2, [r0, #0]
 8008fca:	689a      	ldr	r2, [r3, #8]
 8008fcc:	4c10      	ldr	r4, [pc, #64]	@ (8009010 <HAL_RCC_GetClockConfig+0x50>)
 8008fce:	f002 020c 	and.w	r2, r2, #12
 8008fd2:	6042      	str	r2, [r0, #4]
 8008fd4:	689a      	ldr	r2, [r3, #8]
 8008fd6:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008fda:	6082      	str	r2, [r0, #8]
 8008fdc:	689a      	ldr	r2, [r3, #8]
 8008fde:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8008fe2:	60c2      	str	r2, [r0, #12]
 8008fe4:	689a      	ldr	r2, [r3, #8]
 8008fe6:	f402 5260 	and.w	r2, r2, #14336	@ 0x3800
 8008fea:	6102      	str	r2, [r0, #16]
 8008fec:	f8d3 2108 	ldr.w	r2, [r3, #264]	@ 0x108
 8008ff0:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008ff4:	6142      	str	r2, [r0, #20]
 8008ff6:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 8008ffa:	011b      	lsls	r3, r3, #4
 8008ffc:	b2db      	uxtb	r3, r3
 8008ffe:	6183      	str	r3, [r0, #24]
 8009000:	6823      	ldr	r3, [r4, #0]
 8009002:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009006:	f003 0307 	and.w	r3, r3, #7
 800900a:	600b      	str	r3, [r1, #0]
 800900c:	4770      	bx	lr
 800900e:	bf00      	nop
 8009010:	58004000 	.word	0x58004000

08009014 <HAL_RCCEx_PeriphCLKConfig>:
 8009014:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009016:	6803      	ldr	r3, [r0, #0]
 8009018:	f013 0540 	ands.w	r5, r3, #64	@ 0x40
 800901c:	4604      	mov	r4, r0
 800901e:	d046      	beq.n	80090ae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8009020:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8009022:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
 8009026:	d032      	beq.n	800908e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8009028:	f200 8146 	bhi.w	80092b8 <HAL_RCCEx_PeriphCLKConfig+0x2a4>
 800902c:	2900      	cmp	r1, #0
 800902e:	f040 8149 	bne.w	80092c4 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8009032:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8009036:	682b      	ldr	r3, [r5, #0]
 8009038:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800903c:	602b      	str	r3, [r5, #0]
 800903e:	f7fc fb91 	bl	8005764 <HAL_GetTick>
 8009042:	4606      	mov	r6, r0
 8009044:	682b      	ldr	r3, [r5, #0]
 8009046:	011f      	lsls	r7, r3, #4
 8009048:	f100 81a4 	bmi.w	8009394 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800904c:	692b      	ldr	r3, [r5, #16]
 800904e:	6862      	ldr	r2, [r4, #4]
 8009050:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8009054:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8009058:	612b      	str	r3, [r5, #16]
 800905a:	692b      	ldr	r3, [r5, #16]
 800905c:	68a2      	ldr	r2, [r4, #8]
 800905e:	f423 1378 	bic.w	r3, r3, #4063232	@ 0x3e0000
 8009062:	4313      	orrs	r3, r2
 8009064:	612b      	str	r3, [r5, #16]
 8009066:	682b      	ldr	r3, [r5, #0]
 8009068:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800906c:	602b      	str	r3, [r5, #0]
 800906e:	f7fc fb79 	bl	8005764 <HAL_GetTick>
 8009072:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8009076:	4606      	mov	r6, r0
 8009078:	682b      	ldr	r3, [r5, #0]
 800907a:	0118      	lsls	r0, r3, #4
 800907c:	f140 81a3 	bpl.w	80093c6 <HAL_RCCEx_PeriphCLKConfig+0x3b2>
 8009080:	6961      	ldr	r1, [r4, #20]
 8009082:	692a      	ldr	r2, [r5, #16]
 8009084:	6823      	ldr	r3, [r4, #0]
 8009086:	430a      	orrs	r2, r1
 8009088:	612a      	str	r2, [r5, #16]
 800908a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800908c:	e005      	b.n	800909a <HAL_RCCEx_PeriphCLKConfig+0x86>
 800908e:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 8009092:	68c2      	ldr	r2, [r0, #12]
 8009094:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8009098:	60c2      	str	r2, [r0, #12]
 800909a:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 800909e:	2500      	movs	r5, #0
 80090a0:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 80090a4:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 80090a8:	430a      	orrs	r2, r1
 80090aa:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 80090ae:	0519      	lsls	r1, r3, #20
 80090b0:	d509      	bpl.n	80090c6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 80090b2:	f04f 47b0 	mov.w	r7, #1476395008	@ 0x58000000
 80090b6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80090b8:	f8d7 6090 	ldr.w	r6, [r7, #144]	@ 0x90
 80090bc:	f406 7640 	and.w	r6, r6, #768	@ 0x300
 80090c0:	42b2      	cmp	r2, r6
 80090c2:	f040 80c0 	bne.w	8009246 <HAL_RCCEx_PeriphCLKConfig+0x232>
 80090c6:	07d8      	lsls	r0, r3, #31
 80090c8:	d509      	bpl.n	80090de <HAL_RCCEx_PeriphCLKConfig+0xca>
 80090ca:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80090ce:	69a0      	ldr	r0, [r4, #24]
 80090d0:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80090d4:	f022 0203 	bic.w	r2, r2, #3
 80090d8:	4302      	orrs	r2, r0
 80090da:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 80090de:	0799      	lsls	r1, r3, #30
 80090e0:	d509      	bpl.n	80090f6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 80090e2:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80090e6:	69e0      	ldr	r0, [r4, #28]
 80090e8:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80090ec:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80090f0:	4302      	orrs	r2, r0
 80090f2:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 80090f6:	06da      	lsls	r2, r3, #27
 80090f8:	d50c      	bpl.n	8009114 <HAL_RCCEx_PeriphCLKConfig+0x100>
 80090fa:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80090fc:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8009100:	0c06      	lsrs	r6, r0, #16
 8009102:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8009106:	0436      	lsls	r6, r6, #16
 8009108:	ea22 0206 	bic.w	r2, r2, r6
 800910c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009110:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8009114:	069f      	lsls	r7, r3, #26
 8009116:	d50c      	bpl.n	8009132 <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8009118:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800911a:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 800911e:	0c06      	lsrs	r6, r0, #16
 8009120:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8009124:	0436      	lsls	r6, r6, #16
 8009126:	ea22 0206 	bic.w	r2, r2, r6
 800912a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800912e:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8009132:	075e      	lsls	r6, r3, #29
 8009134:	d50f      	bpl.n	8009156 <HAL_RCCEx_PeriphCLKConfig+0x142>
 8009136:	6a22      	ldr	r2, [r4, #32]
 8009138:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800913c:	0910      	lsrs	r0, r2, #4
 800913e:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
 8009142:	f400 207f 	and.w	r0, r0, #1044480	@ 0xff000
 8009146:	0112      	lsls	r2, r2, #4
 8009148:	f402 227f 	and.w	r2, r2, #1044480	@ 0xff000
 800914c:	ea21 0100 	bic.w	r1, r1, r0
 8009150:	430a      	orrs	r2, r1
 8009152:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8009156:	0718      	lsls	r0, r3, #28
 8009158:	d50f      	bpl.n	800917a <HAL_RCCEx_PeriphCLKConfig+0x166>
 800915a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800915c:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8009160:	0910      	lsrs	r0, r2, #4
 8009162:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
 8009166:	f400 207f 	and.w	r0, r0, #1044480	@ 0xff000
 800916a:	0112      	lsls	r2, r2, #4
 800916c:	f402 227f 	and.w	r2, r2, #1044480	@ 0xff000
 8009170:	ea21 0100 	bic.w	r1, r1, r0
 8009174:	430a      	orrs	r2, r1
 8009176:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 800917a:	05d9      	lsls	r1, r3, #23
 800917c:	d511      	bpl.n	80091a2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800917e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8009182:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009184:	f8d6 2088 	ldr.w	r2, [r6, #136]	@ 0x88
 8009188:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 800918c:	430a      	orrs	r2, r1
 800918e:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
 8009192:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8009196:	f000 8097 	beq.w	80092c8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 800919a:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
 800919e:	f000 809d 	beq.w	80092dc <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 80091a2:	059f      	lsls	r7, r3, #22
 80091a4:	d51e      	bpl.n	80091e4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 80091a6:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80091a8:	f031 4280 	bics.w	r2, r1, #1073741824	@ 0x40000000
 80091ac:	d07a      	beq.n	80092a4 <HAL_RCCEx_PeriphCLKConfig+0x290>
 80091ae:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 80091b2:	d077      	beq.n	80092a4 <HAL_RCCEx_PeriphCLKConfig+0x290>
 80091b4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80091b8:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
 80091bc:	f8d2 6088 	ldr.w	r6, [r2, #136]	@ 0x88
 80091c0:	f026 4640 	bic.w	r6, r6, #3221225472	@ 0xc0000000
 80091c4:	f8c2 6088 	str.w	r6, [r2, #136]	@ 0x88
 80091c8:	f8d2 6088 	ldr.w	r6, [r2, #136]	@ 0x88
 80091cc:	f026 6640 	bic.w	r6, r6, #201326592	@ 0xc000000
 80091d0:	4330      	orrs	r0, r6
 80091d2:	f1b1 5fc0 	cmp.w	r1, #402653184	@ 0x18000000
 80091d6:	f8c2 0088 	str.w	r0, [r2, #136]	@ 0x88
 80091da:	d103      	bne.n	80091e4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 80091dc:	68d1      	ldr	r1, [r2, #12]
 80091de:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 80091e2:	60d1      	str	r1, [r2, #12]
 80091e4:	055e      	lsls	r6, r3, #21
 80091e6:	d510      	bpl.n	800920a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80091e8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80091ec:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 80091ee:	f8d6 2088 	ldr.w	r2, [r6, #136]	@ 0x88
 80091f2:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80091f6:	430a      	orrs	r2, r1
 80091f8:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
 80091fc:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8009200:	d067      	beq.n	80092d2 <HAL_RCCEx_PeriphCLKConfig+0x2be>
 8009202:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
 8009206:	f000 8092 	beq.w	800932e <HAL_RCCEx_PeriphCLKConfig+0x31a>
 800920a:	04da      	lsls	r2, r3, #19
 800920c:	d509      	bpl.n	8009222 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 800920e:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8009212:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8009214:	f8d1 2094 	ldr.w	r2, [r1, #148]	@ 0x94
 8009218:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 800921c:	4302      	orrs	r2, r0
 800921e:	f8c1 2094 	str.w	r2, [r1, #148]	@ 0x94
 8009222:	049b      	lsls	r3, r3, #18
 8009224:	d50d      	bpl.n	8009242 <HAL_RCCEx_PeriphCLKConfig+0x22e>
 8009226:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800922a:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 800922c:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800922e:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8009232:	430b      	orrs	r3, r1
 8009234:	6253      	str	r3, [r2, #36]	@ 0x24
 8009236:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8009238:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800923a:	f023 0303 	bic.w	r3, r3, #3
 800923e:	430b      	orrs	r3, r1
 8009240:	6253      	str	r3, [r2, #36]	@ 0x24
 8009242:	4628      	mov	r0, r5
 8009244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009246:	f7ff f8a5 	bl	8008394 <HAL_PWR_EnableBkUpAccess>
 800924a:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800924e:	2e00      	cmp	r6, #0
 8009250:	f000 8096 	beq.w	8009380 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8009254:	f8d7 2090 	ldr.w	r2, [r7, #144]	@ 0x90
 8009258:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800925c:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8009260:	f8d7 2090 	ldr.w	r2, [r7, #144]	@ 0x90
 8009264:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8009268:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 800926c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800926e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009272:	4313      	orrs	r3, r2
 8009274:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8009278:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800927c:	07da      	lsls	r2, r3, #31
 800927e:	f140 8087 	bpl.w	8009390 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009282:	f7fc fa6f 	bl	8005764 <HAL_GetTick>
 8009286:	4606      	mov	r6, r0
 8009288:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800928c:	079b      	lsls	r3, r3, #30
 800928e:	d47f      	bmi.n	8009390 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009290:	f7fc fa68 	bl	8005764 <HAL_GetTick>
 8009294:	f241 3388 	movw	r3, #5000	@ 0x1388
 8009298:	1b80      	subs	r0, r0, r6
 800929a:	4298      	cmp	r0, r3
 800929c:	d9f4      	bls.n	8009288 <HAL_RCCEx_PeriphCLKConfig+0x274>
 800929e:	6823      	ldr	r3, [r4, #0]
 80092a0:	2503      	movs	r5, #3
 80092a2:	e710      	b.n	80090c6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 80092a4:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 80092a8:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 80092ac:	f022 4240 	bic.w	r2, r2, #3221225472	@ 0xc0000000
 80092b0:	430a      	orrs	r2, r1
 80092b2:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 80092b6:	e795      	b.n	80091e4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 80092b8:	f421 0280 	bic.w	r2, r1, #4194304	@ 0x400000
 80092bc:	f5b2 0f00 	cmp.w	r2, #8388608	@ 0x800000
 80092c0:	f43f aeeb 	beq.w	800909a <HAL_RCCEx_PeriphCLKConfig+0x86>
 80092c4:	2501      	movs	r5, #1
 80092c6:	e6f2      	b.n	80090ae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80092c8:	68f2      	ldr	r2, [r6, #12]
 80092ca:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 80092ce:	60f2      	str	r2, [r6, #12]
 80092d0:	e767      	b.n	80091a2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 80092d2:	68f2      	ldr	r2, [r6, #12]
 80092d4:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80092d8:	60f2      	str	r2, [r6, #12]
 80092da:	e796      	b.n	800920a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80092dc:	6833      	ldr	r3, [r6, #0]
 80092de:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80092e2:	6033      	str	r3, [r6, #0]
 80092e4:	f7fc fa3e 	bl	8005764 <HAL_GetTick>
 80092e8:	4607      	mov	r7, r0
 80092ea:	6833      	ldr	r3, [r6, #0]
 80092ec:	011a      	lsls	r2, r3, #4
 80092ee:	d462      	bmi.n	80093b6 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 80092f0:	6933      	ldr	r3, [r6, #16]
 80092f2:	6862      	ldr	r2, [r4, #4]
 80092f4:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80092f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80092fc:	6133      	str	r3, [r6, #16]
 80092fe:	6933      	ldr	r3, [r6, #16]
 8009300:	68e2      	ldr	r2, [r4, #12]
 8009302:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 8009306:	4313      	orrs	r3, r2
 8009308:	6133      	str	r3, [r6, #16]
 800930a:	6833      	ldr	r3, [r6, #0]
 800930c:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8009310:	6033      	str	r3, [r6, #0]
 8009312:	f7fc fa27 	bl	8005764 <HAL_GetTick>
 8009316:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800931a:	4607      	mov	r7, r0
 800931c:	6833      	ldr	r3, [r6, #0]
 800931e:	011b      	lsls	r3, r3, #4
 8009320:	d55e      	bpl.n	80093e0 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 8009322:	6932      	ldr	r2, [r6, #16]
 8009324:	6961      	ldr	r1, [r4, #20]
 8009326:	6823      	ldr	r3, [r4, #0]
 8009328:	430a      	orrs	r2, r1
 800932a:	6132      	str	r2, [r6, #16]
 800932c:	e739      	b.n	80091a2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800932e:	6833      	ldr	r3, [r6, #0]
 8009330:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8009334:	6033      	str	r3, [r6, #0]
 8009336:	f7fc fa15 	bl	8005764 <HAL_GetTick>
 800933a:	4607      	mov	r7, r0
 800933c:	6833      	ldr	r3, [r6, #0]
 800933e:	0118      	lsls	r0, r3, #4
 8009340:	d431      	bmi.n	80093a6 <HAL_RCCEx_PeriphCLKConfig+0x392>
 8009342:	6933      	ldr	r3, [r6, #16]
 8009344:	6862      	ldr	r2, [r4, #4]
 8009346:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 800934a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800934e:	6133      	str	r3, [r6, #16]
 8009350:	6933      	ldr	r3, [r6, #16]
 8009352:	6922      	ldr	r2, [r4, #16]
 8009354:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
 8009358:	4313      	orrs	r3, r2
 800935a:	6133      	str	r3, [r6, #16]
 800935c:	6833      	ldr	r3, [r6, #0]
 800935e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8009362:	6033      	str	r3, [r6, #0]
 8009364:	f7fc f9fe 	bl	8005764 <HAL_GetTick>
 8009368:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 800936c:	4607      	mov	r7, r0
 800936e:	6833      	ldr	r3, [r6, #0]
 8009370:	0119      	lsls	r1, r3, #4
 8009372:	d52f      	bpl.n	80093d4 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8009374:	6932      	ldr	r2, [r6, #16]
 8009376:	6961      	ldr	r1, [r4, #20]
 8009378:	6823      	ldr	r3, [r4, #0]
 800937a:	430a      	orrs	r2, r1
 800937c:	6132      	str	r2, [r6, #16]
 800937e:	e744      	b.n	800920a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8009380:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009382:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009386:	4313      	orrs	r3, r2
 8009388:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800938c:	6823      	ldr	r3, [r4, #0]
 800938e:	e69a      	b.n	80090c6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009390:	6823      	ldr	r3, [r4, #0]
 8009392:	e698      	b.n	80090c6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009394:	f7fc f9e6 	bl	8005764 <HAL_GetTick>
 8009398:	1b80      	subs	r0, r0, r6
 800939a:	2802      	cmp	r0, #2
 800939c:	f67f ae52 	bls.w	8009044 <HAL_RCCEx_PeriphCLKConfig+0x30>
 80093a0:	6823      	ldr	r3, [r4, #0]
 80093a2:	2503      	movs	r5, #3
 80093a4:	e683      	b.n	80090ae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80093a6:	f7fc f9dd 	bl	8005764 <HAL_GetTick>
 80093aa:	1bc0      	subs	r0, r0, r7
 80093ac:	2802      	cmp	r0, #2
 80093ae:	d9c5      	bls.n	800933c <HAL_RCCEx_PeriphCLKConfig+0x328>
 80093b0:	6823      	ldr	r3, [r4, #0]
 80093b2:	2503      	movs	r5, #3
 80093b4:	e729      	b.n	800920a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80093b6:	f7fc f9d5 	bl	8005764 <HAL_GetTick>
 80093ba:	1bc0      	subs	r0, r0, r7
 80093bc:	2802      	cmp	r0, #2
 80093be:	d994      	bls.n	80092ea <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 80093c0:	6823      	ldr	r3, [r4, #0]
 80093c2:	2503      	movs	r5, #3
 80093c4:	e6ed      	b.n	80091a2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 80093c6:	f7fc f9cd 	bl	8005764 <HAL_GetTick>
 80093ca:	1b80      	subs	r0, r0, r6
 80093cc:	2802      	cmp	r0, #2
 80093ce:	f67f ae53 	bls.w	8009078 <HAL_RCCEx_PeriphCLKConfig+0x64>
 80093d2:	e7e5      	b.n	80093a0 <HAL_RCCEx_PeriphCLKConfig+0x38c>
 80093d4:	f7fc f9c6 	bl	8005764 <HAL_GetTick>
 80093d8:	1bc0      	subs	r0, r0, r7
 80093da:	2802      	cmp	r0, #2
 80093dc:	d9c7      	bls.n	800936e <HAL_RCCEx_PeriphCLKConfig+0x35a>
 80093de:	e7e7      	b.n	80093b0 <HAL_RCCEx_PeriphCLKConfig+0x39c>
 80093e0:	f7fc f9c0 	bl	8005764 <HAL_GetTick>
 80093e4:	1bc0      	subs	r0, r0, r7
 80093e6:	2802      	cmp	r0, #2
 80093e8:	d998      	bls.n	800931c <HAL_RCCEx_PeriphCLKConfig+0x308>
 80093ea:	e7e9      	b.n	80093c0 <HAL_RCCEx_PeriphCLKConfig+0x3ac>

080093ec <HAL_RTC_Init>:
 80093ec:	2800      	cmp	r0, #0
 80093ee:	d063      	beq.n	80094b8 <HAL_RTC_Init+0xcc>
 80093f0:	b538      	push	{r3, r4, r5, lr}
 80093f2:	f890 3021 	ldrb.w	r3, [r0, #33]	@ 0x21
 80093f6:	4604      	mov	r4, r0
 80093f8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80093fc:	b15b      	cbz	r3, 8009416 <HAL_RTC_Init+0x2a>
 80093fe:	2202      	movs	r2, #2
 8009400:	6823      	ldr	r3, [r4, #0]
 8009402:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8009406:	68da      	ldr	r2, [r3, #12]
 8009408:	06d2      	lsls	r2, r2, #27
 800940a:	d509      	bpl.n	8009420 <HAL_RTC_Init+0x34>
 800940c:	2301      	movs	r3, #1
 800940e:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8009412:	2000      	movs	r0, #0
 8009414:	bd38      	pop	{r3, r4, r5, pc}
 8009416:	f880 2020 	strb.w	r2, [r0, #32]
 800941a:	f7f8 ff85 	bl	8002328 <HAL_RTC_MspInit>
 800941e:	e7ee      	b.n	80093fe <HAL_RTC_Init+0x12>
 8009420:	2253      	movs	r2, #83	@ 0x53
 8009422:	21ca      	movs	r1, #202	@ 0xca
 8009424:	6259      	str	r1, [r3, #36]	@ 0x24
 8009426:	625a      	str	r2, [r3, #36]	@ 0x24
 8009428:	68da      	ldr	r2, [r3, #12]
 800942a:	0655      	lsls	r5, r2, #25
 800942c:	d528      	bpl.n	8009480 <HAL_RTC_Init+0x94>
 800942e:	6899      	ldr	r1, [r3, #8]
 8009430:	6862      	ldr	r2, [r4, #4]
 8009432:	6925      	ldr	r5, [r4, #16]
 8009434:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 8009438:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 800943c:	6099      	str	r1, [r3, #8]
 800943e:	69a1      	ldr	r1, [r4, #24]
 8009440:	6898      	ldr	r0, [r3, #8]
 8009442:	432a      	orrs	r2, r5
 8009444:	430a      	orrs	r2, r1
 8009446:	4302      	orrs	r2, r0
 8009448:	68e1      	ldr	r1, [r4, #12]
 800944a:	609a      	str	r2, [r3, #8]
 800944c:	6119      	str	r1, [r3, #16]
 800944e:	691a      	ldr	r2, [r3, #16]
 8009450:	68a1      	ldr	r1, [r4, #8]
 8009452:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009456:	611a      	str	r2, [r3, #16]
 8009458:	68da      	ldr	r2, [r3, #12]
 800945a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800945e:	60da      	str	r2, [r3, #12]
 8009460:	689a      	ldr	r2, [r3, #8]
 8009462:	0691      	lsls	r1, r2, #26
 8009464:	d52a      	bpl.n	80094bc <HAL_RTC_Init+0xd0>
 8009466:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8009468:	69e2      	ldr	r2, [r4, #28]
 800946a:	6960      	ldr	r0, [r4, #20]
 800946c:	f021 0103 	bic.w	r1, r1, #3
 8009470:	64d9      	str	r1, [r3, #76]	@ 0x4c
 8009472:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8009474:	4302      	orrs	r2, r0
 8009476:	430a      	orrs	r2, r1
 8009478:	21ff      	movs	r1, #255	@ 0xff
 800947a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800947c:	6259      	str	r1, [r3, #36]	@ 0x24
 800947e:	e7c5      	b.n	800940c <HAL_RTC_Init+0x20>
 8009480:	68da      	ldr	r2, [r3, #12]
 8009482:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8009486:	60da      	str	r2, [r3, #12]
 8009488:	f7fc f96c 	bl	8005764 <HAL_GetTick>
 800948c:	4605      	mov	r5, r0
 800948e:	e005      	b.n	800949c <HAL_RTC_Init+0xb0>
 8009490:	f7fc f968 	bl	8005764 <HAL_GetTick>
 8009494:	1b40      	subs	r0, r0, r5
 8009496:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800949a:	d804      	bhi.n	80094a6 <HAL_RTC_Init+0xba>
 800949c:	6823      	ldr	r3, [r4, #0]
 800949e:	68da      	ldr	r2, [r3, #12]
 80094a0:	0650      	lsls	r0, r2, #25
 80094a2:	d4c4      	bmi.n	800942e <HAL_RTC_Init+0x42>
 80094a4:	e7f4      	b.n	8009490 <HAL_RTC_Init+0xa4>
 80094a6:	6823      	ldr	r3, [r4, #0]
 80094a8:	2204      	movs	r2, #4
 80094aa:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 80094ae:	22ff      	movs	r2, #255	@ 0xff
 80094b0:	68d9      	ldr	r1, [r3, #12]
 80094b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80094b4:	2001      	movs	r0, #1
 80094b6:	bd38      	pop	{r3, r4, r5, pc}
 80094b8:	2001      	movs	r0, #1
 80094ba:	4770      	bx	lr
 80094bc:	4a0a      	ldr	r2, [pc, #40]	@ (80094e8 <HAL_RTC_Init+0xfc>)
 80094be:	60da      	str	r2, [r3, #12]
 80094c0:	f7fc f950 	bl	8005764 <HAL_GetTick>
 80094c4:	4605      	mov	r5, r0
 80094c6:	6823      	ldr	r3, [r4, #0]
 80094c8:	68da      	ldr	r2, [r3, #12]
 80094ca:	0692      	lsls	r2, r2, #26
 80094cc:	d4cb      	bmi.n	8009466 <HAL_RTC_Init+0x7a>
 80094ce:	f7fc f949 	bl	8005764 <HAL_GetTick>
 80094d2:	1b40      	subs	r0, r0, r5
 80094d4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80094d8:	d9f5      	bls.n	80094c6 <HAL_RTC_Init+0xda>
 80094da:	6823      	ldr	r3, [r4, #0]
 80094dc:	2104      	movs	r1, #4
 80094de:	22ff      	movs	r2, #255	@ 0xff
 80094e0:	f884 1021 	strb.w	r1, [r4, #33]	@ 0x21
 80094e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80094e6:	e7e5      	b.n	80094b4 <HAL_RTC_Init+0xc8>
 80094e8:	0001ff5f 	.word	0x0001ff5f

080094ec <HAL_RTC_SetTime>:
 80094ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094ee:	f890 3020 	ldrb.w	r3, [r0, #32]
 80094f2:	2b01      	cmp	r3, #1
 80094f4:	f000 80a4 	beq.w	8009640 <HAL_RTC_SetTime+0x154>
 80094f8:	460d      	mov	r5, r1
 80094fa:	2101      	movs	r1, #1
 80094fc:	2302      	movs	r3, #2
 80094fe:	f880 1020 	strb.w	r1, [r0, #32]
 8009502:	6801      	ldr	r1, [r0, #0]
 8009504:	f880 3021 	strb.w	r3, [r0, #33]	@ 0x21
 8009508:	688b      	ldr	r3, [r1, #8]
 800950a:	4606      	mov	r6, r0
 800950c:	2a00      	cmp	r2, #0
 800950e:	d137      	bne.n	8009580 <HAL_RTC_SetTime+0x94>
 8009510:	f013 0c40 	ands.w	ip, r3, #64	@ 0x40
 8009514:	bf18      	it	ne
 8009516:	f895 c003 	ldrbne.w	ip, [r5, #3]
 800951a:	782b      	ldrb	r3, [r5, #0]
 800951c:	bf0c      	ite	eq
 800951e:	f885 c003 	strbeq.w	ip, [r5, #3]
 8009522:	ea4f 5c8c 	movne.w	ip, ip, lsl #22
 8009526:	2b09      	cmp	r3, #9
 8009528:	d909      	bls.n	800953e <HAL_RTC_SetTime+0x52>
 800952a:	2000      	movs	r0, #0
 800952c:	3b0a      	subs	r3, #10
 800952e:	b2db      	uxtb	r3, r3
 8009530:	2b09      	cmp	r3, #9
 8009532:	f100 0001 	add.w	r0, r0, #1
 8009536:	d8f9      	bhi.n	800952c <HAL_RTC_SetTime+0x40>
 8009538:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 800953c:	b2db      	uxtb	r3, r3
 800953e:	041c      	lsls	r4, r3, #16
 8009540:	786b      	ldrb	r3, [r5, #1]
 8009542:	2b09      	cmp	r3, #9
 8009544:	d909      	bls.n	800955a <HAL_RTC_SetTime+0x6e>
 8009546:	2000      	movs	r0, #0
 8009548:	3b0a      	subs	r3, #10
 800954a:	b2db      	uxtb	r3, r3
 800954c:	2b09      	cmp	r3, #9
 800954e:	f100 0001 	add.w	r0, r0, #1
 8009552:	d8f9      	bhi.n	8009548 <HAL_RTC_SetTime+0x5c>
 8009554:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 8009558:	b2db      	uxtb	r3, r3
 800955a:	78a8      	ldrb	r0, [r5, #2]
 800955c:	2809      	cmp	r0, #9
 800955e:	ea4f 2303 	mov.w	r3, r3, lsl #8
 8009562:	d908      	bls.n	8009576 <HAL_RTC_SetTime+0x8a>
 8009564:	380a      	subs	r0, #10
 8009566:	b2c0      	uxtb	r0, r0
 8009568:	2809      	cmp	r0, #9
 800956a:	f102 0201 	add.w	r2, r2, #1
 800956e:	d8f9      	bhi.n	8009564 <HAL_RTC_SetTime+0x78>
 8009570:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8009574:	b2c0      	uxtb	r0, r0
 8009576:	ea44 040c 	orr.w	r4, r4, ip
 800957a:	431c      	orrs	r4, r3
 800957c:	4304      	orrs	r4, r0
 800957e:	e00f      	b.n	80095a0 <HAL_RTC_SetTime+0xb4>
 8009580:	786c      	ldrb	r4, [r5, #1]
 8009582:	782a      	ldrb	r2, [r5, #0]
 8009584:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8009588:	ea4f 2404 	mov.w	r4, r4, lsl #8
 800958c:	bf14      	ite	ne
 800958e:	78eb      	ldrbne	r3, [r5, #3]
 8009590:	70eb      	strbeq	r3, [r5, #3]
 8009592:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009596:	78aa      	ldrb	r2, [r5, #2]
 8009598:	bf18      	it	ne
 800959a:	059b      	lslne	r3, r3, #22
 800959c:	4314      	orrs	r4, r2
 800959e:	431c      	orrs	r4, r3
 80095a0:	23ca      	movs	r3, #202	@ 0xca
 80095a2:	624b      	str	r3, [r1, #36]	@ 0x24
 80095a4:	2353      	movs	r3, #83	@ 0x53
 80095a6:	624b      	str	r3, [r1, #36]	@ 0x24
 80095a8:	68cb      	ldr	r3, [r1, #12]
 80095aa:	065f      	lsls	r7, r3, #25
 80095ac:	d51f      	bpl.n	80095ee <HAL_RTC_SetTime+0x102>
 80095ae:	f004 347f 	and.w	r4, r4, #2139062143	@ 0x7f7f7f7f
 80095b2:	f024 44fe 	bic.w	r4, r4, #2130706432	@ 0x7f000000
 80095b6:	600c      	str	r4, [r1, #0]
 80095b8:	688a      	ldr	r2, [r1, #8]
 80095ba:	68eb      	ldr	r3, [r5, #12]
 80095bc:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80095c0:	608a      	str	r2, [r1, #8]
 80095c2:	692a      	ldr	r2, [r5, #16]
 80095c4:	4313      	orrs	r3, r2
 80095c6:	688a      	ldr	r2, [r1, #8]
 80095c8:	4313      	orrs	r3, r2
 80095ca:	608b      	str	r3, [r1, #8]
 80095cc:	68cb      	ldr	r3, [r1, #12]
 80095ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80095d2:	60cb      	str	r3, [r1, #12]
 80095d4:	688b      	ldr	r3, [r1, #8]
 80095d6:	069a      	lsls	r2, r3, #26
 80095d8:	d521      	bpl.n	800961e <HAL_RTC_SetTime+0x132>
 80095da:	2301      	movs	r3, #1
 80095dc:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 80095e0:	2000      	movs	r0, #0
 80095e2:	22ff      	movs	r2, #255	@ 0xff
 80095e4:	2300      	movs	r3, #0
 80095e6:	624a      	str	r2, [r1, #36]	@ 0x24
 80095e8:	f886 3020 	strb.w	r3, [r6, #32]
 80095ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80095ee:	68cb      	ldr	r3, [r1, #12]
 80095f0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80095f4:	60cb      	str	r3, [r1, #12]
 80095f6:	f7fc f8b5 	bl	8005764 <HAL_GetTick>
 80095fa:	4607      	mov	r7, r0
 80095fc:	6831      	ldr	r1, [r6, #0]
 80095fe:	68cb      	ldr	r3, [r1, #12]
 8009600:	0658      	lsls	r0, r3, #25
 8009602:	d4d4      	bmi.n	80095ae <HAL_RTC_SetTime+0xc2>
 8009604:	f7fc f8ae 	bl	8005764 <HAL_GetTick>
 8009608:	1bc0      	subs	r0, r0, r7
 800960a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800960e:	d9f5      	bls.n	80095fc <HAL_RTC_SetTime+0x110>
 8009610:	2304      	movs	r3, #4
 8009612:	6831      	ldr	r1, [r6, #0]
 8009614:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 8009618:	68cb      	ldr	r3, [r1, #12]
 800961a:	2001      	movs	r0, #1
 800961c:	e7e1      	b.n	80095e2 <HAL_RTC_SetTime+0xf6>
 800961e:	4b0c      	ldr	r3, [pc, #48]	@ (8009650 <HAL_RTC_SetTime+0x164>)
 8009620:	60cb      	str	r3, [r1, #12]
 8009622:	f7fc f89f 	bl	8005764 <HAL_GetTick>
 8009626:	4604      	mov	r4, r0
 8009628:	e005      	b.n	8009636 <HAL_RTC_SetTime+0x14a>
 800962a:	f7fc f89b 	bl	8005764 <HAL_GetTick>
 800962e:	1b00      	subs	r0, r0, r4
 8009630:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8009634:	d806      	bhi.n	8009644 <HAL_RTC_SetTime+0x158>
 8009636:	6831      	ldr	r1, [r6, #0]
 8009638:	68cb      	ldr	r3, [r1, #12]
 800963a:	069b      	lsls	r3, r3, #26
 800963c:	d5f5      	bpl.n	800962a <HAL_RTC_SetTime+0x13e>
 800963e:	e7cc      	b.n	80095da <HAL_RTC_SetTime+0xee>
 8009640:	2002      	movs	r0, #2
 8009642:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009644:	2304      	movs	r3, #4
 8009646:	6831      	ldr	r1, [r6, #0]
 8009648:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 800964c:	2001      	movs	r0, #1
 800964e:	e7c8      	b.n	80095e2 <HAL_RTC_SetTime+0xf6>
 8009650:	0001ff5f 	.word	0x0001ff5f

08009654 <HAL_RTC_GetTime>:
 8009654:	6803      	ldr	r3, [r0, #0]
 8009656:	b530      	push	{r4, r5, lr}
 8009658:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
 800965a:	6918      	ldr	r0, [r3, #16]
 800965c:	681b      	ldr	r3, [r3, #0]
 800965e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8009662:	e9c1 4001 	strd	r4, r0, [r1, #4]
 8009666:	f3c3 4405 	ubfx	r4, r3, #16, #6
 800966a:	2000      	movs	r0, #0
 800966c:	f3c3 2e06 	ubfx	lr, r3, #8, #7
 8009670:	f364 0007 	bfi	r0, r4, #0, #8
 8009674:	f003 0c7f 	and.w	ip, r3, #127	@ 0x7f
 8009678:	f36e 200f 	bfi	r0, lr, #8, #8
 800967c:	f3c3 4506 	ubfx	r5, r3, #16, #7
 8009680:	f36c 4017 	bfi	r0, ip, #16, #8
 8009684:	f3c3 5380 	ubfx	r3, r3, #22, #1
 8009688:	f363 601f 	bfi	r0, r3, #24, #8
 800968c:	6008      	str	r0, [r1, #0]
 800968e:	b9da      	cbnz	r2, 80096c8 <HAL_RTC_GetTime+0x74>
 8009690:	ea4f 131e 	mov.w	r3, lr, lsr #4
 8009694:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009698:	f00e 0e0f 	and.w	lr, lr, #15
 800969c:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 80096a0:	0924      	lsrs	r4, r4, #4
 80096a2:	ea4f 131c 	mov.w	r3, ip, lsr #4
 80096a6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80096aa:	f005 050f 	and.w	r5, r5, #15
 80096ae:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80096b2:	f00c 0c0f 	and.w	ip, ip, #15
 80096b6:	eb05 0544 	add.w	r5, r5, r4, lsl #1
 80096ba:	eb0c 0c43 	add.w	ip, ip, r3, lsl #1
 80096be:	700d      	strb	r5, [r1, #0]
 80096c0:	f881 e001 	strb.w	lr, [r1, #1]
 80096c4:	f881 c002 	strb.w	ip, [r1, #2]
 80096c8:	2000      	movs	r0, #0
 80096ca:	bd30      	pop	{r4, r5, pc}

080096cc <HAL_RTC_SetDate>:
 80096cc:	f890 3020 	ldrb.w	r3, [r0, #32]
 80096d0:	2b01      	cmp	r3, #1
 80096d2:	f000 809c 	beq.w	800980e <HAL_RTC_SetDate+0x142>
 80096d6:	b570      	push	{r4, r5, r6, lr}
 80096d8:	4605      	mov	r5, r0
 80096da:	2302      	movs	r3, #2
 80096dc:	2001      	movs	r0, #1
 80096de:	f885 0020 	strb.w	r0, [r5, #32]
 80096e2:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80096e6:	f891 e000 	ldrb.w	lr, [r1]
 80096ea:	78cb      	ldrb	r3, [r1, #3]
 80096ec:	7848      	ldrb	r0, [r1, #1]
 80096ee:	f891 c002 	ldrb.w	ip, [r1, #2]
 80096f2:	ea4f 3e4e 	mov.w	lr, lr, lsl #13
 80096f6:	b31a      	cbz	r2, 8009740 <HAL_RTC_SetDate+0x74>
 80096f8:	ea4e 4403 	orr.w	r4, lr, r3, lsl #16
 80096fc:	ea44 040c 	orr.w	r4, r4, ip
 8009700:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
 8009704:	682a      	ldr	r2, [r5, #0]
 8009706:	2353      	movs	r3, #83	@ 0x53
 8009708:	21ca      	movs	r1, #202	@ 0xca
 800970a:	6251      	str	r1, [r2, #36]	@ 0x24
 800970c:	6253      	str	r3, [r2, #36]	@ 0x24
 800970e:	68d3      	ldr	r3, [r2, #12]
 8009710:	065e      	lsls	r6, r3, #25
 8009712:	d550      	bpl.n	80097b6 <HAL_RTC_SetDate+0xea>
 8009714:	f024 447f 	bic.w	r4, r4, #4278190080	@ 0xff000000
 8009718:	f024 04c0 	bic.w	r4, r4, #192	@ 0xc0
 800971c:	6054      	str	r4, [r2, #4]
 800971e:	68d3      	ldr	r3, [r2, #12]
 8009720:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009724:	60d3      	str	r3, [r2, #12]
 8009726:	6893      	ldr	r3, [r2, #8]
 8009728:	0699      	lsls	r1, r3, #26
 800972a:	d55f      	bpl.n	80097ec <HAL_RTC_SetDate+0x120>
 800972c:	2301      	movs	r3, #1
 800972e:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 8009732:	2000      	movs	r0, #0
 8009734:	21ff      	movs	r1, #255	@ 0xff
 8009736:	2300      	movs	r3, #0
 8009738:	6251      	str	r1, [r2, #36]	@ 0x24
 800973a:	f885 3020 	strb.w	r3, [r5, #32]
 800973e:	bd70      	pop	{r4, r5, r6, pc}
 8009740:	06c4      	lsls	r4, r0, #27
 8009742:	d550      	bpl.n	80097e6 <HAL_RTC_SetDate+0x11a>
 8009744:	f020 0010 	bic.w	r0, r0, #16
 8009748:	300a      	adds	r0, #10
 800974a:	b2c0      	uxtb	r0, r0
 800974c:	2b09      	cmp	r3, #9
 800974e:	7048      	strb	r0, [r1, #1]
 8009750:	bf98      	it	ls
 8009752:	041c      	lslls	r4, r3, #16
 8009754:	d90d      	bls.n	8009772 <HAL_RTC_SetDate+0xa6>
 8009756:	2100      	movs	r1, #0
 8009758:	3b0a      	subs	r3, #10
 800975a:	b2db      	uxtb	r3, r3
 800975c:	2b09      	cmp	r3, #9
 800975e:	f101 0101 	add.w	r1, r1, #1
 8009762:	d8f9      	bhi.n	8009758 <HAL_RTC_SetDate+0x8c>
 8009764:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8009768:	b2db      	uxtb	r3, r3
 800976a:	2809      	cmp	r0, #9
 800976c:	ea4f 4403 	mov.w	r4, r3, lsl #16
 8009770:	d909      	bls.n	8009786 <HAL_RTC_SetDate+0xba>
 8009772:	2300      	movs	r3, #0
 8009774:	380a      	subs	r0, #10
 8009776:	b2c0      	uxtb	r0, r0
 8009778:	2809      	cmp	r0, #9
 800977a:	f103 0301 	add.w	r3, r3, #1
 800977e:	d8f9      	bhi.n	8009774 <HAL_RTC_SetDate+0xa8>
 8009780:	ea40 1303 	orr.w	r3, r0, r3, lsl #4
 8009784:	b2d8      	uxtb	r0, r3
 8009786:	f1bc 0f09 	cmp.w	ip, #9
 800978a:	ea4f 2000 	mov.w	r0, r0, lsl #8
 800978e:	d90c      	bls.n	80097aa <HAL_RTC_SetDate+0xde>
 8009790:	f1ac 0c0a 	sub.w	ip, ip, #10
 8009794:	fa5f fc8c 	uxtb.w	ip, ip
 8009798:	f1bc 0f09 	cmp.w	ip, #9
 800979c:	f102 0201 	add.w	r2, r2, #1
 80097a0:	d8f6      	bhi.n	8009790 <HAL_RTC_SetDate+0xc4>
 80097a2:	ea4c 1202 	orr.w	r2, ip, r2, lsl #4
 80097a6:	fa5f fc82 	uxtb.w	ip, r2
 80097aa:	ea44 040e 	orr.w	r4, r4, lr
 80097ae:	4304      	orrs	r4, r0
 80097b0:	ea44 040c 	orr.w	r4, r4, ip
 80097b4:	e7a6      	b.n	8009704 <HAL_RTC_SetDate+0x38>
 80097b6:	68d3      	ldr	r3, [r2, #12]
 80097b8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80097bc:	60d3      	str	r3, [r2, #12]
 80097be:	f7fb ffd1 	bl	8005764 <HAL_GetTick>
 80097c2:	4606      	mov	r6, r0
 80097c4:	682a      	ldr	r2, [r5, #0]
 80097c6:	68d3      	ldr	r3, [r2, #12]
 80097c8:	0658      	lsls	r0, r3, #25
 80097ca:	d4a3      	bmi.n	8009714 <HAL_RTC_SetDate+0x48>
 80097cc:	f7fb ffca 	bl	8005764 <HAL_GetTick>
 80097d0:	1b80      	subs	r0, r0, r6
 80097d2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80097d6:	d9f5      	bls.n	80097c4 <HAL_RTC_SetDate+0xf8>
 80097d8:	2304      	movs	r3, #4
 80097da:	682a      	ldr	r2, [r5, #0]
 80097dc:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80097e0:	68d3      	ldr	r3, [r2, #12]
 80097e2:	2001      	movs	r0, #1
 80097e4:	e7a6      	b.n	8009734 <HAL_RTC_SetDate+0x68>
 80097e6:	2b09      	cmp	r3, #9
 80097e8:	d8b5      	bhi.n	8009756 <HAL_RTC_SetDate+0x8a>
 80097ea:	e7be      	b.n	800976a <HAL_RTC_SetDate+0x9e>
 80097ec:	4b0c      	ldr	r3, [pc, #48]	@ (8009820 <HAL_RTC_SetDate+0x154>)
 80097ee:	60d3      	str	r3, [r2, #12]
 80097f0:	f7fb ffb8 	bl	8005764 <HAL_GetTick>
 80097f4:	4604      	mov	r4, r0
 80097f6:	e005      	b.n	8009804 <HAL_RTC_SetDate+0x138>
 80097f8:	f7fb ffb4 	bl	8005764 <HAL_GetTick>
 80097fc:	1b00      	subs	r0, r0, r4
 80097fe:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8009802:	d806      	bhi.n	8009812 <HAL_RTC_SetDate+0x146>
 8009804:	682a      	ldr	r2, [r5, #0]
 8009806:	68d3      	ldr	r3, [r2, #12]
 8009808:	069b      	lsls	r3, r3, #26
 800980a:	d5f5      	bpl.n	80097f8 <HAL_RTC_SetDate+0x12c>
 800980c:	e78e      	b.n	800972c <HAL_RTC_SetDate+0x60>
 800980e:	2002      	movs	r0, #2
 8009810:	4770      	bx	lr
 8009812:	2304      	movs	r3, #4
 8009814:	682a      	ldr	r2, [r5, #0]
 8009816:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 800981a:	2001      	movs	r0, #1
 800981c:	e78a      	b.n	8009734 <HAL_RTC_SetDate+0x68>
 800981e:	bf00      	nop
 8009820:	0001ff5f 	.word	0x0001ff5f

08009824 <HAL_RTC_GetDate>:
 8009824:	6803      	ldr	r3, [r0, #0]
 8009826:	685b      	ldr	r3, [r3, #4]
 8009828:	b510      	push	{r4, lr}
 800982a:	2000      	movs	r0, #0
 800982c:	f3c3 3e42 	ubfx	lr, r3, #13, #3
 8009830:	f36e 0007 	bfi	r0, lr, #0, #8
 8009834:	f3c3 2e04 	ubfx	lr, r3, #8, #5
 8009838:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 800983c:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8009840:	f36e 200f 	bfi	r0, lr, #8, #8
 8009844:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8009848:	f363 4017 	bfi	r0, r3, #16, #8
 800984c:	f36c 601f 	bfi	r0, ip, #24, #8
 8009850:	6008      	str	r0, [r1, #0]
 8009852:	b9d2      	cbnz	r2, 800988a <HAL_RTC_GetDate+0x66>
 8009854:	091a      	lsrs	r2, r3, #4
 8009856:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800985a:	f003 030f 	and.w	r3, r3, #15
 800985e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8009862:	ea4f 1e1e 	mov.w	lr, lr, lsr #4
 8009866:	708b      	strb	r3, [r1, #2]
 8009868:	ea4f 131c 	mov.w	r3, ip, lsr #4
 800986c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8009870:	f004 040f 	and.w	r4, r4, #15
 8009874:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009878:	f00c 0c0f 	and.w	ip, ip, #15
 800987c:	eb04 044e 	add.w	r4, r4, lr, lsl #1
 8009880:	eb0c 0c43 	add.w	ip, ip, r3, lsl #1
 8009884:	704c      	strb	r4, [r1, #1]
 8009886:	f881 c003 	strb.w	ip, [r1, #3]
 800988a:	2000      	movs	r0, #0
 800988c:	bd10      	pop	{r4, pc}
 800988e:	bf00      	nop

08009890 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8009890:	b430      	push	{r4, r5}
 8009892:	4c3a      	ldr	r4, [pc, #232]	@ (800997c <HAL_RTCEx_SetWakeUpTimer_IT+0xec>)
 8009894:	4b3a      	ldr	r3, [pc, #232]	@ (8009980 <HAL_RTCEx_SetWakeUpTimer_IT+0xf0>)
 8009896:	6825      	ldr	r5, [r4, #0]
 8009898:	fba3 3505 	umull	r3, r5, r3, r5
 800989c:	0aed      	lsrs	r5, r5, #11
 800989e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80098a2:	fb03 f505 	mul.w	r5, r3, r5
 80098a6:	f890 3020 	ldrb.w	r3, [r0, #32]
 80098aa:	b082      	sub	sp, #8
 80098ac:	2b01      	cmp	r3, #1
 80098ae:	9501      	str	r5, [sp, #4]
 80098b0:	d05f      	beq.n	8009972 <HAL_RTCEx_SetWakeUpTimer_IT+0xe2>
 80098b2:	2301      	movs	r3, #1
 80098b4:	f880 3020 	strb.w	r3, [r0, #32]
 80098b8:	6804      	ldr	r4, [r0, #0]
 80098ba:	2302      	movs	r3, #2
 80098bc:	f880 3021 	strb.w	r3, [r0, #33]	@ 0x21
 80098c0:	23ca      	movs	r3, #202	@ 0xca
 80098c2:	6263      	str	r3, [r4, #36]	@ 0x24
 80098c4:	2353      	movs	r3, #83	@ 0x53
 80098c6:	6263      	str	r3, [r4, #36]	@ 0x24
 80098c8:	68a3      	ldr	r3, [r4, #8]
 80098ca:	055b      	lsls	r3, r3, #21
 80098cc:	4684      	mov	ip, r0
 80098ce:	d422      	bmi.n	8009916 <HAL_RTCEx_SetWakeUpTimer_IT+0x86>
 80098d0:	68a3      	ldr	r3, [r4, #8]
 80098d2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80098d6:	60a3      	str	r3, [r4, #8]
 80098d8:	68e3      	ldr	r3, [r4, #12]
 80098da:	b2db      	uxtb	r3, r3
 80098dc:	f463 6390 	orn	r3, r3, #1152	@ 0x480
 80098e0:	60e3      	str	r3, [r4, #12]
 80098e2:	9501      	str	r5, [sp, #4]
 80098e4:	e002      	b.n	80098ec <HAL_RTCEx_SetWakeUpTimer_IT+0x5c>
 80098e6:	68e3      	ldr	r3, [r4, #12]
 80098e8:	075b      	lsls	r3, r3, #29
 80098ea:	d41b      	bmi.n	8009924 <HAL_RTCEx_SetWakeUpTimer_IT+0x94>
 80098ec:	9b01      	ldr	r3, [sp, #4]
 80098ee:	3b01      	subs	r3, #1
 80098f0:	9301      	str	r3, [sp, #4]
 80098f2:	9b01      	ldr	r3, [sp, #4]
 80098f4:	2b00      	cmp	r3, #0
 80098f6:	d1f6      	bne.n	80098e6 <HAL_RTCEx_SetWakeUpTimer_IT+0x56>
 80098f8:	22ff      	movs	r2, #255	@ 0xff
 80098fa:	2303      	movs	r3, #3
 80098fc:	6262      	str	r2, [r4, #36]	@ 0x24
 80098fe:	2003      	movs	r0, #3
 8009900:	f88c 3021 	strb.w	r3, [ip, #33]	@ 0x21
 8009904:	2300      	movs	r3, #0
 8009906:	f88c 3020 	strb.w	r3, [ip, #32]
 800990a:	b002      	add	sp, #8
 800990c:	bc30      	pop	{r4, r5}
 800990e:	4770      	bx	lr
 8009910:	68e3      	ldr	r3, [r4, #12]
 8009912:	0758      	lsls	r0, r3, #29
 8009914:	d5dc      	bpl.n	80098d0 <HAL_RTCEx_SetWakeUpTimer_IT+0x40>
 8009916:	9b01      	ldr	r3, [sp, #4]
 8009918:	3b01      	subs	r3, #1
 800991a:	9301      	str	r3, [sp, #4]
 800991c:	9b01      	ldr	r3, [sp, #4]
 800991e:	2b00      	cmp	r3, #0
 8009920:	d1f6      	bne.n	8009910 <HAL_RTCEx_SetWakeUpTimer_IT+0x80>
 8009922:	e7e9      	b.n	80098f8 <HAL_RTCEx_SetWakeUpTimer_IT+0x68>
 8009924:	68a3      	ldr	r3, [r4, #8]
 8009926:	f023 0307 	bic.w	r3, r3, #7
 800992a:	60a3      	str	r3, [r4, #8]
 800992c:	68a3      	ldr	r3, [r4, #8]
 800992e:	431a      	orrs	r2, r3
 8009930:	4b14      	ldr	r3, [pc, #80]	@ (8009984 <HAL_RTCEx_SetWakeUpTimer_IT+0xf4>)
 8009932:	60a2      	str	r2, [r4, #8]
 8009934:	6161      	str	r1, [r4, #20]
 8009936:	f8d3 2080 	ldr.w	r2, [r3, #128]	@ 0x80
 800993a:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 800993e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8009942:	681a      	ldr	r2, [r3, #0]
 8009944:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 8009948:	601a      	str	r2, [r3, #0]
 800994a:	68a3      	ldr	r3, [r4, #8]
 800994c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8009950:	60a3      	str	r3, [r4, #8]
 8009952:	68a3      	ldr	r3, [r4, #8]
 8009954:	2100      	movs	r1, #0
 8009956:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800995a:	60a3      	str	r3, [r4, #8]
 800995c:	22ff      	movs	r2, #255	@ 0xff
 800995e:	2301      	movs	r3, #1
 8009960:	4608      	mov	r0, r1
 8009962:	6262      	str	r2, [r4, #36]	@ 0x24
 8009964:	f88c 3021 	strb.w	r3, [ip, #33]	@ 0x21
 8009968:	f88c 1020 	strb.w	r1, [ip, #32]
 800996c:	b002      	add	sp, #8
 800996e:	bc30      	pop	{r4, r5}
 8009970:	4770      	bx	lr
 8009972:	2002      	movs	r0, #2
 8009974:	b002      	add	sp, #8
 8009976:	bc30      	pop	{r4, r5}
 8009978:	4770      	bx	lr
 800997a:	bf00      	nop
 800997c:	20000034 	.word	0x20000034
 8009980:	10624dd3 	.word	0x10624dd3
 8009984:	58000800 	.word	0x58000800

08009988 <HAL_RTCEx_WakeUpTimerEventCallback>:
 8009988:	4770      	bx	lr
 800998a:	bf00      	nop

0800998c <HAL_RTCEx_WakeUpTimerIRQHandler>:
 800998c:	4a0c      	ldr	r2, [pc, #48]	@ (80099c0 <HAL_RTCEx_WakeUpTimerIRQHandler+0x34>)
 800998e:	6803      	ldr	r3, [r0, #0]
 8009990:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 8009994:	b510      	push	{r4, lr}
 8009996:	60d1      	str	r1, [r2, #12]
 8009998:	68da      	ldr	r2, [r3, #12]
 800999a:	0552      	lsls	r2, r2, #21
 800999c:	4604      	mov	r4, r0
 800999e:	d403      	bmi.n	80099a8 <HAL_RTCEx_WakeUpTimerIRQHandler+0x1c>
 80099a0:	2301      	movs	r3, #1
 80099a2:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 80099a6:	bd10      	pop	{r4, pc}
 80099a8:	68da      	ldr	r2, [r3, #12]
 80099aa:	b2d2      	uxtb	r2, r2
 80099ac:	f462 6290 	orn	r2, r2, #1152	@ 0x480
 80099b0:	60da      	str	r2, [r3, #12]
 80099b2:	f7ff ffe9 	bl	8009988 <HAL_RTCEx_WakeUpTimerEventCallback>
 80099b6:	2301      	movs	r3, #1
 80099b8:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 80099bc:	bd10      	pop	{r4, pc}
 80099be:	bf00      	nop
 80099c0:	58000800 	.word	0x58000800

080099c4 <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 80099c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099c8:	b082      	sub	sp, #8
 80099ca:	2300      	movs	r3, #0
 80099cc:	460e      	mov	r6, r1
 80099ce:	4615      	mov	r5, r2
 80099d0:	f88d 3003 	strb.w	r3, [sp, #3]
 80099d4:	4607      	mov	r7, r0
 80099d6:	f7fb fec5 	bl	8005764 <HAL_GetTick>
 80099da:	4435      	add	r5, r6
 80099dc:	1a2d      	subs	r5, r5, r0
 80099de:	f7fb fec1 	bl	8005764 <HAL_GetTick>
 80099e2:	4b32      	ldr	r3, [pc, #200]	@ (8009aac <SPI_WaitFifoStateUntilTimeout.constprop.0+0xe8>)
 80099e4:	683c      	ldr	r4, [r7, #0]
 80099e6:	681b      	ldr	r3, [r3, #0]
 80099e8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80099ec:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80099f0:	0d1b      	lsrs	r3, r3, #20
 80099f2:	fb05 f303 	mul.w	r3, r5, r3
 80099f6:	3601      	adds	r6, #1
 80099f8:	9301      	str	r3, [sp, #4]
 80099fa:	d111      	bne.n	8009a20 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5c>
 80099fc:	68a3      	ldr	r3, [r4, #8]
 80099fe:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 8009a02:	d009      	beq.n	8009a18 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
 8009a04:	7b23      	ldrb	r3, [r4, #12]
 8009a06:	b2db      	uxtb	r3, r3
 8009a08:	f88d 3003 	strb.w	r3, [sp, #3]
 8009a0c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009a10:	68a3      	ldr	r3, [r4, #8]
 8009a12:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 8009a16:	d1f5      	bne.n	8009a04 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x40>
 8009a18:	2000      	movs	r0, #0
 8009a1a:	b002      	add	sp, #8
 8009a1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a20:	4680      	mov	r8, r0
 8009a22:	4623      	mov	r3, r4
 8009a24:	689b      	ldr	r3, [r3, #8]
 8009a26:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 8009a2a:	d0f5      	beq.n	8009a18 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
 8009a2c:	7b23      	ldrb	r3, [r4, #12]
 8009a2e:	b2db      	uxtb	r3, r3
 8009a30:	f88d 3003 	strb.w	r3, [sp, #3]
 8009a34:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009a38:	f7fb fe94 	bl	8005764 <HAL_GetTick>
 8009a3c:	eba0 0008 	sub.w	r0, r0, r8
 8009a40:	42a8      	cmp	r0, r5
 8009a42:	d209      	bcs.n	8009a58 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x94>
 8009a44:	9a01      	ldr	r2, [sp, #4]
 8009a46:	9b01      	ldr	r3, [sp, #4]
 8009a48:	2a00      	cmp	r2, #0
 8009a4a:	f103 33ff 	add.w	r3, r3, #4294967295
 8009a4e:	9301      	str	r3, [sp, #4]
 8009a50:	bf08      	it	eq
 8009a52:	2500      	moveq	r5, #0
 8009a54:	683b      	ldr	r3, [r7, #0]
 8009a56:	e7e5      	b.n	8009a24 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x60>
 8009a58:	e9d7 3100 	ldrd	r3, r1, [r7]
 8009a5c:	685a      	ldr	r2, [r3, #4]
 8009a5e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8009a62:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8009a66:	605a      	str	r2, [r3, #4]
 8009a68:	d013      	beq.n	8009a92 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xce>
 8009a6a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8009a6c:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8009a70:	d107      	bne.n	8009a82 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xbe>
 8009a72:	681a      	ldr	r2, [r3, #0]
 8009a74:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009a78:	601a      	str	r2, [r3, #0]
 8009a7a:	681a      	ldr	r2, [r3, #0]
 8009a7c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009a80:	601a      	str	r2, [r3, #0]
 8009a82:	2201      	movs	r2, #1
 8009a84:	2300      	movs	r3, #0
 8009a86:	f887 205d 	strb.w	r2, [r7, #93]	@ 0x5d
 8009a8a:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
 8009a8e:	2003      	movs	r0, #3
 8009a90:	e7c3      	b.n	8009a1a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x56>
 8009a92:	68ba      	ldr	r2, [r7, #8]
 8009a94:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8009a98:	d002      	beq.n	8009aa0 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xdc>
 8009a9a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8009a9e:	d1e4      	bne.n	8009a6a <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa6>
 8009aa0:	681a      	ldr	r2, [r3, #0]
 8009aa2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009aa6:	601a      	str	r2, [r3, #0]
 8009aa8:	e7df      	b.n	8009a6a <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa6>
 8009aaa:	bf00      	nop
 8009aac:	20000034 	.word	0x20000034

08009ab0 <SPI_EndRxTxTransaction>:
 8009ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ab4:	b084      	sub	sp, #16
 8009ab6:	2300      	movs	r3, #0
 8009ab8:	460e      	mov	r6, r1
 8009aba:	4617      	mov	r7, r2
 8009abc:	f88d 3007 	strb.w	r3, [sp, #7]
 8009ac0:	4605      	mov	r5, r0
 8009ac2:	f7fb fe4f 	bl	8005764 <HAL_GetTick>
 8009ac6:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 8009c00 <SPI_EndRxTxTransaction+0x150>
 8009aca:	eb06 0807 	add.w	r8, r6, r7
 8009ace:	eba8 0400 	sub.w	r4, r8, r0
 8009ad2:	f7fb fe47 	bl	8005764 <HAL_GetTick>
 8009ad6:	f8d9 3000 	ldr.w	r3, [r9]
 8009ada:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009ade:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8009ae2:	0d1b      	lsrs	r3, r3, #20
 8009ae4:	fb04 f303 	mul.w	r3, r4, r3
 8009ae8:	9302      	str	r3, [sp, #8]
 8009aea:	1c73      	adds	r3, r6, #1
 8009aec:	d126      	bne.n	8009b3c <SPI_EndRxTxTransaction+0x8c>
 8009aee:	682c      	ldr	r4, [r5, #0]
 8009af0:	68a3      	ldr	r3, [r4, #8]
 8009af2:	f413 5fc0 	tst.w	r3, #6144	@ 0x1800
 8009af6:	d1fb      	bne.n	8009af0 <SPI_EndRxTxTransaction+0x40>
 8009af8:	f7fb fe34 	bl	8005764 <HAL_GetTick>
 8009afc:	eba8 0800 	sub.w	r8, r8, r0
 8009b00:	f7fb fe30 	bl	8005764 <HAL_GetTick>
 8009b04:	f8d9 3000 	ldr.w	r3, [r9]
 8009b08:	682a      	ldr	r2, [r5, #0]
 8009b0a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8009b0e:	fb08 f303 	mul.w	r3, r8, r3
 8009b12:	9303      	str	r3, [sp, #12]
 8009b14:	6893      	ldr	r3, [r2, #8]
 8009b16:	0619      	lsls	r1, r3, #24
 8009b18:	d4fc      	bmi.n	8009b14 <SPI_EndRxTxTransaction+0x64>
 8009b1a:	463a      	mov	r2, r7
 8009b1c:	4631      	mov	r1, r6
 8009b1e:	4628      	mov	r0, r5
 8009b20:	f7ff ff50 	bl	80099c4 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8009b24:	b910      	cbnz	r0, 8009b2c <SPI_EndRxTxTransaction+0x7c>
 8009b26:	b004      	add	sp, #16
 8009b28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b2c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 8009b2e:	f043 0320 	orr.w	r3, r3, #32
 8009b32:	662b      	str	r3, [r5, #96]	@ 0x60
 8009b34:	2003      	movs	r0, #3
 8009b36:	b004      	add	sp, #16
 8009b38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b3c:	4682      	mov	sl, r0
 8009b3e:	682b      	ldr	r3, [r5, #0]
 8009b40:	689b      	ldr	r3, [r3, #8]
 8009b42:	f413 5fc0 	tst.w	r3, #6144	@ 0x1800
 8009b46:	d00e      	beq.n	8009b66 <SPI_EndRxTxTransaction+0xb6>
 8009b48:	f7fb fe0c 	bl	8005764 <HAL_GetTick>
 8009b4c:	eba0 030a 	sub.w	r3, r0, sl
 8009b50:	42a3      	cmp	r3, r4
 8009b52:	d220      	bcs.n	8009b96 <SPI_EndRxTxTransaction+0xe6>
 8009b54:	9a02      	ldr	r2, [sp, #8]
 8009b56:	9b02      	ldr	r3, [sp, #8]
 8009b58:	2a00      	cmp	r2, #0
 8009b5a:	f103 33ff 	add.w	r3, r3, #4294967295
 8009b5e:	bf08      	it	eq
 8009b60:	2400      	moveq	r4, #0
 8009b62:	9302      	str	r3, [sp, #8]
 8009b64:	e7eb      	b.n	8009b3e <SPI_EndRxTxTransaction+0x8e>
 8009b66:	f7fb fdfd 	bl	8005764 <HAL_GetTick>
 8009b6a:	eba8 0400 	sub.w	r4, r8, r0
 8009b6e:	f7fb fdf9 	bl	8005764 <HAL_GetTick>
 8009b72:	f8d9 3000 	ldr.w	r3, [r9]
 8009b76:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8009b7a:	fb04 f303 	mul.w	r3, r4, r3
 8009b7e:	4680      	mov	r8, r0
 8009b80:	9303      	str	r3, [sp, #12]
 8009b82:	682b      	ldr	r3, [r5, #0]
 8009b84:	689b      	ldr	r3, [r3, #8]
 8009b86:	061b      	lsls	r3, r3, #24
 8009b88:	d5c7      	bpl.n	8009b1a <SPI_EndRxTxTransaction+0x6a>
 8009b8a:	f7fb fdeb 	bl	8005764 <HAL_GetTick>
 8009b8e:	eba0 0308 	sub.w	r3, r0, r8
 8009b92:	42a3      	cmp	r3, r4
 8009b94:	d31f      	bcc.n	8009bd6 <SPI_EndRxTxTransaction+0x126>
 8009b96:	e9d5 3100 	ldrd	r3, r1, [r5]
 8009b9a:	685a      	ldr	r2, [r3, #4]
 8009b9c:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8009ba0:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8009ba4:	605a      	str	r2, [r3, #4]
 8009ba6:	d01f      	beq.n	8009be8 <SPI_EndRxTxTransaction+0x138>
 8009ba8:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8009baa:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8009bae:	d107      	bne.n	8009bc0 <SPI_EndRxTxTransaction+0x110>
 8009bb0:	681a      	ldr	r2, [r3, #0]
 8009bb2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009bb6:	601a      	str	r2, [r3, #0]
 8009bb8:	681a      	ldr	r2, [r3, #0]
 8009bba:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009bbe:	601a      	str	r2, [r3, #0]
 8009bc0:	2301      	movs	r3, #1
 8009bc2:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
 8009bc6:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 8009bc8:	2200      	movs	r2, #0
 8009bca:	f043 0320 	orr.w	r3, r3, #32
 8009bce:	f885 205c 	strb.w	r2, [r5, #92]	@ 0x5c
 8009bd2:	662b      	str	r3, [r5, #96]	@ 0x60
 8009bd4:	e7ae      	b.n	8009b34 <SPI_EndRxTxTransaction+0x84>
 8009bd6:	9a03      	ldr	r2, [sp, #12]
 8009bd8:	9b03      	ldr	r3, [sp, #12]
 8009bda:	2a00      	cmp	r2, #0
 8009bdc:	f103 33ff 	add.w	r3, r3, #4294967295
 8009be0:	bf08      	it	eq
 8009be2:	2400      	moveq	r4, #0
 8009be4:	9303      	str	r3, [sp, #12]
 8009be6:	e7cc      	b.n	8009b82 <SPI_EndRxTxTransaction+0xd2>
 8009be8:	68aa      	ldr	r2, [r5, #8]
 8009bea:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8009bee:	d002      	beq.n	8009bf6 <SPI_EndRxTxTransaction+0x146>
 8009bf0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8009bf4:	d1d8      	bne.n	8009ba8 <SPI_EndRxTxTransaction+0xf8>
 8009bf6:	681a      	ldr	r2, [r3, #0]
 8009bf8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009bfc:	601a      	str	r2, [r3, #0]
 8009bfe:	e7d3      	b.n	8009ba8 <SPI_EndRxTxTransaction+0xf8>
 8009c00:	20000034 	.word	0x20000034

08009c04 <HAL_SPI_Init>:
 8009c04:	2800      	cmp	r0, #0
 8009c06:	d074      	beq.n	8009cf2 <HAL_SPI_Init+0xee>
 8009c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c0c:	4604      	mov	r4, r0
 8009c0e:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8009c10:	2800      	cmp	r0, #0
 8009c12:	d053      	beq.n	8009cbc <HAL_SPI_Init+0xb8>
 8009c14:	2300      	movs	r3, #0
 8009c16:	e9c4 3304 	strd	r3, r3, [r4, #16]
 8009c1a:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009c1e:	2200      	movs	r2, #0
 8009c20:	62a2      	str	r2, [r4, #40]	@ 0x28
 8009c22:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009c26:	2b00      	cmp	r3, #0
 8009c28:	d057      	beq.n	8009cda <HAL_SPI_Init+0xd6>
 8009c2a:	6821      	ldr	r1, [r4, #0]
 8009c2c:	68e7      	ldr	r7, [r4, #12]
 8009c2e:	2302      	movs	r3, #2
 8009c30:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009c34:	680b      	ldr	r3, [r1, #0]
 8009c36:	f5b7 6fe0 	cmp.w	r7, #1792	@ 0x700
 8009c3a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009c3e:	600b      	str	r3, [r1, #0]
 8009c40:	d842      	bhi.n	8009cc8 <HAL_SPI_Init+0xc4>
 8009c42:	d151      	bne.n	8009ce8 <HAL_SPI_Init+0xe4>
 8009c44:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8009c46:	f44f 5c80 	mov.w	ip, #4096	@ 0x1000
 8009c4a:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
 8009c4e:	6862      	ldr	r2, [r4, #4]
 8009c50:	68a3      	ldr	r3, [r4, #8]
 8009c52:	69a6      	ldr	r6, [r4, #24]
 8009c54:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8009c58:	f402 7282 	and.w	r2, r2, #260	@ 0x104
 8009c5c:	431a      	orrs	r2, r3
 8009c5e:	6923      	ldr	r3, [r4, #16]
 8009c60:	f003 0302 	and.w	r3, r3, #2
 8009c64:	4313      	orrs	r3, r2
 8009c66:	6962      	ldr	r2, [r4, #20]
 8009c68:	f002 0201 	and.w	r2, r2, #1
 8009c6c:	431a      	orrs	r2, r3
 8009c6e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8009c70:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
 8009c74:	f003 0308 	and.w	r3, r3, #8
 8009c78:	ea43 0e07 	orr.w	lr, r3, r7
 8009c7c:	69e3      	ldr	r3, [r4, #28]
 8009c7e:	f003 0838 	and.w	r8, r3, #56	@ 0x38
 8009c82:	6a23      	ldr	r3, [r4, #32]
 8009c84:	f003 0780 	and.w	r7, r3, #128	@ 0x80
 8009c88:	f406 7300 	and.w	r3, r6, #512	@ 0x200
 8009c8c:	4313      	orrs	r3, r2
 8009c8e:	ea43 0308 	orr.w	r3, r3, r8
 8009c92:	433b      	orrs	r3, r7
 8009c94:	0c36      	lsrs	r6, r6, #16
 8009c96:	432b      	orrs	r3, r5
 8009c98:	f006 0604 	and.w	r6, r6, #4
 8009c9c:	600b      	str	r3, [r1, #0]
 8009c9e:	f000 0010 	and.w	r0, r0, #16
 8009ca2:	ea4e 0306 	orr.w	r3, lr, r6
 8009ca6:	4303      	orrs	r3, r0
 8009ca8:	ea43 030c 	orr.w	r3, r3, ip
 8009cac:	604b      	str	r3, [r1, #4]
 8009cae:	2000      	movs	r0, #0
 8009cb0:	2301      	movs	r3, #1
 8009cb2:	6620      	str	r0, [r4, #96]	@ 0x60
 8009cb4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009cb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009cbc:	6863      	ldr	r3, [r4, #4]
 8009cbe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009cc2:	d0aa      	beq.n	8009c1a <HAL_SPI_Init+0x16>
 8009cc4:	61e0      	str	r0, [r4, #28]
 8009cc6:	e7a8      	b.n	8009c1a <HAL_SPI_Init+0x16>
 8009cc8:	f5b7 6f70 	cmp.w	r7, #3840	@ 0xf00
 8009ccc:	d113      	bne.n	8009cf6 <HAL_SPI_Init+0xf2>
 8009cce:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8009cd0:	f04f 0c00 	mov.w	ip, #0
 8009cd4:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
 8009cd8:	e7b9      	b.n	8009c4e <HAL_SPI_Init+0x4a>
 8009cda:	4620      	mov	r0, r4
 8009cdc:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8009ce0:	f7f8 fbe4 	bl	80024ac <HAL_SPI_MspInit>
 8009ce4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8009ce6:	e7a0      	b.n	8009c2a <HAL_SPI_Init+0x26>
 8009ce8:	f44f 5c80 	mov.w	ip, #4096	@ 0x1000
 8009cec:	2500      	movs	r5, #0
 8009cee:	62a5      	str	r5, [r4, #40]	@ 0x28
 8009cf0:	e7ad      	b.n	8009c4e <HAL_SPI_Init+0x4a>
 8009cf2:	2001      	movs	r0, #1
 8009cf4:	4770      	bx	lr
 8009cf6:	f04f 0c00 	mov.w	ip, #0
 8009cfa:	e7f7      	b.n	8009cec <HAL_SPI_Init+0xe8>

08009cfc <HAL_SPI_Transmit>:
 8009cfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d00:	4604      	mov	r4, r0
 8009d02:	b082      	sub	sp, #8
 8009d04:	461d      	mov	r5, r3
 8009d06:	460f      	mov	r7, r1
 8009d08:	4690      	mov	r8, r2
 8009d0a:	f7fb fd2b 	bl	8005764 <HAL_GetTick>
 8009d0e:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009d12:	2b01      	cmp	r3, #1
 8009d14:	d17e      	bne.n	8009e14 <HAL_SPI_Transmit+0x118>
 8009d16:	4606      	mov	r6, r0
 8009d18:	b2d8      	uxtb	r0, r3
 8009d1a:	2f00      	cmp	r7, #0
 8009d1c:	d077      	beq.n	8009e0e <HAL_SPI_Transmit+0x112>
 8009d1e:	f1b8 0f00 	cmp.w	r8, #0
 8009d22:	d074      	beq.n	8009e0e <HAL_SPI_Transmit+0x112>
 8009d24:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009d28:	2b01      	cmp	r3, #1
 8009d2a:	d073      	beq.n	8009e14 <HAL_SPI_Transmit+0x118>
 8009d2c:	68a1      	ldr	r1, [r4, #8]
 8009d2e:	6823      	ldr	r3, [r4, #0]
 8009d30:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 8009d34:	2200      	movs	r2, #0
 8009d36:	2003      	movs	r0, #3
 8009d38:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8009d3c:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 8009d40:	e9c4 2213 	strd	r2, r2, [r4, #76]	@ 0x4c
 8009d44:	6622      	str	r2, [r4, #96]	@ 0x60
 8009d46:	6422      	str	r2, [r4, #64]	@ 0x40
 8009d48:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 8009d4c:	f8a4 803e 	strh.w	r8, [r4, #62]	@ 0x3e
 8009d50:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009d52:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8009d56:	f8a4 803c 	strh.w	r8, [r4, #60]	@ 0x3c
 8009d5a:	461a      	mov	r2, r3
 8009d5c:	d107      	bne.n	8009d6e <HAL_SPI_Transmit+0x72>
 8009d5e:	6819      	ldr	r1, [r3, #0]
 8009d60:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 8009d64:	6019      	str	r1, [r3, #0]
 8009d66:	6819      	ldr	r1, [r3, #0]
 8009d68:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8009d6c:	6019      	str	r1, [r3, #0]
 8009d6e:	6819      	ldr	r1, [r3, #0]
 8009d70:	0649      	lsls	r1, r1, #25
 8009d72:	d403      	bmi.n	8009d7c <HAL_SPI_Transmit+0x80>
 8009d74:	6819      	ldr	r1, [r3, #0]
 8009d76:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8009d7a:	6019      	str	r1, [r3, #0]
 8009d7c:	68e1      	ldr	r1, [r4, #12]
 8009d7e:	6860      	ldr	r0, [r4, #4]
 8009d80:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009d84:	d84a      	bhi.n	8009e1c <HAL_SPI_Transmit+0x120>
 8009d86:	2800      	cmp	r0, #0
 8009d88:	f000 80c3 	beq.w	8009f12 <HAL_SPI_Transmit+0x216>
 8009d8c:	f1b8 0f01 	cmp.w	r8, #1
 8009d90:	f000 80bf 	beq.w	8009f12 <HAL_SPI_Transmit+0x216>
 8009d94:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009d96:	b29b      	uxth	r3, r3
 8009d98:	b1f3      	cbz	r3, 8009dd8 <HAL_SPI_Transmit+0xdc>
 8009d9a:	1c68      	adds	r0, r5, #1
 8009d9c:	d012      	beq.n	8009dc4 <HAL_SPI_Transmit+0xc8>
 8009d9e:	e091      	b.n	8009ec4 <HAL_SPI_Transmit+0x1c8>
 8009da0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009da2:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8009da4:	b29b      	uxth	r3, r3
 8009da6:	2b01      	cmp	r3, #1
 8009da8:	4601      	mov	r1, r0
 8009daa:	f240 809f 	bls.w	8009eec <HAL_SPI_Transmit+0x1f0>
 8009dae:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009db2:	60d3      	str	r3, [r2, #12]
 8009db4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009db6:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009db8:	3b02      	subs	r3, #2
 8009dba:	b29b      	uxth	r3, r3
 8009dbc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009dbe:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009dc0:	b289      	uxth	r1, r1
 8009dc2:	b149      	cbz	r1, 8009dd8 <HAL_SPI_Transmit+0xdc>
 8009dc4:	6822      	ldr	r2, [r4, #0]
 8009dc6:	6893      	ldr	r3, [r2, #8]
 8009dc8:	0799      	lsls	r1, r3, #30
 8009dca:	d4e9      	bmi.n	8009da0 <HAL_SPI_Transmit+0xa4>
 8009dcc:	f7fb fcca 	bl	8005764 <HAL_GetTick>
 8009dd0:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009dd2:	b289      	uxth	r1, r1
 8009dd4:	2900      	cmp	r1, #0
 8009dd6:	d1f5      	bne.n	8009dc4 <HAL_SPI_Transmit+0xc8>
 8009dd8:	4632      	mov	r2, r6
 8009dda:	4629      	mov	r1, r5
 8009ddc:	4620      	mov	r0, r4
 8009dde:	f7ff fe67 	bl	8009ab0 <SPI_EndRxTxTransaction>
 8009de2:	b108      	cbz	r0, 8009de8 <HAL_SPI_Transmit+0xec>
 8009de4:	2320      	movs	r3, #32
 8009de6:	6623      	str	r3, [r4, #96]	@ 0x60
 8009de8:	68a3      	ldr	r3, [r4, #8]
 8009dea:	b933      	cbnz	r3, 8009dfa <HAL_SPI_Transmit+0xfe>
 8009dec:	6822      	ldr	r2, [r4, #0]
 8009dee:	9301      	str	r3, [sp, #4]
 8009df0:	68d3      	ldr	r3, [r2, #12]
 8009df2:	9301      	str	r3, [sp, #4]
 8009df4:	6893      	ldr	r3, [r2, #8]
 8009df6:	9301      	str	r3, [sp, #4]
 8009df8:	9b01      	ldr	r3, [sp, #4]
 8009dfa:	2301      	movs	r3, #1
 8009dfc:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009e00:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8009e02:	2300      	movs	r3, #0
 8009e04:	1ac0      	subs	r0, r0, r3
 8009e06:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009e0a:	bf18      	it	ne
 8009e0c:	2001      	movne	r0, #1
 8009e0e:	b002      	add	sp, #8
 8009e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e14:	2002      	movs	r0, #2
 8009e16:	b002      	add	sp, #8
 8009e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e1c:	2800      	cmp	r0, #0
 8009e1e:	d06f      	beq.n	8009f00 <HAL_SPI_Transmit+0x204>
 8009e20:	f1b8 0f01 	cmp.w	r8, #1
 8009e24:	d06c      	beq.n	8009f00 <HAL_SPI_Transmit+0x204>
 8009e26:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009e28:	b289      	uxth	r1, r1
 8009e2a:	2900      	cmp	r1, #0
 8009e2c:	d0d4      	beq.n	8009dd8 <HAL_SPI_Transmit+0xdc>
 8009e2e:	1c69      	adds	r1, r5, #1
 8009e30:	d12c      	bne.n	8009e8c <HAL_SPI_Transmit+0x190>
 8009e32:	689a      	ldr	r2, [r3, #8]
 8009e34:	0797      	lsls	r7, r2, #30
 8009e36:	d513      	bpl.n	8009e60 <HAL_SPI_Transmit+0x164>
 8009e38:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009e3a:	f832 1b02 	ldrh.w	r1, [r2], #2
 8009e3e:	60d9      	str	r1, [r3, #12]
 8009e40:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	@ 0x3e
 8009e44:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009e46:	f10c 3cff 	add.w	ip, ip, #4294967295
 8009e4a:	fa1f fc8c 	uxth.w	ip, ip
 8009e4e:	f8a4 c03e 	strh.w	ip, [r4, #62]	@ 0x3e
 8009e52:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009e54:	b292      	uxth	r2, r2
 8009e56:	2a00      	cmp	r2, #0
 8009e58:	d0be      	beq.n	8009dd8 <HAL_SPI_Transmit+0xdc>
 8009e5a:	689a      	ldr	r2, [r3, #8]
 8009e5c:	0797      	lsls	r7, r2, #30
 8009e5e:	d4eb      	bmi.n	8009e38 <HAL_SPI_Transmit+0x13c>
 8009e60:	f7fb fc80 	bl	8005764 <HAL_GetTick>
 8009e64:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e66:	b29b      	uxth	r3, r3
 8009e68:	2b00      	cmp	r3, #0
 8009e6a:	d0b5      	beq.n	8009dd8 <HAL_SPI_Transmit+0xdc>
 8009e6c:	6823      	ldr	r3, [r4, #0]
 8009e6e:	e7e0      	b.n	8009e32 <HAL_SPI_Transmit+0x136>
 8009e70:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009e72:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009e76:	60d3      	str	r3, [r2, #12]
 8009e78:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e7a:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009e7c:	3b01      	subs	r3, #1
 8009e7e:	b29b      	uxth	r3, r3
 8009e80:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009e82:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e84:	b29b      	uxth	r3, r3
 8009e86:	2b00      	cmp	r3, #0
 8009e88:	d0a6      	beq.n	8009dd8 <HAL_SPI_Transmit+0xdc>
 8009e8a:	6822      	ldr	r2, [r4, #0]
 8009e8c:	6893      	ldr	r3, [r2, #8]
 8009e8e:	0798      	lsls	r0, r3, #30
 8009e90:	d4ee      	bmi.n	8009e70 <HAL_SPI_Transmit+0x174>
 8009e92:	f7fb fc67 	bl	8005764 <HAL_GetTick>
 8009e96:	1b80      	subs	r0, r0, r6
 8009e98:	42a8      	cmp	r0, r5
 8009e9a:	d3f2      	bcc.n	8009e82 <HAL_SPI_Transmit+0x186>
 8009e9c:	2301      	movs	r3, #1
 8009e9e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009ea2:	2300      	movs	r3, #0
 8009ea4:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009ea8:	2003      	movs	r0, #3
 8009eaa:	e7b0      	b.n	8009e0e <HAL_SPI_Transmit+0x112>
 8009eac:	f831 2b02 	ldrh.w	r2, [r1], #2
 8009eb0:	60da      	str	r2, [r3, #12]
 8009eb2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009eb4:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009eb6:	3b02      	subs	r3, #2
 8009eb8:	b29b      	uxth	r3, r3
 8009eba:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009ebc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ebe:	b29b      	uxth	r3, r3
 8009ec0:	2b00      	cmp	r3, #0
 8009ec2:	d089      	beq.n	8009dd8 <HAL_SPI_Transmit+0xdc>
 8009ec4:	6823      	ldr	r3, [r4, #0]
 8009ec6:	689a      	ldr	r2, [r3, #8]
 8009ec8:	0792      	lsls	r2, r2, #30
 8009eca:	d539      	bpl.n	8009f40 <HAL_SPI_Transmit+0x244>
 8009ecc:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009ece:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8009ed0:	b292      	uxth	r2, r2
 8009ed2:	2a01      	cmp	r2, #1
 8009ed4:	4601      	mov	r1, r0
 8009ed6:	d8e9      	bhi.n	8009eac <HAL_SPI_Transmit+0x1b0>
 8009ed8:	7802      	ldrb	r2, [r0, #0]
 8009eda:	731a      	strb	r2, [r3, #12]
 8009edc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ede:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009ee0:	3b01      	subs	r3, #1
 8009ee2:	3201      	adds	r2, #1
 8009ee4:	b29b      	uxth	r3, r3
 8009ee6:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009ee8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009eea:	e7e7      	b.n	8009ebc <HAL_SPI_Transmit+0x1c0>
 8009eec:	7803      	ldrb	r3, [r0, #0]
 8009eee:	7313      	strb	r3, [r2, #12]
 8009ef0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ef2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009ef4:	3b01      	subs	r3, #1
 8009ef6:	3201      	adds	r2, #1
 8009ef8:	b29b      	uxth	r3, r3
 8009efa:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009efc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009efe:	e75e      	b.n	8009dbe <HAL_SPI_Transmit+0xc2>
 8009f00:	f837 1b02 	ldrh.w	r1, [r7], #2
 8009f04:	60d9      	str	r1, [r3, #12]
 8009f06:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009f08:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009f0a:	3901      	subs	r1, #1
 8009f0c:	b289      	uxth	r1, r1
 8009f0e:	87e1      	strh	r1, [r4, #62]	@ 0x3e
 8009f10:	e789      	b.n	8009e26 <HAL_SPI_Transmit+0x12a>
 8009f12:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009f14:	b292      	uxth	r2, r2
 8009f16:	2a01      	cmp	r2, #1
 8009f18:	d908      	bls.n	8009f2c <HAL_SPI_Transmit+0x230>
 8009f1a:	f837 2b02 	ldrh.w	r2, [r7], #2
 8009f1e:	60da      	str	r2, [r3, #12]
 8009f20:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f22:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009f24:	3b02      	subs	r3, #2
 8009f26:	b29b      	uxth	r3, r3
 8009f28:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009f2a:	e733      	b.n	8009d94 <HAL_SPI_Transmit+0x98>
 8009f2c:	783a      	ldrb	r2, [r7, #0]
 8009f2e:	731a      	strb	r2, [r3, #12]
 8009f30:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f32:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009f34:	3b01      	subs	r3, #1
 8009f36:	3201      	adds	r2, #1
 8009f38:	b29b      	uxth	r3, r3
 8009f3a:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009f3c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009f3e:	e729      	b.n	8009d94 <HAL_SPI_Transmit+0x98>
 8009f40:	f7fb fc10 	bl	8005764 <HAL_GetTick>
 8009f44:	1b80      	subs	r0, r0, r6
 8009f46:	42a8      	cmp	r0, r5
 8009f48:	d3b8      	bcc.n	8009ebc <HAL_SPI_Transmit+0x1c0>
 8009f4a:	e7a7      	b.n	8009e9c <HAL_SPI_Transmit+0x1a0>

08009f4c <HAL_SPI_TransmitReceive>:
 8009f4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f50:	4604      	mov	r4, r0
 8009f52:	4690      	mov	r8, r2
 8009f54:	461e      	mov	r6, r3
 8009f56:	460f      	mov	r7, r1
 8009f58:	f7fb fc04 	bl	8005764 <HAL_GetTick>
 8009f5c:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009f60:	6862      	ldr	r2, [r4, #4]
 8009f62:	2b01      	cmp	r3, #1
 8009f64:	4605      	mov	r5, r0
 8009f66:	d00b      	beq.n	8009f80 <HAL_SPI_TransmitReceive+0x34>
 8009f68:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8009f6c:	f040 808c 	bne.w	800a088 <HAL_SPI_TransmitReceive+0x13c>
 8009f70:	b2d9      	uxtb	r1, r3
 8009f72:	68a3      	ldr	r3, [r4, #8]
 8009f74:	2b00      	cmp	r3, #0
 8009f76:	f040 8087 	bne.w	800a088 <HAL_SPI_TransmitReceive+0x13c>
 8009f7a:	2904      	cmp	r1, #4
 8009f7c:	f040 8084 	bne.w	800a088 <HAL_SPI_TransmitReceive+0x13c>
 8009f80:	2f00      	cmp	r7, #0
 8009f82:	f000 8169 	beq.w	800a258 <HAL_SPI_TransmitReceive+0x30c>
 8009f86:	f1b8 0f00 	cmp.w	r8, #0
 8009f8a:	f000 8165 	beq.w	800a258 <HAL_SPI_TransmitReceive+0x30c>
 8009f8e:	2e00      	cmp	r6, #0
 8009f90:	f000 8162 	beq.w	800a258 <HAL_SPI_TransmitReceive+0x30c>
 8009f94:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009f98:	2b01      	cmp	r3, #1
 8009f9a:	d075      	beq.n	800a088 <HAL_SPI_TransmitReceive+0x13c>
 8009f9c:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009fa0:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
 8009fa4:	2101      	movs	r1, #1
 8009fa6:	2b04      	cmp	r3, #4
 8009fa8:	f884 105c 	strb.w	r1, [r4, #92]	@ 0x5c
 8009fac:	68e1      	ldr	r1, [r4, #12]
 8009fae:	f8a4 6044 	strh.w	r6, [r4, #68]	@ 0x44
 8009fb2:	bf1c      	itt	ne
 8009fb4:	2305      	movne	r3, #5
 8009fb6:	f884 305d 	strbne.w	r3, [r4, #93]	@ 0x5d
 8009fba:	2300      	movs	r3, #0
 8009fbc:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009fc0:	6623      	str	r3, [r4, #96]	@ 0x60
 8009fc2:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8009fc4:	f8a4 6046 	strh.w	r6, [r4, #70]	@ 0x46
 8009fc8:	6523      	str	r3, [r4, #80]	@ 0x50
 8009fca:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009fcc:	6823      	ldr	r3, [r4, #0]
 8009fce:	87a6      	strh	r6, [r4, #60]	@ 0x3c
 8009fd0:	87e6      	strh	r6, [r4, #62]	@ 0x3e
 8009fd2:	d95c      	bls.n	800a08e <HAL_SPI_TransmitReceive+0x142>
 8009fd4:	6859      	ldr	r1, [r3, #4]
 8009fd6:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 8009fda:	6059      	str	r1, [r3, #4]
 8009fdc:	6819      	ldr	r1, [r3, #0]
 8009fde:	0648      	lsls	r0, r1, #25
 8009fe0:	d403      	bmi.n	8009fea <HAL_SPI_TransmitReceive+0x9e>
 8009fe2:	6819      	ldr	r1, [r3, #0]
 8009fe4:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8009fe8:	6019      	str	r1, [r3, #0]
 8009fea:	2a00      	cmp	r2, #0
 8009fec:	f000 8100 	beq.w	800a1f0 <HAL_SPI_TransmitReceive+0x2a4>
 8009ff0:	2e01      	cmp	r6, #1
 8009ff2:	f000 80fd 	beq.w	800a1f0 <HAL_SPI_TransmitReceive+0x2a4>
 8009ff6:	9b06      	ldr	r3, [sp, #24]
 8009ff8:	3301      	adds	r3, #1
 8009ffa:	f04f 0601 	mov.w	r6, #1
 8009ffe:	d028      	beq.n	800a052 <HAL_SPI_TransmitReceive+0x106>
 800a000:	e09a      	b.n	800a138 <HAL_SPI_TransmitReceive+0x1ec>
 800a002:	6822      	ldr	r2, [r4, #0]
 800a004:	6893      	ldr	r3, [r2, #8]
 800a006:	0799      	lsls	r1, r3, #30
 800a008:	d50d      	bpl.n	800a026 <HAL_SPI_TransmitReceive+0xda>
 800a00a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a00c:	b29b      	uxth	r3, r3
 800a00e:	b153      	cbz	r3, 800a026 <HAL_SPI_TransmitReceive+0xda>
 800a010:	b146      	cbz	r6, 800a024 <HAL_SPI_TransmitReceive+0xd8>
 800a012:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800a014:	f831 3b02 	ldrh.w	r3, [r1], #2
 800a018:	60d3      	str	r3, [r2, #12]
 800a01a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a01c:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a01e:	3b01      	subs	r3, #1
 800a020:	b29b      	uxth	r3, r3
 800a022:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a024:	2600      	movs	r6, #0
 800a026:	6893      	ldr	r3, [r2, #8]
 800a028:	f013 0301 	ands.w	r3, r3, #1
 800a02c:	d00f      	beq.n	800a04e <HAL_SPI_TransmitReceive+0x102>
 800a02e:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a032:	b289      	uxth	r1, r1
 800a034:	b159      	cbz	r1, 800a04e <HAL_SPI_TransmitReceive+0x102>
 800a036:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a038:	68d2      	ldr	r2, [r2, #12]
 800a03a:	f821 2b02 	strh.w	r2, [r1], #2
 800a03e:	461e      	mov	r6, r3
 800a040:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a044:	6421      	str	r1, [r4, #64]	@ 0x40
 800a046:	3b01      	subs	r3, #1
 800a048:	b29b      	uxth	r3, r3
 800a04a:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a04e:	f7fb fb89 	bl	8005764 <HAL_GetTick>
 800a052:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a054:	b29b      	uxth	r3, r3
 800a056:	2b00      	cmp	r3, #0
 800a058:	d1d3      	bne.n	800a002 <HAL_SPI_TransmitReceive+0xb6>
 800a05a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a05e:	b29b      	uxth	r3, r3
 800a060:	2b00      	cmp	r3, #0
 800a062:	d1ce      	bne.n	800a002 <HAL_SPI_TransmitReceive+0xb6>
 800a064:	9906      	ldr	r1, [sp, #24]
 800a066:	462a      	mov	r2, r5
 800a068:	4620      	mov	r0, r4
 800a06a:	f7ff fd21 	bl	8009ab0 <SPI_EndRxTxTransaction>
 800a06e:	2800      	cmp	r0, #0
 800a070:	f040 80ed 	bne.w	800a24e <HAL_SPI_TransmitReceive+0x302>
 800a074:	2301      	movs	r3, #1
 800a076:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a07a:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a07c:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 800a080:	1e18      	subs	r0, r3, #0
 800a082:	bf18      	it	ne
 800a084:	2001      	movne	r0, #1
 800a086:	e000      	b.n	800a08a <HAL_SPI_TransmitReceive+0x13e>
 800a088:	2002      	movs	r0, #2
 800a08a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a08e:	2e01      	cmp	r6, #1
 800a090:	f000 8118 	beq.w	800a2c4 <HAL_SPI_TransmitReceive+0x378>
 800a094:	6859      	ldr	r1, [r3, #4]
 800a096:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 800a09a:	6059      	str	r1, [r3, #4]
 800a09c:	6819      	ldr	r1, [r3, #0]
 800a09e:	0649      	lsls	r1, r1, #25
 800a0a0:	bf5e      	ittt	pl
 800a0a2:	6819      	ldrpl	r1, [r3, #0]
 800a0a4:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
 800a0a8:	6019      	strpl	r1, [r3, #0]
 800a0aa:	b962      	cbnz	r2, 800a0c6 <HAL_SPI_TransmitReceive+0x17a>
 800a0ac:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800a0ae:	b292      	uxth	r2, r2
 800a0b0:	2a01      	cmp	r2, #1
 800a0b2:	f240 80d3 	bls.w	800a25c <HAL_SPI_TransmitReceive+0x310>
 800a0b6:	f837 2b02 	ldrh.w	r2, [r7], #2
 800a0ba:	60da      	str	r2, [r3, #12]
 800a0bc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0be:	63a7      	str	r7, [r4, #56]	@ 0x38
 800a0c0:	3b02      	subs	r3, #2
 800a0c2:	b29b      	uxth	r3, r3
 800a0c4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a0c6:	9b06      	ldr	r3, [sp, #24]
 800a0c8:	3301      	adds	r3, #1
 800a0ca:	f04f 0601 	mov.w	r6, #1
 800a0ce:	d17d      	bne.n	800a1cc <HAL_SPI_TransmitReceive+0x280>
 800a0d0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0d2:	b29b      	uxth	r3, r3
 800a0d4:	b923      	cbnz	r3, 800a0e0 <HAL_SPI_TransmitReceive+0x194>
 800a0d6:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a0da:	b29b      	uxth	r3, r3
 800a0dc:	2b00      	cmp	r3, #0
 800a0de:	d0c1      	beq.n	800a064 <HAL_SPI_TransmitReceive+0x118>
 800a0e0:	6822      	ldr	r2, [r4, #0]
 800a0e2:	6893      	ldr	r3, [r2, #8]
 800a0e4:	079f      	lsls	r7, r3, #30
 800a0e6:	d506      	bpl.n	800a0f6 <HAL_SPI_TransmitReceive+0x1aa>
 800a0e8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0ea:	b29b      	uxth	r3, r3
 800a0ec:	b11b      	cbz	r3, 800a0f6 <HAL_SPI_TransmitReceive+0x1aa>
 800a0ee:	2e00      	cmp	r6, #0
 800a0f0:	f040 8093 	bne.w	800a21a <HAL_SPI_TransmitReceive+0x2ce>
 800a0f4:	2600      	movs	r6, #0
 800a0f6:	6893      	ldr	r3, [r2, #8]
 800a0f8:	f013 0301 	ands.w	r3, r3, #1
 800a0fc:	d019      	beq.n	800a132 <HAL_SPI_TransmitReceive+0x1e6>
 800a0fe:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a102:	b289      	uxth	r1, r1
 800a104:	b1a9      	cbz	r1, 800a132 <HAL_SPI_TransmitReceive+0x1e6>
 800a106:	f8b4 0046 	ldrh.w	r0, [r4, #70]	@ 0x46
 800a10a:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a10c:	b280      	uxth	r0, r0
 800a10e:	2801      	cmp	r0, #1
 800a110:	d977      	bls.n	800a202 <HAL_SPI_TransmitReceive+0x2b6>
 800a112:	68d0      	ldr	r0, [r2, #12]
 800a114:	f821 0b02 	strh.w	r0, [r1], #2
 800a118:	6421      	str	r1, [r4, #64]	@ 0x40
 800a11a:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a11e:	3902      	subs	r1, #2
 800a120:	b289      	uxth	r1, r1
 800a122:	f8a4 1046 	strh.w	r1, [r4, #70]	@ 0x46
 800a126:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a12a:	b289      	uxth	r1, r1
 800a12c:	2901      	cmp	r1, #1
 800a12e:	d935      	bls.n	800a19c <HAL_SPI_TransmitReceive+0x250>
 800a130:	461e      	mov	r6, r3
 800a132:	f7fb fb17 	bl	8005764 <HAL_GetTick>
 800a136:	e7cb      	b.n	800a0d0 <HAL_SPI_TransmitReceive+0x184>
 800a138:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a13a:	b29b      	uxth	r3, r3
 800a13c:	b923      	cbnz	r3, 800a148 <HAL_SPI_TransmitReceive+0x1fc>
 800a13e:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a142:	b29b      	uxth	r3, r3
 800a144:	2b00      	cmp	r3, #0
 800a146:	d08d      	beq.n	800a064 <HAL_SPI_TransmitReceive+0x118>
 800a148:	6822      	ldr	r2, [r4, #0]
 800a14a:	6893      	ldr	r3, [r2, #8]
 800a14c:	0798      	lsls	r0, r3, #30
 800a14e:	d50d      	bpl.n	800a16c <HAL_SPI_TransmitReceive+0x220>
 800a150:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a152:	b29b      	uxth	r3, r3
 800a154:	b153      	cbz	r3, 800a16c <HAL_SPI_TransmitReceive+0x220>
 800a156:	b146      	cbz	r6, 800a16a <HAL_SPI_TransmitReceive+0x21e>
 800a158:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800a15a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800a15e:	60d3      	str	r3, [r2, #12]
 800a160:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a162:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a164:	3b01      	subs	r3, #1
 800a166:	b29b      	uxth	r3, r3
 800a168:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a16a:	2600      	movs	r6, #0
 800a16c:	6893      	ldr	r3, [r2, #8]
 800a16e:	f013 0301 	ands.w	r3, r3, #1
 800a172:	d004      	beq.n	800a17e <HAL_SPI_TransmitReceive+0x232>
 800a174:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a178:	b289      	uxth	r1, r1
 800a17a:	2900      	cmp	r1, #0
 800a17c:	d178      	bne.n	800a270 <HAL_SPI_TransmitReceive+0x324>
 800a17e:	f7fb faf1 	bl	8005764 <HAL_GetTick>
 800a182:	9b06      	ldr	r3, [sp, #24]
 800a184:	1b40      	subs	r0, r0, r5
 800a186:	4298      	cmp	r0, r3
 800a188:	d3d6      	bcc.n	800a138 <HAL_SPI_TransmitReceive+0x1ec>
 800a18a:	2301      	movs	r3, #1
 800a18c:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a190:	2300      	movs	r3, #0
 800a192:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a196:	2003      	movs	r0, #3
 800a198:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a19c:	6851      	ldr	r1, [r2, #4]
 800a19e:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800a1a2:	6051      	str	r1, [r2, #4]
 800a1a4:	e7c4      	b.n	800a130 <HAL_SPI_TransmitReceive+0x1e4>
 800a1a6:	2e00      	cmp	r6, #0
 800a1a8:	f040 80a6 	bne.w	800a2f8 <HAL_SPI_TransmitReceive+0x3ac>
 800a1ac:	2600      	movs	r6, #0
 800a1ae:	6893      	ldr	r3, [r2, #8]
 800a1b0:	f013 0301 	ands.w	r3, r3, #1
 800a1b4:	d004      	beq.n	800a1c0 <HAL_SPI_TransmitReceive+0x274>
 800a1b6:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a1ba:	b289      	uxth	r1, r1
 800a1bc:	2900      	cmp	r1, #0
 800a1be:	d164      	bne.n	800a28a <HAL_SPI_TransmitReceive+0x33e>
 800a1c0:	f7fb fad0 	bl	8005764 <HAL_GetTick>
 800a1c4:	9b06      	ldr	r3, [sp, #24]
 800a1c6:	1b40      	subs	r0, r0, r5
 800a1c8:	4298      	cmp	r0, r3
 800a1ca:	d2de      	bcs.n	800a18a <HAL_SPI_TransmitReceive+0x23e>
 800a1cc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a1ce:	b29b      	uxth	r3, r3
 800a1d0:	b92b      	cbnz	r3, 800a1de <HAL_SPI_TransmitReceive+0x292>
 800a1d2:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a1d6:	b29b      	uxth	r3, r3
 800a1d8:	2b00      	cmp	r3, #0
 800a1da:	f43f af43 	beq.w	800a064 <HAL_SPI_TransmitReceive+0x118>
 800a1de:	6822      	ldr	r2, [r4, #0]
 800a1e0:	6893      	ldr	r3, [r2, #8]
 800a1e2:	079b      	lsls	r3, r3, #30
 800a1e4:	d5e3      	bpl.n	800a1ae <HAL_SPI_TransmitReceive+0x262>
 800a1e6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a1e8:	b29b      	uxth	r3, r3
 800a1ea:	2b00      	cmp	r3, #0
 800a1ec:	d0df      	beq.n	800a1ae <HAL_SPI_TransmitReceive+0x262>
 800a1ee:	e7da      	b.n	800a1a6 <HAL_SPI_TransmitReceive+0x25a>
 800a1f0:	f837 2b02 	ldrh.w	r2, [r7], #2
 800a1f4:	60da      	str	r2, [r3, #12]
 800a1f6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a1f8:	63a7      	str	r7, [r4, #56]	@ 0x38
 800a1fa:	3b01      	subs	r3, #1
 800a1fc:	b29b      	uxth	r3, r3
 800a1fe:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a200:	e6f9      	b.n	8009ff6 <HAL_SPI_TransmitReceive+0xaa>
 800a202:	7b12      	ldrb	r2, [r2, #12]
 800a204:	700a      	strb	r2, [r1, #0]
 800a206:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a20a:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a20c:	3a01      	subs	r2, #1
 800a20e:	3101      	adds	r1, #1
 800a210:	b292      	uxth	r2, r2
 800a212:	6421      	str	r1, [r4, #64]	@ 0x40
 800a214:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a218:	e78a      	b.n	800a130 <HAL_SPI_TransmitReceive+0x1e4>
 800a21a:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a21c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800a21e:	b289      	uxth	r1, r1
 800a220:	2901      	cmp	r1, #1
 800a222:	d908      	bls.n	800a236 <HAL_SPI_TransmitReceive+0x2ea>
 800a224:	f833 1b02 	ldrh.w	r1, [r3], #2
 800a228:	60d1      	str	r1, [r2, #12]
 800a22a:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a22c:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a22e:	1e8b      	subs	r3, r1, #2
 800a230:	b29b      	uxth	r3, r3
 800a232:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a234:	e75e      	b.n	800a0f4 <HAL_SPI_TransmitReceive+0x1a8>
 800a236:	781b      	ldrb	r3, [r3, #0]
 800a238:	7313      	strb	r3, [r2, #12]
 800a23a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a23c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a23e:	3b01      	subs	r3, #1
 800a240:	1c51      	adds	r1, r2, #1
 800a242:	b29b      	uxth	r3, r3
 800a244:	6822      	ldr	r2, [r4, #0]
 800a246:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a248:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a24a:	2600      	movs	r6, #0
 800a24c:	e753      	b.n	800a0f6 <HAL_SPI_TransmitReceive+0x1aa>
 800a24e:	2220      	movs	r2, #32
 800a250:	2300      	movs	r3, #0
 800a252:	6622      	str	r2, [r4, #96]	@ 0x60
 800a254:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a258:	2001      	movs	r0, #1
 800a25a:	e716      	b.n	800a08a <HAL_SPI_TransmitReceive+0x13e>
 800a25c:	783a      	ldrb	r2, [r7, #0]
 800a25e:	731a      	strb	r2, [r3, #12]
 800a260:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a262:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a264:	3b01      	subs	r3, #1
 800a266:	3201      	adds	r2, #1
 800a268:	b29b      	uxth	r3, r3
 800a26a:	63a2      	str	r2, [r4, #56]	@ 0x38
 800a26c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a26e:	e72a      	b.n	800a0c6 <HAL_SPI_TransmitReceive+0x17a>
 800a270:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a272:	68d2      	ldr	r2, [r2, #12]
 800a274:	f821 2b02 	strh.w	r2, [r1], #2
 800a278:	461e      	mov	r6, r3
 800a27a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a27e:	6421      	str	r1, [r4, #64]	@ 0x40
 800a280:	3b01      	subs	r3, #1
 800a282:	b29b      	uxth	r3, r3
 800a284:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a288:	e779      	b.n	800a17e <HAL_SPI_TransmitReceive+0x232>
 800a28a:	f8b4 0046 	ldrh.w	r0, [r4, #70]	@ 0x46
 800a28e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a290:	b280      	uxth	r0, r0
 800a292:	2801      	cmp	r0, #1
 800a294:	d923      	bls.n	800a2de <HAL_SPI_TransmitReceive+0x392>
 800a296:	68d0      	ldr	r0, [r2, #12]
 800a298:	f821 0b02 	strh.w	r0, [r1], #2
 800a29c:	6421      	str	r1, [r4, #64]	@ 0x40
 800a29e:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a2a2:	3902      	subs	r1, #2
 800a2a4:	b289      	uxth	r1, r1
 800a2a6:	f8a4 1046 	strh.w	r1, [r4, #70]	@ 0x46
 800a2aa:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a2ae:	b289      	uxth	r1, r1
 800a2b0:	2901      	cmp	r1, #1
 800a2b2:	d901      	bls.n	800a2b8 <HAL_SPI_TransmitReceive+0x36c>
 800a2b4:	461e      	mov	r6, r3
 800a2b6:	e783      	b.n	800a1c0 <HAL_SPI_TransmitReceive+0x274>
 800a2b8:	6851      	ldr	r1, [r2, #4]
 800a2ba:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800a2be:	6051      	str	r1, [r2, #4]
 800a2c0:	461e      	mov	r6, r3
 800a2c2:	e77d      	b.n	800a1c0 <HAL_SPI_TransmitReceive+0x274>
 800a2c4:	685a      	ldr	r2, [r3, #4]
 800a2c6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800a2ca:	605a      	str	r2, [r3, #4]
 800a2cc:	681a      	ldr	r2, [r3, #0]
 800a2ce:	0656      	lsls	r6, r2, #25
 800a2d0:	f53f aeec 	bmi.w	800a0ac <HAL_SPI_TransmitReceive+0x160>
 800a2d4:	681a      	ldr	r2, [r3, #0]
 800a2d6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800a2da:	601a      	str	r2, [r3, #0]
 800a2dc:	e6e6      	b.n	800a0ac <HAL_SPI_TransmitReceive+0x160>
 800a2de:	7b12      	ldrb	r2, [r2, #12]
 800a2e0:	700a      	strb	r2, [r1, #0]
 800a2e2:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a2e6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a2e8:	3a01      	subs	r2, #1
 800a2ea:	3101      	adds	r1, #1
 800a2ec:	b292      	uxth	r2, r2
 800a2ee:	6421      	str	r1, [r4, #64]	@ 0x40
 800a2f0:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a2f4:	461e      	mov	r6, r3
 800a2f6:	e763      	b.n	800a1c0 <HAL_SPI_TransmitReceive+0x274>
 800a2f8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a2fa:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800a2fc:	b29b      	uxth	r3, r3
 800a2fe:	2b01      	cmp	r3, #1
 800a300:	d909      	bls.n	800a316 <HAL_SPI_TransmitReceive+0x3ca>
 800a302:	460b      	mov	r3, r1
 800a304:	f833 1b02 	ldrh.w	r1, [r3], #2
 800a308:	60d1      	str	r1, [r2, #12]
 800a30a:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a30c:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a30e:	1e8b      	subs	r3, r1, #2
 800a310:	b29b      	uxth	r3, r3
 800a312:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a314:	e74a      	b.n	800a1ac <HAL_SPI_TransmitReceive+0x260>
 800a316:	780b      	ldrb	r3, [r1, #0]
 800a318:	7313      	strb	r3, [r2, #12]
 800a31a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a31c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a31e:	3b01      	subs	r3, #1
 800a320:	1c51      	adds	r1, r2, #1
 800a322:	b29b      	uxth	r3, r3
 800a324:	6822      	ldr	r2, [r4, #0]
 800a326:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a328:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a32a:	e73f      	b.n	800a1ac <HAL_SPI_TransmitReceive+0x260>

0800a32c <HAL_SPI_Receive>:
 800a32c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a330:	f890 605d 	ldrb.w	r6, [r0, #93]	@ 0x5d
 800a334:	2e01      	cmp	r6, #1
 800a336:	b084      	sub	sp, #16
 800a338:	f040 8095 	bne.w	800a466 <HAL_SPI_Receive+0x13a>
 800a33c:	461d      	mov	r5, r3
 800a33e:	4688      	mov	r8, r1
 800a340:	b2f3      	uxtb	r3, r6
 800a342:	2900      	cmp	r1, #0
 800a344:	f000 808b 	beq.w	800a45e <HAL_SPI_Receive+0x132>
 800a348:	4617      	mov	r7, r2
 800a34a:	2a00      	cmp	r2, #0
 800a34c:	f000 8087 	beq.w	800a45e <HAL_SPI_Receive+0x132>
 800a350:	6843      	ldr	r3, [r0, #4]
 800a352:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a356:	4604      	mov	r4, r0
 800a358:	d103      	bne.n	800a362 <HAL_SPI_Receive+0x36>
 800a35a:	6883      	ldr	r3, [r0, #8]
 800a35c:	2b00      	cmp	r3, #0
 800a35e:	f000 8127 	beq.w	800a5b0 <HAL_SPI_Receive+0x284>
 800a362:	f7fb f9ff 	bl	8005764 <HAL_GetTick>
 800a366:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800a36a:	2b01      	cmp	r3, #1
 800a36c:	4606      	mov	r6, r0
 800a36e:	d07a      	beq.n	800a466 <HAL_SPI_Receive+0x13a>
 800a370:	2001      	movs	r0, #1
 800a372:	68e2      	ldr	r2, [r4, #12]
 800a374:	6821      	ldr	r1, [r4, #0]
 800a376:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 800a37a:	2300      	movs	r3, #0
 800a37c:	2004      	movs	r0, #4
 800a37e:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 800a382:	f5b2 6fe0 	cmp.w	r2, #1792	@ 0x700
 800a386:	6623      	str	r3, [r4, #96]	@ 0x60
 800a388:	f8a4 7046 	strh.w	r7, [r4, #70]	@ 0x46
 800a38c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a38e:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
 800a392:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a394:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 800a396:	6848      	ldr	r0, [r1, #4]
 800a398:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
 800a39c:	f8a4 7044 	strh.w	r7, [r4, #68]	@ 0x44
 800a3a0:	460b      	mov	r3, r1
 800a3a2:	d965      	bls.n	800a470 <HAL_SPI_Receive+0x144>
 800a3a4:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 800a3a8:	6048      	str	r0, [r1, #4]
 800a3aa:	68a0      	ldr	r0, [r4, #8]
 800a3ac:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800a3b0:	f000 80cc 	beq.w	800a54c <HAL_SPI_Receive+0x220>
 800a3b4:	6808      	ldr	r0, [r1, #0]
 800a3b6:	0640      	lsls	r0, r0, #25
 800a3b8:	d465      	bmi.n	800a486 <HAL_SPI_Receive+0x15a>
 800a3ba:	6808      	ldr	r0, [r1, #0]
 800a3bc:	f040 0040 	orr.w	r0, r0, #64	@ 0x40
 800a3c0:	6008      	str	r0, [r1, #0]
 800a3c2:	f5b2 6fe0 	cmp.w	r2, #1792	@ 0x700
 800a3c6:	d85e      	bhi.n	800a486 <HAL_SPI_Receive+0x15a>
 800a3c8:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a3cc:	b292      	uxth	r2, r2
 800a3ce:	b1ea      	cbz	r2, 800a40c <HAL_SPI_Receive+0xe0>
 800a3d0:	1c69      	adds	r1, r5, #1
 800a3d2:	d011      	beq.n	800a3f8 <HAL_SPI_Receive+0xcc>
 800a3d4:	e0aa      	b.n	800a52c <HAL_SPI_Receive+0x200>
 800a3d6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a3d8:	7b1b      	ldrb	r3, [r3, #12]
 800a3da:	7013      	strb	r3, [r2, #0]
 800a3dc:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a3e0:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a3e2:	3a01      	subs	r2, #1
 800a3e4:	b292      	uxth	r2, r2
 800a3e6:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a3ea:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a3ee:	3101      	adds	r1, #1
 800a3f0:	b29b      	uxth	r3, r3
 800a3f2:	6421      	str	r1, [r4, #64]	@ 0x40
 800a3f4:	b153      	cbz	r3, 800a40c <HAL_SPI_Receive+0xe0>
 800a3f6:	6823      	ldr	r3, [r4, #0]
 800a3f8:	689a      	ldr	r2, [r3, #8]
 800a3fa:	07d2      	lsls	r2, r2, #31
 800a3fc:	d4eb      	bmi.n	800a3d6 <HAL_SPI_Receive+0xaa>
 800a3fe:	f7fb f9b1 	bl	8005764 <HAL_GetTick>
 800a402:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a406:	b29b      	uxth	r3, r3
 800a408:	2b00      	cmp	r3, #0
 800a40a:	d1f4      	bne.n	800a3f6 <HAL_SPI_Receive+0xca>
 800a40c:	6863      	ldr	r3, [r4, #4]
 800a40e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a412:	f000 80a8 	beq.w	800a566 <HAL_SPI_Receive+0x23a>
 800a416:	f7fb f9a5 	bl	8005764 <HAL_GetTick>
 800a41a:	19af      	adds	r7, r5, r6
 800a41c:	1a3f      	subs	r7, r7, r0
 800a41e:	f7fb f9a1 	bl	8005764 <HAL_GetTick>
 800a422:	4b88      	ldr	r3, [pc, #544]	@ (800a644 <HAL_SPI_Receive+0x318>)
 800a424:	681b      	ldr	r3, [r3, #0]
 800a426:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a42a:	fb07 f303 	mul.w	r3, r7, r3
 800a42e:	1c69      	adds	r1, r5, #1
 800a430:	4680      	mov	r8, r0
 800a432:	9303      	str	r3, [sp, #12]
 800a434:	f040 80c6 	bne.w	800a5c4 <HAL_SPI_Receive+0x298>
 800a438:	6823      	ldr	r3, [r4, #0]
 800a43a:	689a      	ldr	r2, [r3, #8]
 800a43c:	0612      	lsls	r2, r2, #24
 800a43e:	d4fc      	bmi.n	800a43a <HAL_SPI_Receive+0x10e>
 800a440:	6863      	ldr	r3, [r4, #4]
 800a442:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a446:	f000 809c 	beq.w	800a582 <HAL_SPI_Receive+0x256>
 800a44a:	2301      	movs	r3, #1
 800a44c:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a450:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a452:	2200      	movs	r2, #0
 800a454:	1a9b      	subs	r3, r3, r2
 800a456:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 800a45a:	bf18      	it	ne
 800a45c:	2301      	movne	r3, #1
 800a45e:	4618      	mov	r0, r3
 800a460:	b004      	add	sp, #16
 800a462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a466:	2302      	movs	r3, #2
 800a468:	4618      	mov	r0, r3
 800a46a:	b004      	add	sp, #16
 800a46c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a470:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 800a474:	6048      	str	r0, [r1, #4]
 800a476:	68a0      	ldr	r0, [r4, #8]
 800a478:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800a47c:	d066      	beq.n	800a54c <HAL_SPI_Receive+0x220>
 800a47e:	6808      	ldr	r0, [r1, #0]
 800a480:	0647      	lsls	r7, r0, #25
 800a482:	d59a      	bpl.n	800a3ba <HAL_SPI_Receive+0x8e>
 800a484:	e7a0      	b.n	800a3c8 <HAL_SPI_Receive+0x9c>
 800a486:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a48a:	b292      	uxth	r2, r2
 800a48c:	2a00      	cmp	r2, #0
 800a48e:	d0bd      	beq.n	800a40c <HAL_SPI_Receive+0xe0>
 800a490:	1c6f      	adds	r7, r5, #1
 800a492:	d12f      	bne.n	800a4f4 <HAL_SPI_Receive+0x1c8>
 800a494:	688b      	ldr	r3, [r1, #8]
 800a496:	07d8      	lsls	r0, r3, #31
 800a498:	d512      	bpl.n	800a4c0 <HAL_SPI_Receive+0x194>
 800a49a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a49c:	68ca      	ldr	r2, [r1, #12]
 800a49e:	f823 2b02 	strh.w	r2, [r3], #2
 800a4a2:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a4a6:	6423      	str	r3, [r4, #64]	@ 0x40
 800a4a8:	3a01      	subs	r2, #1
 800a4aa:	b292      	uxth	r2, r2
 800a4ac:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a4b0:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4b4:	b29b      	uxth	r3, r3
 800a4b6:	2b00      	cmp	r3, #0
 800a4b8:	d0a8      	beq.n	800a40c <HAL_SPI_Receive+0xe0>
 800a4ba:	688b      	ldr	r3, [r1, #8]
 800a4bc:	07d8      	lsls	r0, r3, #31
 800a4be:	d4ec      	bmi.n	800a49a <HAL_SPI_Receive+0x16e>
 800a4c0:	f7fb f950 	bl	8005764 <HAL_GetTick>
 800a4c4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4c8:	b29b      	uxth	r3, r3
 800a4ca:	2b00      	cmp	r3, #0
 800a4cc:	d09e      	beq.n	800a40c <HAL_SPI_Receive+0xe0>
 800a4ce:	6821      	ldr	r1, [r4, #0]
 800a4d0:	e7e0      	b.n	800a494 <HAL_SPI_Receive+0x168>
 800a4d2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a4d4:	68db      	ldr	r3, [r3, #12]
 800a4d6:	f822 3b02 	strh.w	r3, [r2], #2
 800a4da:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4de:	6422      	str	r2, [r4, #64]	@ 0x40
 800a4e0:	3b01      	subs	r3, #1
 800a4e2:	b29b      	uxth	r3, r3
 800a4e4:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a4e8:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a4ec:	b29b      	uxth	r3, r3
 800a4ee:	2b00      	cmp	r3, #0
 800a4f0:	d08c      	beq.n	800a40c <HAL_SPI_Receive+0xe0>
 800a4f2:	6823      	ldr	r3, [r4, #0]
 800a4f4:	689a      	ldr	r2, [r3, #8]
 800a4f6:	07d0      	lsls	r0, r2, #31
 800a4f8:	d4eb      	bmi.n	800a4d2 <HAL_SPI_Receive+0x1a6>
 800a4fa:	f7fb f933 	bl	8005764 <HAL_GetTick>
 800a4fe:	1b83      	subs	r3, r0, r6
 800a500:	42ab      	cmp	r3, r5
 800a502:	d3f1      	bcc.n	800a4e8 <HAL_SPI_Receive+0x1bc>
 800a504:	e01a      	b.n	800a53c <HAL_SPI_Receive+0x210>
 800a506:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a508:	7b1b      	ldrb	r3, [r3, #12]
 800a50a:	7013      	strb	r3, [r2, #0]
 800a50c:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a510:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a512:	3b01      	subs	r3, #1
 800a514:	3201      	adds	r2, #1
 800a516:	b29b      	uxth	r3, r3
 800a518:	6422      	str	r2, [r4, #64]	@ 0x40
 800a51a:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a51e:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a522:	b29b      	uxth	r3, r3
 800a524:	2b00      	cmp	r3, #0
 800a526:	f43f af71 	beq.w	800a40c <HAL_SPI_Receive+0xe0>
 800a52a:	6823      	ldr	r3, [r4, #0]
 800a52c:	689a      	ldr	r2, [r3, #8]
 800a52e:	07d7      	lsls	r7, r2, #31
 800a530:	d4e9      	bmi.n	800a506 <HAL_SPI_Receive+0x1da>
 800a532:	f7fb f917 	bl	8005764 <HAL_GetTick>
 800a536:	1b83      	subs	r3, r0, r6
 800a538:	42ab      	cmp	r3, r5
 800a53a:	d3f0      	bcc.n	800a51e <HAL_SPI_Receive+0x1f2>
 800a53c:	2301      	movs	r3, #1
 800a53e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a542:	2300      	movs	r3, #0
 800a544:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a548:	2303      	movs	r3, #3
 800a54a:	e788      	b.n	800a45e <HAL_SPI_Receive+0x132>
 800a54c:	6808      	ldr	r0, [r1, #0]
 800a54e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800a552:	6008      	str	r0, [r1, #0]
 800a554:	6808      	ldr	r0, [r1, #0]
 800a556:	f420 4080 	bic.w	r0, r0, #16384	@ 0x4000
 800a55a:	6008      	str	r0, [r1, #0]
 800a55c:	6808      	ldr	r0, [r1, #0]
 800a55e:	0640      	lsls	r0, r0, #25
 800a560:	f53f af2f 	bmi.w	800a3c2 <HAL_SPI_Receive+0x96>
 800a564:	e729      	b.n	800a3ba <HAL_SPI_Receive+0x8e>
 800a566:	68a3      	ldr	r3, [r4, #8]
 800a568:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a56c:	d003      	beq.n	800a576 <HAL_SPI_Receive+0x24a>
 800a56e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a572:	f47f af50 	bne.w	800a416 <HAL_SPI_Receive+0xea>
 800a576:	6822      	ldr	r2, [r4, #0]
 800a578:	6813      	ldr	r3, [r2, #0]
 800a57a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a57e:	6013      	str	r3, [r2, #0]
 800a580:	e749      	b.n	800a416 <HAL_SPI_Receive+0xea>
 800a582:	68a3      	ldr	r3, [r4, #8]
 800a584:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a588:	d003      	beq.n	800a592 <HAL_SPI_Receive+0x266>
 800a58a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a58e:	f47f af5c 	bne.w	800a44a <HAL_SPI_Receive+0x11e>
 800a592:	4632      	mov	r2, r6
 800a594:	4629      	mov	r1, r5
 800a596:	4620      	mov	r0, r4
 800a598:	f7ff fa14 	bl	80099c4 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 800a59c:	2800      	cmp	r0, #0
 800a59e:	f43f af54 	beq.w	800a44a <HAL_SPI_Receive+0x11e>
 800a5a2:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a5a4:	f043 0320 	orr.w	r3, r3, #32
 800a5a8:	6623      	str	r3, [r4, #96]	@ 0x60
 800a5aa:	2320      	movs	r3, #32
 800a5ac:	6623      	str	r3, [r4, #96]	@ 0x60
 800a5ae:	e74c      	b.n	800a44a <HAL_SPI_Receive+0x11e>
 800a5b0:	9500      	str	r5, [sp, #0]
 800a5b2:	2504      	movs	r5, #4
 800a5b4:	4613      	mov	r3, r2
 800a5b6:	f880 505d 	strb.w	r5, [r0, #93]	@ 0x5d
 800a5ba:	460a      	mov	r2, r1
 800a5bc:	f7ff fcc6 	bl	8009f4c <HAL_SPI_TransmitReceive>
 800a5c0:	4603      	mov	r3, r0
 800a5c2:	e74c      	b.n	800a45e <HAL_SPI_Receive+0x132>
 800a5c4:	6823      	ldr	r3, [r4, #0]
 800a5c6:	689b      	ldr	r3, [r3, #8]
 800a5c8:	061b      	lsls	r3, r3, #24
 800a5ca:	f57f af39 	bpl.w	800a440 <HAL_SPI_Receive+0x114>
 800a5ce:	f7fb f8c9 	bl	8005764 <HAL_GetTick>
 800a5d2:	eba0 0308 	sub.w	r3, r0, r8
 800a5d6:	42bb      	cmp	r3, r7
 800a5d8:	d20b      	bcs.n	800a5f2 <HAL_SPI_Receive+0x2c6>
 800a5da:	9a03      	ldr	r2, [sp, #12]
 800a5dc:	9b03      	ldr	r3, [sp, #12]
 800a5de:	3b01      	subs	r3, #1
 800a5e0:	9303      	str	r3, [sp, #12]
 800a5e2:	6823      	ldr	r3, [r4, #0]
 800a5e4:	689b      	ldr	r3, [r3, #8]
 800a5e6:	2a00      	cmp	r2, #0
 800a5e8:	bf08      	it	eq
 800a5ea:	2700      	moveq	r7, #0
 800a5ec:	061b      	lsls	r3, r3, #24
 800a5ee:	d4ee      	bmi.n	800a5ce <HAL_SPI_Receive+0x2a2>
 800a5f0:	e726      	b.n	800a440 <HAL_SPI_Receive+0x114>
 800a5f2:	e9d4 3100 	ldrd	r3, r1, [r4]
 800a5f6:	685a      	ldr	r2, [r3, #4]
 800a5f8:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 800a5fc:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800a600:	605a      	str	r2, [r3, #4]
 800a602:	d013      	beq.n	800a62c <HAL_SPI_Receive+0x300>
 800a604:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a606:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800a60a:	d107      	bne.n	800a61c <HAL_SPI_Receive+0x2f0>
 800a60c:	681a      	ldr	r2, [r3, #0]
 800a60e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800a612:	601a      	str	r2, [r3, #0]
 800a614:	681a      	ldr	r2, [r3, #0]
 800a616:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800a61a:	601a      	str	r2, [r3, #0]
 800a61c:	2301      	movs	r3, #1
 800a61e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a622:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a624:	f043 0320 	orr.w	r3, r3, #32
 800a628:	6623      	str	r3, [r4, #96]	@ 0x60
 800a62a:	e7be      	b.n	800a5aa <HAL_SPI_Receive+0x27e>
 800a62c:	68a2      	ldr	r2, [r4, #8]
 800a62e:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800a632:	d002      	beq.n	800a63a <HAL_SPI_Receive+0x30e>
 800a634:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800a638:	d1e4      	bne.n	800a604 <HAL_SPI_Receive+0x2d8>
 800a63a:	681a      	ldr	r2, [r3, #0]
 800a63c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a640:	601a      	str	r2, [r3, #0]
 800a642:	e7df      	b.n	800a604 <HAL_SPI_Receive+0x2d8>
 800a644:	20000034 	.word	0x20000034

0800a648 <HAL_SPI_ErrorCallback>:
 800a648:	4770      	bx	lr
 800a64a:	bf00      	nop

0800a64c <HAL_SPI_IRQHandler>:
 800a64c:	b530      	push	{r4, r5, lr}
 800a64e:	6802      	ldr	r2, [r0, #0]
 800a650:	6851      	ldr	r1, [r2, #4]
 800a652:	6893      	ldr	r3, [r2, #8]
 800a654:	f013 0f40 	tst.w	r3, #64	@ 0x40
 800a658:	b085      	sub	sp, #20
 800a65a:	4604      	mov	r4, r0
 800a65c:	f3c3 1580 	ubfx	r5, r3, #6, #1
 800a660:	d116      	bne.n	800a690 <HAL_SPI_IRQHandler+0x44>
 800a662:	f013 0f01 	tst.w	r3, #1
 800a666:	d153      	bne.n	800a710 <HAL_SPI_IRQHandler+0xc4>
 800a668:	0798      	lsls	r0, r3, #30
 800a66a:	d56a      	bpl.n	800a742 <HAL_SPI_IRQHandler+0xf6>
 800a66c:	0608      	lsls	r0, r1, #24
 800a66e:	d47c      	bmi.n	800a76a <HAL_SPI_IRQHandler+0x11e>
 800a670:	0698      	lsls	r0, r3, #26
 800a672:	d413      	bmi.n	800a69c <HAL_SPI_IRQHandler+0x50>
 800a674:	05db      	lsls	r3, r3, #23
 800a676:	d568      	bpl.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a678:	068d      	lsls	r5, r1, #26
 800a67a:	d566      	bpl.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a67c:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a67e:	2000      	movs	r0, #0
 800a680:	f043 0308 	orr.w	r3, r3, #8
 800a684:	6623      	str	r3, [r4, #96]	@ 0x60
 800a686:	9003      	str	r0, [sp, #12]
 800a688:	6893      	ldr	r3, [r2, #8]
 800a68a:	9303      	str	r3, [sp, #12]
 800a68c:	9b03      	ldr	r3, [sp, #12]
 800a68e:	e018      	b.n	800a6c2 <HAL_SPI_IRQHandler+0x76>
 800a690:	0798      	lsls	r0, r3, #30
 800a692:	d542      	bpl.n	800a71a <HAL_SPI_IRQHandler+0xce>
 800a694:	0608      	lsls	r0, r1, #24
 800a696:	d468      	bmi.n	800a76a <HAL_SPI_IRQHandler+0x11e>
 800a698:	0698      	lsls	r0, r3, #26
 800a69a:	d540      	bpl.n	800a71e <HAL_SPI_IRQHandler+0xd2>
 800a69c:	0688      	lsls	r0, r1, #26
 800a69e:	d554      	bpl.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a6a0:	2d00      	cmp	r5, #0
 800a6a2:	d156      	bne.n	800a752 <HAL_SPI_IRQHandler+0x106>
 800a6a4:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a6a6:	f040 0001 	orr.w	r0, r0, #1
 800a6aa:	6620      	str	r0, [r4, #96]	@ 0x60
 800a6ac:	2000      	movs	r0, #0
 800a6ae:	9002      	str	r0, [sp, #8]
 800a6b0:	6890      	ldr	r0, [r2, #8]
 800a6b2:	9002      	str	r0, [sp, #8]
 800a6b4:	6810      	ldr	r0, [r2, #0]
 800a6b6:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800a6ba:	6010      	str	r0, [r2, #0]
 800a6bc:	9802      	ldr	r0, [sp, #8]
 800a6be:	05db      	lsls	r3, r3, #23
 800a6c0:	d4dc      	bmi.n	800a67c <HAL_SPI_IRQHandler+0x30>
 800a6c2:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a6c4:	2b00      	cmp	r3, #0
 800a6c6:	d040      	beq.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a6c8:	6853      	ldr	r3, [r2, #4]
 800a6ca:	2001      	movs	r0, #1
 800a6cc:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800a6d0:	078d      	lsls	r5, r1, #30
 800a6d2:	6053      	str	r3, [r2, #4]
 800a6d4:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 800a6d8:	d059      	beq.n	800a78e <HAL_SPI_IRQHandler+0x142>
 800a6da:	6853      	ldr	r3, [r2, #4]
 800a6dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a6de:	f023 0303 	bic.w	r3, r3, #3
 800a6e2:	6053      	str	r3, [r2, #4]
 800a6e4:	b140      	cbz	r0, 800a6f8 <HAL_SPI_IRQHandler+0xac>
 800a6e6:	4b2c      	ldr	r3, [pc, #176]	@ (800a798 <HAL_SPI_IRQHandler+0x14c>)
 800a6e8:	6383      	str	r3, [r0, #56]	@ 0x38
 800a6ea:	f7fb fde9 	bl	80062c0 <HAL_DMA_Abort_IT>
 800a6ee:	b118      	cbz	r0, 800a6f8 <HAL_SPI_IRQHandler+0xac>
 800a6f0:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a6f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a6f6:	6623      	str	r3, [r4, #96]	@ 0x60
 800a6f8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800a6fa:	b330      	cbz	r0, 800a74a <HAL_SPI_IRQHandler+0xfe>
 800a6fc:	4b26      	ldr	r3, [pc, #152]	@ (800a798 <HAL_SPI_IRQHandler+0x14c>)
 800a6fe:	6383      	str	r3, [r0, #56]	@ 0x38
 800a700:	f7fb fdde 	bl	80062c0 <HAL_DMA_Abort_IT>
 800a704:	b308      	cbz	r0, 800a74a <HAL_SPI_IRQHandler+0xfe>
 800a706:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a708:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a70c:	6623      	str	r3, [r4, #96]	@ 0x60
 800a70e:	e01c      	b.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a710:	f011 0f40 	tst.w	r1, #64	@ 0x40
 800a714:	d0a8      	beq.n	800a668 <HAL_SPI_IRQHandler+0x1c>
 800a716:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a718:	e029      	b.n	800a76e <HAL_SPI_IRQHandler+0x122>
 800a71a:	069d      	lsls	r5, r3, #26
 800a71c:	d417      	bmi.n	800a74e <HAL_SPI_IRQHandler+0x102>
 800a71e:	0688      	lsls	r0, r1, #26
 800a720:	d513      	bpl.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a722:	f894 005d 	ldrb.w	r0, [r4, #93]	@ 0x5d
 800a726:	2803      	cmp	r0, #3
 800a728:	d017      	beq.n	800a75a <HAL_SPI_IRQHandler+0x10e>
 800a72a:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a72c:	f040 0004 	orr.w	r0, r0, #4
 800a730:	6620      	str	r0, [r4, #96]	@ 0x60
 800a732:	2000      	movs	r0, #0
 800a734:	9000      	str	r0, [sp, #0]
 800a736:	68d0      	ldr	r0, [r2, #12]
 800a738:	9000      	str	r0, [sp, #0]
 800a73a:	6890      	ldr	r0, [r2, #8]
 800a73c:	9000      	str	r0, [sp, #0]
 800a73e:	9800      	ldr	r0, [sp, #0]
 800a740:	e7bd      	b.n	800a6be <HAL_SPI_IRQHandler+0x72>
 800a742:	0698      	lsls	r0, r3, #26
 800a744:	d596      	bpl.n	800a674 <HAL_SPI_IRQHandler+0x28>
 800a746:	0688      	lsls	r0, r1, #26
 800a748:	d4ac      	bmi.n	800a6a4 <HAL_SPI_IRQHandler+0x58>
 800a74a:	b005      	add	sp, #20
 800a74c:	bd30      	pop	{r4, r5, pc}
 800a74e:	068d      	lsls	r5, r1, #26
 800a750:	d5fb      	bpl.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a752:	f894 005d 	ldrb.w	r0, [r4, #93]	@ 0x5d
 800a756:	2803      	cmp	r0, #3
 800a758:	d10d      	bne.n	800a776 <HAL_SPI_IRQHandler+0x12a>
 800a75a:	2300      	movs	r3, #0
 800a75c:	9301      	str	r3, [sp, #4]
 800a75e:	68d3      	ldr	r3, [r2, #12]
 800a760:	9301      	str	r3, [sp, #4]
 800a762:	6893      	ldr	r3, [r2, #8]
 800a764:	9301      	str	r3, [sp, #4]
 800a766:	9b01      	ldr	r3, [sp, #4]
 800a768:	e7ef      	b.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a76a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a76c:	4620      	mov	r0, r4
 800a76e:	b005      	add	sp, #20
 800a770:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a774:	4718      	bx	r3
 800a776:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a778:	f040 0004 	orr.w	r0, r0, #4
 800a77c:	6620      	str	r0, [r4, #96]	@ 0x60
 800a77e:	2000      	movs	r0, #0
 800a780:	9000      	str	r0, [sp, #0]
 800a782:	68d0      	ldr	r0, [r2, #12]
 800a784:	9000      	str	r0, [sp, #0]
 800a786:	6890      	ldr	r0, [r2, #8]
 800a788:	9000      	str	r0, [sp, #0]
 800a78a:	9800      	ldr	r0, [sp, #0]
 800a78c:	e78a      	b.n	800a6a4 <HAL_SPI_IRQHandler+0x58>
 800a78e:	4620      	mov	r0, r4
 800a790:	f7ff ff5a 	bl	800a648 <HAL_SPI_ErrorCallback>
 800a794:	e7d9      	b.n	800a74a <HAL_SPI_IRQHandler+0xfe>
 800a796:	bf00      	nop
 800a798:	0800a79d 	.word	0x0800a79d

0800a79c <SPI_DMAAbortOnError>:
 800a79c:	b508      	push	{r3, lr}
 800a79e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a7a0:	2300      	movs	r3, #0
 800a7a2:	f8a0 3046 	strh.w	r3, [r0, #70]	@ 0x46
 800a7a6:	87c3      	strh	r3, [r0, #62]	@ 0x3e
 800a7a8:	f7ff ff4e 	bl	800a648 <HAL_SPI_ErrorCallback>
 800a7ac:	bd08      	pop	{r3, pc}
 800a7ae:	bf00      	nop

0800a7b0 <HAL_TIM_Base_Init>:
 800a7b0:	2800      	cmp	r0, #0
 800a7b2:	d066      	beq.n	800a882 <HAL_TIM_Base_Init+0xd2>
 800a7b4:	b570      	push	{r4, r5, r6, lr}
 800a7b6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a7ba:	4604      	mov	r4, r0
 800a7bc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d04b      	beq.n	800a85c <HAL_TIM_Base_Init+0xac>
 800a7c4:	6822      	ldr	r2, [r4, #0]
 800a7c6:	4e30      	ldr	r6, [pc, #192]	@ (800a888 <HAL_TIM_Base_Init+0xd8>)
 800a7c8:	69a1      	ldr	r1, [r4, #24]
 800a7ca:	68e5      	ldr	r5, [r4, #12]
 800a7cc:	6860      	ldr	r0, [r4, #4]
 800a7ce:	2302      	movs	r3, #2
 800a7d0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a7d4:	42b2      	cmp	r2, r6
 800a7d6:	6813      	ldr	r3, [r2, #0]
 800a7d8:	d010      	beq.n	800a7fc <HAL_TIM_Base_Init+0x4c>
 800a7da:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 800a7de:	d042      	beq.n	800a866 <HAL_TIM_Base_Init+0xb6>
 800a7e0:	f506 56c0 	add.w	r6, r6, #6144	@ 0x1800
 800a7e4:	42b2      	cmp	r2, r6
 800a7e6:	d00d      	beq.n	800a804 <HAL_TIM_Base_Init+0x54>
 800a7e8:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 800a7ec:	42b2      	cmp	r2, r6
 800a7ee:	d009      	beq.n	800a804 <HAL_TIM_Base_Init+0x54>
 800a7f0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a7f4:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a7f6:	4319      	orrs	r1, r3
 800a7f8:	6290      	str	r0, [r2, #40]	@ 0x28
 800a7fa:	e00e      	b.n	800a81a <HAL_TIM_Base_Init+0x6a>
 800a7fc:	68a6      	ldr	r6, [r4, #8]
 800a7fe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a802:	4333      	orrs	r3, r6
 800a804:	6926      	ldr	r6, [r4, #16]
 800a806:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a808:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a80c:	4333      	orrs	r3, r6
 800a80e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a812:	6290      	str	r0, [r2, #40]	@ 0x28
 800a814:	4319      	orrs	r1, r3
 800a816:	6963      	ldr	r3, [r4, #20]
 800a818:	6313      	str	r3, [r2, #48]	@ 0x30
 800a81a:	6810      	ldr	r0, [r2, #0]
 800a81c:	2301      	movs	r3, #1
 800a81e:	f040 0004 	orr.w	r0, r0, #4
 800a822:	6010      	str	r0, [r2, #0]
 800a824:	6153      	str	r3, [r2, #20]
 800a826:	6011      	str	r1, [r2, #0]
 800a828:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
 800a82c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a830:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800a834:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800a838:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800a83c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800a840:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800a844:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800a848:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800a84c:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 800a850:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
 800a854:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a858:	2000      	movs	r0, #0
 800a85a:	bd70      	pop	{r4, r5, r6, pc}
 800a85c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
 800a860:	f7fa fc60 	bl	8005124 <HAL_TIM_Base_MspInit>
 800a864:	e7ae      	b.n	800a7c4 <HAL_TIM_Base_Init+0x14>
 800a866:	68a6      	ldr	r6, [r4, #8]
 800a868:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a86c:	4333      	orrs	r3, r6
 800a86e:	6926      	ldr	r6, [r4, #16]
 800a870:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a872:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a876:	4333      	orrs	r3, r6
 800a878:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a87c:	4319      	orrs	r1, r3
 800a87e:	6290      	str	r0, [r2, #40]	@ 0x28
 800a880:	e7cb      	b.n	800a81a <HAL_TIM_Base_Init+0x6a>
 800a882:	2001      	movs	r0, #1
 800a884:	4770      	bx	lr
 800a886:	bf00      	nop
 800a888:	40012c00 	.word	0x40012c00

0800a88c <HAL_TIM_Base_Start>:
 800a88c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a890:	2b01      	cmp	r3, #1
 800a892:	d10f      	bne.n	800a8b4 <HAL_TIM_Base_Start+0x28>
 800a894:	6803      	ldr	r3, [r0, #0]
 800a896:	4a0d      	ldr	r2, [pc, #52]	@ (800a8cc <HAL_TIM_Base_Start+0x40>)
 800a898:	2102      	movs	r1, #2
 800a89a:	4293      	cmp	r3, r2
 800a89c:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800a8a0:	d00a      	beq.n	800a8b8 <HAL_TIM_Base_Start+0x2c>
 800a8a2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a8a6:	d007      	beq.n	800a8b8 <HAL_TIM_Base_Start+0x2c>
 800a8a8:	681a      	ldr	r2, [r3, #0]
 800a8aa:	f042 0201 	orr.w	r2, r2, #1
 800a8ae:	601a      	str	r2, [r3, #0]
 800a8b0:	2000      	movs	r0, #0
 800a8b2:	4770      	bx	lr
 800a8b4:	2001      	movs	r0, #1
 800a8b6:	4770      	bx	lr
 800a8b8:	6899      	ldr	r1, [r3, #8]
 800a8ba:	4a05      	ldr	r2, [pc, #20]	@ (800a8d0 <HAL_TIM_Base_Start+0x44>)
 800a8bc:	400a      	ands	r2, r1
 800a8be:	2a06      	cmp	r2, #6
 800a8c0:	d0f6      	beq.n	800a8b0 <HAL_TIM_Base_Start+0x24>
 800a8c2:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800a8c6:	d1ef      	bne.n	800a8a8 <HAL_TIM_Base_Start+0x1c>
 800a8c8:	e7f2      	b.n	800a8b0 <HAL_TIM_Base_Start+0x24>
 800a8ca:	bf00      	nop
 800a8cc:	40012c00 	.word	0x40012c00
 800a8d0:	00010007 	.word	0x00010007

0800a8d4 <HAL_TIM_Base_Stop>:
 800a8d4:	6802      	ldr	r2, [r0, #0]
 800a8d6:	6a13      	ldr	r3, [r2, #32]
 800a8d8:	f003 3311 	and.w	r3, r3, #286331153	@ 0x11111111
 800a8dc:	f023 5388 	bic.w	r3, r3, #285212672	@ 0x11000000
 800a8e0:	b943      	cbnz	r3, 800a8f4 <HAL_TIM_Base_Stop+0x20>
 800a8e2:	6a11      	ldr	r1, [r2, #32]
 800a8e4:	f240 4344 	movw	r3, #1092	@ 0x444
 800a8e8:	4219      	tst	r1, r3
 800a8ea:	d103      	bne.n	800a8f4 <HAL_TIM_Base_Stop+0x20>
 800a8ec:	6813      	ldr	r3, [r2, #0]
 800a8ee:	f023 0301 	bic.w	r3, r3, #1
 800a8f2:	6013      	str	r3, [r2, #0]
 800a8f4:	2301      	movs	r3, #1
 800a8f6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800a8fa:	2000      	movs	r0, #0
 800a8fc:	4770      	bx	lr
 800a8fe:	bf00      	nop

0800a900 <HAL_TIM_Base_Start_IT>:
 800a900:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a904:	2b01      	cmp	r3, #1
 800a906:	d113      	bne.n	800a930 <HAL_TIM_Base_Start_IT+0x30>
 800a908:	6803      	ldr	r3, [r0, #0]
 800a90a:	490f      	ldr	r1, [pc, #60]	@ (800a948 <HAL_TIM_Base_Start_IT+0x48>)
 800a90c:	2202      	movs	r2, #2
 800a90e:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800a912:	68da      	ldr	r2, [r3, #12]
 800a914:	428b      	cmp	r3, r1
 800a916:	f042 0201 	orr.w	r2, r2, #1
 800a91a:	60da      	str	r2, [r3, #12]
 800a91c:	d00a      	beq.n	800a934 <HAL_TIM_Base_Start_IT+0x34>
 800a91e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a922:	d007      	beq.n	800a934 <HAL_TIM_Base_Start_IT+0x34>
 800a924:	681a      	ldr	r2, [r3, #0]
 800a926:	f042 0201 	orr.w	r2, r2, #1
 800a92a:	601a      	str	r2, [r3, #0]
 800a92c:	2000      	movs	r0, #0
 800a92e:	4770      	bx	lr
 800a930:	2001      	movs	r0, #1
 800a932:	4770      	bx	lr
 800a934:	6899      	ldr	r1, [r3, #8]
 800a936:	4a05      	ldr	r2, [pc, #20]	@ (800a94c <HAL_TIM_Base_Start_IT+0x4c>)
 800a938:	400a      	ands	r2, r1
 800a93a:	2a06      	cmp	r2, #6
 800a93c:	d0f6      	beq.n	800a92c <HAL_TIM_Base_Start_IT+0x2c>
 800a93e:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800a942:	d1ef      	bne.n	800a924 <HAL_TIM_Base_Start_IT+0x24>
 800a944:	e7f2      	b.n	800a92c <HAL_TIM_Base_Start_IT+0x2c>
 800a946:	bf00      	nop
 800a948:	40012c00 	.word	0x40012c00
 800a94c:	00010007 	.word	0x00010007

0800a950 <HAL_TIM_ConfigClockSource>:
 800a950:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 800a954:	2a01      	cmp	r2, #1
 800a956:	d070      	beq.n	800aa3a <HAL_TIM_ConfigClockSource+0xea>
 800a958:	4603      	mov	r3, r0
 800a95a:	b430      	push	{r4, r5}
 800a95c:	6802      	ldr	r2, [r0, #0]
 800a95e:	2402      	movs	r4, #2
 800a960:	2001      	movs	r0, #1
 800a962:	f883 403d 	strb.w	r4, [r3, #61]	@ 0x3d
 800a966:	f883 003c 	strb.w	r0, [r3, #60]	@ 0x3c
 800a96a:	6895      	ldr	r5, [r2, #8]
 800a96c:	4c50      	ldr	r4, [pc, #320]	@ (800aab0 <HAL_TIM_ConfigClockSource+0x160>)
 800a96e:	402c      	ands	r4, r5
 800a970:	6094      	str	r4, [r2, #8]
 800a972:	680c      	ldr	r4, [r1, #0]
 800a974:	2c60      	cmp	r4, #96	@ 0x60
 800a976:	d07c      	beq.n	800aa72 <HAL_TIM_ConfigClockSource+0x122>
 800a978:	d813      	bhi.n	800a9a2 <HAL_TIM_ConfigClockSource+0x52>
 800a97a:	2c40      	cmp	r4, #64	@ 0x40
 800a97c:	d05f      	beq.n	800aa3e <HAL_TIM_ConfigClockSource+0xee>
 800a97e:	d830      	bhi.n	800a9e2 <HAL_TIM_ConfigClockSource+0x92>
 800a980:	2c20      	cmp	r4, #32
 800a982:	d004      	beq.n	800a98e <HAL_TIM_ConfigClockSource+0x3e>
 800a984:	f200 8090 	bhi.w	800aaa8 <HAL_TIM_ConfigClockSource+0x158>
 800a988:	f034 0110 	bics.w	r1, r4, #16
 800a98c:	d121      	bne.n	800a9d2 <HAL_TIM_ConfigClockSource+0x82>
 800a98e:	6891      	ldr	r1, [r2, #8]
 800a990:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a994:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a998:	4321      	orrs	r1, r4
 800a99a:	f041 0107 	orr.w	r1, r1, #7
 800a99e:	6091      	str	r1, [r2, #8]
 800a9a0:	e016      	b.n	800a9d0 <HAL_TIM_ConfigClockSource+0x80>
 800a9a2:	f5b4 5f80 	cmp.w	r4, #4096	@ 0x1000
 800a9a6:	d013      	beq.n	800a9d0 <HAL_TIM_ConfigClockSource+0x80>
 800a9a8:	f5b4 5f00 	cmp.w	r4, #8192	@ 0x2000
 800a9ac:	d035      	beq.n	800aa1a <HAL_TIM_ConfigClockSource+0xca>
 800a9ae:	2c70      	cmp	r4, #112	@ 0x70
 800a9b0:	d10f      	bne.n	800a9d2 <HAL_TIM_ConfigClockSource+0x82>
 800a9b2:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 800a9b6:	6894      	ldr	r4, [r2, #8]
 800a9b8:	4328      	orrs	r0, r5
 800a9ba:	68cd      	ldr	r5, [r1, #12]
 800a9bc:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800a9c0:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 800a9c4:	4308      	orrs	r0, r1
 800a9c6:	6090      	str	r0, [r2, #8]
 800a9c8:	6891      	ldr	r1, [r2, #8]
 800a9ca:	f041 0177 	orr.w	r1, r1, #119	@ 0x77
 800a9ce:	6091      	str	r1, [r2, #8]
 800a9d0:	2000      	movs	r0, #0
 800a9d2:	2101      	movs	r1, #1
 800a9d4:	2200      	movs	r2, #0
 800a9d6:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
 800a9da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800a9de:	bc30      	pop	{r4, r5}
 800a9e0:	4770      	bx	lr
 800a9e2:	2c50      	cmp	r4, #80	@ 0x50
 800a9e4:	d1f5      	bne.n	800a9d2 <HAL_TIM_ConfigClockSource+0x82>
 800a9e6:	6848      	ldr	r0, [r1, #4]
 800a9e8:	68cc      	ldr	r4, [r1, #12]
 800a9ea:	6a11      	ldr	r1, [r2, #32]
 800a9ec:	f021 010a 	bic.w	r1, r1, #10
 800a9f0:	4308      	orrs	r0, r1
 800a9f2:	6a11      	ldr	r1, [r2, #32]
 800a9f4:	f021 0101 	bic.w	r1, r1, #1
 800a9f8:	6211      	str	r1, [r2, #32]
 800a9fa:	6991      	ldr	r1, [r2, #24]
 800a9fc:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 800aa00:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800aa04:	6191      	str	r1, [r2, #24]
 800aa06:	6210      	str	r0, [r2, #32]
 800aa08:	6891      	ldr	r1, [r2, #8]
 800aa0a:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800aa0e:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800aa12:	f041 0157 	orr.w	r1, r1, #87	@ 0x57
 800aa16:	6091      	str	r1, [r2, #8]
 800aa18:	e7da      	b.n	800a9d0 <HAL_TIM_ConfigClockSource+0x80>
 800aa1a:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 800aa1e:	6894      	ldr	r4, [r2, #8]
 800aa20:	4328      	orrs	r0, r5
 800aa22:	68cd      	ldr	r5, [r1, #12]
 800aa24:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800aa28:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 800aa2c:	4308      	orrs	r0, r1
 800aa2e:	6090      	str	r0, [r2, #8]
 800aa30:	6891      	ldr	r1, [r2, #8]
 800aa32:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800aa36:	6091      	str	r1, [r2, #8]
 800aa38:	e7ca      	b.n	800a9d0 <HAL_TIM_ConfigClockSource+0x80>
 800aa3a:	2002      	movs	r0, #2
 800aa3c:	4770      	bx	lr
 800aa3e:	6848      	ldr	r0, [r1, #4]
 800aa40:	68cc      	ldr	r4, [r1, #12]
 800aa42:	6a11      	ldr	r1, [r2, #32]
 800aa44:	f021 010a 	bic.w	r1, r1, #10
 800aa48:	4308      	orrs	r0, r1
 800aa4a:	6a11      	ldr	r1, [r2, #32]
 800aa4c:	f021 0101 	bic.w	r1, r1, #1
 800aa50:	6211      	str	r1, [r2, #32]
 800aa52:	6991      	ldr	r1, [r2, #24]
 800aa54:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 800aa58:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800aa5c:	6191      	str	r1, [r2, #24]
 800aa5e:	6210      	str	r0, [r2, #32]
 800aa60:	6891      	ldr	r1, [r2, #8]
 800aa62:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800aa66:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800aa6a:	f041 0147 	orr.w	r1, r1, #71	@ 0x47
 800aa6e:	6091      	str	r1, [r2, #8]
 800aa70:	e7ae      	b.n	800a9d0 <HAL_TIM_ConfigClockSource+0x80>
 800aa72:	6848      	ldr	r0, [r1, #4]
 800aa74:	68cc      	ldr	r4, [r1, #12]
 800aa76:	6a11      	ldr	r1, [r2, #32]
 800aa78:	f021 01a0 	bic.w	r1, r1, #160	@ 0xa0
 800aa7c:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
 800aa80:	6a10      	ldr	r0, [r2, #32]
 800aa82:	f020 0010 	bic.w	r0, r0, #16
 800aa86:	6210      	str	r0, [r2, #32]
 800aa88:	6990      	ldr	r0, [r2, #24]
 800aa8a:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 800aa8e:	ea40 3004 	orr.w	r0, r0, r4, lsl #12
 800aa92:	6190      	str	r0, [r2, #24]
 800aa94:	6211      	str	r1, [r2, #32]
 800aa96:	6891      	ldr	r1, [r2, #8]
 800aa98:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800aa9c:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800aaa0:	f041 0167 	orr.w	r1, r1, #103	@ 0x67
 800aaa4:	6091      	str	r1, [r2, #8]
 800aaa6:	e793      	b.n	800a9d0 <HAL_TIM_ConfigClockSource+0x80>
 800aaa8:	2c30      	cmp	r4, #48	@ 0x30
 800aaaa:	f43f af70 	beq.w	800a98e <HAL_TIM_ConfigClockSource+0x3e>
 800aaae:	e790      	b.n	800a9d2 <HAL_TIM_ConfigClockSource+0x82>
 800aab0:	ffce0088 	.word	0xffce0088

0800aab4 <HAL_TIM_OC_DelayElapsedCallback>:
 800aab4:	4770      	bx	lr
 800aab6:	bf00      	nop

0800aab8 <HAL_TIM_IC_CaptureCallback>:
 800aab8:	4770      	bx	lr
 800aaba:	bf00      	nop

0800aabc <HAL_TIM_PWM_PulseFinishedCallback>:
 800aabc:	4770      	bx	lr
 800aabe:	bf00      	nop

0800aac0 <HAL_TIM_TriggerCallback>:
 800aac0:	4770      	bx	lr
 800aac2:	bf00      	nop

0800aac4 <HAL_TIM_IRQHandler>:
 800aac4:	6803      	ldr	r3, [r0, #0]
 800aac6:	b570      	push	{r4, r5, r6, lr}
 800aac8:	68de      	ldr	r6, [r3, #12]
 800aaca:	691d      	ldr	r5, [r3, #16]
 800aacc:	07aa      	lsls	r2, r5, #30
 800aace:	4604      	mov	r4, r0
 800aad0:	d501      	bpl.n	800aad6 <HAL_TIM_IRQHandler+0x12>
 800aad2:	07b1      	lsls	r1, r6, #30
 800aad4:	d452      	bmi.n	800ab7c <HAL_TIM_IRQHandler+0xb8>
 800aad6:	076b      	lsls	r3, r5, #29
 800aad8:	d501      	bpl.n	800aade <HAL_TIM_IRQHandler+0x1a>
 800aada:	0770      	lsls	r0, r6, #29
 800aadc:	d43b      	bmi.n	800ab56 <HAL_TIM_IRQHandler+0x92>
 800aade:	0729      	lsls	r1, r5, #28
 800aae0:	d501      	bpl.n	800aae6 <HAL_TIM_IRQHandler+0x22>
 800aae2:	0732      	lsls	r2, r6, #28
 800aae4:	d425      	bmi.n	800ab32 <HAL_TIM_IRQHandler+0x6e>
 800aae6:	06e8      	lsls	r0, r5, #27
 800aae8:	d501      	bpl.n	800aaee <HAL_TIM_IRQHandler+0x2a>
 800aaea:	06f1      	lsls	r1, r6, #27
 800aaec:	d411      	bmi.n	800ab12 <HAL_TIM_IRQHandler+0x4e>
 800aaee:	07ea      	lsls	r2, r5, #31
 800aaf0:	d501      	bpl.n	800aaf6 <HAL_TIM_IRQHandler+0x32>
 800aaf2:	07f3      	lsls	r3, r6, #31
 800aaf4:	d464      	bmi.n	800abc0 <HAL_TIM_IRQHandler+0xfc>
 800aaf6:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
 800aafa:	d04c      	beq.n	800ab96 <HAL_TIM_IRQHandler+0xd2>
 800aafc:	0630      	lsls	r0, r6, #24
 800aafe:	d467      	bmi.n	800abd0 <HAL_TIM_IRQHandler+0x10c>
 800ab00:	0668      	lsls	r0, r5, #25
 800ab02:	d501      	bpl.n	800ab08 <HAL_TIM_IRQHandler+0x44>
 800ab04:	0671      	lsls	r1, r6, #25
 800ab06:	d46d      	bmi.n	800abe4 <HAL_TIM_IRQHandler+0x120>
 800ab08:	06aa      	lsls	r2, r5, #26
 800ab0a:	d501      	bpl.n	800ab10 <HAL_TIM_IRQHandler+0x4c>
 800ab0c:	06b3      	lsls	r3, r6, #26
 800ab0e:	d44e      	bmi.n	800abae <HAL_TIM_IRQHandler+0xea>
 800ab10:	bd70      	pop	{r4, r5, r6, pc}
 800ab12:	6823      	ldr	r3, [r4, #0]
 800ab14:	f06f 0210 	mvn.w	r2, #16
 800ab18:	611a      	str	r2, [r3, #16]
 800ab1a:	2208      	movs	r2, #8
 800ab1c:	7722      	strb	r2, [r4, #28]
 800ab1e:	69db      	ldr	r3, [r3, #28]
 800ab20:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800ab24:	4620      	mov	r0, r4
 800ab26:	d071      	beq.n	800ac0c <HAL_TIM_IRQHandler+0x148>
 800ab28:	f7ff ffc6 	bl	800aab8 <HAL_TIM_IC_CaptureCallback>
 800ab2c:	2300      	movs	r3, #0
 800ab2e:	7723      	strb	r3, [r4, #28]
 800ab30:	e7dd      	b.n	800aaee <HAL_TIM_IRQHandler+0x2a>
 800ab32:	6823      	ldr	r3, [r4, #0]
 800ab34:	f06f 0208 	mvn.w	r2, #8
 800ab38:	611a      	str	r2, [r3, #16]
 800ab3a:	2204      	movs	r2, #4
 800ab3c:	7722      	strb	r2, [r4, #28]
 800ab3e:	69db      	ldr	r3, [r3, #28]
 800ab40:	079b      	lsls	r3, r3, #30
 800ab42:	4620      	mov	r0, r4
 800ab44:	d15f      	bne.n	800ac06 <HAL_TIM_IRQHandler+0x142>
 800ab46:	f7ff ffb5 	bl	800aab4 <HAL_TIM_OC_DelayElapsedCallback>
 800ab4a:	4620      	mov	r0, r4
 800ab4c:	f7ff ffb6 	bl	800aabc <HAL_TIM_PWM_PulseFinishedCallback>
 800ab50:	2300      	movs	r3, #0
 800ab52:	7723      	strb	r3, [r4, #28]
 800ab54:	e7c7      	b.n	800aae6 <HAL_TIM_IRQHandler+0x22>
 800ab56:	6823      	ldr	r3, [r4, #0]
 800ab58:	f06f 0204 	mvn.w	r2, #4
 800ab5c:	611a      	str	r2, [r3, #16]
 800ab5e:	2202      	movs	r2, #2
 800ab60:	7722      	strb	r2, [r4, #28]
 800ab62:	699b      	ldr	r3, [r3, #24]
 800ab64:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800ab68:	4620      	mov	r0, r4
 800ab6a:	d149      	bne.n	800ac00 <HAL_TIM_IRQHandler+0x13c>
 800ab6c:	f7ff ffa2 	bl	800aab4 <HAL_TIM_OC_DelayElapsedCallback>
 800ab70:	4620      	mov	r0, r4
 800ab72:	f7ff ffa3 	bl	800aabc <HAL_TIM_PWM_PulseFinishedCallback>
 800ab76:	2300      	movs	r3, #0
 800ab78:	7723      	strb	r3, [r4, #28]
 800ab7a:	e7b0      	b.n	800aade <HAL_TIM_IRQHandler+0x1a>
 800ab7c:	f06f 0202 	mvn.w	r2, #2
 800ab80:	611a      	str	r2, [r3, #16]
 800ab82:	2201      	movs	r2, #1
 800ab84:	7702      	strb	r2, [r0, #28]
 800ab86:	699b      	ldr	r3, [r3, #24]
 800ab88:	079a      	lsls	r2, r3, #30
 800ab8a:	d033      	beq.n	800abf4 <HAL_TIM_IRQHandler+0x130>
 800ab8c:	f7ff ff94 	bl	800aab8 <HAL_TIM_IC_CaptureCallback>
 800ab90:	2300      	movs	r3, #0
 800ab92:	7723      	strb	r3, [r4, #28]
 800ab94:	e79f      	b.n	800aad6 <HAL_TIM_IRQHandler+0x12>
 800ab96:	05ea      	lsls	r2, r5, #23
 800ab98:	d5b2      	bpl.n	800ab00 <HAL_TIM_IRQHandler+0x3c>
 800ab9a:	0633      	lsls	r3, r6, #24
 800ab9c:	d5b0      	bpl.n	800ab00 <HAL_TIM_IRQHandler+0x3c>
 800ab9e:	6823      	ldr	r3, [r4, #0]
 800aba0:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800aba4:	611a      	str	r2, [r3, #16]
 800aba6:	4620      	mov	r0, r4
 800aba8:	f000 f86c 	bl	800ac84 <HAL_TIMEx_Break2Callback>
 800abac:	e7a8      	b.n	800ab00 <HAL_TIM_IRQHandler+0x3c>
 800abae:	6823      	ldr	r3, [r4, #0]
 800abb0:	f06f 0220 	mvn.w	r2, #32
 800abb4:	4620      	mov	r0, r4
 800abb6:	611a      	str	r2, [r3, #16]
 800abb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800abbc:	f000 b85e 	b.w	800ac7c <HAL_TIMEx_CommutCallback>
 800abc0:	6823      	ldr	r3, [r4, #0]
 800abc2:	f06f 0201 	mvn.w	r2, #1
 800abc6:	611a      	str	r2, [r3, #16]
 800abc8:	4620      	mov	r0, r4
 800abca:	f7f7 fb53 	bl	8002274 <HAL_TIM_PeriodElapsedCallback>
 800abce:	e792      	b.n	800aaf6 <HAL_TIM_IRQHandler+0x32>
 800abd0:	6823      	ldr	r3, [r4, #0]
 800abd2:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800abd6:	611a      	str	r2, [r3, #16]
 800abd8:	4620      	mov	r0, r4
 800abda:	f000 f851 	bl	800ac80 <HAL_TIMEx_BreakCallback>
 800abde:	05e9      	lsls	r1, r5, #23
 800abe0:	d58e      	bpl.n	800ab00 <HAL_TIM_IRQHandler+0x3c>
 800abe2:	e7dc      	b.n	800ab9e <HAL_TIM_IRQHandler+0xda>
 800abe4:	6823      	ldr	r3, [r4, #0]
 800abe6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800abea:	611a      	str	r2, [r3, #16]
 800abec:	4620      	mov	r0, r4
 800abee:	f7ff ff67 	bl	800aac0 <HAL_TIM_TriggerCallback>
 800abf2:	e789      	b.n	800ab08 <HAL_TIM_IRQHandler+0x44>
 800abf4:	f7ff ff5e 	bl	800aab4 <HAL_TIM_OC_DelayElapsedCallback>
 800abf8:	4620      	mov	r0, r4
 800abfa:	f7ff ff5f 	bl	800aabc <HAL_TIM_PWM_PulseFinishedCallback>
 800abfe:	e7c7      	b.n	800ab90 <HAL_TIM_IRQHandler+0xcc>
 800ac00:	f7ff ff5a 	bl	800aab8 <HAL_TIM_IC_CaptureCallback>
 800ac04:	e7b7      	b.n	800ab76 <HAL_TIM_IRQHandler+0xb2>
 800ac06:	f7ff ff57 	bl	800aab8 <HAL_TIM_IC_CaptureCallback>
 800ac0a:	e7a1      	b.n	800ab50 <HAL_TIM_IRQHandler+0x8c>
 800ac0c:	f7ff ff52 	bl	800aab4 <HAL_TIM_OC_DelayElapsedCallback>
 800ac10:	4620      	mov	r0, r4
 800ac12:	f7ff ff53 	bl	800aabc <HAL_TIM_PWM_PulseFinishedCallback>
 800ac16:	e789      	b.n	800ab2c <HAL_TIM_IRQHandler+0x68>

0800ac18 <HAL_TIMEx_MasterConfigSynchronization>:
 800ac18:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 800ac1c:	2a01      	cmp	r2, #1
 800ac1e:	d028      	beq.n	800ac72 <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800ac20:	b470      	push	{r4, r5, r6}
 800ac22:	4603      	mov	r3, r0
 800ac24:	4e14      	ldr	r6, [pc, #80]	@ (800ac78 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 800ac26:	6800      	ldr	r0, [r0, #0]
 800ac28:	2202      	movs	r2, #2
 800ac2a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ac2e:	42b0      	cmp	r0, r6
 800ac30:	6842      	ldr	r2, [r0, #4]
 800ac32:	680d      	ldr	r5, [r1, #0]
 800ac34:	6884      	ldr	r4, [r0, #8]
 800ac36:	d00e      	beq.n	800ac56 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 800ac38:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ac3c:	432a      	orrs	r2, r5
 800ac3e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800ac42:	6042      	str	r2, [r0, #4]
 800ac44:	d00f      	beq.n	800ac66 <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 800ac46:	2000      	movs	r0, #0
 800ac48:	2201      	movs	r2, #1
 800ac4a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ac4e:	f883 003c 	strb.w	r0, [r3, #60]	@ 0x3c
 800ac52:	bc70      	pop	{r4, r5, r6}
 800ac54:	4770      	bx	lr
 800ac56:	684e      	ldr	r6, [r1, #4]
 800ac58:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800ac5c:	4332      	orrs	r2, r6
 800ac5e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ac62:	4315      	orrs	r5, r2
 800ac64:	6045      	str	r5, [r0, #4]
 800ac66:	688a      	ldr	r2, [r1, #8]
 800ac68:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
 800ac6c:	4314      	orrs	r4, r2
 800ac6e:	6084      	str	r4, [r0, #8]
 800ac70:	e7e9      	b.n	800ac46 <HAL_TIMEx_MasterConfigSynchronization+0x2e>
 800ac72:	2002      	movs	r0, #2
 800ac74:	4770      	bx	lr
 800ac76:	bf00      	nop
 800ac78:	40012c00 	.word	0x40012c00

0800ac7c <HAL_TIMEx_CommutCallback>:
 800ac7c:	4770      	bx	lr
 800ac7e:	bf00      	nop

0800ac80 <HAL_TIMEx_BreakCallback>:
 800ac80:	4770      	bx	lr
 800ac82:	bf00      	nop

0800ac84 <HAL_TIMEx_Break2Callback>:
 800ac84:	4770      	bx	lr
 800ac86:	bf00      	nop

0800ac88 <HAL_UART_Transmit_DMA>:
 800ac88:	b570      	push	{r4, r5, r6, lr}
 800ac8a:	f8d0 6088 	ldr.w	r6, [r0, #136]	@ 0x88
 800ac8e:	2e20      	cmp	r6, #32
 800ac90:	d124      	bne.n	800acdc <HAL_UART_Transmit_DMA+0x54>
 800ac92:	4604      	mov	r4, r0
 800ac94:	b301      	cbz	r1, 800acd8 <HAL_UART_Transmit_DMA+0x50>
 800ac96:	4613      	mov	r3, r2
 800ac98:	b1f2      	cbz	r2, 800acd8 <HAL_UART_Transmit_DMA+0x50>
 800ac9a:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
 800ac9e:	2200      	movs	r2, #0
 800aca0:	6501      	str	r1, [r0, #80]	@ 0x50
 800aca2:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 800aca6:	f8a0 3054 	strh.w	r3, [r0, #84]	@ 0x54
 800acaa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 800acac:	2521      	movs	r5, #33	@ 0x21
 800acae:	f8c4 5088 	str.w	r5, [r4, #136]	@ 0x88
 800acb2:	6825      	ldr	r5, [r4, #0]
 800acb4:	b1a8      	cbz	r0, 800ace2 <HAL_UART_Transmit_DMA+0x5a>
 800acb6:	6382      	str	r2, [r0, #56]	@ 0x38
 800acb8:	f105 0228 	add.w	r2, r5, #40	@ 0x28
 800acbc:	4d11      	ldr	r5, [pc, #68]	@ (800ad04 <HAL_UART_Transmit_DMA+0x7c>)
 800acbe:	62c5      	str	r5, [r0, #44]	@ 0x2c
 800acc0:	4d11      	ldr	r5, [pc, #68]	@ (800ad08 <HAL_UART_Transmit_DMA+0x80>)
 800acc2:	6305      	str	r5, [r0, #48]	@ 0x30
 800acc4:	4d11      	ldr	r5, [pc, #68]	@ (800ad0c <HAL_UART_Transmit_DMA+0x84>)
 800acc6:	6345      	str	r5, [r0, #52]	@ 0x34
 800acc8:	f7fb fa6a 	bl	80061a0 <HAL_DMA_Start_IT>
 800accc:	b140      	cbz	r0, 800ace0 <HAL_UART_Transmit_DMA+0x58>
 800acce:	2310      	movs	r3, #16
 800acd0:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800acd4:	f8c4 6088 	str.w	r6, [r4, #136]	@ 0x88
 800acd8:	2001      	movs	r0, #1
 800acda:	bd70      	pop	{r4, r5, r6, pc}
 800acdc:	2002      	movs	r0, #2
 800acde:	bd70      	pop	{r4, r5, r6, pc}
 800ace0:	6825      	ldr	r5, [r4, #0]
 800ace2:	2340      	movs	r3, #64	@ 0x40
 800ace4:	622b      	str	r3, [r5, #32]
 800ace6:	f105 0308 	add.w	r3, r5, #8
 800acea:	e853 3f00 	ldrex	r3, [r3]
 800acee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800acf2:	f105 0108 	add.w	r1, r5, #8
 800acf6:	e841 3200 	strex	r2, r3, [r1]
 800acfa:	2a00      	cmp	r2, #0
 800acfc:	d1f3      	bne.n	800ace6 <HAL_UART_Transmit_DMA+0x5e>
 800acfe:	2000      	movs	r0, #0
 800ad00:	bd70      	pop	{r4, r5, r6, pc}
 800ad02:	bf00      	nop
 800ad04:	0800ae3d 	.word	0x0800ae3d
 800ad08:	0800ae85 	.word	0x0800ae85
 800ad0c:	0800ae99 	.word	0x0800ae99

0800ad10 <HAL_UART_Abort>:
 800ad10:	6803      	ldr	r3, [r0, #0]
 800ad12:	b510      	push	{r4, lr}
 800ad14:	4604      	mov	r4, r0
 800ad16:	e853 2f00 	ldrex	r2, [r3]
 800ad1a:	f422 72f0 	bic.w	r2, r2, #480	@ 0x1e0
 800ad1e:	e843 2100 	strex	r1, r2, [r3]
 800ad22:	2900      	cmp	r1, #0
 800ad24:	d1f7      	bne.n	800ad16 <HAL_UART_Abort+0x6>
 800ad26:	4843      	ldr	r0, [pc, #268]	@ (800ae34 <HAL_UART_Abort+0x124>)
 800ad28:	f103 0208 	add.w	r2, r3, #8
 800ad2c:	e852 2f00 	ldrex	r2, [r2]
 800ad30:	4002      	ands	r2, r0
 800ad32:	f103 0c08 	add.w	ip, r3, #8
 800ad36:	e84c 2100 	strex	r1, r2, [ip]
 800ad3a:	2900      	cmp	r1, #0
 800ad3c:	d1f4      	bne.n	800ad28 <HAL_UART_Abort+0x18>
 800ad3e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800ad40:	2a01      	cmp	r2, #1
 800ad42:	d052      	beq.n	800adea <HAL_UART_Abort+0xda>
 800ad44:	6899      	ldr	r1, [r3, #8]
 800ad46:	0608      	lsls	r0, r1, #24
 800ad48:	461a      	mov	r2, r3
 800ad4a:	d420      	bmi.n	800ad8e <HAL_UART_Abort+0x7e>
 800ad4c:	6899      	ldr	r1, [r3, #8]
 800ad4e:	0649      	lsls	r1, r1, #25
 800ad50:	d435      	bmi.n	800adbe <HAL_UART_Abort+0xae>
 800ad52:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 800ad54:	2300      	movs	r3, #0
 800ad56:	200f      	movs	r0, #15
 800ad58:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
 800ad5c:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
 800ad60:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800ad64:	6210      	str	r0, [r2, #32]
 800ad66:	d103      	bne.n	800ad70 <HAL_UART_Abort+0x60>
 800ad68:	6993      	ldr	r3, [r2, #24]
 800ad6a:	f043 0310 	orr.w	r3, r3, #16
 800ad6e:	6193      	str	r3, [r2, #24]
 800ad70:	6991      	ldr	r1, [r2, #24]
 800ad72:	2300      	movs	r3, #0
 800ad74:	2020      	movs	r0, #32
 800ad76:	f041 0108 	orr.w	r1, r1, #8
 800ad7a:	6191      	str	r1, [r2, #24]
 800ad7c:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800ad80:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800ad84:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800ad86:	4618      	mov	r0, r3
 800ad88:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800ad8c:	bd10      	pop	{r4, pc}
 800ad8e:	f103 0208 	add.w	r2, r3, #8
 800ad92:	e852 2f00 	ldrex	r2, [r2]
 800ad96:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800ad9a:	f103 0008 	add.w	r0, r3, #8
 800ad9e:	e840 2100 	strex	r1, r2, [r0]
 800ada2:	2900      	cmp	r1, #0
 800ada4:	d1f3      	bne.n	800ad8e <HAL_UART_Abort+0x7e>
 800ada6:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800ada8:	b128      	cbz	r0, 800adb6 <HAL_UART_Abort+0xa6>
 800adaa:	2300      	movs	r3, #0
 800adac:	6383      	str	r3, [r0, #56]	@ 0x38
 800adae:	f7fb fa4f 	bl	8006250 <HAL_DMA_Abort>
 800adb2:	bb68      	cbnz	r0, 800ae10 <HAL_UART_Abort+0x100>
 800adb4:	6823      	ldr	r3, [r4, #0]
 800adb6:	6899      	ldr	r1, [r3, #8]
 800adb8:	0649      	lsls	r1, r1, #25
 800adba:	461a      	mov	r2, r3
 800adbc:	d5c9      	bpl.n	800ad52 <HAL_UART_Abort+0x42>
 800adbe:	f103 0208 	add.w	r2, r3, #8
 800adc2:	e852 2f00 	ldrex	r2, [r2]
 800adc6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800adca:	f103 0008 	add.w	r0, r3, #8
 800adce:	e840 2100 	strex	r1, r2, [r0]
 800add2:	2900      	cmp	r1, #0
 800add4:	d1f3      	bne.n	800adbe <HAL_UART_Abort+0xae>
 800add6:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800adda:	b1b8      	cbz	r0, 800ae0c <HAL_UART_Abort+0xfc>
 800addc:	2300      	movs	r3, #0
 800adde:	6383      	str	r3, [r0, #56]	@ 0x38
 800ade0:	f7fb fa36 	bl	8006250 <HAL_DMA_Abort>
 800ade4:	b9f0      	cbnz	r0, 800ae24 <HAL_UART_Abort+0x114>
 800ade6:	6822      	ldr	r2, [r4, #0]
 800ade8:	e7b3      	b.n	800ad52 <HAL_UART_Abort+0x42>
 800adea:	e853 2f00 	ldrex	r2, [r3]
 800adee:	f022 0210 	bic.w	r2, r2, #16
 800adf2:	e843 2100 	strex	r1, r2, [r3]
 800adf6:	2900      	cmp	r1, #0
 800adf8:	d0a4      	beq.n	800ad44 <HAL_UART_Abort+0x34>
 800adfa:	e853 2f00 	ldrex	r2, [r3]
 800adfe:	f022 0210 	bic.w	r2, r2, #16
 800ae02:	e843 2100 	strex	r1, r2, [r3]
 800ae06:	2900      	cmp	r1, #0
 800ae08:	d1ef      	bne.n	800adea <HAL_UART_Abort+0xda>
 800ae0a:	e79b      	b.n	800ad44 <HAL_UART_Abort+0x34>
 800ae0c:	461a      	mov	r2, r3
 800ae0e:	e7a0      	b.n	800ad52 <HAL_UART_Abort+0x42>
 800ae10:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800ae12:	f7fb fad9 	bl	80063c8 <HAL_DMA_GetError>
 800ae16:	2820      	cmp	r0, #32
 800ae18:	d1cc      	bne.n	800adb4 <HAL_UART_Abort+0xa4>
 800ae1a:	2310      	movs	r3, #16
 800ae1c:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800ae20:	2003      	movs	r0, #3
 800ae22:	bd10      	pop	{r4, pc}
 800ae24:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800ae28:	f7fb face 	bl	80063c8 <HAL_DMA_GetError>
 800ae2c:	2820      	cmp	r0, #32
 800ae2e:	d1da      	bne.n	800ade6 <HAL_UART_Abort+0xd6>
 800ae30:	e7f3      	b.n	800ae1a <HAL_UART_Abort+0x10a>
 800ae32:	bf00      	nop
 800ae34:	ef7ffffe 	.word	0xef7ffffe

0800ae38 <HAL_UART_TxCpltCallback>:
 800ae38:	4770      	bx	lr
 800ae3a:	bf00      	nop

0800ae3c <UART_DMATransmitCplt>:
 800ae3c:	b508      	push	{r3, lr}
 800ae3e:	6803      	ldr	r3, [r0, #0]
 800ae40:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	f013 0320 	ands.w	r3, r3, #32
 800ae48:	d117      	bne.n	800ae7a <UART_DMATransmitCplt+0x3e>
 800ae4a:	6802      	ldr	r2, [r0, #0]
 800ae4c:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
 800ae50:	f102 0308 	add.w	r3, r2, #8
 800ae54:	e853 3f00 	ldrex	r3, [r3]
 800ae58:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ae5c:	f102 0008 	add.w	r0, r2, #8
 800ae60:	e840 3100 	strex	r1, r3, [r0]
 800ae64:	2900      	cmp	r1, #0
 800ae66:	d1f3      	bne.n	800ae50 <UART_DMATransmitCplt+0x14>
 800ae68:	e852 3f00 	ldrex	r3, [r2]
 800ae6c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ae70:	e842 3100 	strex	r1, r3, [r2]
 800ae74:	2900      	cmp	r1, #0
 800ae76:	d1f7      	bne.n	800ae68 <UART_DMATransmitCplt+0x2c>
 800ae78:	bd08      	pop	{r3, pc}
 800ae7a:	f7ff ffdd 	bl	800ae38 <HAL_UART_TxCpltCallback>
 800ae7e:	bd08      	pop	{r3, pc}

0800ae80 <HAL_UART_TxHalfCpltCallback>:
 800ae80:	4770      	bx	lr
 800ae82:	bf00      	nop

0800ae84 <UART_DMATxHalfCplt>:
 800ae84:	b508      	push	{r3, lr}
 800ae86:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ae88:	f7ff fffa 	bl	800ae80 <HAL_UART_TxHalfCpltCallback>
 800ae8c:	bd08      	pop	{r3, pc}
 800ae8e:	bf00      	nop

0800ae90 <HAL_UART_RxHalfCpltCallback>:
 800ae90:	4770      	bx	lr
 800ae92:	bf00      	nop

0800ae94 <HAL_UART_ErrorCallback>:
 800ae94:	4770      	bx	lr
 800ae96:	bf00      	nop

0800ae98 <UART_DMAError>:
 800ae98:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ae9a:	6803      	ldr	r3, [r0, #0]
 800ae9c:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 800aea0:	b510      	push	{r4, lr}
 800aea2:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
 800aea6:	689a      	ldr	r2, [r3, #8]
 800aea8:	0612      	lsls	r2, r2, #24
 800aeaa:	d501      	bpl.n	800aeb0 <UART_DMAError+0x18>
 800aeac:	2921      	cmp	r1, #33	@ 0x21
 800aeae:	d00d      	beq.n	800aecc <UART_DMAError+0x34>
 800aeb0:	689a      	ldr	r2, [r3, #8]
 800aeb2:	0652      	lsls	r2, r2, #25
 800aeb4:	d501      	bpl.n	800aeba <UART_DMAError+0x22>
 800aeb6:	2c22      	cmp	r4, #34	@ 0x22
 800aeb8:	d023      	beq.n	800af02 <UART_DMAError+0x6a>
 800aeba:	f8d0 3090 	ldr.w	r3, [r0, #144]	@ 0x90
 800aebe:	f043 0310 	orr.w	r3, r3, #16
 800aec2:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 800aec6:	f7ff ffe5 	bl	800ae94 <HAL_UART_ErrorCallback>
 800aeca:	bd10      	pop	{r4, pc}
 800aecc:	2200      	movs	r2, #0
 800aece:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
 800aed2:	e853 2f00 	ldrex	r2, [r3]
 800aed6:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 800aeda:	e843 2100 	strex	r1, r2, [r3]
 800aede:	2900      	cmp	r1, #0
 800aee0:	d1f7      	bne.n	800aed2 <UART_DMAError+0x3a>
 800aee2:	f103 0208 	add.w	r2, r3, #8
 800aee6:	e852 2f00 	ldrex	r2, [r2]
 800aeea:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800aeee:	f103 0c08 	add.w	ip, r3, #8
 800aef2:	e84c 2100 	strex	r1, r2, [ip]
 800aef6:	2900      	cmp	r1, #0
 800aef8:	d1f3      	bne.n	800aee2 <UART_DMAError+0x4a>
 800aefa:	2220      	movs	r2, #32
 800aefc:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800af00:	e7d6      	b.n	800aeb0 <UART_DMAError+0x18>
 800af02:	2200      	movs	r2, #0
 800af04:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800af08:	e853 2f00 	ldrex	r2, [r3]
 800af0c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800af10:	e843 2100 	strex	r1, r2, [r3]
 800af14:	2900      	cmp	r1, #0
 800af16:	d1f7      	bne.n	800af08 <UART_DMAError+0x70>
 800af18:	4c13      	ldr	r4, [pc, #76]	@ (800af68 <UART_DMAError+0xd0>)
 800af1a:	f103 0208 	add.w	r2, r3, #8
 800af1e:	e852 2f00 	ldrex	r2, [r2]
 800af22:	4022      	ands	r2, r4
 800af24:	f103 0c08 	add.w	ip, r3, #8
 800af28:	e84c 2100 	strex	r1, r2, [ip]
 800af2c:	2900      	cmp	r1, #0
 800af2e:	d1f4      	bne.n	800af1a <UART_DMAError+0x82>
 800af30:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800af32:	2a01      	cmp	r2, #1
 800af34:	d006      	beq.n	800af44 <UART_DMAError+0xac>
 800af36:	2300      	movs	r3, #0
 800af38:	2220      	movs	r2, #32
 800af3a:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800af3e:	6743      	str	r3, [r0, #116]	@ 0x74
 800af40:	66c3      	str	r3, [r0, #108]	@ 0x6c
 800af42:	e7ba      	b.n	800aeba <UART_DMAError+0x22>
 800af44:	e853 2f00 	ldrex	r2, [r3]
 800af48:	f022 0210 	bic.w	r2, r2, #16
 800af4c:	e843 2100 	strex	r1, r2, [r3]
 800af50:	2900      	cmp	r1, #0
 800af52:	d0f0      	beq.n	800af36 <UART_DMAError+0x9e>
 800af54:	e853 2f00 	ldrex	r2, [r3]
 800af58:	f022 0210 	bic.w	r2, r2, #16
 800af5c:	e843 2100 	strex	r1, r2, [r3]
 800af60:	2900      	cmp	r1, #0
 800af62:	d1ef      	bne.n	800af44 <UART_DMAError+0xac>
 800af64:	e7e7      	b.n	800af36 <UART_DMAError+0x9e>
 800af66:	bf00      	nop
 800af68:	effffffe 	.word	0xeffffffe

0800af6c <UART_DMAAbortOnError>:
 800af6c:	b508      	push	{r3, lr}
 800af6e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800af70:	2300      	movs	r3, #0
 800af72:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
 800af76:	f7ff ff8d 	bl	800ae94 <HAL_UART_ErrorCallback>
 800af7a:	bd08      	pop	{r3, pc}

0800af7c <HAL_UARTEx_RxEventCallback>:
 800af7c:	4770      	bx	lr
 800af7e:	bf00      	nop

0800af80 <HAL_UART_IRQHandler>:
 800af80:	6803      	ldr	r3, [r0, #0]
 800af82:	69da      	ldr	r2, [r3, #28]
 800af84:	f640 0c0f 	movw	ip, #2063	@ 0x80f
 800af88:	ea12 0f0c 	tst.w	r2, ip
 800af8c:	b570      	push	{r4, r5, r6, lr}
 800af8e:	681d      	ldr	r5, [r3, #0]
 800af90:	6899      	ldr	r1, [r3, #8]
 800af92:	4604      	mov	r4, r0
 800af94:	d145      	bne.n	800b022 <HAL_UART_IRQHandler+0xa2>
 800af96:	0696      	lsls	r6, r2, #26
 800af98:	d507      	bpl.n	800afaa <HAL_UART_IRQHandler+0x2a>
 800af9a:	f005 0c20 	and.w	ip, r5, #32
 800af9e:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
 800afa2:	ea5c 0c06 	orrs.w	ip, ip, r6
 800afa6:	f040 80f7 	bne.w	800b198 <HAL_UART_IRQHandler+0x218>
 800afaa:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 800afac:	2801      	cmp	r0, #1
 800afae:	f000 80cb 	beq.w	800b148 <HAL_UART_IRQHandler+0x1c8>
 800afb2:	02d0      	lsls	r0, r2, #11
 800afb4:	d41d      	bmi.n	800aff2 <HAL_UART_IRQHandler+0x72>
 800afb6:	0610      	lsls	r0, r2, #24
 800afb8:	d506      	bpl.n	800afc8 <HAL_UART_IRQHandler+0x48>
 800afba:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
 800afbe:	f005 0080 	and.w	r0, r5, #128	@ 0x80
 800afc2:	4308      	orrs	r0, r1
 800afc4:	f040 80ef 	bne.w	800b1a6 <HAL_UART_IRQHandler+0x226>
 800afc8:	0651      	lsls	r1, r2, #25
 800afca:	d51c      	bpl.n	800b006 <HAL_UART_IRQHandler+0x86>
 800afcc:	066e      	lsls	r6, r5, #25
 800afce:	d51a      	bpl.n	800b006 <HAL_UART_IRQHandler+0x86>
 800afd0:	e853 2f00 	ldrex	r2, [r3]
 800afd4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800afd8:	e843 2100 	strex	r1, r2, [r3]
 800afdc:	2900      	cmp	r1, #0
 800afde:	d1f7      	bne.n	800afd0 <HAL_UART_IRQHandler+0x50>
 800afe0:	2220      	movs	r2, #32
 800afe2:	2300      	movs	r3, #0
 800afe4:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800afe8:	67a3      	str	r3, [r4, #120]	@ 0x78
 800afea:	4620      	mov	r0, r4
 800afec:	f7ff ff24 	bl	800ae38 <HAL_UART_TxCpltCallback>
 800aff0:	bd70      	pop	{r4, r5, r6, pc}
 800aff2:	024e      	lsls	r6, r1, #9
 800aff4:	d5df      	bpl.n	800afb6 <HAL_UART_IRQHandler+0x36>
 800aff6:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800affa:	4620      	mov	r0, r4
 800affc:	621a      	str	r2, [r3, #32]
 800affe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b002:	f000 bd2f 	b.w	800ba64 <HAL_UARTEx_WakeupCallback>
 800b006:	0210      	lsls	r0, r2, #8
 800b008:	d502      	bpl.n	800b010 <HAL_UART_IRQHandler+0x90>
 800b00a:	0069      	lsls	r1, r5, #1
 800b00c:	f100 8109 	bmi.w	800b222 <HAL_UART_IRQHandler+0x2a2>
 800b010:	01d3      	lsls	r3, r2, #7
 800b012:	d5ed      	bpl.n	800aff0 <HAL_UART_IRQHandler+0x70>
 800b014:	2d00      	cmp	r5, #0
 800b016:	daeb      	bge.n	800aff0 <HAL_UART_IRQHandler+0x70>
 800b018:	4620      	mov	r0, r4
 800b01a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b01e:	f000 bd23 	b.w	800ba68 <HAL_UARTEx_RxFifoFullCallback>
 800b022:	48b8      	ldr	r0, [pc, #736]	@ (800b304 <HAL_UART_IRQHandler+0x384>)
 800b024:	4008      	ands	r0, r1
 800b026:	f040 80f1 	bne.w	800b20c <HAL_UART_IRQHandler+0x28c>
 800b02a:	4eb7      	ldr	r6, [pc, #732]	@ (800b308 <HAL_UART_IRQHandler+0x388>)
 800b02c:	4235      	tst	r5, r6
 800b02e:	d0bc      	beq.n	800afaa <HAL_UART_IRQHandler+0x2a>
 800b030:	07d6      	lsls	r6, r2, #31
 800b032:	d51a      	bpl.n	800b06a <HAL_UART_IRQHandler+0xea>
 800b034:	05ee      	lsls	r6, r5, #23
 800b036:	f140 80cf 	bpl.w	800b1d8 <HAL_UART_IRQHandler+0x258>
 800b03a:	2601      	movs	r6, #1
 800b03c:	621e      	str	r6, [r3, #32]
 800b03e:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800b042:	f046 0601 	orr.w	r6, r6, #1
 800b046:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800b04a:	0796      	lsls	r6, r2, #30
 800b04c:	f140 80c7 	bpl.w	800b1de <HAL_UART_IRQHandler+0x25e>
 800b050:	07ce      	lsls	r6, r1, #31
 800b052:	d50a      	bpl.n	800b06a <HAL_UART_IRQHandler+0xea>
 800b054:	2602      	movs	r6, #2
 800b056:	621e      	str	r6, [r3, #32]
 800b058:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800b05c:	f046 0604 	orr.w	r6, r6, #4
 800b060:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800b064:	0756      	lsls	r6, r2, #29
 800b066:	f100 80c0 	bmi.w	800b1ea <HAL_UART_IRQHandler+0x26a>
 800b06a:	0716      	lsls	r6, r2, #28
 800b06c:	d50b      	bpl.n	800b086 <HAL_UART_IRQHandler+0x106>
 800b06e:	f005 0620 	and.w	r6, r5, #32
 800b072:	4306      	orrs	r6, r0
 800b074:	d007      	beq.n	800b086 <HAL_UART_IRQHandler+0x106>
 800b076:	2008      	movs	r0, #8
 800b078:	6218      	str	r0, [r3, #32]
 800b07a:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800b07e:	f040 0008 	orr.w	r0, r0, #8
 800b082:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
 800b086:	0510      	lsls	r0, r2, #20
 800b088:	d50a      	bpl.n	800b0a0 <HAL_UART_IRQHandler+0x120>
 800b08a:	016e      	lsls	r6, r5, #5
 800b08c:	d508      	bpl.n	800b0a0 <HAL_UART_IRQHandler+0x120>
 800b08e:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 800b092:	6218      	str	r0, [r3, #32]
 800b094:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800b098:	f040 0020 	orr.w	r0, r0, #32
 800b09c:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
 800b0a0:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800b0a4:	2800      	cmp	r0, #0
 800b0a6:	d0a3      	beq.n	800aff0 <HAL_UART_IRQHandler+0x70>
 800b0a8:	0690      	lsls	r0, r2, #26
 800b0aa:	d506      	bpl.n	800b0ba <HAL_UART_IRQHandler+0x13a>
 800b0ac:	f005 0520 	and.w	r5, r5, #32
 800b0b0:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
 800b0b4:	430d      	orrs	r5, r1
 800b0b6:	f040 80a1 	bne.w	800b1fc <HAL_UART_IRQHandler+0x27c>
 800b0ba:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
 800b0be:	689a      	ldr	r2, [r3, #8]
 800b0c0:	f001 0128 	and.w	r1, r1, #40	@ 0x28
 800b0c4:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800b0c8:	ea52 0501 	orrs.w	r5, r2, r1
 800b0cc:	f000 80df 	beq.w	800b28e <HAL_UART_IRQHandler+0x30e>
 800b0d0:	e853 2f00 	ldrex	r2, [r3]
 800b0d4:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b0d8:	e843 2100 	strex	r1, r2, [r3]
 800b0dc:	2900      	cmp	r1, #0
 800b0de:	d1f7      	bne.n	800b0d0 <HAL_UART_IRQHandler+0x150>
 800b0e0:	488a      	ldr	r0, [pc, #552]	@ (800b30c <HAL_UART_IRQHandler+0x38c>)
 800b0e2:	f103 0208 	add.w	r2, r3, #8
 800b0e6:	e852 2f00 	ldrex	r2, [r2]
 800b0ea:	4002      	ands	r2, r0
 800b0ec:	f103 0508 	add.w	r5, r3, #8
 800b0f0:	e845 2100 	strex	r1, r2, [r5]
 800b0f4:	2900      	cmp	r1, #0
 800b0f6:	d1f4      	bne.n	800b0e2 <HAL_UART_IRQHandler+0x162>
 800b0f8:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b0fa:	2a01      	cmp	r2, #1
 800b0fc:	d05b      	beq.n	800b1b6 <HAL_UART_IRQHandler+0x236>
 800b0fe:	2200      	movs	r2, #0
 800b100:	2120      	movs	r1, #32
 800b102:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b106:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b108:	6899      	ldr	r1, [r3, #8]
 800b10a:	6762      	str	r2, [r4, #116]	@ 0x74
 800b10c:	064a      	lsls	r2, r1, #25
 800b10e:	f140 8084 	bpl.w	800b21a <HAL_UART_IRQHandler+0x29a>
 800b112:	f103 0208 	add.w	r2, r3, #8
 800b116:	e852 2f00 	ldrex	r2, [r2]
 800b11a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b11e:	f103 0008 	add.w	r0, r3, #8
 800b122:	e840 2100 	strex	r1, r2, [r0]
 800b126:	2900      	cmp	r1, #0
 800b128:	d1f3      	bne.n	800b112 <HAL_UART_IRQHandler+0x192>
 800b12a:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800b12e:	2800      	cmp	r0, #0
 800b130:	d073      	beq.n	800b21a <HAL_UART_IRQHandler+0x29a>
 800b132:	4b77      	ldr	r3, [pc, #476]	@ (800b310 <HAL_UART_IRQHandler+0x390>)
 800b134:	6383      	str	r3, [r0, #56]	@ 0x38
 800b136:	f7fb f8c3 	bl	80062c0 <HAL_DMA_Abort_IT>
 800b13a:	2800      	cmp	r0, #0
 800b13c:	f43f af58 	beq.w	800aff0 <HAL_UART_IRQHandler+0x70>
 800b140:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800b144:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800b146:	e02b      	b.n	800b1a0 <HAL_UART_IRQHandler+0x220>
 800b148:	06d6      	lsls	r6, r2, #27
 800b14a:	f57f af32 	bpl.w	800afb2 <HAL_UART_IRQHandler+0x32>
 800b14e:	06e8      	lsls	r0, r5, #27
 800b150:	f57f af2f 	bpl.w	800afb2 <HAL_UART_IRQHandler+0x32>
 800b154:	2210      	movs	r2, #16
 800b156:	621a      	str	r2, [r3, #32]
 800b158:	6899      	ldr	r1, [r3, #8]
 800b15a:	f8b4 205c 	ldrh.w	r2, [r4, #92]	@ 0x5c
 800b15e:	0649      	lsls	r1, r1, #25
 800b160:	f140 809b 	bpl.w	800b29a <HAL_UART_IRQHandler+0x31a>
 800b164:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800b168:	6805      	ldr	r5, [r0, #0]
 800b16a:	6869      	ldr	r1, [r5, #4]
 800b16c:	b289      	uxth	r1, r1
 800b16e:	2900      	cmp	r1, #0
 800b170:	f000 80d0 	beq.w	800b314 <HAL_UART_IRQHandler+0x394>
 800b174:	4291      	cmp	r1, r2
 800b176:	f080 80cd 	bcs.w	800b314 <HAL_UART_IRQHandler+0x394>
 800b17a:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
 800b17e:	6829      	ldr	r1, [r5, #0]
 800b180:	068e      	lsls	r6, r1, #26
 800b182:	d553      	bpl.n	800b22c <HAL_UART_IRQHandler+0x2ac>
 800b184:	2302      	movs	r3, #2
 800b186:	6723      	str	r3, [r4, #112]	@ 0x70
 800b188:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
 800b18c:	1a51      	subs	r1, r2, r1
 800b18e:	4620      	mov	r0, r4
 800b190:	b289      	uxth	r1, r1
 800b192:	f7ff fef3 	bl	800af7c <HAL_UARTEx_RxEventCallback>
 800b196:	bd70      	pop	{r4, r5, r6, pc}
 800b198:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 800b19a:	2b00      	cmp	r3, #0
 800b19c:	f43f af28 	beq.w	800aff0 <HAL_UART_IRQHandler+0x70>
 800b1a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1a4:	4718      	bx	r3
 800b1a6:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800b1a8:	2b00      	cmp	r3, #0
 800b1aa:	f43f af21 	beq.w	800aff0 <HAL_UART_IRQHandler+0x70>
 800b1ae:	4620      	mov	r0, r4
 800b1b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1b4:	4718      	bx	r3
 800b1b6:	e853 2f00 	ldrex	r2, [r3]
 800b1ba:	f022 0210 	bic.w	r2, r2, #16
 800b1be:	e843 2100 	strex	r1, r2, [r3]
 800b1c2:	2900      	cmp	r1, #0
 800b1c4:	d09b      	beq.n	800b0fe <HAL_UART_IRQHandler+0x17e>
 800b1c6:	e853 2f00 	ldrex	r2, [r3]
 800b1ca:	f022 0210 	bic.w	r2, r2, #16
 800b1ce:	e843 2100 	strex	r1, r2, [r3]
 800b1d2:	2900      	cmp	r1, #0
 800b1d4:	d1ef      	bne.n	800b1b6 <HAL_UART_IRQHandler+0x236>
 800b1d6:	e792      	b.n	800b0fe <HAL_UART_IRQHandler+0x17e>
 800b1d8:	0796      	lsls	r6, r2, #30
 800b1da:	f53f af46 	bmi.w	800b06a <HAL_UART_IRQHandler+0xea>
 800b1de:	0756      	lsls	r6, r2, #29
 800b1e0:	f57f af43 	bpl.w	800b06a <HAL_UART_IRQHandler+0xea>
 800b1e4:	07ce      	lsls	r6, r1, #31
 800b1e6:	f57f af40 	bpl.w	800b06a <HAL_UART_IRQHandler+0xea>
 800b1ea:	2604      	movs	r6, #4
 800b1ec:	621e      	str	r6, [r3, #32]
 800b1ee:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800b1f2:	f046 0602 	orr.w	r6, r6, #2
 800b1f6:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800b1fa:	e736      	b.n	800b06a <HAL_UART_IRQHandler+0xea>
 800b1fc:	6f62      	ldr	r2, [r4, #116]	@ 0x74
 800b1fe:	2a00      	cmp	r2, #0
 800b200:	f43f af5b 	beq.w	800b0ba <HAL_UART_IRQHandler+0x13a>
 800b204:	4620      	mov	r0, r4
 800b206:	4790      	blx	r2
 800b208:	6823      	ldr	r3, [r4, #0]
 800b20a:	e756      	b.n	800b0ba <HAL_UART_IRQHandler+0x13a>
 800b20c:	07d6      	lsls	r6, r2, #31
 800b20e:	f57f af1c 	bpl.w	800b04a <HAL_UART_IRQHandler+0xca>
 800b212:	05ee      	lsls	r6, r5, #23
 800b214:	f57f af19 	bpl.w	800b04a <HAL_UART_IRQHandler+0xca>
 800b218:	e70f      	b.n	800b03a <HAL_UART_IRQHandler+0xba>
 800b21a:	4620      	mov	r0, r4
 800b21c:	f7ff fe3a 	bl	800ae94 <HAL_UART_ErrorCallback>
 800b220:	bd70      	pop	{r4, r5, r6, pc}
 800b222:	4620      	mov	r0, r4
 800b224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b228:	f000 bc20 	b.w	800ba6c <HAL_UARTEx_TxFifoEmptyCallback>
 800b22c:	e853 2f00 	ldrex	r2, [r3]
 800b230:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b234:	e843 2100 	strex	r1, r2, [r3]
 800b238:	2900      	cmp	r1, #0
 800b23a:	d1f7      	bne.n	800b22c <HAL_UART_IRQHandler+0x2ac>
 800b23c:	f103 0208 	add.w	r2, r3, #8
 800b240:	e852 2f00 	ldrex	r2, [r2]
 800b244:	f022 0201 	bic.w	r2, r2, #1
 800b248:	f103 0508 	add.w	r5, r3, #8
 800b24c:	e845 2100 	strex	r1, r2, [r5]
 800b250:	2900      	cmp	r1, #0
 800b252:	d1f3      	bne.n	800b23c <HAL_UART_IRQHandler+0x2bc>
 800b254:	f103 0208 	add.w	r2, r3, #8
 800b258:	e852 2f00 	ldrex	r2, [r2]
 800b25c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b260:	f103 0508 	add.w	r5, r3, #8
 800b264:	e845 2100 	strex	r1, r2, [r5]
 800b268:	2900      	cmp	r1, #0
 800b26a:	d1f3      	bne.n	800b254 <HAL_UART_IRQHandler+0x2d4>
 800b26c:	2220      	movs	r2, #32
 800b26e:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b272:	66e1      	str	r1, [r4, #108]	@ 0x6c
 800b274:	e853 2f00 	ldrex	r2, [r3]
 800b278:	f022 0210 	bic.w	r2, r2, #16
 800b27c:	e843 2100 	strex	r1, r2, [r3]
 800b280:	2900      	cmp	r1, #0
 800b282:	d1f7      	bne.n	800b274 <HAL_UART_IRQHandler+0x2f4>
 800b284:	f7fa ffe4 	bl	8006250 <HAL_DMA_Abort>
 800b288:	f8b4 205c 	ldrh.w	r2, [r4, #92]	@ 0x5c
 800b28c:	e77a      	b.n	800b184 <HAL_UART_IRQHandler+0x204>
 800b28e:	4620      	mov	r0, r4
 800b290:	f7ff fe00 	bl	800ae94 <HAL_UART_ErrorCallback>
 800b294:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
 800b298:	bd70      	pop	{r4, r5, r6, pc}
 800b29a:	f8b4 005e 	ldrh.w	r0, [r4, #94]	@ 0x5e
 800b29e:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
 800b2a2:	b289      	uxth	r1, r1
 800b2a4:	b280      	uxth	r0, r0
 800b2a6:	2900      	cmp	r1, #0
 800b2a8:	f43f aea2 	beq.w	800aff0 <HAL_UART_IRQHandler+0x70>
 800b2ac:	1a12      	subs	r2, r2, r0
 800b2ae:	b291      	uxth	r1, r2
 800b2b0:	2900      	cmp	r1, #0
 800b2b2:	f43f ae9d 	beq.w	800aff0 <HAL_UART_IRQHandler+0x70>
 800b2b6:	e853 2f00 	ldrex	r2, [r3]
 800b2ba:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b2be:	e843 2000 	strex	r0, r2, [r3]
 800b2c2:	2800      	cmp	r0, #0
 800b2c4:	d1f7      	bne.n	800b2b6 <HAL_UART_IRQHandler+0x336>
 800b2c6:	4d11      	ldr	r5, [pc, #68]	@ (800b30c <HAL_UART_IRQHandler+0x38c>)
 800b2c8:	f103 0208 	add.w	r2, r3, #8
 800b2cc:	e852 2f00 	ldrex	r2, [r2]
 800b2d0:	402a      	ands	r2, r5
 800b2d2:	f103 0608 	add.w	r6, r3, #8
 800b2d6:	e846 2000 	strex	r0, r2, [r6]
 800b2da:	2800      	cmp	r0, #0
 800b2dc:	d1f4      	bne.n	800b2c8 <HAL_UART_IRQHandler+0x348>
 800b2de:	2220      	movs	r2, #32
 800b2e0:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b2e4:	6760      	str	r0, [r4, #116]	@ 0x74
 800b2e6:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800b2e8:	e853 2f00 	ldrex	r2, [r3]
 800b2ec:	f022 0210 	bic.w	r2, r2, #16
 800b2f0:	e843 2000 	strex	r0, r2, [r3]
 800b2f4:	2800      	cmp	r0, #0
 800b2f6:	d1f7      	bne.n	800b2e8 <HAL_UART_IRQHandler+0x368>
 800b2f8:	2302      	movs	r3, #2
 800b2fa:	6723      	str	r3, [r4, #112]	@ 0x70
 800b2fc:	4620      	mov	r0, r4
 800b2fe:	f7ff fe3d 	bl	800af7c <HAL_UARTEx_RxEventCallback>
 800b302:	bd70      	pop	{r4, r5, r6, pc}
 800b304:	10000001 	.word	0x10000001
 800b308:	04000120 	.word	0x04000120
 800b30c:	effffffe 	.word	0xeffffffe
 800b310:	0800af6d 	.word	0x0800af6d
 800b314:	4291      	cmp	r1, r2
 800b316:	f47f ae6b 	bne.w	800aff0 <HAL_UART_IRQHandler+0x70>
 800b31a:	682b      	ldr	r3, [r5, #0]
 800b31c:	069d      	lsls	r5, r3, #26
 800b31e:	d4eb      	bmi.n	800b2f8 <HAL_UART_IRQHandler+0x378>
 800b320:	bd70      	pop	{r4, r5, r6, pc}
 800b322:	bf00      	nop

0800b324 <UART_DMARxHalfCplt>:
 800b324:	b508      	push	{r3, lr}
 800b326:	4603      	mov	r3, r0
 800b328:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b32a:	2201      	movs	r2, #1
 800b32c:	6702      	str	r2, [r0, #112]	@ 0x70
 800b32e:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b330:	2a01      	cmp	r2, #1
 800b332:	d112      	bne.n	800b35a <UART_DMARxHalfCplt+0x36>
 800b334:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800b338:	681b      	ldr	r3, [r3, #0]
 800b33a:	084a      	lsrs	r2, r1, #1
 800b33c:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800b340:	685b      	ldr	r3, [r3, #4]
 800b342:	b29b      	uxth	r3, r3
 800b344:	4299      	cmp	r1, r3
 800b346:	bf28      	it	cs
 800b348:	f8a0 305e 	strhcs.w	r3, [r0, #94]	@ 0x5e
 800b34c:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
 800b350:	1ac9      	subs	r1, r1, r3
 800b352:	b289      	uxth	r1, r1
 800b354:	f7ff fe12 	bl	800af7c <HAL_UARTEx_RxEventCallback>
 800b358:	bd08      	pop	{r3, pc}
 800b35a:	f7ff fd99 	bl	800ae90 <HAL_UART_RxHalfCpltCallback>
 800b35e:	bd08      	pop	{r3, pc}

0800b360 <UART_DMAReceiveCplt>:
 800b360:	b510      	push	{r4, lr}
 800b362:	6804      	ldr	r4, [r0, #0]
 800b364:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b366:	6822      	ldr	r2, [r4, #0]
 800b368:	f012 0220 	ands.w	r2, r2, #32
 800b36c:	d128      	bne.n	800b3c0 <UART_DMAReceiveCplt+0x60>
 800b36e:	6803      	ldr	r3, [r0, #0]
 800b370:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800b374:	e853 2f00 	ldrex	r2, [r3]
 800b378:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b37c:	e843 2100 	strex	r1, r2, [r3]
 800b380:	2900      	cmp	r1, #0
 800b382:	d1f7      	bne.n	800b374 <UART_DMAReceiveCplt+0x14>
 800b384:	f103 0208 	add.w	r2, r3, #8
 800b388:	e852 2f00 	ldrex	r2, [r2]
 800b38c:	f022 0201 	bic.w	r2, r2, #1
 800b390:	f103 0c08 	add.w	ip, r3, #8
 800b394:	e84c 2100 	strex	r1, r2, [ip]
 800b398:	2900      	cmp	r1, #0
 800b39a:	d1f3      	bne.n	800b384 <UART_DMAReceiveCplt+0x24>
 800b39c:	f103 0208 	add.w	r2, r3, #8
 800b3a0:	e852 2f00 	ldrex	r2, [r2]
 800b3a4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b3a8:	f103 0c08 	add.w	ip, r3, #8
 800b3ac:	e84c 2100 	strex	r1, r2, [ip]
 800b3b0:	2900      	cmp	r1, #0
 800b3b2:	d1f3      	bne.n	800b39c <UART_DMAReceiveCplt+0x3c>
 800b3b4:	2220      	movs	r2, #32
 800b3b6:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800b3ba:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b3bc:	2a01      	cmp	r2, #1
 800b3be:	d015      	beq.n	800b3ec <UART_DMAReceiveCplt+0x8c>
 800b3c0:	2300      	movs	r3, #0
 800b3c2:	6703      	str	r3, [r0, #112]	@ 0x70
 800b3c4:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b3c6:	2a01      	cmp	r2, #1
 800b3c8:	d121      	bne.n	800b40e <UART_DMAReceiveCplt+0xae>
 800b3ca:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
 800b3ce:	6863      	ldr	r3, [r4, #4]
 800b3d0:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800b3d4:	b29b      	uxth	r3, r3
 800b3d6:	4299      	cmp	r1, r3
 800b3d8:	bf88      	it	hi
 800b3da:	f8a0 305e 	strhhi.w	r3, [r0, #94]	@ 0x5e
 800b3de:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
 800b3e2:	1ac9      	subs	r1, r1, r3
 800b3e4:	b289      	uxth	r1, r1
 800b3e6:	f7ff fdc9 	bl	800af7c <HAL_UARTEx_RxEventCallback>
 800b3ea:	bd10      	pop	{r4, pc}
 800b3ec:	e853 2f00 	ldrex	r2, [r3]
 800b3f0:	f022 0210 	bic.w	r2, r2, #16
 800b3f4:	e843 2100 	strex	r1, r2, [r3]
 800b3f8:	2900      	cmp	r1, #0
 800b3fa:	d0e1      	beq.n	800b3c0 <UART_DMAReceiveCplt+0x60>
 800b3fc:	e853 2f00 	ldrex	r2, [r3]
 800b400:	f022 0210 	bic.w	r2, r2, #16
 800b404:	e843 2100 	strex	r1, r2, [r3]
 800b408:	2900      	cmp	r1, #0
 800b40a:	d1ef      	bne.n	800b3ec <UART_DMAReceiveCplt+0x8c>
 800b40c:	e7d8      	b.n	800b3c0 <UART_DMAReceiveCplt+0x60>
 800b40e:	f7f9 ffb5 	bl	800537c <HAL_UART_RxCpltCallback>
 800b412:	bd10      	pop	{r4, pc}

0800b414 <UART_AdvFeatureConfig>:
 800b414:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b416:	071a      	lsls	r2, r3, #28
 800b418:	b410      	push	{r4}
 800b41a:	d506      	bpl.n	800b42a <UART_AdvFeatureConfig+0x16>
 800b41c:	6801      	ldr	r1, [r0, #0]
 800b41e:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 800b420:	684a      	ldr	r2, [r1, #4]
 800b422:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800b426:	4322      	orrs	r2, r4
 800b428:	604a      	str	r2, [r1, #4]
 800b42a:	07dc      	lsls	r4, r3, #31
 800b42c:	d506      	bpl.n	800b43c <UART_AdvFeatureConfig+0x28>
 800b42e:	6801      	ldr	r1, [r0, #0]
 800b430:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800b432:	684a      	ldr	r2, [r1, #4]
 800b434:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 800b438:	4322      	orrs	r2, r4
 800b43a:	604a      	str	r2, [r1, #4]
 800b43c:	0799      	lsls	r1, r3, #30
 800b43e:	d506      	bpl.n	800b44e <UART_AdvFeatureConfig+0x3a>
 800b440:	6801      	ldr	r1, [r0, #0]
 800b442:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 800b444:	684a      	ldr	r2, [r1, #4]
 800b446:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800b44a:	4322      	orrs	r2, r4
 800b44c:	604a      	str	r2, [r1, #4]
 800b44e:	075a      	lsls	r2, r3, #29
 800b450:	d506      	bpl.n	800b460 <UART_AdvFeatureConfig+0x4c>
 800b452:	6801      	ldr	r1, [r0, #0]
 800b454:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 800b456:	684a      	ldr	r2, [r1, #4]
 800b458:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800b45c:	4322      	orrs	r2, r4
 800b45e:	604a      	str	r2, [r1, #4]
 800b460:	06dc      	lsls	r4, r3, #27
 800b462:	d506      	bpl.n	800b472 <UART_AdvFeatureConfig+0x5e>
 800b464:	6801      	ldr	r1, [r0, #0]
 800b466:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800b468:	688a      	ldr	r2, [r1, #8]
 800b46a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800b46e:	4322      	orrs	r2, r4
 800b470:	608a      	str	r2, [r1, #8]
 800b472:	0699      	lsls	r1, r3, #26
 800b474:	d506      	bpl.n	800b484 <UART_AdvFeatureConfig+0x70>
 800b476:	6801      	ldr	r1, [r0, #0]
 800b478:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 800b47a:	688a      	ldr	r2, [r1, #8]
 800b47c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800b480:	4322      	orrs	r2, r4
 800b482:	608a      	str	r2, [r1, #8]
 800b484:	065a      	lsls	r2, r3, #25
 800b486:	d509      	bpl.n	800b49c <UART_AdvFeatureConfig+0x88>
 800b488:	6801      	ldr	r1, [r0, #0]
 800b48a:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 800b48c:	684a      	ldr	r2, [r1, #4]
 800b48e:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 800b492:	4322      	orrs	r2, r4
 800b494:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
 800b498:	604a      	str	r2, [r1, #4]
 800b49a:	d00b      	beq.n	800b4b4 <UART_AdvFeatureConfig+0xa0>
 800b49c:	061b      	lsls	r3, r3, #24
 800b49e:	d506      	bpl.n	800b4ae <UART_AdvFeatureConfig+0x9a>
 800b4a0:	6802      	ldr	r2, [r0, #0]
 800b4a2:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 800b4a4:	6853      	ldr	r3, [r2, #4]
 800b4a6:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 800b4aa:	430b      	orrs	r3, r1
 800b4ac:	6053      	str	r3, [r2, #4]
 800b4ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b4b2:	4770      	bx	lr
 800b4b4:	684a      	ldr	r2, [r1, #4]
 800b4b6:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 800b4b8:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 800b4bc:	4322      	orrs	r2, r4
 800b4be:	604a      	str	r2, [r1, #4]
 800b4c0:	e7ec      	b.n	800b49c <UART_AdvFeatureConfig+0x88>
 800b4c2:	bf00      	nop

0800b4c4 <UART_CheckIdleState>:
 800b4c4:	b538      	push	{r3, r4, r5, lr}
 800b4c6:	2300      	movs	r3, #0
 800b4c8:	4604      	mov	r4, r0
 800b4ca:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 800b4ce:	f7fa f949 	bl	8005764 <HAL_GetTick>
 800b4d2:	6822      	ldr	r2, [r4, #0]
 800b4d4:	6813      	ldr	r3, [r2, #0]
 800b4d6:	071b      	lsls	r3, r3, #28
 800b4d8:	4605      	mov	r5, r0
 800b4da:	d40f      	bmi.n	800b4fc <UART_CheckIdleState+0x38>
 800b4dc:	6813      	ldr	r3, [r2, #0]
 800b4de:	0759      	lsls	r1, r3, #29
 800b4e0:	d431      	bmi.n	800b546 <UART_CheckIdleState+0x82>
 800b4e2:	2300      	movs	r3, #0
 800b4e4:	2220      	movs	r2, #32
 800b4e6:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800b4ea:	4618      	mov	r0, r3
 800b4ec:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b4f0:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800b4f2:	6723      	str	r3, [r4, #112]	@ 0x70
 800b4f4:	2300      	movs	r3, #0
 800b4f6:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800b4fa:	bd38      	pop	{r3, r4, r5, pc}
 800b4fc:	69d3      	ldr	r3, [r2, #28]
 800b4fe:	0298      	lsls	r0, r3, #10
 800b500:	d4ec      	bmi.n	800b4dc <UART_CheckIdleState+0x18>
 800b502:	e00c      	b.n	800b51e <UART_CheckIdleState+0x5a>
 800b504:	6819      	ldr	r1, [r3, #0]
 800b506:	0749      	lsls	r1, r1, #29
 800b508:	461a      	mov	r2, r3
 800b50a:	d505      	bpl.n	800b518 <UART_CheckIdleState+0x54>
 800b50c:	69d9      	ldr	r1, [r3, #28]
 800b50e:	0708      	lsls	r0, r1, #28
 800b510:	d44a      	bmi.n	800b5a8 <UART_CheckIdleState+0xe4>
 800b512:	69d9      	ldr	r1, [r3, #28]
 800b514:	0509      	lsls	r1, r1, #20
 800b516:	d475      	bmi.n	800b604 <UART_CheckIdleState+0x140>
 800b518:	69db      	ldr	r3, [r3, #28]
 800b51a:	0298      	lsls	r0, r3, #10
 800b51c:	d4de      	bmi.n	800b4dc <UART_CheckIdleState+0x18>
 800b51e:	f7fa f921 	bl	8005764 <HAL_GetTick>
 800b522:	1b43      	subs	r3, r0, r5
 800b524:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800b528:	6823      	ldr	r3, [r4, #0]
 800b52a:	d3eb      	bcc.n	800b504 <UART_CheckIdleState+0x40>
 800b52c:	e853 2f00 	ldrex	r2, [r3]
 800b530:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800b534:	e843 2100 	strex	r1, r2, [r3]
 800b538:	2900      	cmp	r1, #0
 800b53a:	d1f7      	bne.n	800b52c <UART_CheckIdleState+0x68>
 800b53c:	2320      	movs	r3, #32
 800b53e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800b542:	2003      	movs	r0, #3
 800b544:	e7d6      	b.n	800b4f4 <UART_CheckIdleState+0x30>
 800b546:	69d3      	ldr	r3, [r2, #28]
 800b548:	025b      	lsls	r3, r3, #9
 800b54a:	d4ca      	bmi.n	800b4e2 <UART_CheckIdleState+0x1e>
 800b54c:	e00d      	b.n	800b56a <UART_CheckIdleState+0xa6>
 800b54e:	681a      	ldr	r2, [r3, #0]
 800b550:	0750      	lsls	r0, r2, #29
 800b552:	d507      	bpl.n	800b564 <UART_CheckIdleState+0xa0>
 800b554:	69da      	ldr	r2, [r3, #28]
 800b556:	0711      	lsls	r1, r2, #28
 800b558:	f100 8082 	bmi.w	800b660 <UART_CheckIdleState+0x19c>
 800b55c:	69da      	ldr	r2, [r3, #28]
 800b55e:	0512      	lsls	r2, r2, #20
 800b560:	f100 80ac 	bmi.w	800b6bc <UART_CheckIdleState+0x1f8>
 800b564:	69db      	ldr	r3, [r3, #28]
 800b566:	025b      	lsls	r3, r3, #9
 800b568:	d4bb      	bmi.n	800b4e2 <UART_CheckIdleState+0x1e>
 800b56a:	f7fa f8fb 	bl	8005764 <HAL_GetTick>
 800b56e:	1b43      	subs	r3, r0, r5
 800b570:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800b574:	6823      	ldr	r3, [r4, #0]
 800b576:	d3ea      	bcc.n	800b54e <UART_CheckIdleState+0x8a>
 800b578:	e853 2f00 	ldrex	r2, [r3]
 800b57c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b580:	e843 2100 	strex	r1, r2, [r3]
 800b584:	2900      	cmp	r1, #0
 800b586:	d1f7      	bne.n	800b578 <UART_CheckIdleState+0xb4>
 800b588:	f103 0208 	add.w	r2, r3, #8
 800b58c:	e852 2f00 	ldrex	r2, [r2]
 800b590:	f022 0201 	bic.w	r2, r2, #1
 800b594:	f103 0008 	add.w	r0, r3, #8
 800b598:	e840 2100 	strex	r1, r2, [r0]
 800b59c:	2900      	cmp	r1, #0
 800b59e:	d1f3      	bne.n	800b588 <UART_CheckIdleState+0xc4>
 800b5a0:	2320      	movs	r3, #32
 800b5a2:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800b5a6:	e7cc      	b.n	800b542 <UART_CheckIdleState+0x7e>
 800b5a8:	2208      	movs	r2, #8
 800b5aa:	621a      	str	r2, [r3, #32]
 800b5ac:	e853 2f00 	ldrex	r2, [r3]
 800b5b0:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b5b4:	e843 2100 	strex	r1, r2, [r3]
 800b5b8:	2900      	cmp	r1, #0
 800b5ba:	d1f7      	bne.n	800b5ac <UART_CheckIdleState+0xe8>
 800b5bc:	4856      	ldr	r0, [pc, #344]	@ (800b718 <UART_CheckIdleState+0x254>)
 800b5be:	f103 0208 	add.w	r2, r3, #8
 800b5c2:	e852 2f00 	ldrex	r2, [r2]
 800b5c6:	4002      	ands	r2, r0
 800b5c8:	f103 0508 	add.w	r5, r3, #8
 800b5cc:	e845 2100 	strex	r1, r2, [r5]
 800b5d0:	2900      	cmp	r1, #0
 800b5d2:	d1f4      	bne.n	800b5be <UART_CheckIdleState+0xfa>
 800b5d4:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b5d6:	2a01      	cmp	r2, #1
 800b5d8:	d00b      	beq.n	800b5f2 <UART_CheckIdleState+0x12e>
 800b5da:	2200      	movs	r2, #0
 800b5dc:	2020      	movs	r0, #32
 800b5de:	2108      	movs	r1, #8
 800b5e0:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800b5e4:	6762      	str	r2, [r4, #116]	@ 0x74
 800b5e6:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b5e8:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b5ec:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b5f0:	e79c      	b.n	800b52c <UART_CheckIdleState+0x68>
 800b5f2:	e853 2f00 	ldrex	r2, [r3]
 800b5f6:	f022 0210 	bic.w	r2, r2, #16
 800b5fa:	e843 2100 	strex	r1, r2, [r3]
 800b5fe:	2900      	cmp	r1, #0
 800b600:	d1f7      	bne.n	800b5f2 <UART_CheckIdleState+0x12e>
 800b602:	e7ea      	b.n	800b5da <UART_CheckIdleState+0x116>
 800b604:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800b608:	621a      	str	r2, [r3, #32]
 800b60a:	e853 2f00 	ldrex	r2, [r3]
 800b60e:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b612:	e843 2100 	strex	r1, r2, [r3]
 800b616:	2900      	cmp	r1, #0
 800b618:	d1f7      	bne.n	800b60a <UART_CheckIdleState+0x146>
 800b61a:	483f      	ldr	r0, [pc, #252]	@ (800b718 <UART_CheckIdleState+0x254>)
 800b61c:	f103 0208 	add.w	r2, r3, #8
 800b620:	e852 2f00 	ldrex	r2, [r2]
 800b624:	4002      	ands	r2, r0
 800b626:	f103 0508 	add.w	r5, r3, #8
 800b62a:	e845 2100 	strex	r1, r2, [r5]
 800b62e:	2900      	cmp	r1, #0
 800b630:	d1f4      	bne.n	800b61c <UART_CheckIdleState+0x158>
 800b632:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b634:	2a01      	cmp	r2, #1
 800b636:	d00a      	beq.n	800b64e <UART_CheckIdleState+0x18a>
 800b638:	2200      	movs	r2, #0
 800b63a:	2120      	movs	r1, #32
 800b63c:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b640:	6762      	str	r2, [r4, #116]	@ 0x74
 800b642:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b644:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b648:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b64c:	e76e      	b.n	800b52c <UART_CheckIdleState+0x68>
 800b64e:	e853 2f00 	ldrex	r2, [r3]
 800b652:	f022 0210 	bic.w	r2, r2, #16
 800b656:	e843 2100 	strex	r1, r2, [r3]
 800b65a:	2900      	cmp	r1, #0
 800b65c:	d1f7      	bne.n	800b64e <UART_CheckIdleState+0x18a>
 800b65e:	e7eb      	b.n	800b638 <UART_CheckIdleState+0x174>
 800b660:	2208      	movs	r2, #8
 800b662:	621a      	str	r2, [r3, #32]
 800b664:	e853 2f00 	ldrex	r2, [r3]
 800b668:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b66c:	e843 2100 	strex	r1, r2, [r3]
 800b670:	2900      	cmp	r1, #0
 800b672:	d1f7      	bne.n	800b664 <UART_CheckIdleState+0x1a0>
 800b674:	4828      	ldr	r0, [pc, #160]	@ (800b718 <UART_CheckIdleState+0x254>)
 800b676:	f103 0208 	add.w	r2, r3, #8
 800b67a:	e852 2f00 	ldrex	r2, [r2]
 800b67e:	4002      	ands	r2, r0
 800b680:	f103 0508 	add.w	r5, r3, #8
 800b684:	e845 2100 	strex	r1, r2, [r5]
 800b688:	2900      	cmp	r1, #0
 800b68a:	d1f4      	bne.n	800b676 <UART_CheckIdleState+0x1b2>
 800b68c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b68e:	2a01      	cmp	r2, #1
 800b690:	d00b      	beq.n	800b6aa <UART_CheckIdleState+0x1e6>
 800b692:	2200      	movs	r2, #0
 800b694:	2020      	movs	r0, #32
 800b696:	2108      	movs	r1, #8
 800b698:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800b69c:	6762      	str	r2, [r4, #116]	@ 0x74
 800b69e:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b6a0:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b6a4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b6a8:	e766      	b.n	800b578 <UART_CheckIdleState+0xb4>
 800b6aa:	e853 2f00 	ldrex	r2, [r3]
 800b6ae:	f022 0210 	bic.w	r2, r2, #16
 800b6b2:	e843 2100 	strex	r1, r2, [r3]
 800b6b6:	2900      	cmp	r1, #0
 800b6b8:	d1f7      	bne.n	800b6aa <UART_CheckIdleState+0x1e6>
 800b6ba:	e7ea      	b.n	800b692 <UART_CheckIdleState+0x1ce>
 800b6bc:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800b6c0:	621a      	str	r2, [r3, #32]
 800b6c2:	e853 2f00 	ldrex	r2, [r3]
 800b6c6:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b6ca:	e843 2100 	strex	r1, r2, [r3]
 800b6ce:	2900      	cmp	r1, #0
 800b6d0:	d1f7      	bne.n	800b6c2 <UART_CheckIdleState+0x1fe>
 800b6d2:	4811      	ldr	r0, [pc, #68]	@ (800b718 <UART_CheckIdleState+0x254>)
 800b6d4:	f103 0208 	add.w	r2, r3, #8
 800b6d8:	e852 2f00 	ldrex	r2, [r2]
 800b6dc:	4002      	ands	r2, r0
 800b6de:	f103 0508 	add.w	r5, r3, #8
 800b6e2:	e845 2100 	strex	r1, r2, [r5]
 800b6e6:	2900      	cmp	r1, #0
 800b6e8:	d1f4      	bne.n	800b6d4 <UART_CheckIdleState+0x210>
 800b6ea:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b6ec:	2a01      	cmp	r2, #1
 800b6ee:	d00a      	beq.n	800b706 <UART_CheckIdleState+0x242>
 800b6f0:	2200      	movs	r2, #0
 800b6f2:	2120      	movs	r1, #32
 800b6f4:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b6f8:	6762      	str	r2, [r4, #116]	@ 0x74
 800b6fa:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b6fc:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b700:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b704:	e738      	b.n	800b578 <UART_CheckIdleState+0xb4>
 800b706:	e853 2f00 	ldrex	r2, [r3]
 800b70a:	f022 0210 	bic.w	r2, r2, #16
 800b70e:	e843 2100 	strex	r1, r2, [r3]
 800b712:	2900      	cmp	r1, #0
 800b714:	d1f7      	bne.n	800b706 <UART_CheckIdleState+0x242>
 800b716:	e7eb      	b.n	800b6f0 <UART_CheckIdleState+0x22c>
 800b718:	effffffe 	.word	0xeffffffe

0800b71c <HAL_UART_Init>:
 800b71c:	2800      	cmp	r0, #0
 800b71e:	f000 80fd 	beq.w	800b91c <HAL_UART_Init+0x200>
 800b722:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 800b726:	b570      	push	{r4, r5, r6, lr}
 800b728:	4604      	mov	r4, r0
 800b72a:	2b00      	cmp	r3, #0
 800b72c:	f000 8081 	beq.w	800b832 <HAL_UART_Init+0x116>
 800b730:	6825      	ldr	r5, [r4, #0]
 800b732:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800b734:	2324      	movs	r3, #36	@ 0x24
 800b736:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800b73a:	682b      	ldr	r3, [r5, #0]
 800b73c:	f023 0301 	bic.w	r3, r3, #1
 800b740:	602b      	str	r3, [r5, #0]
 800b742:	2a00      	cmp	r2, #0
 800b744:	d171      	bne.n	800b82a <HAL_UART_Init+0x10e>
 800b746:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 800b74a:	68a3      	ldr	r3, [r4, #8]
 800b74c:	6829      	ldr	r1, [r5, #0]
 800b74e:	4303      	orrs	r3, r0
 800b750:	4313      	orrs	r3, r2
 800b752:	69e0      	ldr	r0, [r4, #28]
 800b754:	4a84      	ldr	r2, [pc, #528]	@ (800b968 <HAL_UART_Init+0x24c>)
 800b756:	4303      	orrs	r3, r0
 800b758:	400a      	ands	r2, r1
 800b75a:	4313      	orrs	r3, r2
 800b75c:	602b      	str	r3, [r5, #0]
 800b75e:	686b      	ldr	r3, [r5, #4]
 800b760:	68e2      	ldr	r2, [r4, #12]
 800b762:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b764:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800b768:	4313      	orrs	r3, r2
 800b76a:	4a80      	ldr	r2, [pc, #512]	@ (800b96c <HAL_UART_Init+0x250>)
 800b76c:	606b      	str	r3, [r5, #4]
 800b76e:	4295      	cmp	r5, r2
 800b770:	68aa      	ldr	r2, [r5, #8]
 800b772:	69a3      	ldr	r3, [r4, #24]
 800b774:	f022 426e 	bic.w	r2, r2, #3992977408	@ 0xee000000
 800b778:	f422 6230 	bic.w	r2, r2, #2816	@ 0xb00
 800b77c:	f000 8082 	beq.w	800b884 <HAL_UART_Init+0x168>
 800b780:	6a26      	ldr	r6, [r4, #32]
 800b782:	4333      	orrs	r3, r6
 800b784:	4313      	orrs	r3, r2
 800b786:	60ab      	str	r3, [r5, #8]
 800b788:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b78a:	f023 030f 	bic.w	r3, r3, #15
 800b78e:	430b      	orrs	r3, r1
 800b790:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800b792:	4b77      	ldr	r3, [pc, #476]	@ (800b970 <HAL_UART_Init+0x254>)
 800b794:	429d      	cmp	r5, r3
 800b796:	d007      	beq.n	800b7a8 <HAL_UART_Init+0x8c>
 800b798:	2300      	movs	r3, #0
 800b79a:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
 800b79e:	e9c4 331d 	strd	r3, r3, [r4, #116]	@ 0x74
 800b7a2:	66a2      	str	r2, [r4, #104]	@ 0x68
 800b7a4:	2001      	movs	r0, #1
 800b7a6:	bd70      	pop	{r4, r5, r6, pc}
 800b7a8:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800b7ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b7b0:	f003 0303 	and.w	r3, r3, #3
 800b7b4:	2b02      	cmp	r3, #2
 800b7b6:	d041      	beq.n	800b83c <HAL_UART_Init+0x120>
 800b7b8:	2b03      	cmp	r3, #3
 800b7ba:	f000 80b7 	beq.w	800b92c <HAL_UART_Init+0x210>
 800b7be:	2b01      	cmp	r3, #1
 800b7c0:	f000 80ae 	beq.w	800b920 <HAL_UART_Init+0x204>
 800b7c4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b7c8:	f000 80c3 	beq.w	800b952 <HAL_UART_Init+0x236>
 800b7cc:	f7fd fbb6 	bl	8008f3c <HAL_RCC_GetPCLK2Freq>
 800b7d0:	2800      	cmp	r0, #0
 800b7d2:	f000 809c 	beq.w	800b90e <HAL_UART_Init+0x1f2>
 800b7d6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b7d8:	6863      	ldr	r3, [r4, #4]
 800b7da:	4a66      	ldr	r2, [pc, #408]	@ (800b974 <HAL_UART_Init+0x258>)
 800b7dc:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 800b7e0:	fbb0 f0f1 	udiv	r0, r0, r1
 800b7e4:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 800b7e8:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 800b7ec:	fbb0 f0f3 	udiv	r0, r0, r3
 800b7f0:	f1a0 0310 	sub.w	r3, r0, #16
 800b7f4:	4293      	cmp	r3, r2
 800b7f6:	d8cf      	bhi.n	800b798 <HAL_UART_Init+0x7c>
 800b7f8:	6822      	ldr	r2, [r4, #0]
 800b7fa:	2300      	movs	r3, #0
 800b7fc:	60d0      	str	r0, [r2, #12]
 800b7fe:	e9c4 331d 	strd	r3, r3, [r4, #116]	@ 0x74
 800b802:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800b806:	66a1      	str	r1, [r4, #104]	@ 0x68
 800b808:	6853      	ldr	r3, [r2, #4]
 800b80a:	f423 4390 	bic.w	r3, r3, #18432	@ 0x4800
 800b80e:	6053      	str	r3, [r2, #4]
 800b810:	6893      	ldr	r3, [r2, #8]
 800b812:	f023 032a 	bic.w	r3, r3, #42	@ 0x2a
 800b816:	6093      	str	r3, [r2, #8]
 800b818:	6813      	ldr	r3, [r2, #0]
 800b81a:	f043 0301 	orr.w	r3, r3, #1
 800b81e:	4620      	mov	r0, r4
 800b820:	6013      	str	r3, [r2, #0]
 800b822:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b826:	f7ff be4d 	b.w	800b4c4 <UART_CheckIdleState>
 800b82a:	4620      	mov	r0, r4
 800b82c:	f7ff fdf2 	bl	800b414 <UART_AdvFeatureConfig>
 800b830:	e789      	b.n	800b746 <HAL_UART_Init+0x2a>
 800b832:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
 800b836:	f7f9 fd0f 	bl	8005258 <HAL_UART_MspInit>
 800b83a:	e779      	b.n	800b730 <HAL_UART_Init+0x14>
 800b83c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b840:	484d      	ldr	r0, [pc, #308]	@ (800b978 <HAL_UART_Init+0x25c>)
 800b842:	d1c9      	bne.n	800b7d8 <HAL_UART_Init+0xbc>
 800b844:	6865      	ldr	r5, [r4, #4]
 800b846:	4b4b      	ldr	r3, [pc, #300]	@ (800b974 <HAL_UART_Init+0x258>)
 800b848:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
 800b84c:	fbb0 f2f2 	udiv	r2, r0, r2
 800b850:	086b      	lsrs	r3, r5, #1
 800b852:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b856:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 800b85a:	fbb3 f3f5 	udiv	r3, r3, r5
 800b85e:	f1a3 0110 	sub.w	r1, r3, #16
 800b862:	4291      	cmp	r1, r2
 800b864:	d898      	bhi.n	800b798 <HAL_UART_Init+0x7c>
 800b866:	f023 010f 	bic.w	r1, r3, #15
 800b86a:	b289      	uxth	r1, r1
 800b86c:	6822      	ldr	r2, [r4, #0]
 800b86e:	f3c3 0342 	ubfx	r3, r3, #1, #3
 800b872:	430b      	orrs	r3, r1
 800b874:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 800b878:	2100      	movs	r1, #0
 800b87a:	60d3      	str	r3, [r2, #12]
 800b87c:	e9c4 111d 	strd	r1, r1, [r4, #116]	@ 0x74
 800b880:	66a0      	str	r0, [r4, #104]	@ 0x68
 800b882:	e7c1      	b.n	800b808 <HAL_UART_Init+0xec>
 800b884:	431a      	orrs	r2, r3
 800b886:	60aa      	str	r2, [r5, #8]
 800b888:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b88a:	f023 030f 	bic.w	r3, r3, #15
 800b88e:	430b      	orrs	r3, r1
 800b890:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800b894:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800b896:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 800b89a:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800b89e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b8a2:	d05e      	beq.n	800b962 <HAL_UART_Init+0x246>
 800b8a4:	d848      	bhi.n	800b938 <HAL_UART_Init+0x21c>
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	d056      	beq.n	800b958 <HAL_UART_Init+0x23c>
 800b8aa:	f7fd fadd 	bl	8008e68 <HAL_RCC_GetSysClockFreq>
 800b8ae:	b370      	cbz	r0, 800b90e <HAL_UART_Init+0x1f2>
 800b8b0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b8b2:	4b30      	ldr	r3, [pc, #192]	@ (800b974 <HAL_UART_Init+0x258>)
 800b8b4:	6865      	ldr	r5, [r4, #4]
 800b8b6:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
 800b8ba:	fbb0 f3f2 	udiv	r3, r0, r2
 800b8be:	eb05 0145 	add.w	r1, r5, r5, lsl #1
 800b8c2:	428b      	cmp	r3, r1
 800b8c4:	f4ff af68 	bcc.w	800b798 <HAL_UART_Init+0x7c>
 800b8c8:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
 800b8cc:	f63f af64 	bhi.w	800b798 <HAL_UART_Init+0x7c>
 800b8d0:	2600      	movs	r6, #0
 800b8d2:	4633      	mov	r3, r6
 800b8d4:	4631      	mov	r1, r6
 800b8d6:	f7f5 f9af 	bl	8000c38 <__aeabi_uldivmod>
 800b8da:	0209      	lsls	r1, r1, #8
 800b8dc:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
 800b8e0:	086b      	lsrs	r3, r5, #1
 800b8e2:	0200      	lsls	r0, r0, #8
 800b8e4:	18c0      	adds	r0, r0, r3
 800b8e6:	462a      	mov	r2, r5
 800b8e8:	f141 0100 	adc.w	r1, r1, #0
 800b8ec:	4633      	mov	r3, r6
 800b8ee:	f7f5 f9a3 	bl	8000c38 <__aeabi_uldivmod>
 800b8f2:	4b22      	ldr	r3, [pc, #136]	@ (800b97c <HAL_UART_Init+0x260>)
 800b8f4:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
 800b8f8:	429a      	cmp	r2, r3
 800b8fa:	f63f af4d 	bhi.w	800b798 <HAL_UART_Init+0x7c>
 800b8fe:	6822      	ldr	r2, [r4, #0]
 800b900:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
 800b904:	60d0      	str	r0, [r2, #12]
 800b906:	e9c4 661d 	strd	r6, r6, [r4, #116]	@ 0x74
 800b90a:	66a3      	str	r3, [r4, #104]	@ 0x68
 800b90c:	e77c      	b.n	800b808 <HAL_UART_Init+0xec>
 800b90e:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
 800b912:	e9c4 001d 	strd	r0, r0, [r4, #116]	@ 0x74
 800b916:	6822      	ldr	r2, [r4, #0]
 800b918:	66a3      	str	r3, [r4, #104]	@ 0x68
 800b91a:	e775      	b.n	800b808 <HAL_UART_Init+0xec>
 800b91c:	2001      	movs	r0, #1
 800b91e:	4770      	bx	lr
 800b920:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b924:	d00f      	beq.n	800b946 <HAL_UART_Init+0x22a>
 800b926:	f7fd fa9f 	bl	8008e68 <HAL_RCC_GetSysClockFreq>
 800b92a:	e751      	b.n	800b7d0 <HAL_UART_Init+0xb4>
 800b92c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b930:	d088      	beq.n	800b844 <HAL_UART_Init+0x128>
 800b932:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800b936:	e74f      	b.n	800b7d8 <HAL_UART_Init+0xbc>
 800b938:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800b93c:	f47f af2c 	bne.w	800b798 <HAL_UART_Init+0x7c>
 800b940:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800b944:	e7b5      	b.n	800b8b2 <HAL_UART_Init+0x196>
 800b946:	f7fd fa8f 	bl	8008e68 <HAL_RCC_GetSysClockFreq>
 800b94a:	2800      	cmp	r0, #0
 800b94c:	d0df      	beq.n	800b90e <HAL_UART_Init+0x1f2>
 800b94e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b950:	e778      	b.n	800b844 <HAL_UART_Init+0x128>
 800b952:	f7fd faf3 	bl	8008f3c <HAL_RCC_GetPCLK2Freq>
 800b956:	e7f8      	b.n	800b94a <HAL_UART_Init+0x22e>
 800b958:	f7fd faae 	bl	8008eb8 <HAL_RCC_GetPCLK1Freq>
 800b95c:	2800      	cmp	r0, #0
 800b95e:	d0d6      	beq.n	800b90e <HAL_UART_Init+0x1f2>
 800b960:	e7a6      	b.n	800b8b0 <HAL_UART_Init+0x194>
 800b962:	4805      	ldr	r0, [pc, #20]	@ (800b978 <HAL_UART_Init+0x25c>)
 800b964:	e7a5      	b.n	800b8b2 <HAL_UART_Init+0x196>
 800b966:	bf00      	nop
 800b968:	cfff69f3 	.word	0xcfff69f3
 800b96c:	40008000 	.word	0x40008000
 800b970:	40013800 	.word	0x40013800
 800b974:	080183e0 	.word	0x080183e0
 800b978:	00f42400 	.word	0x00f42400
 800b97c:	000ffcff 	.word	0x000ffcff

0800b980 <UART_Start_Receive_DMA>:
 800b980:	b538      	push	{r3, r4, r5, lr}
 800b982:	4605      	mov	r5, r0
 800b984:	4613      	mov	r3, r2
 800b986:	2022      	movs	r0, #34	@ 0x22
 800b988:	2200      	movs	r2, #0
 800b98a:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 800b98e:	f8c5 008c 	str.w	r0, [r5, #140]	@ 0x8c
 800b992:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 800b996:	682c      	ldr	r4, [r5, #0]
 800b998:	65a9      	str	r1, [r5, #88]	@ 0x58
 800b99a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 800b99e:	b168      	cbz	r0, 800b9bc <UART_Start_Receive_DMA+0x3c>
 800b9a0:	6382      	str	r2, [r0, #56]	@ 0x38
 800b9a2:	460a      	mov	r2, r1
 800b9a4:	f104 0124 	add.w	r1, r4, #36	@ 0x24
 800b9a8:	4c1a      	ldr	r4, [pc, #104]	@ (800ba14 <UART_Start_Receive_DMA+0x94>)
 800b9aa:	62c4      	str	r4, [r0, #44]	@ 0x2c
 800b9ac:	4c1a      	ldr	r4, [pc, #104]	@ (800ba18 <UART_Start_Receive_DMA+0x98>)
 800b9ae:	6304      	str	r4, [r0, #48]	@ 0x30
 800b9b0:	4c1a      	ldr	r4, [pc, #104]	@ (800ba1c <UART_Start_Receive_DMA+0x9c>)
 800b9b2:	6344      	str	r4, [r0, #52]	@ 0x34
 800b9b4:	f7fa fbf4 	bl	80061a0 <HAL_DMA_Start_IT>
 800b9b8:	bb18      	cbnz	r0, 800ba02 <UART_Start_Receive_DMA+0x82>
 800b9ba:	682c      	ldr	r4, [r5, #0]
 800b9bc:	692b      	ldr	r3, [r5, #16]
 800b9be:	b13b      	cbz	r3, 800b9d0 <UART_Start_Receive_DMA+0x50>
 800b9c0:	e854 3f00 	ldrex	r3, [r4]
 800b9c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b9c8:	e844 3200 	strex	r2, r3, [r4]
 800b9cc:	2a00      	cmp	r2, #0
 800b9ce:	d1f7      	bne.n	800b9c0 <UART_Start_Receive_DMA+0x40>
 800b9d0:	f104 0308 	add.w	r3, r4, #8
 800b9d4:	e853 3f00 	ldrex	r3, [r3]
 800b9d8:	f043 0301 	orr.w	r3, r3, #1
 800b9dc:	f104 0108 	add.w	r1, r4, #8
 800b9e0:	e841 3200 	strex	r2, r3, [r1]
 800b9e4:	2a00      	cmp	r2, #0
 800b9e6:	d1f3      	bne.n	800b9d0 <UART_Start_Receive_DMA+0x50>
 800b9e8:	f104 0308 	add.w	r3, r4, #8
 800b9ec:	e853 3f00 	ldrex	r3, [r3]
 800b9f0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b9f4:	f104 0208 	add.w	r2, r4, #8
 800b9f8:	e842 3000 	strex	r0, r3, [r2]
 800b9fc:	2800      	cmp	r0, #0
 800b9fe:	d1f3      	bne.n	800b9e8 <UART_Start_Receive_DMA+0x68>
 800ba00:	bd38      	pop	{r3, r4, r5, pc}
 800ba02:	2210      	movs	r2, #16
 800ba04:	2320      	movs	r3, #32
 800ba06:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 800ba0a:	2001      	movs	r0, #1
 800ba0c:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
 800ba10:	bd38      	pop	{r3, r4, r5, pc}
 800ba12:	bf00      	nop
 800ba14:	0800b361 	.word	0x0800b361
 800ba18:	0800b325 	.word	0x0800b325
 800ba1c:	0800ae99 	.word	0x0800ae99

0800ba20 <HAL_UART_Receive_DMA>:
 800ba20:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 800ba24:	2b20      	cmp	r3, #32
 800ba26:	d118      	bne.n	800ba5a <HAL_UART_Receive_DMA+0x3a>
 800ba28:	b101      	cbz	r1, 800ba2c <HAL_UART_Receive_DMA+0xc>
 800ba2a:	b90a      	cbnz	r2, 800ba30 <HAL_UART_Receive_DMA+0x10>
 800ba2c:	2001      	movs	r0, #1
 800ba2e:	4770      	bx	lr
 800ba30:	b430      	push	{r4, r5}
 800ba32:	4b0b      	ldr	r3, [pc, #44]	@ (800ba60 <HAL_UART_Receive_DMA+0x40>)
 800ba34:	6804      	ldr	r4, [r0, #0]
 800ba36:	2500      	movs	r5, #0
 800ba38:	429c      	cmp	r4, r3
 800ba3a:	66c5      	str	r5, [r0, #108]	@ 0x6c
 800ba3c:	d00a      	beq.n	800ba54 <HAL_UART_Receive_DMA+0x34>
 800ba3e:	6863      	ldr	r3, [r4, #4]
 800ba40:	021b      	lsls	r3, r3, #8
 800ba42:	d507      	bpl.n	800ba54 <HAL_UART_Receive_DMA+0x34>
 800ba44:	e854 3f00 	ldrex	r3, [r4]
 800ba48:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800ba4c:	e844 3500 	strex	r5, r3, [r4]
 800ba50:	2d00      	cmp	r5, #0
 800ba52:	d1f7      	bne.n	800ba44 <HAL_UART_Receive_DMA+0x24>
 800ba54:	bc30      	pop	{r4, r5}
 800ba56:	f7ff bf93 	b.w	800b980 <UART_Start_Receive_DMA>
 800ba5a:	2002      	movs	r0, #2
 800ba5c:	4770      	bx	lr
 800ba5e:	bf00      	nop
 800ba60:	40008000 	.word	0x40008000

0800ba64 <HAL_UARTEx_WakeupCallback>:
 800ba64:	4770      	bx	lr
 800ba66:	bf00      	nop

0800ba68 <HAL_UARTEx_RxFifoFullCallback>:
 800ba68:	4770      	bx	lr
 800ba6a:	bf00      	nop

0800ba6c <HAL_UARTEx_TxFifoEmptyCallback>:
 800ba6c:	4770      	bx	lr
 800ba6e:	bf00      	nop

0800ba70 <HAL_UARTEx_DisableFifoMode>:
 800ba70:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800ba74:	2b01      	cmp	r3, #1
 800ba76:	d017      	beq.n	800baa8 <HAL_UARTEx_DisableFifoMode+0x38>
 800ba78:	6802      	ldr	r2, [r0, #0]
 800ba7a:	2324      	movs	r3, #36	@ 0x24
 800ba7c:	b410      	push	{r4}
 800ba7e:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
 800ba82:	6811      	ldr	r1, [r2, #0]
 800ba84:	6814      	ldr	r4, [r2, #0]
 800ba86:	2300      	movs	r3, #0
 800ba88:	f024 0401 	bic.w	r4, r4, #1
 800ba8c:	f021 5100 	bic.w	r1, r1, #536870912	@ 0x20000000
 800ba90:	6014      	str	r4, [r2, #0]
 800ba92:	6643      	str	r3, [r0, #100]	@ 0x64
 800ba94:	6011      	str	r1, [r2, #0]
 800ba96:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
 800ba9a:	2220      	movs	r2, #32
 800ba9c:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800baa0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800baa4:	4618      	mov	r0, r3
 800baa6:	4770      	bx	lr
 800baa8:	2002      	movs	r0, #2
 800baaa:	4770      	bx	lr

0800baac <HAL_UARTEx_SetTxFifoThreshold>:
 800baac:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
 800bab0:	2a01      	cmp	r2, #1
 800bab2:	d037      	beq.n	800bb24 <HAL_UARTEx_SetTxFifoThreshold+0x78>
 800bab4:	4603      	mov	r3, r0
 800bab6:	6802      	ldr	r2, [r0, #0]
 800bab8:	2024      	movs	r0, #36	@ 0x24
 800baba:	b530      	push	{r4, r5, lr}
 800babc:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
 800bac0:	6814      	ldr	r4, [r2, #0]
 800bac2:	6810      	ldr	r0, [r2, #0]
 800bac4:	f020 0001 	bic.w	r0, r0, #1
 800bac8:	6010      	str	r0, [r2, #0]
 800baca:	6890      	ldr	r0, [r2, #8]
 800bacc:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
 800bad0:	4301      	orrs	r1, r0
 800bad2:	6e58      	ldr	r0, [r3, #100]	@ 0x64
 800bad4:	6091      	str	r1, [r2, #8]
 800bad6:	b310      	cbz	r0, 800bb1e <HAL_UARTEx_SetTxFifoThreshold+0x72>
 800bad8:	6891      	ldr	r1, [r2, #8]
 800bada:	6890      	ldr	r0, [r2, #8]
 800badc:	4d12      	ldr	r5, [pc, #72]	@ (800bb28 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
 800bade:	f3c1 6c42 	ubfx	ip, r1, #25, #3
 800bae2:	ea4f 7e50 	mov.w	lr, r0, lsr #29
 800bae6:	4911      	ldr	r1, [pc, #68]	@ (800bb2c <HAL_UARTEx_SetTxFifoThreshold+0x80>)
 800bae8:	f811 000e 	ldrb.w	r0, [r1, lr]
 800baec:	f811 100c 	ldrb.w	r1, [r1, ip]
 800baf0:	f815 e00e 	ldrb.w	lr, [r5, lr]
 800baf4:	f815 500c 	ldrb.w	r5, [r5, ip]
 800baf8:	00c0      	lsls	r0, r0, #3
 800bafa:	00c9      	lsls	r1, r1, #3
 800bafc:	fbb0 f0fe 	udiv	r0, r0, lr
 800bb00:	fbb1 f1f5 	udiv	r1, r1, r5
 800bb04:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
 800bb08:	2100      	movs	r1, #0
 800bb0a:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
 800bb0e:	2520      	movs	r5, #32
 800bb10:	6014      	str	r4, [r2, #0]
 800bb12:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
 800bb16:	4608      	mov	r0, r1
 800bb18:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
 800bb1c:	bd30      	pop	{r4, r5, pc}
 800bb1e:	2101      	movs	r1, #1
 800bb20:	4608      	mov	r0, r1
 800bb22:	e7ef      	b.n	800bb04 <HAL_UARTEx_SetTxFifoThreshold+0x58>
 800bb24:	2002      	movs	r0, #2
 800bb26:	4770      	bx	lr
 800bb28:	080183f8 	.word	0x080183f8
 800bb2c:	08018400 	.word	0x08018400

0800bb30 <HAL_UARTEx_SetRxFifoThreshold>:
 800bb30:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
 800bb34:	2a01      	cmp	r2, #1
 800bb36:	d037      	beq.n	800bba8 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 800bb38:	4603      	mov	r3, r0
 800bb3a:	6802      	ldr	r2, [r0, #0]
 800bb3c:	2024      	movs	r0, #36	@ 0x24
 800bb3e:	b530      	push	{r4, r5, lr}
 800bb40:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
 800bb44:	6814      	ldr	r4, [r2, #0]
 800bb46:	6810      	ldr	r0, [r2, #0]
 800bb48:	f020 0001 	bic.w	r0, r0, #1
 800bb4c:	6010      	str	r0, [r2, #0]
 800bb4e:	6890      	ldr	r0, [r2, #8]
 800bb50:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
 800bb54:	4301      	orrs	r1, r0
 800bb56:	6e58      	ldr	r0, [r3, #100]	@ 0x64
 800bb58:	6091      	str	r1, [r2, #8]
 800bb5a:	b310      	cbz	r0, 800bba2 <HAL_UARTEx_SetRxFifoThreshold+0x72>
 800bb5c:	6891      	ldr	r1, [r2, #8]
 800bb5e:	6890      	ldr	r0, [r2, #8]
 800bb60:	4d12      	ldr	r5, [pc, #72]	@ (800bbac <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
 800bb62:	f3c1 6c42 	ubfx	ip, r1, #25, #3
 800bb66:	ea4f 7e50 	mov.w	lr, r0, lsr #29
 800bb6a:	4911      	ldr	r1, [pc, #68]	@ (800bbb0 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 800bb6c:	f811 000e 	ldrb.w	r0, [r1, lr]
 800bb70:	f811 100c 	ldrb.w	r1, [r1, ip]
 800bb74:	f815 e00e 	ldrb.w	lr, [r5, lr]
 800bb78:	f815 500c 	ldrb.w	r5, [r5, ip]
 800bb7c:	00c0      	lsls	r0, r0, #3
 800bb7e:	00c9      	lsls	r1, r1, #3
 800bb80:	fbb0 f0fe 	udiv	r0, r0, lr
 800bb84:	fbb1 f1f5 	udiv	r1, r1, r5
 800bb88:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
 800bb8c:	2100      	movs	r1, #0
 800bb8e:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
 800bb92:	2520      	movs	r5, #32
 800bb94:	6014      	str	r4, [r2, #0]
 800bb96:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
 800bb9a:	4608      	mov	r0, r1
 800bb9c:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
 800bba0:	bd30      	pop	{r4, r5, pc}
 800bba2:	2101      	movs	r1, #1
 800bba4:	4608      	mov	r0, r1
 800bba6:	e7ef      	b.n	800bb88 <HAL_UARTEx_SetRxFifoThreshold+0x58>
 800bba8:	2002      	movs	r0, #2
 800bbaa:	4770      	bx	lr
 800bbac:	080183f8 	.word	0x080183f8
 800bbb0:	08018400 	.word	0x08018400

0800bbb4 <USB_EnableGlobalInt>:
 800bbb4:	4603      	mov	r3, r0
 800bbb6:	f64b 7280 	movw	r2, #49024	@ 0xbf80
 800bbba:	2000      	movs	r0, #0
 800bbbc:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 800bbc0:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800bbc4:	4770      	bx	lr
 800bbc6:	bf00      	nop

0800bbc8 <USB_DisableGlobalInt>:
 800bbc8:	f8b0 1040 	ldrh.w	r1, [r0, #64]	@ 0x40
 800bbcc:	4603      	mov	r3, r0
 800bbce:	f244 027f 	movw	r2, #16511	@ 0x407f
 800bbd2:	400a      	ands	r2, r1
 800bbd4:	2000      	movs	r0, #0
 800bbd6:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800bbda:	4770      	bx	lr

0800bbdc <USB_DevInit>:
 800bbdc:	4603      	mov	r3, r0
 800bbde:	b082      	sub	sp, #8
 800bbe0:	f04f 0c01 	mov.w	ip, #1
 800bbe4:	2000      	movs	r0, #0
 800bbe6:	f8a3 c040 	strh.w	ip, [r3, #64]	@ 0x40
 800bbea:	f10d 0c08 	add.w	ip, sp, #8
 800bbee:	f8a3 0040 	strh.w	r0, [r3, #64]	@ 0x40
 800bbf2:	e90c 0006 	stmdb	ip, {r1, r2}
 800bbf6:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 800bbfa:	f8a3 0050 	strh.w	r0, [r3, #80]	@ 0x50
 800bbfe:	b002      	add	sp, #8
 800bc00:	4770      	bx	lr
 800bc02:	bf00      	nop

0800bc04 <USB_ActivateEndpoint>:
 800bc04:	b570      	push	{r4, r5, r6, lr}
 800bc06:	780c      	ldrb	r4, [r1, #0]
 800bc08:	f891 e003 	ldrb.w	lr, [r1, #3]
 800bc0c:	fa0f fc84 	sxth.w	ip, r4
 800bc10:	4603      	mov	r3, r0
 800bc12:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 800bc16:	f422 42ec 	bic.w	r2, r2, #30208	@ 0x7600
 800bc1a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc1e:	0412      	lsls	r2, r2, #16
 800bc20:	0c12      	lsrs	r2, r2, #16
 800bc22:	f1be 0f03 	cmp.w	lr, #3
 800bc26:	f200 81f1 	bhi.w	800c00c <USB_ActivateEndpoint+0x408>
 800bc2a:	e8df f01e 	tbh	[pc, lr, lsl #1]
 800bc2e:	00f2      	.short	0x00f2
 800bc30:	00ab00f5 	.word	0x00ab00f5
 800bc34:	0004      	.short	0x0004
 800bc36:	f442 62c0 	orr.w	r2, r2, #1536	@ 0x600
 800bc3a:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bc3e:	4302      	orrs	r2, r0
 800bc40:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc44:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc48:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bc4c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc50:	0412      	lsls	r2, r2, #16
 800bc52:	0c12      	lsrs	r2, r2, #16
 800bc54:	4322      	orrs	r2, r4
 800bc56:	4310      	orrs	r0, r2
 800bc58:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800bc5c:	7b0a      	ldrb	r2, [r1, #12]
 800bc5e:	2a00      	cmp	r2, #0
 800bc60:	f000 80a2 	beq.w	800bda8 <USB_ActivateEndpoint+0x1a4>
 800bc64:	2000      	movs	r0, #0
 800bc66:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc6a:	f422 42e2 	bic.w	r2, r2, #28928	@ 0x7100
 800bc6e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc72:	0412      	lsls	r2, r2, #16
 800bc74:	0c12      	lsrs	r2, r2, #16
 800bc76:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bc7a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bc7e:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc82:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bc86:	890a      	ldrh	r2, [r1, #8]
 800bc88:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800bc8c:	fa14 f585 	uxtah	r5, r4, r5
 800bc90:	0852      	lsrs	r2, r2, #1
 800bc92:	0052      	lsls	r2, r2, #1
 800bc94:	f8a5 2400 	strh.w	r2, [r5, #1024]	@ 0x400
 800bc98:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bc9c:	894a      	ldrh	r2, [r1, #10]
 800bc9e:	fa14 f585 	uxtah	r5, r4, r5
 800bca2:	0852      	lsrs	r2, r2, #1
 800bca4:	0052      	lsls	r2, r2, #1
 800bca6:	f8a5 2404 	strh.w	r2, [r5, #1028]	@ 0x404
 800bcaa:	784a      	ldrb	r2, [r1, #1]
 800bcac:	2a00      	cmp	r2, #0
 800bcae:	f040 8107 	bne.w	800bec0 <USB_ActivateEndpoint+0x2bc>
 800bcb2:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bcb6:	0455      	lsls	r5, r2, #17
 800bcb8:	d50d      	bpl.n	800bcd6 <USB_ActivateEndpoint+0xd2>
 800bcba:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bcbe:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bcc2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bcc6:	0412      	lsls	r2, r2, #16
 800bcc8:	0c12      	lsrs	r2, r2, #16
 800bcca:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bcce:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bcd2:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bcd6:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bcda:	0652      	lsls	r2, r2, #25
 800bcdc:	d50d      	bpl.n	800bcfa <USB_ActivateEndpoint+0xf6>
 800bcde:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bce2:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bce6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bcea:	0412      	lsls	r2, r2, #16
 800bcec:	0c12      	lsrs	r2, r2, #16
 800bcee:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bcf2:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bcf6:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bcfa:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800bcfe:	690d      	ldr	r5, [r1, #16]
 800bd00:	fa14 f282 	uxtah	r2, r4, r2
 800bd04:	f204 4406 	addw	r4, r4, #1030	@ 0x406
 800bd08:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bd0c:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bd10:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bd14:	2d00      	cmp	r5, #0
 800bd16:	f000 8119 	beq.w	800bf4c <USB_ActivateEndpoint+0x348>
 800bd1a:	2d3e      	cmp	r5, #62	@ 0x3e
 800bd1c:	f200 8157 	bhi.w	800bfce <USB_ActivateEndpoint+0x3ca>
 800bd20:	0869      	lsrs	r1, r5, #1
 800bd22:	07ee      	lsls	r6, r5, #31
 800bd24:	bf48      	it	mi
 800bd26:	3101      	addmi	r1, #1
 800bd28:	028d      	lsls	r5, r1, #10
 800bd2a:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bd2e:	b2ad      	uxth	r5, r5
 800bd30:	b289      	uxth	r1, r1
 800bd32:	4329      	orrs	r1, r5
 800bd34:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bd38:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800bd3c:	b292      	uxth	r2, r2
 800bd3e:	5b11      	ldrh	r1, [r2, r4]
 800bd40:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bd44:	5311      	strh	r1, [r2, r4]
 800bd46:	5b11      	ldrh	r1, [r2, r4]
 800bd48:	b289      	uxth	r1, r1
 800bd4a:	430d      	orrs	r5, r1
 800bd4c:	5315      	strh	r5, [r2, r4]
 800bd4e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd52:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bd56:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bd5a:	0412      	lsls	r2, r2, #16
 800bd5c:	0c12      	lsrs	r2, r2, #16
 800bd5e:	f248 0180 	movw	r1, #32896	@ 0x8080
 800bd62:	f482 5240 	eor.w	r2, r2, #12288	@ 0x3000
 800bd66:	430a      	orrs	r2, r1
 800bd68:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bd6c:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd70:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bd74:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bd78:	0412      	lsls	r2, r2, #16
 800bd7a:	0c12      	lsrs	r2, r2, #16
 800bd7c:	4311      	orrs	r1, r2
 800bd7e:	f823 102c 	strh.w	r1, [r3, ip, lsl #2]
 800bd82:	bd70      	pop	{r4, r5, r6, pc}
 800bd84:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bd88:	4302      	orrs	r2, r0
 800bd8a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bd8e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd92:	4daa      	ldr	r5, [pc, #680]	@ (800c03c <USB_ActivateEndpoint+0x438>)
 800bd94:	b292      	uxth	r2, r2
 800bd96:	402a      	ands	r2, r5
 800bd98:	4322      	orrs	r2, r4
 800bd9a:	4310      	orrs	r0, r2
 800bd9c:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800bda0:	7b0a      	ldrb	r2, [r1, #12]
 800bda2:	2a00      	cmp	r2, #0
 800bda4:	f040 80f4 	bne.w	800bf90 <USB_ActivateEndpoint+0x38c>
 800bda8:	2000      	movs	r0, #0
 800bdaa:	88ca      	ldrh	r2, [r1, #6]
 800bdac:	784e      	ldrb	r6, [r1, #1]
 800bdae:	0852      	lsrs	r2, r2, #1
 800bdb0:	0052      	lsls	r2, r2, #1
 800bdb2:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800bdb6:	b3de      	cbz	r6, 800be30 <USB_ActivateEndpoint+0x22c>
 800bdb8:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bdbc:	fa15 f181 	uxtah	r1, r5, r1
 800bdc0:	f8a1 2400 	strh.w	r2, [r1, #1024]	@ 0x400
 800bdc4:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bdc8:	0652      	lsls	r2, r2, #25
 800bdca:	d50d      	bpl.n	800bde8 <USB_ActivateEndpoint+0x1e4>
 800bdcc:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bdd0:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bdd4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bdd8:	0412      	lsls	r2, r2, #16
 800bdda:	0c12      	lsrs	r2, r2, #16
 800bddc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bde0:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bde4:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bde8:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bdec:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bdf0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bdf4:	0412      	lsls	r2, r2, #16
 800bdf6:	f1be 0f01 	cmp.w	lr, #1
 800bdfa:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800bdfe:	d010      	beq.n	800be22 <USB_ActivateEndpoint+0x21e>
 800be00:	f082 0220 	eor.w	r2, r2, #32
 800be04:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800be08:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be0c:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800be10:	bd70      	pop	{r4, r5, r6, pc}
 800be12:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800be16:	e710      	b.n	800bc3a <USB_ActivateEndpoint+0x36>
 800be18:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800be1c:	e70d      	b.n	800bc3a <USB_ActivateEndpoint+0x36>
 800be1e:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 800be22:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800be26:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be2a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800be2e:	bd70      	pop	{r4, r5, r6, pc}
 800be30:	690e      	ldr	r6, [r1, #16]
 800be32:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800be36:	fa15 f181 	uxtah	r1, r5, r1
 800be3a:	f8a1 2404 	strh.w	r2, [r1, #1028]	@ 0x404
 800be3e:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800be42:	fa15 f282 	uxtah	r2, r5, r2
 800be46:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800be4a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800be4e:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800be52:	2e00      	cmp	r6, #0
 800be54:	f000 8092 	beq.w	800bf7c <USB_ActivateEndpoint+0x378>
 800be58:	2e3e      	cmp	r6, #62	@ 0x3e
 800be5a:	f200 80a5 	bhi.w	800bfa8 <USB_ActivateEndpoint+0x3a4>
 800be5e:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800be62:	0875      	lsrs	r5, r6, #1
 800be64:	07f6      	lsls	r6, r6, #31
 800be66:	bf48      	it	mi
 800be68:	3501      	addmi	r5, #1
 800be6a:	b289      	uxth	r1, r1
 800be6c:	ea41 2185 	orr.w	r1, r1, r5, lsl #10
 800be70:	b289      	uxth	r1, r1
 800be72:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800be76:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800be7a:	0456      	lsls	r6, r2, #17
 800be7c:	d50d      	bpl.n	800be9a <USB_ActivateEndpoint+0x296>
 800be7e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800be82:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800be86:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be8a:	0412      	lsls	r2, r2, #16
 800be8c:	0c12      	lsrs	r2, r2, #16
 800be8e:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800be92:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be96:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800be9a:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800be9e:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bea2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bea6:	0412      	lsls	r2, r2, #16
 800bea8:	0c12      	lsrs	r2, r2, #16
 800beaa:	2c00      	cmp	r4, #0
 800beac:	d1b7      	bne.n	800be1e <USB_ActivateEndpoint+0x21a>
 800beae:	f482 5240 	eor.w	r2, r2, #12288	@ 0x3000
 800beb2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800beb6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800beba:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bebe:	bd70      	pop	{r4, r5, r6, pc}
 800bec0:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bec4:	0451      	lsls	r1, r2, #17
 800bec6:	d50d      	bpl.n	800bee4 <USB_ActivateEndpoint+0x2e0>
 800bec8:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800becc:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bed0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bed4:	0412      	lsls	r2, r2, #16
 800bed6:	0c12      	lsrs	r2, r2, #16
 800bed8:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bedc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bee0:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bee4:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bee8:	0652      	lsls	r2, r2, #25
 800beea:	d50d      	bpl.n	800bf08 <USB_ActivateEndpoint+0x304>
 800beec:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bef0:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bef4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bef8:	0412      	lsls	r2, r2, #16
 800befa:	0c12      	lsrs	r2, r2, #16
 800befc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bf00:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bf04:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bf08:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bf0c:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bf10:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bf14:	0412      	lsls	r2, r2, #16
 800bf16:	0c12      	lsrs	r2, r2, #16
 800bf18:	f1be 0f01 	cmp.w	lr, #1
 800bf1c:	bf18      	it	ne
 800bf1e:	f082 0220 	eorne.w	r2, r2, #32
 800bf22:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bf26:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf2a:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bf2e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bf32:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bf36:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bf3a:	0412      	lsls	r2, r2, #16
 800bf3c:	0c12      	lsrs	r2, r2, #16
 800bf3e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bf42:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf46:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bf4a:	bd70      	pop	{r4, r5, r6, pc}
 800bf4c:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bf50:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bf54:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bf58:	b289      	uxth	r1, r1
 800bf5a:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bf5e:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bf62:	b289      	uxth	r1, r1
 800bf64:	5b0a      	ldrh	r2, [r1, r4]
 800bf66:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bf6a:	530a      	strh	r2, [r1, r4]
 800bf6c:	5b0a      	ldrh	r2, [r1, r4]
 800bf6e:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800bf72:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 800bf76:	b292      	uxth	r2, r2
 800bf78:	530a      	strh	r2, [r1, r4]
 800bf7a:	e6e8      	b.n	800bd4e <USB_ActivateEndpoint+0x14a>
 800bf7c:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bf80:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bf84:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bf88:	b289      	uxth	r1, r1
 800bf8a:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bf8e:	e772      	b.n	800be76 <USB_ActivateEndpoint+0x272>
 800bf90:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bf94:	b292      	uxth	r2, r2
 800bf96:	402a      	ands	r2, r5
 800bf98:	f442 4201 	orr.w	r2, r2, #33024	@ 0x8100
 800bf9c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bfa0:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bfa4:	2000      	movs	r0, #0
 800bfa6:	e66c      	b.n	800bc82 <USB_ActivateEndpoint+0x7e>
 800bfa8:	06f1      	lsls	r1, r6, #27
 800bfaa:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bfae:	ea4f 1556 	mov.w	r5, r6, lsr #5
 800bfb2:	bf08      	it	eq
 800bfb4:	f105 35ff 	addeq.w	r5, r5, #4294967295
 800bfb8:	b289      	uxth	r1, r1
 800bfba:	ea41 2185 	orr.w	r1, r1, r5, lsl #10
 800bfbe:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bfc2:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bfc6:	b289      	uxth	r1, r1
 800bfc8:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bfcc:	e753      	b.n	800be76 <USB_ActivateEndpoint+0x272>
 800bfce:	0969      	lsrs	r1, r5, #5
 800bfd0:	06ed      	lsls	r5, r5, #27
 800bfd2:	bf08      	it	eq
 800bfd4:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800bfd8:	f8b2 5402 	ldrh.w	r5, [r2, #1026]	@ 0x402
 800bfdc:	0289      	lsls	r1, r1, #10
 800bfde:	b289      	uxth	r1, r1
 800bfe0:	b2ad      	uxth	r5, r5
 800bfe2:	430d      	orrs	r5, r1
 800bfe4:	f445 4500 	orr.w	r5, r5, #32768	@ 0x8000
 800bfe8:	f8a2 5402 	strh.w	r5, [r2, #1026]	@ 0x402
 800bfec:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bff0:	b2ad      	uxth	r5, r5
 800bff2:	5b2a      	ldrh	r2, [r5, r4]
 800bff4:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bff8:	532a      	strh	r2, [r5, r4]
 800bffa:	5b2a      	ldrh	r2, [r5, r4]
 800bffc:	430a      	orrs	r2, r1
 800bffe:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800c002:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 800c006:	b292      	uxth	r2, r2
 800c008:	532a      	strh	r2, [r5, r4]
 800c00a:	e6a0      	b.n	800bd4e <USB_ActivateEndpoint+0x14a>
 800c00c:	f248 0080 	movw	r0, #32896	@ 0x8080
 800c010:	4302      	orrs	r2, r0
 800c012:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800c016:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800c01a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c01e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c022:	0412      	lsls	r2, r2, #16
 800c024:	0c12      	lsrs	r2, r2, #16
 800c026:	4322      	orrs	r2, r4
 800c028:	4310      	orrs	r0, r2
 800c02a:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800c02e:	7b0a      	ldrb	r2, [r1, #12]
 800c030:	2001      	movs	r0, #1
 800c032:	2a00      	cmp	r2, #0
 800c034:	f47f ae17 	bne.w	800bc66 <USB_ActivateEndpoint+0x62>
 800c038:	e6b7      	b.n	800bdaa <USB_ActivateEndpoint+0x1a6>
 800c03a:	bf00      	nop
 800c03c:	ffff8f8f 	.word	0xffff8f8f

0800c040 <USB_DeactivateEndpoint>:
 800c040:	b410      	push	{r4}
 800c042:	7b0c      	ldrb	r4, [r1, #12]
 800c044:	784a      	ldrb	r2, [r1, #1]
 800c046:	780b      	ldrb	r3, [r1, #0]
 800c048:	b9cc      	cbnz	r4, 800c07e <USB_DeactivateEndpoint+0x3e>
 800c04a:	2a00      	cmp	r2, #0
 800c04c:	f000 80b5 	beq.w	800c1ba <USB_DeactivateEndpoint+0x17a>
 800c050:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c054:	0654      	lsls	r4, r2, #25
 800c056:	f100 80c9 	bmi.w	800c1ec <USB_DeactivateEndpoint+0x1ac>
 800c05a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c05e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c062:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c066:	0412      	lsls	r2, r2, #16
 800c068:	0c12      	lsrs	r2, r2, #16
 800c06a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c06e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c072:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c076:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c07a:	2000      	movs	r0, #0
 800c07c:	4770      	bx	lr
 800c07e:	2a00      	cmp	r2, #0
 800c080:	d14d      	bne.n	800c11e <USB_DeactivateEndpoint+0xde>
 800c082:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c086:	0452      	lsls	r2, r2, #17
 800c088:	d50d      	bpl.n	800c0a6 <USB_DeactivateEndpoint+0x66>
 800c08a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c08e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c092:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c096:	0412      	lsls	r2, r2, #16
 800c098:	0c12      	lsrs	r2, r2, #16
 800c09a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c09e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c0a2:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c0a6:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0aa:	0654      	lsls	r4, r2, #25
 800c0ac:	d50d      	bpl.n	800c0ca <USB_DeactivateEndpoint+0x8a>
 800c0ae:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0b2:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c0b6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c0ba:	0412      	lsls	r2, r2, #16
 800c0bc:	0c12      	lsrs	r2, r2, #16
 800c0be:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c0c2:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c0c6:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c0ca:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c0d2:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c0d6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c0da:	0412      	lsls	r2, r2, #16
 800c0dc:	0c12      	lsrs	r2, r2, #16
 800c0de:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c0e2:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c0e6:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c0ea:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c0ee:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c0f2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c0f6:	0412      	lsls	r2, r2, #16
 800c0f8:	f248 0180 	movw	r1, #32896	@ 0x8080
 800c0fc:	0c12      	lsrs	r2, r2, #16
 800c0fe:	430a      	orrs	r2, r1
 800c100:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c104:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c108:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c10c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c110:	0412      	lsls	r2, r2, #16
 800c112:	0c12      	lsrs	r2, r2, #16
 800c114:	4311      	orrs	r1, r2
 800c116:	f820 1023 	strh.w	r1, [r0, r3, lsl #2]
 800c11a:	2000      	movs	r0, #0
 800c11c:	4770      	bx	lr
 800c11e:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c122:	0451      	lsls	r1, r2, #17
 800c124:	d50d      	bpl.n	800c142 <USB_DeactivateEndpoint+0x102>
 800c126:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c12a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c12e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c132:	0412      	lsls	r2, r2, #16
 800c134:	0c12      	lsrs	r2, r2, #16
 800c136:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c13a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c13e:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c142:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c146:	0652      	lsls	r2, r2, #25
 800c148:	d50d      	bpl.n	800c166 <USB_DeactivateEndpoint+0x126>
 800c14a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c14e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c152:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c156:	0412      	lsls	r2, r2, #16
 800c158:	0c12      	lsrs	r2, r2, #16
 800c15a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c15e:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c162:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c166:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c16a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c16e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c172:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c176:	0412      	lsls	r2, r2, #16
 800c178:	0c12      	lsrs	r2, r2, #16
 800c17a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c17e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c182:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c186:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c18a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c18e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800c192:	0412      	lsls	r2, r2, #16
 800c194:	f248 0180 	movw	r1, #32896	@ 0x8080
 800c198:	0c12      	lsrs	r2, r2, #16
 800c19a:	430a      	orrs	r2, r1
 800c19c:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c1a0:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1a4:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c1a8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1ac:	0412      	lsls	r2, r2, #16
 800c1ae:	0c12      	lsrs	r2, r2, #16
 800c1b0:	4311      	orrs	r1, r2
 800c1b2:	f820 1023 	strh.w	r1, [r0, r3, lsl #2]
 800c1b6:	2000      	movs	r0, #0
 800c1b8:	4770      	bx	lr
 800c1ba:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1be:	0451      	lsls	r1, r2, #17
 800c1c0:	d50d      	bpl.n	800c1de <USB_DeactivateEndpoint+0x19e>
 800c1c2:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1c6:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c1ca:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1ce:	0412      	lsls	r2, r2, #16
 800c1d0:	0c12      	lsrs	r2, r2, #16
 800c1d2:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800c1d6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c1da:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c1de:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1e2:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800c1e6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1ea:	e73c      	b.n	800c066 <USB_DeactivateEndpoint+0x26>
 800c1ec:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800c1f0:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800c1f4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c1f8:	0412      	lsls	r2, r2, #16
 800c1fa:	0c12      	lsrs	r2, r2, #16
 800c1fc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c200:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800c204:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800c208:	e727      	b.n	800c05a <USB_DeactivateEndpoint+0x1a>
 800c20a:	bf00      	nop

0800c20c <USB_EPStartXfer>:
 800c20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c210:	784b      	ldrb	r3, [r1, #1]
 800c212:	7b0c      	ldrb	r4, [r1, #12]
 800c214:	2b01      	cmp	r3, #1
 800c216:	b083      	sub	sp, #12
 800c218:	d036      	beq.n	800c288 <USB_EPStartXfer+0x7c>
 800c21a:	b1f4      	cbz	r4, 800c25a <USB_EPStartXfer+0x4e>
 800c21c:	78cb      	ldrb	r3, [r1, #3]
 800c21e:	2b02      	cmp	r3, #2
 800c220:	f000 80a8 	beq.w	800c374 <USB_EPStartXfer+0x168>
 800c224:	2b01      	cmp	r3, #1
 800c226:	f040 80a1 	bne.w	800c36c <USB_EPStartXfer+0x160>
 800c22a:	2300      	movs	r3, #0
 800c22c:	780a      	ldrb	r2, [r1, #0]
 800c22e:	618b      	str	r3, [r1, #24]
 800c230:	b212      	sxth	r2, r2
 800c232:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c236:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c23a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c23e:	041b      	lsls	r3, r3, #16
 800c240:	0c1b      	lsrs	r3, r3, #16
 800c242:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 800c246:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c24a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c24e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c252:	2000      	movs	r0, #0
 800c254:	b003      	add	sp, #12
 800c256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c25a:	698a      	ldr	r2, [r1, #24]
 800c25c:	780c      	ldrb	r4, [r1, #0]
 800c25e:	2a00      	cmp	r2, #0
 800c260:	d16e      	bne.n	800c340 <USB_EPStartXfer+0x134>
 800c262:	78cb      	ldrb	r3, [r1, #3]
 800c264:	2b00      	cmp	r3, #0
 800c266:	f000 80a6 	beq.w	800c3b6 <USB_EPStartXfer+0x1aa>
 800c26a:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c26e:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800c272:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c276:	041b      	lsls	r3, r3, #16
 800c278:	0c1b      	lsrs	r3, r3, #16
 800c27a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c27e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c282:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c286:	e7d0      	b.n	800c22a <USB_EPStartXfer+0x1e>
 800c288:	690d      	ldr	r5, [r1, #16]
 800c28a:	698a      	ldr	r2, [r1, #24]
 800c28c:	694b      	ldr	r3, [r1, #20]
 800c28e:	42aa      	cmp	r2, r5
 800c290:	bf28      	it	cs
 800c292:	462a      	movcs	r2, r5
 800c294:	f500 6c80 	add.w	ip, r0, #1024	@ 0x400
 800c298:	bb54      	cbnz	r4, 800c2f0 <USB_EPStartXfer+0xe4>
 800c29a:	b295      	uxth	r5, r2
 800c29c:	88ce      	ldrh	r6, [r1, #6]
 800c29e:	3501      	adds	r5, #1
 800c2a0:	086d      	lsrs	r5, r5, #1
 800c2a2:	4466      	add	r6, ip
 800c2a4:	d007      	beq.n	800c2b6 <USB_EPStartXfer+0xaa>
 800c2a6:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 800c2aa:	1af6      	subs	r6, r6, r3
 800c2ac:	881c      	ldrh	r4, [r3, #0]
 800c2ae:	539c      	strh	r4, [r3, r6]
 800c2b0:	3302      	adds	r3, #2
 800c2b2:	42ab      	cmp	r3, r5
 800c2b4:	d1fa      	bne.n	800c2ac <USB_EPStartXfer+0xa0>
 800c2b6:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 800c2ba:	780c      	ldrb	r4, [r1, #0]
 800c2bc:	f200 4502 	addw	r5, r0, #1026	@ 0x402
 800c2c0:	fa15 f383 	uxtah	r3, r5, r3
 800c2c4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c2c8:	b292      	uxth	r2, r2
 800c2ca:	801a      	strh	r2, [r3, #0]
 800c2cc:	780a      	ldrb	r2, [r1, #0]
 800c2ce:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c2d2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c2d6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c2da:	041b      	lsls	r3, r3, #16
 800c2dc:	0c1b      	lsrs	r3, r3, #16
 800c2de:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
 800c2e2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c2e6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c2ea:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c2ee:	e7b0      	b.n	800c252 <USB_EPStartXfer+0x46>
 800c2f0:	78ce      	ldrb	r6, [r1, #3]
 800c2f2:	6a0c      	ldr	r4, [r1, #32]
 800c2f4:	f891 e000 	ldrb.w	lr, [r1]
 800c2f8:	2e02      	cmp	r6, #2
 800c2fa:	d06b      	beq.n	800c3d4 <USB_EPStartXfer+0x1c8>
 800c2fc:	1aa4      	subs	r4, r4, r2
 800c2fe:	f830 502e 	ldrh.w	r5, [r0, lr, lsl #2]
 800c302:	620c      	str	r4, [r1, #32]
 800c304:	b294      	uxth	r4, r2
 800c306:	3401      	adds	r4, #1
 800c308:	f015 0f40 	tst.w	r5, #64	@ 0x40
 800c30c:	b292      	uxth	r2, r2
 800c30e:	f8b0 5050 	ldrh.w	r5, [r0, #80]	@ 0x50
 800c312:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800c316:	f000 80ae 	beq.w	800c476 <USB_EPStartXfer+0x26a>
 800c31a:	f200 4606 	addw	r6, r0, #1030	@ 0x406
 800c31e:	fa16 f585 	uxtah	r5, r6, r5
 800c322:	f825 203e 	strh.w	r2, [r5, lr, lsl #3]
 800c326:	894d      	ldrh	r5, [r1, #10]
 800c328:	4465      	add	r5, ip
 800c32a:	2c00      	cmp	r4, #0
 800c32c:	d0ce      	beq.n	800c2cc <USB_EPStartXfer+0xc0>
 800c32e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800c332:	1aed      	subs	r5, r5, r3
 800c334:	881a      	ldrh	r2, [r3, #0]
 800c336:	535a      	strh	r2, [r3, r5]
 800c338:	3302      	adds	r3, #2
 800c33a:	429c      	cmp	r4, r3
 800c33c:	d1fa      	bne.n	800c334 <USB_EPStartXfer+0x128>
 800c33e:	e7c5      	b.n	800c2cc <USB_EPStartXfer+0xc0>
 800c340:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c344:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800c348:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c34c:	041b      	lsls	r3, r3, #16
 800c34e:	0c1b      	lsrs	r3, r3, #16
 800c350:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c354:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c358:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c35c:	690b      	ldr	r3, [r1, #16]
 800c35e:	429a      	cmp	r2, r3
 800c360:	f67f af63 	bls.w	800c22a <USB_EPStartXfer+0x1e>
 800c364:	1ad3      	subs	r3, r2, r3
 800c366:	618b      	str	r3, [r1, #24]
 800c368:	780a      	ldrb	r2, [r1, #0]
 800c36a:	e761      	b.n	800c230 <USB_EPStartXfer+0x24>
 800c36c:	2001      	movs	r0, #1
 800c36e:	b003      	add	sp, #12
 800c370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c374:	69cb      	ldr	r3, [r1, #28]
 800c376:	780a      	ldrb	r2, [r1, #0]
 800c378:	2b00      	cmp	r3, #0
 800c37a:	f43f af59 	beq.w	800c230 <USB_EPStartXfer+0x24>
 800c37e:	b214      	sxth	r4, r2
 800c380:	f244 0340 	movw	r3, #16448	@ 0x4040
 800c384:	f830 5024 	ldrh.w	r5, [r0, r4, lsl #2]
 800c388:	ea03 0605 	and.w	r6, r3, r5
 800c38c:	43ab      	bics	r3, r5
 800c38e:	d002      	beq.n	800c396 <USB_EPStartXfer+0x18a>
 800c390:	2e00      	cmp	r6, #0
 800c392:	f47f af4d 	bne.w	800c230 <USB_EPStartXfer+0x24>
 800c396:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c39a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c39e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c3a2:	041b      	lsls	r3, r3, #16
 800c3a4:	0c1b      	lsrs	r3, r3, #16
 800c3a6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c3aa:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c3ae:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c3b2:	780a      	ldrb	r2, [r1, #0]
 800c3b4:	e73c      	b.n	800c230 <USB_EPStartXfer+0x24>
 800c3b6:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c3ba:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c3be:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c3c2:	041b      	lsls	r3, r3, #16
 800c3c4:	0c1b      	lsrs	r3, r3, #16
 800c3c6:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 800c3ca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c3ce:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c3d2:	e72a      	b.n	800c22a <USB_EPStartXfer+0x1e>
 800c3d4:	42a5      	cmp	r5, r4
 800c3d6:	f200 4b02 	addw	fp, r0, #1026	@ 0x402
 800c3da:	d260      	bcs.n	800c49e <USB_EPStartXfer+0x292>
 800c3dc:	f830 602e 	ldrh.w	r6, [r0, lr, lsl #2]
 800c3e0:	f426 46e0 	bic.w	r6, r6, #28672	@ 0x7000
 800c3e4:	f026 0670 	bic.w	r6, r6, #112	@ 0x70
 800c3e8:	0436      	lsls	r6, r6, #16
 800c3ea:	0c36      	lsrs	r6, r6, #16
 800c3ec:	f446 4601 	orr.w	r6, r6, #33024	@ 0x8100
 800c3f0:	f046 0680 	orr.w	r6, r6, #128	@ 0x80
 800c3f4:	f820 602e 	strh.w	r6, [r0, lr, lsl #2]
 800c3f8:	f830 602e 	ldrh.w	r6, [r0, lr, lsl #2]
 800c3fc:	b297      	uxth	r7, r2
 800c3fe:	1aa4      	subs	r4, r4, r2
 800c400:	3701      	adds	r7, #1
 800c402:	f016 0f40 	tst.w	r6, #64	@ 0x40
 800c406:	620c      	str	r4, [r1, #32]
 800c408:	f8b0 6050 	ldrh.w	r6, [r0, #80]	@ 0x50
 800c40c:	ea4f 0757 	mov.w	r7, r7, lsr #1
 800c410:	fa1f f882 	uxth.w	r8, r2
 800c414:	f200 4906 	addw	r9, r0, #1030	@ 0x406
 800c418:	d066      	beq.n	800c4e8 <USB_EPStartXfer+0x2dc>
 800c41a:	fa19 f686 	uxtah	r6, r9, r6
 800c41e:	f826 803e 	strh.w	r8, [r6, lr, lsl #3]
 800c422:	894e      	ldrh	r6, [r1, #10]
 800c424:	4466      	add	r6, ip
 800c426:	b167      	cbz	r7, 800c442 <USB_EPStartXfer+0x236>
 800c428:	eba6 0903 	sub.w	r9, r6, r3
 800c42c:	eb03 0a47 	add.w	sl, r3, r7, lsl #1
 800c430:	461e      	mov	r6, r3
 800c432:	9501      	str	r5, [sp, #4]
 800c434:	8835      	ldrh	r5, [r6, #0]
 800c436:	f826 5009 	strh.w	r5, [r6, r9]
 800c43a:	3602      	adds	r6, #2
 800c43c:	4556      	cmp	r6, sl
 800c43e:	d1f9      	bne.n	800c434 <USB_EPStartXfer+0x228>
 800c440:	9d01      	ldr	r5, [sp, #4]
 800c442:	4413      	add	r3, r2
 800c444:	42a5      	cmp	r5, r4
 800c446:	614b      	str	r3, [r1, #20]
 800c448:	d27c      	bcs.n	800c544 <USB_EPStartXfer+0x338>
 800c44a:	1aa2      	subs	r2, r4, r2
 800c44c:	620a      	str	r2, [r1, #32]
 800c44e:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c452:	fa1b f282 	uxtah	r2, fp, r2
 800c456:	f822 803e 	strh.w	r8, [r2, lr, lsl #3]
 800c45a:	890a      	ldrh	r2, [r1, #8]
 800c45c:	4462      	add	r2, ip
 800c45e:	2f00      	cmp	r7, #0
 800c460:	f43f af34 	beq.w	800c2cc <USB_EPStartXfer+0xc0>
 800c464:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 800c468:	1ad4      	subs	r4, r2, r3
 800c46a:	881a      	ldrh	r2, [r3, #0]
 800c46c:	531a      	strh	r2, [r3, r4]
 800c46e:	3302      	adds	r3, #2
 800c470:	42bb      	cmp	r3, r7
 800c472:	d1fa      	bne.n	800c46a <USB_EPStartXfer+0x25e>
 800c474:	e72a      	b.n	800c2cc <USB_EPStartXfer+0xc0>
 800c476:	f200 4602 	addw	r6, r0, #1026	@ 0x402
 800c47a:	fa16 f585 	uxtah	r5, r6, r5
 800c47e:	f825 203e 	strh.w	r2, [r5, lr, lsl #3]
 800c482:	890d      	ldrh	r5, [r1, #8]
 800c484:	4465      	add	r5, ip
 800c486:	2c00      	cmp	r4, #0
 800c488:	f43f af20 	beq.w	800c2cc <USB_EPStartXfer+0xc0>
 800c48c:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800c490:	1aed      	subs	r5, r5, r3
 800c492:	881a      	ldrh	r2, [r3, #0]
 800c494:	535a      	strh	r2, [r3, r5]
 800c496:	3302      	adds	r3, #2
 800c498:	429c      	cmp	r4, r3
 800c49a:	d1fa      	bne.n	800c492 <USB_EPStartXfer+0x286>
 800c49c:	e716      	b.n	800c2cc <USB_EPStartXfer+0xc0>
 800c49e:	f830 202e 	ldrh.w	r2, [r0, lr, lsl #2]
 800c4a2:	f422 42e2 	bic.w	r2, r2, #28928	@ 0x7100
 800c4a6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c4aa:	0412      	lsls	r2, r2, #16
 800c4ac:	0c12      	lsrs	r2, r2, #16
 800c4ae:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c4b2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c4b6:	f820 202e 	strh.w	r2, [r0, lr, lsl #2]
 800c4ba:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c4be:	fa1b f282 	uxtah	r2, fp, r2
 800c4c2:	b2a5      	uxth	r5, r4
 800c4c4:	f822 503e 	strh.w	r5, [r2, lr, lsl #3]
 800c4c8:	462c      	mov	r4, r5
 800c4ca:	3401      	adds	r4, #1
 800c4cc:	890d      	ldrh	r5, [r1, #8]
 800c4ce:	0862      	lsrs	r2, r4, #1
 800c4d0:	4465      	add	r5, ip
 800c4d2:	f43f aefb 	beq.w	800c2cc <USB_EPStartXfer+0xc0>
 800c4d6:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800c4da:	1aed      	subs	r5, r5, r3
 800c4dc:	881c      	ldrh	r4, [r3, #0]
 800c4de:	535c      	strh	r4, [r3, r5]
 800c4e0:	3302      	adds	r3, #2
 800c4e2:	429a      	cmp	r2, r3
 800c4e4:	d1fa      	bne.n	800c4dc <USB_EPStartXfer+0x2d0>
 800c4e6:	e6f1      	b.n	800c2cc <USB_EPStartXfer+0xc0>
 800c4e8:	fa1b f686 	uxtah	r6, fp, r6
 800c4ec:	f826 803e 	strh.w	r8, [r6, lr, lsl #3]
 800c4f0:	890e      	ldrh	r6, [r1, #8]
 800c4f2:	4466      	add	r6, ip
 800c4f4:	b167      	cbz	r7, 800c510 <USB_EPStartXfer+0x304>
 800c4f6:	eba6 0a03 	sub.w	sl, r6, r3
 800c4fa:	eb03 0b47 	add.w	fp, r3, r7, lsl #1
 800c4fe:	461e      	mov	r6, r3
 800c500:	9501      	str	r5, [sp, #4]
 800c502:	8835      	ldrh	r5, [r6, #0]
 800c504:	f826 500a 	strh.w	r5, [r6, sl]
 800c508:	3602      	adds	r6, #2
 800c50a:	455e      	cmp	r6, fp
 800c50c:	d1f9      	bne.n	800c502 <USB_EPStartXfer+0x2f6>
 800c50e:	9d01      	ldr	r5, [sp, #4]
 800c510:	4413      	add	r3, r2
 800c512:	42a5      	cmp	r5, r4
 800c514:	614b      	str	r3, [r1, #20]
 800c516:	d21c      	bcs.n	800c552 <USB_EPStartXfer+0x346>
 800c518:	1aa4      	subs	r4, r4, r2
 800c51a:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c51e:	620c      	str	r4, [r1, #32]
 800c520:	fa19 f282 	uxtah	r2, r9, r2
 800c524:	f822 803e 	strh.w	r8, [r2, lr, lsl #3]
 800c528:	894a      	ldrh	r2, [r1, #10]
 800c52a:	4462      	add	r2, ip
 800c52c:	2f00      	cmp	r7, #0
 800c52e:	f43f aecd 	beq.w	800c2cc <USB_EPStartXfer+0xc0>
 800c532:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 800c536:	1ad4      	subs	r4, r2, r3
 800c538:	881a      	ldrh	r2, [r3, #0]
 800c53a:	531a      	strh	r2, [r3, r4]
 800c53c:	3302      	adds	r3, #2
 800c53e:	42bb      	cmp	r3, r7
 800c540:	d1fa      	bne.n	800c538 <USB_EPStartXfer+0x32c>
 800c542:	e6c3      	b.n	800c2cc <USB_EPStartXfer+0xc0>
 800c544:	b2a7      	uxth	r7, r4
 800c546:	3701      	adds	r7, #1
 800c548:	fa1f f884 	uxth.w	r8, r4
 800c54c:	087f      	lsrs	r7, r7, #1
 800c54e:	2200      	movs	r2, #0
 800c550:	e77c      	b.n	800c44c <USB_EPStartXfer+0x240>
 800c552:	b2a7      	uxth	r7, r4
 800c554:	3701      	adds	r7, #1
 800c556:	fa1f f884 	uxth.w	r8, r4
 800c55a:	087f      	lsrs	r7, r7, #1
 800c55c:	2400      	movs	r4, #0
 800c55e:	e7dc      	b.n	800c51a <USB_EPStartXfer+0x30e>

0800c560 <USB_EPSetStall>:
 800c560:	784b      	ldrb	r3, [r1, #1]
 800c562:	780a      	ldrb	r2, [r1, #0]
 800c564:	b18b      	cbz	r3, 800c58a <USB_EPSetStall+0x2a>
 800c566:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c56a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c56e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c572:	041b      	lsls	r3, r3, #16
 800c574:	0c1b      	lsrs	r3, r3, #16
 800c576:	f083 0310 	eor.w	r3, r3, #16
 800c57a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c57e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c582:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c586:	2000      	movs	r0, #0
 800c588:	4770      	bx	lr
 800c58a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c58e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c592:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c596:	041b      	lsls	r3, r3, #16
 800c598:	0c1b      	lsrs	r3, r3, #16
 800c59a:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800c59e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c5a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c5a6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c5aa:	2000      	movs	r0, #0
 800c5ac:	4770      	bx	lr
 800c5ae:	bf00      	nop

0800c5b0 <USB_EPClearStall>:
 800c5b0:	784b      	ldrb	r3, [r1, #1]
 800c5b2:	780a      	ldrb	r2, [r1, #0]
 800c5b4:	b333      	cbz	r3, 800c604 <USB_EPClearStall+0x54>
 800c5b6:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5ba:	065b      	lsls	r3, r3, #25
 800c5bc:	d50d      	bpl.n	800c5da <USB_EPClearStall+0x2a>
 800c5be:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5c2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c5c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c5ca:	041b      	lsls	r3, r3, #16
 800c5cc:	0c1b      	lsrs	r3, r3, #16
 800c5ce:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c5d2:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c5d6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c5da:	78cb      	ldrb	r3, [r1, #3]
 800c5dc:	2b01      	cmp	r3, #1
 800c5de:	d00f      	beq.n	800c600 <USB_EPClearStall+0x50>
 800c5e0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c5e4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c5e8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c5ec:	041b      	lsls	r3, r3, #16
 800c5ee:	0c1b      	lsrs	r3, r3, #16
 800c5f0:	f083 0320 	eor.w	r3, r3, #32
 800c5f4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c5f8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c5fc:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c600:	2000      	movs	r0, #0
 800c602:	4770      	bx	lr
 800c604:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c608:	045b      	lsls	r3, r3, #17
 800c60a:	d50d      	bpl.n	800c628 <USB_EPClearStall+0x78>
 800c60c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c610:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c614:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c618:	041b      	lsls	r3, r3, #16
 800c61a:	0c1b      	lsrs	r3, r3, #16
 800c61c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800c620:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c624:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c628:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c62c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c630:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c634:	041b      	lsls	r3, r3, #16
 800c636:	0c1b      	lsrs	r3, r3, #16
 800c638:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 800c63c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c640:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c644:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c648:	2000      	movs	r0, #0
 800c64a:	4770      	bx	lr

0800c64c <USB_SetDevAddress>:
 800c64c:	b911      	cbnz	r1, 800c654 <USB_SetDevAddress+0x8>
 800c64e:	2380      	movs	r3, #128	@ 0x80
 800c650:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
 800c654:	2000      	movs	r0, #0
 800c656:	4770      	bx	lr

0800c658 <USB_DevConnect>:
 800c658:	4602      	mov	r2, r0
 800c65a:	2000      	movs	r0, #0
 800c65c:	f8b2 3058 	ldrh.w	r3, [r2, #88]	@ 0x58
 800c660:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800c664:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800c668:	b29b      	uxth	r3, r3
 800c66a:	f8a2 3058 	strh.w	r3, [r2, #88]	@ 0x58
 800c66e:	4770      	bx	lr

0800c670 <USB_ReadInterrupts>:
 800c670:	f8b0 0044 	ldrh.w	r0, [r0, #68]	@ 0x44
 800c674:	b280      	uxth	r0, r0
 800c676:	4770      	bx	lr

0800c678 <USB_WritePMA>:
 800c678:	3301      	adds	r3, #1
 800c67a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c67e:	085b      	lsrs	r3, r3, #1
 800c680:	4410      	add	r0, r2
 800c682:	d008      	beq.n	800c696 <USB_WritePMA+0x1e>
 800c684:	460a      	mov	r2, r1
 800c686:	1a80      	subs	r0, r0, r2
 800c688:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800c68c:	8813      	ldrh	r3, [r2, #0]
 800c68e:	5213      	strh	r3, [r2, r0]
 800c690:	3202      	adds	r2, #2
 800c692:	428a      	cmp	r2, r1
 800c694:	d1fa      	bne.n	800c68c <USB_WritePMA+0x14>
 800c696:	4770      	bx	lr

0800c698 <USB_ReadPMA>:
 800c698:	b570      	push	{r4, r5, r6, lr}
 800c69a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c69e:	085e      	lsrs	r6, r3, #1
 800c6a0:	eb00 0502 	add.w	r5, r0, r2
 800c6a4:	d01c      	beq.n	800c6e0 <USB_ReadPMA+0x48>
 800c6a6:	f06f 0401 	mvn.w	r4, #1
 800c6aa:	1a64      	subs	r4, r4, r1
 800c6ac:	1c8a      	adds	r2, r1, #2
 800c6ae:	442c      	add	r4, r5
 800c6b0:	46b6      	mov	lr, r6
 800c6b2:	f834 c002 	ldrh.w	ip, [r4, r2]
 800c6b6:	3202      	adds	r2, #2
 800c6b8:	fa1f fc8c 	uxth.w	ip, ip
 800c6bc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 800c6c0:	f1be 0e01 	subs.w	lr, lr, #1
 800c6c4:	f802 cc04 	strb.w	ip, [r2, #-4]
 800c6c8:	f802 0c03 	strb.w	r0, [r2, #-3]
 800c6cc:	d1f1      	bne.n	800c6b2 <USB_ReadPMA+0x1a>
 800c6ce:	eb05 0246 	add.w	r2, r5, r6, lsl #1
 800c6d2:	07db      	lsls	r3, r3, #31
 800c6d4:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 800c6d8:	bf44      	itt	mi
 800c6da:	8813      	ldrhmi	r3, [r2, #0]
 800c6dc:	700b      	strbmi	r3, [r1, #0]
 800c6de:	bd70      	pop	{r4, r5, r6, pc}
 800c6e0:	462a      	mov	r2, r5
 800c6e2:	07db      	lsls	r3, r3, #31
 800c6e4:	bf44      	itt	mi
 800c6e6:	8813      	ldrhmi	r3, [r2, #0]
 800c6e8:	700b      	strbmi	r3, [r1, #0]
 800c6ea:	bd70      	pop	{r4, r5, r6, pc}

0800c6ec <USBD_CDC_EP0_RxReady>:
 800c6ec:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c6f0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800c6f4:	b510      	push	{r4, lr}
 800c6f6:	f8d0 42c0 	ldr.w	r4, [r0, #704]	@ 0x2c0
 800c6fa:	b184      	cbz	r4, 800c71e <USBD_CDC_EP0_RxReady+0x32>
 800c6fc:	f8d0 32c4 	ldr.w	r3, [r0, #708]	@ 0x2c4
 800c700:	b15b      	cbz	r3, 800c71a <USBD_CDC_EP0_RxReady+0x2e>
 800c702:	f894 0200 	ldrb.w	r0, [r4, #512]	@ 0x200
 800c706:	28ff      	cmp	r0, #255	@ 0xff
 800c708:	d007      	beq.n	800c71a <USBD_CDC_EP0_RxReady+0x2e>
 800c70a:	689b      	ldr	r3, [r3, #8]
 800c70c:	f894 2201 	ldrb.w	r2, [r4, #513]	@ 0x201
 800c710:	4621      	mov	r1, r4
 800c712:	4798      	blx	r3
 800c714:	23ff      	movs	r3, #255	@ 0xff
 800c716:	f884 3200 	strb.w	r3, [r4, #512]	@ 0x200
 800c71a:	2000      	movs	r0, #0
 800c71c:	bd10      	pop	{r4, pc}
 800c71e:	2003      	movs	r0, #3
 800c720:	bd10      	pop	{r4, pc}
 800c722:	bf00      	nop

0800c724 <USBD_CDC_GetDeviceQualifierDescriptor>:
 800c724:	230a      	movs	r3, #10
 800c726:	8003      	strh	r3, [r0, #0]
 800c728:	4800      	ldr	r0, [pc, #0]	@ (800c72c <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 800c72a:	4770      	bx	lr
 800c72c:	200000bc 	.word	0x200000bc

0800c730 <USBD_CDC_GetFSCfgDesc>:
 800c730:	b570      	push	{r4, r5, r6, lr}
 800c732:	2182      	movs	r1, #130	@ 0x82
 800c734:	4606      	mov	r6, r0
 800c736:	480f      	ldr	r0, [pc, #60]	@ (800c774 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c738:	f000 fb92 	bl	800ce60 <USBD_GetEpDesc>
 800c73c:	2101      	movs	r1, #1
 800c73e:	4605      	mov	r5, r0
 800c740:	480c      	ldr	r0, [pc, #48]	@ (800c774 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c742:	f000 fb8d 	bl	800ce60 <USBD_GetEpDesc>
 800c746:	2181      	movs	r1, #129	@ 0x81
 800c748:	4604      	mov	r4, r0
 800c74a:	480a      	ldr	r0, [pc, #40]	@ (800c774 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c74c:	f000 fb88 	bl	800ce60 <USBD_GetEpDesc>
 800c750:	b10d      	cbz	r5, 800c756 <USBD_CDC_GetFSCfgDesc+0x26>
 800c752:	2210      	movs	r2, #16
 800c754:	71aa      	strb	r2, [r5, #6]
 800c756:	b11c      	cbz	r4, 800c760 <USBD_CDC_GetFSCfgDesc+0x30>
 800c758:	2200      	movs	r2, #0
 800c75a:	2140      	movs	r1, #64	@ 0x40
 800c75c:	7121      	strb	r1, [r4, #4]
 800c75e:	7162      	strb	r2, [r4, #5]
 800c760:	b118      	cbz	r0, 800c76a <USBD_CDC_GetFSCfgDesc+0x3a>
 800c762:	2200      	movs	r2, #0
 800c764:	2140      	movs	r1, #64	@ 0x40
 800c766:	7101      	strb	r1, [r0, #4]
 800c768:	7142      	strb	r2, [r0, #5]
 800c76a:	2343      	movs	r3, #67	@ 0x43
 800c76c:	4801      	ldr	r0, [pc, #4]	@ (800c774 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c76e:	8033      	strh	r3, [r6, #0]
 800c770:	bd70      	pop	{r4, r5, r6, pc}
 800c772:	bf00      	nop
 800c774:	20000040 	.word	0x20000040

0800c778 <USBD_CDC_GetHSCfgDesc>:
 800c778:	b570      	push	{r4, r5, r6, lr}
 800c77a:	2182      	movs	r1, #130	@ 0x82
 800c77c:	4606      	mov	r6, r0
 800c77e:	480f      	ldr	r0, [pc, #60]	@ (800c7bc <USBD_CDC_GetHSCfgDesc+0x44>)
 800c780:	f000 fb6e 	bl	800ce60 <USBD_GetEpDesc>
 800c784:	2101      	movs	r1, #1
 800c786:	4605      	mov	r5, r0
 800c788:	480c      	ldr	r0, [pc, #48]	@ (800c7bc <USBD_CDC_GetHSCfgDesc+0x44>)
 800c78a:	f000 fb69 	bl	800ce60 <USBD_GetEpDesc>
 800c78e:	2181      	movs	r1, #129	@ 0x81
 800c790:	4604      	mov	r4, r0
 800c792:	480a      	ldr	r0, [pc, #40]	@ (800c7bc <USBD_CDC_GetHSCfgDesc+0x44>)
 800c794:	f000 fb64 	bl	800ce60 <USBD_GetEpDesc>
 800c798:	b10d      	cbz	r5, 800c79e <USBD_CDC_GetHSCfgDesc+0x26>
 800c79a:	2210      	movs	r2, #16
 800c79c:	71aa      	strb	r2, [r5, #6]
 800c79e:	b11c      	cbz	r4, 800c7a8 <USBD_CDC_GetHSCfgDesc+0x30>
 800c7a0:	2100      	movs	r1, #0
 800c7a2:	2202      	movs	r2, #2
 800c7a4:	7121      	strb	r1, [r4, #4]
 800c7a6:	7162      	strb	r2, [r4, #5]
 800c7a8:	b118      	cbz	r0, 800c7b2 <USBD_CDC_GetHSCfgDesc+0x3a>
 800c7aa:	2100      	movs	r1, #0
 800c7ac:	2202      	movs	r2, #2
 800c7ae:	7101      	strb	r1, [r0, #4]
 800c7b0:	7142      	strb	r2, [r0, #5]
 800c7b2:	2343      	movs	r3, #67	@ 0x43
 800c7b4:	4801      	ldr	r0, [pc, #4]	@ (800c7bc <USBD_CDC_GetHSCfgDesc+0x44>)
 800c7b6:	8033      	strh	r3, [r6, #0]
 800c7b8:	bd70      	pop	{r4, r5, r6, pc}
 800c7ba:	bf00      	nop
 800c7bc:	20000040 	.word	0x20000040

0800c7c0 <USBD_CDC_DataOut>:
 800c7c0:	b538      	push	{r3, r4, r5, lr}
 800c7c2:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c7c6:	33b0      	adds	r3, #176	@ 0xb0
 800c7c8:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
 800c7cc:	b195      	cbz	r5, 800c7f4 <USBD_CDC_DataOut+0x34>
 800c7ce:	4604      	mov	r4, r0
 800c7d0:	f002 fde8 	bl	800f3a4 <USBD_LL_GetRxDataSize>
 800c7d4:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c7d8:	f8c5 020c 	str.w	r0, [r5, #524]	@ 0x20c
 800c7dc:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800c7e0:	f8d5 0204 	ldr.w	r0, [r5, #516]	@ 0x204
 800c7e4:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
 800c7e8:	f505 7103 	add.w	r1, r5, #524	@ 0x20c
 800c7ec:	68db      	ldr	r3, [r3, #12]
 800c7ee:	4798      	blx	r3
 800c7f0:	2000      	movs	r0, #0
 800c7f2:	bd38      	pop	{r3, r4, r5, pc}
 800c7f4:	2003      	movs	r0, #3
 800c7f6:	bd38      	pop	{r3, r4, r5, pc}

0800c7f8 <USBD_CDC_DataIn>:
 800c7f8:	b570      	push	{r4, r5, r6, lr}
 800c7fa:	f8d0 42d4 	ldr.w	r4, [r0, #724]	@ 0x2d4
 800c7fe:	f8d0 62c8 	ldr.w	r6, [r0, #712]	@ 0x2c8
 800c802:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 800c806:	f8d4 52c0 	ldr.w	r5, [r4, #704]	@ 0x2c0
 800c80a:	b335      	cbz	r5, 800c85a <USBD_CDC_DataIn+0x62>
 800c80c:	f001 0c0f 	and.w	ip, r1, #15
 800c810:	eb0c 0e8c 	add.w	lr, ip, ip, lsl #2
 800c814:	eb00 0c8e 	add.w	ip, r0, lr, lsl #2
 800c818:	460a      	mov	r2, r1
 800c81a:	f8dc 3018 	ldr.w	r3, [ip, #24]
 800c81e:	b96b      	cbnz	r3, 800c83c <USBD_CDC_DataIn+0x44>
 800c820:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
 800c824:	691b      	ldr	r3, [r3, #16]
 800c826:	2100      	movs	r1, #0
 800c828:	f8c5 1214 	str.w	r1, [r5, #532]	@ 0x214
 800c82c:	b123      	cbz	r3, 800c838 <USBD_CDC_DataIn+0x40>
 800c82e:	f8d5 0208 	ldr.w	r0, [r5, #520]	@ 0x208
 800c832:	f505 7104 	add.w	r1, r5, #528	@ 0x210
 800c836:	4798      	blx	r3
 800c838:	2000      	movs	r0, #0
 800c83a:	bd70      	pop	{r4, r5, r6, pc}
 800c83c:	eb06 06ce 	add.w	r6, r6, lr, lsl #3
 800c840:	6a36      	ldr	r6, [r6, #32]
 800c842:	fbb3 fef6 	udiv	lr, r3, r6
 800c846:	fb06 331e 	mls	r3, r6, lr, r3
 800c84a:	2b00      	cmp	r3, #0
 800c84c:	d1e8      	bne.n	800c820 <USBD_CDC_DataIn+0x28>
 800c84e:	f8cc 3018 	str.w	r3, [ip, #24]
 800c852:	461a      	mov	r2, r3
 800c854:	f002 fd8e 	bl	800f374 <USBD_LL_Transmit>
 800c858:	e7ee      	b.n	800c838 <USBD_CDC_DataIn+0x40>
 800c85a:	2003      	movs	r0, #3
 800c85c:	bd70      	pop	{r4, r5, r6, pc}
 800c85e:	bf00      	nop

0800c860 <USBD_CDC_Setup>:
 800c860:	b570      	push	{r4, r5, r6, lr}
 800c862:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c866:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c86a:	b082      	sub	sp, #8
 800c86c:	f8d3 62c0 	ldr.w	r6, [r3, #704]	@ 0x2c0
 800c870:	2200      	movs	r2, #0
 800c872:	f88d 2005 	strb.w	r2, [sp, #5]
 800c876:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c87a:	b166      	cbz	r6, 800c896 <USBD_CDC_Setup+0x36>
 800c87c:	f891 c000 	ldrb.w	ip, [r1]
 800c880:	f01c 0260 	ands.w	r2, ip, #96	@ 0x60
 800c884:	4604      	mov	r4, r0
 800c886:	460d      	mov	r5, r1
 800c888:	d01e      	beq.n	800c8c8 <USBD_CDC_Setup+0x68>
 800c88a:	2a20      	cmp	r2, #32
 800c88c:	d006      	beq.n	800c89c <USBD_CDC_Setup+0x3c>
 800c88e:	4629      	mov	r1, r5
 800c890:	4620      	mov	r0, r4
 800c892:	f000 fdb9 	bl	800d408 <USBD_CtlError>
 800c896:	2003      	movs	r0, #3
 800c898:	b002      	add	sp, #8
 800c89a:	bd70      	pop	{r4, r5, r6, pc}
 800c89c:	88ca      	ldrh	r2, [r1, #6]
 800c89e:	f891 e001 	ldrb.w	lr, [r1, #1]
 800c8a2:	b37a      	cbz	r2, 800c904 <USBD_CDC_Setup+0xa4>
 800c8a4:	f01c 0f80 	tst.w	ip, #128	@ 0x80
 800c8a8:	d04c      	beq.n	800c944 <USBD_CDC_Setup+0xe4>
 800c8aa:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c8ae:	4631      	mov	r1, r6
 800c8b0:	689b      	ldr	r3, [r3, #8]
 800c8b2:	4670      	mov	r0, lr
 800c8b4:	4798      	blx	r3
 800c8b6:	88ea      	ldrh	r2, [r5, #6]
 800c8b8:	2a07      	cmp	r2, #7
 800c8ba:	4631      	mov	r1, r6
 800c8bc:	bf28      	it	cs
 800c8be:	2207      	movcs	r2, #7
 800c8c0:	4620      	mov	r0, r4
 800c8c2:	f000 fdd9 	bl	800d478 <USBD_CtlSendData>
 800c8c6:	e022      	b.n	800c90e <USBD_CDC_Setup+0xae>
 800c8c8:	784b      	ldrb	r3, [r1, #1]
 800c8ca:	2b0b      	cmp	r3, #11
 800c8cc:	d8df      	bhi.n	800c88e <USBD_CDC_Setup+0x2e>
 800c8ce:	a201      	add	r2, pc, #4	@ (adr r2, 800c8d4 <USBD_CDC_Setup+0x74>)
 800c8d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8d4:	0800c91d 	.word	0x0800c91d
 800c8d8:	0800c90f 	.word	0x0800c90f
 800c8dc:	0800c88f 	.word	0x0800c88f
 800c8e0:	0800c88f 	.word	0x0800c88f
 800c8e4:	0800c88f 	.word	0x0800c88f
 800c8e8:	0800c88f 	.word	0x0800c88f
 800c8ec:	0800c88f 	.word	0x0800c88f
 800c8f0:	0800c88f 	.word	0x0800c88f
 800c8f4:	0800c88f 	.word	0x0800c88f
 800c8f8:	0800c88f 	.word	0x0800c88f
 800c8fc:	0800c931 	.word	0x0800c931
 800c900:	0800c913 	.word	0x0800c913
 800c904:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c908:	4670      	mov	r0, lr
 800c90a:	689b      	ldr	r3, [r3, #8]
 800c90c:	4798      	blx	r3
 800c90e:	2000      	movs	r0, #0
 800c910:	e7c2      	b.n	800c898 <USBD_CDC_Setup+0x38>
 800c912:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c916:	2b03      	cmp	r3, #3
 800c918:	d0f9      	beq.n	800c90e <USBD_CDC_Setup+0xae>
 800c91a:	e7b8      	b.n	800c88e <USBD_CDC_Setup+0x2e>
 800c91c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c920:	2b03      	cmp	r3, #3
 800c922:	d1b4      	bne.n	800c88e <USBD_CDC_Setup+0x2e>
 800c924:	2202      	movs	r2, #2
 800c926:	f10d 0106 	add.w	r1, sp, #6
 800c92a:	f000 fda5 	bl	800d478 <USBD_CtlSendData>
 800c92e:	e7ee      	b.n	800c90e <USBD_CDC_Setup+0xae>
 800c930:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c934:	2b03      	cmp	r3, #3
 800c936:	d1aa      	bne.n	800c88e <USBD_CDC_Setup+0x2e>
 800c938:	2201      	movs	r2, #1
 800c93a:	f10d 0105 	add.w	r1, sp, #5
 800c93e:	f000 fd9b 	bl	800d478 <USBD_CtlSendData>
 800c942:	e7e4      	b.n	800c90e <USBD_CDC_Setup+0xae>
 800c944:	2a40      	cmp	r2, #64	@ 0x40
 800c946:	bf28      	it	cs
 800c948:	2240      	movcs	r2, #64	@ 0x40
 800c94a:	f886 e200 	strb.w	lr, [r6, #512]	@ 0x200
 800c94e:	f886 2201 	strb.w	r2, [r6, #513]	@ 0x201
 800c952:	4631      	mov	r1, r6
 800c954:	f000 fda6 	bl	800d4a4 <USBD_CtlPrepareRx>
 800c958:	e7d9      	b.n	800c90e <USBD_CDC_Setup+0xae>
 800c95a:	bf00      	nop

0800c95c <USBD_CDC_DeInit>:
 800c95c:	b538      	push	{r3, r4, r5, lr}
 800c95e:	4604      	mov	r4, r0
 800c960:	2500      	movs	r5, #0
 800c962:	2181      	movs	r1, #129	@ 0x81
 800c964:	f002 fcc2 	bl	800f2ec <USBD_LL_CloseEP>
 800c968:	2101      	movs	r1, #1
 800c96a:	8725      	strh	r5, [r4, #56]	@ 0x38
 800c96c:	4620      	mov	r0, r4
 800c96e:	f002 fcbd 	bl	800f2ec <USBD_LL_CloseEP>
 800c972:	2182      	movs	r1, #130	@ 0x82
 800c974:	f8a4 5178 	strh.w	r5, [r4, #376]	@ 0x178
 800c978:	4620      	mov	r0, r4
 800c97a:	f002 fcb7 	bl	800f2ec <USBD_LL_CloseEP>
 800c97e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c982:	64e5      	str	r5, [r4, #76]	@ 0x4c
 800c984:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800c988:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
 800c98c:	b18a      	cbz	r2, 800c9b2 <USBD_CDC_DeInit+0x56>
 800c98e:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c992:	685b      	ldr	r3, [r3, #4]
 800c994:	4798      	blx	r3
 800c996:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c99a:	33b0      	adds	r3, #176	@ 0xb0
 800c99c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800c9a0:	f002 fd32 	bl	800f408 <USBD_static_free>
 800c9a4:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c9a8:	33b0      	adds	r3, #176	@ 0xb0
 800c9aa:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c9ae:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
 800c9b2:	2000      	movs	r0, #0
 800c9b4:	bd38      	pop	{r3, r4, r5, pc}
 800c9b6:	bf00      	nop

0800c9b8 <USBD_CDC_Init>:
 800c9b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c9ba:	4604      	mov	r4, r0
 800c9bc:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 800c9c0:	f002 fd1e 	bl	800f400 <USBD_static_malloc>
 800c9c4:	4605      	mov	r5, r0
 800c9c6:	2800      	cmp	r0, #0
 800c9c8:	d05a      	beq.n	800ca80 <USBD_CDC_Init+0xc8>
 800c9ca:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 800c9ce:	2100      	movs	r1, #0
 800c9d0:	f003 fd59 	bl	8010486 <memset>
 800c9d4:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c9d8:	33b0      	adds	r3, #176	@ 0xb0
 800c9da:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c9de:	7c23      	ldrb	r3, [r4, #16]
 800c9e0:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
 800c9e4:	b3b3      	cbz	r3, 800ca54 <USBD_CDC_Init+0x9c>
 800c9e6:	2340      	movs	r3, #64	@ 0x40
 800c9e8:	2202      	movs	r2, #2
 800c9ea:	2181      	movs	r1, #129	@ 0x81
 800c9ec:	4620      	mov	r0, r4
 800c9ee:	f002 fc6f 	bl	800f2d0 <USBD_LL_OpenEP>
 800c9f2:	2101      	movs	r1, #1
 800c9f4:	2340      	movs	r3, #64	@ 0x40
 800c9f6:	8721      	strh	r1, [r4, #56]	@ 0x38
 800c9f8:	2202      	movs	r2, #2
 800c9fa:	4620      	mov	r0, r4
 800c9fc:	f002 fc68 	bl	800f2d0 <USBD_LL_OpenEP>
 800ca00:	2701      	movs	r7, #1
 800ca02:	2310      	movs	r3, #16
 800ca04:	2203      	movs	r2, #3
 800ca06:	f8a4 304e 	strh.w	r3, [r4, #78]	@ 0x4e
 800ca0a:	2182      	movs	r1, #130	@ 0x82
 800ca0c:	2308      	movs	r3, #8
 800ca0e:	f8a4 7178 	strh.w	r7, [r4, #376]	@ 0x178
 800ca12:	4620      	mov	r0, r4
 800ca14:	f002 fc5c 	bl	800f2d0 <USBD_LL_OpenEP>
 800ca18:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ca1c:	f8a4 704c 	strh.w	r7, [r4, #76]	@ 0x4c
 800ca20:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800ca24:	2600      	movs	r6, #0
 800ca26:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800ca2a:	f8c5 6204 	str.w	r6, [r5, #516]	@ 0x204
 800ca2e:	681b      	ldr	r3, [r3, #0]
 800ca30:	4798      	blx	r3
 800ca32:	f8d5 2204 	ldr.w	r2, [r5, #516]	@ 0x204
 800ca36:	f8c5 6214 	str.w	r6, [r5, #532]	@ 0x214
 800ca3a:	f8c5 6218 	str.w	r6, [r5, #536]	@ 0x218
 800ca3e:	b322      	cbz	r2, 800ca8a <USBD_CDC_Init+0xd2>
 800ca40:	7c23      	ldrb	r3, [r4, #16]
 800ca42:	b9bb      	cbnz	r3, 800ca74 <USBD_CDC_Init+0xbc>
 800ca44:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca48:	4639      	mov	r1, r7
 800ca4a:	4620      	mov	r0, r4
 800ca4c:	f002 fc9e 	bl	800f38c <USBD_LL_PrepareReceive>
 800ca50:	2000      	movs	r0, #0
 800ca52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca54:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca58:	2202      	movs	r2, #2
 800ca5a:	2181      	movs	r1, #129	@ 0x81
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	f002 fc37 	bl	800f2d0 <USBD_LL_OpenEP>
 800ca62:	2101      	movs	r1, #1
 800ca64:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca68:	8721      	strh	r1, [r4, #56]	@ 0x38
 800ca6a:	2202      	movs	r2, #2
 800ca6c:	4620      	mov	r0, r4
 800ca6e:	f002 fc2f 	bl	800f2d0 <USBD_LL_OpenEP>
 800ca72:	e7c5      	b.n	800ca00 <USBD_CDC_Init+0x48>
 800ca74:	2340      	movs	r3, #64	@ 0x40
 800ca76:	4639      	mov	r1, r7
 800ca78:	4620      	mov	r0, r4
 800ca7a:	f002 fc87 	bl	800f38c <USBD_LL_PrepareReceive>
 800ca7e:	e7e7      	b.n	800ca50 <USBD_CDC_Init+0x98>
 800ca80:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ca84:	33b0      	adds	r3, #176	@ 0xb0
 800ca86:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 800ca8a:	2002      	movs	r0, #2
 800ca8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca8e:	bf00      	nop

0800ca90 <USBD_CDC_GetOtherSpeedCfgDesc>:
 800ca90:	b570      	push	{r4, r5, r6, lr}
 800ca92:	2182      	movs	r1, #130	@ 0x82
 800ca94:	4606      	mov	r6, r0
 800ca96:	480f      	ldr	r0, [pc, #60]	@ (800cad4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800ca98:	f000 f9e2 	bl	800ce60 <USBD_GetEpDesc>
 800ca9c:	2101      	movs	r1, #1
 800ca9e:	4605      	mov	r5, r0
 800caa0:	480c      	ldr	r0, [pc, #48]	@ (800cad4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800caa2:	f000 f9dd 	bl	800ce60 <USBD_GetEpDesc>
 800caa6:	2181      	movs	r1, #129	@ 0x81
 800caa8:	4604      	mov	r4, r0
 800caaa:	480a      	ldr	r0, [pc, #40]	@ (800cad4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800caac:	f000 f9d8 	bl	800ce60 <USBD_GetEpDesc>
 800cab0:	b10d      	cbz	r5, 800cab6 <USBD_CDC_GetOtherSpeedCfgDesc+0x26>
 800cab2:	2210      	movs	r2, #16
 800cab4:	71aa      	strb	r2, [r5, #6]
 800cab6:	b11c      	cbz	r4, 800cac0 <USBD_CDC_GetOtherSpeedCfgDesc+0x30>
 800cab8:	2200      	movs	r2, #0
 800caba:	2140      	movs	r1, #64	@ 0x40
 800cabc:	7121      	strb	r1, [r4, #4]
 800cabe:	7162      	strb	r2, [r4, #5]
 800cac0:	b118      	cbz	r0, 800caca <USBD_CDC_GetOtherSpeedCfgDesc+0x3a>
 800cac2:	2200      	movs	r2, #0
 800cac4:	2140      	movs	r1, #64	@ 0x40
 800cac6:	7101      	strb	r1, [r0, #4]
 800cac8:	7142      	strb	r2, [r0, #5]
 800caca:	2343      	movs	r3, #67	@ 0x43
 800cacc:	4801      	ldr	r0, [pc, #4]	@ (800cad4 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800cace:	8033      	strh	r3, [r6, #0]
 800cad0:	bd70      	pop	{r4, r5, r6, pc}
 800cad2:	bf00      	nop
 800cad4:	20000040 	.word	0x20000040

0800cad8 <USBD_CDC_RegisterInterface>:
 800cad8:	4603      	mov	r3, r0
 800cada:	b139      	cbz	r1, 800caec <USBD_CDC_RegisterInterface+0x14>
 800cadc:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800cae0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800cae4:	2000      	movs	r0, #0
 800cae6:	f8c3 12c4 	str.w	r1, [r3, #708]	@ 0x2c4
 800caea:	4770      	bx	lr
 800caec:	2003      	movs	r0, #3
 800caee:	4770      	bx	lr

0800caf0 <USBD_CDC_SetTxBuffer>:
 800caf0:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800caf4:	33b0      	adds	r3, #176	@ 0xb0
 800caf6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800cafa:	b12b      	cbz	r3, 800cb08 <USBD_CDC_SetTxBuffer+0x18>
 800cafc:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
 800cb00:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 800cb04:	2000      	movs	r0, #0
 800cb06:	4770      	bx	lr
 800cb08:	2003      	movs	r0, #3
 800cb0a:	4770      	bx	lr

0800cb0c <USBD_CDC_SetRxBuffer>:
 800cb0c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800cb10:	33b0      	adds	r3, #176	@ 0xb0
 800cb12:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800cb16:	b11b      	cbz	r3, 800cb20 <USBD_CDC_SetRxBuffer+0x14>
 800cb18:	f8c3 1204 	str.w	r1, [r3, #516]	@ 0x204
 800cb1c:	2000      	movs	r0, #0
 800cb1e:	4770      	bx	lr
 800cb20:	2003      	movs	r0, #3
 800cb22:	4770      	bx	lr

0800cb24 <USBD_CDC_TransmitPacket>:
 800cb24:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800cb28:	33b0      	adds	r3, #176	@ 0xb0
 800cb2a:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800cb2e:	b192      	cbz	r2, 800cb56 <USBD_CDC_TransmitPacket+0x32>
 800cb30:	b510      	push	{r4, lr}
 800cb32:	f8d2 4214 	ldr.w	r4, [r2, #532]	@ 0x214
 800cb36:	b10c      	cbz	r4, 800cb3c <USBD_CDC_TransmitPacket+0x18>
 800cb38:	2001      	movs	r0, #1
 800cb3a:	bd10      	pop	{r4, pc}
 800cb3c:	2301      	movs	r3, #1
 800cb3e:	f8c2 3214 	str.w	r3, [r2, #532]	@ 0x214
 800cb42:	f8d2 3210 	ldr.w	r3, [r2, #528]	@ 0x210
 800cb46:	f8d2 2208 	ldr.w	r2, [r2, #520]	@ 0x208
 800cb4a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800cb4c:	2181      	movs	r1, #129	@ 0x81
 800cb4e:	f002 fc11 	bl	800f374 <USBD_LL_Transmit>
 800cb52:	4620      	mov	r0, r4
 800cb54:	bd10      	pop	{r4, pc}
 800cb56:	2003      	movs	r0, #3
 800cb58:	4770      	bx	lr
 800cb5a:	bf00      	nop

0800cb5c <USBD_CDC_ReceivePacket>:
 800cb5c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800cb60:	32b0      	adds	r2, #176	@ 0xb0
 800cb62:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800cb66:	b18a      	cbz	r2, 800cb8c <USBD_CDC_ReceivePacket+0x30>
 800cb68:	b508      	push	{r3, lr}
 800cb6a:	7c03      	ldrb	r3, [r0, #16]
 800cb6c:	f8d2 2204 	ldr.w	r2, [r2, #516]	@ 0x204
 800cb70:	b12b      	cbz	r3, 800cb7e <USBD_CDC_ReceivePacket+0x22>
 800cb72:	2340      	movs	r3, #64	@ 0x40
 800cb74:	2101      	movs	r1, #1
 800cb76:	f002 fc09 	bl	800f38c <USBD_LL_PrepareReceive>
 800cb7a:	2000      	movs	r0, #0
 800cb7c:	bd08      	pop	{r3, pc}
 800cb7e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800cb82:	2101      	movs	r1, #1
 800cb84:	f002 fc02 	bl	800f38c <USBD_LL_PrepareReceive>
 800cb88:	2000      	movs	r0, #0
 800cb8a:	bd08      	pop	{r3, pc}
 800cb8c:	2003      	movs	r0, #3
 800cb8e:	4770      	bx	lr

0800cb90 <USBD_Init>:
 800cb90:	b178      	cbz	r0, 800cbb2 <USBD_Init+0x22>
 800cb92:	2300      	movs	r3, #0
 800cb94:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
 800cb98:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
 800cb9c:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0
 800cba0:	b109      	cbz	r1, 800cba6 <USBD_Init+0x16>
 800cba2:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
 800cba6:	2301      	movs	r3, #1
 800cba8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800cbac:	7002      	strb	r2, [r0, #0]
 800cbae:	f002 bb3d 	b.w	800f22c <USBD_LL_Init>
 800cbb2:	2003      	movs	r0, #3
 800cbb4:	4770      	bx	lr
 800cbb6:	bf00      	nop

0800cbb8 <USBD_RegisterClass>:
 800cbb8:	b510      	push	{r4, lr}
 800cbba:	b082      	sub	sp, #8
 800cbbc:	2300      	movs	r3, #0
 800cbbe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cbc2:	b189      	cbz	r1, 800cbe8 <USBD_RegisterClass+0x30>
 800cbc4:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800cbc6:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
 800cbca:	4604      	mov	r4, r0
 800cbcc:	b123      	cbz	r3, 800cbd8 <USBD_RegisterClass+0x20>
 800cbce:	f10d 0006 	add.w	r0, sp, #6
 800cbd2:	4798      	blx	r3
 800cbd4:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
 800cbd8:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800cbdc:	2000      	movs	r0, #0
 800cbde:	3301      	adds	r3, #1
 800cbe0:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
 800cbe4:	b002      	add	sp, #8
 800cbe6:	bd10      	pop	{r4, pc}
 800cbe8:	2003      	movs	r0, #3
 800cbea:	b002      	add	sp, #8
 800cbec:	bd10      	pop	{r4, pc}
 800cbee:	bf00      	nop

0800cbf0 <USBD_Start>:
 800cbf0:	f002 bb62 	b.w	800f2b8 <USBD_LL_Start>

0800cbf4 <USBD_SetClassConfig>:
 800cbf4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cbf8:	b10b      	cbz	r3, 800cbfe <USBD_SetClassConfig+0xa>
 800cbfa:	681b      	ldr	r3, [r3, #0]
 800cbfc:	4718      	bx	r3
 800cbfe:	4618      	mov	r0, r3
 800cc00:	4770      	bx	lr
 800cc02:	bf00      	nop

0800cc04 <USBD_ClrClassConfig>:
 800cc04:	b508      	push	{r3, lr}
 800cc06:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cc0a:	685b      	ldr	r3, [r3, #4]
 800cc0c:	4798      	blx	r3
 800cc0e:	2800      	cmp	r0, #0
 800cc10:	bf18      	it	ne
 800cc12:	2003      	movne	r0, #3
 800cc14:	bd08      	pop	{r3, pc}
 800cc16:	bf00      	nop

0800cc18 <USBD_LL_SetupStage>:
 800cc18:	b538      	push	{r3, r4, r5, lr}
 800cc1a:	4604      	mov	r4, r0
 800cc1c:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 800cc20:	4628      	mov	r0, r5
 800cc22:	f000 fbe5 	bl	800d3f0 <USBD_ParseSetupRequest>
 800cc26:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
 800cc2a:	f8b4 22b0 	ldrh.w	r2, [r4, #688]	@ 0x2b0
 800cc2e:	f8c4 2298 	str.w	r2, [r4, #664]	@ 0x298
 800cc32:	2301      	movs	r3, #1
 800cc34:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
 800cc38:	f001 031f 	and.w	r3, r1, #31
 800cc3c:	2b01      	cmp	r3, #1
 800cc3e:	d00e      	beq.n	800cc5e <USBD_LL_SetupStage+0x46>
 800cc40:	2b02      	cmp	r3, #2
 800cc42:	d006      	beq.n	800cc52 <USBD_LL_SetupStage+0x3a>
 800cc44:	b98b      	cbnz	r3, 800cc6a <USBD_LL_SetupStage+0x52>
 800cc46:	4629      	mov	r1, r5
 800cc48:	4620      	mov	r0, r4
 800cc4a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc4e:	f000 b91d 	b.w	800ce8c <USBD_StdDevReq>
 800cc52:	4629      	mov	r1, r5
 800cc54:	4620      	mov	r0, r4
 800cc56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc5a:	f000 bb19 	b.w	800d290 <USBD_StdEPReq>
 800cc5e:	4629      	mov	r1, r5
 800cc60:	4620      	mov	r0, r4
 800cc62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc66:	f000 bad3 	b.w	800d210 <USBD_StdItfReq>
 800cc6a:	4620      	mov	r0, r4
 800cc6c:	f001 0180 	and.w	r1, r1, #128	@ 0x80
 800cc70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cc74:	f002 bb46 	b.w	800f304 <USBD_LL_StallEP>

0800cc78 <USBD_LL_DataOutStage>:
 800cc78:	b510      	push	{r4, lr}
 800cc7a:	4604      	mov	r4, r0
 800cc7c:	b931      	cbnz	r1, 800cc8c <USBD_LL_DataOutStage+0x14>
 800cc7e:	4694      	mov	ip, r2
 800cc80:	f8d0 2294 	ldr.w	r2, [r0, #660]	@ 0x294
 800cc84:	2a03      	cmp	r2, #3
 800cc86:	d010      	beq.n	800ccaa <USBD_LL_DataOutStage+0x32>
 800cc88:	2000      	movs	r0, #0
 800cc8a:	bd10      	pop	{r4, pc}
 800cc8c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cc90:	2b03      	cmp	r3, #3
 800cc92:	d1f9      	bne.n	800cc88 <USBD_LL_DataOutStage+0x10>
 800cc94:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cc98:	699b      	ldr	r3, [r3, #24]
 800cc9a:	2b00      	cmp	r3, #0
 800cc9c:	d0f4      	beq.n	800cc88 <USBD_LL_DataOutStage+0x10>
 800cc9e:	2200      	movs	r2, #0
 800cca0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cca4:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
 800cca8:	4718      	bx	r3
 800ccaa:	460b      	mov	r3, r1
 800ccac:	e9d0 1257 	ldrd	r1, r2, [r0, #348]	@ 0x15c
 800ccb0:	4291      	cmp	r1, r2
 800ccb2:	d808      	bhi.n	800ccc6 <USBD_LL_DataOutStage+0x4e>
 800ccb4:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ccb8:	2a03      	cmp	r2, #3
 800ccba:	d00e      	beq.n	800ccda <USBD_LL_DataOutStage+0x62>
 800ccbc:	4620      	mov	r0, r4
 800ccbe:	f000 fc07 	bl	800d4d0 <USBD_CtlSendStatus>
 800ccc2:	2000      	movs	r0, #0
 800ccc4:	bd10      	pop	{r4, pc}
 800ccc6:	1a89      	subs	r1, r1, r2
 800ccc8:	428a      	cmp	r2, r1
 800ccca:	bf28      	it	cs
 800cccc:	460a      	movcs	r2, r1
 800ccce:	f8c0 115c 	str.w	r1, [r0, #348]	@ 0x15c
 800ccd2:	4661      	mov	r1, ip
 800ccd4:	f000 fbf4 	bl	800d4c0 <USBD_CtlContinueRx>
 800ccd8:	e7d6      	b.n	800cc88 <USBD_LL_DataOutStage+0x10>
 800ccda:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800ccde:	6912      	ldr	r2, [r2, #16]
 800cce0:	2a00      	cmp	r2, #0
 800cce2:	d0eb      	beq.n	800ccbc <USBD_LL_DataOutStage+0x44>
 800cce4:	f8c0 32d4 	str.w	r3, [r0, #724]	@ 0x2d4
 800cce8:	4790      	blx	r2
 800ccea:	e7e7      	b.n	800ccbc <USBD_LL_DataOutStage+0x44>

0800ccec <USBD_LL_DataInStage>:
 800ccec:	b570      	push	{r4, r5, r6, lr}
 800ccee:	4604      	mov	r4, r0
 800ccf0:	b961      	cbnz	r1, 800cd0c <USBD_LL_DataInStage+0x20>
 800ccf2:	4613      	mov	r3, r2
 800ccf4:	f8d0 2294 	ldr.w	r2, [r0, #660]	@ 0x294
 800ccf8:	2a02      	cmp	r2, #2
 800ccfa:	d016      	beq.n	800cd2a <USBD_LL_DataInStage+0x3e>
 800ccfc:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800cd00:	b113      	cbz	r3, 800cd08 <USBD_LL_DataInStage+0x1c>
 800cd02:	2300      	movs	r3, #0
 800cd04:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
 800cd08:	2000      	movs	r0, #0
 800cd0a:	bd70      	pop	{r4, r5, r6, pc}
 800cd0c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cd10:	2b03      	cmp	r3, #3
 800cd12:	d1f9      	bne.n	800cd08 <USBD_LL_DataInStage+0x1c>
 800cd14:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cd18:	695b      	ldr	r3, [r3, #20]
 800cd1a:	2b00      	cmp	r3, #0
 800cd1c:	d0f4      	beq.n	800cd08 <USBD_LL_DataInStage+0x1c>
 800cd1e:	2200      	movs	r2, #0
 800cd20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd24:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
 800cd28:	4718      	bx	r3
 800cd2a:	e9d0 2607 	ldrd	r2, r6, [r0, #28]
 800cd2e:	42b2      	cmp	r2, r6
 800cd30:	460d      	mov	r5, r1
 800cd32:	d810      	bhi.n	800cd56 <USBD_LL_DataInStage+0x6a>
 800cd34:	d01b      	beq.n	800cd6e <USBD_LL_DataInStage+0x82>
 800cd36:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800cd3a:	2b03      	cmp	r3, #3
 800cd3c:	d024      	beq.n	800cd88 <USBD_LL_DataInStage+0x9c>
 800cd3e:	2180      	movs	r1, #128	@ 0x80
 800cd40:	4620      	mov	r0, r4
 800cd42:	f002 fadf 	bl	800f304 <USBD_LL_StallEP>
 800cd46:	4620      	mov	r0, r4
 800cd48:	f000 fbce 	bl	800d4e8 <USBD_CtlReceiveStatus>
 800cd4c:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800cd50:	2b00      	cmp	r3, #0
 800cd52:	d0d9      	beq.n	800cd08 <USBD_LL_DataInStage+0x1c>
 800cd54:	e7d5      	b.n	800cd02 <USBD_LL_DataInStage+0x16>
 800cd56:	1b92      	subs	r2, r2, r6
 800cd58:	61c2      	str	r2, [r0, #28]
 800cd5a:	4619      	mov	r1, r3
 800cd5c:	f000 fb9a 	bl	800d494 <USBD_CtlContinueSendData>
 800cd60:	462b      	mov	r3, r5
 800cd62:	462a      	mov	r2, r5
 800cd64:	4629      	mov	r1, r5
 800cd66:	4620      	mov	r0, r4
 800cd68:	f002 fb10 	bl	800f38c <USBD_LL_PrepareReceive>
 800cd6c:	e7c6      	b.n	800ccfc <USBD_LL_DataInStage+0x10>
 800cd6e:	6983      	ldr	r3, [r0, #24]
 800cd70:	429a      	cmp	r2, r3
 800cd72:	d8e0      	bhi.n	800cd36 <USBD_LL_DataInStage+0x4a>
 800cd74:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 800cd78:	4293      	cmp	r3, r2
 800cd7a:	d2dc      	bcs.n	800cd36 <USBD_LL_DataInStage+0x4a>
 800cd7c:	460a      	mov	r2, r1
 800cd7e:	f000 fb89 	bl	800d494 <USBD_CtlContinueSendData>
 800cd82:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800cd86:	e7eb      	b.n	800cd60 <USBD_LL_DataInStage+0x74>
 800cd88:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800cd8c:	68db      	ldr	r3, [r3, #12]
 800cd8e:	2b00      	cmp	r3, #0
 800cd90:	d0d5      	beq.n	800cd3e <USBD_LL_DataInStage+0x52>
 800cd92:	2200      	movs	r2, #0
 800cd94:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
 800cd98:	4620      	mov	r0, r4
 800cd9a:	4798      	blx	r3
 800cd9c:	e7cf      	b.n	800cd3e <USBD_LL_DataInStage+0x52>
 800cd9e:	bf00      	nop

0800cda0 <USBD_LL_Reset>:
 800cda0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cda2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cda6:	2100      	movs	r1, #0
 800cda8:	2201      	movs	r2, #1
 800cdaa:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
 800cdae:	4604      	mov	r4, r0
 800cdb0:	6041      	str	r1, [r0, #4]
 800cdb2:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800cdb6:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
 800cdba:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
 800cdbe:	b11b      	cbz	r3, 800cdc8 <USBD_LL_Reset+0x28>
 800cdc0:	685b      	ldr	r3, [r3, #4]
 800cdc2:	b10b      	cbz	r3, 800cdc8 <USBD_LL_Reset+0x28>
 800cdc4:	4798      	blx	r3
 800cdc6:	b9b0      	cbnz	r0, 800cdf6 <USBD_LL_Reset+0x56>
 800cdc8:	2700      	movs	r7, #0
 800cdca:	2200      	movs	r2, #0
 800cdcc:	2540      	movs	r5, #64	@ 0x40
 800cdce:	4611      	mov	r1, r2
 800cdd0:	2601      	movs	r6, #1
 800cdd2:	2340      	movs	r3, #64	@ 0x40
 800cdd4:	4620      	mov	r0, r4
 800cdd6:	f002 fa7b 	bl	800f2d0 <USBD_LL_OpenEP>
 800cdda:	f8a4 6164 	strh.w	r6, [r4, #356]	@ 0x164
 800cdde:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
 800cde2:	462b      	mov	r3, r5
 800cde4:	2200      	movs	r2, #0
 800cde6:	2180      	movs	r1, #128	@ 0x80
 800cde8:	4620      	mov	r0, r4
 800cdea:	f002 fa71 	bl	800f2d0 <USBD_LL_OpenEP>
 800cdee:	84a6      	strh	r6, [r4, #36]	@ 0x24
 800cdf0:	6225      	str	r5, [r4, #32]
 800cdf2:	4638      	mov	r0, r7
 800cdf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdf6:	2703      	movs	r7, #3
 800cdf8:	e7e7      	b.n	800cdca <USBD_LL_Reset+0x2a>
 800cdfa:	bf00      	nop

0800cdfc <USBD_LL_SetSpeed>:
 800cdfc:	7401      	strb	r1, [r0, #16]
 800cdfe:	2000      	movs	r0, #0
 800ce00:	4770      	bx	lr
 800ce02:	bf00      	nop

0800ce04 <USBD_LL_Suspend>:
 800ce04:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ce08:	2b04      	cmp	r3, #4
 800ce0a:	d004      	beq.n	800ce16 <USBD_LL_Suspend+0x12>
 800ce0c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ce10:	b2db      	uxtb	r3, r3
 800ce12:	f880 329d 	strb.w	r3, [r0, #669]	@ 0x29d
 800ce16:	2304      	movs	r3, #4
 800ce18:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800ce1c:	2000      	movs	r0, #0
 800ce1e:	4770      	bx	lr

0800ce20 <USBD_LL_Resume>:
 800ce20:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ce24:	2b04      	cmp	r3, #4
 800ce26:	d104      	bne.n	800ce32 <USBD_LL_Resume+0x12>
 800ce28:	f890 329d 	ldrb.w	r3, [r0, #669]	@ 0x29d
 800ce2c:	b2db      	uxtb	r3, r3
 800ce2e:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800ce32:	2000      	movs	r0, #0
 800ce34:	4770      	bx	lr
 800ce36:	bf00      	nop

0800ce38 <USBD_LL_SOF>:
 800ce38:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ce3c:	2a03      	cmp	r2, #3
 800ce3e:	d001      	beq.n	800ce44 <USBD_LL_SOF+0xc>
 800ce40:	2000      	movs	r0, #0
 800ce42:	4770      	bx	lr
 800ce44:	b508      	push	{r3, lr}
 800ce46:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ce4a:	b113      	cbz	r3, 800ce52 <USBD_LL_SOF+0x1a>
 800ce4c:	69db      	ldr	r3, [r3, #28]
 800ce4e:	b103      	cbz	r3, 800ce52 <USBD_LL_SOF+0x1a>
 800ce50:	4798      	blx	r3
 800ce52:	2000      	movs	r0, #0
 800ce54:	bd08      	pop	{r3, pc}
 800ce56:	bf00      	nop

0800ce58 <USBD_CoreFindIF>:
 800ce58:	2000      	movs	r0, #0
 800ce5a:	4770      	bx	lr

0800ce5c <USBD_CoreFindEP>:
 800ce5c:	2000      	movs	r0, #0
 800ce5e:	4770      	bx	lr

0800ce60 <USBD_GetEpDesc>:
 800ce60:	7802      	ldrb	r2, [r0, #0]
 800ce62:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 800ce66:	4594      	cmp	ip, r2
 800ce68:	4613      	mov	r3, r2
 800ce6a:	d803      	bhi.n	800ce74 <USBD_GetEpDesc+0x14>
 800ce6c:	e00c      	b.n	800ce88 <USBD_GetEpDesc+0x28>
 800ce6e:	459c      	cmp	ip, r3
 800ce70:	d90a      	bls.n	800ce88 <USBD_GetEpDesc+0x28>
 800ce72:	7802      	ldrb	r2, [r0, #0]
 800ce74:	4410      	add	r0, r2
 800ce76:	4413      	add	r3, r2
 800ce78:	7842      	ldrb	r2, [r0, #1]
 800ce7a:	2a05      	cmp	r2, #5
 800ce7c:	b29b      	uxth	r3, r3
 800ce7e:	d1f6      	bne.n	800ce6e <USBD_GetEpDesc+0xe>
 800ce80:	7882      	ldrb	r2, [r0, #2]
 800ce82:	428a      	cmp	r2, r1
 800ce84:	d1f3      	bne.n	800ce6e <USBD_GetEpDesc+0xe>
 800ce86:	4770      	bx	lr
 800ce88:	2000      	movs	r0, #0
 800ce8a:	4770      	bx	lr

0800ce8c <USBD_StdDevReq>:
 800ce8c:	b570      	push	{r4, r5, r6, lr}
 800ce8e:	780b      	ldrb	r3, [r1, #0]
 800ce90:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ce94:	2b20      	cmp	r3, #32
 800ce96:	b082      	sub	sp, #8
 800ce98:	460d      	mov	r5, r1
 800ce9a:	4604      	mov	r4, r0
 800ce9c:	d028      	beq.n	800cef0 <USBD_StdDevReq+0x64>
 800ce9e:	2b40      	cmp	r3, #64	@ 0x40
 800cea0:	d026      	beq.n	800cef0 <USBD_StdDevReq+0x64>
 800cea2:	b15b      	cbz	r3, 800cebc <USBD_StdDevReq+0x30>
 800cea4:	2180      	movs	r1, #128	@ 0x80
 800cea6:	4620      	mov	r0, r4
 800cea8:	f002 fa2c 	bl	800f304 <USBD_LL_StallEP>
 800ceac:	2100      	movs	r1, #0
 800ceae:	4620      	mov	r0, r4
 800ceb0:	f002 fa28 	bl	800f304 <USBD_LL_StallEP>
 800ceb4:	2500      	movs	r5, #0
 800ceb6:	4628      	mov	r0, r5
 800ceb8:	b002      	add	sp, #8
 800ceba:	bd70      	pop	{r4, r5, r6, pc}
 800cebc:	784b      	ldrb	r3, [r1, #1]
 800cebe:	2b09      	cmp	r3, #9
 800cec0:	d8f0      	bhi.n	800cea4 <USBD_StdDevReq+0x18>
 800cec2:	a201      	add	r2, pc, #4	@ (adr r2, 800cec8 <USBD_StdDevReq+0x3c>)
 800cec4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cec8:	0800cf41 	.word	0x0800cf41
 800cecc:	0800cf69 	.word	0x0800cf69
 800ced0:	0800cea5 	.word	0x0800cea5
 800ced4:	0800cf87 	.word	0x0800cf87
 800ced8:	0800cea5 	.word	0x0800cea5
 800cedc:	0800cf9f 	.word	0x0800cf9f
 800cee0:	0800cfe1 	.word	0x0800cfe1
 800cee4:	0800cea5 	.word	0x0800cea5
 800cee8:	0800d035 	.word	0x0800d035
 800ceec:	0800cf09 	.word	0x0800cf09
 800cef0:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800cef4:	33ae      	adds	r3, #174	@ 0xae
 800cef6:	4629      	mov	r1, r5
 800cef8:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800cefc:	689b      	ldr	r3, [r3, #8]
 800cefe:	4620      	mov	r0, r4
 800cf00:	b002      	add	sp, #8
 800cf02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf06:	4718      	bx	r3
 800cf08:	7889      	ldrb	r1, [r1, #2]
 800cf0a:	4db7      	ldr	r5, [pc, #732]	@ (800d1e8 <USBD_StdDevReq+0x35c>)
 800cf0c:	2901      	cmp	r1, #1
 800cf0e:	7029      	strb	r1, [r5, #0]
 800cf10:	f200 8157 	bhi.w	800d1c2 <USBD_StdDevReq+0x336>
 800cf14:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cf18:	2b02      	cmp	r3, #2
 800cf1a:	b2de      	uxtb	r6, r3
 800cf1c:	f000 8136 	beq.w	800d18c <USBD_StdDevReq+0x300>
 800cf20:	2e03      	cmp	r6, #3
 800cf22:	f000 8111 	beq.w	800d148 <USBD_StdDevReq+0x2bc>
 800cf26:	2180      	movs	r1, #128	@ 0x80
 800cf28:	f002 f9ec 	bl	800f304 <USBD_LL_StallEP>
 800cf2c:	2100      	movs	r1, #0
 800cf2e:	4620      	mov	r0, r4
 800cf30:	f002 f9e8 	bl	800f304 <USBD_LL_StallEP>
 800cf34:	7829      	ldrb	r1, [r5, #0]
 800cf36:	4620      	mov	r0, r4
 800cf38:	f7ff fe64 	bl	800cc04 <USBD_ClrClassConfig>
 800cf3c:	2503      	movs	r5, #3
 800cf3e:	e7ba      	b.n	800ceb6 <USBD_StdDevReq+0x2a>
 800cf40:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cf44:	3b01      	subs	r3, #1
 800cf46:	2b02      	cmp	r3, #2
 800cf48:	d8ac      	bhi.n	800cea4 <USBD_StdDevReq+0x18>
 800cf4a:	88ca      	ldrh	r2, [r1, #6]
 800cf4c:	2a02      	cmp	r2, #2
 800cf4e:	d1a9      	bne.n	800cea4 <USBD_StdDevReq+0x18>
 800cf50:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800cf54:	4601      	mov	r1, r0
 800cf56:	2b00      	cmp	r3, #0
 800cf58:	bf0c      	ite	eq
 800cf5a:	2301      	moveq	r3, #1
 800cf5c:	2303      	movne	r3, #3
 800cf5e:	f841 3f0c 	str.w	r3, [r1, #12]!
 800cf62:	f000 fa89 	bl	800d478 <USBD_CtlSendData>
 800cf66:	e7a5      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800cf68:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cf6c:	3b01      	subs	r3, #1
 800cf6e:	2b02      	cmp	r3, #2
 800cf70:	d898      	bhi.n	800cea4 <USBD_StdDevReq+0x18>
 800cf72:	884b      	ldrh	r3, [r1, #2]
 800cf74:	2b01      	cmp	r3, #1
 800cf76:	d19d      	bne.n	800ceb4 <USBD_StdDevReq+0x28>
 800cf78:	2300      	movs	r3, #0
 800cf7a:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800cf7e:	4620      	mov	r0, r4
 800cf80:	f000 faa6 	bl	800d4d0 <USBD_CtlSendStatus>
 800cf84:	e796      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800cf86:	884b      	ldrh	r3, [r1, #2]
 800cf88:	2b01      	cmp	r3, #1
 800cf8a:	d0f6      	beq.n	800cf7a <USBD_StdDevReq+0xee>
 800cf8c:	2b02      	cmp	r3, #2
 800cf8e:	d189      	bne.n	800cea4 <USBD_StdDevReq+0x18>
 800cf90:	888b      	ldrh	r3, [r1, #4]
 800cf92:	0a1b      	lsrs	r3, r3, #8
 800cf94:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
 800cf98:	f000 fa9a 	bl	800d4d0 <USBD_CtlSendStatus>
 800cf9c:	e78a      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800cf9e:	888b      	ldrh	r3, [r1, #4]
 800cfa0:	2b00      	cmp	r3, #0
 800cfa2:	f47f af7f 	bne.w	800cea4 <USBD_StdDevReq+0x18>
 800cfa6:	88cb      	ldrh	r3, [r1, #6]
 800cfa8:	2b00      	cmp	r3, #0
 800cfaa:	f47f af7b 	bne.w	800cea4 <USBD_StdDevReq+0x18>
 800cfae:	884b      	ldrh	r3, [r1, #2]
 800cfb0:	2b7f      	cmp	r3, #127	@ 0x7f
 800cfb2:	f63f af77 	bhi.w	800cea4 <USBD_StdDevReq+0x18>
 800cfb6:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800cfba:	2a03      	cmp	r2, #3
 800cfbc:	f43f af72 	beq.w	800cea4 <USBD_StdDevReq+0x18>
 800cfc0:	b2dd      	uxtb	r5, r3
 800cfc2:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
 800cfc6:	4629      	mov	r1, r5
 800cfc8:	f002 f9c8 	bl	800f35c <USBD_LL_SetUSBAddress>
 800cfcc:	4620      	mov	r0, r4
 800cfce:	f000 fa7f 	bl	800d4d0 <USBD_CtlSendStatus>
 800cfd2:	2d00      	cmp	r5, #0
 800cfd4:	f000 8118 	beq.w	800d208 <USBD_StdDevReq+0x37c>
 800cfd8:	2302      	movs	r3, #2
 800cfda:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800cfde:	e769      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800cfe0:	884a      	ldrh	r2, [r1, #2]
 800cfe2:	0a13      	lsrs	r3, r2, #8
 800cfe4:	2100      	movs	r1, #0
 800cfe6:	3b01      	subs	r3, #1
 800cfe8:	f8ad 1006 	strh.w	r1, [sp, #6]
 800cfec:	2b0e      	cmp	r3, #14
 800cfee:	f63f af59 	bhi.w	800cea4 <USBD_StdDevReq+0x18>
 800cff2:	a101      	add	r1, pc, #4	@ (adr r1, 800cff8 <USBD_StdDevReq+0x16c>)
 800cff4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800cff8:	0800d0d7 	.word	0x0800d0d7
 800cffc:	0800d0bd 	.word	0x0800d0bd
 800d000:	0800d0ab 	.word	0x0800d0ab
 800d004:	0800cea5 	.word	0x0800cea5
 800d008:	0800cea5 	.word	0x0800cea5
 800d00c:	0800d095 	.word	0x0800d095
 800d010:	0800d0e7 	.word	0x0800d0e7
 800d014:	0800cea5 	.word	0x0800cea5
 800d018:	0800cea5 	.word	0x0800cea5
 800d01c:	0800cea5 	.word	0x0800cea5
 800d020:	0800cea5 	.word	0x0800cea5
 800d024:	0800cea5 	.word	0x0800cea5
 800d028:	0800cea5 	.word	0x0800cea5
 800d02c:	0800cea5 	.word	0x0800cea5
 800d030:	0800d05d 	.word	0x0800d05d
 800d034:	88ca      	ldrh	r2, [r1, #6]
 800d036:	2a01      	cmp	r2, #1
 800d038:	f47f af34 	bne.w	800cea4 <USBD_StdDevReq+0x18>
 800d03c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d040:	2b02      	cmp	r3, #2
 800d042:	b2d9      	uxtb	r1, r3
 800d044:	f200 80b6 	bhi.w	800d1b4 <USBD_StdDevReq+0x328>
 800d048:	2900      	cmp	r1, #0
 800d04a:	f43f af2b 	beq.w	800cea4 <USBD_StdDevReq+0x18>
 800d04e:	4601      	mov	r1, r0
 800d050:	2300      	movs	r3, #0
 800d052:	f841 3f08 	str.w	r3, [r1, #8]!
 800d056:	f000 fa0f 	bl	800d478 <USBD_CtlSendData>
 800d05a:	e72b      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800d05c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d060:	69db      	ldr	r3, [r3, #28]
 800d062:	2b00      	cmp	r3, #0
 800d064:	f43f af1e 	beq.w	800cea4 <USBD_StdDevReq+0x18>
 800d068:	7c20      	ldrb	r0, [r4, #16]
 800d06a:	f10d 0106 	add.w	r1, sp, #6
 800d06e:	4798      	blx	r3
 800d070:	88eb      	ldrh	r3, [r5, #6]
 800d072:	2b00      	cmp	r3, #0
 800d074:	d083      	beq.n	800cf7e <USBD_StdDevReq+0xf2>
 800d076:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d07a:	2a00      	cmp	r2, #0
 800d07c:	f43f af12 	beq.w	800cea4 <USBD_StdDevReq+0x18>
 800d080:	429a      	cmp	r2, r3
 800d082:	bf28      	it	cs
 800d084:	461a      	movcs	r2, r3
 800d086:	4601      	mov	r1, r0
 800d088:	4620      	mov	r0, r4
 800d08a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d08e:	f000 f9f3 	bl	800d478 <USBD_CtlSendData>
 800d092:	e70f      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800d094:	7c03      	ldrb	r3, [r0, #16]
 800d096:	2b00      	cmp	r3, #0
 800d098:	f47f af04 	bne.w	800cea4 <USBD_StdDevReq+0x18>
 800d09c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800d0a0:	f10d 0006 	add.w	r0, sp, #6
 800d0a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d0a6:	4798      	blx	r3
 800d0a8:	e7e2      	b.n	800d070 <USBD_StdDevReq+0x1e4>
 800d0aa:	b2d2      	uxtb	r2, r2
 800d0ac:	2a05      	cmp	r2, #5
 800d0ae:	f63f aef9 	bhi.w	800cea4 <USBD_StdDevReq+0x18>
 800d0b2:	e8df f002 	tbb	[pc, r2]
 800d0b6:	3d43      	.short	0x3d43
 800d0b8:	252b3137 	.word	0x252b3137
 800d0bc:	7c02      	ldrb	r2, [r0, #16]
 800d0be:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800d0c2:	2a00      	cmp	r2, #0
 800d0c4:	f040 8092 	bne.w	800d1ec <USBD_StdDevReq+0x360>
 800d0c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d0ca:	f10d 0006 	add.w	r0, sp, #6
 800d0ce:	4798      	blx	r3
 800d0d0:	2302      	movs	r3, #2
 800d0d2:	7043      	strb	r3, [r0, #1]
 800d0d4:	e7cc      	b.n	800d070 <USBD_StdDevReq+0x1e4>
 800d0d6:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d0da:	7c00      	ldrb	r0, [r0, #16]
 800d0dc:	681b      	ldr	r3, [r3, #0]
 800d0de:	f10d 0106 	add.w	r1, sp, #6
 800d0e2:	4798      	blx	r3
 800d0e4:	e7c4      	b.n	800d070 <USBD_StdDevReq+0x1e4>
 800d0e6:	7c03      	ldrb	r3, [r0, #16]
 800d0e8:	2b00      	cmp	r3, #0
 800d0ea:	f47f aedb 	bne.w	800cea4 <USBD_StdDevReq+0x18>
 800d0ee:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800d0f2:	f10d 0006 	add.w	r0, sp, #6
 800d0f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d0f8:	4798      	blx	r3
 800d0fa:	2307      	movs	r3, #7
 800d0fc:	7043      	strb	r3, [r0, #1]
 800d0fe:	e7b7      	b.n	800d070 <USBD_StdDevReq+0x1e4>
 800d100:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d104:	699b      	ldr	r3, [r3, #24]
 800d106:	2b00      	cmp	r3, #0
 800d108:	d1ae      	bne.n	800d068 <USBD_StdDevReq+0x1dc>
 800d10a:	e6cb      	b.n	800cea4 <USBD_StdDevReq+0x18>
 800d10c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d110:	695b      	ldr	r3, [r3, #20]
 800d112:	2b00      	cmp	r3, #0
 800d114:	d1a8      	bne.n	800d068 <USBD_StdDevReq+0x1dc>
 800d116:	e6c5      	b.n	800cea4 <USBD_StdDevReq+0x18>
 800d118:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d11c:	691b      	ldr	r3, [r3, #16]
 800d11e:	2b00      	cmp	r3, #0
 800d120:	d1a2      	bne.n	800d068 <USBD_StdDevReq+0x1dc>
 800d122:	e6bf      	b.n	800cea4 <USBD_StdDevReq+0x18>
 800d124:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d128:	68db      	ldr	r3, [r3, #12]
 800d12a:	2b00      	cmp	r3, #0
 800d12c:	d19c      	bne.n	800d068 <USBD_StdDevReq+0x1dc>
 800d12e:	e6b9      	b.n	800cea4 <USBD_StdDevReq+0x18>
 800d130:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d134:	689b      	ldr	r3, [r3, #8]
 800d136:	2b00      	cmp	r3, #0
 800d138:	d196      	bne.n	800d068 <USBD_StdDevReq+0x1dc>
 800d13a:	e6b3      	b.n	800cea4 <USBD_StdDevReq+0x18>
 800d13c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800d140:	685b      	ldr	r3, [r3, #4]
 800d142:	2b00      	cmp	r3, #0
 800d144:	d190      	bne.n	800d068 <USBD_StdDevReq+0x1dc>
 800d146:	e6ad      	b.n	800cea4 <USBD_StdDevReq+0x18>
 800d148:	2900      	cmp	r1, #0
 800d14a:	d042      	beq.n	800d1d2 <USBD_StdDevReq+0x346>
 800d14c:	6841      	ldr	r1, [r0, #4]
 800d14e:	2901      	cmp	r1, #1
 800d150:	f43f af15 	beq.w	800cf7e <USBD_StdDevReq+0xf2>
 800d154:	b2c9      	uxtb	r1, r1
 800d156:	f7ff fd55 	bl	800cc04 <USBD_ClrClassConfig>
 800d15a:	7829      	ldrb	r1, [r5, #0]
 800d15c:	6061      	str	r1, [r4, #4]
 800d15e:	4620      	mov	r0, r4
 800d160:	f7ff fd48 	bl	800cbf4 <USBD_SetClassConfig>
 800d164:	4605      	mov	r5, r0
 800d166:	2800      	cmp	r0, #0
 800d168:	f43f af09 	beq.w	800cf7e <USBD_StdDevReq+0xf2>
 800d16c:	2180      	movs	r1, #128	@ 0x80
 800d16e:	4620      	mov	r0, r4
 800d170:	f002 f8c8 	bl	800f304 <USBD_LL_StallEP>
 800d174:	2100      	movs	r1, #0
 800d176:	4620      	mov	r0, r4
 800d178:	f002 f8c4 	bl	800f304 <USBD_LL_StallEP>
 800d17c:	7921      	ldrb	r1, [r4, #4]
 800d17e:	4620      	mov	r0, r4
 800d180:	f7ff fd40 	bl	800cc04 <USBD_ClrClassConfig>
 800d184:	2302      	movs	r3, #2
 800d186:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800d18a:	e694      	b.n	800ceb6 <USBD_StdDevReq+0x2a>
 800d18c:	2900      	cmp	r1, #0
 800d18e:	f43f aef6 	beq.w	800cf7e <USBD_StdDevReq+0xf2>
 800d192:	2101      	movs	r1, #1
 800d194:	6041      	str	r1, [r0, #4]
 800d196:	f7ff fd2d 	bl	800cbf4 <USBD_SetClassConfig>
 800d19a:	4605      	mov	r5, r0
 800d19c:	b368      	cbz	r0, 800d1fa <USBD_StdDevReq+0x36e>
 800d19e:	2180      	movs	r1, #128	@ 0x80
 800d1a0:	4620      	mov	r0, r4
 800d1a2:	f002 f8af 	bl	800f304 <USBD_LL_StallEP>
 800d1a6:	2100      	movs	r1, #0
 800d1a8:	4620      	mov	r0, r4
 800d1aa:	f002 f8ab 	bl	800f304 <USBD_LL_StallEP>
 800d1ae:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800d1b2:	e680      	b.n	800ceb6 <USBD_StdDevReq+0x2a>
 800d1b4:	2903      	cmp	r1, #3
 800d1b6:	f47f ae75 	bne.w	800cea4 <USBD_StdDevReq+0x18>
 800d1ba:	1d01      	adds	r1, r0, #4
 800d1bc:	f000 f95c 	bl	800d478 <USBD_CtlSendData>
 800d1c0:	e678      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800d1c2:	2180      	movs	r1, #128	@ 0x80
 800d1c4:	f002 f89e 	bl	800f304 <USBD_LL_StallEP>
 800d1c8:	2100      	movs	r1, #0
 800d1ca:	4620      	mov	r0, r4
 800d1cc:	f002 f89a 	bl	800f304 <USBD_LL_StallEP>
 800d1d0:	e6b4      	b.n	800cf3c <USBD_StdDevReq+0xb0>
 800d1d2:	2302      	movs	r3, #2
 800d1d4:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800d1d8:	6041      	str	r1, [r0, #4]
 800d1da:	f7ff fd13 	bl	800cc04 <USBD_ClrClassConfig>
 800d1de:	4620      	mov	r0, r4
 800d1e0:	f000 f976 	bl	800d4d0 <USBD_CtlSendStatus>
 800d1e4:	e666      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800d1e6:	bf00      	nop
 800d1e8:	20001808 	.word	0x20001808
 800d1ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d1ee:	f10d 0006 	add.w	r0, sp, #6
 800d1f2:	4798      	blx	r3
 800d1f4:	2302      	movs	r3, #2
 800d1f6:	7043      	strb	r3, [r0, #1]
 800d1f8:	e73a      	b.n	800d070 <USBD_StdDevReq+0x1e4>
 800d1fa:	4620      	mov	r0, r4
 800d1fc:	f000 f968 	bl	800d4d0 <USBD_CtlSendStatus>
 800d200:	2303      	movs	r3, #3
 800d202:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800d206:	e655      	b.n	800ceb4 <USBD_StdDevReq+0x28>
 800d208:	2301      	movs	r3, #1
 800d20a:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800d20e:	e651      	b.n	800ceb4 <USBD_StdDevReq+0x28>

0800d210 <USBD_StdItfReq>:
 800d210:	b570      	push	{r4, r5, r6, lr}
 800d212:	780b      	ldrb	r3, [r1, #0]
 800d214:	065a      	lsls	r2, r3, #25
 800d216:	460d      	mov	r5, r1
 800d218:	4604      	mov	r4, r0
 800d21a:	d50d      	bpl.n	800d238 <USBD_StdItfReq+0x28>
 800d21c:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800d220:	2a40      	cmp	r2, #64	@ 0x40
 800d222:	d009      	beq.n	800d238 <USBD_StdItfReq+0x28>
 800d224:	2180      	movs	r1, #128	@ 0x80
 800d226:	f002 f86d 	bl	800f304 <USBD_LL_StallEP>
 800d22a:	2100      	movs	r1, #0
 800d22c:	4620      	mov	r0, r4
 800d22e:	f002 f869 	bl	800f304 <USBD_LL_StallEP>
 800d232:	2600      	movs	r6, #0
 800d234:	4630      	mov	r0, r6
 800d236:	bd70      	pop	{r4, r5, r6, pc}
 800d238:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800d23c:	3b01      	subs	r3, #1
 800d23e:	2b02      	cmp	r3, #2
 800d240:	d802      	bhi.n	800d248 <USBD_StdItfReq+0x38>
 800d242:	7929      	ldrb	r1, [r5, #4]
 800d244:	2901      	cmp	r1, #1
 800d246:	d908      	bls.n	800d25a <USBD_StdItfReq+0x4a>
 800d248:	2180      	movs	r1, #128	@ 0x80
 800d24a:	4620      	mov	r0, r4
 800d24c:	f002 f85a 	bl	800f304 <USBD_LL_StallEP>
 800d250:	2100      	movs	r1, #0
 800d252:	4620      	mov	r0, r4
 800d254:	f002 f856 	bl	800f304 <USBD_LL_StallEP>
 800d258:	e7eb      	b.n	800d232 <USBD_StdItfReq+0x22>
 800d25a:	4620      	mov	r0, r4
 800d25c:	f7ff fdfc 	bl	800ce58 <USBD_CoreFindIF>
 800d260:	b990      	cbnz	r0, 800d288 <USBD_StdItfReq+0x78>
 800d262:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800d266:	689b      	ldr	r3, [r3, #8]
 800d268:	b173      	cbz	r3, 800d288 <USBD_StdItfReq+0x78>
 800d26a:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
 800d26e:	4629      	mov	r1, r5
 800d270:	4620      	mov	r0, r4
 800d272:	4798      	blx	r3
 800d274:	88eb      	ldrh	r3, [r5, #6]
 800d276:	4606      	mov	r6, r0
 800d278:	2b00      	cmp	r3, #0
 800d27a:	d1db      	bne.n	800d234 <USBD_StdItfReq+0x24>
 800d27c:	2800      	cmp	r0, #0
 800d27e:	d1d9      	bne.n	800d234 <USBD_StdItfReq+0x24>
 800d280:	4620      	mov	r0, r4
 800d282:	f000 f925 	bl	800d4d0 <USBD_CtlSendStatus>
 800d286:	e7d5      	b.n	800d234 <USBD_StdItfReq+0x24>
 800d288:	2603      	movs	r6, #3
 800d28a:	4630      	mov	r0, r6
 800d28c:	bd70      	pop	{r4, r5, r6, pc}
 800d28e:	bf00      	nop

0800d290 <USBD_StdEPReq>:
 800d290:	b530      	push	{r4, r5, lr}
 800d292:	460c      	mov	r4, r1
 800d294:	888a      	ldrh	r2, [r1, #4]
 800d296:	7823      	ldrb	r3, [r4, #0]
 800d298:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800d29c:	2b20      	cmp	r3, #32
 800d29e:	b083      	sub	sp, #12
 800d2a0:	4605      	mov	r5, r0
 800d2a2:	b2d1      	uxtb	r1, r2
 800d2a4:	d04c      	beq.n	800d340 <USBD_StdEPReq+0xb0>
 800d2a6:	2b40      	cmp	r3, #64	@ 0x40
 800d2a8:	d04a      	beq.n	800d340 <USBD_StdEPReq+0xb0>
 800d2aa:	b153      	cbz	r3, 800d2c2 <USBD_StdEPReq+0x32>
 800d2ac:	2180      	movs	r1, #128	@ 0x80
 800d2ae:	4628      	mov	r0, r5
 800d2b0:	f002 f828 	bl	800f304 <USBD_LL_StallEP>
 800d2b4:	2100      	movs	r1, #0
 800d2b6:	4628      	mov	r0, r5
 800d2b8:	f002 f824 	bl	800f304 <USBD_LL_StallEP>
 800d2bc:	2000      	movs	r0, #0
 800d2be:	b003      	add	sp, #12
 800d2c0:	bd30      	pop	{r4, r5, pc}
 800d2c2:	7863      	ldrb	r3, [r4, #1]
 800d2c4:	2b01      	cmp	r3, #1
 800d2c6:	d02a      	beq.n	800d31e <USBD_StdEPReq+0x8e>
 800d2c8:	2b03      	cmp	r3, #3
 800d2ca:	d04b      	beq.n	800d364 <USBD_StdEPReq+0xd4>
 800d2cc:	2b00      	cmp	r3, #0
 800d2ce:	d1ed      	bne.n	800d2ac <USBD_StdEPReq+0x1c>
 800d2d0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d2d4:	2b02      	cmp	r3, #2
 800d2d6:	b2d8      	uxtb	r0, r3
 800d2d8:	d05f      	beq.n	800d39a <USBD_StdEPReq+0x10a>
 800d2da:	2803      	cmp	r0, #3
 800d2dc:	d1e6      	bne.n	800d2ac <USBD_StdEPReq+0x1c>
 800d2de:	f001 030f 	and.w	r3, r1, #15
 800d2e2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d2e6:	0612      	lsls	r2, r2, #24
 800d2e8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800d2ec:	d464      	bmi.n	800d3b8 <USBD_StdEPReq+0x128>
 800d2ee:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 800d2f2:	2b00      	cmp	r3, #0
 800d2f4:	d0da      	beq.n	800d2ac <USBD_StdEPReq+0x1c>
 800d2f6:	2414      	movs	r4, #20
 800d2f8:	fb04 5401 	mla	r4, r4, r1, r5
 800d2fc:	f504 74aa 	add.w	r4, r4, #340	@ 0x154
 800d300:	2900      	cmp	r1, #0
 800d302:	d066      	beq.n	800d3d2 <USBD_StdEPReq+0x142>
 800d304:	4628      	mov	r0, r5
 800d306:	f002 f815 	bl	800f334 <USBD_LL_IsStallEP>
 800d30a:	2800      	cmp	r0, #0
 800d30c:	d069      	beq.n	800d3e2 <USBD_StdEPReq+0x152>
 800d30e:	2301      	movs	r3, #1
 800d310:	6023      	str	r3, [r4, #0]
 800d312:	2202      	movs	r2, #2
 800d314:	4621      	mov	r1, r4
 800d316:	4628      	mov	r0, r5
 800d318:	f000 f8ae 	bl	800d478 <USBD_CtlSendData>
 800d31c:	e7ce      	b.n	800d2bc <USBD_StdEPReq+0x2c>
 800d31e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d322:	2b02      	cmp	r3, #2
 800d324:	b2da      	uxtb	r2, r3
 800d326:	d02f      	beq.n	800d388 <USBD_StdEPReq+0xf8>
 800d328:	2a03      	cmp	r2, #3
 800d32a:	d1bf      	bne.n	800d2ac <USBD_StdEPReq+0x1c>
 800d32c:	8863      	ldrh	r3, [r4, #2]
 800d32e:	2b00      	cmp	r3, #0
 800d330:	d1c4      	bne.n	800d2bc <USBD_StdEPReq+0x2c>
 800d332:	064b      	lsls	r3, r1, #25
 800d334:	d150      	bne.n	800d3d8 <USBD_StdEPReq+0x148>
 800d336:	4628      	mov	r0, r5
 800d338:	9101      	str	r1, [sp, #4]
 800d33a:	f000 f8c9 	bl	800d4d0 <USBD_CtlSendStatus>
 800d33e:	9901      	ldr	r1, [sp, #4]
 800d340:	4628      	mov	r0, r5
 800d342:	f7ff fd8b 	bl	800ce5c <USBD_CoreFindEP>
 800d346:	2800      	cmp	r0, #0
 800d348:	d1b8      	bne.n	800d2bc <USBD_StdEPReq+0x2c>
 800d34a:	f8d5 32b8 	ldr.w	r3, [r5, #696]	@ 0x2b8
 800d34e:	f8c5 02d4 	str.w	r0, [r5, #724]	@ 0x2d4
 800d352:	689b      	ldr	r3, [r3, #8]
 800d354:	2b00      	cmp	r3, #0
 800d356:	d0b1      	beq.n	800d2bc <USBD_StdEPReq+0x2c>
 800d358:	4621      	mov	r1, r4
 800d35a:	4628      	mov	r0, r5
 800d35c:	b003      	add	sp, #12
 800d35e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d362:	4718      	bx	r3
 800d364:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d368:	2b02      	cmp	r3, #2
 800d36a:	b2da      	uxtb	r2, r3
 800d36c:	d00c      	beq.n	800d388 <USBD_StdEPReq+0xf8>
 800d36e:	2a03      	cmp	r2, #3
 800d370:	d19c      	bne.n	800d2ac <USBD_StdEPReq+0x1c>
 800d372:	8863      	ldrh	r3, [r4, #2]
 800d374:	b923      	cbnz	r3, 800d380 <USBD_StdEPReq+0xf0>
 800d376:	0648      	lsls	r0, r1, #25
 800d378:	d002      	beq.n	800d380 <USBD_StdEPReq+0xf0>
 800d37a:	88e3      	ldrh	r3, [r4, #6]
 800d37c:	2b00      	cmp	r3, #0
 800d37e:	d032      	beq.n	800d3e6 <USBD_StdEPReq+0x156>
 800d380:	4628      	mov	r0, r5
 800d382:	f000 f8a5 	bl	800d4d0 <USBD_CtlSendStatus>
 800d386:	e799      	b.n	800d2bc <USBD_StdEPReq+0x2c>
 800d388:	064a      	lsls	r2, r1, #25
 800d38a:	d08f      	beq.n	800d2ac <USBD_StdEPReq+0x1c>
 800d38c:	f001 ffba 	bl	800f304 <USBD_LL_StallEP>
 800d390:	2180      	movs	r1, #128	@ 0x80
 800d392:	4628      	mov	r0, r5
 800d394:	f001 ffb6 	bl	800f304 <USBD_LL_StallEP>
 800d398:	e790      	b.n	800d2bc <USBD_StdEPReq+0x2c>
 800d39a:	0648      	lsls	r0, r1, #25
 800d39c:	d186      	bne.n	800d2ac <USBD_StdEPReq+0x1c>
 800d39e:	0611      	lsls	r1, r2, #24
 800d3a0:	bf4c      	ite	mi
 800d3a2:	f105 0114 	addmi.w	r1, r5, #20
 800d3a6:	f505 71aa 	addpl.w	r1, r5, #340	@ 0x154
 800d3aa:	2300      	movs	r3, #0
 800d3ac:	600b      	str	r3, [r1, #0]
 800d3ae:	2202      	movs	r2, #2
 800d3b0:	4628      	mov	r0, r5
 800d3b2:	f000 f861 	bl	800d478 <USBD_CtlSendData>
 800d3b6:	e781      	b.n	800d2bc <USBD_StdEPReq+0x2c>
 800d3b8:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800d3ba:	2b00      	cmp	r3, #0
 800d3bc:	f43f af76 	beq.w	800d2ac <USBD_StdEPReq+0x1c>
 800d3c0:	f001 047f 	and.w	r4, r1, #127	@ 0x7f
 800d3c4:	3401      	adds	r4, #1
 800d3c6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800d3ca:	2980      	cmp	r1, #128	@ 0x80
 800d3cc:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800d3d0:	d198      	bne.n	800d304 <USBD_StdEPReq+0x74>
 800d3d2:	2300      	movs	r3, #0
 800d3d4:	6023      	str	r3, [r4, #0]
 800d3d6:	e79c      	b.n	800d312 <USBD_StdEPReq+0x82>
 800d3d8:	9101      	str	r1, [sp, #4]
 800d3da:	f001 ff9f 	bl	800f31c <USBD_LL_ClearStallEP>
 800d3de:	9901      	ldr	r1, [sp, #4]
 800d3e0:	e7a9      	b.n	800d336 <USBD_StdEPReq+0xa6>
 800d3e2:	6020      	str	r0, [r4, #0]
 800d3e4:	e795      	b.n	800d312 <USBD_StdEPReq+0x82>
 800d3e6:	4628      	mov	r0, r5
 800d3e8:	f001 ff8c 	bl	800f304 <USBD_LL_StallEP>
 800d3ec:	e7c8      	b.n	800d380 <USBD_StdEPReq+0xf0>
 800d3ee:	bf00      	nop

0800d3f0 <USBD_ParseSetupRequest>:
 800d3f0:	780b      	ldrb	r3, [r1, #0]
 800d3f2:	7003      	strb	r3, [r0, #0]
 800d3f4:	784b      	ldrb	r3, [r1, #1]
 800d3f6:	7043      	strb	r3, [r0, #1]
 800d3f8:	884b      	ldrh	r3, [r1, #2]
 800d3fa:	8043      	strh	r3, [r0, #2]
 800d3fc:	888b      	ldrh	r3, [r1, #4]
 800d3fe:	8083      	strh	r3, [r0, #4]
 800d400:	88cb      	ldrh	r3, [r1, #6]
 800d402:	80c3      	strh	r3, [r0, #6]
 800d404:	4770      	bx	lr
 800d406:	bf00      	nop

0800d408 <USBD_CtlError>:
 800d408:	b510      	push	{r4, lr}
 800d40a:	2180      	movs	r1, #128	@ 0x80
 800d40c:	4604      	mov	r4, r0
 800d40e:	f001 ff79 	bl	800f304 <USBD_LL_StallEP>
 800d412:	4620      	mov	r0, r4
 800d414:	2100      	movs	r1, #0
 800d416:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d41a:	f001 bf73 	b.w	800f304 <USBD_LL_StallEP>
 800d41e:	bf00      	nop

0800d420 <USBD_GetString>:
 800d420:	b330      	cbz	r0, 800d470 <USBD_GetString+0x50>
 800d422:	b570      	push	{r4, r5, r6, lr}
 800d424:	7803      	ldrb	r3, [r0, #0]
 800d426:	460e      	mov	r6, r1
 800d428:	4614      	mov	r4, r2
 800d42a:	4605      	mov	r5, r0
 800d42c:	b30b      	cbz	r3, 800d472 <USBD_GetString+0x52>
 800d42e:	4603      	mov	r3, r0
 800d430:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d434:	2900      	cmp	r1, #0
 800d436:	d1fb      	bne.n	800d430 <USBD_GetString+0x10>
 800d438:	1c68      	adds	r0, r5, #1
 800d43a:	f7f2 fef1 	bl	8000220 <strlen>
 800d43e:	1c43      	adds	r3, r0, #1
 800d440:	b2db      	uxtb	r3, r3
 800d442:	3301      	adds	r3, #1
 800d444:	005b      	lsls	r3, r3, #1
 800d446:	b2da      	uxtb	r2, r3
 800d448:	8023      	strh	r3, [r4, #0]
 800d44a:	2303      	movs	r3, #3
 800d44c:	7032      	strb	r2, [r6, #0]
 800d44e:	7073      	strb	r3, [r6, #1]
 800d450:	782c      	ldrb	r4, [r5, #0]
 800d452:	b164      	cbz	r4, 800d46e <USBD_GetString+0x4e>
 800d454:	4628      	mov	r0, r5
 800d456:	2302      	movs	r3, #2
 800d458:	2100      	movs	r1, #0
 800d45a:	1c5a      	adds	r2, r3, #1
 800d45c:	b2d2      	uxtb	r2, r2
 800d45e:	54f4      	strb	r4, [r6, r3]
 800d460:	54b1      	strb	r1, [r6, r2]
 800d462:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800d466:	3302      	adds	r3, #2
 800d468:	b2db      	uxtb	r3, r3
 800d46a:	2c00      	cmp	r4, #0
 800d46c:	d1f5      	bne.n	800d45a <USBD_GetString+0x3a>
 800d46e:	bd70      	pop	{r4, r5, r6, pc}
 800d470:	4770      	bx	lr
 800d472:	2202      	movs	r2, #2
 800d474:	4613      	mov	r3, r2
 800d476:	e7e7      	b.n	800d448 <USBD_GetString+0x28>

0800d478 <USBD_CtlSendData>:
 800d478:	b508      	push	{r3, lr}
 800d47a:	4613      	mov	r3, r2
 800d47c:	460a      	mov	r2, r1
 800d47e:	2102      	movs	r1, #2
 800d480:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800d484:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d488:	2100      	movs	r1, #0
 800d48a:	f001 ff73 	bl	800f374 <USBD_LL_Transmit>
 800d48e:	2000      	movs	r0, #0
 800d490:	bd08      	pop	{r3, pc}
 800d492:	bf00      	nop

0800d494 <USBD_CtlContinueSendData>:
 800d494:	b508      	push	{r3, lr}
 800d496:	4613      	mov	r3, r2
 800d498:	460a      	mov	r2, r1
 800d49a:	2100      	movs	r1, #0
 800d49c:	f001 ff6a 	bl	800f374 <USBD_LL_Transmit>
 800d4a0:	2000      	movs	r0, #0
 800d4a2:	bd08      	pop	{r3, pc}

0800d4a4 <USBD_CtlPrepareRx>:
 800d4a4:	b508      	push	{r3, lr}
 800d4a6:	4613      	mov	r3, r2
 800d4a8:	460a      	mov	r2, r1
 800d4aa:	2103      	movs	r1, #3
 800d4ac:	e9c0 3356 	strd	r3, r3, [r0, #344]	@ 0x158
 800d4b0:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d4b4:	2100      	movs	r1, #0
 800d4b6:	f001 ff69 	bl	800f38c <USBD_LL_PrepareReceive>
 800d4ba:	2000      	movs	r0, #0
 800d4bc:	bd08      	pop	{r3, pc}
 800d4be:	bf00      	nop

0800d4c0 <USBD_CtlContinueRx>:
 800d4c0:	b508      	push	{r3, lr}
 800d4c2:	4613      	mov	r3, r2
 800d4c4:	460a      	mov	r2, r1
 800d4c6:	2100      	movs	r1, #0
 800d4c8:	f001 ff60 	bl	800f38c <USBD_LL_PrepareReceive>
 800d4cc:	2000      	movs	r0, #0
 800d4ce:	bd08      	pop	{r3, pc}

0800d4d0 <USBD_CtlSendStatus>:
 800d4d0:	b508      	push	{r3, lr}
 800d4d2:	2104      	movs	r1, #4
 800d4d4:	2300      	movs	r3, #0
 800d4d6:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d4da:	461a      	mov	r2, r3
 800d4dc:	4619      	mov	r1, r3
 800d4de:	f001 ff49 	bl	800f374 <USBD_LL_Transmit>
 800d4e2:	2000      	movs	r0, #0
 800d4e4:	bd08      	pop	{r3, pc}
 800d4e6:	bf00      	nop

0800d4e8 <USBD_CtlReceiveStatus>:
 800d4e8:	b508      	push	{r3, lr}
 800d4ea:	2105      	movs	r1, #5
 800d4ec:	2300      	movs	r3, #0
 800d4ee:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d4f2:	461a      	mov	r2, r3
 800d4f4:	4619      	mov	r1, r3
 800d4f6:	f001 ff49 	bl	800f38c <USBD_LL_PrepareReceive>
 800d4fa:	2000      	movs	r0, #0
 800d4fc:	bd08      	pop	{r3, pc}
 800d4fe:	bf00      	nop

0800d500 <osKernelStart>:
 800d500:	b508      	push	{r3, lr}
 800d502:	f000 fcc1 	bl	800de88 <vTaskStartScheduler>
 800d506:	2000      	movs	r0, #0
 800d508:	bd08      	pop	{r3, pc}
 800d50a:	bf00      	nop

0800d50c <osThreadCreate>:
 800d50c:	b510      	push	{r4, lr}
 800d50e:	4684      	mov	ip, r0
 800d510:	460b      	mov	r3, r1
 800d512:	f8bc 2010 	ldrh.w	r2, [ip, #16]
 800d516:	f8dc 1000 	ldr.w	r1, [ip]
 800d51a:	f9bc c008 	ldrsh.w	ip, [ip, #8]
 800d51e:	6840      	ldr	r0, [r0, #4]
 800d520:	b084      	sub	sp, #16
 800d522:	f1bc 0f84 	cmp.w	ip, #132	@ 0x84
 800d526:	bf14      	ite	ne
 800d528:	f10c 0403 	addne.w	r4, ip, #3
 800d52c:	2400      	moveq	r4, #0
 800d52e:	9400      	str	r4, [sp, #0]
 800d530:	ac03      	add	r4, sp, #12
 800d532:	9401      	str	r4, [sp, #4]
 800d534:	f000 fa56 	bl	800d9e4 <xTaskCreate>
 800d538:	2801      	cmp	r0, #1
 800d53a:	bf0c      	ite	eq
 800d53c:	9803      	ldreq	r0, [sp, #12]
 800d53e:	2000      	movne	r0, #0
 800d540:	b004      	add	sp, #16
 800d542:	bd10      	pop	{r4, pc}

0800d544 <osThreadSetPriority>:
 800d544:	b508      	push	{r3, lr}
 800d546:	2984      	cmp	r1, #132	@ 0x84
 800d548:	bf14      	ite	ne
 800d54a:	3103      	addne	r1, #3
 800d54c:	2100      	moveq	r1, #0
 800d54e:	f000 fb87 	bl	800dc60 <vTaskPrioritySet>
 800d552:	2000      	movs	r0, #0
 800d554:	bd08      	pop	{r3, pc}
 800d556:	bf00      	nop

0800d558 <osDelay>:
 800d558:	b508      	push	{r3, lr}
 800d55a:	2801      	cmp	r0, #1
 800d55c:	bf38      	it	cc
 800d55e:	2001      	movcc	r0, #1
 800d560:	f000 fb4e 	bl	800dc00 <vTaskDelay>
 800d564:	2000      	movs	r0, #0
 800d566:	bd08      	pop	{r3, pc}

0800d568 <osThreadSuspend>:
 800d568:	b508      	push	{r3, lr}
 800d56a:	f000 fdd3 	bl	800e114 <vTaskSuspend>
 800d56e:	2000      	movs	r0, #0
 800d570:	bd08      	pop	{r3, pc}
 800d572:	bf00      	nop

0800d574 <osThreadResume>:
 800d574:	b508      	push	{r3, lr}
 800d576:	f3ef 8305 	mrs	r3, IPSR
 800d57a:	b12b      	cbz	r3, 800d588 <osThreadResume+0x14>
 800d57c:	f000 fc2e 	bl	800dddc <xTaskResumeFromISR>
 800d580:	2801      	cmp	r0, #1
 800d582:	d005      	beq.n	800d590 <osThreadResume+0x1c>
 800d584:	2000      	movs	r0, #0
 800d586:	bd08      	pop	{r3, pc}
 800d588:	f000 fbda 	bl	800dd40 <vTaskResume>
 800d58c:	2000      	movs	r0, #0
 800d58e:	bd08      	pop	{r3, pc}
 800d590:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d594:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d598:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d59c:	f3bf 8f4f 	dsb	sy
 800d5a0:	f3bf 8f6f 	isb	sy
 800d5a4:	2000      	movs	r0, #0
 800d5a6:	bd08      	pop	{r3, pc}

0800d5a8 <vListInitialise>:
 800d5a8:	f100 0308 	add.w	r3, r0, #8
 800d5ac:	f04f 31ff 	mov.w	r1, #4294967295
 800d5b0:	2200      	movs	r2, #0
 800d5b2:	e9c0 3101 	strd	r3, r1, [r0, #4]
 800d5b6:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d5ba:	6002      	str	r2, [r0, #0]
 800d5bc:	4770      	bx	lr
 800d5be:	bf00      	nop

0800d5c0 <vListInitialiseItem>:
 800d5c0:	2300      	movs	r3, #0
 800d5c2:	6103      	str	r3, [r0, #16]
 800d5c4:	4770      	bx	lr
 800d5c6:	bf00      	nop

0800d5c8 <vListInsertEnd>:
 800d5c8:	6842      	ldr	r2, [r0, #4]
 800d5ca:	6803      	ldr	r3, [r0, #0]
 800d5cc:	b410      	push	{r4}
 800d5ce:	6894      	ldr	r4, [r2, #8]
 800d5d0:	3301      	adds	r3, #1
 800d5d2:	e9c1 2401 	strd	r2, r4, [r1, #4]
 800d5d6:	6061      	str	r1, [r4, #4]
 800d5d8:	6091      	str	r1, [r2, #8]
 800d5da:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d5de:	6108      	str	r0, [r1, #16]
 800d5e0:	6003      	str	r3, [r0, #0]
 800d5e2:	4770      	bx	lr

0800d5e4 <vListInsert>:
 800d5e4:	b430      	push	{r4, r5}
 800d5e6:	680d      	ldr	r5, [r1, #0]
 800d5e8:	1c6b      	adds	r3, r5, #1
 800d5ea:	d010      	beq.n	800d60e <vListInsert+0x2a>
 800d5ec:	f100 0308 	add.w	r3, r0, #8
 800d5f0:	461c      	mov	r4, r3
 800d5f2:	685b      	ldr	r3, [r3, #4]
 800d5f4:	681a      	ldr	r2, [r3, #0]
 800d5f6:	42aa      	cmp	r2, r5
 800d5f8:	d9fa      	bls.n	800d5f0 <vListInsert+0xc>
 800d5fa:	6802      	ldr	r2, [r0, #0]
 800d5fc:	604b      	str	r3, [r1, #4]
 800d5fe:	3201      	adds	r2, #1
 800d600:	6099      	str	r1, [r3, #8]
 800d602:	608c      	str	r4, [r1, #8]
 800d604:	6061      	str	r1, [r4, #4]
 800d606:	6108      	str	r0, [r1, #16]
 800d608:	bc30      	pop	{r4, r5}
 800d60a:	6002      	str	r2, [r0, #0]
 800d60c:	4770      	bx	lr
 800d60e:	6904      	ldr	r4, [r0, #16]
 800d610:	6863      	ldr	r3, [r4, #4]
 800d612:	e7f2      	b.n	800d5fa <vListInsert+0x16>

0800d614 <uxListRemove>:
 800d614:	6903      	ldr	r3, [r0, #16]
 800d616:	b410      	push	{r4}
 800d618:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800d61c:	685c      	ldr	r4, [r3, #4]
 800d61e:	608a      	str	r2, [r1, #8]
 800d620:	4284      	cmp	r4, r0
 800d622:	6051      	str	r1, [r2, #4]
 800d624:	bf08      	it	eq
 800d626:	605a      	streq	r2, [r3, #4]
 800d628:	681a      	ldr	r2, [r3, #0]
 800d62a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d62e:	2100      	movs	r1, #0
 800d630:	3a01      	subs	r2, #1
 800d632:	6101      	str	r1, [r0, #16]
 800d634:	601a      	str	r2, [r3, #0]
 800d636:	6818      	ldr	r0, [r3, #0]
 800d638:	4770      	bx	lr
 800d63a:	bf00      	nop

0800d63c <prvIdleTask>:
 800d63c:	b580      	push	{r7, lr}
 800d63e:	4d16      	ldr	r5, [pc, #88]	@ (800d698 <prvIdleTask+0x5c>)
 800d640:	4f16      	ldr	r7, [pc, #88]	@ (800d69c <prvIdleTask+0x60>)
 800d642:	4e17      	ldr	r6, [pc, #92]	@ (800d6a0 <prvIdleTask+0x64>)
 800d644:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 800d6a4 <prvIdleTask+0x68>
 800d648:	f04f 2ae0 	mov.w	sl, #3758153728	@ 0xe000e000
 800d64c:	f04f 5980 	mov.w	r9, #268435456	@ 0x10000000
 800d650:	e014      	b.n	800d67c <prvIdleTask+0x40>
 800d652:	f000 fe4f 	bl	800e2f4 <vPortEnterCritical>
 800d656:	68fb      	ldr	r3, [r7, #12]
 800d658:	68dc      	ldr	r4, [r3, #12]
 800d65a:	1d20      	adds	r0, r4, #4
 800d65c:	f7ff ffda 	bl	800d614 <uxListRemove>
 800d660:	6833      	ldr	r3, [r6, #0]
 800d662:	3b01      	subs	r3, #1
 800d664:	6033      	str	r3, [r6, #0]
 800d666:	682b      	ldr	r3, [r5, #0]
 800d668:	3b01      	subs	r3, #1
 800d66a:	602b      	str	r3, [r5, #0]
 800d66c:	f000 fe64 	bl	800e338 <vPortExitCritical>
 800d670:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d672:	f001 f85d 	bl	800e730 <vPortFree>
 800d676:	4620      	mov	r0, r4
 800d678:	f001 f85a 	bl	800e730 <vPortFree>
 800d67c:	682b      	ldr	r3, [r5, #0]
 800d67e:	2b00      	cmp	r3, #0
 800d680:	d1e7      	bne.n	800d652 <prvIdleTask+0x16>
 800d682:	f8d8 3000 	ldr.w	r3, [r8]
 800d686:	2b01      	cmp	r3, #1
 800d688:	d9f8      	bls.n	800d67c <prvIdleTask+0x40>
 800d68a:	f8ca 9d04 	str.w	r9, [sl, #3332]	@ 0xd04
 800d68e:	f3bf 8f4f 	dsb	sy
 800d692:	f3bf 8f6f 	isb	sy
 800d696:	e7f1      	b.n	800d67c <prvIdleTask+0x40>
 800d698:	2000184c 	.word	0x2000184c
 800d69c:	20001850 	.word	0x20001850
 800d6a0:	20001834 	.word	0x20001834
 800d6a4:	200018a8 	.word	0x200018a8

0800d6a8 <prvAddCurrentTaskToDelayedList>:
 800d6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d6aa:	4b21      	ldr	r3, [pc, #132]	@ (800d730 <prvAddCurrentTaskToDelayedList+0x88>)
 800d6ac:	4d21      	ldr	r5, [pc, #132]	@ (800d734 <prvAddCurrentTaskToDelayedList+0x8c>)
 800d6ae:	681e      	ldr	r6, [r3, #0]
 800d6b0:	682b      	ldr	r3, [r5, #0]
 800d6b2:	4604      	mov	r4, r0
 800d6b4:	1d18      	adds	r0, r3, #4
 800d6b6:	460f      	mov	r7, r1
 800d6b8:	f7ff ffac 	bl	800d614 <uxListRemove>
 800d6bc:	b940      	cbnz	r0, 800d6d0 <prvAddCurrentTaskToDelayedList+0x28>
 800d6be:	682b      	ldr	r3, [r5, #0]
 800d6c0:	491d      	ldr	r1, [pc, #116]	@ (800d738 <prvAddCurrentTaskToDelayedList+0x90>)
 800d6c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d6c4:	2201      	movs	r2, #1
 800d6c6:	409a      	lsls	r2, r3
 800d6c8:	680b      	ldr	r3, [r1, #0]
 800d6ca:	ea23 0302 	bic.w	r3, r3, r2
 800d6ce:	600b      	str	r3, [r1, #0]
 800d6d0:	1c63      	adds	r3, r4, #1
 800d6d2:	d00f      	beq.n	800d6f4 <prvAddCurrentTaskToDelayedList+0x4c>
 800d6d4:	682b      	ldr	r3, [r5, #0]
 800d6d6:	1934      	adds	r4, r6, r4
 800d6d8:	605c      	str	r4, [r3, #4]
 800d6da:	d210      	bcs.n	800d6fe <prvAddCurrentTaskToDelayedList+0x56>
 800d6dc:	4b17      	ldr	r3, [pc, #92]	@ (800d73c <prvAddCurrentTaskToDelayedList+0x94>)
 800d6de:	6818      	ldr	r0, [r3, #0]
 800d6e0:	6829      	ldr	r1, [r5, #0]
 800d6e2:	3104      	adds	r1, #4
 800d6e4:	f7ff ff7e 	bl	800d5e4 <vListInsert>
 800d6e8:	4b15      	ldr	r3, [pc, #84]	@ (800d740 <prvAddCurrentTaskToDelayedList+0x98>)
 800d6ea:	681a      	ldr	r2, [r3, #0]
 800d6ec:	42a2      	cmp	r2, r4
 800d6ee:	d900      	bls.n	800d6f2 <prvAddCurrentTaskToDelayedList+0x4a>
 800d6f0:	601c      	str	r4, [r3, #0]
 800d6f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d6f4:	b9a7      	cbnz	r7, 800d720 <prvAddCurrentTaskToDelayedList+0x78>
 800d6f6:	682b      	ldr	r3, [r5, #0]
 800d6f8:	1e72      	subs	r2, r6, #1
 800d6fa:	605a      	str	r2, [r3, #4]
 800d6fc:	b13e      	cbz	r6, 800d70e <prvAddCurrentTaskToDelayedList+0x66>
 800d6fe:	4b11      	ldr	r3, [pc, #68]	@ (800d744 <prvAddCurrentTaskToDelayedList+0x9c>)
 800d700:	6818      	ldr	r0, [r3, #0]
 800d702:	6829      	ldr	r1, [r5, #0]
 800d704:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d708:	3104      	adds	r1, #4
 800d70a:	f7ff bf6b 	b.w	800d5e4 <vListInsert>
 800d70e:	4b0b      	ldr	r3, [pc, #44]	@ (800d73c <prvAddCurrentTaskToDelayedList+0x94>)
 800d710:	6818      	ldr	r0, [r3, #0]
 800d712:	6829      	ldr	r1, [r5, #0]
 800d714:	3104      	adds	r1, #4
 800d716:	f7ff ff65 	bl	800d5e4 <vListInsert>
 800d71a:	4b09      	ldr	r3, [pc, #36]	@ (800d740 <prvAddCurrentTaskToDelayedList+0x98>)
 800d71c:	681b      	ldr	r3, [r3, #0]
 800d71e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d720:	6829      	ldr	r1, [r5, #0]
 800d722:	4809      	ldr	r0, [pc, #36]	@ (800d748 <prvAddCurrentTaskToDelayedList+0xa0>)
 800d724:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d728:	3104      	adds	r1, #4
 800d72a:	f7ff bf4d 	b.w	800d5c8 <vListInsertEnd>
 800d72e:	bf00      	nop
 800d730:	20001830 	.word	0x20001830
 800d734:	20001934 	.word	0x20001934
 800d738:	2000182c 	.word	0x2000182c
 800d73c:	2000187c 	.word	0x2000187c
 800d740:	20001814 	.word	0x20001814
 800d744:	20001878 	.word	0x20001878
 800d748:	20001838 	.word	0x20001838

0800d74c <xTaskIncrementTick.part.0>:
 800d74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d750:	4b48      	ldr	r3, [pc, #288]	@ (800d874 <xTaskIncrementTick.part.0+0x128>)
 800d752:	681d      	ldr	r5, [r3, #0]
 800d754:	3501      	adds	r5, #1
 800d756:	b083      	sub	sp, #12
 800d758:	601d      	str	r5, [r3, #0]
 800d75a:	2d00      	cmp	r5, #0
 800d75c:	d041      	beq.n	800d7e2 <xTaskIncrementTick.part.0+0x96>
 800d75e:	4b46      	ldr	r3, [pc, #280]	@ (800d878 <xTaskIncrementTick.part.0+0x12c>)
 800d760:	9301      	str	r3, [sp, #4]
 800d762:	681b      	ldr	r3, [r3, #0]
 800d764:	429d      	cmp	r5, r3
 800d766:	d349      	bcc.n	800d7fc <xTaskIncrementTick.part.0+0xb0>
 800d768:	4e44      	ldr	r6, [pc, #272]	@ (800d87c <xTaskIncrementTick.part.0+0x130>)
 800d76a:	f8df 8124 	ldr.w	r8, [pc, #292]	@ 800d890 <xTaskIncrementTick.part.0+0x144>
 800d76e:	6833      	ldr	r3, [r6, #0]
 800d770:	f8df 9120 	ldr.w	r9, [pc, #288]	@ 800d894 <xTaskIncrementTick.part.0+0x148>
 800d774:	681c      	ldr	r4, [r3, #0]
 800d776:	2c00      	cmp	r4, #0
 800d778:	d076      	beq.n	800d868 <xTaskIncrementTick.part.0+0x11c>
 800d77a:	4f41      	ldr	r7, [pc, #260]	@ (800d880 <xTaskIncrementTick.part.0+0x134>)
 800d77c:	2400      	movs	r4, #0
 800d77e:	e022      	b.n	800d7c6 <xTaskIncrementTick.part.0+0x7a>
 800d780:	f7ff ff48 	bl	800d614 <uxListRemove>
 800d784:	f8db 2028 	ldr.w	r2, [fp, #40]	@ 0x28
 800d788:	f10b 0018 	add.w	r0, fp, #24
 800d78c:	b10a      	cbz	r2, 800d792 <xTaskIncrementTick.part.0+0x46>
 800d78e:	f7ff ff41 	bl	800d614 <uxListRemove>
 800d792:	f8db 002c 	ldr.w	r0, [fp, #44]	@ 0x2c
 800d796:	683b      	ldr	r3, [r7, #0]
 800d798:	2201      	movs	r2, #1
 800d79a:	4082      	lsls	r2, r0
 800d79c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d7a0:	431a      	orrs	r2, r3
 800d7a2:	4651      	mov	r1, sl
 800d7a4:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d7a8:	603a      	str	r2, [r7, #0]
 800d7aa:	f7ff ff0d 	bl	800d5c8 <vListInsertEnd>
 800d7ae:	f8d9 2000 	ldr.w	r2, [r9]
 800d7b2:	6830      	ldr	r0, [r6, #0]
 800d7b4:	f8db 102c 	ldr.w	r1, [fp, #44]	@ 0x2c
 800d7b8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d7ba:	6803      	ldr	r3, [r0, #0]
 800d7bc:	4291      	cmp	r1, r2
 800d7be:	bf28      	it	cs
 800d7c0:	2401      	movcs	r4, #1
 800d7c2:	2b00      	cmp	r3, #0
 800d7c4:	d050      	beq.n	800d868 <xTaskIncrementTick.part.0+0x11c>
 800d7c6:	6833      	ldr	r3, [r6, #0]
 800d7c8:	68db      	ldr	r3, [r3, #12]
 800d7ca:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 800d7ce:	f8db 2004 	ldr.w	r2, [fp, #4]
 800d7d2:	f10b 0a04 	add.w	sl, fp, #4
 800d7d6:	4295      	cmp	r5, r2
 800d7d8:	4650      	mov	r0, sl
 800d7da:	d2d1      	bcs.n	800d780 <xTaskIncrementTick.part.0+0x34>
 800d7dc:	9b01      	ldr	r3, [sp, #4]
 800d7de:	601a      	str	r2, [r3, #0]
 800d7e0:	e011      	b.n	800d806 <xTaskIncrementTick.part.0+0xba>
 800d7e2:	4b26      	ldr	r3, [pc, #152]	@ (800d87c <xTaskIncrementTick.part.0+0x130>)
 800d7e4:	681a      	ldr	r2, [r3, #0]
 800d7e6:	6812      	ldr	r2, [r2, #0]
 800d7e8:	b30a      	cbz	r2, 800d82e <xTaskIncrementTick.part.0+0xe2>
 800d7ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d7ee:	f383 8811 	msr	BASEPRI, r3
 800d7f2:	f3bf 8f6f 	isb	sy
 800d7f6:	f3bf 8f4f 	dsb	sy
 800d7fa:	e7fe      	b.n	800d7fa <xTaskIncrementTick.part.0+0xae>
 800d7fc:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 800d890 <xTaskIncrementTick.part.0+0x144>
 800d800:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 800d894 <xTaskIncrementTick.part.0+0x148>
 800d804:	2400      	movs	r4, #0
 800d806:	f8d9 3000 	ldr.w	r3, [r9]
 800d80a:	491e      	ldr	r1, [pc, #120]	@ (800d884 <xTaskIncrementTick.part.0+0x138>)
 800d80c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d80e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d812:	009b      	lsls	r3, r3, #2
 800d814:	f858 2003 	ldr.w	r2, [r8, r3]
 800d818:	680b      	ldr	r3, [r1, #0]
 800d81a:	2a02      	cmp	r2, #2
 800d81c:	bf28      	it	cs
 800d81e:	2401      	movcs	r4, #1
 800d820:	2b00      	cmp	r3, #0
 800d822:	bf0c      	ite	eq
 800d824:	4620      	moveq	r0, r4
 800d826:	2001      	movne	r0, #1
 800d828:	b003      	add	sp, #12
 800d82a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d82e:	4a16      	ldr	r2, [pc, #88]	@ (800d888 <xTaskIncrementTick.part.0+0x13c>)
 800d830:	6818      	ldr	r0, [r3, #0]
 800d832:	6811      	ldr	r1, [r2, #0]
 800d834:	6019      	str	r1, [r3, #0]
 800d836:	4915      	ldr	r1, [pc, #84]	@ (800d88c <xTaskIncrementTick.part.0+0x140>)
 800d838:	6010      	str	r0, [r2, #0]
 800d83a:	680a      	ldr	r2, [r1, #0]
 800d83c:	3201      	adds	r2, #1
 800d83e:	600a      	str	r2, [r1, #0]
 800d840:	681a      	ldr	r2, [r3, #0]
 800d842:	6812      	ldr	r2, [r2, #0]
 800d844:	b93a      	cbnz	r2, 800d856 <xTaskIncrementTick.part.0+0x10a>
 800d846:	4b0c      	ldr	r3, [pc, #48]	@ (800d878 <xTaskIncrementTick.part.0+0x12c>)
 800d848:	9301      	str	r3, [sp, #4]
 800d84a:	461a      	mov	r2, r3
 800d84c:	f04f 33ff 	mov.w	r3, #4294967295
 800d850:	6013      	str	r3, [r2, #0]
 800d852:	4613      	mov	r3, r2
 800d854:	e785      	b.n	800d762 <xTaskIncrementTick.part.0+0x16>
 800d856:	681b      	ldr	r3, [r3, #0]
 800d858:	4a07      	ldr	r2, [pc, #28]	@ (800d878 <xTaskIncrementTick.part.0+0x12c>)
 800d85a:	68db      	ldr	r3, [r3, #12]
 800d85c:	9201      	str	r2, [sp, #4]
 800d85e:	68db      	ldr	r3, [r3, #12]
 800d860:	685b      	ldr	r3, [r3, #4]
 800d862:	6013      	str	r3, [r2, #0]
 800d864:	4613      	mov	r3, r2
 800d866:	e77c      	b.n	800d762 <xTaskIncrementTick.part.0+0x16>
 800d868:	9a01      	ldr	r2, [sp, #4]
 800d86a:	f04f 33ff 	mov.w	r3, #4294967295
 800d86e:	6013      	str	r3, [r2, #0]
 800d870:	e7c9      	b.n	800d806 <xTaskIncrementTick.part.0+0xba>
 800d872:	bf00      	nop
 800d874:	20001830 	.word	0x20001830
 800d878:	20001814 	.word	0x20001814
 800d87c:	2000187c 	.word	0x2000187c
 800d880:	2000182c 	.word	0x2000182c
 800d884:	20001820 	.word	0x20001820
 800d888:	20001878 	.word	0x20001878
 800d88c:	2000181c 	.word	0x2000181c
 800d890:	200018a8 	.word	0x200018a8
 800d894:	20001934 	.word	0x20001934

0800d898 <xTaskResumeAll.part.0>:
 800d898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d89c:	4c47      	ldr	r4, [pc, #284]	@ (800d9bc <xTaskResumeAll.part.0+0x124>)
 800d89e:	b083      	sub	sp, #12
 800d8a0:	f000 fd28 	bl	800e2f4 <vPortEnterCritical>
 800d8a4:	6823      	ldr	r3, [r4, #0]
 800d8a6:	3b01      	subs	r3, #1
 800d8a8:	6023      	str	r3, [r4, #0]
 800d8aa:	6823      	ldr	r3, [r4, #0]
 800d8ac:	2b00      	cmp	r3, #0
 800d8ae:	d16c      	bne.n	800d98a <xTaskResumeAll.part.0+0xf2>
 800d8b0:	4b43      	ldr	r3, [pc, #268]	@ (800d9c0 <xTaskResumeAll.part.0+0x128>)
 800d8b2:	681b      	ldr	r3, [r3, #0]
 800d8b4:	2b00      	cmp	r3, #0
 800d8b6:	d068      	beq.n	800d98a <xTaskResumeAll.part.0+0xf2>
 800d8b8:	f8df b120 	ldr.w	fp, [pc, #288]	@ 800d9dc <xTaskResumeAll.part.0+0x144>
 800d8bc:	f8db 3000 	ldr.w	r3, [fp]
 800d8c0:	2b00      	cmp	r3, #0
 800d8c2:	d077      	beq.n	800d9b4 <xTaskResumeAll.part.0+0x11c>
 800d8c4:	4b3f      	ldr	r3, [pc, #252]	@ (800d9c4 <xTaskResumeAll.part.0+0x12c>)
 800d8c6:	4d40      	ldr	r5, [pc, #256]	@ (800d9c8 <xTaskResumeAll.part.0+0x130>)
 800d8c8:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 800d9e0 <xTaskResumeAll.part.0+0x148>
 800d8cc:	4f3f      	ldr	r7, [pc, #252]	@ (800d9cc <xTaskResumeAll.part.0+0x134>)
 800d8ce:	9301      	str	r3, [sp, #4]
 800d8d0:	2601      	movs	r6, #1
 800d8d2:	f8db 300c 	ldr.w	r3, [fp, #12]
 800d8d6:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800d8da:	f10a 0904 	add.w	r9, sl, #4
 800d8de:	f10a 0018 	add.w	r0, sl, #24
 800d8e2:	f7ff fe97 	bl	800d614 <uxListRemove>
 800d8e6:	4648      	mov	r0, r9
 800d8e8:	f7ff fe94 	bl	800d614 <uxListRemove>
 800d8ec:	f8da 002c 	ldr.w	r0, [sl, #44]	@ 0x2c
 800d8f0:	682a      	ldr	r2, [r5, #0]
 800d8f2:	fa06 f300 	lsl.w	r3, r6, r0
 800d8f6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d8fa:	4313      	orrs	r3, r2
 800d8fc:	4649      	mov	r1, r9
 800d8fe:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d902:	602b      	str	r3, [r5, #0]
 800d904:	f7ff fe60 	bl	800d5c8 <vListInsertEnd>
 800d908:	683b      	ldr	r3, [r7, #0]
 800d90a:	f8da 202c 	ldr.w	r2, [sl, #44]	@ 0x2c
 800d90e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d910:	429a      	cmp	r2, r3
 800d912:	d341      	bcc.n	800d998 <xTaskResumeAll.part.0+0x100>
 800d914:	9b01      	ldr	r3, [sp, #4]
 800d916:	601e      	str	r6, [r3, #0]
 800d918:	f8db 3000 	ldr.w	r3, [fp]
 800d91c:	2b00      	cmp	r3, #0
 800d91e:	d1d8      	bne.n	800d8d2 <xTaskResumeAll.part.0+0x3a>
 800d920:	4b2b      	ldr	r3, [pc, #172]	@ (800d9d0 <xTaskResumeAll.part.0+0x138>)
 800d922:	681a      	ldr	r2, [r3, #0]
 800d924:	6812      	ldr	r2, [r2, #0]
 800d926:	2a00      	cmp	r2, #0
 800d928:	d03f      	beq.n	800d9aa <xTaskResumeAll.part.0+0x112>
 800d92a:	681a      	ldr	r2, [r3, #0]
 800d92c:	4b29      	ldr	r3, [pc, #164]	@ (800d9d4 <xTaskResumeAll.part.0+0x13c>)
 800d92e:	68d2      	ldr	r2, [r2, #12]
 800d930:	68d2      	ldr	r2, [r2, #12]
 800d932:	6852      	ldr	r2, [r2, #4]
 800d934:	601a      	str	r2, [r3, #0]
 800d936:	4e28      	ldr	r6, [pc, #160]	@ (800d9d8 <xTaskResumeAll.part.0+0x140>)
 800d938:	6835      	ldr	r5, [r6, #0]
 800d93a:	b195      	cbz	r5, 800d962 <xTaskResumeAll.part.0+0xca>
 800d93c:	2701      	movs	r7, #1
 800d93e:	e006      	b.n	800d94e <xTaskResumeAll.part.0+0xb6>
 800d940:	f7ff ff04 	bl	800d74c <xTaskIncrementTick.part.0>
 800d944:	b108      	cbz	r0, 800d94a <xTaskResumeAll.part.0+0xb2>
 800d946:	9b01      	ldr	r3, [sp, #4]
 800d948:	601f      	str	r7, [r3, #0]
 800d94a:	3d01      	subs	r5, #1
 800d94c:	d008      	beq.n	800d960 <xTaskResumeAll.part.0+0xc8>
 800d94e:	6823      	ldr	r3, [r4, #0]
 800d950:	2b00      	cmp	r3, #0
 800d952:	d0f5      	beq.n	800d940 <xTaskResumeAll.part.0+0xa8>
 800d954:	6833      	ldr	r3, [r6, #0]
 800d956:	3d01      	subs	r5, #1
 800d958:	f103 0301 	add.w	r3, r3, #1
 800d95c:	6033      	str	r3, [r6, #0]
 800d95e:	d1f6      	bne.n	800d94e <xTaskResumeAll.part.0+0xb6>
 800d960:	6035      	str	r5, [r6, #0]
 800d962:	9b01      	ldr	r3, [sp, #4]
 800d964:	681b      	ldr	r3, [r3, #0]
 800d966:	b183      	cbz	r3, 800d98a <xTaskResumeAll.part.0+0xf2>
 800d968:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d96c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d970:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d974:	f3bf 8f4f 	dsb	sy
 800d978:	f3bf 8f6f 	isb	sy
 800d97c:	f000 fcdc 	bl	800e338 <vPortExitCritical>
 800d980:	2401      	movs	r4, #1
 800d982:	4620      	mov	r0, r4
 800d984:	b003      	add	sp, #12
 800d986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d98a:	f000 fcd5 	bl	800e338 <vPortExitCritical>
 800d98e:	2400      	movs	r4, #0
 800d990:	4620      	mov	r0, r4
 800d992:	b003      	add	sp, #12
 800d994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d998:	f8db 3000 	ldr.w	r3, [fp]
 800d99c:	2b00      	cmp	r3, #0
 800d99e:	d198      	bne.n	800d8d2 <xTaskResumeAll.part.0+0x3a>
 800d9a0:	4b0b      	ldr	r3, [pc, #44]	@ (800d9d0 <xTaskResumeAll.part.0+0x138>)
 800d9a2:	681a      	ldr	r2, [r3, #0]
 800d9a4:	6812      	ldr	r2, [r2, #0]
 800d9a6:	2a00      	cmp	r2, #0
 800d9a8:	d1bf      	bne.n	800d92a <xTaskResumeAll.part.0+0x92>
 800d9aa:	4b0a      	ldr	r3, [pc, #40]	@ (800d9d4 <xTaskResumeAll.part.0+0x13c>)
 800d9ac:	f04f 32ff 	mov.w	r2, #4294967295
 800d9b0:	601a      	str	r2, [r3, #0]
 800d9b2:	e7c0      	b.n	800d936 <xTaskResumeAll.part.0+0x9e>
 800d9b4:	4b03      	ldr	r3, [pc, #12]	@ (800d9c4 <xTaskResumeAll.part.0+0x12c>)
 800d9b6:	9301      	str	r3, [sp, #4]
 800d9b8:	e7bd      	b.n	800d936 <xTaskResumeAll.part.0+0x9e>
 800d9ba:	bf00      	nop
 800d9bc:	2000180c 	.word	0x2000180c
 800d9c0:	20001834 	.word	0x20001834
 800d9c4:	20001820 	.word	0x20001820
 800d9c8:	2000182c 	.word	0x2000182c
 800d9cc:	20001934 	.word	0x20001934
 800d9d0:	2000187c 	.word	0x2000187c
 800d9d4:	20001814 	.word	0x20001814
 800d9d8:	20001824 	.word	0x20001824
 800d9dc:	20001864 	.word	0x20001864
 800d9e0:	200018a8 	.word	0x200018a8

0800d9e4 <xTaskCreate>:
 800d9e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d9e8:	0095      	lsls	r5, r2, #2
 800d9ea:	4680      	mov	r8, r0
 800d9ec:	4628      	mov	r0, r5
 800d9ee:	460e      	mov	r6, r1
 800d9f0:	4699      	mov	r9, r3
 800d9f2:	f000 fddf 	bl	800e5b4 <pvPortMalloc>
 800d9f6:	2800      	cmp	r0, #0
 800d9f8:	f000 80ac 	beq.w	800db54 <xTaskCreate+0x170>
 800d9fc:	4607      	mov	r7, r0
 800d9fe:	2054      	movs	r0, #84	@ 0x54
 800da00:	f000 fdd8 	bl	800e5b4 <pvPortMalloc>
 800da04:	4604      	mov	r4, r0
 800da06:	2800      	cmp	r0, #0
 800da08:	f000 80a1 	beq.w	800db4e <xTaskCreate+0x16a>
 800da0c:	3d04      	subs	r5, #4
 800da0e:	443d      	add	r5, r7
 800da10:	6307      	str	r7, [r0, #48]	@ 0x30
 800da12:	f025 0507 	bic.w	r5, r5, #7
 800da16:	2e00      	cmp	r6, #0
 800da18:	f000 80af 	beq.w	800db7a <xTaskCreate+0x196>
 800da1c:	7833      	ldrb	r3, [r6, #0]
 800da1e:	f880 3034 	strb.w	r3, [r0, #52]	@ 0x34
 800da22:	2b00      	cmp	r3, #0
 800da24:	d036      	beq.n	800da94 <xTaskCreate+0xb0>
 800da26:	7873      	ldrb	r3, [r6, #1]
 800da28:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800da2c:	b393      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da2e:	78b3      	ldrb	r3, [r6, #2]
 800da30:	f880 3036 	strb.w	r3, [r0, #54]	@ 0x36
 800da34:	b373      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da36:	78f3      	ldrb	r3, [r6, #3]
 800da38:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800da3c:	b353      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da3e:	7933      	ldrb	r3, [r6, #4]
 800da40:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
 800da44:	b333      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da46:	7973      	ldrb	r3, [r6, #5]
 800da48:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 800da4c:	b313      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da4e:	79b3      	ldrb	r3, [r6, #6]
 800da50:	f880 303a 	strb.w	r3, [r0, #58]	@ 0x3a
 800da54:	b1f3      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da56:	79f3      	ldrb	r3, [r6, #7]
 800da58:	f880 303b 	strb.w	r3, [r0, #59]	@ 0x3b
 800da5c:	b1d3      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da5e:	7a33      	ldrb	r3, [r6, #8]
 800da60:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
 800da64:	b1b3      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da66:	7a73      	ldrb	r3, [r6, #9]
 800da68:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800da6c:	b193      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da6e:	7ab3      	ldrb	r3, [r6, #10]
 800da70:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
 800da74:	b173      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da76:	7af3      	ldrb	r3, [r6, #11]
 800da78:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
 800da7c:	b153      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da7e:	7b33      	ldrb	r3, [r6, #12]
 800da80:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
 800da84:	b133      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da86:	7b73      	ldrb	r3, [r6, #13]
 800da88:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
 800da8c:	b113      	cbz	r3, 800da94 <xTaskCreate+0xb0>
 800da8e:	7bb3      	ldrb	r3, [r6, #14]
 800da90:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
 800da94:	2300      	movs	r3, #0
 800da96:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800da9a:	9e08      	ldr	r6, [sp, #32]
 800da9c:	2e06      	cmp	r6, #6
 800da9e:	bf28      	it	cs
 800daa0:	2606      	movcs	r6, #6
 800daa2:	f04f 0a00 	mov.w	sl, #0
 800daa6:	1d27      	adds	r7, r4, #4
 800daa8:	62e6      	str	r6, [r4, #44]	@ 0x2c
 800daaa:	6466      	str	r6, [r4, #68]	@ 0x44
 800daac:	4638      	mov	r0, r7
 800daae:	f8c4 a048 	str.w	sl, [r4, #72]	@ 0x48
 800dab2:	f7ff fd85 	bl	800d5c0 <vListInitialiseItem>
 800dab6:	f1c6 0607 	rsb	r6, r6, #7
 800daba:	f104 0018 	add.w	r0, r4, #24
 800dabe:	f7ff fd7f 	bl	800d5c0 <vListInitialiseItem>
 800dac2:	f8c4 a04c 	str.w	sl, [r4, #76]	@ 0x4c
 800dac6:	61a6      	str	r6, [r4, #24]
 800dac8:	f884 a050 	strb.w	sl, [r4, #80]	@ 0x50
 800dacc:	6124      	str	r4, [r4, #16]
 800dace:	6264      	str	r4, [r4, #36]	@ 0x24
 800dad0:	464a      	mov	r2, r9
 800dad2:	4641      	mov	r1, r8
 800dad4:	4628      	mov	r0, r5
 800dad6:	f000 fbe1 	bl	800e29c <pxPortInitialiseStack>
 800dada:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dadc:	6020      	str	r0, [r4, #0]
 800dade:	b103      	cbz	r3, 800dae2 <xTaskCreate+0xfe>
 800dae0:	601c      	str	r4, [r3, #0]
 800dae2:	f000 fc07 	bl	800e2f4 <vPortEnterCritical>
 800dae6:	4a39      	ldr	r2, [pc, #228]	@ (800dbcc <xTaskCreate+0x1e8>)
 800dae8:	4d39      	ldr	r5, [pc, #228]	@ (800dbd0 <xTaskCreate+0x1ec>)
 800daea:	6813      	ldr	r3, [r2, #0]
 800daec:	3301      	adds	r3, #1
 800daee:	6013      	str	r3, [r2, #0]
 800daf0:	682b      	ldr	r3, [r5, #0]
 800daf2:	2b00      	cmp	r3, #0
 800daf4:	d038      	beq.n	800db68 <xTaskCreate+0x184>
 800daf6:	4e37      	ldr	r6, [pc, #220]	@ (800dbd4 <xTaskCreate+0x1f0>)
 800daf8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dafa:	6833      	ldr	r3, [r6, #0]
 800dafc:	b373      	cbz	r3, 800db5c <xTaskCreate+0x178>
 800dafe:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 800dbf8 <xTaskCreate+0x214>
 800db02:	4a35      	ldr	r2, [pc, #212]	@ (800dbd8 <xTaskCreate+0x1f4>)
 800db04:	4639      	mov	r1, r7
 800db06:	4f35      	ldr	r7, [pc, #212]	@ (800dbdc <xTaskCreate+0x1f8>)
 800db08:	683b      	ldr	r3, [r7, #0]
 800db0a:	3301      	adds	r3, #1
 800db0c:	603b      	str	r3, [r7, #0]
 800db0e:	6817      	ldr	r7, [r2, #0]
 800db10:	2301      	movs	r3, #1
 800db12:	4083      	lsls	r3, r0
 800db14:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800db18:	433b      	orrs	r3, r7
 800db1a:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800db1e:	6013      	str	r3, [r2, #0]
 800db20:	f7ff fd52 	bl	800d5c8 <vListInsertEnd>
 800db24:	f000 fc08 	bl	800e338 <vPortExitCritical>
 800db28:	6833      	ldr	r3, [r6, #0]
 800db2a:	b173      	cbz	r3, 800db4a <xTaskCreate+0x166>
 800db2c:	682a      	ldr	r2, [r5, #0]
 800db2e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800db30:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800db32:	429a      	cmp	r2, r3
 800db34:	d209      	bcs.n	800db4a <xTaskCreate+0x166>
 800db36:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800db3a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800db3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800db42:	f3bf 8f4f 	dsb	sy
 800db46:	f3bf 8f6f 	isb	sy
 800db4a:	2001      	movs	r0, #1
 800db4c:	e004      	b.n	800db58 <xTaskCreate+0x174>
 800db4e:	4638      	mov	r0, r7
 800db50:	f000 fdee 	bl	800e730 <vPortFree>
 800db54:	f04f 30ff 	mov.w	r0, #4294967295
 800db58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db5c:	682b      	ldr	r3, [r5, #0]
 800db5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db60:	4283      	cmp	r3, r0
 800db62:	bf98      	it	ls
 800db64:	602c      	strls	r4, [r5, #0]
 800db66:	e7ca      	b.n	800dafe <xTaskCreate+0x11a>
 800db68:	602c      	str	r4, [r5, #0]
 800db6a:	6813      	ldr	r3, [r2, #0]
 800db6c:	2b01      	cmp	r3, #1
 800db6e:	d007      	beq.n	800db80 <xTaskCreate+0x19c>
 800db70:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800db72:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 800dbf8 <xTaskCreate+0x214>
 800db76:	4e17      	ldr	r6, [pc, #92]	@ (800dbd4 <xTaskCreate+0x1f0>)
 800db78:	e7c3      	b.n	800db02 <xTaskCreate+0x11e>
 800db7a:	f880 6034 	strb.w	r6, [r0, #52]	@ 0x34
 800db7e:	e78c      	b.n	800da9a <xTaskCreate+0xb6>
 800db80:	f8df 8074 	ldr.w	r8, [pc, #116]	@ 800dbf8 <xTaskCreate+0x214>
 800db84:	4646      	mov	r6, r8
 800db86:	f108 098c 	add.w	r9, r8, #140	@ 0x8c
 800db8a:	4630      	mov	r0, r6
 800db8c:	3614      	adds	r6, #20
 800db8e:	f7ff fd0b 	bl	800d5a8 <vListInitialise>
 800db92:	45b1      	cmp	r9, r6
 800db94:	d1f9      	bne.n	800db8a <xTaskCreate+0x1a6>
 800db96:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 800dbfc <xTaskCreate+0x218>
 800db9a:	4e11      	ldr	r6, [pc, #68]	@ (800dbe0 <xTaskCreate+0x1fc>)
 800db9c:	4648      	mov	r0, r9
 800db9e:	f7ff fd03 	bl	800d5a8 <vListInitialise>
 800dba2:	4630      	mov	r0, r6
 800dba4:	f7ff fd00 	bl	800d5a8 <vListInitialise>
 800dba8:	480e      	ldr	r0, [pc, #56]	@ (800dbe4 <xTaskCreate+0x200>)
 800dbaa:	f7ff fcfd 	bl	800d5a8 <vListInitialise>
 800dbae:	480e      	ldr	r0, [pc, #56]	@ (800dbe8 <xTaskCreate+0x204>)
 800dbb0:	f7ff fcfa 	bl	800d5a8 <vListInitialise>
 800dbb4:	480d      	ldr	r0, [pc, #52]	@ (800dbec <xTaskCreate+0x208>)
 800dbb6:	f7ff fcf7 	bl	800d5a8 <vListInitialise>
 800dbba:	4b0d      	ldr	r3, [pc, #52]	@ (800dbf0 <xTaskCreate+0x20c>)
 800dbbc:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dbbe:	f8c3 9000 	str.w	r9, [r3]
 800dbc2:	4b0c      	ldr	r3, [pc, #48]	@ (800dbf4 <xTaskCreate+0x210>)
 800dbc4:	601e      	str	r6, [r3, #0]
 800dbc6:	4e03      	ldr	r6, [pc, #12]	@ (800dbd4 <xTaskCreate+0x1f0>)
 800dbc8:	e79b      	b.n	800db02 <xTaskCreate+0x11e>
 800dbca:	bf00      	nop
 800dbcc:	20001834 	.word	0x20001834
 800dbd0:	20001934 	.word	0x20001934
 800dbd4:	20001828 	.word	0x20001828
 800dbd8:	2000182c 	.word	0x2000182c
 800dbdc:	20001818 	.word	0x20001818
 800dbe0:	20001880 	.word	0x20001880
 800dbe4:	20001864 	.word	0x20001864
 800dbe8:	20001850 	.word	0x20001850
 800dbec:	20001838 	.word	0x20001838
 800dbf0:	2000187c 	.word	0x2000187c
 800dbf4:	20001878 	.word	0x20001878
 800dbf8:	200018a8 	.word	0x200018a8
 800dbfc:	20001894 	.word	0x20001894

0800dc00 <vTaskDelay>:
 800dc00:	b510      	push	{r4, lr}
 800dc02:	b950      	cbnz	r0, 800dc1a <vTaskDelay+0x1a>
 800dc04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dc08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dc0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dc10:	f3bf 8f4f 	dsb	sy
 800dc14:	f3bf 8f6f 	isb	sy
 800dc18:	bd10      	pop	{r4, pc}
 800dc1a:	4c10      	ldr	r4, [pc, #64]	@ (800dc5c <vTaskDelay+0x5c>)
 800dc1c:	6821      	ldr	r1, [r4, #0]
 800dc1e:	b141      	cbz	r1, 800dc32 <vTaskDelay+0x32>
 800dc20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc24:	f383 8811 	msr	BASEPRI, r3
 800dc28:	f3bf 8f6f 	isb	sy
 800dc2c:	f3bf 8f4f 	dsb	sy
 800dc30:	e7fe      	b.n	800dc30 <vTaskDelay+0x30>
 800dc32:	6823      	ldr	r3, [r4, #0]
 800dc34:	3301      	adds	r3, #1
 800dc36:	6023      	str	r3, [r4, #0]
 800dc38:	f7ff fd36 	bl	800d6a8 <prvAddCurrentTaskToDelayedList>
 800dc3c:	6823      	ldr	r3, [r4, #0]
 800dc3e:	b943      	cbnz	r3, 800dc52 <vTaskDelay+0x52>
 800dc40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc44:	f383 8811 	msr	BASEPRI, r3
 800dc48:	f3bf 8f6f 	isb	sy
 800dc4c:	f3bf 8f4f 	dsb	sy
 800dc50:	e7fe      	b.n	800dc50 <vTaskDelay+0x50>
 800dc52:	f7ff fe21 	bl	800d898 <xTaskResumeAll.part.0>
 800dc56:	2800      	cmp	r0, #0
 800dc58:	d0d4      	beq.n	800dc04 <vTaskDelay+0x4>
 800dc5a:	bd10      	pop	{r4, pc}
 800dc5c:	2000180c 	.word	0x2000180c

0800dc60 <vTaskPrioritySet>:
 800dc60:	2906      	cmp	r1, #6
 800dc62:	d908      	bls.n	800dc76 <vTaskPrioritySet+0x16>
 800dc64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dc68:	f383 8811 	msr	BASEPRI, r3
 800dc6c:	f3bf 8f6f 	isb	sy
 800dc70:	f3bf 8f4f 	dsb	sy
 800dc74:	e7fe      	b.n	800dc74 <vTaskPrioritySet+0x14>
 800dc76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc7a:	4604      	mov	r4, r0
 800dc7c:	460d      	mov	r5, r1
 800dc7e:	f000 fb39 	bl	800e2f4 <vPortEnterCritical>
 800dc82:	2c00      	cmp	r4, #0
 800dc84:	d035      	beq.n	800dcf2 <vTaskPrioritySet+0x92>
 800dc86:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800dc88:	429d      	cmp	r5, r3
 800dc8a:	d02e      	beq.n	800dcea <vTaskPrioritySet+0x8a>
 800dc8c:	4a29      	ldr	r2, [pc, #164]	@ (800dd34 <vTaskPrioritySet+0xd4>)
 800dc8e:	d909      	bls.n	800dca4 <vTaskPrioritySet+0x44>
 800dc90:	6811      	ldr	r1, [r2, #0]
 800dc92:	42a1      	cmp	r1, r4
 800dc94:	d04b      	beq.n	800dd2e <vTaskPrioritySet+0xce>
 800dc96:	6812      	ldr	r2, [r2, #0]
 800dc98:	6ad7      	ldr	r7, [r2, #44]	@ 0x2c
 800dc9a:	42af      	cmp	r7, r5
 800dc9c:	bf8c      	ite	hi
 800dc9e:	2700      	movhi	r7, #0
 800dca0:	2701      	movls	r7, #1
 800dca2:	e004      	b.n	800dcae <vTaskPrioritySet+0x4e>
 800dca4:	6817      	ldr	r7, [r2, #0]
 800dca6:	1b3f      	subs	r7, r7, r4
 800dca8:	fab7 f787 	clz	r7, r7
 800dcac:	097f      	lsrs	r7, r7, #5
 800dcae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800dcb0:	6465      	str	r5, [r4, #68]	@ 0x44
 800dcb2:	42b3      	cmp	r3, r6
 800dcb4:	69a3      	ldr	r3, [r4, #24]
 800dcb6:	bf08      	it	eq
 800dcb8:	62e5      	streq	r5, [r4, #44]	@ 0x2c
 800dcba:	2b00      	cmp	r3, #0
 800dcbc:	bfa4      	itt	ge
 800dcbe:	f1c5 0507 	rsbge	r5, r5, #7
 800dcc2:	61a5      	strge	r5, [r4, #24]
 800dcc4:	4d1c      	ldr	r5, [pc, #112]	@ (800dd38 <vTaskPrioritySet+0xd8>)
 800dcc6:	6962      	ldr	r2, [r4, #20]
 800dcc8:	eb06 0386 	add.w	r3, r6, r6, lsl #2
 800dccc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800dcd0:	429a      	cmp	r2, r3
 800dcd2:	d011      	beq.n	800dcf8 <vTaskPrioritySet+0x98>
 800dcd4:	b14f      	cbz	r7, 800dcea <vTaskPrioritySet+0x8a>
 800dcd6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dcda:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dcde:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dce2:	f3bf 8f4f 	dsb	sy
 800dce6:	f3bf 8f6f 	isb	sy
 800dcea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dcee:	f000 bb23 	b.w	800e338 <vPortExitCritical>
 800dcf2:	4b10      	ldr	r3, [pc, #64]	@ (800dd34 <vTaskPrioritySet+0xd4>)
 800dcf4:	681c      	ldr	r4, [r3, #0]
 800dcf6:	e7c6      	b.n	800dc86 <vTaskPrioritySet+0x26>
 800dcf8:	f104 0804 	add.w	r8, r4, #4
 800dcfc:	4640      	mov	r0, r8
 800dcfe:	f7ff fc89 	bl	800d614 <uxListRemove>
 800dd02:	4b0e      	ldr	r3, [pc, #56]	@ (800dd3c <vTaskPrioritySet+0xdc>)
 800dd04:	b928      	cbnz	r0, 800dd12 <vTaskPrioritySet+0xb2>
 800dd06:	681a      	ldr	r2, [r3, #0]
 800dd08:	2001      	movs	r0, #1
 800dd0a:	40b0      	lsls	r0, r6
 800dd0c:	ea22 0200 	bic.w	r2, r2, r0
 800dd10:	601a      	str	r2, [r3, #0]
 800dd12:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dd14:	681c      	ldr	r4, [r3, #0]
 800dd16:	2201      	movs	r2, #1
 800dd18:	4082      	lsls	r2, r0
 800dd1a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800dd1e:	4322      	orrs	r2, r4
 800dd20:	4641      	mov	r1, r8
 800dd22:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 800dd26:	601a      	str	r2, [r3, #0]
 800dd28:	f7ff fc4e 	bl	800d5c8 <vListInsertEnd>
 800dd2c:	e7d2      	b.n	800dcd4 <vTaskPrioritySet+0x74>
 800dd2e:	2700      	movs	r7, #0
 800dd30:	e7bd      	b.n	800dcae <vTaskPrioritySet+0x4e>
 800dd32:	bf00      	nop
 800dd34:	20001934 	.word	0x20001934
 800dd38:	200018a8 	.word	0x200018a8
 800dd3c:	2000182c 	.word	0x2000182c

0800dd40 <vTaskResume>:
 800dd40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd42:	b178      	cbz	r0, 800dd64 <vTaskResume+0x24>
 800dd44:	4d20      	ldr	r5, [pc, #128]	@ (800ddc8 <vTaskResume+0x88>)
 800dd46:	682b      	ldr	r3, [r5, #0]
 800dd48:	4283      	cmp	r3, r0
 800dd4a:	4604      	mov	r4, r0
 800dd4c:	d009      	beq.n	800dd62 <vTaskResume+0x22>
 800dd4e:	f000 fad1 	bl	800e2f4 <vPortEnterCritical>
 800dd52:	4b1e      	ldr	r3, [pc, #120]	@ (800ddcc <vTaskResume+0x8c>)
 800dd54:	6962      	ldr	r2, [r4, #20]
 800dd56:	429a      	cmp	r2, r3
 800dd58:	d00d      	beq.n	800dd76 <vTaskResume+0x36>
 800dd5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dd5e:	f000 baeb 	b.w	800e338 <vPortExitCritical>
 800dd62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dd64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd68:	f383 8811 	msr	BASEPRI, r3
 800dd6c:	f3bf 8f6f 	isb	sy
 800dd70:	f3bf 8f4f 	dsb	sy
 800dd74:	e7fe      	b.n	800dd74 <vTaskResume+0x34>
 800dd76:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800dd78:	4a15      	ldr	r2, [pc, #84]	@ (800ddd0 <vTaskResume+0x90>)
 800dd7a:	4293      	cmp	r3, r2
 800dd7c:	d0ed      	beq.n	800dd5a <vTaskResume+0x1a>
 800dd7e:	2b00      	cmp	r3, #0
 800dd80:	d1eb      	bne.n	800dd5a <vTaskResume+0x1a>
 800dd82:	1d26      	adds	r6, r4, #4
 800dd84:	4630      	mov	r0, r6
 800dd86:	f7ff fc45 	bl	800d614 <uxListRemove>
 800dd8a:	4812      	ldr	r0, [pc, #72]	@ (800ddd4 <vTaskResume+0x94>)
 800dd8c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dd8e:	6807      	ldr	r7, [r0, #0]
 800dd90:	2201      	movs	r2, #1
 800dd92:	4631      	mov	r1, r6
 800dd94:	409a      	lsls	r2, r3
 800dd96:	4e10      	ldr	r6, [pc, #64]	@ (800ddd8 <vTaskResume+0x98>)
 800dd98:	433a      	orrs	r2, r7
 800dd9a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dd9e:	6002      	str	r2, [r0, #0]
 800dda0:	eb06 0083 	add.w	r0, r6, r3, lsl #2
 800dda4:	f7ff fc10 	bl	800d5c8 <vListInsertEnd>
 800dda8:	682b      	ldr	r3, [r5, #0]
 800ddaa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800ddac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ddae:	429a      	cmp	r2, r3
 800ddb0:	d3d3      	bcc.n	800dd5a <vTaskResume+0x1a>
 800ddb2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ddb6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ddba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ddbe:	f3bf 8f4f 	dsb	sy
 800ddc2:	f3bf 8f6f 	isb	sy
 800ddc6:	e7c8      	b.n	800dd5a <vTaskResume+0x1a>
 800ddc8:	20001934 	.word	0x20001934
 800ddcc:	20001838 	.word	0x20001838
 800ddd0:	20001864 	.word	0x20001864
 800ddd4:	2000182c 	.word	0x2000182c
 800ddd8:	200018a8 	.word	0x200018a8

0800dddc <xTaskResumeFromISR>:
 800dddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ddde:	b1d0      	cbz	r0, 800de16 <xTaskResumeFromISR+0x3a>
 800dde0:	4604      	mov	r4, r0
 800dde2:	f000 fbb9 	bl	800e558 <vPortValidateInterruptPriority>
 800dde6:	f3ef 8511 	mrs	r5, BASEPRI
 800ddea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ddee:	f383 8811 	msr	BASEPRI, r3
 800ddf2:	f3bf 8f6f 	isb	sy
 800ddf6:	f3bf 8f4f 	dsb	sy
 800ddfa:	4b1d      	ldr	r3, [pc, #116]	@ (800de70 <xTaskResumeFromISR+0x94>)
 800ddfc:	6962      	ldr	r2, [r4, #20]
 800ddfe:	429a      	cmp	r2, r3
 800de00:	d104      	bne.n	800de0c <xTaskResumeFromISR+0x30>
 800de02:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800de04:	481b      	ldr	r0, [pc, #108]	@ (800de74 <xTaskResumeFromISR+0x98>)
 800de06:	4283      	cmp	r3, r0
 800de08:	d000      	beq.n	800de0c <xTaskResumeFromISR+0x30>
 800de0a:	b16b      	cbz	r3, 800de28 <xTaskResumeFromISR+0x4c>
 800de0c:	2600      	movs	r6, #0
 800de0e:	f385 8811 	msr	BASEPRI, r5
 800de12:	4630      	mov	r0, r6
 800de14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de1a:	f383 8811 	msr	BASEPRI, r3
 800de1e:	f3bf 8f6f 	isb	sy
 800de22:	f3bf 8f4f 	dsb	sy
 800de26:	e7fe      	b.n	800de26 <xTaskResumeFromISR+0x4a>
 800de28:	4b13      	ldr	r3, [pc, #76]	@ (800de78 <xTaskResumeFromISR+0x9c>)
 800de2a:	681b      	ldr	r3, [r3, #0]
 800de2c:	b9db      	cbnz	r3, 800de66 <xTaskResumeFromISR+0x8a>
 800de2e:	4b13      	ldr	r3, [pc, #76]	@ (800de7c <xTaskResumeFromISR+0xa0>)
 800de30:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800de32:	681b      	ldr	r3, [r3, #0]
 800de34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de36:	1d27      	adds	r7, r4, #4
 800de38:	429e      	cmp	r6, r3
 800de3a:	4638      	mov	r0, r7
 800de3c:	bf34      	ite	cc
 800de3e:	2600      	movcc	r6, #0
 800de40:	2601      	movcs	r6, #1
 800de42:	f7ff fbe7 	bl	800d614 <uxListRemove>
 800de46:	480e      	ldr	r0, [pc, #56]	@ (800de80 <xTaskResumeFromISR+0xa4>)
 800de48:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800de4a:	4c0e      	ldr	r4, [pc, #56]	@ (800de84 <xTaskResumeFromISR+0xa8>)
 800de4c:	4639      	mov	r1, r7
 800de4e:	2201      	movs	r2, #1
 800de50:	6807      	ldr	r7, [r0, #0]
 800de52:	409a      	lsls	r2, r3
 800de54:	433a      	orrs	r2, r7
 800de56:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800de5a:	6002      	str	r2, [r0, #0]
 800de5c:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 800de60:	f7ff fbb2 	bl	800d5c8 <vListInsertEnd>
 800de64:	e7d3      	b.n	800de0e <xTaskResumeFromISR+0x32>
 800de66:	f104 0118 	add.w	r1, r4, #24
 800de6a:	f7ff fbad 	bl	800d5c8 <vListInsertEnd>
 800de6e:	e7cd      	b.n	800de0c <xTaskResumeFromISR+0x30>
 800de70:	20001838 	.word	0x20001838
 800de74:	20001864 	.word	0x20001864
 800de78:	2000180c 	.word	0x2000180c
 800de7c:	20001934 	.word	0x20001934
 800de80:	2000182c 	.word	0x2000182c
 800de84:	200018a8 	.word	0x200018a8

0800de88 <vTaskStartScheduler>:
 800de88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800de8c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800de90:	f000 fb90 	bl	800e5b4 <pvPortMalloc>
 800de94:	2800      	cmp	r0, #0
 800de96:	d07e      	beq.n	800df96 <vTaskStartScheduler+0x10e>
 800de98:	4605      	mov	r5, r0
 800de9a:	2054      	movs	r0, #84	@ 0x54
 800de9c:	f000 fb8a 	bl	800e5b4 <pvPortMalloc>
 800dea0:	4604      	mov	r4, r0
 800dea2:	2800      	cmp	r0, #0
 800dea4:	d074      	beq.n	800df90 <vTaskStartScheduler+0x108>
 800dea6:	4a59      	ldr	r2, [pc, #356]	@ (800e00c <vTaskStartScheduler+0x184>)
 800dea8:	2600      	movs	r6, #0
 800deaa:	f100 0804 	add.w	r8, r0, #4
 800deae:	e9c0 520c 	strd	r5, r2, [r0, #48]	@ 0x30
 800deb2:	f505 73fe 	add.w	r3, r5, #508	@ 0x1fc
 800deb6:	e9c0 6611 	strd	r6, r6, [r0, #68]	@ 0x44
 800deba:	f880 6038 	strb.w	r6, [r0, #56]	@ 0x38
 800debe:	f880 6043 	strb.w	r6, [r0, #67]	@ 0x43
 800dec2:	62c6      	str	r6, [r0, #44]	@ 0x2c
 800dec4:	4640      	mov	r0, r8
 800dec6:	f023 0507 	bic.w	r5, r3, #7
 800deca:	f7ff fb79 	bl	800d5c0 <vListInitialiseItem>
 800dece:	f104 0018 	add.w	r0, r4, #24
 800ded2:	f7ff fb75 	bl	800d5c0 <vListInitialiseItem>
 800ded6:	2307      	movs	r3, #7
 800ded8:	4632      	mov	r2, r6
 800deda:	64e6      	str	r6, [r4, #76]	@ 0x4c
 800dedc:	494c      	ldr	r1, [pc, #304]	@ (800e010 <vTaskStartScheduler+0x188>)
 800dede:	61a3      	str	r3, [r4, #24]
 800dee0:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 800dee4:	6124      	str	r4, [r4, #16]
 800dee6:	6264      	str	r4, [r4, #36]	@ 0x24
 800dee8:	4628      	mov	r0, r5
 800deea:	f000 f9d7 	bl	800e29c <pxPortInitialiseStack>
 800deee:	4b49      	ldr	r3, [pc, #292]	@ (800e014 <vTaskStartScheduler+0x18c>)
 800def0:	6020      	str	r0, [r4, #0]
 800def2:	601c      	str	r4, [r3, #0]
 800def4:	f000 f9fe 	bl	800e2f4 <vPortEnterCritical>
 800def8:	4a47      	ldr	r2, [pc, #284]	@ (800e018 <vTaskStartScheduler+0x190>)
 800defa:	4e48      	ldr	r6, [pc, #288]	@ (800e01c <vTaskStartScheduler+0x194>)
 800defc:	6813      	ldr	r3, [r2, #0]
 800defe:	3301      	adds	r3, #1
 800df00:	6013      	str	r3, [r2, #0]
 800df02:	6833      	ldr	r3, [r6, #0]
 800df04:	2b00      	cmp	r3, #0
 800df06:	d055      	beq.n	800dfb4 <vTaskStartScheduler+0x12c>
 800df08:	4d45      	ldr	r5, [pc, #276]	@ (800e020 <vTaskStartScheduler+0x198>)
 800df0a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800df0c:	682b      	ldr	r3, [r5, #0]
 800df0e:	2b00      	cmp	r3, #0
 800df10:	d04a      	beq.n	800dfa8 <vTaskStartScheduler+0x120>
 800df12:	4f44      	ldr	r7, [pc, #272]	@ (800e024 <vTaskStartScheduler+0x19c>)
 800df14:	f8df c134 	ldr.w	ip, [pc, #308]	@ 800e04c <vTaskStartScheduler+0x1c4>
 800df18:	4a43      	ldr	r2, [pc, #268]	@ (800e028 <vTaskStartScheduler+0x1a0>)
 800df1a:	f8dc 3000 	ldr.w	r3, [ip]
 800df1e:	3301      	adds	r3, #1
 800df20:	f8cc 3000 	str.w	r3, [ip]
 800df24:	f8d2 c000 	ldr.w	ip, [r2]
 800df28:	2301      	movs	r3, #1
 800df2a:	4083      	lsls	r3, r0
 800df2c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800df30:	ea43 030c 	orr.w	r3, r3, ip
 800df34:	4641      	mov	r1, r8
 800df36:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800df3a:	6013      	str	r3, [r2, #0]
 800df3c:	f7ff fb44 	bl	800d5c8 <vListInsertEnd>
 800df40:	f000 f9fa 	bl	800e338 <vPortExitCritical>
 800df44:	682b      	ldr	r3, [r5, #0]
 800df46:	b173      	cbz	r3, 800df66 <vTaskStartScheduler+0xde>
 800df48:	6832      	ldr	r2, [r6, #0]
 800df4a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800df4c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800df4e:	429a      	cmp	r2, r3
 800df50:	d209      	bcs.n	800df66 <vTaskStartScheduler+0xde>
 800df52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800df56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800df5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800df5e:	f3bf 8f4f 	dsb	sy
 800df62:	f3bf 8f6f 	isb	sy
 800df66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df6a:	f383 8811 	msr	BASEPRI, r3
 800df6e:	f3bf 8f6f 	isb	sy
 800df72:	f3bf 8f4f 	dsb	sy
 800df76:	4a2d      	ldr	r2, [pc, #180]	@ (800e02c <vTaskStartScheduler+0x1a4>)
 800df78:	4b2d      	ldr	r3, [pc, #180]	@ (800e030 <vTaskStartScheduler+0x1a8>)
 800df7a:	f04f 30ff 	mov.w	r0, #4294967295
 800df7e:	6010      	str	r0, [r2, #0]
 800df80:	2101      	movs	r1, #1
 800df82:	2200      	movs	r2, #0
 800df84:	6029      	str	r1, [r5, #0]
 800df86:	601a      	str	r2, [r3, #0]
 800df88:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df8c:	f000 ba44 	b.w	800e418 <xPortStartScheduler>
 800df90:	4628      	mov	r0, r5
 800df92:	f000 fbcd 	bl	800e730 <vPortFree>
 800df96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df9a:	f383 8811 	msr	BASEPRI, r3
 800df9e:	f3bf 8f6f 	isb	sy
 800dfa2:	f3bf 8f4f 	dsb	sy
 800dfa6:	e7fe      	b.n	800dfa6 <vTaskStartScheduler+0x11e>
 800dfa8:	6833      	ldr	r3, [r6, #0]
 800dfaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dfac:	4283      	cmp	r3, r0
 800dfae:	bf98      	it	ls
 800dfb0:	6034      	strls	r4, [r6, #0]
 800dfb2:	e7ae      	b.n	800df12 <vTaskStartScheduler+0x8a>
 800dfb4:	6034      	str	r4, [r6, #0]
 800dfb6:	6813      	ldr	r3, [r2, #0]
 800dfb8:	2b01      	cmp	r3, #1
 800dfba:	d003      	beq.n	800dfc4 <vTaskStartScheduler+0x13c>
 800dfbc:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dfbe:	4f19      	ldr	r7, [pc, #100]	@ (800e024 <vTaskStartScheduler+0x19c>)
 800dfc0:	4d17      	ldr	r5, [pc, #92]	@ (800e020 <vTaskStartScheduler+0x198>)
 800dfc2:	e7a7      	b.n	800df14 <vTaskStartScheduler+0x8c>
 800dfc4:	4f17      	ldr	r7, [pc, #92]	@ (800e024 <vTaskStartScheduler+0x19c>)
 800dfc6:	463d      	mov	r5, r7
 800dfc8:	f107 098c 	add.w	r9, r7, #140	@ 0x8c
 800dfcc:	4628      	mov	r0, r5
 800dfce:	3514      	adds	r5, #20
 800dfd0:	f7ff faea 	bl	800d5a8 <vListInitialise>
 800dfd4:	454d      	cmp	r5, r9
 800dfd6:	d1f9      	bne.n	800dfcc <vTaskStartScheduler+0x144>
 800dfd8:	f8df 9074 	ldr.w	r9, [pc, #116]	@ 800e050 <vTaskStartScheduler+0x1c8>
 800dfdc:	4d15      	ldr	r5, [pc, #84]	@ (800e034 <vTaskStartScheduler+0x1ac>)
 800dfde:	4648      	mov	r0, r9
 800dfe0:	f7ff fae2 	bl	800d5a8 <vListInitialise>
 800dfe4:	4628      	mov	r0, r5
 800dfe6:	f7ff fadf 	bl	800d5a8 <vListInitialise>
 800dfea:	4813      	ldr	r0, [pc, #76]	@ (800e038 <vTaskStartScheduler+0x1b0>)
 800dfec:	f7ff fadc 	bl	800d5a8 <vListInitialise>
 800dff0:	4812      	ldr	r0, [pc, #72]	@ (800e03c <vTaskStartScheduler+0x1b4>)
 800dff2:	f7ff fad9 	bl	800d5a8 <vListInitialise>
 800dff6:	4812      	ldr	r0, [pc, #72]	@ (800e040 <vTaskStartScheduler+0x1b8>)
 800dff8:	f7ff fad6 	bl	800d5a8 <vListInitialise>
 800dffc:	4b11      	ldr	r3, [pc, #68]	@ (800e044 <vTaskStartScheduler+0x1bc>)
 800dffe:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800e000:	f8c3 9000 	str.w	r9, [r3]
 800e004:	4b10      	ldr	r3, [pc, #64]	@ (800e048 <vTaskStartScheduler+0x1c0>)
 800e006:	601d      	str	r5, [r3, #0]
 800e008:	4d05      	ldr	r5, [pc, #20]	@ (800e020 <vTaskStartScheduler+0x198>)
 800e00a:	e783      	b.n	800df14 <vTaskStartScheduler+0x8c>
 800e00c:	454c4449 	.word	0x454c4449
 800e010:	0800d63d 	.word	0x0800d63d
 800e014:	20001810 	.word	0x20001810
 800e018:	20001834 	.word	0x20001834
 800e01c:	20001934 	.word	0x20001934
 800e020:	20001828 	.word	0x20001828
 800e024:	200018a8 	.word	0x200018a8
 800e028:	2000182c 	.word	0x2000182c
 800e02c:	20001814 	.word	0x20001814
 800e030:	20001830 	.word	0x20001830
 800e034:	20001880 	.word	0x20001880
 800e038:	20001864 	.word	0x20001864
 800e03c:	20001850 	.word	0x20001850
 800e040:	20001838 	.word	0x20001838
 800e044:	2000187c 	.word	0x2000187c
 800e048:	20001878 	.word	0x20001878
 800e04c:	20001818 	.word	0x20001818
 800e050:	20001894 	.word	0x20001894

0800e054 <vTaskSuspendAll>:
 800e054:	4a02      	ldr	r2, [pc, #8]	@ (800e060 <vTaskSuspendAll+0xc>)
 800e056:	6813      	ldr	r3, [r2, #0]
 800e058:	3301      	adds	r3, #1
 800e05a:	6013      	str	r3, [r2, #0]
 800e05c:	4770      	bx	lr
 800e05e:	bf00      	nop
 800e060:	2000180c 	.word	0x2000180c

0800e064 <xTaskResumeAll>:
 800e064:	4b06      	ldr	r3, [pc, #24]	@ (800e080 <xTaskResumeAll+0x1c>)
 800e066:	681b      	ldr	r3, [r3, #0]
 800e068:	b943      	cbnz	r3, 800e07c <xTaskResumeAll+0x18>
 800e06a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e06e:	f383 8811 	msr	BASEPRI, r3
 800e072:	f3bf 8f6f 	isb	sy
 800e076:	f3bf 8f4f 	dsb	sy
 800e07a:	e7fe      	b.n	800e07a <xTaskResumeAll+0x16>
 800e07c:	f7ff bc0c 	b.w	800d898 <xTaskResumeAll.part.0>
 800e080:	2000180c 	.word	0x2000180c

0800e084 <xTaskIncrementTick>:
 800e084:	4b05      	ldr	r3, [pc, #20]	@ (800e09c <xTaskIncrementTick+0x18>)
 800e086:	681b      	ldr	r3, [r3, #0]
 800e088:	b90b      	cbnz	r3, 800e08e <xTaskIncrementTick+0xa>
 800e08a:	f7ff bb5f 	b.w	800d74c <xTaskIncrementTick.part.0>
 800e08e:	4a04      	ldr	r2, [pc, #16]	@ (800e0a0 <xTaskIncrementTick+0x1c>)
 800e090:	6813      	ldr	r3, [r2, #0]
 800e092:	3301      	adds	r3, #1
 800e094:	2000      	movs	r0, #0
 800e096:	6013      	str	r3, [r2, #0]
 800e098:	4770      	bx	lr
 800e09a:	bf00      	nop
 800e09c:	2000180c 	.word	0x2000180c
 800e0a0:	20001824 	.word	0x20001824

0800e0a4 <vTaskSwitchContext>:
 800e0a4:	4b16      	ldr	r3, [pc, #88]	@ (800e100 <vTaskSwitchContext+0x5c>)
 800e0a6:	681b      	ldr	r3, [r3, #0]
 800e0a8:	b11b      	cbz	r3, 800e0b2 <vTaskSwitchContext+0xe>
 800e0aa:	4b16      	ldr	r3, [pc, #88]	@ (800e104 <vTaskSwitchContext+0x60>)
 800e0ac:	2201      	movs	r2, #1
 800e0ae:	601a      	str	r2, [r3, #0]
 800e0b0:	4770      	bx	lr
 800e0b2:	4914      	ldr	r1, [pc, #80]	@ (800e104 <vTaskSwitchContext+0x60>)
 800e0b4:	4a14      	ldr	r2, [pc, #80]	@ (800e108 <vTaskSwitchContext+0x64>)
 800e0b6:	600b      	str	r3, [r1, #0]
 800e0b8:	6813      	ldr	r3, [r2, #0]
 800e0ba:	fab3 f383 	clz	r3, r3
 800e0be:	b2db      	uxtb	r3, r3
 800e0c0:	f1c3 031f 	rsb	r3, r3, #31
 800e0c4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e0c8:	4910      	ldr	r1, [pc, #64]	@ (800e10c <vTaskSwitchContext+0x68>)
 800e0ca:	009a      	lsls	r2, r3, #2
 800e0cc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800e0d0:	5888      	ldr	r0, [r1, r2]
 800e0d2:	b940      	cbnz	r0, 800e0e6 <vTaskSwitchContext+0x42>
 800e0d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e0d8:	f383 8811 	msr	BASEPRI, r3
 800e0dc:	f3bf 8f6f 	isb	sy
 800e0e0:	f3bf 8f4f 	dsb	sy
 800e0e4:	e7fe      	b.n	800e0e4 <vTaskSwitchContext+0x40>
 800e0e6:	6858      	ldr	r0, [r3, #4]
 800e0e8:	3208      	adds	r2, #8
 800e0ea:	6840      	ldr	r0, [r0, #4]
 800e0ec:	6058      	str	r0, [r3, #4]
 800e0ee:	440a      	add	r2, r1
 800e0f0:	4290      	cmp	r0, r2
 800e0f2:	bf04      	itt	eq
 800e0f4:	6840      	ldreq	r0, [r0, #4]
 800e0f6:	6058      	streq	r0, [r3, #4]
 800e0f8:	4b05      	ldr	r3, [pc, #20]	@ (800e110 <vTaskSwitchContext+0x6c>)
 800e0fa:	68c2      	ldr	r2, [r0, #12]
 800e0fc:	601a      	str	r2, [r3, #0]
 800e0fe:	4770      	bx	lr
 800e100:	2000180c 	.word	0x2000180c
 800e104:	20001820 	.word	0x20001820
 800e108:	2000182c 	.word	0x2000182c
 800e10c:	200018a8 	.word	0x200018a8
 800e110:	20001934 	.word	0x20001934

0800e114 <vTaskSuspend>:
 800e114:	b570      	push	{r4, r5, r6, lr}
 800e116:	4604      	mov	r4, r0
 800e118:	4e38      	ldr	r6, [pc, #224]	@ (800e1fc <vTaskSuspend+0xe8>)
 800e11a:	f000 f8eb 	bl	800e2f4 <vPortEnterCritical>
 800e11e:	2c00      	cmp	r4, #0
 800e120:	d04d      	beq.n	800e1be <vTaskSuspend+0xaa>
 800e122:	1d25      	adds	r5, r4, #4
 800e124:	4628      	mov	r0, r5
 800e126:	f7ff fa75 	bl	800d614 <uxListRemove>
 800e12a:	b930      	cbnz	r0, 800e13a <vTaskSuspend+0x26>
 800e12c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800e12e:	4934      	ldr	r1, [pc, #208]	@ (800e200 <vTaskSuspend+0xec>)
 800e130:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800e134:	009b      	lsls	r3, r3, #2
 800e136:	58cb      	ldr	r3, [r1, r3]
 800e138:	b34b      	cbz	r3, 800e18e <vTaskSuspend+0x7a>
 800e13a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e13c:	b11b      	cbz	r3, 800e146 <vTaskSuspend+0x32>
 800e13e:	f104 0018 	add.w	r0, r4, #24
 800e142:	f7ff fa67 	bl	800d614 <uxListRemove>
 800e146:	4629      	mov	r1, r5
 800e148:	482e      	ldr	r0, [pc, #184]	@ (800e204 <vTaskSuspend+0xf0>)
 800e14a:	4d2f      	ldr	r5, [pc, #188]	@ (800e208 <vTaskSuspend+0xf4>)
 800e14c:	f7ff fa3c 	bl	800d5c8 <vListInsertEnd>
 800e150:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800e154:	2b01      	cmp	r3, #1
 800e156:	bf04      	itt	eq
 800e158:	2300      	moveq	r3, #0
 800e15a:	f884 3050 	strbeq.w	r3, [r4, #80]	@ 0x50
 800e15e:	f000 f8eb 	bl	800e338 <vPortExitCritical>
 800e162:	682b      	ldr	r3, [r5, #0]
 800e164:	b9e3      	cbnz	r3, 800e1a0 <vTaskSuspend+0x8c>
 800e166:	6833      	ldr	r3, [r6, #0]
 800e168:	42a3      	cmp	r3, r4
 800e16a:	d000      	beq.n	800e16e <vTaskSuspend+0x5a>
 800e16c:	bd70      	pop	{r4, r5, r6, pc}
 800e16e:	682b      	ldr	r3, [r5, #0]
 800e170:	2b00      	cmp	r3, #0
 800e172:	d02b      	beq.n	800e1cc <vTaskSuspend+0xb8>
 800e174:	4b25      	ldr	r3, [pc, #148]	@ (800e20c <vTaskSuspend+0xf8>)
 800e176:	681b      	ldr	r3, [r3, #0]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	d02f      	beq.n	800e1dc <vTaskSuspend+0xc8>
 800e17c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e180:	f383 8811 	msr	BASEPRI, r3
 800e184:	f3bf 8f6f 	isb	sy
 800e188:	f3bf 8f4f 	dsb	sy
 800e18c:	e7fe      	b.n	800e18c <vTaskSuspend+0x78>
 800e18e:	4920      	ldr	r1, [pc, #128]	@ (800e210 <vTaskSuspend+0xfc>)
 800e190:	2301      	movs	r3, #1
 800e192:	fa03 f202 	lsl.w	r2, r3, r2
 800e196:	680b      	ldr	r3, [r1, #0]
 800e198:	ea23 0302 	bic.w	r3, r3, r2
 800e19c:	600b      	str	r3, [r1, #0]
 800e19e:	e7cc      	b.n	800e13a <vTaskSuspend+0x26>
 800e1a0:	f000 f8a8 	bl	800e2f4 <vPortEnterCritical>
 800e1a4:	4b1b      	ldr	r3, [pc, #108]	@ (800e214 <vTaskSuspend+0x100>)
 800e1a6:	681a      	ldr	r2, [r3, #0]
 800e1a8:	6812      	ldr	r2, [r2, #0]
 800e1aa:	b152      	cbz	r2, 800e1c2 <vTaskSuspend+0xae>
 800e1ac:	681a      	ldr	r2, [r3, #0]
 800e1ae:	4b1a      	ldr	r3, [pc, #104]	@ (800e218 <vTaskSuspend+0x104>)
 800e1b0:	68d2      	ldr	r2, [r2, #12]
 800e1b2:	68d2      	ldr	r2, [r2, #12]
 800e1b4:	6852      	ldr	r2, [r2, #4]
 800e1b6:	601a      	str	r2, [r3, #0]
 800e1b8:	f000 f8be 	bl	800e338 <vPortExitCritical>
 800e1bc:	e7d3      	b.n	800e166 <vTaskSuspend+0x52>
 800e1be:	6834      	ldr	r4, [r6, #0]
 800e1c0:	e7af      	b.n	800e122 <vTaskSuspend+0xe>
 800e1c2:	4b15      	ldr	r3, [pc, #84]	@ (800e218 <vTaskSuspend+0x104>)
 800e1c4:	f04f 32ff 	mov.w	r2, #4294967295
 800e1c8:	601a      	str	r2, [r3, #0]
 800e1ca:	e7f5      	b.n	800e1b8 <vTaskSuspend+0xa4>
 800e1cc:	490d      	ldr	r1, [pc, #52]	@ (800e204 <vTaskSuspend+0xf0>)
 800e1ce:	4a13      	ldr	r2, [pc, #76]	@ (800e21c <vTaskSuspend+0x108>)
 800e1d0:	6809      	ldr	r1, [r1, #0]
 800e1d2:	6812      	ldr	r2, [r2, #0]
 800e1d4:	4291      	cmp	r1, r2
 800e1d6:	d10c      	bne.n	800e1f2 <vTaskSuspend+0xde>
 800e1d8:	6033      	str	r3, [r6, #0]
 800e1da:	bd70      	pop	{r4, r5, r6, pc}
 800e1dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e1e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e1e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e1e8:	f3bf 8f4f 	dsb	sy
 800e1ec:	f3bf 8f6f 	isb	sy
 800e1f0:	bd70      	pop	{r4, r5, r6, pc}
 800e1f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1f6:	f7ff bf55 	b.w	800e0a4 <vTaskSwitchContext>
 800e1fa:	bf00      	nop
 800e1fc:	20001934 	.word	0x20001934
 800e200:	200018a8 	.word	0x200018a8
 800e204:	20001838 	.word	0x20001838
 800e208:	20001828 	.word	0x20001828
 800e20c:	2000180c 	.word	0x2000180c
 800e210:	2000182c 	.word	0x2000182c
 800e214:	2000187c 	.word	0x2000187c
 800e218:	20001814 	.word	0x20001814
 800e21c:	20001834 	.word	0x20001834

0800e220 <prvPortStartFirstTask>:
 800e220:	4808      	ldr	r0, [pc, #32]	@ (800e244 <prvPortStartFirstTask+0x24>)
 800e222:	6800      	ldr	r0, [r0, #0]
 800e224:	6800      	ldr	r0, [r0, #0]
 800e226:	f380 8808 	msr	MSP, r0
 800e22a:	f04f 0000 	mov.w	r0, #0
 800e22e:	f380 8814 	msr	CONTROL, r0
 800e232:	b662      	cpsie	i
 800e234:	b661      	cpsie	f
 800e236:	f3bf 8f4f 	dsb	sy
 800e23a:	f3bf 8f6f 	isb	sy
 800e23e:	df00      	svc	0
 800e240:	bf00      	nop
 800e242:	0000      	.short	0x0000
 800e244:	e000ed08 	.word	0xe000ed08

0800e248 <vPortEnableVFP>:
 800e248:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800e258 <vPortEnableVFP+0x10>
 800e24c:	6801      	ldr	r1, [r0, #0]
 800e24e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800e252:	6001      	str	r1, [r0, #0]
 800e254:	4770      	bx	lr
 800e256:	0000      	.short	0x0000
 800e258:	e000ed88 	.word	0xe000ed88

0800e25c <prvTaskExitError>:
 800e25c:	4b0e      	ldr	r3, [pc, #56]	@ (800e298 <prvTaskExitError+0x3c>)
 800e25e:	681b      	ldr	r3, [r3, #0]
 800e260:	b082      	sub	sp, #8
 800e262:	2200      	movs	r2, #0
 800e264:	3301      	adds	r3, #1
 800e266:	9201      	str	r2, [sp, #4]
 800e268:	d008      	beq.n	800e27c <prvTaskExitError+0x20>
 800e26a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e26e:	f383 8811 	msr	BASEPRI, r3
 800e272:	f3bf 8f6f 	isb	sy
 800e276:	f3bf 8f4f 	dsb	sy
 800e27a:	e7fe      	b.n	800e27a <prvTaskExitError+0x1e>
 800e27c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e280:	f383 8811 	msr	BASEPRI, r3
 800e284:	f3bf 8f6f 	isb	sy
 800e288:	f3bf 8f4f 	dsb	sy
 800e28c:	9b01      	ldr	r3, [sp, #4]
 800e28e:	2b00      	cmp	r3, #0
 800e290:	d0fc      	beq.n	800e28c <prvTaskExitError+0x30>
 800e292:	b002      	add	sp, #8
 800e294:	4770      	bx	lr
 800e296:	bf00      	nop
 800e298:	200000c8 	.word	0x200000c8

0800e29c <pxPortInitialiseStack>:
 800e29c:	b410      	push	{r4}
 800e29e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800e2a2:	4c07      	ldr	r4, [pc, #28]	@ (800e2c0 <pxPortInitialiseStack+0x24>)
 800e2a4:	f840 3c04 	str.w	r3, [r0, #-4]
 800e2a8:	f021 0101 	bic.w	r1, r1, #1
 800e2ac:	f06f 0302 	mvn.w	r3, #2
 800e2b0:	e940 4103 	strd	r4, r1, [r0, #-12]
 800e2b4:	e940 3209 	strd	r3, r2, [r0, #-36]	@ 0x24
 800e2b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e2bc:	3844      	subs	r0, #68	@ 0x44
 800e2be:	4770      	bx	lr
 800e2c0:	0800e25d 	.word	0x0800e25d
	...

0800e2d0 <SVC_Handler>:
 800e2d0:	4b07      	ldr	r3, [pc, #28]	@ (800e2f0 <pxCurrentTCBConst2>)
 800e2d2:	6819      	ldr	r1, [r3, #0]
 800e2d4:	6808      	ldr	r0, [r1, #0]
 800e2d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2da:	f380 8809 	msr	PSP, r0
 800e2de:	f3bf 8f6f 	isb	sy
 800e2e2:	f04f 0000 	mov.w	r0, #0
 800e2e6:	f380 8811 	msr	BASEPRI, r0
 800e2ea:	4770      	bx	lr
 800e2ec:	f3af 8000 	nop.w

0800e2f0 <pxCurrentTCBConst2>:
 800e2f0:	20001934 	.word	0x20001934

0800e2f4 <vPortEnterCritical>:
 800e2f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e2f8:	f383 8811 	msr	BASEPRI, r3
 800e2fc:	f3bf 8f6f 	isb	sy
 800e300:	f3bf 8f4f 	dsb	sy
 800e304:	4a0b      	ldr	r2, [pc, #44]	@ (800e334 <vPortEnterCritical+0x40>)
 800e306:	6813      	ldr	r3, [r2, #0]
 800e308:	3301      	adds	r3, #1
 800e30a:	2b01      	cmp	r3, #1
 800e30c:	6013      	str	r3, [r2, #0]
 800e30e:	d000      	beq.n	800e312 <vPortEnterCritical+0x1e>
 800e310:	4770      	bx	lr
 800e312:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e316:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800e31a:	b2db      	uxtb	r3, r3
 800e31c:	2b00      	cmp	r3, #0
 800e31e:	d0f7      	beq.n	800e310 <vPortEnterCritical+0x1c>
 800e320:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e324:	f383 8811 	msr	BASEPRI, r3
 800e328:	f3bf 8f6f 	isb	sy
 800e32c:	f3bf 8f4f 	dsb	sy
 800e330:	e7fe      	b.n	800e330 <vPortEnterCritical+0x3c>
 800e332:	bf00      	nop
 800e334:	200000c8 	.word	0x200000c8

0800e338 <vPortExitCritical>:
 800e338:	4a08      	ldr	r2, [pc, #32]	@ (800e35c <vPortExitCritical+0x24>)
 800e33a:	6813      	ldr	r3, [r2, #0]
 800e33c:	b943      	cbnz	r3, 800e350 <vPortExitCritical+0x18>
 800e33e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e342:	f383 8811 	msr	BASEPRI, r3
 800e346:	f3bf 8f6f 	isb	sy
 800e34a:	f3bf 8f4f 	dsb	sy
 800e34e:	e7fe      	b.n	800e34e <vPortExitCritical+0x16>
 800e350:	3b01      	subs	r3, #1
 800e352:	6013      	str	r3, [r2, #0]
 800e354:	b90b      	cbnz	r3, 800e35a <vPortExitCritical+0x22>
 800e356:	f383 8811 	msr	BASEPRI, r3
 800e35a:	4770      	bx	lr
 800e35c:	200000c8 	.word	0x200000c8

0800e360 <PendSV_Handler>:
 800e360:	f3ef 8009 	mrs	r0, PSP
 800e364:	f3bf 8f6f 	isb	sy
 800e368:	4b15      	ldr	r3, [pc, #84]	@ (800e3c0 <pxCurrentTCBConst>)
 800e36a:	681a      	ldr	r2, [r3, #0]
 800e36c:	f01e 0f10 	tst.w	lr, #16
 800e370:	bf08      	it	eq
 800e372:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e376:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e37a:	6010      	str	r0, [r2, #0]
 800e37c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e380:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800e384:	f380 8811 	msr	BASEPRI, r0
 800e388:	f3bf 8f4f 	dsb	sy
 800e38c:	f3bf 8f6f 	isb	sy
 800e390:	f7ff fe88 	bl	800e0a4 <vTaskSwitchContext>
 800e394:	f04f 0000 	mov.w	r0, #0
 800e398:	f380 8811 	msr	BASEPRI, r0
 800e39c:	bc09      	pop	{r0, r3}
 800e39e:	6819      	ldr	r1, [r3, #0]
 800e3a0:	6808      	ldr	r0, [r1, #0]
 800e3a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3a6:	f01e 0f10 	tst.w	lr, #16
 800e3aa:	bf08      	it	eq
 800e3ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e3b0:	f380 8809 	msr	PSP, r0
 800e3b4:	f3bf 8f6f 	isb	sy
 800e3b8:	4770      	bx	lr
 800e3ba:	bf00      	nop
 800e3bc:	f3af 8000 	nop.w

0800e3c0 <pxCurrentTCBConst>:
 800e3c0:	20001934 	.word	0x20001934

0800e3c4 <SysTick_Handler>:
 800e3c4:	b508      	push	{r3, lr}
 800e3c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e3ca:	f383 8811 	msr	BASEPRI, r3
 800e3ce:	f3bf 8f6f 	isb	sy
 800e3d2:	f3bf 8f4f 	dsb	sy
 800e3d6:	f7ff fe55 	bl	800e084 <xTaskIncrementTick>
 800e3da:	b128      	cbz	r0, 800e3e8 <SysTick_Handler+0x24>
 800e3dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e3e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e3e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e3e8:	2300      	movs	r3, #0
 800e3ea:	f383 8811 	msr	BASEPRI, r3
 800e3ee:	bd08      	pop	{r3, pc}

0800e3f0 <vPortSetupTimerInterrupt>:
 800e3f0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800e3f4:	2300      	movs	r3, #0
 800e3f6:	4906      	ldr	r1, [pc, #24]	@ (800e410 <vPortSetupTimerInterrupt+0x20>)
 800e3f8:	6113      	str	r3, [r2, #16]
 800e3fa:	6193      	str	r3, [r2, #24]
 800e3fc:	680b      	ldr	r3, [r1, #0]
 800e3fe:	4905      	ldr	r1, [pc, #20]	@ (800e414 <vPortSetupTimerInterrupt+0x24>)
 800e400:	fba1 1303 	umull	r1, r3, r1, r3
 800e404:	099b      	lsrs	r3, r3, #6
 800e406:	2007      	movs	r0, #7
 800e408:	3b01      	subs	r3, #1
 800e40a:	6153      	str	r3, [r2, #20]
 800e40c:	6110      	str	r0, [r2, #16]
 800e40e:	4770      	bx	lr
 800e410:	20000034 	.word	0x20000034
 800e414:	10624dd3 	.word	0x10624dd3

0800e418 <xPortStartScheduler>:
 800e418:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e41c:	4a48      	ldr	r2, [pc, #288]	@ (800e540 <xPortStartScheduler+0x128>)
 800e41e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800e422:	4291      	cmp	r1, r2
 800e424:	d041      	beq.n	800e4aa <xPortStartScheduler+0x92>
 800e426:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800e42a:	4b46      	ldr	r3, [pc, #280]	@ (800e544 <xPortStartScheduler+0x12c>)
 800e42c:	429a      	cmp	r2, r3
 800e42e:	d033      	beq.n	800e498 <xPortStartScheduler+0x80>
 800e430:	b570      	push	{r4, r5, r6, lr}
 800e432:	4b45      	ldr	r3, [pc, #276]	@ (800e548 <xPortStartScheduler+0x130>)
 800e434:	4c45      	ldr	r4, [pc, #276]	@ (800e54c <xPortStartScheduler+0x134>)
 800e436:	781a      	ldrb	r2, [r3, #0]
 800e438:	4845      	ldr	r0, [pc, #276]	@ (800e550 <xPortStartScheduler+0x138>)
 800e43a:	b084      	sub	sp, #16
 800e43c:	21ff      	movs	r1, #255	@ 0xff
 800e43e:	b2d2      	uxtb	r2, r2
 800e440:	9202      	str	r2, [sp, #8]
 800e442:	7019      	strb	r1, [r3, #0]
 800e444:	781b      	ldrb	r3, [r3, #0]
 800e446:	b2db      	uxtb	r3, r3
 800e448:	f88d 3007 	strb.w	r3, [sp, #7]
 800e44c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e450:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e454:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800e458:	2107      	movs	r1, #7
 800e45a:	0612      	lsls	r2, r2, #24
 800e45c:	7023      	strb	r3, [r4, #0]
 800e45e:	6001      	str	r1, [r0, #0]
 800e460:	bf48      	it	mi
 800e462:	2206      	movmi	r2, #6
 800e464:	d50f      	bpl.n	800e486 <xPortStartScheduler+0x6e>
 800e466:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e46a:	005b      	lsls	r3, r3, #1
 800e46c:	b2db      	uxtb	r3, r3
 800e46e:	f88d 3007 	strb.w	r3, [sp, #7]
 800e472:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e476:	061b      	lsls	r3, r3, #24
 800e478:	4611      	mov	r1, r2
 800e47a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e47e:	d4f2      	bmi.n	800e466 <xPortStartScheduler+0x4e>
 800e480:	2903      	cmp	r1, #3
 800e482:	d01b      	beq.n	800e4bc <xPortStartScheduler+0xa4>
 800e484:	6001      	str	r1, [r0, #0]
 800e486:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e48a:	f383 8811 	msr	BASEPRI, r3
 800e48e:	f3bf 8f6f 	isb	sy
 800e492:	f3bf 8f4f 	dsb	sy
 800e496:	e7fe      	b.n	800e496 <xPortStartScheduler+0x7e>
 800e498:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e49c:	f383 8811 	msr	BASEPRI, r3
 800e4a0:	f3bf 8f6f 	isb	sy
 800e4a4:	f3bf 8f4f 	dsb	sy
 800e4a8:	e7fe      	b.n	800e4a8 <xPortStartScheduler+0x90>
 800e4aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4ae:	f383 8811 	msr	BASEPRI, r3
 800e4b2:	f3bf 8f6f 	isb	sy
 800e4b6:	f3bf 8f4f 	dsb	sy
 800e4ba:	e7fe      	b.n	800e4ba <xPortStartScheduler+0xa2>
 800e4bc:	9b02      	ldr	r3, [sp, #8]
 800e4be:	4a22      	ldr	r2, [pc, #136]	@ (800e548 <xPortStartScheduler+0x130>)
 800e4c0:	4e24      	ldr	r6, [pc, #144]	@ (800e554 <xPortStartScheduler+0x13c>)
 800e4c2:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
 800e4c6:	f44f 7140 	mov.w	r1, #768	@ 0x300
 800e4ca:	b2db      	uxtb	r3, r3
 800e4cc:	6001      	str	r1, [r0, #0]
 800e4ce:	7013      	strb	r3, [r2, #0]
 800e4d0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e4d4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800e4d8:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 800e4dc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e4e0:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800e4e4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 800e4e8:	2500      	movs	r5, #0
 800e4ea:	f7ff ff81 	bl	800e3f0 <vPortSetupTimerInterrupt>
 800e4ee:	6035      	str	r5, [r6, #0]
 800e4f0:	f7ff feaa 	bl	800e248 <vPortEnableVFP>
 800e4f4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800e4f8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800e4fc:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
 800e500:	f7ff fe8e 	bl	800e220 <prvPortStartFirstTask>
 800e504:	f7ff fdce 	bl	800e0a4 <vTaskSwitchContext>
 800e508:	6833      	ldr	r3, [r6, #0]
 800e50a:	9503      	str	r5, [sp, #12]
 800e50c:	3301      	adds	r3, #1
 800e50e:	d008      	beq.n	800e522 <xPortStartScheduler+0x10a>
 800e510:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e514:	f383 8811 	msr	BASEPRI, r3
 800e518:	f3bf 8f6f 	isb	sy
 800e51c:	f3bf 8f4f 	dsb	sy
 800e520:	e7fe      	b.n	800e520 <xPortStartScheduler+0x108>
 800e522:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e526:	f383 8811 	msr	BASEPRI, r3
 800e52a:	f3bf 8f6f 	isb	sy
 800e52e:	f3bf 8f4f 	dsb	sy
 800e532:	9b03      	ldr	r3, [sp, #12]
 800e534:	2b00      	cmp	r3, #0
 800e536:	d0fc      	beq.n	800e532 <xPortStartScheduler+0x11a>
 800e538:	2000      	movs	r0, #0
 800e53a:	b004      	add	sp, #16
 800e53c:	bd70      	pop	{r4, r5, r6, pc}
 800e53e:	bf00      	nop
 800e540:	410fc271 	.word	0x410fc271
 800e544:	410fc270 	.word	0x410fc270
 800e548:	e000e400 	.word	0xe000e400
 800e54c:	2000193c 	.word	0x2000193c
 800e550:	20001938 	.word	0x20001938
 800e554:	200000c8 	.word	0x200000c8

0800e558 <vPortValidateInterruptPriority>:
 800e558:	f3ef 8305 	mrs	r3, IPSR
 800e55c:	2b0f      	cmp	r3, #15
 800e55e:	d90e      	bls.n	800e57e <vPortValidateInterruptPriority+0x26>
 800e560:	4911      	ldr	r1, [pc, #68]	@ (800e5a8 <vPortValidateInterruptPriority+0x50>)
 800e562:	4a12      	ldr	r2, [pc, #72]	@ (800e5ac <vPortValidateInterruptPriority+0x54>)
 800e564:	5c5b      	ldrb	r3, [r3, r1]
 800e566:	7812      	ldrb	r2, [r2, #0]
 800e568:	429a      	cmp	r2, r3
 800e56a:	d908      	bls.n	800e57e <vPortValidateInterruptPriority+0x26>
 800e56c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e570:	f383 8811 	msr	BASEPRI, r3
 800e574:	f3bf 8f6f 	isb	sy
 800e578:	f3bf 8f4f 	dsb	sy
 800e57c:	e7fe      	b.n	800e57c <vPortValidateInterruptPriority+0x24>
 800e57e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e582:	4a0b      	ldr	r2, [pc, #44]	@ (800e5b0 <vPortValidateInterruptPriority+0x58>)
 800e584:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800e588:	6812      	ldr	r2, [r2, #0]
 800e58a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800e58e:	4293      	cmp	r3, r2
 800e590:	d908      	bls.n	800e5a4 <vPortValidateInterruptPriority+0x4c>
 800e592:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e596:	f383 8811 	msr	BASEPRI, r3
 800e59a:	f3bf 8f6f 	isb	sy
 800e59e:	f3bf 8f4f 	dsb	sy
 800e5a2:	e7fe      	b.n	800e5a2 <vPortValidateInterruptPriority+0x4a>
 800e5a4:	4770      	bx	lr
 800e5a6:	bf00      	nop
 800e5a8:	e000e3f0 	.word	0xe000e3f0
 800e5ac:	2000193c 	.word	0x2000193c
 800e5b0:	20001938 	.word	0x20001938

0800e5b4 <pvPortMalloc>:
 800e5b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e5b8:	4605      	mov	r5, r0
 800e5ba:	f7ff fd4b 	bl	800e054 <vTaskSuspendAll>
 800e5be:	4a54      	ldr	r2, [pc, #336]	@ (800e710 <pvPortMalloc+0x15c>)
 800e5c0:	6816      	ldr	r6, [r2, #0]
 800e5c2:	2e00      	cmp	r6, #0
 800e5c4:	d035      	beq.n	800e632 <pvPortMalloc+0x7e>
 800e5c6:	4b53      	ldr	r3, [pc, #332]	@ (800e714 <pvPortMalloc+0x160>)
 800e5c8:	681f      	ldr	r7, [r3, #0]
 800e5ca:	423d      	tst	r5, r7
 800e5cc:	d12b      	bne.n	800e626 <pvPortMalloc+0x72>
 800e5ce:	b355      	cbz	r5, 800e626 <pvPortMalloc+0x72>
 800e5d0:	f105 0408 	add.w	r4, r5, #8
 800e5d4:	0768      	lsls	r0, r5, #29
 800e5d6:	bf1c      	itt	ne
 800e5d8:	f024 0407 	bicne.w	r4, r4, #7
 800e5dc:	3408      	addne	r4, #8
 800e5de:	b314      	cbz	r4, 800e626 <pvPortMalloc+0x72>
 800e5e0:	f8df c144 	ldr.w	ip, [pc, #324]	@ 800e728 <pvPortMalloc+0x174>
 800e5e4:	f8dc 5000 	ldr.w	r5, [ip]
 800e5e8:	42a5      	cmp	r5, r4
 800e5ea:	d31c      	bcc.n	800e626 <pvPortMalloc+0x72>
 800e5ec:	484a      	ldr	r0, [pc, #296]	@ (800e718 <pvPortMalloc+0x164>)
 800e5ee:	6803      	ldr	r3, [r0, #0]
 800e5f0:	e003      	b.n	800e5fa <pvPortMalloc+0x46>
 800e5f2:	681a      	ldr	r2, [r3, #0]
 800e5f4:	b122      	cbz	r2, 800e600 <pvPortMalloc+0x4c>
 800e5f6:	4618      	mov	r0, r3
 800e5f8:	4613      	mov	r3, r2
 800e5fa:	6859      	ldr	r1, [r3, #4]
 800e5fc:	42a1      	cmp	r1, r4
 800e5fe:	d3f8      	bcc.n	800e5f2 <pvPortMalloc+0x3e>
 800e600:	42b3      	cmp	r3, r6
 800e602:	d010      	beq.n	800e626 <pvPortMalloc+0x72>
 800e604:	681a      	ldr	r2, [r3, #0]
 800e606:	6002      	str	r2, [r0, #0]
 800e608:	1b08      	subs	r0, r1, r4
 800e60a:	2810      	cmp	r0, #16
 800e60c:	d947      	bls.n	800e69e <pvPortMalloc+0xea>
 800e60e:	191a      	adds	r2, r3, r4
 800e610:	0751      	lsls	r1, r2, #29
 800e612:	d02c      	beq.n	800e66e <pvPortMalloc+0xba>
 800e614:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e618:	f383 8811 	msr	BASEPRI, r3
 800e61c:	f3bf 8f6f 	isb	sy
 800e620:	f3bf 8f4f 	dsb	sy
 800e624:	e7fe      	b.n	800e624 <pvPortMalloc+0x70>
 800e626:	f7ff fd1d 	bl	800e064 <xTaskResumeAll>
 800e62a:	2400      	movs	r4, #0
 800e62c:	4620      	mov	r0, r4
 800e62e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e632:	4b3a      	ldr	r3, [pc, #232]	@ (800e71c <pvPortMalloc+0x168>)
 800e634:	4e3a      	ldr	r6, [pc, #232]	@ (800e720 <pvPortMalloc+0x16c>)
 800e636:	4838      	ldr	r0, [pc, #224]	@ (800e718 <pvPortMalloc+0x164>)
 800e638:	075c      	lsls	r4, r3, #29
 800e63a:	bf18      	it	ne
 800e63c:	3307      	addne	r3, #7
 800e63e:	f026 0607 	bic.w	r6, r6, #7
 800e642:	bf18      	it	ne
 800e644:	f023 0307 	bicne.w	r3, r3, #7
 800e648:	6016      	str	r6, [r2, #0]
 800e64a:	4a36      	ldr	r2, [pc, #216]	@ (800e724 <pvPortMalloc+0x170>)
 800e64c:	6003      	str	r3, [r0, #0]
 800e64e:	4619      	mov	r1, r3
 800e650:	1af3      	subs	r3, r6, r3
 800e652:	6013      	str	r3, [r2, #0]
 800e654:	4a34      	ldr	r2, [pc, #208]	@ (800e728 <pvPortMalloc+0x174>)
 800e656:	4c2f      	ldr	r4, [pc, #188]	@ (800e714 <pvPortMalloc+0x160>)
 800e658:	6013      	str	r3, [r2, #0]
 800e65a:	f04f 4700 	mov.w	r7, #2147483648	@ 0x80000000
 800e65e:	2200      	movs	r2, #0
 800e660:	6042      	str	r2, [r0, #4]
 800e662:	6027      	str	r7, [r4, #0]
 800e664:	e9c6 2200 	strd	r2, r2, [r6]
 800e668:	e9c1 6300 	strd	r6, r3, [r1]
 800e66c:	e7ad      	b.n	800e5ca <pvPortMalloc+0x16>
 800e66e:	492a      	ldr	r1, [pc, #168]	@ (800e718 <pvPortMalloc+0x164>)
 800e670:	6050      	str	r0, [r2, #4]
 800e672:	605c      	str	r4, [r3, #4]
 800e674:	4608      	mov	r0, r1
 800e676:	6809      	ldr	r1, [r1, #0]
 800e678:	428a      	cmp	r2, r1
 800e67a:	d8fb      	bhi.n	800e674 <pvPortMalloc+0xc0>
 800e67c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800e680:	f8d2 8004 	ldr.w	r8, [r2, #4]
 800e684:	eb00 090e 	add.w	r9, r0, lr
 800e688:	454a      	cmp	r2, r9
 800e68a:	d027      	beq.n	800e6dc <pvPortMalloc+0x128>
 800e68c:	eb02 0e08 	add.w	lr, r2, r8
 800e690:	4571      	cmp	r1, lr
 800e692:	d02b      	beq.n	800e6ec <pvPortMalloc+0x138>
 800e694:	6011      	str	r1, [r2, #0]
 800e696:	4621      	mov	r1, r4
 800e698:	4282      	cmp	r2, r0
 800e69a:	bf18      	it	ne
 800e69c:	6002      	strne	r2, [r0, #0]
 800e69e:	4a21      	ldr	r2, [pc, #132]	@ (800e724 <pvPortMalloc+0x170>)
 800e6a0:	6810      	ldr	r0, [r2, #0]
 800e6a2:	1a6d      	subs	r5, r5, r1
 800e6a4:	4285      	cmp	r5, r0
 800e6a6:	4821      	ldr	r0, [pc, #132]	@ (800e72c <pvPortMalloc+0x178>)
 800e6a8:	bf38      	it	cc
 800e6aa:	6015      	strcc	r5, [r2, #0]
 800e6ac:	430f      	orrs	r7, r1
 800e6ae:	6801      	ldr	r1, [r0, #0]
 800e6b0:	f8cc 5000 	str.w	r5, [ip]
 800e6b4:	2400      	movs	r4, #0
 800e6b6:	e9c3 4700 	strd	r4, r7, [r3]
 800e6ba:	3101      	adds	r1, #1
 800e6bc:	f103 0408 	add.w	r4, r3, #8
 800e6c0:	6001      	str	r1, [r0, #0]
 800e6c2:	f7ff fccf 	bl	800e064 <xTaskResumeAll>
 800e6c6:	0763      	lsls	r3, r4, #29
 800e6c8:	d0b0      	beq.n	800e62c <pvPortMalloc+0x78>
 800e6ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6ce:	f383 8811 	msr	BASEPRI, r3
 800e6d2:	f3bf 8f6f 	isb	sy
 800e6d6:	f3bf 8f4f 	dsb	sy
 800e6da:	e7fe      	b.n	800e6da <pvPortMalloc+0x126>
 800e6dc:	eb0e 0208 	add.w	r2, lr, r8
 800e6e0:	1884      	adds	r4, r0, r2
 800e6e2:	42a1      	cmp	r1, r4
 800e6e4:	6042      	str	r2, [r0, #4]
 800e6e6:	d00a      	beq.n	800e6fe <pvPortMalloc+0x14a>
 800e6e8:	6859      	ldr	r1, [r3, #4]
 800e6ea:	e7d8      	b.n	800e69e <pvPortMalloc+0xea>
 800e6ec:	42b1      	cmp	r1, r6
 800e6ee:	d0d1      	beq.n	800e694 <pvPortMalloc+0xe0>
 800e6f0:	684c      	ldr	r4, [r1, #4]
 800e6f2:	6809      	ldr	r1, [r1, #0]
 800e6f4:	6011      	str	r1, [r2, #0]
 800e6f6:	4444      	add	r4, r8
 800e6f8:	6054      	str	r4, [r2, #4]
 800e6fa:	6859      	ldr	r1, [r3, #4]
 800e6fc:	e7cc      	b.n	800e698 <pvPortMalloc+0xe4>
 800e6fe:	42b1      	cmp	r1, r6
 800e700:	d0f2      	beq.n	800e6e8 <pvPortMalloc+0x134>
 800e702:	684c      	ldr	r4, [r1, #4]
 800e704:	4414      	add	r4, r2
 800e706:	680a      	ldr	r2, [r1, #0]
 800e708:	6044      	str	r4, [r0, #4]
 800e70a:	6002      	str	r2, [r0, #0]
 800e70c:	e7ec      	b.n	800e6e8 <pvPortMalloc+0x134>
 800e70e:	bf00      	nop
 800e710:	20001954 	.word	0x20001954
 800e714:	20001940 	.word	0x20001940
 800e718:	20001958 	.word	0x20001958
 800e71c:	20001960 	.word	0x20001960
 800e720:	20004068 	.word	0x20004068
 800e724:	2000194c 	.word	0x2000194c
 800e728:	20001950 	.word	0x20001950
 800e72c:	20001948 	.word	0x20001948

0800e730 <vPortFree>:
 800e730:	b1d0      	cbz	r0, 800e768 <vPortFree+0x38>
 800e732:	4a2f      	ldr	r2, [pc, #188]	@ (800e7f0 <vPortFree+0xc0>)
 800e734:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e738:	6812      	ldr	r2, [r2, #0]
 800e73a:	4213      	tst	r3, r2
 800e73c:	d00b      	beq.n	800e756 <vPortFree+0x26>
 800e73e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e742:	b191      	cbz	r1, 800e76a <vPortFree+0x3a>
 800e744:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e748:	f383 8811 	msr	BASEPRI, r3
 800e74c:	f3bf 8f6f 	isb	sy
 800e750:	f3bf 8f4f 	dsb	sy
 800e754:	e7fe      	b.n	800e754 <vPortFree+0x24>
 800e756:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e75a:	f383 8811 	msr	BASEPRI, r3
 800e75e:	f3bf 8f6f 	isb	sy
 800e762:	f3bf 8f4f 	dsb	sy
 800e766:	e7fe      	b.n	800e766 <vPortFree+0x36>
 800e768:	4770      	bx	lr
 800e76a:	b530      	push	{r4, r5, lr}
 800e76c:	ea23 0302 	bic.w	r3, r3, r2
 800e770:	b083      	sub	sp, #12
 800e772:	f840 3c04 	str.w	r3, [r0, #-4]
 800e776:	4d1f      	ldr	r5, [pc, #124]	@ (800e7f4 <vPortFree+0xc4>)
 800e778:	9001      	str	r0, [sp, #4]
 800e77a:	f1a0 0408 	sub.w	r4, r0, #8
 800e77e:	f7ff fc69 	bl	800e054 <vTaskSuspendAll>
 800e782:	9801      	ldr	r0, [sp, #4]
 800e784:	682a      	ldr	r2, [r5, #0]
 800e786:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800e78a:	4b1b      	ldr	r3, [pc, #108]	@ (800e7f8 <vPortFree+0xc8>)
 800e78c:	440a      	add	r2, r1
 800e78e:	602a      	str	r2, [r5, #0]
 800e790:	461a      	mov	r2, r3
 800e792:	681b      	ldr	r3, [r3, #0]
 800e794:	429c      	cmp	r4, r3
 800e796:	d8fb      	bhi.n	800e790 <vPortFree+0x60>
 800e798:	6855      	ldr	r5, [r2, #4]
 800e79a:	eb02 0e05 	add.w	lr, r2, r5
 800e79e:	4574      	cmp	r4, lr
 800e7a0:	d011      	beq.n	800e7c6 <vPortFree+0x96>
 800e7a2:	eb04 0c01 	add.w	ip, r4, r1
 800e7a6:	4563      	cmp	r3, ip
 800e7a8:	d01d      	beq.n	800e7e6 <vPortFree+0xb6>
 800e7aa:	f840 3c08 	str.w	r3, [r0, #-8]
 800e7ae:	42a2      	cmp	r2, r4
 800e7b0:	bf18      	it	ne
 800e7b2:	6014      	strne	r4, [r2, #0]
 800e7b4:	4a11      	ldr	r2, [pc, #68]	@ (800e7fc <vPortFree+0xcc>)
 800e7b6:	6813      	ldr	r3, [r2, #0]
 800e7b8:	3301      	adds	r3, #1
 800e7ba:	6013      	str	r3, [r2, #0]
 800e7bc:	b003      	add	sp, #12
 800e7be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e7c2:	f7ff bc4f 	b.w	800e064 <xTaskResumeAll>
 800e7c6:	4429      	add	r1, r5
 800e7c8:	1850      	adds	r0, r2, r1
 800e7ca:	4283      	cmp	r3, r0
 800e7cc:	6051      	str	r1, [r2, #4]
 800e7ce:	d1f1      	bne.n	800e7b4 <vPortFree+0x84>
 800e7d0:	480b      	ldr	r0, [pc, #44]	@ (800e800 <vPortFree+0xd0>)
 800e7d2:	6800      	ldr	r0, [r0, #0]
 800e7d4:	4283      	cmp	r3, r0
 800e7d6:	d0ed      	beq.n	800e7b4 <vPortFree+0x84>
 800e7d8:	4614      	mov	r4, r2
 800e7da:	e9d3 3000 	ldrd	r3, r0, [r3]
 800e7de:	4401      	add	r1, r0
 800e7e0:	6023      	str	r3, [r4, #0]
 800e7e2:	6061      	str	r1, [r4, #4]
 800e7e4:	e7e3      	b.n	800e7ae <vPortFree+0x7e>
 800e7e6:	4d06      	ldr	r5, [pc, #24]	@ (800e800 <vPortFree+0xd0>)
 800e7e8:	682d      	ldr	r5, [r5, #0]
 800e7ea:	42ab      	cmp	r3, r5
 800e7ec:	d1f5      	bne.n	800e7da <vPortFree+0xaa>
 800e7ee:	e7dc      	b.n	800e7aa <vPortFree+0x7a>
 800e7f0:	20001940 	.word	0x20001940
 800e7f4:	20001950 	.word	0x20001950
 800e7f8:	20001958 	.word	0x20001958
 800e7fc:	20001944 	.word	0x20001944
 800e800:	20001954 	.word	0x20001954

0800e804 <SPIF_WaitForWriting>:
}

/***********************************************************************************************************/

bool SPIF_WaitForWriting(SPIF_HandleTypeDef *Handle, uint32_t Timeout)
{
 800e804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e808:	b084      	sub	sp, #16
 800e80a:	4604      	mov	r4, r0
 800e80c:	460e      	mov	r6, r1
  bool retVal = false;
  uint32_t startTime = HAL_GetTick();
 800e80e:	f7f6 ffa9 	bl	8005764 <HAL_GetTick>
  uint8_t tx[2] = {SPIF_CMD_READSTATUS1, SPIF_DUMMY_BYTE};
 800e812:	f24a 5705 	movw	r7, #42245	@ 0xa505
  uint32_t startTime = HAL_GetTick();
 800e816:	4605      	mov	r5, r0
  osDelay(d);
 800e818:	2001      	movs	r0, #1
 800e81a:	f7fe fe9d 	bl	800d558 <osDelay>
  while (1)
  {
    SPIF_Delay(1);
    if (HAL_GetTick() - startTime >= Timeout)
 800e81e:	f7f6 ffa1 	bl	8005764 <HAL_GetTick>
 800e822:	1b40      	subs	r0, r0, r5
 800e824:	42b0      	cmp	r0, r6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e826:	f04f 0200 	mov.w	r2, #0
    if (HAL_GetTick() - startTime >= Timeout)
 800e82a:	d220      	bcs.n	800e86e <SPIF_WaitForWriting+0x6a>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e82c:	8a21      	ldrh	r1, [r4, #16]
 800e82e:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[2] = {SPIF_CMD_READSTATUS1, SPIF_DUMMY_BYTE};
 800e830:	f8ad 7008 	strh.w	r7, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e834:	f7f7 ff6c 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e838:	2264      	movs	r2, #100	@ 0x64
 800e83a:	6820      	ldr	r0, [r4, #0]
 800e83c:	9200      	str	r2, [sp, #0]
 800e83e:	a902      	add	r1, sp, #8
 800e840:	aa03      	add	r2, sp, #12
 800e842:	2302      	movs	r3, #2
 800e844:	f7fb fb82 	bl	8009f4c <HAL_SPI_TransmitReceive>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e848:	8a21      	ldrh	r1, [r4, #16]
 800e84a:	2201      	movs	r2, #1
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e84c:	b130      	cbz	r0, 800e85c <SPIF_WaitForWriting+0x58>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e84e:	6860      	ldr	r0, [r4, #4]
 800e850:	f7f7 ff5e 	bl	8006710 <HAL_GPIO_WritePin>
      dprintf("SPIF_WaitForWriting() TIMEOUT\r\n");
      break;
    }
    if ((SPIF_ReadReg1(Handle) & SPIF_STATUS1_BUSY) == 0)
    {
      retVal = true;
 800e854:	2001      	movs	r0, #1
      break;
    }
  }
  return retVal;
}
 800e856:	b004      	add	sp, #16
 800e858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    retVal = rx[1];
 800e85c:	f89d 800d 	ldrb.w	r8, [sp, #13]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e860:	6860      	ldr	r0, [r4, #4]
 800e862:	f7f7 ff55 	bl	8006710 <HAL_GPIO_WritePin>
    if ((SPIF_ReadReg1(Handle) & SPIF_STATUS1_BUSY) == 0)
 800e866:	f018 0f01 	tst.w	r8, #1
 800e86a:	d1d5      	bne.n	800e818 <SPIF_WaitForWriting+0x14>
 800e86c:	e7f2      	b.n	800e854 <SPIF_WaitForWriting+0x50>
  bool retVal = false;
 800e86e:	2000      	movs	r0, #0
}
 800e870:	b004      	add	sp, #16
 800e872:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e876:	bf00      	nop

0800e878 <SPIF_FindChip>:

/***********************************************************************************************************/

bool SPIF_FindChip(SPIF_HandleTypeDef *Handle)
{
 800e878:	b510      	push	{r4, lr}
 800e87a:	b084      	sub	sp, #16
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e87c:	8a01      	ldrh	r1, [r0, #16]
{
 800e87e:	4604      	mov	r4, r0
  uint8_t tx[4] = {SPIF_CMD_JEDECID, 0xFF, 0xFF, 0xFF};
 800e880:	f06f 0360 	mvn.w	r3, #96	@ 0x60
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e884:	6840      	ldr	r0, [r0, #4]
  uint8_t tx[4] = {SPIF_CMD_JEDECID, 0xFF, 0xFF, 0xFF};
 800e886:	9302      	str	r3, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e888:	2200      	movs	r2, #0
 800e88a:	f7f7 ff41 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e88e:	2264      	movs	r2, #100	@ 0x64
 800e890:	9200      	str	r2, [sp, #0]
 800e892:	a902      	add	r1, sp, #8
 800e894:	6820      	ldr	r0, [r4, #0]
 800e896:	2304      	movs	r3, #4
 800e898:	aa03      	add	r2, sp, #12
 800e89a:	f7fb fb57 	bl	8009f4c <HAL_SPI_TransmitReceive>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e89e:	8a21      	ldrh	r1, [r4, #16]
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e8a0:	b130      	cbz	r0, 800e8b0 <SPIF_FindChip+0x38>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e8a2:	6860      	ldr	r0, [r4, #4]
 800e8a4:	2201      	movs	r2, #1
 800e8a6:	f7f7 ff33 	bl	8006710 <HAL_GPIO_WritePin>
  uint8_t rx[4];
  bool retVal = false;
 800e8aa:	2000      	movs	r0, #0
    retVal = true;

  } while (0);

  return retVal;
}
 800e8ac:	b004      	add	sp, #16
 800e8ae:	bd10      	pop	{r4, pc}
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e8b0:	2201      	movs	r2, #1
 800e8b2:	6860      	ldr	r0, [r4, #4]
 800e8b4:	f7f7 ff2c 	bl	8006710 <HAL_GPIO_WritePin>
    Handle->Manufactor = rx[1];
 800e8b8:	f89d 300d 	ldrb.w	r3, [sp, #13]
    Handle->MemType = rx[2];
 800e8bc:	f89d 100e 	ldrb.w	r1, [sp, #14]
    Handle->Size = rx[3];
 800e8c0:	f89d 200f 	ldrb.w	r2, [sp, #15]
    Handle->Manufactor = rx[1];
 800e8c4:	7223      	strb	r3, [r4, #8]
    switch (Handle->Manufactor)
 800e8c6:	2ba1      	cmp	r3, #161	@ 0xa1
    Handle->MemType = rx[2];
 800e8c8:	72e1      	strb	r1, [r4, #11]
    Handle->Size = rx[3];
 800e8ca:	7262      	strb	r2, [r4, #9]
    switch (Handle->Manufactor)
 800e8cc:	d81c      	bhi.n	800e908 <SPIF_FindChip+0x90>
 800e8ce:	2b84      	cmp	r3, #132	@ 0x84
 800e8d0:	d826      	bhi.n	800e920 <SPIF_FindChip+0xa8>
 800e8d2:	2b37      	cmp	r3, #55	@ 0x37
 800e8d4:	d815      	bhi.n	800e902 <SPIF_FindChip+0x8a>
 800e8d6:	2b1b      	cmp	r3, #27
 800e8d8:	d82a      	bhi.n	800e930 <SPIF_FindChip+0xb8>
 800e8da:	2b01      	cmp	r3, #1
 800e8dc:	d003      	beq.n	800e8e6 <SPIF_FindChip+0x6e>
 800e8de:	2b04      	cmp	r3, #4
 800e8e0:	d001      	beq.n	800e8e6 <SPIF_FindChip+0x6e>
      Handle->Manufactor = SPIF_MANUFACTOR_ERROR;
 800e8e2:	2300      	movs	r3, #0
 800e8e4:	7223      	strb	r3, [r4, #8]
    switch (Handle->Size)
 800e8e6:	f1a2 0311 	sub.w	r3, r2, #17
 800e8ea:	2b0f      	cmp	r3, #15
 800e8ec:	d828      	bhi.n	800e940 <SPIF_FindChip+0xc8>
 800e8ee:	e8df f003 	tbb	[pc, r3]
 800e8f2:	6c72      	.short	0x6c72
 800e8f4:	51585f66 	.word	0x51585f66
 800e8f8:	273a424a 	.word	0x273a424a
 800e8fc:	27272727 	.word	0x27272727
 800e900:	3227      	.short	0x3227
    switch (Handle->Manufactor)
 800e902:	2b62      	cmp	r3, #98	@ 0x62
 800e904:	d1ed      	bne.n	800e8e2 <SPIF_FindChip+0x6a>
 800e906:	e7ee      	b.n	800e8e6 <SPIF_FindChip+0x6e>
 800e908:	2bc8      	cmp	r3, #200	@ 0xc8
 800e90a:	d86a      	bhi.n	800e9e2 <SPIF_FindChip+0x16a>
 800e90c:	2bac      	cmp	r3, #172	@ 0xac
 800e90e:	d9e8      	bls.n	800e8e2 <SPIF_FindChip+0x6a>
 800e910:	4936      	ldr	r1, [pc, #216]	@ (800e9ec <SPIF_FindChip+0x174>)
 800e912:	3353      	adds	r3, #83	@ 0x53
 800e914:	b2db      	uxtb	r3, r3
 800e916:	fa21 f303 	lsr.w	r3, r1, r3
 800e91a:	07d8      	lsls	r0, r3, #31
 800e91c:	d4e3      	bmi.n	800e8e6 <SPIF_FindChip+0x6e>
 800e91e:	e7e0      	b.n	800e8e2 <SPIF_FindChip+0x6a>
 800e920:	4933      	ldr	r1, [pc, #204]	@ (800e9f0 <SPIF_FindChip+0x178>)
 800e922:	337b      	adds	r3, #123	@ 0x7b
 800e924:	b2db      	uxtb	r3, r3
 800e926:	fa21 f303 	lsr.w	r3, r1, r3
 800e92a:	07d9      	lsls	r1, r3, #31
 800e92c:	d5d9      	bpl.n	800e8e2 <SPIF_FindChip+0x6a>
 800e92e:	e7da      	b.n	800e8e6 <SPIF_FindChip+0x6e>
 800e930:	4930      	ldr	r1, [pc, #192]	@ (800e9f4 <SPIF_FindChip+0x17c>)
 800e932:	3b1c      	subs	r3, #28
 800e934:	b2db      	uxtb	r3, r3
 800e936:	fa21 f303 	lsr.w	r3, r1, r3
 800e93a:	07db      	lsls	r3, r3, #31
 800e93c:	d5d1      	bpl.n	800e8e2 <SPIF_FindChip+0x6a>
 800e93e:	e7d2      	b.n	800e8e6 <SPIF_FindChip+0x6e>
    Handle->SectorCnt = Handle->BlockCnt * 16;
 800e940:	69e3      	ldr	r3, [r4, #28]
      Handle->Size = SPIF_SIZE_ERROR;
 800e942:	2100      	movs	r1, #0
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e944:	041a      	lsls	r2, r3, #16
      Handle->Size = SPIF_SIZE_ERROR;
 800e946:	7261      	strb	r1, [r4, #9]
    Handle->SectorCnt = Handle->BlockCnt * 16;
 800e948:	011b      	lsls	r3, r3, #4
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e94a:	0a12      	lsrs	r2, r2, #8
    retVal = true;
 800e94c:	2001      	movs	r0, #1
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e94e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
 800e952:	b004      	add	sp, #16
 800e954:	bd10      	pop	{r4, pc}
      Handle->BlockCnt = 1024;
 800e956:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e95a:	61e3      	str	r3, [r4, #28]
      break;
 800e95c:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 800e960:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800e964:	e7f2      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 512;
 800e966:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e96a:	61e3      	str	r3, [r4, #28]
      break;
 800e96c:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800e970:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800e974:	e7ea      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 256;
 800e976:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e97a:	61e3      	str	r3, [r4, #28]
      break;
 800e97c:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800e980:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800e984:	e7e2      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 128;
 800e986:	2380      	movs	r3, #128	@ 0x80
 800e988:	61e3      	str	r3, [r4, #28]
      break;
 800e98a:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800e98e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e992:	e7db      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 64;
 800e994:	2340      	movs	r3, #64	@ 0x40
 800e996:	61e3      	str	r3, [r4, #28]
      break;
 800e998:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800e99c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e9a0:	e7d4      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 32;
 800e9a2:	2320      	movs	r3, #32
 800e9a4:	61e3      	str	r3, [r4, #28]
      break;
 800e9a6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800e9aa:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e9ae:	e7cd      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 16;
 800e9b0:	2310      	movs	r3, #16
 800e9b2:	61e3      	str	r3, [r4, #28]
      break;
 800e9b4:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800e9b8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e9bc:	e7c6      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 8;
 800e9be:	2308      	movs	r3, #8
 800e9c0:	61e3      	str	r3, [r4, #28]
      break;
 800e9c2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800e9c6:	2380      	movs	r3, #128	@ 0x80
 800e9c8:	e7c0      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 4;
 800e9ca:	2304      	movs	r3, #4
 800e9cc:	61e3      	str	r3, [r4, #28]
      break;
 800e9ce:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800e9d2:	2340      	movs	r3, #64	@ 0x40
 800e9d4:	e7ba      	b.n	800e94c <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 2;
 800e9d6:	2302      	movs	r3, #2
 800e9d8:	61e3      	str	r3, [r4, #28]
      break;
 800e9da:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e9de:	2320      	movs	r3, #32
 800e9e0:	e7b4      	b.n	800e94c <SPIF_FindChip+0xd4>
    switch (Handle->Manufactor)
 800e9e2:	2bef      	cmp	r3, #239	@ 0xef
 800e9e4:	f47f af7d 	bne.w	800e8e2 <SPIF_FindChip+0x6a>
 800e9e8:	e77d      	b.n	800e8e6 <SPIF_FindChip+0x6e>
 800e9ea:	bf00      	nop
 800e9ec:	08240001 	.word	0x08240001
 800e9f0:	11000091 	.word	0x11000091
 800e9f4:	08000011 	.word	0x08000011

0800e9f8 <SPIF_WriteFn>:

/***********************************************************************************************************/

bool SPIF_WriteFn(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800e9f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9fc:	4604      	mov	r4, r0
  {
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_WritePage() START PAGE %ld\r\n", PageNumber);
    if (PageNumber >= Handle->PageCnt)
 800e9fe:	6940      	ldr	r0, [r0, #20]
 800ea00:	4288      	cmp	r0, r1
{
 800ea02:	b084      	sub	sp, #16
    if (PageNumber >= Handle->PageCnt)
 800ea04:	d817      	bhi.n	800ea36 <SPIF_WriteFn+0x3e>
  bool retVal = false;
 800ea06:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea08:	8a21      	ldrh	r1, [r4, #16]
 800ea0a:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ea0c:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea0e:	2200      	movs	r2, #0
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ea10:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea14:	f7f7 fe7c 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea18:	2364      	movs	r3, #100	@ 0x64
 800ea1a:	a901      	add	r1, sp, #4
 800ea1c:	6820      	ldr	r0, [r4, #0]
 800ea1e:	2201      	movs	r2, #1
 800ea20:	f7fb f96c 	bl	8009cfc <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea24:	6860      	ldr	r0, [r4, #4]
 800ea26:	8a21      	ldrh	r1, [r4, #16]
 800ea28:	2201      	movs	r2, #1
 800ea2a:	f7f7 fe71 	bl	8006710 <HAL_GPIO_WritePin>

  } while (0);

  SPIF_WriteDisable(Handle);
  return retVal;
}
 800ea2e:	4628      	mov	r0, r5
 800ea30:	b004      	add	sp, #16
 800ea32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea36:	461f      	mov	r7, r3
    if (Offset >= SPIF_PAGE_SIZE)
 800ea38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ea3a:	2bff      	cmp	r3, #255	@ 0xff
 800ea3c:	d8e3      	bhi.n	800ea06 <SPIF_WriteFn+0xe>
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ea3e:	2306      	movs	r3, #6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea40:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ea42:	f88d 3008 	strb.w	r3, [sp, #8]
 800ea46:	460d      	mov	r5, r1
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea48:	4616      	mov	r6, r2
 800ea4a:	8a21      	ldrh	r1, [r4, #16]
 800ea4c:	2200      	movs	r2, #0
 800ea4e:	f7f7 fe5f 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea52:	6820      	ldr	r0, [r4, #0]
 800ea54:	2364      	movs	r3, #100	@ 0x64
 800ea56:	2201      	movs	r2, #1
 800ea58:	a902      	add	r1, sp, #8
 800ea5a:	f7fb f94f 	bl	8009cfc <HAL_SPI_Transmit>
 800ea5e:	4680      	mov	r8, r0
 800ea60:	2800      	cmp	r0, #0
 800ea62:	d151      	bne.n	800eb08 <SPIF_WriteFn+0x110>
    address = SPIF_PageToAddress(PageNumber) + Offset;
 800ea64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea66:	8a21      	ldrh	r1, [r4, #16]
 800ea68:	6860      	ldr	r0, [r4, #4]
 800ea6a:	2201      	movs	r2, #1
    address = SPIF_PageToAddress(PageNumber) + Offset;
 800ea6c:	eb03 2505 	add.w	r5, r3, r5, lsl #8
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea70:	f7f7 fe4e 	bl	8006710 <HAL_GPIO_WritePin>
 800ea74:	8a21      	ldrh	r1, [r4, #16]
 800ea76:	6860      	ldr	r0, [r4, #4]
 800ea78:	4642      	mov	r2, r8
 800ea7a:	f7f7 fe49 	bl	8006710 <HAL_GPIO_WritePin>
    if (Handle->BlockCnt >= 512)
 800ea7e:	69e3      	ldr	r3, [r4, #28]
 800ea80:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
      tx[2] = (address & 0x00FF0000) >> 16;
 800ea84:	f3c5 4207 	ubfx	r2, r5, #16, #8
      tx[3] = (address & 0x0000FF00) >> 8;
 800ea88:	f3c5 2007 	ubfx	r0, r5, #8, #8
      tx[4] = (address & 0x000000FF);
 800ea8c:	b2e9      	uxtb	r1, r5
    if (Handle->BlockCnt >= 512)
 800ea8e:	d227      	bcs.n	800eae0 <SPIF_WriteFn+0xe8>
      tx[1] = (address & 0x00FF0000) >> 16;
 800ea90:	f88d 2009 	strb.w	r2, [sp, #9]
      tx[0] = SPIF_CMD_PAGEPROG3ADD;
 800ea94:	2202      	movs	r2, #2
      tx[2] = (address & 0x0000FF00) >> 8;
 800ea96:	ba6d      	rev16	r5, r5
      tx[0] = SPIF_CMD_PAGEPROG3ADD;
 800ea98:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea9c:	6820      	ldr	r0, [r4, #0]
      tx[2] = (address & 0x0000FF00) >> 8;
 800ea9e:	f8ad 500a 	strh.w	r5, [sp, #10]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eaa2:	a902      	add	r1, sp, #8
 800eaa4:	2364      	movs	r3, #100	@ 0x64
 800eaa6:	2204      	movs	r2, #4
 800eaa8:	f7fb f928 	bl	8009cfc <HAL_SPI_Transmit>
 800eaac:	bb60      	cbnz	r0, 800eb08 <SPIF_WriteFn+0x110>
  uint32_t address = 0, maximum = SPIF_PAGE_SIZE - Offset;
 800eaae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eab0:	6820      	ldr	r0, [r4, #0]
  uint32_t address = 0, maximum = SPIF_PAGE_SIZE - Offset;
 800eab2:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
    if (Size > maximum)
 800eab6:	42ba      	cmp	r2, r7
 800eab8:	bf28      	it	cs
 800eaba:	463a      	movcs	r2, r7
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eabc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800eac0:	b292      	uxth	r2, r2
 800eac2:	4631      	mov	r1, r6
 800eac4:	f7fb f91a 	bl	8009cfc <HAL_SPI_Transmit>
 800eac8:	b9f0      	cbnz	r0, 800eb08 <SPIF_WriteFn+0x110>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eaca:	8a21      	ldrh	r1, [r4, #16]
 800eacc:	6860      	ldr	r0, [r4, #4]
 800eace:	2201      	movs	r2, #1
 800ead0:	f7f7 fe1e 	bl	8006710 <HAL_GPIO_WritePin>
    if (SPIF_WaitForWriting(Handle, 100))
 800ead4:	2164      	movs	r1, #100	@ 0x64
 800ead6:	4620      	mov	r0, r4
 800ead8:	f7ff fe94 	bl	800e804 <SPIF_WaitForWriting>
 800eadc:	4605      	mov	r5, r0
 800eade:	e793      	b.n	800ea08 <SPIF_WriteFn+0x10>
      tx[2] = (address & 0x00FF0000) >> 16;
 800eae0:	f88d 200a 	strb.w	r2, [sp, #10]
      tx[0] = SPIF_CMD_PAGEPROG4ADD;
 800eae4:	2212      	movs	r2, #18
      tx[3] = (address & 0x0000FF00) >> 8;
 800eae6:	f88d 000b 	strb.w	r0, [sp, #11]
      tx[4] = (address & 0x000000FF);
 800eaea:	f88d 100c 	strb.w	r1, [sp, #12]
      tx[1] = (address & 0xFF000000) >> 24;
 800eaee:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_PAGEPROG4ADD;
 800eaf0:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eaf4:	6820      	ldr	r0, [r4, #0]
      tx[1] = (address & 0xFF000000) >> 24;
 800eaf6:	f88d 5009 	strb.w	r5, [sp, #9]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eafa:	2364      	movs	r3, #100	@ 0x64
 800eafc:	a902      	add	r1, sp, #8
 800eafe:	2205      	movs	r2, #5
 800eb00:	f7fb f8fc 	bl	8009cfc <HAL_SPI_Transmit>
 800eb04:	2800      	cmp	r0, #0
 800eb06:	d0d2      	beq.n	800eaae <SPIF_WriteFn+0xb6>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb08:	8a21      	ldrh	r1, [r4, #16]
 800eb0a:	6860      	ldr	r0, [r4, #4]
 800eb0c:	2201      	movs	r2, #1
 800eb0e:	f7f7 fdff 	bl	8006710 <HAL_GPIO_WritePin>
}
 800eb12:	e778      	b.n	800ea06 <SPIF_WriteFn+0xe>

0800eb14 <SPIF_ReadFn>:

/***********************************************************************************************************/

bool SPIF_ReadFn(SPIF_HandleTypeDef *Handle, uint32_t Address, uint8_t *Data, uint32_t Size)
{
 800eb14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb16:	4604      	mov	r4, r0
 800eb18:	460d      	mov	r5, r1
 800eb1a:	b083      	sub	sp, #12
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb1c:	8a01      	ldrh	r1, [r0, #16]
 800eb1e:	6840      	ldr	r0, [r0, #4]
{
 800eb20:	4617      	mov	r7, r2
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb22:	2200      	movs	r2, #0
{
 800eb24:	461e      	mov	r6, r3
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb26:	f7f7 fdf3 	bl	8006710 <HAL_GPIO_WritePin>
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_ReadAddress() START ADDRESS %ld\r\n", Address);
    SPIF_CsPin(Handle, 0);
    if (Handle->BlockCnt >= 512)
 800eb2a:	69e1      	ldr	r1, [r4, #28]
 800eb2c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
    {
      tx[0] = SPIF_CMD_READDATA4ADD;
      tx[1] = (Address & 0xFF000000) >> 24;
      tx[2] = (Address & 0x00FF0000) >> 16;
 800eb30:	f3c5 4007 	ubfx	r0, r5, #16, #8
      tx[3] = (Address & 0x0000FF00) >> 8;
 800eb34:	f3c5 2307 	ubfx	r3, r5, #8, #8
    if (Handle->BlockCnt >= 512)
 800eb38:	d31b      	bcc.n	800eb72 <SPIF_ReadFn+0x5e>
      tx[0] = SPIF_CMD_READDATA4ADD;
 800eb3a:	b2ea      	uxtb	r2, r5
      tx[4] = (Address & 0x000000FF);
 800eb3c:	f88d 2004 	strb.w	r2, [sp, #4]
      tx[0] = SPIF_CMD_READDATA4ADD;
 800eb40:	2213      	movs	r2, #19
      tx[2] = (Address & 0x00FF0000) >> 16;
 800eb42:	f88d 0002 	strb.w	r0, [sp, #2]
      tx[3] = (Address & 0x0000FF00) >> 8;
 800eb46:	f88d 3003 	strb.w	r3, [sp, #3]
      tx[1] = (Address & 0xFF000000) >> 24;
 800eb4a:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_READDATA4ADD;
 800eb4c:	f88d 2000 	strb.w	r2, [sp]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb50:	6820      	ldr	r0, [r4, #0]
      tx[1] = (Address & 0xFF000000) >> 24;
 800eb52:	f88d 5001 	strb.w	r5, [sp, #1]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb56:	2364      	movs	r3, #100	@ 0x64
 800eb58:	2205      	movs	r2, #5
 800eb5a:	4669      	mov	r1, sp
 800eb5c:	f7fb f8ce 	bl	8009cfc <HAL_SPI_Transmit>
 800eb60:	b1b8      	cbz	r0, 800eb92 <SPIF_ReadFn+0x7e>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eb62:	6860      	ldr	r0, [r4, #4]
 800eb64:	8a21      	ldrh	r1, [r4, #16]
 800eb66:	2201      	movs	r2, #1
 800eb68:	f7f7 fdd2 	bl	8006710 <HAL_GPIO_WritePin>
  bool retVal = false;
 800eb6c:	2000      	movs	r0, #0
    retVal = true;

  } while (0);

  return retVal;
}
 800eb6e:	b003      	add	sp, #12
 800eb70:	bdf0      	pop	{r4, r5, r6, r7, pc}
      tx[0] = SPIF_CMD_READDATA3ADD;
 800eb72:	2203      	movs	r2, #3
      tx[1] = (Address & 0x00FF0000) >> 16;
 800eb74:	f88d 0001 	strb.w	r0, [sp, #1]
      tx[2] = (Address & 0x0000FF00) >> 8;
 800eb78:	ba6d      	rev16	r5, r5
      tx[0] = SPIF_CMD_READDATA3ADD;
 800eb7a:	f88d 2000 	strb.w	r2, [sp]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb7e:	6820      	ldr	r0, [r4, #0]
      tx[2] = (Address & 0x0000FF00) >> 8;
 800eb80:	f8ad 5002 	strh.w	r5, [sp, #2]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eb84:	2364      	movs	r3, #100	@ 0x64
 800eb86:	2204      	movs	r2, #4
 800eb88:	4669      	mov	r1, sp
 800eb8a:	f7fb f8b7 	bl	8009cfc <HAL_SPI_Transmit>
 800eb8e:	2800      	cmp	r0, #0
 800eb90:	d1e7      	bne.n	800eb62 <SPIF_ReadFn+0x4e>
  if (HAL_SPI_Receive(Handle->HSpi, Rx, Size, Timeout) == HAL_OK)
 800eb92:	6820      	ldr	r0, [r4, #0]
 800eb94:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 800eb98:	b2b2      	uxth	r2, r6
 800eb9a:	4639      	mov	r1, r7
 800eb9c:	f7fb fbc6 	bl	800a32c <HAL_SPI_Receive>
 800eba0:	2800      	cmp	r0, #0
 800eba2:	d1de      	bne.n	800eb62 <SPIF_ReadFn+0x4e>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eba4:	6860      	ldr	r0, [r4, #4]
 800eba6:	8a21      	ldrh	r1, [r4, #16]
 800eba8:	2201      	movs	r2, #1
 800ebaa:	f7f7 fdb1 	bl	8006710 <HAL_GPIO_WritePin>
    retVal = true;
 800ebae:	2001      	movs	r0, #1
}
 800ebb0:	b003      	add	sp, #12
 800ebb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ebb4 <SPIF_Init>:
bool SPIF_Init(SPIF_HandleTypeDef *Handle, SPI_HandleTypeDef *HSpi, GPIO_TypeDef *Gpio, uint16_t Pin)
{
  bool retVal = false;
  do
  {
    if ((Handle == NULL) || (HSpi == NULL) || (Gpio == NULL) || (Handle->Inited == 1))
 800ebb4:	2800      	cmp	r0, #0
 800ebb6:	d044      	beq.n	800ec42 <SPIF_Init+0x8e>
 800ebb8:	2900      	cmp	r1, #0
 800ebba:	d042      	beq.n	800ec42 <SPIF_Init+0x8e>
{
 800ebbc:	b530      	push	{r4, r5, lr}
 800ebbe:	4615      	mov	r5, r2
 800ebc0:	b083      	sub	sp, #12
    if ((Handle == NULL) || (HSpi == NULL) || (Gpio == NULL) || (Handle->Inited == 1))
 800ebc2:	b11a      	cbz	r2, 800ebcc <SPIF_Init+0x18>
 800ebc4:	7a82      	ldrb	r2, [r0, #10]
 800ebc6:	2a01      	cmp	r2, #1
 800ebc8:	4604      	mov	r4, r0
 800ebca:	d102      	bne.n	800ebd2 <SPIF_Init+0x1e>
  bool retVal = false;
 800ebcc:	2000      	movs	r0, #0
    }

  } while (0);

  return retVal;
}
 800ebce:	b003      	add	sp, #12
 800ebd0:	bd30      	pop	{r4, r5, pc}
    memset(Handle, 0, sizeof(SPIF_HandleTypeDef));
 800ebd2:	2200      	movs	r2, #0
    Handle->Gpio = Gpio;
 800ebd4:	e9c0 1500 	strd	r1, r5, [r0]
    memset(Handle, 0, sizeof(SPIF_HandleTypeDef));
 800ebd8:	6082      	str	r2, [r0, #8]
 800ebda:	60c2      	str	r2, [r0, #12]
 800ebdc:	6142      	str	r2, [r0, #20]
 800ebde:	6182      	str	r2, [r0, #24]
 800ebe0:	61c2      	str	r2, [r0, #28]
    Handle->Pin = Pin;
 800ebe2:	6103      	str	r3, [r0, #16]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ebe4:	2201      	movs	r2, #1
 800ebe6:	4619      	mov	r1, r3
 800ebe8:	4628      	mov	r0, r5
 800ebea:	f7f7 fd91 	bl	8006710 <HAL_GPIO_WritePin>
}
 800ebee:	e001      	b.n	800ebf4 <SPIF_Init+0x40>
  osDelay(d);
 800ebf0:	f7fe fcb2 	bl	800d558 <osDelay>
    while (HAL_GetTick() < 20)
 800ebf4:	f7f6 fdb6 	bl	8005764 <HAL_GetTick>
 800ebf8:	2813      	cmp	r0, #19
  osDelay(d);
 800ebfa:	f04f 0001 	mov.w	r0, #1
    while (HAL_GetTick() < 20)
 800ebfe:	d9f7      	bls.n	800ebf0 <SPIF_Init+0x3c>
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ec00:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec02:	8a21      	ldrh	r1, [r4, #16]
 800ec04:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ec06:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec0a:	2200      	movs	r2, #0
 800ec0c:	f7f7 fd80 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ec10:	a901      	add	r1, sp, #4
 800ec12:	6820      	ldr	r0, [r4, #0]
 800ec14:	2364      	movs	r3, #100	@ 0x64
 800ec16:	2201      	movs	r2, #1
 800ec18:	f7fb f870 	bl	8009cfc <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec1c:	8a21      	ldrh	r1, [r4, #16]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ec1e:	b120      	cbz	r0, 800ec2a <SPIF_Init+0x76>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec20:	6860      	ldr	r0, [r4, #4]
 800ec22:	2201      	movs	r2, #1
 800ec24:	f7f7 fd74 	bl	8006710 <HAL_GPIO_WritePin>
  return retVal;
 800ec28:	e7d0      	b.n	800ebcc <SPIF_Init+0x18>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec2a:	6860      	ldr	r0, [r4, #4]
 800ec2c:	2201      	movs	r2, #1
 800ec2e:	f7f7 fd6f 	bl	8006710 <HAL_GPIO_WritePin>
    retVal = SPIF_FindChip(Handle);
 800ec32:	4620      	mov	r0, r4
 800ec34:	f7ff fe20 	bl	800e878 <SPIF_FindChip>
    if (retVal)
 800ec38:	2800      	cmp	r0, #0
 800ec3a:	d0c7      	beq.n	800ebcc <SPIF_Init+0x18>
      Handle->Inited = 1;
 800ec3c:	2301      	movs	r3, #1
 800ec3e:	72a3      	strb	r3, [r4, #10]
 800ec40:	e7c5      	b.n	800ebce <SPIF_Init+0x1a>
  bool retVal = false;
 800ec42:	2000      	movs	r0, #0
}
 800ec44:	4770      	bx	lr
 800ec46:	bf00      	nop

0800ec48 <SPIF_EraseSector>:
  * @param  Sector: Selected Sector
  *
  * @retval bool: true or false
  */
bool SPIF_EraseSector(SPIF_HandleTypeDef *Handle, uint32_t Sector)
{
 800ec48:	b5f0      	push	{r4, r5, r6, r7, lr}
  while (Handle->Lock)
 800ec4a:	7b03      	ldrb	r3, [r0, #12]
{
 800ec4c:	b085      	sub	sp, #20
 800ec4e:	4604      	mov	r4, r0
 800ec50:	460d      	mov	r5, r1
  while (Handle->Lock)
 800ec52:	b12b      	cbz	r3, 800ec60 <SPIF_EraseSector+0x18>
  osDelay(d);
 800ec54:	2001      	movs	r0, #1
 800ec56:	f7fe fc7f 	bl	800d558 <osDelay>
  while (Handle->Lock)
 800ec5a:	7b23      	ldrb	r3, [r4, #12]
 800ec5c:	2b00      	cmp	r3, #0
 800ec5e:	d1f9      	bne.n	800ec54 <SPIF_EraseSector+0xc>
  {
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_EraseSector() START SECTOR %ld\r\n", Sector);
    if (Sector >= Handle->SectorCnt)
 800ec60:	69a3      	ldr	r3, [r4, #24]
  Handle->Lock = 1;
 800ec62:	2601      	movs	r6, #1
    if (Sector >= Handle->SectorCnt)
 800ec64:	42ab      	cmp	r3, r5
  Handle->Lock = 1;
 800ec66:	7326      	strb	r6, [r4, #12]
    if (Sector >= Handle->SectorCnt)
 800ec68:	d818      	bhi.n	800ec9c <SPIF_EraseSector+0x54>
  bool retVal = false;
 800ec6a:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec6c:	8a21      	ldrh	r1, [r4, #16]
 800ec6e:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ec70:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec72:	2200      	movs	r2, #0
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800ec74:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec78:	f7f7 fd4a 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ec7c:	2364      	movs	r3, #100	@ 0x64
 800ec7e:	a901      	add	r1, sp, #4
 800ec80:	6820      	ldr	r0, [r4, #0]
 800ec82:	2201      	movs	r2, #1
 800ec84:	f7fb f83a 	bl	8009cfc <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec88:	6860      	ldr	r0, [r4, #4]
 800ec8a:	8a21      	ldrh	r1, [r4, #16]
 800ec8c:	2201      	movs	r2, #1
 800ec8e:	f7f7 fd3f 	bl	8006710 <HAL_GPIO_WritePin>
  Handle->Lock = 0;
 800ec92:	2300      	movs	r3, #0
  } while (0);

  SPIF_WriteDisable(Handle);
  SPIF_UnLock(Handle);
  return retVal;
}
 800ec94:	4628      	mov	r0, r5
  Handle->Lock = 0;
 800ec96:	7323      	strb	r3, [r4, #12]
}
 800ec98:	b005      	add	sp, #20
 800ec9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ec9c:	2306      	movs	r3, #6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ec9e:	8a21      	ldrh	r1, [r4, #16]
 800eca0:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800eca2:	f88d 3008 	strb.w	r3, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eca6:	2200      	movs	r2, #0
 800eca8:	f7f7 fd32 	bl	8006710 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ecac:	6820      	ldr	r0, [r4, #0]
 800ecae:	2364      	movs	r3, #100	@ 0x64
 800ecb0:	4632      	mov	r2, r6
 800ecb2:	a902      	add	r1, sp, #8
 800ecb4:	f7fb f822 	bl	8009cfc <HAL_SPI_Transmit>
 800ecb8:	4607      	mov	r7, r0
 800ecba:	2800      	cmp	r0, #0
 800ecbc:	d142      	bne.n	800ed44 <SPIF_EraseSector+0xfc>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ecbe:	8a21      	ldrh	r1, [r4, #16]
 800ecc0:	6860      	ldr	r0, [r4, #4]
 800ecc2:	4632      	mov	r2, r6
 800ecc4:	f7f7 fd24 	bl	8006710 <HAL_GPIO_WritePin>
 800ecc8:	8a21      	ldrh	r1, [r4, #16]
 800ecca:	6860      	ldr	r0, [r4, #4]
 800eccc:	463a      	mov	r2, r7
 800ecce:	f7f7 fd1f 	bl	8006710 <HAL_GPIO_WritePin>
    if (Handle->BlockCnt >= 512)
 800ecd2:	69e2      	ldr	r2, [r4, #28]
  uint32_t address = Sector * SPIF_SECTOR_SIZE;
 800ecd4:	032d      	lsls	r5, r5, #12
      tx[3] = (address & 0x0000FF00) >> 8;
 800ecd6:	0a2b      	lsrs	r3, r5, #8
    if (Handle->BlockCnt >= 512)
 800ecd8:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
      tx[3] = (address & 0x0000FF00) >> 8;
 800ecdc:	b2db      	uxtb	r3, r3
      tx[2] = (address & 0x00FF0000) >> 16;
 800ecde:	f3c5 4107 	ubfx	r1, r5, #16, #8
    if (Handle->BlockCnt >= 512)
 800ece2:	d31e      	bcc.n	800ed22 <SPIF_EraseSector+0xda>
      tx[0] = SPIF_CMD_SECTORERASE4ADD;
 800ece4:	2221      	movs	r2, #33	@ 0x21
      tx[2] = (address & 0x00FF0000) >> 16;
 800ece6:	f88d 100a 	strb.w	r1, [sp, #10]
      tx[3] = (address & 0x0000FF00) >> 8;
 800ecea:	f88d 300b 	strb.w	r3, [sp, #11]
      tx[1] = (address & 0xFF000000) >> 24;
 800ecee:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_SECTORERASE4ADD;
 800ecf0:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ecf4:	6820      	ldr	r0, [r4, #0]
      tx[1] = (address & 0xFF000000) >> 24;
 800ecf6:	f88d 5009 	strb.w	r5, [sp, #9]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ecfa:	2364      	movs	r3, #100	@ 0x64
 800ecfc:	a902      	add	r1, sp, #8
 800ecfe:	2205      	movs	r2, #5
      tx[4] = (address & 0x000000FF);
 800ed00:	f88d 700c 	strb.w	r7, [sp, #12]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ed04:	f7fa fffa 	bl	8009cfc <HAL_SPI_Transmit>
 800ed08:	b9e0      	cbnz	r0, 800ed44 <SPIF_EraseSector+0xfc>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ed0a:	8a21      	ldrh	r1, [r4, #16]
 800ed0c:	6860      	ldr	r0, [r4, #4]
 800ed0e:	2201      	movs	r2, #1
 800ed10:	f7f7 fcfe 	bl	8006710 <HAL_GPIO_WritePin>
    if (SPIF_WaitForWriting(Handle, 1000))
 800ed14:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800ed18:	4620      	mov	r0, r4
 800ed1a:	f7ff fd73 	bl	800e804 <SPIF_WaitForWriting>
 800ed1e:	4605      	mov	r5, r0
 800ed20:	e7a4      	b.n	800ec6c <SPIF_EraseSector+0x24>
      tx[0] = SPIF_CMD_SECTORERASE3ADD;
 800ed22:	2220      	movs	r2, #32
      tx[1] = (address & 0x00FF0000) >> 16;
 800ed24:	f88d 1009 	strb.w	r1, [sp, #9]
      tx[2] = (address & 0x0000FF00) >> 8;
 800ed28:	f88d 300a 	strb.w	r3, [sp, #10]
      tx[0] = SPIF_CMD_SECTORERASE3ADD;
 800ed2c:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ed30:	6820      	ldr	r0, [r4, #0]
      tx[3] = (address & 0x000000FF);
 800ed32:	f88d 700b 	strb.w	r7, [sp, #11]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ed36:	a902      	add	r1, sp, #8
 800ed38:	2364      	movs	r3, #100	@ 0x64
 800ed3a:	2204      	movs	r2, #4
 800ed3c:	f7fa ffde 	bl	8009cfc <HAL_SPI_Transmit>
 800ed40:	2800      	cmp	r0, #0
 800ed42:	d0e2      	beq.n	800ed0a <SPIF_EraseSector+0xc2>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ed44:	8a21      	ldrh	r1, [r4, #16]
 800ed46:	6860      	ldr	r0, [r4, #4]
 800ed48:	4632      	mov	r2, r6
 800ed4a:	f7f7 fce1 	bl	8006710 <HAL_GPIO_WritePin>
  return retVal;
 800ed4e:	e78c      	b.n	800ec6a <SPIF_EraseSector+0x22>

0800ed50 <SPIF_WritePage>:
  * @param  Offset: The start point for writing data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_WritePage(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800ed50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed54:	4698      	mov	r8, r3
  while (Handle->Lock)
 800ed56:	7b03      	ldrb	r3, [r0, #12]
{
 800ed58:	b082      	sub	sp, #8
 800ed5a:	4605      	mov	r5, r0
 800ed5c:	460e      	mov	r6, r1
 800ed5e:	4617      	mov	r7, r2
  while (Handle->Lock)
 800ed60:	b12b      	cbz	r3, 800ed6e <SPIF_WritePage+0x1e>
  osDelay(d);
 800ed62:	2001      	movs	r0, #1
 800ed64:	f7fe fbf8 	bl	800d558 <osDelay>
  while (Handle->Lock)
 800ed68:	7b2c      	ldrb	r4, [r5, #12]
 800ed6a:	2c00      	cmp	r4, #0
 800ed6c:	d1f9      	bne.n	800ed62 <SPIF_WritePage+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800ed6e:	9b08      	ldr	r3, [sp, #32]
 800ed70:	9300      	str	r3, [sp, #0]
  Handle->Lock = 1;
 800ed72:	2401      	movs	r4, #1
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800ed74:	4643      	mov	r3, r8
 800ed76:	463a      	mov	r2, r7
 800ed78:	4631      	mov	r1, r6
 800ed7a:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800ed7c:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800ed7e:	f7ff fe3b 	bl	800e9f8 <SPIF_WriteFn>
  Handle->Lock = 0;
 800ed82:	2300      	movs	r3, #0
 800ed84:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800ed86:	b002      	add	sp, #8
 800ed88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed8c <SPIF_ReadPage>:
  * @param  Offset: The start point for Reading data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_ReadPage(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800ed8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ed90:	461f      	mov	r7, r3
  while (Handle->Lock)
 800ed92:	7b03      	ldrb	r3, [r0, #12]
{
 800ed94:	9e08      	ldr	r6, [sp, #32]
 800ed96:	4605      	mov	r5, r0
 800ed98:	4688      	mov	r8, r1
 800ed9a:	4691      	mov	r9, r2
  while (Handle->Lock)
 800ed9c:	b12b      	cbz	r3, 800edaa <SPIF_ReadPage+0x1e>
  osDelay(d);
 800ed9e:	2001      	movs	r0, #1
 800eda0:	f7fe fbda 	bl	800d558 <osDelay>
  while (Handle->Lock)
 800eda4:	7b2c      	ldrb	r4, [r5, #12]
 800eda6:	2c00      	cmp	r4, #0
 800eda8:	d1f9      	bne.n	800ed9e <SPIF_ReadPage+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  uint32_t address = SPIF_PageToAddress(PageNumber) + Offset;
  uint32_t maximum = SPIF_PAGE_SIZE - Offset;
 800edaa:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
  if (Size > maximum)
  {
    Size = maximum;
  }
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edae:	42bb      	cmp	r3, r7
  Handle->Lock = 1;
 800edb0:	f04f 0401 	mov.w	r4, #1
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edb4:	bf28      	it	cs
 800edb6:	463b      	movcs	r3, r7
 800edb8:	464a      	mov	r2, r9
 800edba:	eb06 2108 	add.w	r1, r6, r8, lsl #8
 800edbe:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800edc0:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edc2:	f7ff fea7 	bl	800eb14 <SPIF_ReadFn>
  Handle->Lock = 0;
 800edc6:	2300      	movs	r3, #0
 800edc8:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800edca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edce:	bf00      	nop

0800edd0 <SPIF_ReadSector>:
  * @param  Offset: The start point for Reading data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_ReadSector(SPIF_HandleTypeDef *Handle, uint32_t SectorNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800edd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800edd4:	461f      	mov	r7, r3
  while (Handle->Lock)
 800edd6:	7b03      	ldrb	r3, [r0, #12]
{
 800edd8:	9e08      	ldr	r6, [sp, #32]
 800edda:	4605      	mov	r5, r0
 800eddc:	4688      	mov	r8, r1
 800edde:	4691      	mov	r9, r2
  while (Handle->Lock)
 800ede0:	b12b      	cbz	r3, 800edee <SPIF_ReadSector+0x1e>
  osDelay(d);
 800ede2:	2001      	movs	r0, #1
 800ede4:	f7fe fbb8 	bl	800d558 <osDelay>
  while (Handle->Lock)
 800ede8:	7b2c      	ldrb	r4, [r5, #12]
 800edea:	2c00      	cmp	r4, #0
 800edec:	d1f9      	bne.n	800ede2 <SPIF_ReadSector+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  uint32_t address = SPIF_SectorToAddress(SectorNumber) + Offset;
  uint32_t maximum = SPIF_SECTOR_SIZE - Offset;
 800edee:	f5c6 5380 	rsb	r3, r6, #4096	@ 0x1000
  if (Size > maximum)
  {
    Size = maximum;
  }
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edf2:	42bb      	cmp	r3, r7
  Handle->Lock = 1;
 800edf4:	f04f 0401 	mov.w	r4, #1
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800edf8:	bf28      	it	cs
 800edfa:	463b      	movcs	r3, r7
 800edfc:	464a      	mov	r2, r9
 800edfe:	eb06 3108 	add.w	r1, r6, r8, lsl #12
 800ee02:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800ee04:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800ee06:	f7ff fe85 	bl	800eb14 <SPIF_ReadFn>
  Handle->Lock = 0;
 800ee0a:	2300      	movs	r3, #0
 800ee0c:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800ee0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ee12:	bf00      	nop

0800ee14 <MX_USB_Device_Init>:
 800ee14:	b508      	push	{r3, lr}
 800ee16:	4918      	ldr	r1, [pc, #96]	@ (800ee78 <MX_USB_Device_Init+0x64>)
 800ee18:	4818      	ldr	r0, [pc, #96]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee1a:	2200      	movs	r2, #0
 800ee1c:	f7fd feb8 	bl	800cb90 <USBD_Init>
 800ee20:	b970      	cbnz	r0, 800ee40 <MX_USB_Device_Init+0x2c>
 800ee22:	4917      	ldr	r1, [pc, #92]	@ (800ee80 <MX_USB_Device_Init+0x6c>)
 800ee24:	4815      	ldr	r0, [pc, #84]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee26:	f7fd fec7 	bl	800cbb8 <USBD_RegisterClass>
 800ee2a:	b988      	cbnz	r0, 800ee50 <MX_USB_Device_Init+0x3c>
 800ee2c:	4915      	ldr	r1, [pc, #84]	@ (800ee84 <MX_USB_Device_Init+0x70>)
 800ee2e:	4813      	ldr	r0, [pc, #76]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee30:	f7fd fe52 	bl	800cad8 <USBD_CDC_RegisterInterface>
 800ee34:	b9a0      	cbnz	r0, 800ee60 <MX_USB_Device_Init+0x4c>
 800ee36:	4811      	ldr	r0, [pc, #68]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee38:	f7fd feda 	bl	800cbf0 <USBD_Start>
 800ee3c:	b9b8      	cbnz	r0, 800ee6e <MX_USB_Device_Init+0x5a>
 800ee3e:	bd08      	pop	{r3, pc}
 800ee40:	f7f3 fa22 	bl	8002288 <Error_Handler>
 800ee44:	490e      	ldr	r1, [pc, #56]	@ (800ee80 <MX_USB_Device_Init+0x6c>)
 800ee46:	480d      	ldr	r0, [pc, #52]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee48:	f7fd feb6 	bl	800cbb8 <USBD_RegisterClass>
 800ee4c:	2800      	cmp	r0, #0
 800ee4e:	d0ed      	beq.n	800ee2c <MX_USB_Device_Init+0x18>
 800ee50:	f7f3 fa1a 	bl	8002288 <Error_Handler>
 800ee54:	490b      	ldr	r1, [pc, #44]	@ (800ee84 <MX_USB_Device_Init+0x70>)
 800ee56:	4809      	ldr	r0, [pc, #36]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee58:	f7fd fe3e 	bl	800cad8 <USBD_CDC_RegisterInterface>
 800ee5c:	2800      	cmp	r0, #0
 800ee5e:	d0ea      	beq.n	800ee36 <MX_USB_Device_Init+0x22>
 800ee60:	f7f3 fa12 	bl	8002288 <Error_Handler>
 800ee64:	4805      	ldr	r0, [pc, #20]	@ (800ee7c <MX_USB_Device_Init+0x68>)
 800ee66:	f7fd fec3 	bl	800cbf0 <USBD_Start>
 800ee6a:	2800      	cmp	r0, #0
 800ee6c:	d0e7      	beq.n	800ee3e <MX_USB_Device_Init+0x2a>
 800ee6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ee72:	f7f3 ba09 	b.w	8002288 <Error_Handler>
 800ee76:	bf00      	nop
 800ee78:	20000114 	.word	0x20000114
 800ee7c:	20004070 	.word	0x20004070
 800ee80:	20000084 	.word	0x20000084
 800ee84:	200000cc 	.word	0x200000cc

0800ee88 <CDC_DeInit_FS>:
 800ee88:	2000      	movs	r0, #0
 800ee8a:	4770      	bx	lr

0800ee8c <CDC_Control_FS>:
 800ee8c:	2000      	movs	r0, #0
 800ee8e:	4770      	bx	lr

0800ee90 <CDC_TransmitCplt_FS>:
 800ee90:	2000      	movs	r0, #0
 800ee92:	4770      	bx	lr

0800ee94 <CDC_Receive_FS>:
 800ee94:	b570      	push	{r4, r5, r6, lr}
 800ee96:	4e0e      	ldr	r6, [pc, #56]	@ (800eed0 <CDC_Receive_FS+0x3c>)
 800ee98:	4604      	mov	r4, r0
 800ee9a:	460d      	mov	r5, r1
 800ee9c:	4630      	mov	r0, r6
 800ee9e:	4621      	mov	r1, r4
 800eea0:	f7fd fe34 	bl	800cb0c <USBD_CDC_SetRxBuffer>
 800eea4:	4630      	mov	r0, r6
 800eea6:	f7fd fe59 	bl	800cb5c <USBD_CDC_ReceivePacket>
 800eeaa:	4b0a      	ldr	r3, [pc, #40]	@ (800eed4 <CDC_Receive_FS+0x40>)
 800eeac:	2240      	movs	r2, #64	@ 0x40
 800eeae:	4618      	mov	r0, r3
 800eeb0:	2100      	movs	r1, #0
 800eeb2:	f001 fae8 	bl	8010486 <memset>
 800eeb6:	782d      	ldrb	r5, [r5, #0]
 800eeb8:	4621      	mov	r1, r4
 800eeba:	462a      	mov	r2, r5
 800eebc:	f001 fb63 	bl	8010586 <memcpy>
 800eec0:	462a      	mov	r2, r5
 800eec2:	2100      	movs	r1, #0
 800eec4:	4620      	mov	r0, r4
 800eec6:	f001 fade 	bl	8010486 <memset>
 800eeca:	2000      	movs	r0, #0
 800eecc:	bd70      	pop	{r4, r5, r6, pc}
 800eece:	bf00      	nop
 800eed0:	20004070 	.word	0x20004070
 800eed4:	20000640 	.word	0x20000640

0800eed8 <CDC_Init_FS>:
 800eed8:	b510      	push	{r4, lr}
 800eeda:	4c06      	ldr	r4, [pc, #24]	@ (800eef4 <CDC_Init_FS+0x1c>)
 800eedc:	4906      	ldr	r1, [pc, #24]	@ (800eef8 <CDC_Init_FS+0x20>)
 800eede:	2200      	movs	r2, #0
 800eee0:	4620      	mov	r0, r4
 800eee2:	f7fd fe05 	bl	800caf0 <USBD_CDC_SetTxBuffer>
 800eee6:	4905      	ldr	r1, [pc, #20]	@ (800eefc <CDC_Init_FS+0x24>)
 800eee8:	4620      	mov	r0, r4
 800eeea:	f7fd fe0f 	bl	800cb0c <USBD_CDC_SetRxBuffer>
 800eeee:	2000      	movs	r0, #0
 800eef0:	bd10      	pop	{r4, pc}
 800eef2:	bf00      	nop
 800eef4:	20004070 	.word	0x20004070
 800eef8:	2000434c 	.word	0x2000434c
 800eefc:	20004b4c 	.word	0x20004b4c

0800ef00 <CDC_Transmit_FS>:
 800ef00:	b510      	push	{r4, lr}
 800ef02:	4c09      	ldr	r4, [pc, #36]	@ (800ef28 <CDC_Transmit_FS+0x28>)
 800ef04:	f8d4 32bc 	ldr.w	r3, [r4, #700]	@ 0x2bc
 800ef08:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 800ef0c:	b10b      	cbz	r3, 800ef12 <CDC_Transmit_FS+0x12>
 800ef0e:	2001      	movs	r0, #1
 800ef10:	bd10      	pop	{r4, pc}
 800ef12:	460a      	mov	r2, r1
 800ef14:	4601      	mov	r1, r0
 800ef16:	4620      	mov	r0, r4
 800ef18:	f7fd fdea 	bl	800caf0 <USBD_CDC_SetTxBuffer>
 800ef1c:	4620      	mov	r0, r4
 800ef1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef22:	f7fd bdff 	b.w	800cb24 <USBD_CDC_TransmitPacket>
 800ef26:	bf00      	nop
 800ef28:	20004070 	.word	0x20004070

0800ef2c <USBD_CDC_DeviceDescriptor>:
 800ef2c:	2312      	movs	r3, #18
 800ef2e:	4801      	ldr	r0, [pc, #4]	@ (800ef34 <USBD_CDC_DeviceDescriptor+0x8>)
 800ef30:	800b      	strh	r3, [r1, #0]
 800ef32:	4770      	bx	lr
 800ef34:	20000100 	.word	0x20000100

0800ef38 <USBD_CDC_LangIDStrDescriptor>:
 800ef38:	2304      	movs	r3, #4
 800ef3a:	4801      	ldr	r0, [pc, #4]	@ (800ef40 <USBD_CDC_LangIDStrDescriptor+0x8>)
 800ef3c:	800b      	strh	r3, [r1, #0]
 800ef3e:	4770      	bx	lr
 800ef40:	200000fc 	.word	0x200000fc

0800ef44 <USBD_CDC_ManufacturerStrDescriptor>:
 800ef44:	b510      	push	{r4, lr}
 800ef46:	4c04      	ldr	r4, [pc, #16]	@ (800ef58 <USBD_CDC_ManufacturerStrDescriptor+0x14>)
 800ef48:	4804      	ldr	r0, [pc, #16]	@ (800ef5c <USBD_CDC_ManufacturerStrDescriptor+0x18>)
 800ef4a:	460a      	mov	r2, r1
 800ef4c:	4621      	mov	r1, r4
 800ef4e:	f7fe fa67 	bl	800d420 <USBD_GetString>
 800ef52:	4620      	mov	r0, r4
 800ef54:	bd10      	pop	{r4, pc}
 800ef56:	bf00      	nop
 800ef58:	2000534c 	.word	0x2000534c
 800ef5c:	080162cc 	.word	0x080162cc

0800ef60 <USBD_CDC_ProductStrDescriptor>:
 800ef60:	b510      	push	{r4, lr}
 800ef62:	4c04      	ldr	r4, [pc, #16]	@ (800ef74 <USBD_CDC_ProductStrDescriptor+0x14>)
 800ef64:	4804      	ldr	r0, [pc, #16]	@ (800ef78 <USBD_CDC_ProductStrDescriptor+0x18>)
 800ef66:	460a      	mov	r2, r1
 800ef68:	4621      	mov	r1, r4
 800ef6a:	f7fe fa59 	bl	800d420 <USBD_GetString>
 800ef6e:	4620      	mov	r0, r4
 800ef70:	bd10      	pop	{r4, pc}
 800ef72:	bf00      	nop
 800ef74:	2000534c 	.word	0x2000534c
 800ef78:	080162e0 	.word	0x080162e0

0800ef7c <USBD_CDC_ConfigStrDescriptor>:
 800ef7c:	b510      	push	{r4, lr}
 800ef7e:	4c04      	ldr	r4, [pc, #16]	@ (800ef90 <USBD_CDC_ConfigStrDescriptor+0x14>)
 800ef80:	4804      	ldr	r0, [pc, #16]	@ (800ef94 <USBD_CDC_ConfigStrDescriptor+0x18>)
 800ef82:	460a      	mov	r2, r1
 800ef84:	4621      	mov	r1, r4
 800ef86:	f7fe fa4b 	bl	800d420 <USBD_GetString>
 800ef8a:	4620      	mov	r0, r4
 800ef8c:	bd10      	pop	{r4, pc}
 800ef8e:	bf00      	nop
 800ef90:	2000534c 	.word	0x2000534c
 800ef94:	080162f8 	.word	0x080162f8

0800ef98 <USBD_CDC_InterfaceStrDescriptor>:
 800ef98:	b510      	push	{r4, lr}
 800ef9a:	4c04      	ldr	r4, [pc, #16]	@ (800efac <USBD_CDC_InterfaceStrDescriptor+0x14>)
 800ef9c:	4804      	ldr	r0, [pc, #16]	@ (800efb0 <USBD_CDC_InterfaceStrDescriptor+0x18>)
 800ef9e:	460a      	mov	r2, r1
 800efa0:	4621      	mov	r1, r4
 800efa2:	f7fe fa3d 	bl	800d420 <USBD_GetString>
 800efa6:	4620      	mov	r0, r4
 800efa8:	bd10      	pop	{r4, pc}
 800efaa:	bf00      	nop
 800efac:	2000534c 	.word	0x2000534c
 800efb0:	08016304 	.word	0x08016304

0800efb4 <USBD_CDC_SerialStrDescriptor>:
 800efb4:	4a51      	ldr	r2, [pc, #324]	@ (800f0fc <USBD_CDC_SerialStrDescriptor+0x148>)
 800efb6:	f8d2 3590 	ldr.w	r3, [r2, #1424]	@ 0x590
 800efba:	f8d2 0598 	ldr.w	r0, [r2, #1432]	@ 0x598
 800efbe:	f04f 0c1a 	mov.w	ip, #26
 800efc2:	181b      	adds	r3, r3, r0
 800efc4:	f8a1 c000 	strh.w	ip, [r1]
 800efc8:	d101      	bne.n	800efce <USBD_CDC_SerialStrDescriptor+0x1a>
 800efca:	484d      	ldr	r0, [pc, #308]	@ (800f100 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800efcc:	4770      	bx	lr
 800efce:	f8d2 1594 	ldr.w	r1, [r2, #1428]	@ 0x594
 800efd2:	4a4b      	ldr	r2, [pc, #300]	@ (800f100 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800efd4:	0f18      	lsrs	r0, r3, #28
 800efd6:	f1b3 4f20 	cmp.w	r3, #2684354560	@ 0xa0000000
 800efda:	f04f 0c00 	mov.w	ip, #0
 800efde:	bf2c      	ite	cs
 800efe0:	3037      	addcs	r0, #55	@ 0x37
 800efe2:	3030      	addcc	r0, #48	@ 0x30
 800efe4:	f882 c003 	strb.w	ip, [r2, #3]
 800efe8:	f3c3 6c03 	ubfx	ip, r3, #24, #4
 800efec:	f1bc 0f09 	cmp.w	ip, #9
 800eff0:	7090      	strb	r0, [r2, #2]
 800eff2:	4660      	mov	r0, ip
 800eff4:	f04f 0c00 	mov.w	ip, #0
 800eff8:	bf8c      	ite	hi
 800effa:	3037      	addhi	r0, #55	@ 0x37
 800effc:	3030      	addls	r0, #48	@ 0x30
 800effe:	f882 c005 	strb.w	ip, [r2, #5]
 800f002:	f3c3 5c03 	ubfx	ip, r3, #20, #4
 800f006:	f1bc 0f09 	cmp.w	ip, #9
 800f00a:	7110      	strb	r0, [r2, #4]
 800f00c:	4660      	mov	r0, ip
 800f00e:	f04f 0c00 	mov.w	ip, #0
 800f012:	bf8c      	ite	hi
 800f014:	3037      	addhi	r0, #55	@ 0x37
 800f016:	3030      	addls	r0, #48	@ 0x30
 800f018:	f882 c007 	strb.w	ip, [r2, #7]
 800f01c:	f3c3 4c03 	ubfx	ip, r3, #16, #4
 800f020:	f1bc 0f09 	cmp.w	ip, #9
 800f024:	7190      	strb	r0, [r2, #6]
 800f026:	4660      	mov	r0, ip
 800f028:	f04f 0c00 	mov.w	ip, #0
 800f02c:	bf8c      	ite	hi
 800f02e:	3037      	addhi	r0, #55	@ 0x37
 800f030:	3030      	addls	r0, #48	@ 0x30
 800f032:	f882 c009 	strb.w	ip, [r2, #9]
 800f036:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 800f03a:	f1bc 0f09 	cmp.w	ip, #9
 800f03e:	7210      	strb	r0, [r2, #8]
 800f040:	4660      	mov	r0, ip
 800f042:	f04f 0c00 	mov.w	ip, #0
 800f046:	bf8c      	ite	hi
 800f048:	3037      	addhi	r0, #55	@ 0x37
 800f04a:	3030      	addls	r0, #48	@ 0x30
 800f04c:	f882 c00b 	strb.w	ip, [r2, #11]
 800f050:	f3c3 2c03 	ubfx	ip, r3, #8, #4
 800f054:	f1bc 0f09 	cmp.w	ip, #9
 800f058:	7290      	strb	r0, [r2, #10]
 800f05a:	4660      	mov	r0, ip
 800f05c:	f04f 0c00 	mov.w	ip, #0
 800f060:	bf8c      	ite	hi
 800f062:	3037      	addhi	r0, #55	@ 0x37
 800f064:	3030      	addls	r0, #48	@ 0x30
 800f066:	f882 c00d 	strb.w	ip, [r2, #13]
 800f06a:	f3c3 1c03 	ubfx	ip, r3, #4, #4
 800f06e:	f1bc 0f09 	cmp.w	ip, #9
 800f072:	7310      	strb	r0, [r2, #12]
 800f074:	4660      	mov	r0, ip
 800f076:	bf8c      	ite	hi
 800f078:	3037      	addhi	r0, #55	@ 0x37
 800f07a:	3030      	addls	r0, #48	@ 0x30
 800f07c:	7390      	strb	r0, [r2, #14]
 800f07e:	f003 000f 	and.w	r0, r3, #15
 800f082:	4603      	mov	r3, r0
 800f084:	2809      	cmp	r0, #9
 800f086:	bf94      	ite	ls
 800f088:	3330      	addls	r3, #48	@ 0x30
 800f08a:	3337      	addhi	r3, #55	@ 0x37
 800f08c:	2000      	movs	r0, #0
 800f08e:	f1b1 4f20 	cmp.w	r1, #2684354560	@ 0xa0000000
 800f092:	7413      	strb	r3, [r2, #16]
 800f094:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800f098:	bf2c      	ite	cs
 800f09a:	3337      	addcs	r3, #55	@ 0x37
 800f09c:	3330      	addcc	r3, #48	@ 0x30
 800f09e:	7450      	strb	r0, [r2, #17]
 800f0a0:	f3c1 6003 	ubfx	r0, r1, #24, #4
 800f0a4:	2809      	cmp	r0, #9
 800f0a6:	7493      	strb	r3, [r2, #18]
 800f0a8:	4603      	mov	r3, r0
 800f0aa:	bf8c      	ite	hi
 800f0ac:	3337      	addhi	r3, #55	@ 0x37
 800f0ae:	3330      	addls	r3, #48	@ 0x30
 800f0b0:	f3c1 5003 	ubfx	r0, r1, #20, #4
 800f0b4:	2809      	cmp	r0, #9
 800f0b6:	f04f 0c00 	mov.w	ip, #0
 800f0ba:	7513      	strb	r3, [r2, #20]
 800f0bc:	4603      	mov	r3, r0
 800f0be:	bf8c      	ite	hi
 800f0c0:	3337      	addhi	r3, #55	@ 0x37
 800f0c2:	3330      	addls	r3, #48	@ 0x30
 800f0c4:	f3c1 4003 	ubfx	r0, r1, #16, #4
 800f0c8:	f882 c00f 	strb.w	ip, [r2, #15]
 800f0cc:	f04f 0c00 	mov.w	ip, #0
 800f0d0:	2809      	cmp	r0, #9
 800f0d2:	f882 c013 	strb.w	ip, [r2, #19]
 800f0d6:	7593      	strb	r3, [r2, #22]
 800f0d8:	f04f 0c00 	mov.w	ip, #0
 800f0dc:	4603      	mov	r3, r0
 800f0de:	f882 c015 	strb.w	ip, [r2, #21]
 800f0e2:	bf98      	it	ls
 800f0e4:	3330      	addls	r3, #48	@ 0x30
 800f0e6:	f04f 0c00 	mov.w	ip, #0
 800f0ea:	bf88      	it	hi
 800f0ec:	3337      	addhi	r3, #55	@ 0x37
 800f0ee:	2100      	movs	r1, #0
 800f0f0:	4803      	ldr	r0, [pc, #12]	@ (800f100 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800f0f2:	f882 c017 	strb.w	ip, [r2, #23]
 800f0f6:	7613      	strb	r3, [r2, #24]
 800f0f8:	7651      	strb	r1, [r2, #25]
 800f0fa:	4770      	bx	lr
 800f0fc:	1fff7000 	.word	0x1fff7000
 800f100:	200000e0 	.word	0x200000e0

0800f104 <HAL_PCD_MspInit>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
#else
void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f104:	b530      	push	{r4, r5, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(pcdHandle->Instance==USB)
 800f106:	4b1b      	ldr	r3, [pc, #108]	@ (800f174 <HAL_PCD_MspInit+0x70>)
 800f108:	6802      	ldr	r2, [r0, #0]
{
 800f10a:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800f10c:	2400      	movs	r4, #0
  if(pcdHandle->Instance==USB)
 800f10e:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800f110:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800f114:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800f118:	9406      	str	r4, [sp, #24]
  if(pcdHandle->Instance==USB)
 800f11a:	d001      	beq.n	800f120 <HAL_PCD_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(USB_LP_IRQn);
  /* USER CODE BEGIN USB_MspInit 1 */

  /* USER CODE END USB_MspInit 1 */
  }
}
 800f11c:	b009      	add	sp, #36	@ 0x24
 800f11e:	bd30      	pop	{r4, r5, pc}
  SET_BIT(RCC->AHB2ENR, Periphs);
 800f120:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 800f124:	f44f 52c0 	mov.w	r2, #6144	@ 0x1800
 800f128:	6ceb      	ldr	r3, [r5, #76]	@ 0x4c
 800f12a:	f043 0301 	orr.w	r3, r3, #1
 800f12e:	64eb      	str	r3, [r5, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800f130:	6ceb      	ldr	r3, [r5, #76]	@ 0x4c
 800f132:	f003 0301 	and.w	r3, r3, #1
 800f136:	9301      	str	r3, [sp, #4]
 800f138:	2302      	movs	r3, #2
 800f13a:	e9cd 2302 	strd	r2, r3, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800f13e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF10_USB;
 800f140:	230a      	movs	r3, #10
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800f142:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 800f146:	9a01      	ldr	r2, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF10_USB;
 800f148:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800f14a:	f7f7 f93f 	bl	80063cc <HAL_GPIO_Init>
  SET_BIT(RCC->APB1ENR1, Periphs);
 800f14e:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 800f150:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800f154:	65ab      	str	r3, [r5, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800f156:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 800f158:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
    HAL_NVIC_SetPriority(USB_LP_IRQn, 5, 0);
 800f15c:	2105      	movs	r1, #5
 800f15e:	4622      	mov	r2, r4
 800f160:	9300      	str	r3, [sp, #0]
 800f162:	2014      	movs	r0, #20
  (void)tmpreg;
 800f164:	9b00      	ldr	r3, [sp, #0]
 800f166:	f7f6 ff3f 	bl	8005fe8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_IRQn);
 800f16a:	2014      	movs	r0, #20
 800f16c:	f7f6 ff78 	bl	8006060 <HAL_NVIC_EnableIRQ>
}
 800f170:	b009      	add	sp, #36	@ 0x24
 800f172:	bd30      	pop	{r4, r5, pc}
 800f174:	40006800 	.word	0x40006800

0800f178 <HAL_PCD_SetupStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_SetupStageCallback_PreTreatment */

  /* USER CODE END  HAL_PCD_SetupStageCallback_PreTreatment */
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800f178:	f500 7126 	add.w	r1, r0, #664	@ 0x298
 800f17c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f180:	f7fd bd4a 	b.w	800cc18 <USBD_LL_SetupStage>

0800f184 <HAL_PCD_DataOutStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_DataOutStageCallback_PreTreatment */

  /* USER CODE END HAL_PCD_DataOutStageCallback_PreTreatment */
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 800f184:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800f188:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f18c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f190:	f8d3 2164 	ldr.w	r2, [r3, #356]	@ 0x164
 800f194:	f7fd bd70 	b.w	800cc78 <USBD_LL_DataOutStage>

0800f198 <HAL_PCD_DataInStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_DataInStageCallback_PreTreatment */

  /* USER CODE END HAL_PCD_DataInStageCallback_PreTreatment */
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800f198:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800f19c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f1a0:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f1a4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800f1a6:	f7fd bda1 	b.w	800ccec <USBD_LL_DataInStage>
 800f1aa:	bf00      	nop

0800f1ac <HAL_PCD_SOFCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_SOFCallback_PreTreatment */

  /* USER CODE END HAL_PCD_SOFCallback_PreTreatment */
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800f1ac:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f1b0:	f7fd be42 	b.w	800ce38 <USBD_LL_SOF>

0800f1b4 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f1b4:	b510      	push	{r4, lr}
  /* USER CODE BEGIN HAL_PCD_ResetCallback_PreTreatment */

  /* USER CODE END HAL_PCD_ResetCallback_PreTreatment */
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800f1b6:	7943      	ldrb	r3, [r0, #5]
 800f1b8:	2b02      	cmp	r3, #2
{
 800f1ba:	4604      	mov	r4, r0
  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800f1bc:	d001      	beq.n	800f1c2 <HAL_PCD_ResetCallback+0xe>
  {
    Error_Handler();
 800f1be:	f7f3 f863 	bl	8002288 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800f1c2:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
 800f1c6:	2101      	movs	r1, #1
 800f1c8:	f7fd fe18 	bl	800cdfc <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800f1cc:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
  /* USER CODE BEGIN HAL_PCD_ResetCallback_PostTreatment */

  /* USER CODE END HAL_PCD_ResetCallback_PostTreatment */
}
 800f1d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800f1d4:	f7fd bde4 	b.w	800cda0 <USBD_LL_Reset>

0800f1d8 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f1d8:	b510      	push	{r4, lr}
 800f1da:	4604      	mov	r4, r0
  /* USER CODE BEGIN HAL_PCD_SuspendCallback_PreTreatment */

  /* USER CODE END HAL_PCD_SuspendCallback_PreTreatment */
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800f1dc:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f1e0:	f7fd fe10 	bl	800ce04 <USBD_LL_Suspend>
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 800f1e4:	7a63      	ldrb	r3, [r4, #9]
 800f1e6:	b123      	cbz	r3, 800f1f2 <HAL_PCD_SuspendCallback+0x1a>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f1e8:	4a02      	ldr	r2, [pc, #8]	@ (800f1f4 <HAL_PCD_SuspendCallback+0x1c>)
 800f1ea:	6913      	ldr	r3, [r2, #16]
 800f1ec:	f043 0306 	orr.w	r3, r3, #6
 800f1f0:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
  /* USER CODE BEGIN HAL_PCD_SuspendCallback_PostTreatment */

  /* USER CODE END HAL_PCD_SuspendCallback_PostTreatment */
}
 800f1f2:	bd10      	pop	{r4, pc}
 800f1f4:	e000ed00 	.word	0xe000ed00

0800f1f8 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800f1f8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN HAL_PCD_ResumeCallback_PreTreatment */

  /* USER CODE END HAL_PCD_ResumeCallback_PreTreatment */

  /* USER CODE BEGIN 3 */
  if (hpcd->Init.low_power_enable)
 800f1fa:	7a43      	ldrb	r3, [r0, #9]
{
 800f1fc:	4604      	mov	r4, r0
  if (hpcd->Init.low_power_enable)
 800f1fe:	b92b      	cbnz	r3, 800f20c <HAL_PCD_ResumeCallback+0x14>
    SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
    SystemClockConfig_Resume();
  }
  /* USER CODE END 3 */

  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f200:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
  /* USER CODE BEGIN HAL_PCD_ResumeCallback_PostTreatment */

  /* USER CODE END HAL_PCD_ResumeCallback_PostTreatment */
}
 800f204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f208:	f7fd be0a 	b.w	800ce20 <USBD_LL_Resume>
    SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f20c:	4a06      	ldr	r2, [pc, #24]	@ (800f228 <HAL_PCD_ResumeCallback+0x30>)
 800f20e:	6913      	ldr	r3, [r2, #16]
 800f210:	f023 0306 	bic.w	r3, r3, #6
 800f214:	6113      	str	r3, [r2, #16]
  *         enable HSI, PLL and select PLL as system clock source.
  * @retval None
  */
static void SystemClockConfig_Resume(void)
{
  SystemClock_Config();
 800f216:	f7f2 fe9b 	bl	8001f50 <SystemClock_Config>
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f21a:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
}
 800f21e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800f222:	f7fd bdfd 	b.w	800ce20 <USBD_LL_Resume>
 800f226:	bf00      	nop
 800f228:	e000ed00 	.word	0xe000ed00

0800f22c <USBD_LL_Init>:
{
 800f22c:	b538      	push	{r3, r4, r5, lr}
  hpcd_USB_FS.pData = pdev;
 800f22e:	4d20      	ldr	r5, [pc, #128]	@ (800f2b0 <USBD_LL_Init+0x84>)
 800f230:	f8c5 02d8 	str.w	r0, [r5, #728]	@ 0x2d8
  pdev->pData = &hpcd_USB_FS;
 800f234:	f8c0 52c8 	str.w	r5, [r0, #712]	@ 0x2c8
{
 800f238:	4604      	mov	r4, r0
  HAL_PWREx_EnableVddUSB();
 800f23a:	f7f9 f8bb 	bl	80083b4 <HAL_PWREx_EnableVddUSB>
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800f23e:	f44f 7302 	mov.w	r3, #520	@ 0x208
  hpcd_USB_FS.Instance = USB;
 800f242:	491c      	ldr	r1, [pc, #112]	@ (800f2b4 <USBD_LL_Init+0x88>)
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800f244:	80ab      	strh	r3, [r5, #4]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800f246:	2202      	movs	r2, #2
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800f248:	2300      	movs	r3, #0
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800f24a:	4628      	mov	r0, r5
  hpcd_USB_FS.Instance = USB;
 800f24c:	6029      	str	r1, [r5, #0]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800f24e:	f8c5 2007 	str.w	r2, [r5, #7]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800f252:	72eb      	strb	r3, [r5, #11]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800f254:	f7f8 f88a 	bl	800736c <HAL_PCD_Init>
 800f258:	bb30      	cbnz	r0, 800f2a8 <USBD_LL_Init+0x7c>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 800f25a:	2200      	movs	r2, #0
 800f25c:	4611      	mov	r1, r2
 800f25e:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f262:	2318      	movs	r3, #24
 800f264:	f7f9 f85e 	bl	8008324 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 800f268:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f26c:	2358      	movs	r3, #88	@ 0x58
 800f26e:	2200      	movs	r2, #0
 800f270:	2180      	movs	r1, #128	@ 0x80
 800f272:	f7f9 f857 	bl	8008324 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);
 800f276:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f27a:	23c0      	movs	r3, #192	@ 0xc0
 800f27c:	2200      	movs	r2, #0
 800f27e:	2181      	movs	r1, #129	@ 0x81
 800f280:	f7f9 f850 	bl	8008324 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 800f284:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f288:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800f28c:	2200      	movs	r2, #0
 800f28e:	2101      	movs	r1, #1
 800f290:	f7f9 f848 	bl	8008324 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);
 800f294:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f298:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800f29c:	2200      	movs	r2, #0
 800f29e:	2182      	movs	r1, #130	@ 0x82
 800f2a0:	f7f9 f840 	bl	8008324 <HAL_PCDEx_PMAConfig>
}
 800f2a4:	2000      	movs	r0, #0
 800f2a6:	bd38      	pop	{r3, r4, r5, pc}
    Error_Handler( );
 800f2a8:	f7f2 ffee 	bl	8002288 <Error_Handler>
 800f2ac:	e7d5      	b.n	800f25a <USBD_LL_Init+0x2e>
 800f2ae:	bf00      	nop
 800f2b0:	2000576c 	.word	0x2000576c
 800f2b4:	40006800 	.word	0x40006800

0800f2b8 <USBD_LL_Start>:
{
 800f2b8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 800f2ba:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f2be:	f7f8 f93f 	bl	8007540 <HAL_PCD_Start>
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 800f2c2:	b118      	cbz	r0, 800f2cc <USBD_LL_Start+0x14>
 800f2c4:	2802      	cmp	r0, #2
 800f2c6:	bf0c      	ite	eq
 800f2c8:	2001      	moveq	r0, #1
 800f2ca:	2003      	movne	r0, #3
}
 800f2cc:	bd08      	pop	{r3, pc}
 800f2ce:	bf00      	nop

0800f2d0 <USBD_LL_OpenEP>:
{
 800f2d0:	4694      	mov	ip, r2
 800f2d2:	b508      	push	{r3, lr}
 800f2d4:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 800f2d6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f2da:	4663      	mov	r3, ip
 800f2dc:	f7f8 fef8 	bl	80080d0 <HAL_PCD_EP_Open>
  switch (hal_status)
 800f2e0:	b118      	cbz	r0, 800f2ea <USBD_LL_OpenEP+0x1a>
 800f2e2:	2802      	cmp	r0, #2
 800f2e4:	bf0c      	ite	eq
 800f2e6:	2001      	moveq	r0, #1
 800f2e8:	2003      	movne	r0, #3
}
 800f2ea:	bd08      	pop	{r3, pc}

0800f2ec <USBD_LL_CloseEP>:
{
 800f2ec:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800f2ee:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f2f2:	f7f8 ff29 	bl	8008148 <HAL_PCD_EP_Close>
  switch (hal_status)
 800f2f6:	b118      	cbz	r0, 800f300 <USBD_LL_CloseEP+0x14>
 800f2f8:	2802      	cmp	r0, #2
 800f2fa:	bf0c      	ite	eq
 800f2fc:	2001      	moveq	r0, #1
 800f2fe:	2003      	movne	r0, #3
}
 800f300:	bd08      	pop	{r3, pc}
 800f302:	bf00      	nop

0800f304 <USBD_LL_StallEP>:
{
 800f304:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 800f306:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f30a:	f7f8 ff93 	bl	8008234 <HAL_PCD_EP_SetStall>
  switch (hal_status)
 800f30e:	b118      	cbz	r0, 800f318 <USBD_LL_StallEP+0x14>
 800f310:	2802      	cmp	r0, #2
 800f312:	bf0c      	ite	eq
 800f314:	2001      	moveq	r0, #1
 800f316:	2003      	movne	r0, #3
}
 800f318:	bd08      	pop	{r3, pc}
 800f31a:	bf00      	nop

0800f31c <USBD_LL_ClearStallEP>:
{
 800f31c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 800f31e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f322:	f7f8 ffc3 	bl	80082ac <HAL_PCD_EP_ClrStall>
  switch (hal_status)
 800f326:	b118      	cbz	r0, 800f330 <USBD_LL_ClearStallEP+0x14>
 800f328:	2802      	cmp	r0, #2
 800f32a:	bf0c      	ite	eq
 800f32c:	2001      	moveq	r0, #1
 800f32e:	2003      	movne	r0, #3
}
 800f330:	bd08      	pop	{r3, pc}
 800f332:	bf00      	nop

0800f334 <USBD_LL_IsStallEP>:
  if((ep_addr & 0x80) == 0x80)
 800f334:	060a      	lsls	r2, r1, #24
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800f336:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 800f33a:	d406      	bmi.n	800f34a <USBD_LL_IsStallEP+0x16>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800f33c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800f340:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f344:	f893 0152 	ldrb.w	r0, [r3, #338]	@ 0x152
}
 800f348:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800f34a:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800f34e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800f352:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f356:	7c98      	ldrb	r0, [r3, #18]
 800f358:	4770      	bx	lr
 800f35a:	bf00      	nop

0800f35c <USBD_LL_SetUSBAddress>:
{
 800f35c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800f35e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f362:	f7f8 fea1 	bl	80080a8 <HAL_PCD_SetAddress>
  switch (hal_status)
 800f366:	b118      	cbz	r0, 800f370 <USBD_LL_SetUSBAddress+0x14>
 800f368:	2802      	cmp	r0, #2
 800f36a:	bf0c      	ite	eq
 800f36c:	2001      	moveq	r0, #1
 800f36e:	2003      	movne	r0, #3
}
 800f370:	bd08      	pop	{r3, pc}
 800f372:	bf00      	nop

0800f374 <USBD_LL_Transmit>:
{
 800f374:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 800f376:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f37a:	f7f8 ff3d 	bl	80081f8 <HAL_PCD_EP_Transmit>
  switch (hal_status)
 800f37e:	b118      	cbz	r0, 800f388 <USBD_LL_Transmit+0x14>
 800f380:	2802      	cmp	r0, #2
 800f382:	bf0c      	ite	eq
 800f384:	2001      	moveq	r0, #1
 800f386:	2003      	movne	r0, #3
}
 800f388:	bd08      	pop	{r3, pc}
 800f38a:	bf00      	nop

0800f38c <USBD_LL_PrepareReceive>:
{
 800f38c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800f38e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f392:	f7f8 ff0d 	bl	80081b0 <HAL_PCD_EP_Receive>
  switch (hal_status)
 800f396:	b118      	cbz	r0, 800f3a0 <USBD_LL_PrepareReceive+0x14>
 800f398:	2802      	cmp	r0, #2
 800f39a:	bf0c      	ite	eq
 800f39c:	2001      	moveq	r0, #1
 800f39e:	2003      	movne	r0, #3
}
 800f3a0:	bd08      	pop	{r3, pc}
 800f3a2:	bf00      	nop

0800f3a4 <USBD_LL_GetRxDataSize>:
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 800f3a4:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f3a8:	f7f8 bf1c 	b.w	80081e4 <HAL_PCD_EP_GetRxCount>

0800f3ac <HAL_PCDEx_LPM_Callback>:
{
 800f3ac:	b510      	push	{r4, lr}
 800f3ae:	4604      	mov	r4, r0
  switch (msg)
 800f3b0:	b179      	cbz	r1, 800f3d2 <HAL_PCDEx_LPM_Callback+0x26>
 800f3b2:	2901      	cmp	r1, #1
 800f3b4:	d000      	beq.n	800f3b8 <HAL_PCDEx_LPM_Callback+0xc>
}
 800f3b6:	bd10      	pop	{r4, pc}
    USBD_LL_Suspend(hpcd->pData);
 800f3b8:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f3bc:	f7fd fd22 	bl	800ce04 <USBD_LL_Suspend>
    if (hpcd->Init.low_power_enable)
 800f3c0:	7a63      	ldrb	r3, [r4, #9]
 800f3c2:	2b00      	cmp	r3, #0
 800f3c4:	d0f7      	beq.n	800f3b6 <HAL_PCDEx_LPM_Callback+0xa>
      SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3c6:	4a0d      	ldr	r2, [pc, #52]	@ (800f3fc <HAL_PCDEx_LPM_Callback+0x50>)
 800f3c8:	6913      	ldr	r3, [r2, #16]
 800f3ca:	f043 0306 	orr.w	r3, r3, #6
 800f3ce:	6113      	str	r3, [r2, #16]
}
 800f3d0:	bd10      	pop	{r4, pc}
    if (hpcd->Init.low_power_enable)
 800f3d2:	7a43      	ldrb	r3, [r0, #9]
 800f3d4:	b92b      	cbnz	r3, 800f3e2 <HAL_PCDEx_LPM_Callback+0x36>
    USBD_LL_Resume(hpcd->pData);
 800f3d6:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
}
 800f3da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    USBD_LL_Resume(hpcd->pData);
 800f3de:	f7fd bd1f 	b.w	800ce20 <USBD_LL_Resume>
  SystemClock_Config();
 800f3e2:	f7f2 fdb5 	bl	8001f50 <SystemClock_Config>
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3e6:	4a05      	ldr	r2, [pc, #20]	@ (800f3fc <HAL_PCDEx_LPM_Callback+0x50>)
    USBD_LL_Resume(hpcd->pData);
 800f3e8:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3ec:	6913      	ldr	r3, [r2, #16]
 800f3ee:	f023 0306 	bic.w	r3, r3, #6
}
 800f3f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f3f6:	6113      	str	r3, [r2, #16]
    USBD_LL_Resume(hpcd->pData);
 800f3f8:	f7fd bd12 	b.w	800ce20 <USBD_LL_Resume>
 800f3fc:	e000ed00 	.word	0xe000ed00

0800f400 <USBD_static_malloc>:
}
 800f400:	4800      	ldr	r0, [pc, #0]	@ (800f404 <USBD_static_malloc+0x4>)
 800f402:	4770      	bx	lr
 800f404:	2000554c 	.word	0x2000554c

0800f408 <USBD_static_free>:
}
 800f408:	4770      	bx	lr
 800f40a:	bf00      	nop

0800f40c <_strtol_l.isra.0>:
 800f40c:	2b24      	cmp	r3, #36	@ 0x24
 800f40e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f412:	4686      	mov	lr, r0
 800f414:	4690      	mov	r8, r2
 800f416:	d801      	bhi.n	800f41c <_strtol_l.isra.0+0x10>
 800f418:	2b01      	cmp	r3, #1
 800f41a:	d106      	bne.n	800f42a <_strtol_l.isra.0+0x1e>
 800f41c:	f001 f886 	bl	801052c <__errno>
 800f420:	2316      	movs	r3, #22
 800f422:	6003      	str	r3, [r0, #0]
 800f424:	2000      	movs	r0, #0
 800f426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f42a:	4834      	ldr	r0, [pc, #208]	@ (800f4fc <_strtol_l.isra.0+0xf0>)
 800f42c:	460d      	mov	r5, r1
 800f42e:	462a      	mov	r2, r5
 800f430:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f434:	5d06      	ldrb	r6, [r0, r4]
 800f436:	f016 0608 	ands.w	r6, r6, #8
 800f43a:	d1f8      	bne.n	800f42e <_strtol_l.isra.0+0x22>
 800f43c:	2c2d      	cmp	r4, #45	@ 0x2d
 800f43e:	d110      	bne.n	800f462 <_strtol_l.isra.0+0x56>
 800f440:	782c      	ldrb	r4, [r5, #0]
 800f442:	2601      	movs	r6, #1
 800f444:	1c95      	adds	r5, r2, #2
 800f446:	f033 0210 	bics.w	r2, r3, #16
 800f44a:	d115      	bne.n	800f478 <_strtol_l.isra.0+0x6c>
 800f44c:	2c30      	cmp	r4, #48	@ 0x30
 800f44e:	d10d      	bne.n	800f46c <_strtol_l.isra.0+0x60>
 800f450:	782a      	ldrb	r2, [r5, #0]
 800f452:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800f456:	2a58      	cmp	r2, #88	@ 0x58
 800f458:	d108      	bne.n	800f46c <_strtol_l.isra.0+0x60>
 800f45a:	786c      	ldrb	r4, [r5, #1]
 800f45c:	3502      	adds	r5, #2
 800f45e:	2310      	movs	r3, #16
 800f460:	e00a      	b.n	800f478 <_strtol_l.isra.0+0x6c>
 800f462:	2c2b      	cmp	r4, #43	@ 0x2b
 800f464:	bf04      	itt	eq
 800f466:	782c      	ldrbeq	r4, [r5, #0]
 800f468:	1c95      	addeq	r5, r2, #2
 800f46a:	e7ec      	b.n	800f446 <_strtol_l.isra.0+0x3a>
 800f46c:	2b00      	cmp	r3, #0
 800f46e:	d1f6      	bne.n	800f45e <_strtol_l.isra.0+0x52>
 800f470:	2c30      	cmp	r4, #48	@ 0x30
 800f472:	bf14      	ite	ne
 800f474:	230a      	movne	r3, #10
 800f476:	2308      	moveq	r3, #8
 800f478:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800f47c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f480:	2200      	movs	r2, #0
 800f482:	fbbc f9f3 	udiv	r9, ip, r3
 800f486:	4610      	mov	r0, r2
 800f488:	fb03 ca19 	mls	sl, r3, r9, ip
 800f48c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800f490:	2f09      	cmp	r7, #9
 800f492:	d80f      	bhi.n	800f4b4 <_strtol_l.isra.0+0xa8>
 800f494:	463c      	mov	r4, r7
 800f496:	42a3      	cmp	r3, r4
 800f498:	dd1b      	ble.n	800f4d2 <_strtol_l.isra.0+0xc6>
 800f49a:	1c57      	adds	r7, r2, #1
 800f49c:	d007      	beq.n	800f4ae <_strtol_l.isra.0+0xa2>
 800f49e:	4581      	cmp	r9, r0
 800f4a0:	d314      	bcc.n	800f4cc <_strtol_l.isra.0+0xc0>
 800f4a2:	d101      	bne.n	800f4a8 <_strtol_l.isra.0+0x9c>
 800f4a4:	45a2      	cmp	sl, r4
 800f4a6:	db11      	blt.n	800f4cc <_strtol_l.isra.0+0xc0>
 800f4a8:	fb00 4003 	mla	r0, r0, r3, r4
 800f4ac:	2201      	movs	r2, #1
 800f4ae:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f4b2:	e7eb      	b.n	800f48c <_strtol_l.isra.0+0x80>
 800f4b4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800f4b8:	2f19      	cmp	r7, #25
 800f4ba:	d801      	bhi.n	800f4c0 <_strtol_l.isra.0+0xb4>
 800f4bc:	3c37      	subs	r4, #55	@ 0x37
 800f4be:	e7ea      	b.n	800f496 <_strtol_l.isra.0+0x8a>
 800f4c0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800f4c4:	2f19      	cmp	r7, #25
 800f4c6:	d804      	bhi.n	800f4d2 <_strtol_l.isra.0+0xc6>
 800f4c8:	3c57      	subs	r4, #87	@ 0x57
 800f4ca:	e7e4      	b.n	800f496 <_strtol_l.isra.0+0x8a>
 800f4cc:	f04f 32ff 	mov.w	r2, #4294967295
 800f4d0:	e7ed      	b.n	800f4ae <_strtol_l.isra.0+0xa2>
 800f4d2:	1c53      	adds	r3, r2, #1
 800f4d4:	d108      	bne.n	800f4e8 <_strtol_l.isra.0+0xdc>
 800f4d6:	2322      	movs	r3, #34	@ 0x22
 800f4d8:	f8ce 3000 	str.w	r3, [lr]
 800f4dc:	4660      	mov	r0, ip
 800f4de:	f1b8 0f00 	cmp.w	r8, #0
 800f4e2:	d0a0      	beq.n	800f426 <_strtol_l.isra.0+0x1a>
 800f4e4:	1e69      	subs	r1, r5, #1
 800f4e6:	e006      	b.n	800f4f6 <_strtol_l.isra.0+0xea>
 800f4e8:	b106      	cbz	r6, 800f4ec <_strtol_l.isra.0+0xe0>
 800f4ea:	4240      	negs	r0, r0
 800f4ec:	f1b8 0f00 	cmp.w	r8, #0
 800f4f0:	d099      	beq.n	800f426 <_strtol_l.isra.0+0x1a>
 800f4f2:	2a00      	cmp	r2, #0
 800f4f4:	d1f6      	bne.n	800f4e4 <_strtol_l.isra.0+0xd8>
 800f4f6:	f8c8 1000 	str.w	r1, [r8]
 800f4fa:	e794      	b.n	800f426 <_strtol_l.isra.0+0x1a>
 800f4fc:	08018409 	.word	0x08018409

0800f500 <_strtol_r>:
 800f500:	f7ff bf84 	b.w	800f40c <_strtol_l.isra.0>

0800f504 <__cvt>:
 800f504:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f508:	ec57 6b10 	vmov	r6, r7, d0
 800f50c:	2f00      	cmp	r7, #0
 800f50e:	460c      	mov	r4, r1
 800f510:	4619      	mov	r1, r3
 800f512:	463b      	mov	r3, r7
 800f514:	bfbb      	ittet	lt
 800f516:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800f51a:	461f      	movlt	r7, r3
 800f51c:	2300      	movge	r3, #0
 800f51e:	232d      	movlt	r3, #45	@ 0x2d
 800f520:	700b      	strb	r3, [r1, #0]
 800f522:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f524:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800f528:	4691      	mov	r9, r2
 800f52a:	f023 0820 	bic.w	r8, r3, #32
 800f52e:	bfbc      	itt	lt
 800f530:	4632      	movlt	r2, r6
 800f532:	4616      	movlt	r6, r2
 800f534:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800f538:	d005      	beq.n	800f546 <__cvt+0x42>
 800f53a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800f53e:	d100      	bne.n	800f542 <__cvt+0x3e>
 800f540:	3401      	adds	r4, #1
 800f542:	2102      	movs	r1, #2
 800f544:	e000      	b.n	800f548 <__cvt+0x44>
 800f546:	2103      	movs	r1, #3
 800f548:	ab03      	add	r3, sp, #12
 800f54a:	9301      	str	r3, [sp, #4]
 800f54c:	ab02      	add	r3, sp, #8
 800f54e:	9300      	str	r3, [sp, #0]
 800f550:	ec47 6b10 	vmov	d0, r6, r7
 800f554:	4653      	mov	r3, sl
 800f556:	4622      	mov	r2, r4
 800f558:	f001 f8b2 	bl	80106c0 <_dtoa_r>
 800f55c:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800f560:	4605      	mov	r5, r0
 800f562:	d119      	bne.n	800f598 <__cvt+0x94>
 800f564:	f019 0f01 	tst.w	r9, #1
 800f568:	d00e      	beq.n	800f588 <__cvt+0x84>
 800f56a:	eb00 0904 	add.w	r9, r0, r4
 800f56e:	2200      	movs	r2, #0
 800f570:	2300      	movs	r3, #0
 800f572:	4630      	mov	r0, r6
 800f574:	4639      	mov	r1, r7
 800f576:	f7f1 fa7f 	bl	8000a78 <__aeabi_dcmpeq>
 800f57a:	b108      	cbz	r0, 800f580 <__cvt+0x7c>
 800f57c:	f8cd 900c 	str.w	r9, [sp, #12]
 800f580:	2230      	movs	r2, #48	@ 0x30
 800f582:	9b03      	ldr	r3, [sp, #12]
 800f584:	454b      	cmp	r3, r9
 800f586:	d31e      	bcc.n	800f5c6 <__cvt+0xc2>
 800f588:	9b03      	ldr	r3, [sp, #12]
 800f58a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800f58c:	1b5b      	subs	r3, r3, r5
 800f58e:	4628      	mov	r0, r5
 800f590:	6013      	str	r3, [r2, #0]
 800f592:	b004      	add	sp, #16
 800f594:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f598:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800f59c:	eb00 0904 	add.w	r9, r0, r4
 800f5a0:	d1e5      	bne.n	800f56e <__cvt+0x6a>
 800f5a2:	7803      	ldrb	r3, [r0, #0]
 800f5a4:	2b30      	cmp	r3, #48	@ 0x30
 800f5a6:	d10a      	bne.n	800f5be <__cvt+0xba>
 800f5a8:	2200      	movs	r2, #0
 800f5aa:	2300      	movs	r3, #0
 800f5ac:	4630      	mov	r0, r6
 800f5ae:	4639      	mov	r1, r7
 800f5b0:	f7f1 fa62 	bl	8000a78 <__aeabi_dcmpeq>
 800f5b4:	b918      	cbnz	r0, 800f5be <__cvt+0xba>
 800f5b6:	f1c4 0401 	rsb	r4, r4, #1
 800f5ba:	f8ca 4000 	str.w	r4, [sl]
 800f5be:	f8da 3000 	ldr.w	r3, [sl]
 800f5c2:	4499      	add	r9, r3
 800f5c4:	e7d3      	b.n	800f56e <__cvt+0x6a>
 800f5c6:	1c59      	adds	r1, r3, #1
 800f5c8:	9103      	str	r1, [sp, #12]
 800f5ca:	701a      	strb	r2, [r3, #0]
 800f5cc:	e7d9      	b.n	800f582 <__cvt+0x7e>

0800f5ce <__exponent>:
 800f5ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f5d0:	2900      	cmp	r1, #0
 800f5d2:	bfba      	itte	lt
 800f5d4:	4249      	neglt	r1, r1
 800f5d6:	232d      	movlt	r3, #45	@ 0x2d
 800f5d8:	232b      	movge	r3, #43	@ 0x2b
 800f5da:	2909      	cmp	r1, #9
 800f5dc:	7002      	strb	r2, [r0, #0]
 800f5de:	7043      	strb	r3, [r0, #1]
 800f5e0:	dd29      	ble.n	800f636 <__exponent+0x68>
 800f5e2:	f10d 0307 	add.w	r3, sp, #7
 800f5e6:	461d      	mov	r5, r3
 800f5e8:	270a      	movs	r7, #10
 800f5ea:	461a      	mov	r2, r3
 800f5ec:	fbb1 f6f7 	udiv	r6, r1, r7
 800f5f0:	fb07 1416 	mls	r4, r7, r6, r1
 800f5f4:	3430      	adds	r4, #48	@ 0x30
 800f5f6:	f802 4c01 	strb.w	r4, [r2, #-1]
 800f5fa:	460c      	mov	r4, r1
 800f5fc:	2c63      	cmp	r4, #99	@ 0x63
 800f5fe:	f103 33ff 	add.w	r3, r3, #4294967295
 800f602:	4631      	mov	r1, r6
 800f604:	dcf1      	bgt.n	800f5ea <__exponent+0x1c>
 800f606:	3130      	adds	r1, #48	@ 0x30
 800f608:	1e94      	subs	r4, r2, #2
 800f60a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800f60e:	1c41      	adds	r1, r0, #1
 800f610:	4623      	mov	r3, r4
 800f612:	42ab      	cmp	r3, r5
 800f614:	d30a      	bcc.n	800f62c <__exponent+0x5e>
 800f616:	f10d 0309 	add.w	r3, sp, #9
 800f61a:	1a9b      	subs	r3, r3, r2
 800f61c:	42ac      	cmp	r4, r5
 800f61e:	bf88      	it	hi
 800f620:	2300      	movhi	r3, #0
 800f622:	3302      	adds	r3, #2
 800f624:	4403      	add	r3, r0
 800f626:	1a18      	subs	r0, r3, r0
 800f628:	b003      	add	sp, #12
 800f62a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f62c:	f813 6b01 	ldrb.w	r6, [r3], #1
 800f630:	f801 6f01 	strb.w	r6, [r1, #1]!
 800f634:	e7ed      	b.n	800f612 <__exponent+0x44>
 800f636:	2330      	movs	r3, #48	@ 0x30
 800f638:	3130      	adds	r1, #48	@ 0x30
 800f63a:	7083      	strb	r3, [r0, #2]
 800f63c:	70c1      	strb	r1, [r0, #3]
 800f63e:	1d03      	adds	r3, r0, #4
 800f640:	e7f1      	b.n	800f626 <__exponent+0x58>
	...

0800f644 <_printf_float>:
 800f644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f648:	b08d      	sub	sp, #52	@ 0x34
 800f64a:	460c      	mov	r4, r1
 800f64c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800f650:	4616      	mov	r6, r2
 800f652:	461f      	mov	r7, r3
 800f654:	4605      	mov	r5, r0
 800f656:	f000 ff1f 	bl	8010498 <_localeconv_r>
 800f65a:	6803      	ldr	r3, [r0, #0]
 800f65c:	9304      	str	r3, [sp, #16]
 800f65e:	4618      	mov	r0, r3
 800f660:	f7f0 fdde 	bl	8000220 <strlen>
 800f664:	2300      	movs	r3, #0
 800f666:	930a      	str	r3, [sp, #40]	@ 0x28
 800f668:	f8d8 3000 	ldr.w	r3, [r8]
 800f66c:	9005      	str	r0, [sp, #20]
 800f66e:	3307      	adds	r3, #7
 800f670:	f023 0307 	bic.w	r3, r3, #7
 800f674:	f103 0208 	add.w	r2, r3, #8
 800f678:	f894 a018 	ldrb.w	sl, [r4, #24]
 800f67c:	f8d4 b000 	ldr.w	fp, [r4]
 800f680:	f8c8 2000 	str.w	r2, [r8]
 800f684:	e9d3 8900 	ldrd	r8, r9, [r3]
 800f688:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800f68c:	9307      	str	r3, [sp, #28]
 800f68e:	f8cd 8018 	str.w	r8, [sp, #24]
 800f692:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800f696:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f69a:	4b9c      	ldr	r3, [pc, #624]	@ (800f90c <_printf_float+0x2c8>)
 800f69c:	f04f 32ff 	mov.w	r2, #4294967295
 800f6a0:	f7f1 fa1c 	bl	8000adc <__aeabi_dcmpun>
 800f6a4:	bb70      	cbnz	r0, 800f704 <_printf_float+0xc0>
 800f6a6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f6aa:	4b98      	ldr	r3, [pc, #608]	@ (800f90c <_printf_float+0x2c8>)
 800f6ac:	f04f 32ff 	mov.w	r2, #4294967295
 800f6b0:	f7f1 f9f6 	bl	8000aa0 <__aeabi_dcmple>
 800f6b4:	bb30      	cbnz	r0, 800f704 <_printf_float+0xc0>
 800f6b6:	2200      	movs	r2, #0
 800f6b8:	2300      	movs	r3, #0
 800f6ba:	4640      	mov	r0, r8
 800f6bc:	4649      	mov	r1, r9
 800f6be:	f7f1 f9e5 	bl	8000a8c <__aeabi_dcmplt>
 800f6c2:	b110      	cbz	r0, 800f6ca <_printf_float+0x86>
 800f6c4:	232d      	movs	r3, #45	@ 0x2d
 800f6c6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f6ca:	4a91      	ldr	r2, [pc, #580]	@ (800f910 <_printf_float+0x2cc>)
 800f6cc:	4b91      	ldr	r3, [pc, #580]	@ (800f914 <_printf_float+0x2d0>)
 800f6ce:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800f6d2:	bf8c      	ite	hi
 800f6d4:	4690      	movhi	r8, r2
 800f6d6:	4698      	movls	r8, r3
 800f6d8:	2303      	movs	r3, #3
 800f6da:	6123      	str	r3, [r4, #16]
 800f6dc:	f02b 0304 	bic.w	r3, fp, #4
 800f6e0:	6023      	str	r3, [r4, #0]
 800f6e2:	f04f 0900 	mov.w	r9, #0
 800f6e6:	9700      	str	r7, [sp, #0]
 800f6e8:	4633      	mov	r3, r6
 800f6ea:	aa0b      	add	r2, sp, #44	@ 0x2c
 800f6ec:	4621      	mov	r1, r4
 800f6ee:	4628      	mov	r0, r5
 800f6f0:	f000 f9d2 	bl	800fa98 <_printf_common>
 800f6f4:	3001      	adds	r0, #1
 800f6f6:	f040 808d 	bne.w	800f814 <_printf_float+0x1d0>
 800f6fa:	f04f 30ff 	mov.w	r0, #4294967295
 800f6fe:	b00d      	add	sp, #52	@ 0x34
 800f700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f704:	4642      	mov	r2, r8
 800f706:	464b      	mov	r3, r9
 800f708:	4640      	mov	r0, r8
 800f70a:	4649      	mov	r1, r9
 800f70c:	f7f1 f9e6 	bl	8000adc <__aeabi_dcmpun>
 800f710:	b140      	cbz	r0, 800f724 <_printf_float+0xe0>
 800f712:	464b      	mov	r3, r9
 800f714:	2b00      	cmp	r3, #0
 800f716:	bfbc      	itt	lt
 800f718:	232d      	movlt	r3, #45	@ 0x2d
 800f71a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800f71e:	4a7e      	ldr	r2, [pc, #504]	@ (800f918 <_printf_float+0x2d4>)
 800f720:	4b7e      	ldr	r3, [pc, #504]	@ (800f91c <_printf_float+0x2d8>)
 800f722:	e7d4      	b.n	800f6ce <_printf_float+0x8a>
 800f724:	6863      	ldr	r3, [r4, #4]
 800f726:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800f72a:	9206      	str	r2, [sp, #24]
 800f72c:	1c5a      	adds	r2, r3, #1
 800f72e:	d13b      	bne.n	800f7a8 <_printf_float+0x164>
 800f730:	2306      	movs	r3, #6
 800f732:	6063      	str	r3, [r4, #4]
 800f734:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800f738:	2300      	movs	r3, #0
 800f73a:	6022      	str	r2, [r4, #0]
 800f73c:	9303      	str	r3, [sp, #12]
 800f73e:	ab0a      	add	r3, sp, #40	@ 0x28
 800f740:	e9cd a301 	strd	sl, r3, [sp, #4]
 800f744:	ab09      	add	r3, sp, #36	@ 0x24
 800f746:	9300      	str	r3, [sp, #0]
 800f748:	6861      	ldr	r1, [r4, #4]
 800f74a:	ec49 8b10 	vmov	d0, r8, r9
 800f74e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800f752:	4628      	mov	r0, r5
 800f754:	f7ff fed6 	bl	800f504 <__cvt>
 800f758:	9b06      	ldr	r3, [sp, #24]
 800f75a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800f75c:	2b47      	cmp	r3, #71	@ 0x47
 800f75e:	4680      	mov	r8, r0
 800f760:	d129      	bne.n	800f7b6 <_printf_float+0x172>
 800f762:	1cc8      	adds	r0, r1, #3
 800f764:	db02      	blt.n	800f76c <_printf_float+0x128>
 800f766:	6863      	ldr	r3, [r4, #4]
 800f768:	4299      	cmp	r1, r3
 800f76a:	dd41      	ble.n	800f7f0 <_printf_float+0x1ac>
 800f76c:	f1aa 0a02 	sub.w	sl, sl, #2
 800f770:	fa5f fa8a 	uxtb.w	sl, sl
 800f774:	3901      	subs	r1, #1
 800f776:	4652      	mov	r2, sl
 800f778:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f77c:	9109      	str	r1, [sp, #36]	@ 0x24
 800f77e:	f7ff ff26 	bl	800f5ce <__exponent>
 800f782:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f784:	1813      	adds	r3, r2, r0
 800f786:	2a01      	cmp	r2, #1
 800f788:	4681      	mov	r9, r0
 800f78a:	6123      	str	r3, [r4, #16]
 800f78c:	dc02      	bgt.n	800f794 <_printf_float+0x150>
 800f78e:	6822      	ldr	r2, [r4, #0]
 800f790:	07d2      	lsls	r2, r2, #31
 800f792:	d501      	bpl.n	800f798 <_printf_float+0x154>
 800f794:	3301      	adds	r3, #1
 800f796:	6123      	str	r3, [r4, #16]
 800f798:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800f79c:	2b00      	cmp	r3, #0
 800f79e:	d0a2      	beq.n	800f6e6 <_printf_float+0xa2>
 800f7a0:	232d      	movs	r3, #45	@ 0x2d
 800f7a2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f7a6:	e79e      	b.n	800f6e6 <_printf_float+0xa2>
 800f7a8:	9a06      	ldr	r2, [sp, #24]
 800f7aa:	2a47      	cmp	r2, #71	@ 0x47
 800f7ac:	d1c2      	bne.n	800f734 <_printf_float+0xf0>
 800f7ae:	2b00      	cmp	r3, #0
 800f7b0:	d1c0      	bne.n	800f734 <_printf_float+0xf0>
 800f7b2:	2301      	movs	r3, #1
 800f7b4:	e7bd      	b.n	800f732 <_printf_float+0xee>
 800f7b6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800f7ba:	d9db      	bls.n	800f774 <_printf_float+0x130>
 800f7bc:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800f7c0:	d118      	bne.n	800f7f4 <_printf_float+0x1b0>
 800f7c2:	2900      	cmp	r1, #0
 800f7c4:	6863      	ldr	r3, [r4, #4]
 800f7c6:	dd0b      	ble.n	800f7e0 <_printf_float+0x19c>
 800f7c8:	6121      	str	r1, [r4, #16]
 800f7ca:	b913      	cbnz	r3, 800f7d2 <_printf_float+0x18e>
 800f7cc:	6822      	ldr	r2, [r4, #0]
 800f7ce:	07d0      	lsls	r0, r2, #31
 800f7d0:	d502      	bpl.n	800f7d8 <_printf_float+0x194>
 800f7d2:	3301      	adds	r3, #1
 800f7d4:	440b      	add	r3, r1
 800f7d6:	6123      	str	r3, [r4, #16]
 800f7d8:	65a1      	str	r1, [r4, #88]	@ 0x58
 800f7da:	f04f 0900 	mov.w	r9, #0
 800f7de:	e7db      	b.n	800f798 <_printf_float+0x154>
 800f7e0:	b913      	cbnz	r3, 800f7e8 <_printf_float+0x1a4>
 800f7e2:	6822      	ldr	r2, [r4, #0]
 800f7e4:	07d2      	lsls	r2, r2, #31
 800f7e6:	d501      	bpl.n	800f7ec <_printf_float+0x1a8>
 800f7e8:	3302      	adds	r3, #2
 800f7ea:	e7f4      	b.n	800f7d6 <_printf_float+0x192>
 800f7ec:	2301      	movs	r3, #1
 800f7ee:	e7f2      	b.n	800f7d6 <_printf_float+0x192>
 800f7f0:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800f7f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f7f6:	4299      	cmp	r1, r3
 800f7f8:	db05      	blt.n	800f806 <_printf_float+0x1c2>
 800f7fa:	6823      	ldr	r3, [r4, #0]
 800f7fc:	6121      	str	r1, [r4, #16]
 800f7fe:	07d8      	lsls	r0, r3, #31
 800f800:	d5ea      	bpl.n	800f7d8 <_printf_float+0x194>
 800f802:	1c4b      	adds	r3, r1, #1
 800f804:	e7e7      	b.n	800f7d6 <_printf_float+0x192>
 800f806:	2900      	cmp	r1, #0
 800f808:	bfd4      	ite	le
 800f80a:	f1c1 0202 	rsble	r2, r1, #2
 800f80e:	2201      	movgt	r2, #1
 800f810:	4413      	add	r3, r2
 800f812:	e7e0      	b.n	800f7d6 <_printf_float+0x192>
 800f814:	6823      	ldr	r3, [r4, #0]
 800f816:	055a      	lsls	r2, r3, #21
 800f818:	d407      	bmi.n	800f82a <_printf_float+0x1e6>
 800f81a:	6923      	ldr	r3, [r4, #16]
 800f81c:	4642      	mov	r2, r8
 800f81e:	4631      	mov	r1, r6
 800f820:	4628      	mov	r0, r5
 800f822:	47b8      	blx	r7
 800f824:	3001      	adds	r0, #1
 800f826:	d12b      	bne.n	800f880 <_printf_float+0x23c>
 800f828:	e767      	b.n	800f6fa <_printf_float+0xb6>
 800f82a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800f82e:	f240 80dd 	bls.w	800f9ec <_printf_float+0x3a8>
 800f832:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800f836:	2200      	movs	r2, #0
 800f838:	2300      	movs	r3, #0
 800f83a:	f7f1 f91d 	bl	8000a78 <__aeabi_dcmpeq>
 800f83e:	2800      	cmp	r0, #0
 800f840:	d033      	beq.n	800f8aa <_printf_float+0x266>
 800f842:	4a37      	ldr	r2, [pc, #220]	@ (800f920 <_printf_float+0x2dc>)
 800f844:	2301      	movs	r3, #1
 800f846:	4631      	mov	r1, r6
 800f848:	4628      	mov	r0, r5
 800f84a:	47b8      	blx	r7
 800f84c:	3001      	adds	r0, #1
 800f84e:	f43f af54 	beq.w	800f6fa <_printf_float+0xb6>
 800f852:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800f856:	4543      	cmp	r3, r8
 800f858:	db02      	blt.n	800f860 <_printf_float+0x21c>
 800f85a:	6823      	ldr	r3, [r4, #0]
 800f85c:	07d8      	lsls	r0, r3, #31
 800f85e:	d50f      	bpl.n	800f880 <_printf_float+0x23c>
 800f860:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f864:	4631      	mov	r1, r6
 800f866:	4628      	mov	r0, r5
 800f868:	47b8      	blx	r7
 800f86a:	3001      	adds	r0, #1
 800f86c:	f43f af45 	beq.w	800f6fa <_printf_float+0xb6>
 800f870:	f04f 0900 	mov.w	r9, #0
 800f874:	f108 38ff 	add.w	r8, r8, #4294967295
 800f878:	f104 0a1a 	add.w	sl, r4, #26
 800f87c:	45c8      	cmp	r8, r9
 800f87e:	dc09      	bgt.n	800f894 <_printf_float+0x250>
 800f880:	6823      	ldr	r3, [r4, #0]
 800f882:	079b      	lsls	r3, r3, #30
 800f884:	f100 8103 	bmi.w	800fa8e <_printf_float+0x44a>
 800f888:	68e0      	ldr	r0, [r4, #12]
 800f88a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f88c:	4298      	cmp	r0, r3
 800f88e:	bfb8      	it	lt
 800f890:	4618      	movlt	r0, r3
 800f892:	e734      	b.n	800f6fe <_printf_float+0xba>
 800f894:	2301      	movs	r3, #1
 800f896:	4652      	mov	r2, sl
 800f898:	4631      	mov	r1, r6
 800f89a:	4628      	mov	r0, r5
 800f89c:	47b8      	blx	r7
 800f89e:	3001      	adds	r0, #1
 800f8a0:	f43f af2b 	beq.w	800f6fa <_printf_float+0xb6>
 800f8a4:	f109 0901 	add.w	r9, r9, #1
 800f8a8:	e7e8      	b.n	800f87c <_printf_float+0x238>
 800f8aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f8ac:	2b00      	cmp	r3, #0
 800f8ae:	dc39      	bgt.n	800f924 <_printf_float+0x2e0>
 800f8b0:	4a1b      	ldr	r2, [pc, #108]	@ (800f920 <_printf_float+0x2dc>)
 800f8b2:	2301      	movs	r3, #1
 800f8b4:	4631      	mov	r1, r6
 800f8b6:	4628      	mov	r0, r5
 800f8b8:	47b8      	blx	r7
 800f8ba:	3001      	adds	r0, #1
 800f8bc:	f43f af1d 	beq.w	800f6fa <_printf_float+0xb6>
 800f8c0:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800f8c4:	ea59 0303 	orrs.w	r3, r9, r3
 800f8c8:	d102      	bne.n	800f8d0 <_printf_float+0x28c>
 800f8ca:	6823      	ldr	r3, [r4, #0]
 800f8cc:	07d9      	lsls	r1, r3, #31
 800f8ce:	d5d7      	bpl.n	800f880 <_printf_float+0x23c>
 800f8d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f8d4:	4631      	mov	r1, r6
 800f8d6:	4628      	mov	r0, r5
 800f8d8:	47b8      	blx	r7
 800f8da:	3001      	adds	r0, #1
 800f8dc:	f43f af0d 	beq.w	800f6fa <_printf_float+0xb6>
 800f8e0:	f04f 0a00 	mov.w	sl, #0
 800f8e4:	f104 0b1a 	add.w	fp, r4, #26
 800f8e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f8ea:	425b      	negs	r3, r3
 800f8ec:	4553      	cmp	r3, sl
 800f8ee:	dc01      	bgt.n	800f8f4 <_printf_float+0x2b0>
 800f8f0:	464b      	mov	r3, r9
 800f8f2:	e793      	b.n	800f81c <_printf_float+0x1d8>
 800f8f4:	2301      	movs	r3, #1
 800f8f6:	465a      	mov	r2, fp
 800f8f8:	4631      	mov	r1, r6
 800f8fa:	4628      	mov	r0, r5
 800f8fc:	47b8      	blx	r7
 800f8fe:	3001      	adds	r0, #1
 800f900:	f43f aefb 	beq.w	800f6fa <_printf_float+0xb6>
 800f904:	f10a 0a01 	add.w	sl, sl, #1
 800f908:	e7ee      	b.n	800f8e8 <_printf_float+0x2a4>
 800f90a:	bf00      	nop
 800f90c:	7fefffff 	.word	0x7fefffff
 800f910:	0801850d 	.word	0x0801850d
 800f914:	08018509 	.word	0x08018509
 800f918:	08018515 	.word	0x08018515
 800f91c:	08018511 	.word	0x08018511
 800f920:	08018519 	.word	0x08018519
 800f924:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800f926:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800f92a:	4553      	cmp	r3, sl
 800f92c:	bfa8      	it	ge
 800f92e:	4653      	movge	r3, sl
 800f930:	2b00      	cmp	r3, #0
 800f932:	4699      	mov	r9, r3
 800f934:	dc36      	bgt.n	800f9a4 <_printf_float+0x360>
 800f936:	f04f 0b00 	mov.w	fp, #0
 800f93a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f93e:	f104 021a 	add.w	r2, r4, #26
 800f942:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800f944:	9306      	str	r3, [sp, #24]
 800f946:	eba3 0309 	sub.w	r3, r3, r9
 800f94a:	455b      	cmp	r3, fp
 800f94c:	dc31      	bgt.n	800f9b2 <_printf_float+0x36e>
 800f94e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f950:	459a      	cmp	sl, r3
 800f952:	dc3a      	bgt.n	800f9ca <_printf_float+0x386>
 800f954:	6823      	ldr	r3, [r4, #0]
 800f956:	07da      	lsls	r2, r3, #31
 800f958:	d437      	bmi.n	800f9ca <_printf_float+0x386>
 800f95a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f95c:	ebaa 0903 	sub.w	r9, sl, r3
 800f960:	9b06      	ldr	r3, [sp, #24]
 800f962:	ebaa 0303 	sub.w	r3, sl, r3
 800f966:	4599      	cmp	r9, r3
 800f968:	bfa8      	it	ge
 800f96a:	4699      	movge	r9, r3
 800f96c:	f1b9 0f00 	cmp.w	r9, #0
 800f970:	dc33      	bgt.n	800f9da <_printf_float+0x396>
 800f972:	f04f 0800 	mov.w	r8, #0
 800f976:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f97a:	f104 0b1a 	add.w	fp, r4, #26
 800f97e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f980:	ebaa 0303 	sub.w	r3, sl, r3
 800f984:	eba3 0309 	sub.w	r3, r3, r9
 800f988:	4543      	cmp	r3, r8
 800f98a:	f77f af79 	ble.w	800f880 <_printf_float+0x23c>
 800f98e:	2301      	movs	r3, #1
 800f990:	465a      	mov	r2, fp
 800f992:	4631      	mov	r1, r6
 800f994:	4628      	mov	r0, r5
 800f996:	47b8      	blx	r7
 800f998:	3001      	adds	r0, #1
 800f99a:	f43f aeae 	beq.w	800f6fa <_printf_float+0xb6>
 800f99e:	f108 0801 	add.w	r8, r8, #1
 800f9a2:	e7ec      	b.n	800f97e <_printf_float+0x33a>
 800f9a4:	4642      	mov	r2, r8
 800f9a6:	4631      	mov	r1, r6
 800f9a8:	4628      	mov	r0, r5
 800f9aa:	47b8      	blx	r7
 800f9ac:	3001      	adds	r0, #1
 800f9ae:	d1c2      	bne.n	800f936 <_printf_float+0x2f2>
 800f9b0:	e6a3      	b.n	800f6fa <_printf_float+0xb6>
 800f9b2:	2301      	movs	r3, #1
 800f9b4:	4631      	mov	r1, r6
 800f9b6:	4628      	mov	r0, r5
 800f9b8:	9206      	str	r2, [sp, #24]
 800f9ba:	47b8      	blx	r7
 800f9bc:	3001      	adds	r0, #1
 800f9be:	f43f ae9c 	beq.w	800f6fa <_printf_float+0xb6>
 800f9c2:	9a06      	ldr	r2, [sp, #24]
 800f9c4:	f10b 0b01 	add.w	fp, fp, #1
 800f9c8:	e7bb      	b.n	800f942 <_printf_float+0x2fe>
 800f9ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f9ce:	4631      	mov	r1, r6
 800f9d0:	4628      	mov	r0, r5
 800f9d2:	47b8      	blx	r7
 800f9d4:	3001      	adds	r0, #1
 800f9d6:	d1c0      	bne.n	800f95a <_printf_float+0x316>
 800f9d8:	e68f      	b.n	800f6fa <_printf_float+0xb6>
 800f9da:	9a06      	ldr	r2, [sp, #24]
 800f9dc:	464b      	mov	r3, r9
 800f9de:	4442      	add	r2, r8
 800f9e0:	4631      	mov	r1, r6
 800f9e2:	4628      	mov	r0, r5
 800f9e4:	47b8      	blx	r7
 800f9e6:	3001      	adds	r0, #1
 800f9e8:	d1c3      	bne.n	800f972 <_printf_float+0x32e>
 800f9ea:	e686      	b.n	800f6fa <_printf_float+0xb6>
 800f9ec:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800f9f0:	f1ba 0f01 	cmp.w	sl, #1
 800f9f4:	dc01      	bgt.n	800f9fa <_printf_float+0x3b6>
 800f9f6:	07db      	lsls	r3, r3, #31
 800f9f8:	d536      	bpl.n	800fa68 <_printf_float+0x424>
 800f9fa:	2301      	movs	r3, #1
 800f9fc:	4642      	mov	r2, r8
 800f9fe:	4631      	mov	r1, r6
 800fa00:	4628      	mov	r0, r5
 800fa02:	47b8      	blx	r7
 800fa04:	3001      	adds	r0, #1
 800fa06:	f43f ae78 	beq.w	800f6fa <_printf_float+0xb6>
 800fa0a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800fa0e:	4631      	mov	r1, r6
 800fa10:	4628      	mov	r0, r5
 800fa12:	47b8      	blx	r7
 800fa14:	3001      	adds	r0, #1
 800fa16:	f43f ae70 	beq.w	800f6fa <_printf_float+0xb6>
 800fa1a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800fa1e:	2200      	movs	r2, #0
 800fa20:	2300      	movs	r3, #0
 800fa22:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fa26:	f7f1 f827 	bl	8000a78 <__aeabi_dcmpeq>
 800fa2a:	b9c0      	cbnz	r0, 800fa5e <_printf_float+0x41a>
 800fa2c:	4653      	mov	r3, sl
 800fa2e:	f108 0201 	add.w	r2, r8, #1
 800fa32:	4631      	mov	r1, r6
 800fa34:	4628      	mov	r0, r5
 800fa36:	47b8      	blx	r7
 800fa38:	3001      	adds	r0, #1
 800fa3a:	d10c      	bne.n	800fa56 <_printf_float+0x412>
 800fa3c:	e65d      	b.n	800f6fa <_printf_float+0xb6>
 800fa3e:	2301      	movs	r3, #1
 800fa40:	465a      	mov	r2, fp
 800fa42:	4631      	mov	r1, r6
 800fa44:	4628      	mov	r0, r5
 800fa46:	47b8      	blx	r7
 800fa48:	3001      	adds	r0, #1
 800fa4a:	f43f ae56 	beq.w	800f6fa <_printf_float+0xb6>
 800fa4e:	f108 0801 	add.w	r8, r8, #1
 800fa52:	45d0      	cmp	r8, sl
 800fa54:	dbf3      	blt.n	800fa3e <_printf_float+0x3fa>
 800fa56:	464b      	mov	r3, r9
 800fa58:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800fa5c:	e6df      	b.n	800f81e <_printf_float+0x1da>
 800fa5e:	f04f 0800 	mov.w	r8, #0
 800fa62:	f104 0b1a 	add.w	fp, r4, #26
 800fa66:	e7f4      	b.n	800fa52 <_printf_float+0x40e>
 800fa68:	2301      	movs	r3, #1
 800fa6a:	4642      	mov	r2, r8
 800fa6c:	e7e1      	b.n	800fa32 <_printf_float+0x3ee>
 800fa6e:	2301      	movs	r3, #1
 800fa70:	464a      	mov	r2, r9
 800fa72:	4631      	mov	r1, r6
 800fa74:	4628      	mov	r0, r5
 800fa76:	47b8      	blx	r7
 800fa78:	3001      	adds	r0, #1
 800fa7a:	f43f ae3e 	beq.w	800f6fa <_printf_float+0xb6>
 800fa7e:	f108 0801 	add.w	r8, r8, #1
 800fa82:	68e3      	ldr	r3, [r4, #12]
 800fa84:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800fa86:	1a5b      	subs	r3, r3, r1
 800fa88:	4543      	cmp	r3, r8
 800fa8a:	dcf0      	bgt.n	800fa6e <_printf_float+0x42a>
 800fa8c:	e6fc      	b.n	800f888 <_printf_float+0x244>
 800fa8e:	f04f 0800 	mov.w	r8, #0
 800fa92:	f104 0919 	add.w	r9, r4, #25
 800fa96:	e7f4      	b.n	800fa82 <_printf_float+0x43e>

0800fa98 <_printf_common>:
 800fa98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa9c:	4616      	mov	r6, r2
 800fa9e:	4698      	mov	r8, r3
 800faa0:	688a      	ldr	r2, [r1, #8]
 800faa2:	690b      	ldr	r3, [r1, #16]
 800faa4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800faa8:	4293      	cmp	r3, r2
 800faaa:	bfb8      	it	lt
 800faac:	4613      	movlt	r3, r2
 800faae:	6033      	str	r3, [r6, #0]
 800fab0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800fab4:	4607      	mov	r7, r0
 800fab6:	460c      	mov	r4, r1
 800fab8:	b10a      	cbz	r2, 800fabe <_printf_common+0x26>
 800faba:	3301      	adds	r3, #1
 800fabc:	6033      	str	r3, [r6, #0]
 800fabe:	6823      	ldr	r3, [r4, #0]
 800fac0:	0699      	lsls	r1, r3, #26
 800fac2:	bf42      	ittt	mi
 800fac4:	6833      	ldrmi	r3, [r6, #0]
 800fac6:	3302      	addmi	r3, #2
 800fac8:	6033      	strmi	r3, [r6, #0]
 800faca:	6825      	ldr	r5, [r4, #0]
 800facc:	f015 0506 	ands.w	r5, r5, #6
 800fad0:	d106      	bne.n	800fae0 <_printf_common+0x48>
 800fad2:	f104 0a19 	add.w	sl, r4, #25
 800fad6:	68e3      	ldr	r3, [r4, #12]
 800fad8:	6832      	ldr	r2, [r6, #0]
 800fada:	1a9b      	subs	r3, r3, r2
 800fadc:	42ab      	cmp	r3, r5
 800fade:	dc26      	bgt.n	800fb2e <_printf_common+0x96>
 800fae0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800fae4:	6822      	ldr	r2, [r4, #0]
 800fae6:	3b00      	subs	r3, #0
 800fae8:	bf18      	it	ne
 800faea:	2301      	movne	r3, #1
 800faec:	0692      	lsls	r2, r2, #26
 800faee:	d42b      	bmi.n	800fb48 <_printf_common+0xb0>
 800faf0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800faf4:	4641      	mov	r1, r8
 800faf6:	4638      	mov	r0, r7
 800faf8:	47c8      	blx	r9
 800fafa:	3001      	adds	r0, #1
 800fafc:	d01e      	beq.n	800fb3c <_printf_common+0xa4>
 800fafe:	6823      	ldr	r3, [r4, #0]
 800fb00:	6922      	ldr	r2, [r4, #16]
 800fb02:	f003 0306 	and.w	r3, r3, #6
 800fb06:	2b04      	cmp	r3, #4
 800fb08:	bf02      	ittt	eq
 800fb0a:	68e5      	ldreq	r5, [r4, #12]
 800fb0c:	6833      	ldreq	r3, [r6, #0]
 800fb0e:	1aed      	subeq	r5, r5, r3
 800fb10:	68a3      	ldr	r3, [r4, #8]
 800fb12:	bf0c      	ite	eq
 800fb14:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800fb18:	2500      	movne	r5, #0
 800fb1a:	4293      	cmp	r3, r2
 800fb1c:	bfc4      	itt	gt
 800fb1e:	1a9b      	subgt	r3, r3, r2
 800fb20:	18ed      	addgt	r5, r5, r3
 800fb22:	2600      	movs	r6, #0
 800fb24:	341a      	adds	r4, #26
 800fb26:	42b5      	cmp	r5, r6
 800fb28:	d11a      	bne.n	800fb60 <_printf_common+0xc8>
 800fb2a:	2000      	movs	r0, #0
 800fb2c:	e008      	b.n	800fb40 <_printf_common+0xa8>
 800fb2e:	2301      	movs	r3, #1
 800fb30:	4652      	mov	r2, sl
 800fb32:	4641      	mov	r1, r8
 800fb34:	4638      	mov	r0, r7
 800fb36:	47c8      	blx	r9
 800fb38:	3001      	adds	r0, #1
 800fb3a:	d103      	bne.n	800fb44 <_printf_common+0xac>
 800fb3c:	f04f 30ff 	mov.w	r0, #4294967295
 800fb40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb44:	3501      	adds	r5, #1
 800fb46:	e7c6      	b.n	800fad6 <_printf_common+0x3e>
 800fb48:	18e1      	adds	r1, r4, r3
 800fb4a:	1c5a      	adds	r2, r3, #1
 800fb4c:	2030      	movs	r0, #48	@ 0x30
 800fb4e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800fb52:	4422      	add	r2, r4
 800fb54:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800fb58:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800fb5c:	3302      	adds	r3, #2
 800fb5e:	e7c7      	b.n	800faf0 <_printf_common+0x58>
 800fb60:	2301      	movs	r3, #1
 800fb62:	4622      	mov	r2, r4
 800fb64:	4641      	mov	r1, r8
 800fb66:	4638      	mov	r0, r7
 800fb68:	47c8      	blx	r9
 800fb6a:	3001      	adds	r0, #1
 800fb6c:	d0e6      	beq.n	800fb3c <_printf_common+0xa4>
 800fb6e:	3601      	adds	r6, #1
 800fb70:	e7d9      	b.n	800fb26 <_printf_common+0x8e>
	...

0800fb74 <_printf_i>:
 800fb74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800fb78:	7e0f      	ldrb	r7, [r1, #24]
 800fb7a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800fb7c:	2f78      	cmp	r7, #120	@ 0x78
 800fb7e:	4691      	mov	r9, r2
 800fb80:	4680      	mov	r8, r0
 800fb82:	460c      	mov	r4, r1
 800fb84:	469a      	mov	sl, r3
 800fb86:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800fb8a:	d807      	bhi.n	800fb9c <_printf_i+0x28>
 800fb8c:	2f62      	cmp	r7, #98	@ 0x62
 800fb8e:	d80a      	bhi.n	800fba6 <_printf_i+0x32>
 800fb90:	2f00      	cmp	r7, #0
 800fb92:	f000 80d1 	beq.w	800fd38 <_printf_i+0x1c4>
 800fb96:	2f58      	cmp	r7, #88	@ 0x58
 800fb98:	f000 80b8 	beq.w	800fd0c <_printf_i+0x198>
 800fb9c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800fba0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800fba4:	e03a      	b.n	800fc1c <_printf_i+0xa8>
 800fba6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800fbaa:	2b15      	cmp	r3, #21
 800fbac:	d8f6      	bhi.n	800fb9c <_printf_i+0x28>
 800fbae:	a101      	add	r1, pc, #4	@ (adr r1, 800fbb4 <_printf_i+0x40>)
 800fbb0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800fbb4:	0800fc0d 	.word	0x0800fc0d
 800fbb8:	0800fc21 	.word	0x0800fc21
 800fbbc:	0800fb9d 	.word	0x0800fb9d
 800fbc0:	0800fb9d 	.word	0x0800fb9d
 800fbc4:	0800fb9d 	.word	0x0800fb9d
 800fbc8:	0800fb9d 	.word	0x0800fb9d
 800fbcc:	0800fc21 	.word	0x0800fc21
 800fbd0:	0800fb9d 	.word	0x0800fb9d
 800fbd4:	0800fb9d 	.word	0x0800fb9d
 800fbd8:	0800fb9d 	.word	0x0800fb9d
 800fbdc:	0800fb9d 	.word	0x0800fb9d
 800fbe0:	0800fd1f 	.word	0x0800fd1f
 800fbe4:	0800fc4b 	.word	0x0800fc4b
 800fbe8:	0800fcd9 	.word	0x0800fcd9
 800fbec:	0800fb9d 	.word	0x0800fb9d
 800fbf0:	0800fb9d 	.word	0x0800fb9d
 800fbf4:	0800fd41 	.word	0x0800fd41
 800fbf8:	0800fb9d 	.word	0x0800fb9d
 800fbfc:	0800fc4b 	.word	0x0800fc4b
 800fc00:	0800fb9d 	.word	0x0800fb9d
 800fc04:	0800fb9d 	.word	0x0800fb9d
 800fc08:	0800fce1 	.word	0x0800fce1
 800fc0c:	6833      	ldr	r3, [r6, #0]
 800fc0e:	1d1a      	adds	r2, r3, #4
 800fc10:	681b      	ldr	r3, [r3, #0]
 800fc12:	6032      	str	r2, [r6, #0]
 800fc14:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800fc18:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800fc1c:	2301      	movs	r3, #1
 800fc1e:	e09c      	b.n	800fd5a <_printf_i+0x1e6>
 800fc20:	6833      	ldr	r3, [r6, #0]
 800fc22:	6820      	ldr	r0, [r4, #0]
 800fc24:	1d19      	adds	r1, r3, #4
 800fc26:	6031      	str	r1, [r6, #0]
 800fc28:	0606      	lsls	r6, r0, #24
 800fc2a:	d501      	bpl.n	800fc30 <_printf_i+0xbc>
 800fc2c:	681d      	ldr	r5, [r3, #0]
 800fc2e:	e003      	b.n	800fc38 <_printf_i+0xc4>
 800fc30:	0645      	lsls	r5, r0, #25
 800fc32:	d5fb      	bpl.n	800fc2c <_printf_i+0xb8>
 800fc34:	f9b3 5000 	ldrsh.w	r5, [r3]
 800fc38:	2d00      	cmp	r5, #0
 800fc3a:	da03      	bge.n	800fc44 <_printf_i+0xd0>
 800fc3c:	232d      	movs	r3, #45	@ 0x2d
 800fc3e:	426d      	negs	r5, r5
 800fc40:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800fc44:	4858      	ldr	r0, [pc, #352]	@ (800fda8 <_printf_i+0x234>)
 800fc46:	230a      	movs	r3, #10
 800fc48:	e011      	b.n	800fc6e <_printf_i+0xfa>
 800fc4a:	6821      	ldr	r1, [r4, #0]
 800fc4c:	6833      	ldr	r3, [r6, #0]
 800fc4e:	0608      	lsls	r0, r1, #24
 800fc50:	f853 5b04 	ldr.w	r5, [r3], #4
 800fc54:	d402      	bmi.n	800fc5c <_printf_i+0xe8>
 800fc56:	0649      	lsls	r1, r1, #25
 800fc58:	bf48      	it	mi
 800fc5a:	b2ad      	uxthmi	r5, r5
 800fc5c:	2f6f      	cmp	r7, #111	@ 0x6f
 800fc5e:	4852      	ldr	r0, [pc, #328]	@ (800fda8 <_printf_i+0x234>)
 800fc60:	6033      	str	r3, [r6, #0]
 800fc62:	bf14      	ite	ne
 800fc64:	230a      	movne	r3, #10
 800fc66:	2308      	moveq	r3, #8
 800fc68:	2100      	movs	r1, #0
 800fc6a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800fc6e:	6866      	ldr	r6, [r4, #4]
 800fc70:	60a6      	str	r6, [r4, #8]
 800fc72:	2e00      	cmp	r6, #0
 800fc74:	db05      	blt.n	800fc82 <_printf_i+0x10e>
 800fc76:	6821      	ldr	r1, [r4, #0]
 800fc78:	432e      	orrs	r6, r5
 800fc7a:	f021 0104 	bic.w	r1, r1, #4
 800fc7e:	6021      	str	r1, [r4, #0]
 800fc80:	d04b      	beq.n	800fd1a <_printf_i+0x1a6>
 800fc82:	4616      	mov	r6, r2
 800fc84:	fbb5 f1f3 	udiv	r1, r5, r3
 800fc88:	fb03 5711 	mls	r7, r3, r1, r5
 800fc8c:	5dc7      	ldrb	r7, [r0, r7]
 800fc8e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800fc92:	462f      	mov	r7, r5
 800fc94:	42bb      	cmp	r3, r7
 800fc96:	460d      	mov	r5, r1
 800fc98:	d9f4      	bls.n	800fc84 <_printf_i+0x110>
 800fc9a:	2b08      	cmp	r3, #8
 800fc9c:	d10b      	bne.n	800fcb6 <_printf_i+0x142>
 800fc9e:	6823      	ldr	r3, [r4, #0]
 800fca0:	07df      	lsls	r7, r3, #31
 800fca2:	d508      	bpl.n	800fcb6 <_printf_i+0x142>
 800fca4:	6923      	ldr	r3, [r4, #16]
 800fca6:	6861      	ldr	r1, [r4, #4]
 800fca8:	4299      	cmp	r1, r3
 800fcaa:	bfde      	ittt	le
 800fcac:	2330      	movle	r3, #48	@ 0x30
 800fcae:	f806 3c01 	strble.w	r3, [r6, #-1]
 800fcb2:	f106 36ff 	addle.w	r6, r6, #4294967295
 800fcb6:	1b92      	subs	r2, r2, r6
 800fcb8:	6122      	str	r2, [r4, #16]
 800fcba:	f8cd a000 	str.w	sl, [sp]
 800fcbe:	464b      	mov	r3, r9
 800fcc0:	aa03      	add	r2, sp, #12
 800fcc2:	4621      	mov	r1, r4
 800fcc4:	4640      	mov	r0, r8
 800fcc6:	f7ff fee7 	bl	800fa98 <_printf_common>
 800fcca:	3001      	adds	r0, #1
 800fccc:	d14a      	bne.n	800fd64 <_printf_i+0x1f0>
 800fcce:	f04f 30ff 	mov.w	r0, #4294967295
 800fcd2:	b004      	add	sp, #16
 800fcd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fcd8:	6823      	ldr	r3, [r4, #0]
 800fcda:	f043 0320 	orr.w	r3, r3, #32
 800fcde:	6023      	str	r3, [r4, #0]
 800fce0:	4832      	ldr	r0, [pc, #200]	@ (800fdac <_printf_i+0x238>)
 800fce2:	2778      	movs	r7, #120	@ 0x78
 800fce4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800fce8:	6823      	ldr	r3, [r4, #0]
 800fcea:	6831      	ldr	r1, [r6, #0]
 800fcec:	061f      	lsls	r7, r3, #24
 800fcee:	f851 5b04 	ldr.w	r5, [r1], #4
 800fcf2:	d402      	bmi.n	800fcfa <_printf_i+0x186>
 800fcf4:	065f      	lsls	r7, r3, #25
 800fcf6:	bf48      	it	mi
 800fcf8:	b2ad      	uxthmi	r5, r5
 800fcfa:	6031      	str	r1, [r6, #0]
 800fcfc:	07d9      	lsls	r1, r3, #31
 800fcfe:	bf44      	itt	mi
 800fd00:	f043 0320 	orrmi.w	r3, r3, #32
 800fd04:	6023      	strmi	r3, [r4, #0]
 800fd06:	b11d      	cbz	r5, 800fd10 <_printf_i+0x19c>
 800fd08:	2310      	movs	r3, #16
 800fd0a:	e7ad      	b.n	800fc68 <_printf_i+0xf4>
 800fd0c:	4826      	ldr	r0, [pc, #152]	@ (800fda8 <_printf_i+0x234>)
 800fd0e:	e7e9      	b.n	800fce4 <_printf_i+0x170>
 800fd10:	6823      	ldr	r3, [r4, #0]
 800fd12:	f023 0320 	bic.w	r3, r3, #32
 800fd16:	6023      	str	r3, [r4, #0]
 800fd18:	e7f6      	b.n	800fd08 <_printf_i+0x194>
 800fd1a:	4616      	mov	r6, r2
 800fd1c:	e7bd      	b.n	800fc9a <_printf_i+0x126>
 800fd1e:	6833      	ldr	r3, [r6, #0]
 800fd20:	6825      	ldr	r5, [r4, #0]
 800fd22:	6961      	ldr	r1, [r4, #20]
 800fd24:	1d18      	adds	r0, r3, #4
 800fd26:	6030      	str	r0, [r6, #0]
 800fd28:	062e      	lsls	r6, r5, #24
 800fd2a:	681b      	ldr	r3, [r3, #0]
 800fd2c:	d501      	bpl.n	800fd32 <_printf_i+0x1be>
 800fd2e:	6019      	str	r1, [r3, #0]
 800fd30:	e002      	b.n	800fd38 <_printf_i+0x1c4>
 800fd32:	0668      	lsls	r0, r5, #25
 800fd34:	d5fb      	bpl.n	800fd2e <_printf_i+0x1ba>
 800fd36:	8019      	strh	r1, [r3, #0]
 800fd38:	2300      	movs	r3, #0
 800fd3a:	6123      	str	r3, [r4, #16]
 800fd3c:	4616      	mov	r6, r2
 800fd3e:	e7bc      	b.n	800fcba <_printf_i+0x146>
 800fd40:	6833      	ldr	r3, [r6, #0]
 800fd42:	1d1a      	adds	r2, r3, #4
 800fd44:	6032      	str	r2, [r6, #0]
 800fd46:	681e      	ldr	r6, [r3, #0]
 800fd48:	6862      	ldr	r2, [r4, #4]
 800fd4a:	2100      	movs	r1, #0
 800fd4c:	4630      	mov	r0, r6
 800fd4e:	f7f0 fa17 	bl	8000180 <memchr>
 800fd52:	b108      	cbz	r0, 800fd58 <_printf_i+0x1e4>
 800fd54:	1b80      	subs	r0, r0, r6
 800fd56:	6060      	str	r0, [r4, #4]
 800fd58:	6863      	ldr	r3, [r4, #4]
 800fd5a:	6123      	str	r3, [r4, #16]
 800fd5c:	2300      	movs	r3, #0
 800fd5e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800fd62:	e7aa      	b.n	800fcba <_printf_i+0x146>
 800fd64:	6923      	ldr	r3, [r4, #16]
 800fd66:	4632      	mov	r2, r6
 800fd68:	4649      	mov	r1, r9
 800fd6a:	4640      	mov	r0, r8
 800fd6c:	47d0      	blx	sl
 800fd6e:	3001      	adds	r0, #1
 800fd70:	d0ad      	beq.n	800fcce <_printf_i+0x15a>
 800fd72:	6823      	ldr	r3, [r4, #0]
 800fd74:	079b      	lsls	r3, r3, #30
 800fd76:	d413      	bmi.n	800fda0 <_printf_i+0x22c>
 800fd78:	68e0      	ldr	r0, [r4, #12]
 800fd7a:	9b03      	ldr	r3, [sp, #12]
 800fd7c:	4298      	cmp	r0, r3
 800fd7e:	bfb8      	it	lt
 800fd80:	4618      	movlt	r0, r3
 800fd82:	e7a6      	b.n	800fcd2 <_printf_i+0x15e>
 800fd84:	2301      	movs	r3, #1
 800fd86:	4632      	mov	r2, r6
 800fd88:	4649      	mov	r1, r9
 800fd8a:	4640      	mov	r0, r8
 800fd8c:	47d0      	blx	sl
 800fd8e:	3001      	adds	r0, #1
 800fd90:	d09d      	beq.n	800fcce <_printf_i+0x15a>
 800fd92:	3501      	adds	r5, #1
 800fd94:	68e3      	ldr	r3, [r4, #12]
 800fd96:	9903      	ldr	r1, [sp, #12]
 800fd98:	1a5b      	subs	r3, r3, r1
 800fd9a:	42ab      	cmp	r3, r5
 800fd9c:	dcf2      	bgt.n	800fd84 <_printf_i+0x210>
 800fd9e:	e7eb      	b.n	800fd78 <_printf_i+0x204>
 800fda0:	2500      	movs	r5, #0
 800fda2:	f104 0619 	add.w	r6, r4, #25
 800fda6:	e7f5      	b.n	800fd94 <_printf_i+0x220>
 800fda8:	0801851b 	.word	0x0801851b
 800fdac:	0801852c 	.word	0x0801852c

0800fdb0 <_scanf_float>:
 800fdb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdb4:	b087      	sub	sp, #28
 800fdb6:	4691      	mov	r9, r2
 800fdb8:	9303      	str	r3, [sp, #12]
 800fdba:	688b      	ldr	r3, [r1, #8]
 800fdbc:	1e5a      	subs	r2, r3, #1
 800fdbe:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 800fdc2:	bf81      	itttt	hi
 800fdc4:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 800fdc8:	eb03 0b05 	addhi.w	fp, r3, r5
 800fdcc:	f240 135d 	movwhi	r3, #349	@ 0x15d
 800fdd0:	608b      	strhi	r3, [r1, #8]
 800fdd2:	680b      	ldr	r3, [r1, #0]
 800fdd4:	460a      	mov	r2, r1
 800fdd6:	f04f 0500 	mov.w	r5, #0
 800fdda:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 800fdde:	f842 3b1c 	str.w	r3, [r2], #28
 800fde2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fde6:	4680      	mov	r8, r0
 800fde8:	460c      	mov	r4, r1
 800fdea:	bf98      	it	ls
 800fdec:	f04f 0b00 	movls.w	fp, #0
 800fdf0:	9201      	str	r2, [sp, #4]
 800fdf2:	4616      	mov	r6, r2
 800fdf4:	46aa      	mov	sl, r5
 800fdf6:	462f      	mov	r7, r5
 800fdf8:	9502      	str	r5, [sp, #8]
 800fdfa:	68a2      	ldr	r2, [r4, #8]
 800fdfc:	b15a      	cbz	r2, 800fe16 <_scanf_float+0x66>
 800fdfe:	f8d9 3000 	ldr.w	r3, [r9]
 800fe02:	781b      	ldrb	r3, [r3, #0]
 800fe04:	2b4e      	cmp	r3, #78	@ 0x4e
 800fe06:	d863      	bhi.n	800fed0 <_scanf_float+0x120>
 800fe08:	2b40      	cmp	r3, #64	@ 0x40
 800fe0a:	d83b      	bhi.n	800fe84 <_scanf_float+0xd4>
 800fe0c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 800fe10:	b2c8      	uxtb	r0, r1
 800fe12:	280e      	cmp	r0, #14
 800fe14:	d939      	bls.n	800fe8a <_scanf_float+0xda>
 800fe16:	b11f      	cbz	r7, 800fe20 <_scanf_float+0x70>
 800fe18:	6823      	ldr	r3, [r4, #0]
 800fe1a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800fe1e:	6023      	str	r3, [r4, #0]
 800fe20:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe24:	f1ba 0f01 	cmp.w	sl, #1
 800fe28:	f200 8114 	bhi.w	8010054 <_scanf_float+0x2a4>
 800fe2c:	9b01      	ldr	r3, [sp, #4]
 800fe2e:	429e      	cmp	r6, r3
 800fe30:	f200 8105 	bhi.w	801003e <_scanf_float+0x28e>
 800fe34:	2001      	movs	r0, #1
 800fe36:	b007      	add	sp, #28
 800fe38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe3c:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 800fe40:	2a0d      	cmp	r2, #13
 800fe42:	d8e8      	bhi.n	800fe16 <_scanf_float+0x66>
 800fe44:	a101      	add	r1, pc, #4	@ (adr r1, 800fe4c <_scanf_float+0x9c>)
 800fe46:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800fe4a:	bf00      	nop
 800fe4c:	0800ff95 	.word	0x0800ff95
 800fe50:	0800fe17 	.word	0x0800fe17
 800fe54:	0800fe17 	.word	0x0800fe17
 800fe58:	0800fe17 	.word	0x0800fe17
 800fe5c:	0800fff1 	.word	0x0800fff1
 800fe60:	0800ffcb 	.word	0x0800ffcb
 800fe64:	0800fe17 	.word	0x0800fe17
 800fe68:	0800fe17 	.word	0x0800fe17
 800fe6c:	0800ffa3 	.word	0x0800ffa3
 800fe70:	0800fe17 	.word	0x0800fe17
 800fe74:	0800fe17 	.word	0x0800fe17
 800fe78:	0800fe17 	.word	0x0800fe17
 800fe7c:	0800fe17 	.word	0x0800fe17
 800fe80:	0800ff5f 	.word	0x0800ff5f
 800fe84:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 800fe88:	e7da      	b.n	800fe40 <_scanf_float+0x90>
 800fe8a:	290e      	cmp	r1, #14
 800fe8c:	d8c3      	bhi.n	800fe16 <_scanf_float+0x66>
 800fe8e:	a001      	add	r0, pc, #4	@ (adr r0, 800fe94 <_scanf_float+0xe4>)
 800fe90:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800fe94:	0800ff4f 	.word	0x0800ff4f
 800fe98:	0800fe17 	.word	0x0800fe17
 800fe9c:	0800ff4f 	.word	0x0800ff4f
 800fea0:	0800ffdf 	.word	0x0800ffdf
 800fea4:	0800fe17 	.word	0x0800fe17
 800fea8:	0800fef1 	.word	0x0800fef1
 800feac:	0800ff35 	.word	0x0800ff35
 800feb0:	0800ff35 	.word	0x0800ff35
 800feb4:	0800ff35 	.word	0x0800ff35
 800feb8:	0800ff35 	.word	0x0800ff35
 800febc:	0800ff35 	.word	0x0800ff35
 800fec0:	0800ff35 	.word	0x0800ff35
 800fec4:	0800ff35 	.word	0x0800ff35
 800fec8:	0800ff35 	.word	0x0800ff35
 800fecc:	0800ff35 	.word	0x0800ff35
 800fed0:	2b6e      	cmp	r3, #110	@ 0x6e
 800fed2:	d809      	bhi.n	800fee8 <_scanf_float+0x138>
 800fed4:	2b60      	cmp	r3, #96	@ 0x60
 800fed6:	d8b1      	bhi.n	800fe3c <_scanf_float+0x8c>
 800fed8:	2b54      	cmp	r3, #84	@ 0x54
 800feda:	d07b      	beq.n	800ffd4 <_scanf_float+0x224>
 800fedc:	2b59      	cmp	r3, #89	@ 0x59
 800fede:	d19a      	bne.n	800fe16 <_scanf_float+0x66>
 800fee0:	2d07      	cmp	r5, #7
 800fee2:	d198      	bne.n	800fe16 <_scanf_float+0x66>
 800fee4:	2508      	movs	r5, #8
 800fee6:	e02f      	b.n	800ff48 <_scanf_float+0x198>
 800fee8:	2b74      	cmp	r3, #116	@ 0x74
 800feea:	d073      	beq.n	800ffd4 <_scanf_float+0x224>
 800feec:	2b79      	cmp	r3, #121	@ 0x79
 800feee:	e7f6      	b.n	800fede <_scanf_float+0x12e>
 800fef0:	6821      	ldr	r1, [r4, #0]
 800fef2:	05c8      	lsls	r0, r1, #23
 800fef4:	d51e      	bpl.n	800ff34 <_scanf_float+0x184>
 800fef6:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800fefa:	6021      	str	r1, [r4, #0]
 800fefc:	3701      	adds	r7, #1
 800fefe:	f1bb 0f00 	cmp.w	fp, #0
 800ff02:	d003      	beq.n	800ff0c <_scanf_float+0x15c>
 800ff04:	3201      	adds	r2, #1
 800ff06:	f10b 3bff 	add.w	fp, fp, #4294967295
 800ff0a:	60a2      	str	r2, [r4, #8]
 800ff0c:	68a3      	ldr	r3, [r4, #8]
 800ff0e:	3b01      	subs	r3, #1
 800ff10:	60a3      	str	r3, [r4, #8]
 800ff12:	6923      	ldr	r3, [r4, #16]
 800ff14:	3301      	adds	r3, #1
 800ff16:	6123      	str	r3, [r4, #16]
 800ff18:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800ff1c:	3b01      	subs	r3, #1
 800ff1e:	2b00      	cmp	r3, #0
 800ff20:	f8c9 3004 	str.w	r3, [r9, #4]
 800ff24:	f340 8082 	ble.w	801002c <_scanf_float+0x27c>
 800ff28:	f8d9 3000 	ldr.w	r3, [r9]
 800ff2c:	3301      	adds	r3, #1
 800ff2e:	f8c9 3000 	str.w	r3, [r9]
 800ff32:	e762      	b.n	800fdfa <_scanf_float+0x4a>
 800ff34:	eb1a 0105 	adds.w	r1, sl, r5
 800ff38:	f47f af6d 	bne.w	800fe16 <_scanf_float+0x66>
 800ff3c:	6822      	ldr	r2, [r4, #0]
 800ff3e:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800ff42:	6022      	str	r2, [r4, #0]
 800ff44:	460d      	mov	r5, r1
 800ff46:	468a      	mov	sl, r1
 800ff48:	f806 3b01 	strb.w	r3, [r6], #1
 800ff4c:	e7de      	b.n	800ff0c <_scanf_float+0x15c>
 800ff4e:	6822      	ldr	r2, [r4, #0]
 800ff50:	0610      	lsls	r0, r2, #24
 800ff52:	f57f af60 	bpl.w	800fe16 <_scanf_float+0x66>
 800ff56:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800ff5a:	6022      	str	r2, [r4, #0]
 800ff5c:	e7f4      	b.n	800ff48 <_scanf_float+0x198>
 800ff5e:	f1ba 0f00 	cmp.w	sl, #0
 800ff62:	d10c      	bne.n	800ff7e <_scanf_float+0x1ce>
 800ff64:	b977      	cbnz	r7, 800ff84 <_scanf_float+0x1d4>
 800ff66:	6822      	ldr	r2, [r4, #0]
 800ff68:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800ff6c:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800ff70:	d108      	bne.n	800ff84 <_scanf_float+0x1d4>
 800ff72:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800ff76:	6022      	str	r2, [r4, #0]
 800ff78:	f04f 0a01 	mov.w	sl, #1
 800ff7c:	e7e4      	b.n	800ff48 <_scanf_float+0x198>
 800ff7e:	f1ba 0f02 	cmp.w	sl, #2
 800ff82:	d050      	beq.n	8010026 <_scanf_float+0x276>
 800ff84:	2d01      	cmp	r5, #1
 800ff86:	d002      	beq.n	800ff8e <_scanf_float+0x1de>
 800ff88:	2d04      	cmp	r5, #4
 800ff8a:	f47f af44 	bne.w	800fe16 <_scanf_float+0x66>
 800ff8e:	3501      	adds	r5, #1
 800ff90:	b2ed      	uxtb	r5, r5
 800ff92:	e7d9      	b.n	800ff48 <_scanf_float+0x198>
 800ff94:	f1ba 0f01 	cmp.w	sl, #1
 800ff98:	f47f af3d 	bne.w	800fe16 <_scanf_float+0x66>
 800ff9c:	f04f 0a02 	mov.w	sl, #2
 800ffa0:	e7d2      	b.n	800ff48 <_scanf_float+0x198>
 800ffa2:	b975      	cbnz	r5, 800ffc2 <_scanf_float+0x212>
 800ffa4:	2f00      	cmp	r7, #0
 800ffa6:	f47f af37 	bne.w	800fe18 <_scanf_float+0x68>
 800ffaa:	6822      	ldr	r2, [r4, #0]
 800ffac:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800ffb0:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800ffb4:	f040 8103 	bne.w	80101be <_scanf_float+0x40e>
 800ffb8:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800ffbc:	6022      	str	r2, [r4, #0]
 800ffbe:	2501      	movs	r5, #1
 800ffc0:	e7c2      	b.n	800ff48 <_scanf_float+0x198>
 800ffc2:	2d03      	cmp	r5, #3
 800ffc4:	d0e3      	beq.n	800ff8e <_scanf_float+0x1de>
 800ffc6:	2d05      	cmp	r5, #5
 800ffc8:	e7df      	b.n	800ff8a <_scanf_float+0x1da>
 800ffca:	2d02      	cmp	r5, #2
 800ffcc:	f47f af23 	bne.w	800fe16 <_scanf_float+0x66>
 800ffd0:	2503      	movs	r5, #3
 800ffd2:	e7b9      	b.n	800ff48 <_scanf_float+0x198>
 800ffd4:	2d06      	cmp	r5, #6
 800ffd6:	f47f af1e 	bne.w	800fe16 <_scanf_float+0x66>
 800ffda:	2507      	movs	r5, #7
 800ffdc:	e7b4      	b.n	800ff48 <_scanf_float+0x198>
 800ffde:	6822      	ldr	r2, [r4, #0]
 800ffe0:	0591      	lsls	r1, r2, #22
 800ffe2:	f57f af18 	bpl.w	800fe16 <_scanf_float+0x66>
 800ffe6:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800ffea:	6022      	str	r2, [r4, #0]
 800ffec:	9702      	str	r7, [sp, #8]
 800ffee:	e7ab      	b.n	800ff48 <_scanf_float+0x198>
 800fff0:	6822      	ldr	r2, [r4, #0]
 800fff2:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 800fff6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800fffa:	d005      	beq.n	8010008 <_scanf_float+0x258>
 800fffc:	0550      	lsls	r0, r2, #21
 800fffe:	f57f af0a 	bpl.w	800fe16 <_scanf_float+0x66>
 8010002:	2f00      	cmp	r7, #0
 8010004:	f000 80db 	beq.w	80101be <_scanf_float+0x40e>
 8010008:	0591      	lsls	r1, r2, #22
 801000a:	bf58      	it	pl
 801000c:	9902      	ldrpl	r1, [sp, #8]
 801000e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8010012:	bf58      	it	pl
 8010014:	1a79      	subpl	r1, r7, r1
 8010016:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 801001a:	bf58      	it	pl
 801001c:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8010020:	6022      	str	r2, [r4, #0]
 8010022:	2700      	movs	r7, #0
 8010024:	e790      	b.n	800ff48 <_scanf_float+0x198>
 8010026:	f04f 0a03 	mov.w	sl, #3
 801002a:	e78d      	b.n	800ff48 <_scanf_float+0x198>
 801002c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8010030:	4649      	mov	r1, r9
 8010032:	4640      	mov	r0, r8
 8010034:	4798      	blx	r3
 8010036:	2800      	cmp	r0, #0
 8010038:	f43f aedf 	beq.w	800fdfa <_scanf_float+0x4a>
 801003c:	e6eb      	b.n	800fe16 <_scanf_float+0x66>
 801003e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8010042:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8010046:	464a      	mov	r2, r9
 8010048:	4640      	mov	r0, r8
 801004a:	4798      	blx	r3
 801004c:	6923      	ldr	r3, [r4, #16]
 801004e:	3b01      	subs	r3, #1
 8010050:	6123      	str	r3, [r4, #16]
 8010052:	e6eb      	b.n	800fe2c <_scanf_float+0x7c>
 8010054:	1e6b      	subs	r3, r5, #1
 8010056:	2b06      	cmp	r3, #6
 8010058:	d824      	bhi.n	80100a4 <_scanf_float+0x2f4>
 801005a:	2d02      	cmp	r5, #2
 801005c:	d836      	bhi.n	80100cc <_scanf_float+0x31c>
 801005e:	9b01      	ldr	r3, [sp, #4]
 8010060:	429e      	cmp	r6, r3
 8010062:	f67f aee7 	bls.w	800fe34 <_scanf_float+0x84>
 8010066:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 801006a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 801006e:	464a      	mov	r2, r9
 8010070:	4640      	mov	r0, r8
 8010072:	4798      	blx	r3
 8010074:	6923      	ldr	r3, [r4, #16]
 8010076:	3b01      	subs	r3, #1
 8010078:	6123      	str	r3, [r4, #16]
 801007a:	e7f0      	b.n	801005e <_scanf_float+0x2ae>
 801007c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8010080:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8010084:	464a      	mov	r2, r9
 8010086:	4640      	mov	r0, r8
 8010088:	4798      	blx	r3
 801008a:	6923      	ldr	r3, [r4, #16]
 801008c:	3b01      	subs	r3, #1
 801008e:	6123      	str	r3, [r4, #16]
 8010090:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010094:	fa5f fa8a 	uxtb.w	sl, sl
 8010098:	f1ba 0f02 	cmp.w	sl, #2
 801009c:	d1ee      	bne.n	801007c <_scanf_float+0x2cc>
 801009e:	3d03      	subs	r5, #3
 80100a0:	b2ed      	uxtb	r5, r5
 80100a2:	1b76      	subs	r6, r6, r5
 80100a4:	6823      	ldr	r3, [r4, #0]
 80100a6:	05da      	lsls	r2, r3, #23
 80100a8:	d530      	bpl.n	801010c <_scanf_float+0x35c>
 80100aa:	055b      	lsls	r3, r3, #21
 80100ac:	d511      	bpl.n	80100d2 <_scanf_float+0x322>
 80100ae:	9b01      	ldr	r3, [sp, #4]
 80100b0:	429e      	cmp	r6, r3
 80100b2:	f67f aebf 	bls.w	800fe34 <_scanf_float+0x84>
 80100b6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80100ba:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80100be:	464a      	mov	r2, r9
 80100c0:	4640      	mov	r0, r8
 80100c2:	4798      	blx	r3
 80100c4:	6923      	ldr	r3, [r4, #16]
 80100c6:	3b01      	subs	r3, #1
 80100c8:	6123      	str	r3, [r4, #16]
 80100ca:	e7f0      	b.n	80100ae <_scanf_float+0x2fe>
 80100cc:	46aa      	mov	sl, r5
 80100ce:	46b3      	mov	fp, r6
 80100d0:	e7de      	b.n	8010090 <_scanf_float+0x2e0>
 80100d2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80100d6:	6923      	ldr	r3, [r4, #16]
 80100d8:	2965      	cmp	r1, #101	@ 0x65
 80100da:	f103 33ff 	add.w	r3, r3, #4294967295
 80100de:	f106 35ff 	add.w	r5, r6, #4294967295
 80100e2:	6123      	str	r3, [r4, #16]
 80100e4:	d00c      	beq.n	8010100 <_scanf_float+0x350>
 80100e6:	2945      	cmp	r1, #69	@ 0x45
 80100e8:	d00a      	beq.n	8010100 <_scanf_float+0x350>
 80100ea:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80100ee:	464a      	mov	r2, r9
 80100f0:	4640      	mov	r0, r8
 80100f2:	4798      	blx	r3
 80100f4:	6923      	ldr	r3, [r4, #16]
 80100f6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80100fa:	3b01      	subs	r3, #1
 80100fc:	1eb5      	subs	r5, r6, #2
 80100fe:	6123      	str	r3, [r4, #16]
 8010100:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8010104:	464a      	mov	r2, r9
 8010106:	4640      	mov	r0, r8
 8010108:	4798      	blx	r3
 801010a:	462e      	mov	r6, r5
 801010c:	6822      	ldr	r2, [r4, #0]
 801010e:	f012 0210 	ands.w	r2, r2, #16
 8010112:	d001      	beq.n	8010118 <_scanf_float+0x368>
 8010114:	2000      	movs	r0, #0
 8010116:	e68e      	b.n	800fe36 <_scanf_float+0x86>
 8010118:	7032      	strb	r2, [r6, #0]
 801011a:	6823      	ldr	r3, [r4, #0]
 801011c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8010120:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8010124:	d125      	bne.n	8010172 <_scanf_float+0x3c2>
 8010126:	9b02      	ldr	r3, [sp, #8]
 8010128:	429f      	cmp	r7, r3
 801012a:	d00a      	beq.n	8010142 <_scanf_float+0x392>
 801012c:	1bda      	subs	r2, r3, r7
 801012e:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8010132:	429e      	cmp	r6, r3
 8010134:	bf28      	it	cs
 8010136:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 801013a:	4922      	ldr	r1, [pc, #136]	@ (80101c4 <_scanf_float+0x414>)
 801013c:	4630      	mov	r0, r6
 801013e:	f000 f93d 	bl	80103bc <siprintf>
 8010142:	9901      	ldr	r1, [sp, #4]
 8010144:	2200      	movs	r2, #0
 8010146:	4640      	mov	r0, r8
 8010148:	f002 fc36 	bl	80129b8 <_strtod_r>
 801014c:	9b03      	ldr	r3, [sp, #12]
 801014e:	6821      	ldr	r1, [r4, #0]
 8010150:	681b      	ldr	r3, [r3, #0]
 8010152:	f011 0f02 	tst.w	r1, #2
 8010156:	ec57 6b10 	vmov	r6, r7, d0
 801015a:	f103 0204 	add.w	r2, r3, #4
 801015e:	d015      	beq.n	801018c <_scanf_float+0x3dc>
 8010160:	9903      	ldr	r1, [sp, #12]
 8010162:	600a      	str	r2, [r1, #0]
 8010164:	681b      	ldr	r3, [r3, #0]
 8010166:	e9c3 6700 	strd	r6, r7, [r3]
 801016a:	68e3      	ldr	r3, [r4, #12]
 801016c:	3301      	adds	r3, #1
 801016e:	60e3      	str	r3, [r4, #12]
 8010170:	e7d0      	b.n	8010114 <_scanf_float+0x364>
 8010172:	9b04      	ldr	r3, [sp, #16]
 8010174:	2b00      	cmp	r3, #0
 8010176:	d0e4      	beq.n	8010142 <_scanf_float+0x392>
 8010178:	9905      	ldr	r1, [sp, #20]
 801017a:	230a      	movs	r3, #10
 801017c:	3101      	adds	r1, #1
 801017e:	4640      	mov	r0, r8
 8010180:	f7ff f9be 	bl	800f500 <_strtol_r>
 8010184:	9b04      	ldr	r3, [sp, #16]
 8010186:	9e05      	ldr	r6, [sp, #20]
 8010188:	1ac2      	subs	r2, r0, r3
 801018a:	e7d0      	b.n	801012e <_scanf_float+0x37e>
 801018c:	f011 0f04 	tst.w	r1, #4
 8010190:	9903      	ldr	r1, [sp, #12]
 8010192:	600a      	str	r2, [r1, #0]
 8010194:	d1e6      	bne.n	8010164 <_scanf_float+0x3b4>
 8010196:	681d      	ldr	r5, [r3, #0]
 8010198:	4632      	mov	r2, r6
 801019a:	463b      	mov	r3, r7
 801019c:	4630      	mov	r0, r6
 801019e:	4639      	mov	r1, r7
 80101a0:	f7f0 fc9c 	bl	8000adc <__aeabi_dcmpun>
 80101a4:	b128      	cbz	r0, 80101b2 <_scanf_float+0x402>
 80101a6:	4808      	ldr	r0, [pc, #32]	@ (80101c8 <_scanf_float+0x418>)
 80101a8:	f000 f9fc 	bl	80105a4 <nanf>
 80101ac:	ed85 0a00 	vstr	s0, [r5]
 80101b0:	e7db      	b.n	801016a <_scanf_float+0x3ba>
 80101b2:	4630      	mov	r0, r6
 80101b4:	4639      	mov	r1, r7
 80101b6:	f7f0 fcef 	bl	8000b98 <__aeabi_d2f>
 80101ba:	6028      	str	r0, [r5, #0]
 80101bc:	e7d5      	b.n	801016a <_scanf_float+0x3ba>
 80101be:	2700      	movs	r7, #0
 80101c0:	e62e      	b.n	800fe20 <_scanf_float+0x70>
 80101c2:	bf00      	nop
 80101c4:	0801853d 	.word	0x0801853d
 80101c8:	0801867e 	.word	0x0801867e

080101cc <std>:
 80101cc:	2300      	movs	r3, #0
 80101ce:	b510      	push	{r4, lr}
 80101d0:	4604      	mov	r4, r0
 80101d2:	e9c0 3300 	strd	r3, r3, [r0]
 80101d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80101da:	6083      	str	r3, [r0, #8]
 80101dc:	8181      	strh	r1, [r0, #12]
 80101de:	6643      	str	r3, [r0, #100]	@ 0x64
 80101e0:	81c2      	strh	r2, [r0, #14]
 80101e2:	6183      	str	r3, [r0, #24]
 80101e4:	4619      	mov	r1, r3
 80101e6:	2208      	movs	r2, #8
 80101e8:	305c      	adds	r0, #92	@ 0x5c
 80101ea:	f000 f94c 	bl	8010486 <memset>
 80101ee:	4b0d      	ldr	r3, [pc, #52]	@ (8010224 <std+0x58>)
 80101f0:	6263      	str	r3, [r4, #36]	@ 0x24
 80101f2:	4b0d      	ldr	r3, [pc, #52]	@ (8010228 <std+0x5c>)
 80101f4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80101f6:	4b0d      	ldr	r3, [pc, #52]	@ (801022c <std+0x60>)
 80101f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80101fa:	4b0d      	ldr	r3, [pc, #52]	@ (8010230 <std+0x64>)
 80101fc:	6323      	str	r3, [r4, #48]	@ 0x30
 80101fe:	4b0d      	ldr	r3, [pc, #52]	@ (8010234 <std+0x68>)
 8010200:	6224      	str	r4, [r4, #32]
 8010202:	429c      	cmp	r4, r3
 8010204:	d006      	beq.n	8010214 <std+0x48>
 8010206:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801020a:	4294      	cmp	r4, r2
 801020c:	d002      	beq.n	8010214 <std+0x48>
 801020e:	33d0      	adds	r3, #208	@ 0xd0
 8010210:	429c      	cmp	r4, r3
 8010212:	d105      	bne.n	8010220 <std+0x54>
 8010214:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8010218:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801021c:	f000 b9b0 	b.w	8010580 <__retarget_lock_init_recursive>
 8010220:	bd10      	pop	{r4, pc}
 8010222:	bf00      	nop
 8010224:	08010401 	.word	0x08010401
 8010228:	08010423 	.word	0x08010423
 801022c:	0801045b 	.word	0x0801045b
 8010230:	0801047f 	.word	0x0801047f
 8010234:	20005a48 	.word	0x20005a48

08010238 <stdio_exit_handler>:
 8010238:	4a02      	ldr	r2, [pc, #8]	@ (8010244 <stdio_exit_handler+0xc>)
 801023a:	4903      	ldr	r1, [pc, #12]	@ (8010248 <stdio_exit_handler+0x10>)
 801023c:	4803      	ldr	r0, [pc, #12]	@ (801024c <stdio_exit_handler+0x14>)
 801023e:	f000 b869 	b.w	8010314 <_fwalk_sglue>
 8010242:	bf00      	nop
 8010244:	20000134 	.word	0x20000134
 8010248:	08012d7d 	.word	0x08012d7d
 801024c:	20000144 	.word	0x20000144

08010250 <cleanup_stdio>:
 8010250:	6841      	ldr	r1, [r0, #4]
 8010252:	4b0c      	ldr	r3, [pc, #48]	@ (8010284 <cleanup_stdio+0x34>)
 8010254:	4299      	cmp	r1, r3
 8010256:	b510      	push	{r4, lr}
 8010258:	4604      	mov	r4, r0
 801025a:	d001      	beq.n	8010260 <cleanup_stdio+0x10>
 801025c:	f002 fd8e 	bl	8012d7c <_fflush_r>
 8010260:	68a1      	ldr	r1, [r4, #8]
 8010262:	4b09      	ldr	r3, [pc, #36]	@ (8010288 <cleanup_stdio+0x38>)
 8010264:	4299      	cmp	r1, r3
 8010266:	d002      	beq.n	801026e <cleanup_stdio+0x1e>
 8010268:	4620      	mov	r0, r4
 801026a:	f002 fd87 	bl	8012d7c <_fflush_r>
 801026e:	68e1      	ldr	r1, [r4, #12]
 8010270:	4b06      	ldr	r3, [pc, #24]	@ (801028c <cleanup_stdio+0x3c>)
 8010272:	4299      	cmp	r1, r3
 8010274:	d004      	beq.n	8010280 <cleanup_stdio+0x30>
 8010276:	4620      	mov	r0, r4
 8010278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801027c:	f002 bd7e 	b.w	8012d7c <_fflush_r>
 8010280:	bd10      	pop	{r4, pc}
 8010282:	bf00      	nop
 8010284:	20005a48 	.word	0x20005a48
 8010288:	20005ab0 	.word	0x20005ab0
 801028c:	20005b18 	.word	0x20005b18

08010290 <global_stdio_init.part.0>:
 8010290:	b510      	push	{r4, lr}
 8010292:	4b0b      	ldr	r3, [pc, #44]	@ (80102c0 <global_stdio_init.part.0+0x30>)
 8010294:	4c0b      	ldr	r4, [pc, #44]	@ (80102c4 <global_stdio_init.part.0+0x34>)
 8010296:	4a0c      	ldr	r2, [pc, #48]	@ (80102c8 <global_stdio_init.part.0+0x38>)
 8010298:	601a      	str	r2, [r3, #0]
 801029a:	4620      	mov	r0, r4
 801029c:	2200      	movs	r2, #0
 801029e:	2104      	movs	r1, #4
 80102a0:	f7ff ff94 	bl	80101cc <std>
 80102a4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80102a8:	2201      	movs	r2, #1
 80102aa:	2109      	movs	r1, #9
 80102ac:	f7ff ff8e 	bl	80101cc <std>
 80102b0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80102b4:	2202      	movs	r2, #2
 80102b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80102ba:	2112      	movs	r1, #18
 80102bc:	f7ff bf86 	b.w	80101cc <std>
 80102c0:	20005b80 	.word	0x20005b80
 80102c4:	20005a48 	.word	0x20005a48
 80102c8:	08010239 	.word	0x08010239

080102cc <__sfp_lock_acquire>:
 80102cc:	4801      	ldr	r0, [pc, #4]	@ (80102d4 <__sfp_lock_acquire+0x8>)
 80102ce:	f000 b958 	b.w	8010582 <__retarget_lock_acquire_recursive>
 80102d2:	bf00      	nop
 80102d4:	20005b89 	.word	0x20005b89

080102d8 <__sfp_lock_release>:
 80102d8:	4801      	ldr	r0, [pc, #4]	@ (80102e0 <__sfp_lock_release+0x8>)
 80102da:	f000 b953 	b.w	8010584 <__retarget_lock_release_recursive>
 80102de:	bf00      	nop
 80102e0:	20005b89 	.word	0x20005b89

080102e4 <__sinit>:
 80102e4:	b510      	push	{r4, lr}
 80102e6:	4604      	mov	r4, r0
 80102e8:	f7ff fff0 	bl	80102cc <__sfp_lock_acquire>
 80102ec:	6a23      	ldr	r3, [r4, #32]
 80102ee:	b11b      	cbz	r3, 80102f8 <__sinit+0x14>
 80102f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80102f4:	f7ff bff0 	b.w	80102d8 <__sfp_lock_release>
 80102f8:	4b04      	ldr	r3, [pc, #16]	@ (801030c <__sinit+0x28>)
 80102fa:	6223      	str	r3, [r4, #32]
 80102fc:	4b04      	ldr	r3, [pc, #16]	@ (8010310 <__sinit+0x2c>)
 80102fe:	681b      	ldr	r3, [r3, #0]
 8010300:	2b00      	cmp	r3, #0
 8010302:	d1f5      	bne.n	80102f0 <__sinit+0xc>
 8010304:	f7ff ffc4 	bl	8010290 <global_stdio_init.part.0>
 8010308:	e7f2      	b.n	80102f0 <__sinit+0xc>
 801030a:	bf00      	nop
 801030c:	08010251 	.word	0x08010251
 8010310:	20005b80 	.word	0x20005b80

08010314 <_fwalk_sglue>:
 8010314:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010318:	4607      	mov	r7, r0
 801031a:	4688      	mov	r8, r1
 801031c:	4614      	mov	r4, r2
 801031e:	2600      	movs	r6, #0
 8010320:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8010324:	f1b9 0901 	subs.w	r9, r9, #1
 8010328:	d505      	bpl.n	8010336 <_fwalk_sglue+0x22>
 801032a:	6824      	ldr	r4, [r4, #0]
 801032c:	2c00      	cmp	r4, #0
 801032e:	d1f7      	bne.n	8010320 <_fwalk_sglue+0xc>
 8010330:	4630      	mov	r0, r6
 8010332:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010336:	89ab      	ldrh	r3, [r5, #12]
 8010338:	2b01      	cmp	r3, #1
 801033a:	d907      	bls.n	801034c <_fwalk_sglue+0x38>
 801033c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8010340:	3301      	adds	r3, #1
 8010342:	d003      	beq.n	801034c <_fwalk_sglue+0x38>
 8010344:	4629      	mov	r1, r5
 8010346:	4638      	mov	r0, r7
 8010348:	47c0      	blx	r8
 801034a:	4306      	orrs	r6, r0
 801034c:	3568      	adds	r5, #104	@ 0x68
 801034e:	e7e9      	b.n	8010324 <_fwalk_sglue+0x10>

08010350 <sniprintf>:
 8010350:	b40c      	push	{r2, r3}
 8010352:	b530      	push	{r4, r5, lr}
 8010354:	4b18      	ldr	r3, [pc, #96]	@ (80103b8 <sniprintf+0x68>)
 8010356:	1e0c      	subs	r4, r1, #0
 8010358:	681d      	ldr	r5, [r3, #0]
 801035a:	b09d      	sub	sp, #116	@ 0x74
 801035c:	da08      	bge.n	8010370 <sniprintf+0x20>
 801035e:	238b      	movs	r3, #139	@ 0x8b
 8010360:	602b      	str	r3, [r5, #0]
 8010362:	f04f 30ff 	mov.w	r0, #4294967295
 8010366:	b01d      	add	sp, #116	@ 0x74
 8010368:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801036c:	b002      	add	sp, #8
 801036e:	4770      	bx	lr
 8010370:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8010374:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010378:	f04f 0300 	mov.w	r3, #0
 801037c:	931b      	str	r3, [sp, #108]	@ 0x6c
 801037e:	bf14      	ite	ne
 8010380:	f104 33ff 	addne.w	r3, r4, #4294967295
 8010384:	4623      	moveq	r3, r4
 8010386:	9304      	str	r3, [sp, #16]
 8010388:	9307      	str	r3, [sp, #28]
 801038a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801038e:	9002      	str	r0, [sp, #8]
 8010390:	9006      	str	r0, [sp, #24]
 8010392:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010396:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8010398:	ab21      	add	r3, sp, #132	@ 0x84
 801039a:	a902      	add	r1, sp, #8
 801039c:	4628      	mov	r0, r5
 801039e:	9301      	str	r3, [sp, #4]
 80103a0:	f002 fb6c 	bl	8012a7c <_svfiprintf_r>
 80103a4:	1c43      	adds	r3, r0, #1
 80103a6:	bfbc      	itt	lt
 80103a8:	238b      	movlt	r3, #139	@ 0x8b
 80103aa:	602b      	strlt	r3, [r5, #0]
 80103ac:	2c00      	cmp	r4, #0
 80103ae:	d0da      	beq.n	8010366 <sniprintf+0x16>
 80103b0:	9b02      	ldr	r3, [sp, #8]
 80103b2:	2200      	movs	r2, #0
 80103b4:	701a      	strb	r2, [r3, #0]
 80103b6:	e7d6      	b.n	8010366 <sniprintf+0x16>
 80103b8:	20000140 	.word	0x20000140

080103bc <siprintf>:
 80103bc:	b40e      	push	{r1, r2, r3}
 80103be:	b510      	push	{r4, lr}
 80103c0:	b09d      	sub	sp, #116	@ 0x74
 80103c2:	ab1f      	add	r3, sp, #124	@ 0x7c
 80103c4:	9002      	str	r0, [sp, #8]
 80103c6:	9006      	str	r0, [sp, #24]
 80103c8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80103cc:	480a      	ldr	r0, [pc, #40]	@ (80103f8 <siprintf+0x3c>)
 80103ce:	9107      	str	r1, [sp, #28]
 80103d0:	9104      	str	r1, [sp, #16]
 80103d2:	490a      	ldr	r1, [pc, #40]	@ (80103fc <siprintf+0x40>)
 80103d4:	f853 2b04 	ldr.w	r2, [r3], #4
 80103d8:	9105      	str	r1, [sp, #20]
 80103da:	2400      	movs	r4, #0
 80103dc:	a902      	add	r1, sp, #8
 80103de:	6800      	ldr	r0, [r0, #0]
 80103e0:	9301      	str	r3, [sp, #4]
 80103e2:	941b      	str	r4, [sp, #108]	@ 0x6c
 80103e4:	f002 fb4a 	bl	8012a7c <_svfiprintf_r>
 80103e8:	9b02      	ldr	r3, [sp, #8]
 80103ea:	701c      	strb	r4, [r3, #0]
 80103ec:	b01d      	add	sp, #116	@ 0x74
 80103ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103f2:	b003      	add	sp, #12
 80103f4:	4770      	bx	lr
 80103f6:	bf00      	nop
 80103f8:	20000140 	.word	0x20000140
 80103fc:	ffff0208 	.word	0xffff0208

08010400 <__sread>:
 8010400:	b510      	push	{r4, lr}
 8010402:	460c      	mov	r4, r1
 8010404:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010408:	f000 f86c 	bl	80104e4 <_read_r>
 801040c:	2800      	cmp	r0, #0
 801040e:	bfab      	itete	ge
 8010410:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8010412:	89a3      	ldrhlt	r3, [r4, #12]
 8010414:	181b      	addge	r3, r3, r0
 8010416:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801041a:	bfac      	ite	ge
 801041c:	6563      	strge	r3, [r4, #84]	@ 0x54
 801041e:	81a3      	strhlt	r3, [r4, #12]
 8010420:	bd10      	pop	{r4, pc}

08010422 <__swrite>:
 8010422:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010426:	461f      	mov	r7, r3
 8010428:	898b      	ldrh	r3, [r1, #12]
 801042a:	05db      	lsls	r3, r3, #23
 801042c:	4605      	mov	r5, r0
 801042e:	460c      	mov	r4, r1
 8010430:	4616      	mov	r6, r2
 8010432:	d505      	bpl.n	8010440 <__swrite+0x1e>
 8010434:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010438:	2302      	movs	r3, #2
 801043a:	2200      	movs	r2, #0
 801043c:	f000 f840 	bl	80104c0 <_lseek_r>
 8010440:	89a3      	ldrh	r3, [r4, #12]
 8010442:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8010446:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801044a:	81a3      	strh	r3, [r4, #12]
 801044c:	4632      	mov	r2, r6
 801044e:	463b      	mov	r3, r7
 8010450:	4628      	mov	r0, r5
 8010452:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010456:	f000 b857 	b.w	8010508 <_write_r>

0801045a <__sseek>:
 801045a:	b510      	push	{r4, lr}
 801045c:	460c      	mov	r4, r1
 801045e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010462:	f000 f82d 	bl	80104c0 <_lseek_r>
 8010466:	1c43      	adds	r3, r0, #1
 8010468:	89a3      	ldrh	r3, [r4, #12]
 801046a:	bf15      	itete	ne
 801046c:	6560      	strne	r0, [r4, #84]	@ 0x54
 801046e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8010472:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8010476:	81a3      	strheq	r3, [r4, #12]
 8010478:	bf18      	it	ne
 801047a:	81a3      	strhne	r3, [r4, #12]
 801047c:	bd10      	pop	{r4, pc}

0801047e <__sclose>:
 801047e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010482:	f000 b80d 	b.w	80104a0 <_close_r>

08010486 <memset>:
 8010486:	4402      	add	r2, r0
 8010488:	4603      	mov	r3, r0
 801048a:	4293      	cmp	r3, r2
 801048c:	d100      	bne.n	8010490 <memset+0xa>
 801048e:	4770      	bx	lr
 8010490:	f803 1b01 	strb.w	r1, [r3], #1
 8010494:	e7f9      	b.n	801048a <memset+0x4>
	...

08010498 <_localeconv_r>:
 8010498:	4800      	ldr	r0, [pc, #0]	@ (801049c <_localeconv_r+0x4>)
 801049a:	4770      	bx	lr
 801049c:	20000280 	.word	0x20000280

080104a0 <_close_r>:
 80104a0:	b538      	push	{r3, r4, r5, lr}
 80104a2:	4d06      	ldr	r5, [pc, #24]	@ (80104bc <_close_r+0x1c>)
 80104a4:	2300      	movs	r3, #0
 80104a6:	4604      	mov	r4, r0
 80104a8:	4608      	mov	r0, r1
 80104aa:	602b      	str	r3, [r5, #0]
 80104ac:	f7f4 fd68 	bl	8004f80 <_close>
 80104b0:	1c43      	adds	r3, r0, #1
 80104b2:	d102      	bne.n	80104ba <_close_r+0x1a>
 80104b4:	682b      	ldr	r3, [r5, #0]
 80104b6:	b103      	cbz	r3, 80104ba <_close_r+0x1a>
 80104b8:	6023      	str	r3, [r4, #0]
 80104ba:	bd38      	pop	{r3, r4, r5, pc}
 80104bc:	20005b84 	.word	0x20005b84

080104c0 <_lseek_r>:
 80104c0:	b538      	push	{r3, r4, r5, lr}
 80104c2:	4d07      	ldr	r5, [pc, #28]	@ (80104e0 <_lseek_r+0x20>)
 80104c4:	4604      	mov	r4, r0
 80104c6:	4608      	mov	r0, r1
 80104c8:	4611      	mov	r1, r2
 80104ca:	2200      	movs	r2, #0
 80104cc:	602a      	str	r2, [r5, #0]
 80104ce:	461a      	mov	r2, r3
 80104d0:	f7f4 fd62 	bl	8004f98 <_lseek>
 80104d4:	1c43      	adds	r3, r0, #1
 80104d6:	d102      	bne.n	80104de <_lseek_r+0x1e>
 80104d8:	682b      	ldr	r3, [r5, #0]
 80104da:	b103      	cbz	r3, 80104de <_lseek_r+0x1e>
 80104dc:	6023      	str	r3, [r4, #0]
 80104de:	bd38      	pop	{r3, r4, r5, pc}
 80104e0:	20005b84 	.word	0x20005b84

080104e4 <_read_r>:
 80104e4:	b538      	push	{r3, r4, r5, lr}
 80104e6:	4d07      	ldr	r5, [pc, #28]	@ (8010504 <_read_r+0x20>)
 80104e8:	4604      	mov	r4, r0
 80104ea:	4608      	mov	r0, r1
 80104ec:	4611      	mov	r1, r2
 80104ee:	2200      	movs	r2, #0
 80104f0:	602a      	str	r2, [r5, #0]
 80104f2:	461a      	mov	r2, r3
 80104f4:	f7f4 fd28 	bl	8004f48 <_read>
 80104f8:	1c43      	adds	r3, r0, #1
 80104fa:	d102      	bne.n	8010502 <_read_r+0x1e>
 80104fc:	682b      	ldr	r3, [r5, #0]
 80104fe:	b103      	cbz	r3, 8010502 <_read_r+0x1e>
 8010500:	6023      	str	r3, [r4, #0]
 8010502:	bd38      	pop	{r3, r4, r5, pc}
 8010504:	20005b84 	.word	0x20005b84

08010508 <_write_r>:
 8010508:	b538      	push	{r3, r4, r5, lr}
 801050a:	4d07      	ldr	r5, [pc, #28]	@ (8010528 <_write_r+0x20>)
 801050c:	4604      	mov	r4, r0
 801050e:	4608      	mov	r0, r1
 8010510:	4611      	mov	r1, r2
 8010512:	2200      	movs	r2, #0
 8010514:	602a      	str	r2, [r5, #0]
 8010516:	461a      	mov	r2, r3
 8010518:	f7f4 fd24 	bl	8004f64 <_write>
 801051c:	1c43      	adds	r3, r0, #1
 801051e:	d102      	bne.n	8010526 <_write_r+0x1e>
 8010520:	682b      	ldr	r3, [r5, #0]
 8010522:	b103      	cbz	r3, 8010526 <_write_r+0x1e>
 8010524:	6023      	str	r3, [r4, #0]
 8010526:	bd38      	pop	{r3, r4, r5, pc}
 8010528:	20005b84 	.word	0x20005b84

0801052c <__errno>:
 801052c:	4b01      	ldr	r3, [pc, #4]	@ (8010534 <__errno+0x8>)
 801052e:	6818      	ldr	r0, [r3, #0]
 8010530:	4770      	bx	lr
 8010532:	bf00      	nop
 8010534:	20000140 	.word	0x20000140

08010538 <__libc_init_array>:
 8010538:	b570      	push	{r4, r5, r6, lr}
 801053a:	4d0d      	ldr	r5, [pc, #52]	@ (8010570 <__libc_init_array+0x38>)
 801053c:	4c0d      	ldr	r4, [pc, #52]	@ (8010574 <__libc_init_array+0x3c>)
 801053e:	1b64      	subs	r4, r4, r5
 8010540:	10a4      	asrs	r4, r4, #2
 8010542:	2600      	movs	r6, #0
 8010544:	42a6      	cmp	r6, r4
 8010546:	d109      	bne.n	801055c <__libc_init_array+0x24>
 8010548:	4d0b      	ldr	r5, [pc, #44]	@ (8010578 <__libc_init_array+0x40>)
 801054a:	4c0c      	ldr	r4, [pc, #48]	@ (801057c <__libc_init_array+0x44>)
 801054c:	f005 fca0 	bl	8015e90 <_init>
 8010550:	1b64      	subs	r4, r4, r5
 8010552:	10a4      	asrs	r4, r4, #2
 8010554:	2600      	movs	r6, #0
 8010556:	42a6      	cmp	r6, r4
 8010558:	d105      	bne.n	8010566 <__libc_init_array+0x2e>
 801055a:	bd70      	pop	{r4, r5, r6, pc}
 801055c:	f855 3b04 	ldr.w	r3, [r5], #4
 8010560:	4798      	blx	r3
 8010562:	3601      	adds	r6, #1
 8010564:	e7ee      	b.n	8010544 <__libc_init_array+0xc>
 8010566:	f855 3b04 	ldr.w	r3, [r5], #4
 801056a:	4798      	blx	r3
 801056c:	3601      	adds	r6, #1
 801056e:	e7f2      	b.n	8010556 <__libc_init_array+0x1e>
 8010570:	08018a38 	.word	0x08018a38
 8010574:	08018a38 	.word	0x08018a38
 8010578:	08018a38 	.word	0x08018a38
 801057c:	08018a3c 	.word	0x08018a3c

08010580 <__retarget_lock_init_recursive>:
 8010580:	4770      	bx	lr

08010582 <__retarget_lock_acquire_recursive>:
 8010582:	4770      	bx	lr

08010584 <__retarget_lock_release_recursive>:
 8010584:	4770      	bx	lr

08010586 <memcpy>:
 8010586:	440a      	add	r2, r1
 8010588:	4291      	cmp	r1, r2
 801058a:	f100 33ff 	add.w	r3, r0, #4294967295
 801058e:	d100      	bne.n	8010592 <memcpy+0xc>
 8010590:	4770      	bx	lr
 8010592:	b510      	push	{r4, lr}
 8010594:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010598:	f803 4f01 	strb.w	r4, [r3, #1]!
 801059c:	4291      	cmp	r1, r2
 801059e:	d1f9      	bne.n	8010594 <memcpy+0xe>
 80105a0:	bd10      	pop	{r4, pc}
	...

080105a4 <nanf>:
 80105a4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80105ac <nanf+0x8>
 80105a8:	4770      	bx	lr
 80105aa:	bf00      	nop
 80105ac:	7fc00000 	.word	0x7fc00000

080105b0 <quorem>:
 80105b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105b4:	6903      	ldr	r3, [r0, #16]
 80105b6:	690c      	ldr	r4, [r1, #16]
 80105b8:	42a3      	cmp	r3, r4
 80105ba:	4607      	mov	r7, r0
 80105bc:	db7e      	blt.n	80106bc <quorem+0x10c>
 80105be:	3c01      	subs	r4, #1
 80105c0:	f101 0814 	add.w	r8, r1, #20
 80105c4:	00a3      	lsls	r3, r4, #2
 80105c6:	f100 0514 	add.w	r5, r0, #20
 80105ca:	9300      	str	r3, [sp, #0]
 80105cc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80105d0:	9301      	str	r3, [sp, #4]
 80105d2:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80105d6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80105da:	3301      	adds	r3, #1
 80105dc:	429a      	cmp	r2, r3
 80105de:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80105e2:	fbb2 f6f3 	udiv	r6, r2, r3
 80105e6:	d32e      	bcc.n	8010646 <quorem+0x96>
 80105e8:	f04f 0a00 	mov.w	sl, #0
 80105ec:	46c4      	mov	ip, r8
 80105ee:	46ae      	mov	lr, r5
 80105f0:	46d3      	mov	fp, sl
 80105f2:	f85c 3b04 	ldr.w	r3, [ip], #4
 80105f6:	b298      	uxth	r0, r3
 80105f8:	fb06 a000 	mla	r0, r6, r0, sl
 80105fc:	0c02      	lsrs	r2, r0, #16
 80105fe:	0c1b      	lsrs	r3, r3, #16
 8010600:	fb06 2303 	mla	r3, r6, r3, r2
 8010604:	f8de 2000 	ldr.w	r2, [lr]
 8010608:	b280      	uxth	r0, r0
 801060a:	b292      	uxth	r2, r2
 801060c:	1a12      	subs	r2, r2, r0
 801060e:	445a      	add	r2, fp
 8010610:	f8de 0000 	ldr.w	r0, [lr]
 8010614:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8010618:	b29b      	uxth	r3, r3
 801061a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 801061e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8010622:	b292      	uxth	r2, r2
 8010624:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8010628:	45e1      	cmp	r9, ip
 801062a:	f84e 2b04 	str.w	r2, [lr], #4
 801062e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8010632:	d2de      	bcs.n	80105f2 <quorem+0x42>
 8010634:	9b00      	ldr	r3, [sp, #0]
 8010636:	58eb      	ldr	r3, [r5, r3]
 8010638:	b92b      	cbnz	r3, 8010646 <quorem+0x96>
 801063a:	9b01      	ldr	r3, [sp, #4]
 801063c:	3b04      	subs	r3, #4
 801063e:	429d      	cmp	r5, r3
 8010640:	461a      	mov	r2, r3
 8010642:	d32f      	bcc.n	80106a4 <quorem+0xf4>
 8010644:	613c      	str	r4, [r7, #16]
 8010646:	4638      	mov	r0, r7
 8010648:	f001 f9c6 	bl	80119d8 <__mcmp>
 801064c:	2800      	cmp	r0, #0
 801064e:	db25      	blt.n	801069c <quorem+0xec>
 8010650:	4629      	mov	r1, r5
 8010652:	2000      	movs	r0, #0
 8010654:	f858 2b04 	ldr.w	r2, [r8], #4
 8010658:	f8d1 c000 	ldr.w	ip, [r1]
 801065c:	fa1f fe82 	uxth.w	lr, r2
 8010660:	fa1f f38c 	uxth.w	r3, ip
 8010664:	eba3 030e 	sub.w	r3, r3, lr
 8010668:	4403      	add	r3, r0
 801066a:	0c12      	lsrs	r2, r2, #16
 801066c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8010670:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8010674:	b29b      	uxth	r3, r3
 8010676:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801067a:	45c1      	cmp	r9, r8
 801067c:	f841 3b04 	str.w	r3, [r1], #4
 8010680:	ea4f 4022 	mov.w	r0, r2, asr #16
 8010684:	d2e6      	bcs.n	8010654 <quorem+0xa4>
 8010686:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801068a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801068e:	b922      	cbnz	r2, 801069a <quorem+0xea>
 8010690:	3b04      	subs	r3, #4
 8010692:	429d      	cmp	r5, r3
 8010694:	461a      	mov	r2, r3
 8010696:	d30b      	bcc.n	80106b0 <quorem+0x100>
 8010698:	613c      	str	r4, [r7, #16]
 801069a:	3601      	adds	r6, #1
 801069c:	4630      	mov	r0, r6
 801069e:	b003      	add	sp, #12
 80106a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106a4:	6812      	ldr	r2, [r2, #0]
 80106a6:	3b04      	subs	r3, #4
 80106a8:	2a00      	cmp	r2, #0
 80106aa:	d1cb      	bne.n	8010644 <quorem+0x94>
 80106ac:	3c01      	subs	r4, #1
 80106ae:	e7c6      	b.n	801063e <quorem+0x8e>
 80106b0:	6812      	ldr	r2, [r2, #0]
 80106b2:	3b04      	subs	r3, #4
 80106b4:	2a00      	cmp	r2, #0
 80106b6:	d1ef      	bne.n	8010698 <quorem+0xe8>
 80106b8:	3c01      	subs	r4, #1
 80106ba:	e7ea      	b.n	8010692 <quorem+0xe2>
 80106bc:	2000      	movs	r0, #0
 80106be:	e7ee      	b.n	801069e <quorem+0xee>

080106c0 <_dtoa_r>:
 80106c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106c4:	69c7      	ldr	r7, [r0, #28]
 80106c6:	b097      	sub	sp, #92	@ 0x5c
 80106c8:	ed8d 0b04 	vstr	d0, [sp, #16]
 80106cc:	ec55 4b10 	vmov	r4, r5, d0
 80106d0:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80106d2:	9107      	str	r1, [sp, #28]
 80106d4:	4681      	mov	r9, r0
 80106d6:	920c      	str	r2, [sp, #48]	@ 0x30
 80106d8:	9311      	str	r3, [sp, #68]	@ 0x44
 80106da:	b97f      	cbnz	r7, 80106fc <_dtoa_r+0x3c>
 80106dc:	2010      	movs	r0, #16
 80106de:	f000 fe09 	bl	80112f4 <malloc>
 80106e2:	4602      	mov	r2, r0
 80106e4:	f8c9 001c 	str.w	r0, [r9, #28]
 80106e8:	b920      	cbnz	r0, 80106f4 <_dtoa_r+0x34>
 80106ea:	4ba9      	ldr	r3, [pc, #676]	@ (8010990 <_dtoa_r+0x2d0>)
 80106ec:	21ef      	movs	r1, #239	@ 0xef
 80106ee:	48a9      	ldr	r0, [pc, #676]	@ (8010994 <_dtoa_r+0x2d4>)
 80106f0:	f002 fbb2 	bl	8012e58 <__assert_func>
 80106f4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80106f8:	6007      	str	r7, [r0, #0]
 80106fa:	60c7      	str	r7, [r0, #12]
 80106fc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8010700:	6819      	ldr	r1, [r3, #0]
 8010702:	b159      	cbz	r1, 801071c <_dtoa_r+0x5c>
 8010704:	685a      	ldr	r2, [r3, #4]
 8010706:	604a      	str	r2, [r1, #4]
 8010708:	2301      	movs	r3, #1
 801070a:	4093      	lsls	r3, r2
 801070c:	608b      	str	r3, [r1, #8]
 801070e:	4648      	mov	r0, r9
 8010710:	f000 fee6 	bl	80114e0 <_Bfree>
 8010714:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8010718:	2200      	movs	r2, #0
 801071a:	601a      	str	r2, [r3, #0]
 801071c:	1e2b      	subs	r3, r5, #0
 801071e:	bfb9      	ittee	lt
 8010720:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8010724:	9305      	strlt	r3, [sp, #20]
 8010726:	2300      	movge	r3, #0
 8010728:	6033      	strge	r3, [r6, #0]
 801072a:	9f05      	ldr	r7, [sp, #20]
 801072c:	4b9a      	ldr	r3, [pc, #616]	@ (8010998 <_dtoa_r+0x2d8>)
 801072e:	bfbc      	itt	lt
 8010730:	2201      	movlt	r2, #1
 8010732:	6032      	strlt	r2, [r6, #0]
 8010734:	43bb      	bics	r3, r7
 8010736:	d112      	bne.n	801075e <_dtoa_r+0x9e>
 8010738:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801073a:	f242 730f 	movw	r3, #9999	@ 0x270f
 801073e:	6013      	str	r3, [r2, #0]
 8010740:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8010744:	4323      	orrs	r3, r4
 8010746:	f000 855a 	beq.w	80111fe <_dtoa_r+0xb3e>
 801074a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801074c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 80109ac <_dtoa_r+0x2ec>
 8010750:	2b00      	cmp	r3, #0
 8010752:	f000 855c 	beq.w	801120e <_dtoa_r+0xb4e>
 8010756:	f10a 0303 	add.w	r3, sl, #3
 801075a:	f000 bd56 	b.w	801120a <_dtoa_r+0xb4a>
 801075e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8010762:	2200      	movs	r2, #0
 8010764:	ec51 0b17 	vmov	r0, r1, d7
 8010768:	2300      	movs	r3, #0
 801076a:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801076e:	f7f0 f983 	bl	8000a78 <__aeabi_dcmpeq>
 8010772:	4680      	mov	r8, r0
 8010774:	b158      	cbz	r0, 801078e <_dtoa_r+0xce>
 8010776:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010778:	2301      	movs	r3, #1
 801077a:	6013      	str	r3, [r2, #0]
 801077c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801077e:	b113      	cbz	r3, 8010786 <_dtoa_r+0xc6>
 8010780:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8010782:	4b86      	ldr	r3, [pc, #536]	@ (801099c <_dtoa_r+0x2dc>)
 8010784:	6013      	str	r3, [r2, #0]
 8010786:	f8df a228 	ldr.w	sl, [pc, #552]	@ 80109b0 <_dtoa_r+0x2f0>
 801078a:	f000 bd40 	b.w	801120e <_dtoa_r+0xb4e>
 801078e:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8010792:	aa14      	add	r2, sp, #80	@ 0x50
 8010794:	a915      	add	r1, sp, #84	@ 0x54
 8010796:	4648      	mov	r0, r9
 8010798:	f001 fa3e 	bl	8011c18 <__d2b>
 801079c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80107a0:	9002      	str	r0, [sp, #8]
 80107a2:	2e00      	cmp	r6, #0
 80107a4:	d078      	beq.n	8010898 <_dtoa_r+0x1d8>
 80107a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80107a8:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80107ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80107b0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80107b4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80107b8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80107bc:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80107c0:	4619      	mov	r1, r3
 80107c2:	2200      	movs	r2, #0
 80107c4:	4b76      	ldr	r3, [pc, #472]	@ (80109a0 <_dtoa_r+0x2e0>)
 80107c6:	f7ef fd37 	bl	8000238 <__aeabi_dsub>
 80107ca:	a36b      	add	r3, pc, #428	@ (adr r3, 8010978 <_dtoa_r+0x2b8>)
 80107cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107d0:	f7ef feea 	bl	80005a8 <__aeabi_dmul>
 80107d4:	a36a      	add	r3, pc, #424	@ (adr r3, 8010980 <_dtoa_r+0x2c0>)
 80107d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107da:	f7ef fd2f 	bl	800023c <__adddf3>
 80107de:	4604      	mov	r4, r0
 80107e0:	4630      	mov	r0, r6
 80107e2:	460d      	mov	r5, r1
 80107e4:	f7ef fe76 	bl	80004d4 <__aeabi_i2d>
 80107e8:	a367      	add	r3, pc, #412	@ (adr r3, 8010988 <_dtoa_r+0x2c8>)
 80107ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107ee:	f7ef fedb 	bl	80005a8 <__aeabi_dmul>
 80107f2:	4602      	mov	r2, r0
 80107f4:	460b      	mov	r3, r1
 80107f6:	4620      	mov	r0, r4
 80107f8:	4629      	mov	r1, r5
 80107fa:	f7ef fd1f 	bl	800023c <__adddf3>
 80107fe:	4604      	mov	r4, r0
 8010800:	460d      	mov	r5, r1
 8010802:	f7f0 f981 	bl	8000b08 <__aeabi_d2iz>
 8010806:	2200      	movs	r2, #0
 8010808:	4607      	mov	r7, r0
 801080a:	2300      	movs	r3, #0
 801080c:	4620      	mov	r0, r4
 801080e:	4629      	mov	r1, r5
 8010810:	f7f0 f93c 	bl	8000a8c <__aeabi_dcmplt>
 8010814:	b140      	cbz	r0, 8010828 <_dtoa_r+0x168>
 8010816:	4638      	mov	r0, r7
 8010818:	f7ef fe5c 	bl	80004d4 <__aeabi_i2d>
 801081c:	4622      	mov	r2, r4
 801081e:	462b      	mov	r3, r5
 8010820:	f7f0 f92a 	bl	8000a78 <__aeabi_dcmpeq>
 8010824:	b900      	cbnz	r0, 8010828 <_dtoa_r+0x168>
 8010826:	3f01      	subs	r7, #1
 8010828:	2f16      	cmp	r7, #22
 801082a:	d852      	bhi.n	80108d2 <_dtoa_r+0x212>
 801082c:	4b5d      	ldr	r3, [pc, #372]	@ (80109a4 <_dtoa_r+0x2e4>)
 801082e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8010832:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010836:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801083a:	f7f0 f927 	bl	8000a8c <__aeabi_dcmplt>
 801083e:	2800      	cmp	r0, #0
 8010840:	d049      	beq.n	80108d6 <_dtoa_r+0x216>
 8010842:	3f01      	subs	r7, #1
 8010844:	2300      	movs	r3, #0
 8010846:	9310      	str	r3, [sp, #64]	@ 0x40
 8010848:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801084a:	1b9b      	subs	r3, r3, r6
 801084c:	1e5a      	subs	r2, r3, #1
 801084e:	bf45      	ittet	mi
 8010850:	f1c3 0301 	rsbmi	r3, r3, #1
 8010854:	9300      	strmi	r3, [sp, #0]
 8010856:	2300      	movpl	r3, #0
 8010858:	2300      	movmi	r3, #0
 801085a:	9206      	str	r2, [sp, #24]
 801085c:	bf54      	ite	pl
 801085e:	9300      	strpl	r3, [sp, #0]
 8010860:	9306      	strmi	r3, [sp, #24]
 8010862:	2f00      	cmp	r7, #0
 8010864:	db39      	blt.n	80108da <_dtoa_r+0x21a>
 8010866:	9b06      	ldr	r3, [sp, #24]
 8010868:	970d      	str	r7, [sp, #52]	@ 0x34
 801086a:	443b      	add	r3, r7
 801086c:	9306      	str	r3, [sp, #24]
 801086e:	2300      	movs	r3, #0
 8010870:	9308      	str	r3, [sp, #32]
 8010872:	9b07      	ldr	r3, [sp, #28]
 8010874:	2b09      	cmp	r3, #9
 8010876:	d863      	bhi.n	8010940 <_dtoa_r+0x280>
 8010878:	2b05      	cmp	r3, #5
 801087a:	bfc4      	itt	gt
 801087c:	3b04      	subgt	r3, #4
 801087e:	9307      	strgt	r3, [sp, #28]
 8010880:	9b07      	ldr	r3, [sp, #28]
 8010882:	f1a3 0302 	sub.w	r3, r3, #2
 8010886:	bfcc      	ite	gt
 8010888:	2400      	movgt	r4, #0
 801088a:	2401      	movle	r4, #1
 801088c:	2b03      	cmp	r3, #3
 801088e:	d863      	bhi.n	8010958 <_dtoa_r+0x298>
 8010890:	e8df f003 	tbb	[pc, r3]
 8010894:	2b375452 	.word	0x2b375452
 8010898:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 801089c:	441e      	add	r6, r3
 801089e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80108a2:	2b20      	cmp	r3, #32
 80108a4:	bfc1      	itttt	gt
 80108a6:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80108aa:	409f      	lslgt	r7, r3
 80108ac:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80108b0:	fa24 f303 	lsrgt.w	r3, r4, r3
 80108b4:	bfd6      	itet	le
 80108b6:	f1c3 0320 	rsble	r3, r3, #32
 80108ba:	ea47 0003 	orrgt.w	r0, r7, r3
 80108be:	fa04 f003 	lslle.w	r0, r4, r3
 80108c2:	f7ef fdf7 	bl	80004b4 <__aeabi_ui2d>
 80108c6:	2201      	movs	r2, #1
 80108c8:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80108cc:	3e01      	subs	r6, #1
 80108ce:	9212      	str	r2, [sp, #72]	@ 0x48
 80108d0:	e776      	b.n	80107c0 <_dtoa_r+0x100>
 80108d2:	2301      	movs	r3, #1
 80108d4:	e7b7      	b.n	8010846 <_dtoa_r+0x186>
 80108d6:	9010      	str	r0, [sp, #64]	@ 0x40
 80108d8:	e7b6      	b.n	8010848 <_dtoa_r+0x188>
 80108da:	9b00      	ldr	r3, [sp, #0]
 80108dc:	1bdb      	subs	r3, r3, r7
 80108de:	9300      	str	r3, [sp, #0]
 80108e0:	427b      	negs	r3, r7
 80108e2:	9308      	str	r3, [sp, #32]
 80108e4:	2300      	movs	r3, #0
 80108e6:	930d      	str	r3, [sp, #52]	@ 0x34
 80108e8:	e7c3      	b.n	8010872 <_dtoa_r+0x1b2>
 80108ea:	2301      	movs	r3, #1
 80108ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80108ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80108f0:	eb07 0b03 	add.w	fp, r7, r3
 80108f4:	f10b 0301 	add.w	r3, fp, #1
 80108f8:	2b01      	cmp	r3, #1
 80108fa:	9303      	str	r3, [sp, #12]
 80108fc:	bfb8      	it	lt
 80108fe:	2301      	movlt	r3, #1
 8010900:	e006      	b.n	8010910 <_dtoa_r+0x250>
 8010902:	2301      	movs	r3, #1
 8010904:	9309      	str	r3, [sp, #36]	@ 0x24
 8010906:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010908:	2b00      	cmp	r3, #0
 801090a:	dd28      	ble.n	801095e <_dtoa_r+0x29e>
 801090c:	469b      	mov	fp, r3
 801090e:	9303      	str	r3, [sp, #12]
 8010910:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8010914:	2100      	movs	r1, #0
 8010916:	2204      	movs	r2, #4
 8010918:	f102 0514 	add.w	r5, r2, #20
 801091c:	429d      	cmp	r5, r3
 801091e:	d926      	bls.n	801096e <_dtoa_r+0x2ae>
 8010920:	6041      	str	r1, [r0, #4]
 8010922:	4648      	mov	r0, r9
 8010924:	f000 fd9c 	bl	8011460 <_Balloc>
 8010928:	4682      	mov	sl, r0
 801092a:	2800      	cmp	r0, #0
 801092c:	d142      	bne.n	80109b4 <_dtoa_r+0x2f4>
 801092e:	4b1e      	ldr	r3, [pc, #120]	@ (80109a8 <_dtoa_r+0x2e8>)
 8010930:	4602      	mov	r2, r0
 8010932:	f240 11af 	movw	r1, #431	@ 0x1af
 8010936:	e6da      	b.n	80106ee <_dtoa_r+0x2e>
 8010938:	2300      	movs	r3, #0
 801093a:	e7e3      	b.n	8010904 <_dtoa_r+0x244>
 801093c:	2300      	movs	r3, #0
 801093e:	e7d5      	b.n	80108ec <_dtoa_r+0x22c>
 8010940:	2401      	movs	r4, #1
 8010942:	2300      	movs	r3, #0
 8010944:	9307      	str	r3, [sp, #28]
 8010946:	9409      	str	r4, [sp, #36]	@ 0x24
 8010948:	f04f 3bff 	mov.w	fp, #4294967295
 801094c:	2200      	movs	r2, #0
 801094e:	f8cd b00c 	str.w	fp, [sp, #12]
 8010952:	2312      	movs	r3, #18
 8010954:	920c      	str	r2, [sp, #48]	@ 0x30
 8010956:	e7db      	b.n	8010910 <_dtoa_r+0x250>
 8010958:	2301      	movs	r3, #1
 801095a:	9309      	str	r3, [sp, #36]	@ 0x24
 801095c:	e7f4      	b.n	8010948 <_dtoa_r+0x288>
 801095e:	f04f 0b01 	mov.w	fp, #1
 8010962:	f8cd b00c 	str.w	fp, [sp, #12]
 8010966:	465b      	mov	r3, fp
 8010968:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 801096c:	e7d0      	b.n	8010910 <_dtoa_r+0x250>
 801096e:	3101      	adds	r1, #1
 8010970:	0052      	lsls	r2, r2, #1
 8010972:	e7d1      	b.n	8010918 <_dtoa_r+0x258>
 8010974:	f3af 8000 	nop.w
 8010978:	636f4361 	.word	0x636f4361
 801097c:	3fd287a7 	.word	0x3fd287a7
 8010980:	8b60c8b3 	.word	0x8b60c8b3
 8010984:	3fc68a28 	.word	0x3fc68a28
 8010988:	509f79fb 	.word	0x509f79fb
 801098c:	3fd34413 	.word	0x3fd34413
 8010990:	0801854f 	.word	0x0801854f
 8010994:	08018566 	.word	0x08018566
 8010998:	7ff00000 	.word	0x7ff00000
 801099c:	0801851a 	.word	0x0801851a
 80109a0:	3ff80000 	.word	0x3ff80000
 80109a4:	08018718 	.word	0x08018718
 80109a8:	080185be 	.word	0x080185be
 80109ac:	0801854b 	.word	0x0801854b
 80109b0:	08018519 	.word	0x08018519
 80109b4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80109b8:	6018      	str	r0, [r3, #0]
 80109ba:	9b03      	ldr	r3, [sp, #12]
 80109bc:	2b0e      	cmp	r3, #14
 80109be:	f200 80a1 	bhi.w	8010b04 <_dtoa_r+0x444>
 80109c2:	2c00      	cmp	r4, #0
 80109c4:	f000 809e 	beq.w	8010b04 <_dtoa_r+0x444>
 80109c8:	2f00      	cmp	r7, #0
 80109ca:	dd33      	ble.n	8010a34 <_dtoa_r+0x374>
 80109cc:	4b9c      	ldr	r3, [pc, #624]	@ (8010c40 <_dtoa_r+0x580>)
 80109ce:	f007 020f 	and.w	r2, r7, #15
 80109d2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80109d6:	ed93 7b00 	vldr	d7, [r3]
 80109da:	05f8      	lsls	r0, r7, #23
 80109dc:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 80109e0:	ea4f 1427 	mov.w	r4, r7, asr #4
 80109e4:	d516      	bpl.n	8010a14 <_dtoa_r+0x354>
 80109e6:	4b97      	ldr	r3, [pc, #604]	@ (8010c44 <_dtoa_r+0x584>)
 80109e8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80109ec:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80109f0:	f7ef ff04 	bl	80007fc <__aeabi_ddiv>
 80109f4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80109f8:	f004 040f 	and.w	r4, r4, #15
 80109fc:	2603      	movs	r6, #3
 80109fe:	4d91      	ldr	r5, [pc, #580]	@ (8010c44 <_dtoa_r+0x584>)
 8010a00:	b954      	cbnz	r4, 8010a18 <_dtoa_r+0x358>
 8010a02:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010a06:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010a0a:	f7ef fef7 	bl	80007fc <__aeabi_ddiv>
 8010a0e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010a12:	e028      	b.n	8010a66 <_dtoa_r+0x3a6>
 8010a14:	2602      	movs	r6, #2
 8010a16:	e7f2      	b.n	80109fe <_dtoa_r+0x33e>
 8010a18:	07e1      	lsls	r1, r4, #31
 8010a1a:	d508      	bpl.n	8010a2e <_dtoa_r+0x36e>
 8010a1c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010a20:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010a24:	f7ef fdc0 	bl	80005a8 <__aeabi_dmul>
 8010a28:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010a2c:	3601      	adds	r6, #1
 8010a2e:	1064      	asrs	r4, r4, #1
 8010a30:	3508      	adds	r5, #8
 8010a32:	e7e5      	b.n	8010a00 <_dtoa_r+0x340>
 8010a34:	f000 80af 	beq.w	8010b96 <_dtoa_r+0x4d6>
 8010a38:	427c      	negs	r4, r7
 8010a3a:	4b81      	ldr	r3, [pc, #516]	@ (8010c40 <_dtoa_r+0x580>)
 8010a3c:	4d81      	ldr	r5, [pc, #516]	@ (8010c44 <_dtoa_r+0x584>)
 8010a3e:	f004 020f 	and.w	r2, r4, #15
 8010a42:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010a46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010a4a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8010a4e:	f7ef fdab 	bl	80005a8 <__aeabi_dmul>
 8010a52:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010a56:	1124      	asrs	r4, r4, #4
 8010a58:	2300      	movs	r3, #0
 8010a5a:	2602      	movs	r6, #2
 8010a5c:	2c00      	cmp	r4, #0
 8010a5e:	f040 808f 	bne.w	8010b80 <_dtoa_r+0x4c0>
 8010a62:	2b00      	cmp	r3, #0
 8010a64:	d1d3      	bne.n	8010a0e <_dtoa_r+0x34e>
 8010a66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010a68:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8010a6c:	2b00      	cmp	r3, #0
 8010a6e:	f000 8094 	beq.w	8010b9a <_dtoa_r+0x4da>
 8010a72:	4b75      	ldr	r3, [pc, #468]	@ (8010c48 <_dtoa_r+0x588>)
 8010a74:	2200      	movs	r2, #0
 8010a76:	4620      	mov	r0, r4
 8010a78:	4629      	mov	r1, r5
 8010a7a:	f7f0 f807 	bl	8000a8c <__aeabi_dcmplt>
 8010a7e:	2800      	cmp	r0, #0
 8010a80:	f000 808b 	beq.w	8010b9a <_dtoa_r+0x4da>
 8010a84:	9b03      	ldr	r3, [sp, #12]
 8010a86:	2b00      	cmp	r3, #0
 8010a88:	f000 8087 	beq.w	8010b9a <_dtoa_r+0x4da>
 8010a8c:	f1bb 0f00 	cmp.w	fp, #0
 8010a90:	dd34      	ble.n	8010afc <_dtoa_r+0x43c>
 8010a92:	4620      	mov	r0, r4
 8010a94:	4b6d      	ldr	r3, [pc, #436]	@ (8010c4c <_dtoa_r+0x58c>)
 8010a96:	2200      	movs	r2, #0
 8010a98:	4629      	mov	r1, r5
 8010a9a:	f7ef fd85 	bl	80005a8 <__aeabi_dmul>
 8010a9e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010aa2:	f107 38ff 	add.w	r8, r7, #4294967295
 8010aa6:	3601      	adds	r6, #1
 8010aa8:	465c      	mov	r4, fp
 8010aaa:	4630      	mov	r0, r6
 8010aac:	f7ef fd12 	bl	80004d4 <__aeabi_i2d>
 8010ab0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010ab4:	f7ef fd78 	bl	80005a8 <__aeabi_dmul>
 8010ab8:	4b65      	ldr	r3, [pc, #404]	@ (8010c50 <_dtoa_r+0x590>)
 8010aba:	2200      	movs	r2, #0
 8010abc:	f7ef fbbe 	bl	800023c <__adddf3>
 8010ac0:	4605      	mov	r5, r0
 8010ac2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8010ac6:	2c00      	cmp	r4, #0
 8010ac8:	d16a      	bne.n	8010ba0 <_dtoa_r+0x4e0>
 8010aca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010ace:	4b61      	ldr	r3, [pc, #388]	@ (8010c54 <_dtoa_r+0x594>)
 8010ad0:	2200      	movs	r2, #0
 8010ad2:	f7ef fbb1 	bl	8000238 <__aeabi_dsub>
 8010ad6:	4602      	mov	r2, r0
 8010ad8:	460b      	mov	r3, r1
 8010ada:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010ade:	462a      	mov	r2, r5
 8010ae0:	4633      	mov	r3, r6
 8010ae2:	f7ef fff1 	bl	8000ac8 <__aeabi_dcmpgt>
 8010ae6:	2800      	cmp	r0, #0
 8010ae8:	f040 8298 	bne.w	801101c <_dtoa_r+0x95c>
 8010aec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010af0:	462a      	mov	r2, r5
 8010af2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8010af6:	f7ef ffc9 	bl	8000a8c <__aeabi_dcmplt>
 8010afa:	bb38      	cbnz	r0, 8010b4c <_dtoa_r+0x48c>
 8010afc:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8010b00:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8010b04:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8010b06:	2b00      	cmp	r3, #0
 8010b08:	f2c0 8157 	blt.w	8010dba <_dtoa_r+0x6fa>
 8010b0c:	2f0e      	cmp	r7, #14
 8010b0e:	f300 8154 	bgt.w	8010dba <_dtoa_r+0x6fa>
 8010b12:	4b4b      	ldr	r3, [pc, #300]	@ (8010c40 <_dtoa_r+0x580>)
 8010b14:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8010b18:	ed93 7b00 	vldr	d7, [r3]
 8010b1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010b1e:	2b00      	cmp	r3, #0
 8010b20:	ed8d 7b00 	vstr	d7, [sp]
 8010b24:	f280 80e5 	bge.w	8010cf2 <_dtoa_r+0x632>
 8010b28:	9b03      	ldr	r3, [sp, #12]
 8010b2a:	2b00      	cmp	r3, #0
 8010b2c:	f300 80e1 	bgt.w	8010cf2 <_dtoa_r+0x632>
 8010b30:	d10c      	bne.n	8010b4c <_dtoa_r+0x48c>
 8010b32:	4b48      	ldr	r3, [pc, #288]	@ (8010c54 <_dtoa_r+0x594>)
 8010b34:	2200      	movs	r2, #0
 8010b36:	ec51 0b17 	vmov	r0, r1, d7
 8010b3a:	f7ef fd35 	bl	80005a8 <__aeabi_dmul>
 8010b3e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010b42:	f7ef ffb7 	bl	8000ab4 <__aeabi_dcmpge>
 8010b46:	2800      	cmp	r0, #0
 8010b48:	f000 8266 	beq.w	8011018 <_dtoa_r+0x958>
 8010b4c:	2400      	movs	r4, #0
 8010b4e:	4625      	mov	r5, r4
 8010b50:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010b52:	4656      	mov	r6, sl
 8010b54:	ea6f 0803 	mvn.w	r8, r3
 8010b58:	2700      	movs	r7, #0
 8010b5a:	4621      	mov	r1, r4
 8010b5c:	4648      	mov	r0, r9
 8010b5e:	f000 fcbf 	bl	80114e0 <_Bfree>
 8010b62:	2d00      	cmp	r5, #0
 8010b64:	f000 80bd 	beq.w	8010ce2 <_dtoa_r+0x622>
 8010b68:	b12f      	cbz	r7, 8010b76 <_dtoa_r+0x4b6>
 8010b6a:	42af      	cmp	r7, r5
 8010b6c:	d003      	beq.n	8010b76 <_dtoa_r+0x4b6>
 8010b6e:	4639      	mov	r1, r7
 8010b70:	4648      	mov	r0, r9
 8010b72:	f000 fcb5 	bl	80114e0 <_Bfree>
 8010b76:	4629      	mov	r1, r5
 8010b78:	4648      	mov	r0, r9
 8010b7a:	f000 fcb1 	bl	80114e0 <_Bfree>
 8010b7e:	e0b0      	b.n	8010ce2 <_dtoa_r+0x622>
 8010b80:	07e2      	lsls	r2, r4, #31
 8010b82:	d505      	bpl.n	8010b90 <_dtoa_r+0x4d0>
 8010b84:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010b88:	f7ef fd0e 	bl	80005a8 <__aeabi_dmul>
 8010b8c:	3601      	adds	r6, #1
 8010b8e:	2301      	movs	r3, #1
 8010b90:	1064      	asrs	r4, r4, #1
 8010b92:	3508      	adds	r5, #8
 8010b94:	e762      	b.n	8010a5c <_dtoa_r+0x39c>
 8010b96:	2602      	movs	r6, #2
 8010b98:	e765      	b.n	8010a66 <_dtoa_r+0x3a6>
 8010b9a:	9c03      	ldr	r4, [sp, #12]
 8010b9c:	46b8      	mov	r8, r7
 8010b9e:	e784      	b.n	8010aaa <_dtoa_r+0x3ea>
 8010ba0:	4b27      	ldr	r3, [pc, #156]	@ (8010c40 <_dtoa_r+0x580>)
 8010ba2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8010ba4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010ba8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8010bac:	4454      	add	r4, sl
 8010bae:	2900      	cmp	r1, #0
 8010bb0:	d054      	beq.n	8010c5c <_dtoa_r+0x59c>
 8010bb2:	4929      	ldr	r1, [pc, #164]	@ (8010c58 <_dtoa_r+0x598>)
 8010bb4:	2000      	movs	r0, #0
 8010bb6:	f7ef fe21 	bl	80007fc <__aeabi_ddiv>
 8010bba:	4633      	mov	r3, r6
 8010bbc:	462a      	mov	r2, r5
 8010bbe:	f7ef fb3b 	bl	8000238 <__aeabi_dsub>
 8010bc2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010bc6:	4656      	mov	r6, sl
 8010bc8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010bcc:	f7ef ff9c 	bl	8000b08 <__aeabi_d2iz>
 8010bd0:	4605      	mov	r5, r0
 8010bd2:	f7ef fc7f 	bl	80004d4 <__aeabi_i2d>
 8010bd6:	4602      	mov	r2, r0
 8010bd8:	460b      	mov	r3, r1
 8010bda:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010bde:	f7ef fb2b 	bl	8000238 <__aeabi_dsub>
 8010be2:	3530      	adds	r5, #48	@ 0x30
 8010be4:	4602      	mov	r2, r0
 8010be6:	460b      	mov	r3, r1
 8010be8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010bec:	f806 5b01 	strb.w	r5, [r6], #1
 8010bf0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010bf4:	f7ef ff4a 	bl	8000a8c <__aeabi_dcmplt>
 8010bf8:	2800      	cmp	r0, #0
 8010bfa:	d172      	bne.n	8010ce2 <_dtoa_r+0x622>
 8010bfc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010c00:	4911      	ldr	r1, [pc, #68]	@ (8010c48 <_dtoa_r+0x588>)
 8010c02:	2000      	movs	r0, #0
 8010c04:	f7ef fb18 	bl	8000238 <__aeabi_dsub>
 8010c08:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010c0c:	f7ef ff3e 	bl	8000a8c <__aeabi_dcmplt>
 8010c10:	2800      	cmp	r0, #0
 8010c12:	f040 80b4 	bne.w	8010d7e <_dtoa_r+0x6be>
 8010c16:	42a6      	cmp	r6, r4
 8010c18:	f43f af70 	beq.w	8010afc <_dtoa_r+0x43c>
 8010c1c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010c20:	4b0a      	ldr	r3, [pc, #40]	@ (8010c4c <_dtoa_r+0x58c>)
 8010c22:	2200      	movs	r2, #0
 8010c24:	f7ef fcc0 	bl	80005a8 <__aeabi_dmul>
 8010c28:	4b08      	ldr	r3, [pc, #32]	@ (8010c4c <_dtoa_r+0x58c>)
 8010c2a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010c2e:	2200      	movs	r2, #0
 8010c30:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c34:	f7ef fcb8 	bl	80005a8 <__aeabi_dmul>
 8010c38:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010c3c:	e7c4      	b.n	8010bc8 <_dtoa_r+0x508>
 8010c3e:	bf00      	nop
 8010c40:	08018718 	.word	0x08018718
 8010c44:	080186f0 	.word	0x080186f0
 8010c48:	3ff00000 	.word	0x3ff00000
 8010c4c:	40240000 	.word	0x40240000
 8010c50:	401c0000 	.word	0x401c0000
 8010c54:	40140000 	.word	0x40140000
 8010c58:	3fe00000 	.word	0x3fe00000
 8010c5c:	4631      	mov	r1, r6
 8010c5e:	4628      	mov	r0, r5
 8010c60:	f7ef fca2 	bl	80005a8 <__aeabi_dmul>
 8010c64:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010c68:	9413      	str	r4, [sp, #76]	@ 0x4c
 8010c6a:	4656      	mov	r6, sl
 8010c6c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c70:	f7ef ff4a 	bl	8000b08 <__aeabi_d2iz>
 8010c74:	4605      	mov	r5, r0
 8010c76:	f7ef fc2d 	bl	80004d4 <__aeabi_i2d>
 8010c7a:	4602      	mov	r2, r0
 8010c7c:	460b      	mov	r3, r1
 8010c7e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010c82:	f7ef fad9 	bl	8000238 <__aeabi_dsub>
 8010c86:	3530      	adds	r5, #48	@ 0x30
 8010c88:	f806 5b01 	strb.w	r5, [r6], #1
 8010c8c:	4602      	mov	r2, r0
 8010c8e:	460b      	mov	r3, r1
 8010c90:	42a6      	cmp	r6, r4
 8010c92:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010c96:	f04f 0200 	mov.w	r2, #0
 8010c9a:	d124      	bne.n	8010ce6 <_dtoa_r+0x626>
 8010c9c:	4baf      	ldr	r3, [pc, #700]	@ (8010f5c <_dtoa_r+0x89c>)
 8010c9e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010ca2:	f7ef facb 	bl	800023c <__adddf3>
 8010ca6:	4602      	mov	r2, r0
 8010ca8:	460b      	mov	r3, r1
 8010caa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010cae:	f7ef ff0b 	bl	8000ac8 <__aeabi_dcmpgt>
 8010cb2:	2800      	cmp	r0, #0
 8010cb4:	d163      	bne.n	8010d7e <_dtoa_r+0x6be>
 8010cb6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010cba:	49a8      	ldr	r1, [pc, #672]	@ (8010f5c <_dtoa_r+0x89c>)
 8010cbc:	2000      	movs	r0, #0
 8010cbe:	f7ef fabb 	bl	8000238 <__aeabi_dsub>
 8010cc2:	4602      	mov	r2, r0
 8010cc4:	460b      	mov	r3, r1
 8010cc6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010cca:	f7ef fedf 	bl	8000a8c <__aeabi_dcmplt>
 8010cce:	2800      	cmp	r0, #0
 8010cd0:	f43f af14 	beq.w	8010afc <_dtoa_r+0x43c>
 8010cd4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010cd6:	1e73      	subs	r3, r6, #1
 8010cd8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010cda:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8010cde:	2b30      	cmp	r3, #48	@ 0x30
 8010ce0:	d0f8      	beq.n	8010cd4 <_dtoa_r+0x614>
 8010ce2:	4647      	mov	r7, r8
 8010ce4:	e03b      	b.n	8010d5e <_dtoa_r+0x69e>
 8010ce6:	4b9e      	ldr	r3, [pc, #632]	@ (8010f60 <_dtoa_r+0x8a0>)
 8010ce8:	f7ef fc5e 	bl	80005a8 <__aeabi_dmul>
 8010cec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010cf0:	e7bc      	b.n	8010c6c <_dtoa_r+0x5ac>
 8010cf2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8010cf6:	4656      	mov	r6, sl
 8010cf8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010cfc:	4620      	mov	r0, r4
 8010cfe:	4629      	mov	r1, r5
 8010d00:	f7ef fd7c 	bl	80007fc <__aeabi_ddiv>
 8010d04:	f7ef ff00 	bl	8000b08 <__aeabi_d2iz>
 8010d08:	4680      	mov	r8, r0
 8010d0a:	f7ef fbe3 	bl	80004d4 <__aeabi_i2d>
 8010d0e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010d12:	f7ef fc49 	bl	80005a8 <__aeabi_dmul>
 8010d16:	4602      	mov	r2, r0
 8010d18:	460b      	mov	r3, r1
 8010d1a:	4620      	mov	r0, r4
 8010d1c:	4629      	mov	r1, r5
 8010d1e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8010d22:	f7ef fa89 	bl	8000238 <__aeabi_dsub>
 8010d26:	f806 4b01 	strb.w	r4, [r6], #1
 8010d2a:	9d03      	ldr	r5, [sp, #12]
 8010d2c:	eba6 040a 	sub.w	r4, r6, sl
 8010d30:	42a5      	cmp	r5, r4
 8010d32:	4602      	mov	r2, r0
 8010d34:	460b      	mov	r3, r1
 8010d36:	d133      	bne.n	8010da0 <_dtoa_r+0x6e0>
 8010d38:	f7ef fa80 	bl	800023c <__adddf3>
 8010d3c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010d40:	4604      	mov	r4, r0
 8010d42:	460d      	mov	r5, r1
 8010d44:	f7ef fec0 	bl	8000ac8 <__aeabi_dcmpgt>
 8010d48:	b9c0      	cbnz	r0, 8010d7c <_dtoa_r+0x6bc>
 8010d4a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010d4e:	4620      	mov	r0, r4
 8010d50:	4629      	mov	r1, r5
 8010d52:	f7ef fe91 	bl	8000a78 <__aeabi_dcmpeq>
 8010d56:	b110      	cbz	r0, 8010d5e <_dtoa_r+0x69e>
 8010d58:	f018 0f01 	tst.w	r8, #1
 8010d5c:	d10e      	bne.n	8010d7c <_dtoa_r+0x6bc>
 8010d5e:	9902      	ldr	r1, [sp, #8]
 8010d60:	4648      	mov	r0, r9
 8010d62:	f000 fbbd 	bl	80114e0 <_Bfree>
 8010d66:	2300      	movs	r3, #0
 8010d68:	7033      	strb	r3, [r6, #0]
 8010d6a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8010d6c:	3701      	adds	r7, #1
 8010d6e:	601f      	str	r7, [r3, #0]
 8010d70:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8010d72:	2b00      	cmp	r3, #0
 8010d74:	f000 824b 	beq.w	801120e <_dtoa_r+0xb4e>
 8010d78:	601e      	str	r6, [r3, #0]
 8010d7a:	e248      	b.n	801120e <_dtoa_r+0xb4e>
 8010d7c:	46b8      	mov	r8, r7
 8010d7e:	4633      	mov	r3, r6
 8010d80:	461e      	mov	r6, r3
 8010d82:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010d86:	2a39      	cmp	r2, #57	@ 0x39
 8010d88:	d106      	bne.n	8010d98 <_dtoa_r+0x6d8>
 8010d8a:	459a      	cmp	sl, r3
 8010d8c:	d1f8      	bne.n	8010d80 <_dtoa_r+0x6c0>
 8010d8e:	2230      	movs	r2, #48	@ 0x30
 8010d90:	f108 0801 	add.w	r8, r8, #1
 8010d94:	f88a 2000 	strb.w	r2, [sl]
 8010d98:	781a      	ldrb	r2, [r3, #0]
 8010d9a:	3201      	adds	r2, #1
 8010d9c:	701a      	strb	r2, [r3, #0]
 8010d9e:	e7a0      	b.n	8010ce2 <_dtoa_r+0x622>
 8010da0:	4b6f      	ldr	r3, [pc, #444]	@ (8010f60 <_dtoa_r+0x8a0>)
 8010da2:	2200      	movs	r2, #0
 8010da4:	f7ef fc00 	bl	80005a8 <__aeabi_dmul>
 8010da8:	2200      	movs	r2, #0
 8010daa:	2300      	movs	r3, #0
 8010dac:	4604      	mov	r4, r0
 8010dae:	460d      	mov	r5, r1
 8010db0:	f7ef fe62 	bl	8000a78 <__aeabi_dcmpeq>
 8010db4:	2800      	cmp	r0, #0
 8010db6:	d09f      	beq.n	8010cf8 <_dtoa_r+0x638>
 8010db8:	e7d1      	b.n	8010d5e <_dtoa_r+0x69e>
 8010dba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010dbc:	2a00      	cmp	r2, #0
 8010dbe:	f000 80ea 	beq.w	8010f96 <_dtoa_r+0x8d6>
 8010dc2:	9a07      	ldr	r2, [sp, #28]
 8010dc4:	2a01      	cmp	r2, #1
 8010dc6:	f300 80cd 	bgt.w	8010f64 <_dtoa_r+0x8a4>
 8010dca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010dcc:	2a00      	cmp	r2, #0
 8010dce:	f000 80c1 	beq.w	8010f54 <_dtoa_r+0x894>
 8010dd2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8010dd6:	9c08      	ldr	r4, [sp, #32]
 8010dd8:	9e00      	ldr	r6, [sp, #0]
 8010dda:	9a00      	ldr	r2, [sp, #0]
 8010ddc:	441a      	add	r2, r3
 8010dde:	9200      	str	r2, [sp, #0]
 8010de0:	9a06      	ldr	r2, [sp, #24]
 8010de2:	2101      	movs	r1, #1
 8010de4:	441a      	add	r2, r3
 8010de6:	4648      	mov	r0, r9
 8010de8:	9206      	str	r2, [sp, #24]
 8010dea:	f000 fc77 	bl	80116dc <__i2b>
 8010dee:	4605      	mov	r5, r0
 8010df0:	b166      	cbz	r6, 8010e0c <_dtoa_r+0x74c>
 8010df2:	9b06      	ldr	r3, [sp, #24]
 8010df4:	2b00      	cmp	r3, #0
 8010df6:	dd09      	ble.n	8010e0c <_dtoa_r+0x74c>
 8010df8:	42b3      	cmp	r3, r6
 8010dfa:	9a00      	ldr	r2, [sp, #0]
 8010dfc:	bfa8      	it	ge
 8010dfe:	4633      	movge	r3, r6
 8010e00:	1ad2      	subs	r2, r2, r3
 8010e02:	9200      	str	r2, [sp, #0]
 8010e04:	9a06      	ldr	r2, [sp, #24]
 8010e06:	1af6      	subs	r6, r6, r3
 8010e08:	1ad3      	subs	r3, r2, r3
 8010e0a:	9306      	str	r3, [sp, #24]
 8010e0c:	9b08      	ldr	r3, [sp, #32]
 8010e0e:	b30b      	cbz	r3, 8010e54 <_dtoa_r+0x794>
 8010e10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e12:	2b00      	cmp	r3, #0
 8010e14:	f000 80c6 	beq.w	8010fa4 <_dtoa_r+0x8e4>
 8010e18:	2c00      	cmp	r4, #0
 8010e1a:	f000 80c0 	beq.w	8010f9e <_dtoa_r+0x8de>
 8010e1e:	4629      	mov	r1, r5
 8010e20:	4622      	mov	r2, r4
 8010e22:	4648      	mov	r0, r9
 8010e24:	f000 fd12 	bl	801184c <__pow5mult>
 8010e28:	9a02      	ldr	r2, [sp, #8]
 8010e2a:	4601      	mov	r1, r0
 8010e2c:	4605      	mov	r5, r0
 8010e2e:	4648      	mov	r0, r9
 8010e30:	f000 fc6a 	bl	8011708 <__multiply>
 8010e34:	9902      	ldr	r1, [sp, #8]
 8010e36:	4680      	mov	r8, r0
 8010e38:	4648      	mov	r0, r9
 8010e3a:	f000 fb51 	bl	80114e0 <_Bfree>
 8010e3e:	9b08      	ldr	r3, [sp, #32]
 8010e40:	1b1b      	subs	r3, r3, r4
 8010e42:	9308      	str	r3, [sp, #32]
 8010e44:	f000 80b1 	beq.w	8010faa <_dtoa_r+0x8ea>
 8010e48:	9a08      	ldr	r2, [sp, #32]
 8010e4a:	4641      	mov	r1, r8
 8010e4c:	4648      	mov	r0, r9
 8010e4e:	f000 fcfd 	bl	801184c <__pow5mult>
 8010e52:	9002      	str	r0, [sp, #8]
 8010e54:	2101      	movs	r1, #1
 8010e56:	4648      	mov	r0, r9
 8010e58:	f000 fc40 	bl	80116dc <__i2b>
 8010e5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010e5e:	4604      	mov	r4, r0
 8010e60:	2b00      	cmp	r3, #0
 8010e62:	f000 81d8 	beq.w	8011216 <_dtoa_r+0xb56>
 8010e66:	461a      	mov	r2, r3
 8010e68:	4601      	mov	r1, r0
 8010e6a:	4648      	mov	r0, r9
 8010e6c:	f000 fcee 	bl	801184c <__pow5mult>
 8010e70:	9b07      	ldr	r3, [sp, #28]
 8010e72:	2b01      	cmp	r3, #1
 8010e74:	4604      	mov	r4, r0
 8010e76:	f300 809f 	bgt.w	8010fb8 <_dtoa_r+0x8f8>
 8010e7a:	9b04      	ldr	r3, [sp, #16]
 8010e7c:	2b00      	cmp	r3, #0
 8010e7e:	f040 8097 	bne.w	8010fb0 <_dtoa_r+0x8f0>
 8010e82:	9b05      	ldr	r3, [sp, #20]
 8010e84:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010e88:	2b00      	cmp	r3, #0
 8010e8a:	f040 8093 	bne.w	8010fb4 <_dtoa_r+0x8f4>
 8010e8e:	9b05      	ldr	r3, [sp, #20]
 8010e90:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8010e94:	0d1b      	lsrs	r3, r3, #20
 8010e96:	051b      	lsls	r3, r3, #20
 8010e98:	b133      	cbz	r3, 8010ea8 <_dtoa_r+0x7e8>
 8010e9a:	9b00      	ldr	r3, [sp, #0]
 8010e9c:	3301      	adds	r3, #1
 8010e9e:	9300      	str	r3, [sp, #0]
 8010ea0:	9b06      	ldr	r3, [sp, #24]
 8010ea2:	3301      	adds	r3, #1
 8010ea4:	9306      	str	r3, [sp, #24]
 8010ea6:	2301      	movs	r3, #1
 8010ea8:	9308      	str	r3, [sp, #32]
 8010eaa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010eac:	2b00      	cmp	r3, #0
 8010eae:	f000 81b8 	beq.w	8011222 <_dtoa_r+0xb62>
 8010eb2:	6923      	ldr	r3, [r4, #16]
 8010eb4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010eb8:	6918      	ldr	r0, [r3, #16]
 8010eba:	f000 fbc3 	bl	8011644 <__hi0bits>
 8010ebe:	f1c0 0020 	rsb	r0, r0, #32
 8010ec2:	9b06      	ldr	r3, [sp, #24]
 8010ec4:	4418      	add	r0, r3
 8010ec6:	f010 001f 	ands.w	r0, r0, #31
 8010eca:	f000 8082 	beq.w	8010fd2 <_dtoa_r+0x912>
 8010ece:	f1c0 0320 	rsb	r3, r0, #32
 8010ed2:	2b04      	cmp	r3, #4
 8010ed4:	dd73      	ble.n	8010fbe <_dtoa_r+0x8fe>
 8010ed6:	9b00      	ldr	r3, [sp, #0]
 8010ed8:	f1c0 001c 	rsb	r0, r0, #28
 8010edc:	4403      	add	r3, r0
 8010ede:	9300      	str	r3, [sp, #0]
 8010ee0:	9b06      	ldr	r3, [sp, #24]
 8010ee2:	4403      	add	r3, r0
 8010ee4:	4406      	add	r6, r0
 8010ee6:	9306      	str	r3, [sp, #24]
 8010ee8:	9b00      	ldr	r3, [sp, #0]
 8010eea:	2b00      	cmp	r3, #0
 8010eec:	dd05      	ble.n	8010efa <_dtoa_r+0x83a>
 8010eee:	9902      	ldr	r1, [sp, #8]
 8010ef0:	461a      	mov	r2, r3
 8010ef2:	4648      	mov	r0, r9
 8010ef4:	f000 fd04 	bl	8011900 <__lshift>
 8010ef8:	9002      	str	r0, [sp, #8]
 8010efa:	9b06      	ldr	r3, [sp, #24]
 8010efc:	2b00      	cmp	r3, #0
 8010efe:	dd05      	ble.n	8010f0c <_dtoa_r+0x84c>
 8010f00:	4621      	mov	r1, r4
 8010f02:	461a      	mov	r2, r3
 8010f04:	4648      	mov	r0, r9
 8010f06:	f000 fcfb 	bl	8011900 <__lshift>
 8010f0a:	4604      	mov	r4, r0
 8010f0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010f0e:	2b00      	cmp	r3, #0
 8010f10:	d061      	beq.n	8010fd6 <_dtoa_r+0x916>
 8010f12:	9802      	ldr	r0, [sp, #8]
 8010f14:	4621      	mov	r1, r4
 8010f16:	f000 fd5f 	bl	80119d8 <__mcmp>
 8010f1a:	2800      	cmp	r0, #0
 8010f1c:	da5b      	bge.n	8010fd6 <_dtoa_r+0x916>
 8010f1e:	2300      	movs	r3, #0
 8010f20:	9902      	ldr	r1, [sp, #8]
 8010f22:	220a      	movs	r2, #10
 8010f24:	4648      	mov	r0, r9
 8010f26:	f000 fafd 	bl	8011524 <__multadd>
 8010f2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f2c:	9002      	str	r0, [sp, #8]
 8010f2e:	f107 38ff 	add.w	r8, r7, #4294967295
 8010f32:	2b00      	cmp	r3, #0
 8010f34:	f000 8177 	beq.w	8011226 <_dtoa_r+0xb66>
 8010f38:	4629      	mov	r1, r5
 8010f3a:	2300      	movs	r3, #0
 8010f3c:	220a      	movs	r2, #10
 8010f3e:	4648      	mov	r0, r9
 8010f40:	f000 faf0 	bl	8011524 <__multadd>
 8010f44:	f1bb 0f00 	cmp.w	fp, #0
 8010f48:	4605      	mov	r5, r0
 8010f4a:	dc6f      	bgt.n	801102c <_dtoa_r+0x96c>
 8010f4c:	9b07      	ldr	r3, [sp, #28]
 8010f4e:	2b02      	cmp	r3, #2
 8010f50:	dc49      	bgt.n	8010fe6 <_dtoa_r+0x926>
 8010f52:	e06b      	b.n	801102c <_dtoa_r+0x96c>
 8010f54:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8010f56:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8010f5a:	e73c      	b.n	8010dd6 <_dtoa_r+0x716>
 8010f5c:	3fe00000 	.word	0x3fe00000
 8010f60:	40240000 	.word	0x40240000
 8010f64:	9b03      	ldr	r3, [sp, #12]
 8010f66:	1e5c      	subs	r4, r3, #1
 8010f68:	9b08      	ldr	r3, [sp, #32]
 8010f6a:	42a3      	cmp	r3, r4
 8010f6c:	db09      	blt.n	8010f82 <_dtoa_r+0x8c2>
 8010f6e:	1b1c      	subs	r4, r3, r4
 8010f70:	9b03      	ldr	r3, [sp, #12]
 8010f72:	2b00      	cmp	r3, #0
 8010f74:	f6bf af30 	bge.w	8010dd8 <_dtoa_r+0x718>
 8010f78:	9b00      	ldr	r3, [sp, #0]
 8010f7a:	9a03      	ldr	r2, [sp, #12]
 8010f7c:	1a9e      	subs	r6, r3, r2
 8010f7e:	2300      	movs	r3, #0
 8010f80:	e72b      	b.n	8010dda <_dtoa_r+0x71a>
 8010f82:	9b08      	ldr	r3, [sp, #32]
 8010f84:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010f86:	9408      	str	r4, [sp, #32]
 8010f88:	1ae3      	subs	r3, r4, r3
 8010f8a:	441a      	add	r2, r3
 8010f8c:	9e00      	ldr	r6, [sp, #0]
 8010f8e:	9b03      	ldr	r3, [sp, #12]
 8010f90:	920d      	str	r2, [sp, #52]	@ 0x34
 8010f92:	2400      	movs	r4, #0
 8010f94:	e721      	b.n	8010dda <_dtoa_r+0x71a>
 8010f96:	9c08      	ldr	r4, [sp, #32]
 8010f98:	9e00      	ldr	r6, [sp, #0]
 8010f9a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8010f9c:	e728      	b.n	8010df0 <_dtoa_r+0x730>
 8010f9e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8010fa2:	e751      	b.n	8010e48 <_dtoa_r+0x788>
 8010fa4:	9a08      	ldr	r2, [sp, #32]
 8010fa6:	9902      	ldr	r1, [sp, #8]
 8010fa8:	e750      	b.n	8010e4c <_dtoa_r+0x78c>
 8010faa:	f8cd 8008 	str.w	r8, [sp, #8]
 8010fae:	e751      	b.n	8010e54 <_dtoa_r+0x794>
 8010fb0:	2300      	movs	r3, #0
 8010fb2:	e779      	b.n	8010ea8 <_dtoa_r+0x7e8>
 8010fb4:	9b04      	ldr	r3, [sp, #16]
 8010fb6:	e777      	b.n	8010ea8 <_dtoa_r+0x7e8>
 8010fb8:	2300      	movs	r3, #0
 8010fba:	9308      	str	r3, [sp, #32]
 8010fbc:	e779      	b.n	8010eb2 <_dtoa_r+0x7f2>
 8010fbe:	d093      	beq.n	8010ee8 <_dtoa_r+0x828>
 8010fc0:	9a00      	ldr	r2, [sp, #0]
 8010fc2:	331c      	adds	r3, #28
 8010fc4:	441a      	add	r2, r3
 8010fc6:	9200      	str	r2, [sp, #0]
 8010fc8:	9a06      	ldr	r2, [sp, #24]
 8010fca:	441a      	add	r2, r3
 8010fcc:	441e      	add	r6, r3
 8010fce:	9206      	str	r2, [sp, #24]
 8010fd0:	e78a      	b.n	8010ee8 <_dtoa_r+0x828>
 8010fd2:	4603      	mov	r3, r0
 8010fd4:	e7f4      	b.n	8010fc0 <_dtoa_r+0x900>
 8010fd6:	9b03      	ldr	r3, [sp, #12]
 8010fd8:	2b00      	cmp	r3, #0
 8010fda:	46b8      	mov	r8, r7
 8010fdc:	dc20      	bgt.n	8011020 <_dtoa_r+0x960>
 8010fde:	469b      	mov	fp, r3
 8010fe0:	9b07      	ldr	r3, [sp, #28]
 8010fe2:	2b02      	cmp	r3, #2
 8010fe4:	dd1e      	ble.n	8011024 <_dtoa_r+0x964>
 8010fe6:	f1bb 0f00 	cmp.w	fp, #0
 8010fea:	f47f adb1 	bne.w	8010b50 <_dtoa_r+0x490>
 8010fee:	4621      	mov	r1, r4
 8010ff0:	465b      	mov	r3, fp
 8010ff2:	2205      	movs	r2, #5
 8010ff4:	4648      	mov	r0, r9
 8010ff6:	f000 fa95 	bl	8011524 <__multadd>
 8010ffa:	4601      	mov	r1, r0
 8010ffc:	4604      	mov	r4, r0
 8010ffe:	9802      	ldr	r0, [sp, #8]
 8011000:	f000 fcea 	bl	80119d8 <__mcmp>
 8011004:	2800      	cmp	r0, #0
 8011006:	f77f ada3 	ble.w	8010b50 <_dtoa_r+0x490>
 801100a:	4656      	mov	r6, sl
 801100c:	2331      	movs	r3, #49	@ 0x31
 801100e:	f806 3b01 	strb.w	r3, [r6], #1
 8011012:	f108 0801 	add.w	r8, r8, #1
 8011016:	e59f      	b.n	8010b58 <_dtoa_r+0x498>
 8011018:	9c03      	ldr	r4, [sp, #12]
 801101a:	46b8      	mov	r8, r7
 801101c:	4625      	mov	r5, r4
 801101e:	e7f4      	b.n	801100a <_dtoa_r+0x94a>
 8011020:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8011024:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011026:	2b00      	cmp	r3, #0
 8011028:	f000 8101 	beq.w	801122e <_dtoa_r+0xb6e>
 801102c:	2e00      	cmp	r6, #0
 801102e:	dd05      	ble.n	801103c <_dtoa_r+0x97c>
 8011030:	4629      	mov	r1, r5
 8011032:	4632      	mov	r2, r6
 8011034:	4648      	mov	r0, r9
 8011036:	f000 fc63 	bl	8011900 <__lshift>
 801103a:	4605      	mov	r5, r0
 801103c:	9b08      	ldr	r3, [sp, #32]
 801103e:	2b00      	cmp	r3, #0
 8011040:	d05c      	beq.n	80110fc <_dtoa_r+0xa3c>
 8011042:	6869      	ldr	r1, [r5, #4]
 8011044:	4648      	mov	r0, r9
 8011046:	f000 fa0b 	bl	8011460 <_Balloc>
 801104a:	4606      	mov	r6, r0
 801104c:	b928      	cbnz	r0, 801105a <_dtoa_r+0x99a>
 801104e:	4b82      	ldr	r3, [pc, #520]	@ (8011258 <_dtoa_r+0xb98>)
 8011050:	4602      	mov	r2, r0
 8011052:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8011056:	f7ff bb4a 	b.w	80106ee <_dtoa_r+0x2e>
 801105a:	692a      	ldr	r2, [r5, #16]
 801105c:	3202      	adds	r2, #2
 801105e:	0092      	lsls	r2, r2, #2
 8011060:	f105 010c 	add.w	r1, r5, #12
 8011064:	300c      	adds	r0, #12
 8011066:	f7ff fa8e 	bl	8010586 <memcpy>
 801106a:	2201      	movs	r2, #1
 801106c:	4631      	mov	r1, r6
 801106e:	4648      	mov	r0, r9
 8011070:	f000 fc46 	bl	8011900 <__lshift>
 8011074:	f10a 0301 	add.w	r3, sl, #1
 8011078:	9300      	str	r3, [sp, #0]
 801107a:	eb0a 030b 	add.w	r3, sl, fp
 801107e:	9308      	str	r3, [sp, #32]
 8011080:	9b04      	ldr	r3, [sp, #16]
 8011082:	f003 0301 	and.w	r3, r3, #1
 8011086:	462f      	mov	r7, r5
 8011088:	9306      	str	r3, [sp, #24]
 801108a:	4605      	mov	r5, r0
 801108c:	9b00      	ldr	r3, [sp, #0]
 801108e:	9802      	ldr	r0, [sp, #8]
 8011090:	4621      	mov	r1, r4
 8011092:	f103 3bff 	add.w	fp, r3, #4294967295
 8011096:	f7ff fa8b 	bl	80105b0 <quorem>
 801109a:	4603      	mov	r3, r0
 801109c:	3330      	adds	r3, #48	@ 0x30
 801109e:	9003      	str	r0, [sp, #12]
 80110a0:	4639      	mov	r1, r7
 80110a2:	9802      	ldr	r0, [sp, #8]
 80110a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80110a6:	f000 fc97 	bl	80119d8 <__mcmp>
 80110aa:	462a      	mov	r2, r5
 80110ac:	9004      	str	r0, [sp, #16]
 80110ae:	4621      	mov	r1, r4
 80110b0:	4648      	mov	r0, r9
 80110b2:	f000 fcad 	bl	8011a10 <__mdiff>
 80110b6:	68c2      	ldr	r2, [r0, #12]
 80110b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80110ba:	4606      	mov	r6, r0
 80110bc:	bb02      	cbnz	r2, 8011100 <_dtoa_r+0xa40>
 80110be:	4601      	mov	r1, r0
 80110c0:	9802      	ldr	r0, [sp, #8]
 80110c2:	f000 fc89 	bl	80119d8 <__mcmp>
 80110c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80110c8:	4602      	mov	r2, r0
 80110ca:	4631      	mov	r1, r6
 80110cc:	4648      	mov	r0, r9
 80110ce:	920c      	str	r2, [sp, #48]	@ 0x30
 80110d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80110d2:	f000 fa05 	bl	80114e0 <_Bfree>
 80110d6:	9b07      	ldr	r3, [sp, #28]
 80110d8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80110da:	9e00      	ldr	r6, [sp, #0]
 80110dc:	ea42 0103 	orr.w	r1, r2, r3
 80110e0:	9b06      	ldr	r3, [sp, #24]
 80110e2:	4319      	orrs	r1, r3
 80110e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80110e6:	d10d      	bne.n	8011104 <_dtoa_r+0xa44>
 80110e8:	2b39      	cmp	r3, #57	@ 0x39
 80110ea:	d027      	beq.n	801113c <_dtoa_r+0xa7c>
 80110ec:	9a04      	ldr	r2, [sp, #16]
 80110ee:	2a00      	cmp	r2, #0
 80110f0:	dd01      	ble.n	80110f6 <_dtoa_r+0xa36>
 80110f2:	9b03      	ldr	r3, [sp, #12]
 80110f4:	3331      	adds	r3, #49	@ 0x31
 80110f6:	f88b 3000 	strb.w	r3, [fp]
 80110fa:	e52e      	b.n	8010b5a <_dtoa_r+0x49a>
 80110fc:	4628      	mov	r0, r5
 80110fe:	e7b9      	b.n	8011074 <_dtoa_r+0x9b4>
 8011100:	2201      	movs	r2, #1
 8011102:	e7e2      	b.n	80110ca <_dtoa_r+0xa0a>
 8011104:	9904      	ldr	r1, [sp, #16]
 8011106:	2900      	cmp	r1, #0
 8011108:	db04      	blt.n	8011114 <_dtoa_r+0xa54>
 801110a:	9807      	ldr	r0, [sp, #28]
 801110c:	4301      	orrs	r1, r0
 801110e:	9806      	ldr	r0, [sp, #24]
 8011110:	4301      	orrs	r1, r0
 8011112:	d120      	bne.n	8011156 <_dtoa_r+0xa96>
 8011114:	2a00      	cmp	r2, #0
 8011116:	ddee      	ble.n	80110f6 <_dtoa_r+0xa36>
 8011118:	9902      	ldr	r1, [sp, #8]
 801111a:	9300      	str	r3, [sp, #0]
 801111c:	2201      	movs	r2, #1
 801111e:	4648      	mov	r0, r9
 8011120:	f000 fbee 	bl	8011900 <__lshift>
 8011124:	4621      	mov	r1, r4
 8011126:	9002      	str	r0, [sp, #8]
 8011128:	f000 fc56 	bl	80119d8 <__mcmp>
 801112c:	2800      	cmp	r0, #0
 801112e:	9b00      	ldr	r3, [sp, #0]
 8011130:	dc02      	bgt.n	8011138 <_dtoa_r+0xa78>
 8011132:	d1e0      	bne.n	80110f6 <_dtoa_r+0xa36>
 8011134:	07da      	lsls	r2, r3, #31
 8011136:	d5de      	bpl.n	80110f6 <_dtoa_r+0xa36>
 8011138:	2b39      	cmp	r3, #57	@ 0x39
 801113a:	d1da      	bne.n	80110f2 <_dtoa_r+0xa32>
 801113c:	2339      	movs	r3, #57	@ 0x39
 801113e:	f88b 3000 	strb.w	r3, [fp]
 8011142:	4633      	mov	r3, r6
 8011144:	461e      	mov	r6, r3
 8011146:	3b01      	subs	r3, #1
 8011148:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 801114c:	2a39      	cmp	r2, #57	@ 0x39
 801114e:	d04e      	beq.n	80111ee <_dtoa_r+0xb2e>
 8011150:	3201      	adds	r2, #1
 8011152:	701a      	strb	r2, [r3, #0]
 8011154:	e501      	b.n	8010b5a <_dtoa_r+0x49a>
 8011156:	2a00      	cmp	r2, #0
 8011158:	dd03      	ble.n	8011162 <_dtoa_r+0xaa2>
 801115a:	2b39      	cmp	r3, #57	@ 0x39
 801115c:	d0ee      	beq.n	801113c <_dtoa_r+0xa7c>
 801115e:	3301      	adds	r3, #1
 8011160:	e7c9      	b.n	80110f6 <_dtoa_r+0xa36>
 8011162:	9a00      	ldr	r2, [sp, #0]
 8011164:	9908      	ldr	r1, [sp, #32]
 8011166:	f802 3c01 	strb.w	r3, [r2, #-1]
 801116a:	428a      	cmp	r2, r1
 801116c:	d028      	beq.n	80111c0 <_dtoa_r+0xb00>
 801116e:	9902      	ldr	r1, [sp, #8]
 8011170:	2300      	movs	r3, #0
 8011172:	220a      	movs	r2, #10
 8011174:	4648      	mov	r0, r9
 8011176:	f000 f9d5 	bl	8011524 <__multadd>
 801117a:	42af      	cmp	r7, r5
 801117c:	9002      	str	r0, [sp, #8]
 801117e:	f04f 0300 	mov.w	r3, #0
 8011182:	f04f 020a 	mov.w	r2, #10
 8011186:	4639      	mov	r1, r7
 8011188:	4648      	mov	r0, r9
 801118a:	d107      	bne.n	801119c <_dtoa_r+0xadc>
 801118c:	f000 f9ca 	bl	8011524 <__multadd>
 8011190:	4607      	mov	r7, r0
 8011192:	4605      	mov	r5, r0
 8011194:	9b00      	ldr	r3, [sp, #0]
 8011196:	3301      	adds	r3, #1
 8011198:	9300      	str	r3, [sp, #0]
 801119a:	e777      	b.n	801108c <_dtoa_r+0x9cc>
 801119c:	f000 f9c2 	bl	8011524 <__multadd>
 80111a0:	4629      	mov	r1, r5
 80111a2:	4607      	mov	r7, r0
 80111a4:	2300      	movs	r3, #0
 80111a6:	220a      	movs	r2, #10
 80111a8:	4648      	mov	r0, r9
 80111aa:	f000 f9bb 	bl	8011524 <__multadd>
 80111ae:	4605      	mov	r5, r0
 80111b0:	e7f0      	b.n	8011194 <_dtoa_r+0xad4>
 80111b2:	f1bb 0f00 	cmp.w	fp, #0
 80111b6:	bfcc      	ite	gt
 80111b8:	465e      	movgt	r6, fp
 80111ba:	2601      	movle	r6, #1
 80111bc:	4456      	add	r6, sl
 80111be:	2700      	movs	r7, #0
 80111c0:	9902      	ldr	r1, [sp, #8]
 80111c2:	9300      	str	r3, [sp, #0]
 80111c4:	2201      	movs	r2, #1
 80111c6:	4648      	mov	r0, r9
 80111c8:	f000 fb9a 	bl	8011900 <__lshift>
 80111cc:	4621      	mov	r1, r4
 80111ce:	9002      	str	r0, [sp, #8]
 80111d0:	f000 fc02 	bl	80119d8 <__mcmp>
 80111d4:	2800      	cmp	r0, #0
 80111d6:	dcb4      	bgt.n	8011142 <_dtoa_r+0xa82>
 80111d8:	d102      	bne.n	80111e0 <_dtoa_r+0xb20>
 80111da:	9b00      	ldr	r3, [sp, #0]
 80111dc:	07db      	lsls	r3, r3, #31
 80111de:	d4b0      	bmi.n	8011142 <_dtoa_r+0xa82>
 80111e0:	4633      	mov	r3, r6
 80111e2:	461e      	mov	r6, r3
 80111e4:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80111e8:	2a30      	cmp	r2, #48	@ 0x30
 80111ea:	d0fa      	beq.n	80111e2 <_dtoa_r+0xb22>
 80111ec:	e4b5      	b.n	8010b5a <_dtoa_r+0x49a>
 80111ee:	459a      	cmp	sl, r3
 80111f0:	d1a8      	bne.n	8011144 <_dtoa_r+0xa84>
 80111f2:	2331      	movs	r3, #49	@ 0x31
 80111f4:	f108 0801 	add.w	r8, r8, #1
 80111f8:	f88a 3000 	strb.w	r3, [sl]
 80111fc:	e4ad      	b.n	8010b5a <_dtoa_r+0x49a>
 80111fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8011200:	f8df a058 	ldr.w	sl, [pc, #88]	@ 801125c <_dtoa_r+0xb9c>
 8011204:	b11b      	cbz	r3, 801120e <_dtoa_r+0xb4e>
 8011206:	f10a 0308 	add.w	r3, sl, #8
 801120a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801120c:	6013      	str	r3, [r2, #0]
 801120e:	4650      	mov	r0, sl
 8011210:	b017      	add	sp, #92	@ 0x5c
 8011212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011216:	9b07      	ldr	r3, [sp, #28]
 8011218:	2b01      	cmp	r3, #1
 801121a:	f77f ae2e 	ble.w	8010e7a <_dtoa_r+0x7ba>
 801121e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011220:	9308      	str	r3, [sp, #32]
 8011222:	2001      	movs	r0, #1
 8011224:	e64d      	b.n	8010ec2 <_dtoa_r+0x802>
 8011226:	f1bb 0f00 	cmp.w	fp, #0
 801122a:	f77f aed9 	ble.w	8010fe0 <_dtoa_r+0x920>
 801122e:	4656      	mov	r6, sl
 8011230:	9802      	ldr	r0, [sp, #8]
 8011232:	4621      	mov	r1, r4
 8011234:	f7ff f9bc 	bl	80105b0 <quorem>
 8011238:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 801123c:	f806 3b01 	strb.w	r3, [r6], #1
 8011240:	eba6 020a 	sub.w	r2, r6, sl
 8011244:	4593      	cmp	fp, r2
 8011246:	ddb4      	ble.n	80111b2 <_dtoa_r+0xaf2>
 8011248:	9902      	ldr	r1, [sp, #8]
 801124a:	2300      	movs	r3, #0
 801124c:	220a      	movs	r2, #10
 801124e:	4648      	mov	r0, r9
 8011250:	f000 f968 	bl	8011524 <__multadd>
 8011254:	9002      	str	r0, [sp, #8]
 8011256:	e7eb      	b.n	8011230 <_dtoa_r+0xb70>
 8011258:	080185be 	.word	0x080185be
 801125c:	08018542 	.word	0x08018542

08011260 <_free_r>:
 8011260:	b538      	push	{r3, r4, r5, lr}
 8011262:	4605      	mov	r5, r0
 8011264:	2900      	cmp	r1, #0
 8011266:	d041      	beq.n	80112ec <_free_r+0x8c>
 8011268:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801126c:	1f0c      	subs	r4, r1, #4
 801126e:	2b00      	cmp	r3, #0
 8011270:	bfb8      	it	lt
 8011272:	18e4      	addlt	r4, r4, r3
 8011274:	f000 f8e8 	bl	8011448 <__malloc_lock>
 8011278:	4a1d      	ldr	r2, [pc, #116]	@ (80112f0 <_free_r+0x90>)
 801127a:	6813      	ldr	r3, [r2, #0]
 801127c:	b933      	cbnz	r3, 801128c <_free_r+0x2c>
 801127e:	6063      	str	r3, [r4, #4]
 8011280:	6014      	str	r4, [r2, #0]
 8011282:	4628      	mov	r0, r5
 8011284:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011288:	f000 b8e4 	b.w	8011454 <__malloc_unlock>
 801128c:	42a3      	cmp	r3, r4
 801128e:	d908      	bls.n	80112a2 <_free_r+0x42>
 8011290:	6820      	ldr	r0, [r4, #0]
 8011292:	1821      	adds	r1, r4, r0
 8011294:	428b      	cmp	r3, r1
 8011296:	bf01      	itttt	eq
 8011298:	6819      	ldreq	r1, [r3, #0]
 801129a:	685b      	ldreq	r3, [r3, #4]
 801129c:	1809      	addeq	r1, r1, r0
 801129e:	6021      	streq	r1, [r4, #0]
 80112a0:	e7ed      	b.n	801127e <_free_r+0x1e>
 80112a2:	461a      	mov	r2, r3
 80112a4:	685b      	ldr	r3, [r3, #4]
 80112a6:	b10b      	cbz	r3, 80112ac <_free_r+0x4c>
 80112a8:	42a3      	cmp	r3, r4
 80112aa:	d9fa      	bls.n	80112a2 <_free_r+0x42>
 80112ac:	6811      	ldr	r1, [r2, #0]
 80112ae:	1850      	adds	r0, r2, r1
 80112b0:	42a0      	cmp	r0, r4
 80112b2:	d10b      	bne.n	80112cc <_free_r+0x6c>
 80112b4:	6820      	ldr	r0, [r4, #0]
 80112b6:	4401      	add	r1, r0
 80112b8:	1850      	adds	r0, r2, r1
 80112ba:	4283      	cmp	r3, r0
 80112bc:	6011      	str	r1, [r2, #0]
 80112be:	d1e0      	bne.n	8011282 <_free_r+0x22>
 80112c0:	6818      	ldr	r0, [r3, #0]
 80112c2:	685b      	ldr	r3, [r3, #4]
 80112c4:	6053      	str	r3, [r2, #4]
 80112c6:	4408      	add	r0, r1
 80112c8:	6010      	str	r0, [r2, #0]
 80112ca:	e7da      	b.n	8011282 <_free_r+0x22>
 80112cc:	d902      	bls.n	80112d4 <_free_r+0x74>
 80112ce:	230c      	movs	r3, #12
 80112d0:	602b      	str	r3, [r5, #0]
 80112d2:	e7d6      	b.n	8011282 <_free_r+0x22>
 80112d4:	6820      	ldr	r0, [r4, #0]
 80112d6:	1821      	adds	r1, r4, r0
 80112d8:	428b      	cmp	r3, r1
 80112da:	bf04      	itt	eq
 80112dc:	6819      	ldreq	r1, [r3, #0]
 80112de:	685b      	ldreq	r3, [r3, #4]
 80112e0:	6063      	str	r3, [r4, #4]
 80112e2:	bf04      	itt	eq
 80112e4:	1809      	addeq	r1, r1, r0
 80112e6:	6021      	streq	r1, [r4, #0]
 80112e8:	6054      	str	r4, [r2, #4]
 80112ea:	e7ca      	b.n	8011282 <_free_r+0x22>
 80112ec:	bd38      	pop	{r3, r4, r5, pc}
 80112ee:	bf00      	nop
 80112f0:	20005b90 	.word	0x20005b90

080112f4 <malloc>:
 80112f4:	4b02      	ldr	r3, [pc, #8]	@ (8011300 <malloc+0xc>)
 80112f6:	4601      	mov	r1, r0
 80112f8:	6818      	ldr	r0, [r3, #0]
 80112fa:	f000 b825 	b.w	8011348 <_malloc_r>
 80112fe:	bf00      	nop
 8011300:	20000140 	.word	0x20000140

08011304 <sbrk_aligned>:
 8011304:	b570      	push	{r4, r5, r6, lr}
 8011306:	4e0f      	ldr	r6, [pc, #60]	@ (8011344 <sbrk_aligned+0x40>)
 8011308:	460c      	mov	r4, r1
 801130a:	6831      	ldr	r1, [r6, #0]
 801130c:	4605      	mov	r5, r0
 801130e:	b911      	cbnz	r1, 8011316 <sbrk_aligned+0x12>
 8011310:	f001 fd88 	bl	8012e24 <_sbrk_r>
 8011314:	6030      	str	r0, [r6, #0]
 8011316:	4621      	mov	r1, r4
 8011318:	4628      	mov	r0, r5
 801131a:	f001 fd83 	bl	8012e24 <_sbrk_r>
 801131e:	1c43      	adds	r3, r0, #1
 8011320:	d103      	bne.n	801132a <sbrk_aligned+0x26>
 8011322:	f04f 34ff 	mov.w	r4, #4294967295
 8011326:	4620      	mov	r0, r4
 8011328:	bd70      	pop	{r4, r5, r6, pc}
 801132a:	1cc4      	adds	r4, r0, #3
 801132c:	f024 0403 	bic.w	r4, r4, #3
 8011330:	42a0      	cmp	r0, r4
 8011332:	d0f8      	beq.n	8011326 <sbrk_aligned+0x22>
 8011334:	1a21      	subs	r1, r4, r0
 8011336:	4628      	mov	r0, r5
 8011338:	f001 fd74 	bl	8012e24 <_sbrk_r>
 801133c:	3001      	adds	r0, #1
 801133e:	d1f2      	bne.n	8011326 <sbrk_aligned+0x22>
 8011340:	e7ef      	b.n	8011322 <sbrk_aligned+0x1e>
 8011342:	bf00      	nop
 8011344:	20005b8c 	.word	0x20005b8c

08011348 <_malloc_r>:
 8011348:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801134c:	1ccd      	adds	r5, r1, #3
 801134e:	f025 0503 	bic.w	r5, r5, #3
 8011352:	3508      	adds	r5, #8
 8011354:	2d0c      	cmp	r5, #12
 8011356:	bf38      	it	cc
 8011358:	250c      	movcc	r5, #12
 801135a:	2d00      	cmp	r5, #0
 801135c:	4606      	mov	r6, r0
 801135e:	db01      	blt.n	8011364 <_malloc_r+0x1c>
 8011360:	42a9      	cmp	r1, r5
 8011362:	d904      	bls.n	801136e <_malloc_r+0x26>
 8011364:	230c      	movs	r3, #12
 8011366:	6033      	str	r3, [r6, #0]
 8011368:	2000      	movs	r0, #0
 801136a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801136e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8011444 <_malloc_r+0xfc>
 8011372:	f000 f869 	bl	8011448 <__malloc_lock>
 8011376:	f8d8 3000 	ldr.w	r3, [r8]
 801137a:	461c      	mov	r4, r3
 801137c:	bb44      	cbnz	r4, 80113d0 <_malloc_r+0x88>
 801137e:	4629      	mov	r1, r5
 8011380:	4630      	mov	r0, r6
 8011382:	f7ff ffbf 	bl	8011304 <sbrk_aligned>
 8011386:	1c43      	adds	r3, r0, #1
 8011388:	4604      	mov	r4, r0
 801138a:	d158      	bne.n	801143e <_malloc_r+0xf6>
 801138c:	f8d8 4000 	ldr.w	r4, [r8]
 8011390:	4627      	mov	r7, r4
 8011392:	2f00      	cmp	r7, #0
 8011394:	d143      	bne.n	801141e <_malloc_r+0xd6>
 8011396:	2c00      	cmp	r4, #0
 8011398:	d04b      	beq.n	8011432 <_malloc_r+0xea>
 801139a:	6823      	ldr	r3, [r4, #0]
 801139c:	4639      	mov	r1, r7
 801139e:	4630      	mov	r0, r6
 80113a0:	eb04 0903 	add.w	r9, r4, r3
 80113a4:	f001 fd3e 	bl	8012e24 <_sbrk_r>
 80113a8:	4581      	cmp	r9, r0
 80113aa:	d142      	bne.n	8011432 <_malloc_r+0xea>
 80113ac:	6821      	ldr	r1, [r4, #0]
 80113ae:	1a6d      	subs	r5, r5, r1
 80113b0:	4629      	mov	r1, r5
 80113b2:	4630      	mov	r0, r6
 80113b4:	f7ff ffa6 	bl	8011304 <sbrk_aligned>
 80113b8:	3001      	adds	r0, #1
 80113ba:	d03a      	beq.n	8011432 <_malloc_r+0xea>
 80113bc:	6823      	ldr	r3, [r4, #0]
 80113be:	442b      	add	r3, r5
 80113c0:	6023      	str	r3, [r4, #0]
 80113c2:	f8d8 3000 	ldr.w	r3, [r8]
 80113c6:	685a      	ldr	r2, [r3, #4]
 80113c8:	bb62      	cbnz	r2, 8011424 <_malloc_r+0xdc>
 80113ca:	f8c8 7000 	str.w	r7, [r8]
 80113ce:	e00f      	b.n	80113f0 <_malloc_r+0xa8>
 80113d0:	6822      	ldr	r2, [r4, #0]
 80113d2:	1b52      	subs	r2, r2, r5
 80113d4:	d420      	bmi.n	8011418 <_malloc_r+0xd0>
 80113d6:	2a0b      	cmp	r2, #11
 80113d8:	d917      	bls.n	801140a <_malloc_r+0xc2>
 80113da:	1961      	adds	r1, r4, r5
 80113dc:	42a3      	cmp	r3, r4
 80113de:	6025      	str	r5, [r4, #0]
 80113e0:	bf18      	it	ne
 80113e2:	6059      	strne	r1, [r3, #4]
 80113e4:	6863      	ldr	r3, [r4, #4]
 80113e6:	bf08      	it	eq
 80113e8:	f8c8 1000 	streq.w	r1, [r8]
 80113ec:	5162      	str	r2, [r4, r5]
 80113ee:	604b      	str	r3, [r1, #4]
 80113f0:	4630      	mov	r0, r6
 80113f2:	f000 f82f 	bl	8011454 <__malloc_unlock>
 80113f6:	f104 000b 	add.w	r0, r4, #11
 80113fa:	1d23      	adds	r3, r4, #4
 80113fc:	f020 0007 	bic.w	r0, r0, #7
 8011400:	1ac2      	subs	r2, r0, r3
 8011402:	bf1c      	itt	ne
 8011404:	1a1b      	subne	r3, r3, r0
 8011406:	50a3      	strne	r3, [r4, r2]
 8011408:	e7af      	b.n	801136a <_malloc_r+0x22>
 801140a:	6862      	ldr	r2, [r4, #4]
 801140c:	42a3      	cmp	r3, r4
 801140e:	bf0c      	ite	eq
 8011410:	f8c8 2000 	streq.w	r2, [r8]
 8011414:	605a      	strne	r2, [r3, #4]
 8011416:	e7eb      	b.n	80113f0 <_malloc_r+0xa8>
 8011418:	4623      	mov	r3, r4
 801141a:	6864      	ldr	r4, [r4, #4]
 801141c:	e7ae      	b.n	801137c <_malloc_r+0x34>
 801141e:	463c      	mov	r4, r7
 8011420:	687f      	ldr	r7, [r7, #4]
 8011422:	e7b6      	b.n	8011392 <_malloc_r+0x4a>
 8011424:	461a      	mov	r2, r3
 8011426:	685b      	ldr	r3, [r3, #4]
 8011428:	42a3      	cmp	r3, r4
 801142a:	d1fb      	bne.n	8011424 <_malloc_r+0xdc>
 801142c:	2300      	movs	r3, #0
 801142e:	6053      	str	r3, [r2, #4]
 8011430:	e7de      	b.n	80113f0 <_malloc_r+0xa8>
 8011432:	230c      	movs	r3, #12
 8011434:	6033      	str	r3, [r6, #0]
 8011436:	4630      	mov	r0, r6
 8011438:	f000 f80c 	bl	8011454 <__malloc_unlock>
 801143c:	e794      	b.n	8011368 <_malloc_r+0x20>
 801143e:	6005      	str	r5, [r0, #0]
 8011440:	e7d6      	b.n	80113f0 <_malloc_r+0xa8>
 8011442:	bf00      	nop
 8011444:	20005b90 	.word	0x20005b90

08011448 <__malloc_lock>:
 8011448:	4801      	ldr	r0, [pc, #4]	@ (8011450 <__malloc_lock+0x8>)
 801144a:	f7ff b89a 	b.w	8010582 <__retarget_lock_acquire_recursive>
 801144e:	bf00      	nop
 8011450:	20005b88 	.word	0x20005b88

08011454 <__malloc_unlock>:
 8011454:	4801      	ldr	r0, [pc, #4]	@ (801145c <__malloc_unlock+0x8>)
 8011456:	f7ff b895 	b.w	8010584 <__retarget_lock_release_recursive>
 801145a:	bf00      	nop
 801145c:	20005b88 	.word	0x20005b88

08011460 <_Balloc>:
 8011460:	b570      	push	{r4, r5, r6, lr}
 8011462:	69c6      	ldr	r6, [r0, #28]
 8011464:	4604      	mov	r4, r0
 8011466:	460d      	mov	r5, r1
 8011468:	b976      	cbnz	r6, 8011488 <_Balloc+0x28>
 801146a:	2010      	movs	r0, #16
 801146c:	f7ff ff42 	bl	80112f4 <malloc>
 8011470:	4602      	mov	r2, r0
 8011472:	61e0      	str	r0, [r4, #28]
 8011474:	b920      	cbnz	r0, 8011480 <_Balloc+0x20>
 8011476:	4b18      	ldr	r3, [pc, #96]	@ (80114d8 <_Balloc+0x78>)
 8011478:	4818      	ldr	r0, [pc, #96]	@ (80114dc <_Balloc+0x7c>)
 801147a:	216b      	movs	r1, #107	@ 0x6b
 801147c:	f001 fcec 	bl	8012e58 <__assert_func>
 8011480:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8011484:	6006      	str	r6, [r0, #0]
 8011486:	60c6      	str	r6, [r0, #12]
 8011488:	69e6      	ldr	r6, [r4, #28]
 801148a:	68f3      	ldr	r3, [r6, #12]
 801148c:	b183      	cbz	r3, 80114b0 <_Balloc+0x50>
 801148e:	69e3      	ldr	r3, [r4, #28]
 8011490:	68db      	ldr	r3, [r3, #12]
 8011492:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8011496:	b9b8      	cbnz	r0, 80114c8 <_Balloc+0x68>
 8011498:	2101      	movs	r1, #1
 801149a:	fa01 f605 	lsl.w	r6, r1, r5
 801149e:	1d72      	adds	r2, r6, #5
 80114a0:	0092      	lsls	r2, r2, #2
 80114a2:	4620      	mov	r0, r4
 80114a4:	f001 fcf6 	bl	8012e94 <_calloc_r>
 80114a8:	b160      	cbz	r0, 80114c4 <_Balloc+0x64>
 80114aa:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80114ae:	e00e      	b.n	80114ce <_Balloc+0x6e>
 80114b0:	2221      	movs	r2, #33	@ 0x21
 80114b2:	2104      	movs	r1, #4
 80114b4:	4620      	mov	r0, r4
 80114b6:	f001 fced 	bl	8012e94 <_calloc_r>
 80114ba:	69e3      	ldr	r3, [r4, #28]
 80114bc:	60f0      	str	r0, [r6, #12]
 80114be:	68db      	ldr	r3, [r3, #12]
 80114c0:	2b00      	cmp	r3, #0
 80114c2:	d1e4      	bne.n	801148e <_Balloc+0x2e>
 80114c4:	2000      	movs	r0, #0
 80114c6:	bd70      	pop	{r4, r5, r6, pc}
 80114c8:	6802      	ldr	r2, [r0, #0]
 80114ca:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80114ce:	2300      	movs	r3, #0
 80114d0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80114d4:	e7f7      	b.n	80114c6 <_Balloc+0x66>
 80114d6:	bf00      	nop
 80114d8:	0801854f 	.word	0x0801854f
 80114dc:	080185cf 	.word	0x080185cf

080114e0 <_Bfree>:
 80114e0:	b570      	push	{r4, r5, r6, lr}
 80114e2:	69c6      	ldr	r6, [r0, #28]
 80114e4:	4605      	mov	r5, r0
 80114e6:	460c      	mov	r4, r1
 80114e8:	b976      	cbnz	r6, 8011508 <_Bfree+0x28>
 80114ea:	2010      	movs	r0, #16
 80114ec:	f7ff ff02 	bl	80112f4 <malloc>
 80114f0:	4602      	mov	r2, r0
 80114f2:	61e8      	str	r0, [r5, #28]
 80114f4:	b920      	cbnz	r0, 8011500 <_Bfree+0x20>
 80114f6:	4b09      	ldr	r3, [pc, #36]	@ (801151c <_Bfree+0x3c>)
 80114f8:	4809      	ldr	r0, [pc, #36]	@ (8011520 <_Bfree+0x40>)
 80114fa:	218f      	movs	r1, #143	@ 0x8f
 80114fc:	f001 fcac 	bl	8012e58 <__assert_func>
 8011500:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8011504:	6006      	str	r6, [r0, #0]
 8011506:	60c6      	str	r6, [r0, #12]
 8011508:	b13c      	cbz	r4, 801151a <_Bfree+0x3a>
 801150a:	69eb      	ldr	r3, [r5, #28]
 801150c:	6862      	ldr	r2, [r4, #4]
 801150e:	68db      	ldr	r3, [r3, #12]
 8011510:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8011514:	6021      	str	r1, [r4, #0]
 8011516:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801151a:	bd70      	pop	{r4, r5, r6, pc}
 801151c:	0801854f 	.word	0x0801854f
 8011520:	080185cf 	.word	0x080185cf

08011524 <__multadd>:
 8011524:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011528:	690d      	ldr	r5, [r1, #16]
 801152a:	4607      	mov	r7, r0
 801152c:	460c      	mov	r4, r1
 801152e:	461e      	mov	r6, r3
 8011530:	f101 0c14 	add.w	ip, r1, #20
 8011534:	2000      	movs	r0, #0
 8011536:	f8dc 3000 	ldr.w	r3, [ip]
 801153a:	b299      	uxth	r1, r3
 801153c:	fb02 6101 	mla	r1, r2, r1, r6
 8011540:	0c1e      	lsrs	r6, r3, #16
 8011542:	0c0b      	lsrs	r3, r1, #16
 8011544:	fb02 3306 	mla	r3, r2, r6, r3
 8011548:	b289      	uxth	r1, r1
 801154a:	3001      	adds	r0, #1
 801154c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8011550:	4285      	cmp	r5, r0
 8011552:	f84c 1b04 	str.w	r1, [ip], #4
 8011556:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801155a:	dcec      	bgt.n	8011536 <__multadd+0x12>
 801155c:	b30e      	cbz	r6, 80115a2 <__multadd+0x7e>
 801155e:	68a3      	ldr	r3, [r4, #8]
 8011560:	42ab      	cmp	r3, r5
 8011562:	dc19      	bgt.n	8011598 <__multadd+0x74>
 8011564:	6861      	ldr	r1, [r4, #4]
 8011566:	4638      	mov	r0, r7
 8011568:	3101      	adds	r1, #1
 801156a:	f7ff ff79 	bl	8011460 <_Balloc>
 801156e:	4680      	mov	r8, r0
 8011570:	b928      	cbnz	r0, 801157e <__multadd+0x5a>
 8011572:	4602      	mov	r2, r0
 8011574:	4b0c      	ldr	r3, [pc, #48]	@ (80115a8 <__multadd+0x84>)
 8011576:	480d      	ldr	r0, [pc, #52]	@ (80115ac <__multadd+0x88>)
 8011578:	21ba      	movs	r1, #186	@ 0xba
 801157a:	f001 fc6d 	bl	8012e58 <__assert_func>
 801157e:	6922      	ldr	r2, [r4, #16]
 8011580:	3202      	adds	r2, #2
 8011582:	f104 010c 	add.w	r1, r4, #12
 8011586:	0092      	lsls	r2, r2, #2
 8011588:	300c      	adds	r0, #12
 801158a:	f7fe fffc 	bl	8010586 <memcpy>
 801158e:	4621      	mov	r1, r4
 8011590:	4638      	mov	r0, r7
 8011592:	f7ff ffa5 	bl	80114e0 <_Bfree>
 8011596:	4644      	mov	r4, r8
 8011598:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801159c:	3501      	adds	r5, #1
 801159e:	615e      	str	r6, [r3, #20]
 80115a0:	6125      	str	r5, [r4, #16]
 80115a2:	4620      	mov	r0, r4
 80115a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115a8:	080185be 	.word	0x080185be
 80115ac:	080185cf 	.word	0x080185cf

080115b0 <__s2b>:
 80115b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80115b4:	460c      	mov	r4, r1
 80115b6:	4615      	mov	r5, r2
 80115b8:	461f      	mov	r7, r3
 80115ba:	2209      	movs	r2, #9
 80115bc:	3308      	adds	r3, #8
 80115be:	4606      	mov	r6, r0
 80115c0:	fb93 f3f2 	sdiv	r3, r3, r2
 80115c4:	2100      	movs	r1, #0
 80115c6:	2201      	movs	r2, #1
 80115c8:	429a      	cmp	r2, r3
 80115ca:	db09      	blt.n	80115e0 <__s2b+0x30>
 80115cc:	4630      	mov	r0, r6
 80115ce:	f7ff ff47 	bl	8011460 <_Balloc>
 80115d2:	b940      	cbnz	r0, 80115e6 <__s2b+0x36>
 80115d4:	4602      	mov	r2, r0
 80115d6:	4b19      	ldr	r3, [pc, #100]	@ (801163c <__s2b+0x8c>)
 80115d8:	4819      	ldr	r0, [pc, #100]	@ (8011640 <__s2b+0x90>)
 80115da:	21d3      	movs	r1, #211	@ 0xd3
 80115dc:	f001 fc3c 	bl	8012e58 <__assert_func>
 80115e0:	0052      	lsls	r2, r2, #1
 80115e2:	3101      	adds	r1, #1
 80115e4:	e7f0      	b.n	80115c8 <__s2b+0x18>
 80115e6:	9b08      	ldr	r3, [sp, #32]
 80115e8:	6143      	str	r3, [r0, #20]
 80115ea:	2d09      	cmp	r5, #9
 80115ec:	f04f 0301 	mov.w	r3, #1
 80115f0:	6103      	str	r3, [r0, #16]
 80115f2:	dd16      	ble.n	8011622 <__s2b+0x72>
 80115f4:	f104 0909 	add.w	r9, r4, #9
 80115f8:	46c8      	mov	r8, r9
 80115fa:	442c      	add	r4, r5
 80115fc:	f818 3b01 	ldrb.w	r3, [r8], #1
 8011600:	4601      	mov	r1, r0
 8011602:	3b30      	subs	r3, #48	@ 0x30
 8011604:	220a      	movs	r2, #10
 8011606:	4630      	mov	r0, r6
 8011608:	f7ff ff8c 	bl	8011524 <__multadd>
 801160c:	45a0      	cmp	r8, r4
 801160e:	d1f5      	bne.n	80115fc <__s2b+0x4c>
 8011610:	f1a5 0408 	sub.w	r4, r5, #8
 8011614:	444c      	add	r4, r9
 8011616:	1b2d      	subs	r5, r5, r4
 8011618:	1963      	adds	r3, r4, r5
 801161a:	42bb      	cmp	r3, r7
 801161c:	db04      	blt.n	8011628 <__s2b+0x78>
 801161e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011622:	340a      	adds	r4, #10
 8011624:	2509      	movs	r5, #9
 8011626:	e7f6      	b.n	8011616 <__s2b+0x66>
 8011628:	f814 3b01 	ldrb.w	r3, [r4], #1
 801162c:	4601      	mov	r1, r0
 801162e:	3b30      	subs	r3, #48	@ 0x30
 8011630:	220a      	movs	r2, #10
 8011632:	4630      	mov	r0, r6
 8011634:	f7ff ff76 	bl	8011524 <__multadd>
 8011638:	e7ee      	b.n	8011618 <__s2b+0x68>
 801163a:	bf00      	nop
 801163c:	080185be 	.word	0x080185be
 8011640:	080185cf 	.word	0x080185cf

08011644 <__hi0bits>:
 8011644:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8011648:	4603      	mov	r3, r0
 801164a:	bf36      	itet	cc
 801164c:	0403      	lslcc	r3, r0, #16
 801164e:	2000      	movcs	r0, #0
 8011650:	2010      	movcc	r0, #16
 8011652:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8011656:	bf3c      	itt	cc
 8011658:	021b      	lslcc	r3, r3, #8
 801165a:	3008      	addcc	r0, #8
 801165c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8011660:	bf3c      	itt	cc
 8011662:	011b      	lslcc	r3, r3, #4
 8011664:	3004      	addcc	r0, #4
 8011666:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801166a:	bf3c      	itt	cc
 801166c:	009b      	lslcc	r3, r3, #2
 801166e:	3002      	addcc	r0, #2
 8011670:	2b00      	cmp	r3, #0
 8011672:	db05      	blt.n	8011680 <__hi0bits+0x3c>
 8011674:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8011678:	f100 0001 	add.w	r0, r0, #1
 801167c:	bf08      	it	eq
 801167e:	2020      	moveq	r0, #32
 8011680:	4770      	bx	lr

08011682 <__lo0bits>:
 8011682:	6803      	ldr	r3, [r0, #0]
 8011684:	4602      	mov	r2, r0
 8011686:	f013 0007 	ands.w	r0, r3, #7
 801168a:	d00b      	beq.n	80116a4 <__lo0bits+0x22>
 801168c:	07d9      	lsls	r1, r3, #31
 801168e:	d421      	bmi.n	80116d4 <__lo0bits+0x52>
 8011690:	0798      	lsls	r0, r3, #30
 8011692:	bf49      	itett	mi
 8011694:	085b      	lsrmi	r3, r3, #1
 8011696:	089b      	lsrpl	r3, r3, #2
 8011698:	2001      	movmi	r0, #1
 801169a:	6013      	strmi	r3, [r2, #0]
 801169c:	bf5c      	itt	pl
 801169e:	6013      	strpl	r3, [r2, #0]
 80116a0:	2002      	movpl	r0, #2
 80116a2:	4770      	bx	lr
 80116a4:	b299      	uxth	r1, r3
 80116a6:	b909      	cbnz	r1, 80116ac <__lo0bits+0x2a>
 80116a8:	0c1b      	lsrs	r3, r3, #16
 80116aa:	2010      	movs	r0, #16
 80116ac:	b2d9      	uxtb	r1, r3
 80116ae:	b909      	cbnz	r1, 80116b4 <__lo0bits+0x32>
 80116b0:	3008      	adds	r0, #8
 80116b2:	0a1b      	lsrs	r3, r3, #8
 80116b4:	0719      	lsls	r1, r3, #28
 80116b6:	bf04      	itt	eq
 80116b8:	091b      	lsreq	r3, r3, #4
 80116ba:	3004      	addeq	r0, #4
 80116bc:	0799      	lsls	r1, r3, #30
 80116be:	bf04      	itt	eq
 80116c0:	089b      	lsreq	r3, r3, #2
 80116c2:	3002      	addeq	r0, #2
 80116c4:	07d9      	lsls	r1, r3, #31
 80116c6:	d403      	bmi.n	80116d0 <__lo0bits+0x4e>
 80116c8:	085b      	lsrs	r3, r3, #1
 80116ca:	f100 0001 	add.w	r0, r0, #1
 80116ce:	d003      	beq.n	80116d8 <__lo0bits+0x56>
 80116d0:	6013      	str	r3, [r2, #0]
 80116d2:	4770      	bx	lr
 80116d4:	2000      	movs	r0, #0
 80116d6:	4770      	bx	lr
 80116d8:	2020      	movs	r0, #32
 80116da:	4770      	bx	lr

080116dc <__i2b>:
 80116dc:	b510      	push	{r4, lr}
 80116de:	460c      	mov	r4, r1
 80116e0:	2101      	movs	r1, #1
 80116e2:	f7ff febd 	bl	8011460 <_Balloc>
 80116e6:	4602      	mov	r2, r0
 80116e8:	b928      	cbnz	r0, 80116f6 <__i2b+0x1a>
 80116ea:	4b05      	ldr	r3, [pc, #20]	@ (8011700 <__i2b+0x24>)
 80116ec:	4805      	ldr	r0, [pc, #20]	@ (8011704 <__i2b+0x28>)
 80116ee:	f240 1145 	movw	r1, #325	@ 0x145
 80116f2:	f001 fbb1 	bl	8012e58 <__assert_func>
 80116f6:	2301      	movs	r3, #1
 80116f8:	6144      	str	r4, [r0, #20]
 80116fa:	6103      	str	r3, [r0, #16]
 80116fc:	bd10      	pop	{r4, pc}
 80116fe:	bf00      	nop
 8011700:	080185be 	.word	0x080185be
 8011704:	080185cf 	.word	0x080185cf

08011708 <__multiply>:
 8011708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801170c:	4617      	mov	r7, r2
 801170e:	690a      	ldr	r2, [r1, #16]
 8011710:	693b      	ldr	r3, [r7, #16]
 8011712:	429a      	cmp	r2, r3
 8011714:	bfa8      	it	ge
 8011716:	463b      	movge	r3, r7
 8011718:	4689      	mov	r9, r1
 801171a:	bfa4      	itt	ge
 801171c:	460f      	movge	r7, r1
 801171e:	4699      	movge	r9, r3
 8011720:	693d      	ldr	r5, [r7, #16]
 8011722:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8011726:	68bb      	ldr	r3, [r7, #8]
 8011728:	6879      	ldr	r1, [r7, #4]
 801172a:	eb05 060a 	add.w	r6, r5, sl
 801172e:	42b3      	cmp	r3, r6
 8011730:	b085      	sub	sp, #20
 8011732:	bfb8      	it	lt
 8011734:	3101      	addlt	r1, #1
 8011736:	f7ff fe93 	bl	8011460 <_Balloc>
 801173a:	b930      	cbnz	r0, 801174a <__multiply+0x42>
 801173c:	4602      	mov	r2, r0
 801173e:	4b41      	ldr	r3, [pc, #260]	@ (8011844 <__multiply+0x13c>)
 8011740:	4841      	ldr	r0, [pc, #260]	@ (8011848 <__multiply+0x140>)
 8011742:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8011746:	f001 fb87 	bl	8012e58 <__assert_func>
 801174a:	f100 0414 	add.w	r4, r0, #20
 801174e:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8011752:	4623      	mov	r3, r4
 8011754:	2200      	movs	r2, #0
 8011756:	4573      	cmp	r3, lr
 8011758:	d320      	bcc.n	801179c <__multiply+0x94>
 801175a:	f107 0814 	add.w	r8, r7, #20
 801175e:	f109 0114 	add.w	r1, r9, #20
 8011762:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8011766:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 801176a:	9302      	str	r3, [sp, #8]
 801176c:	1beb      	subs	r3, r5, r7
 801176e:	3b15      	subs	r3, #21
 8011770:	f023 0303 	bic.w	r3, r3, #3
 8011774:	3304      	adds	r3, #4
 8011776:	3715      	adds	r7, #21
 8011778:	42bd      	cmp	r5, r7
 801177a:	bf38      	it	cc
 801177c:	2304      	movcc	r3, #4
 801177e:	9301      	str	r3, [sp, #4]
 8011780:	9b02      	ldr	r3, [sp, #8]
 8011782:	9103      	str	r1, [sp, #12]
 8011784:	428b      	cmp	r3, r1
 8011786:	d80c      	bhi.n	80117a2 <__multiply+0x9a>
 8011788:	2e00      	cmp	r6, #0
 801178a:	dd03      	ble.n	8011794 <__multiply+0x8c>
 801178c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8011790:	2b00      	cmp	r3, #0
 8011792:	d055      	beq.n	8011840 <__multiply+0x138>
 8011794:	6106      	str	r6, [r0, #16]
 8011796:	b005      	add	sp, #20
 8011798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801179c:	f843 2b04 	str.w	r2, [r3], #4
 80117a0:	e7d9      	b.n	8011756 <__multiply+0x4e>
 80117a2:	f8b1 a000 	ldrh.w	sl, [r1]
 80117a6:	f1ba 0f00 	cmp.w	sl, #0
 80117aa:	d01f      	beq.n	80117ec <__multiply+0xe4>
 80117ac:	46c4      	mov	ip, r8
 80117ae:	46a1      	mov	r9, r4
 80117b0:	2700      	movs	r7, #0
 80117b2:	f85c 2b04 	ldr.w	r2, [ip], #4
 80117b6:	f8d9 3000 	ldr.w	r3, [r9]
 80117ba:	fa1f fb82 	uxth.w	fp, r2
 80117be:	b29b      	uxth	r3, r3
 80117c0:	fb0a 330b 	mla	r3, sl, fp, r3
 80117c4:	443b      	add	r3, r7
 80117c6:	f8d9 7000 	ldr.w	r7, [r9]
 80117ca:	0c12      	lsrs	r2, r2, #16
 80117cc:	0c3f      	lsrs	r7, r7, #16
 80117ce:	fb0a 7202 	mla	r2, sl, r2, r7
 80117d2:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80117d6:	b29b      	uxth	r3, r3
 80117d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80117dc:	4565      	cmp	r5, ip
 80117de:	f849 3b04 	str.w	r3, [r9], #4
 80117e2:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80117e6:	d8e4      	bhi.n	80117b2 <__multiply+0xaa>
 80117e8:	9b01      	ldr	r3, [sp, #4]
 80117ea:	50e7      	str	r7, [r4, r3]
 80117ec:	9b03      	ldr	r3, [sp, #12]
 80117ee:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80117f2:	3104      	adds	r1, #4
 80117f4:	f1b9 0f00 	cmp.w	r9, #0
 80117f8:	d020      	beq.n	801183c <__multiply+0x134>
 80117fa:	6823      	ldr	r3, [r4, #0]
 80117fc:	4647      	mov	r7, r8
 80117fe:	46a4      	mov	ip, r4
 8011800:	f04f 0a00 	mov.w	sl, #0
 8011804:	f8b7 b000 	ldrh.w	fp, [r7]
 8011808:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 801180c:	fb09 220b 	mla	r2, r9, fp, r2
 8011810:	4452      	add	r2, sl
 8011812:	b29b      	uxth	r3, r3
 8011814:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011818:	f84c 3b04 	str.w	r3, [ip], #4
 801181c:	f857 3b04 	ldr.w	r3, [r7], #4
 8011820:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8011824:	f8bc 3000 	ldrh.w	r3, [ip]
 8011828:	fb09 330a 	mla	r3, r9, sl, r3
 801182c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8011830:	42bd      	cmp	r5, r7
 8011832:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8011836:	d8e5      	bhi.n	8011804 <__multiply+0xfc>
 8011838:	9a01      	ldr	r2, [sp, #4]
 801183a:	50a3      	str	r3, [r4, r2]
 801183c:	3404      	adds	r4, #4
 801183e:	e79f      	b.n	8011780 <__multiply+0x78>
 8011840:	3e01      	subs	r6, #1
 8011842:	e7a1      	b.n	8011788 <__multiply+0x80>
 8011844:	080185be 	.word	0x080185be
 8011848:	080185cf 	.word	0x080185cf

0801184c <__pow5mult>:
 801184c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011850:	4615      	mov	r5, r2
 8011852:	f012 0203 	ands.w	r2, r2, #3
 8011856:	4607      	mov	r7, r0
 8011858:	460e      	mov	r6, r1
 801185a:	d007      	beq.n	801186c <__pow5mult+0x20>
 801185c:	4c25      	ldr	r4, [pc, #148]	@ (80118f4 <__pow5mult+0xa8>)
 801185e:	3a01      	subs	r2, #1
 8011860:	2300      	movs	r3, #0
 8011862:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011866:	f7ff fe5d 	bl	8011524 <__multadd>
 801186a:	4606      	mov	r6, r0
 801186c:	10ad      	asrs	r5, r5, #2
 801186e:	d03d      	beq.n	80118ec <__pow5mult+0xa0>
 8011870:	69fc      	ldr	r4, [r7, #28]
 8011872:	b97c      	cbnz	r4, 8011894 <__pow5mult+0x48>
 8011874:	2010      	movs	r0, #16
 8011876:	f7ff fd3d 	bl	80112f4 <malloc>
 801187a:	4602      	mov	r2, r0
 801187c:	61f8      	str	r0, [r7, #28]
 801187e:	b928      	cbnz	r0, 801188c <__pow5mult+0x40>
 8011880:	4b1d      	ldr	r3, [pc, #116]	@ (80118f8 <__pow5mult+0xac>)
 8011882:	481e      	ldr	r0, [pc, #120]	@ (80118fc <__pow5mult+0xb0>)
 8011884:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8011888:	f001 fae6 	bl	8012e58 <__assert_func>
 801188c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8011890:	6004      	str	r4, [r0, #0]
 8011892:	60c4      	str	r4, [r0, #12]
 8011894:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8011898:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801189c:	b94c      	cbnz	r4, 80118b2 <__pow5mult+0x66>
 801189e:	f240 2171 	movw	r1, #625	@ 0x271
 80118a2:	4638      	mov	r0, r7
 80118a4:	f7ff ff1a 	bl	80116dc <__i2b>
 80118a8:	2300      	movs	r3, #0
 80118aa:	f8c8 0008 	str.w	r0, [r8, #8]
 80118ae:	4604      	mov	r4, r0
 80118b0:	6003      	str	r3, [r0, #0]
 80118b2:	f04f 0900 	mov.w	r9, #0
 80118b6:	07eb      	lsls	r3, r5, #31
 80118b8:	d50a      	bpl.n	80118d0 <__pow5mult+0x84>
 80118ba:	4631      	mov	r1, r6
 80118bc:	4622      	mov	r2, r4
 80118be:	4638      	mov	r0, r7
 80118c0:	f7ff ff22 	bl	8011708 <__multiply>
 80118c4:	4631      	mov	r1, r6
 80118c6:	4680      	mov	r8, r0
 80118c8:	4638      	mov	r0, r7
 80118ca:	f7ff fe09 	bl	80114e0 <_Bfree>
 80118ce:	4646      	mov	r6, r8
 80118d0:	106d      	asrs	r5, r5, #1
 80118d2:	d00b      	beq.n	80118ec <__pow5mult+0xa0>
 80118d4:	6820      	ldr	r0, [r4, #0]
 80118d6:	b938      	cbnz	r0, 80118e8 <__pow5mult+0x9c>
 80118d8:	4622      	mov	r2, r4
 80118da:	4621      	mov	r1, r4
 80118dc:	4638      	mov	r0, r7
 80118de:	f7ff ff13 	bl	8011708 <__multiply>
 80118e2:	6020      	str	r0, [r4, #0]
 80118e4:	f8c0 9000 	str.w	r9, [r0]
 80118e8:	4604      	mov	r4, r0
 80118ea:	e7e4      	b.n	80118b6 <__pow5mult+0x6a>
 80118ec:	4630      	mov	r0, r6
 80118ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80118f2:	bf00      	nop
 80118f4:	080186e0 	.word	0x080186e0
 80118f8:	0801854f 	.word	0x0801854f
 80118fc:	080185cf 	.word	0x080185cf

08011900 <__lshift>:
 8011900:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011904:	460c      	mov	r4, r1
 8011906:	6849      	ldr	r1, [r1, #4]
 8011908:	6923      	ldr	r3, [r4, #16]
 801190a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801190e:	68a3      	ldr	r3, [r4, #8]
 8011910:	4607      	mov	r7, r0
 8011912:	4691      	mov	r9, r2
 8011914:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011918:	f108 0601 	add.w	r6, r8, #1
 801191c:	42b3      	cmp	r3, r6
 801191e:	db0b      	blt.n	8011938 <__lshift+0x38>
 8011920:	4638      	mov	r0, r7
 8011922:	f7ff fd9d 	bl	8011460 <_Balloc>
 8011926:	4605      	mov	r5, r0
 8011928:	b948      	cbnz	r0, 801193e <__lshift+0x3e>
 801192a:	4602      	mov	r2, r0
 801192c:	4b28      	ldr	r3, [pc, #160]	@ (80119d0 <__lshift+0xd0>)
 801192e:	4829      	ldr	r0, [pc, #164]	@ (80119d4 <__lshift+0xd4>)
 8011930:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8011934:	f001 fa90 	bl	8012e58 <__assert_func>
 8011938:	3101      	adds	r1, #1
 801193a:	005b      	lsls	r3, r3, #1
 801193c:	e7ee      	b.n	801191c <__lshift+0x1c>
 801193e:	2300      	movs	r3, #0
 8011940:	f100 0114 	add.w	r1, r0, #20
 8011944:	f100 0210 	add.w	r2, r0, #16
 8011948:	4618      	mov	r0, r3
 801194a:	4553      	cmp	r3, sl
 801194c:	db33      	blt.n	80119b6 <__lshift+0xb6>
 801194e:	6920      	ldr	r0, [r4, #16]
 8011950:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8011954:	f104 0314 	add.w	r3, r4, #20
 8011958:	f019 091f 	ands.w	r9, r9, #31
 801195c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8011960:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8011964:	d02b      	beq.n	80119be <__lshift+0xbe>
 8011966:	f1c9 0e20 	rsb	lr, r9, #32
 801196a:	468a      	mov	sl, r1
 801196c:	2200      	movs	r2, #0
 801196e:	6818      	ldr	r0, [r3, #0]
 8011970:	fa00 f009 	lsl.w	r0, r0, r9
 8011974:	4310      	orrs	r0, r2
 8011976:	f84a 0b04 	str.w	r0, [sl], #4
 801197a:	f853 2b04 	ldr.w	r2, [r3], #4
 801197e:	459c      	cmp	ip, r3
 8011980:	fa22 f20e 	lsr.w	r2, r2, lr
 8011984:	d8f3      	bhi.n	801196e <__lshift+0x6e>
 8011986:	ebac 0304 	sub.w	r3, ip, r4
 801198a:	3b15      	subs	r3, #21
 801198c:	f023 0303 	bic.w	r3, r3, #3
 8011990:	3304      	adds	r3, #4
 8011992:	f104 0015 	add.w	r0, r4, #21
 8011996:	4560      	cmp	r0, ip
 8011998:	bf88      	it	hi
 801199a:	2304      	movhi	r3, #4
 801199c:	50ca      	str	r2, [r1, r3]
 801199e:	b10a      	cbz	r2, 80119a4 <__lshift+0xa4>
 80119a0:	f108 0602 	add.w	r6, r8, #2
 80119a4:	3e01      	subs	r6, #1
 80119a6:	4638      	mov	r0, r7
 80119a8:	612e      	str	r6, [r5, #16]
 80119aa:	4621      	mov	r1, r4
 80119ac:	f7ff fd98 	bl	80114e0 <_Bfree>
 80119b0:	4628      	mov	r0, r5
 80119b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80119b6:	f842 0f04 	str.w	r0, [r2, #4]!
 80119ba:	3301      	adds	r3, #1
 80119bc:	e7c5      	b.n	801194a <__lshift+0x4a>
 80119be:	3904      	subs	r1, #4
 80119c0:	f853 2b04 	ldr.w	r2, [r3], #4
 80119c4:	f841 2f04 	str.w	r2, [r1, #4]!
 80119c8:	459c      	cmp	ip, r3
 80119ca:	d8f9      	bhi.n	80119c0 <__lshift+0xc0>
 80119cc:	e7ea      	b.n	80119a4 <__lshift+0xa4>
 80119ce:	bf00      	nop
 80119d0:	080185be 	.word	0x080185be
 80119d4:	080185cf 	.word	0x080185cf

080119d8 <__mcmp>:
 80119d8:	690a      	ldr	r2, [r1, #16]
 80119da:	4603      	mov	r3, r0
 80119dc:	6900      	ldr	r0, [r0, #16]
 80119de:	1a80      	subs	r0, r0, r2
 80119e0:	b530      	push	{r4, r5, lr}
 80119e2:	d10e      	bne.n	8011a02 <__mcmp+0x2a>
 80119e4:	3314      	adds	r3, #20
 80119e6:	3114      	adds	r1, #20
 80119e8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80119ec:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80119f0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80119f4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80119f8:	4295      	cmp	r5, r2
 80119fa:	d003      	beq.n	8011a04 <__mcmp+0x2c>
 80119fc:	d205      	bcs.n	8011a0a <__mcmp+0x32>
 80119fe:	f04f 30ff 	mov.w	r0, #4294967295
 8011a02:	bd30      	pop	{r4, r5, pc}
 8011a04:	42a3      	cmp	r3, r4
 8011a06:	d3f3      	bcc.n	80119f0 <__mcmp+0x18>
 8011a08:	e7fb      	b.n	8011a02 <__mcmp+0x2a>
 8011a0a:	2001      	movs	r0, #1
 8011a0c:	e7f9      	b.n	8011a02 <__mcmp+0x2a>
	...

08011a10 <__mdiff>:
 8011a10:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a14:	4689      	mov	r9, r1
 8011a16:	4606      	mov	r6, r0
 8011a18:	4611      	mov	r1, r2
 8011a1a:	4648      	mov	r0, r9
 8011a1c:	4614      	mov	r4, r2
 8011a1e:	f7ff ffdb 	bl	80119d8 <__mcmp>
 8011a22:	1e05      	subs	r5, r0, #0
 8011a24:	d112      	bne.n	8011a4c <__mdiff+0x3c>
 8011a26:	4629      	mov	r1, r5
 8011a28:	4630      	mov	r0, r6
 8011a2a:	f7ff fd19 	bl	8011460 <_Balloc>
 8011a2e:	4602      	mov	r2, r0
 8011a30:	b928      	cbnz	r0, 8011a3e <__mdiff+0x2e>
 8011a32:	4b3f      	ldr	r3, [pc, #252]	@ (8011b30 <__mdiff+0x120>)
 8011a34:	f240 2137 	movw	r1, #567	@ 0x237
 8011a38:	483e      	ldr	r0, [pc, #248]	@ (8011b34 <__mdiff+0x124>)
 8011a3a:	f001 fa0d 	bl	8012e58 <__assert_func>
 8011a3e:	2301      	movs	r3, #1
 8011a40:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8011a44:	4610      	mov	r0, r2
 8011a46:	b003      	add	sp, #12
 8011a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a4c:	bfbc      	itt	lt
 8011a4e:	464b      	movlt	r3, r9
 8011a50:	46a1      	movlt	r9, r4
 8011a52:	4630      	mov	r0, r6
 8011a54:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8011a58:	bfba      	itte	lt
 8011a5a:	461c      	movlt	r4, r3
 8011a5c:	2501      	movlt	r5, #1
 8011a5e:	2500      	movge	r5, #0
 8011a60:	f7ff fcfe 	bl	8011460 <_Balloc>
 8011a64:	4602      	mov	r2, r0
 8011a66:	b918      	cbnz	r0, 8011a70 <__mdiff+0x60>
 8011a68:	4b31      	ldr	r3, [pc, #196]	@ (8011b30 <__mdiff+0x120>)
 8011a6a:	f240 2145 	movw	r1, #581	@ 0x245
 8011a6e:	e7e3      	b.n	8011a38 <__mdiff+0x28>
 8011a70:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8011a74:	6926      	ldr	r6, [r4, #16]
 8011a76:	60c5      	str	r5, [r0, #12]
 8011a78:	f109 0310 	add.w	r3, r9, #16
 8011a7c:	f109 0514 	add.w	r5, r9, #20
 8011a80:	f104 0e14 	add.w	lr, r4, #20
 8011a84:	f100 0b14 	add.w	fp, r0, #20
 8011a88:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8011a8c:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8011a90:	9301      	str	r3, [sp, #4]
 8011a92:	46d9      	mov	r9, fp
 8011a94:	f04f 0c00 	mov.w	ip, #0
 8011a98:	9b01      	ldr	r3, [sp, #4]
 8011a9a:	f85e 0b04 	ldr.w	r0, [lr], #4
 8011a9e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8011aa2:	9301      	str	r3, [sp, #4]
 8011aa4:	fa1f f38a 	uxth.w	r3, sl
 8011aa8:	4619      	mov	r1, r3
 8011aaa:	b283      	uxth	r3, r0
 8011aac:	1acb      	subs	r3, r1, r3
 8011aae:	0c00      	lsrs	r0, r0, #16
 8011ab0:	4463      	add	r3, ip
 8011ab2:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8011ab6:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8011aba:	b29b      	uxth	r3, r3
 8011abc:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8011ac0:	4576      	cmp	r6, lr
 8011ac2:	f849 3b04 	str.w	r3, [r9], #4
 8011ac6:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011aca:	d8e5      	bhi.n	8011a98 <__mdiff+0x88>
 8011acc:	1b33      	subs	r3, r6, r4
 8011ace:	3b15      	subs	r3, #21
 8011ad0:	f023 0303 	bic.w	r3, r3, #3
 8011ad4:	3415      	adds	r4, #21
 8011ad6:	3304      	adds	r3, #4
 8011ad8:	42a6      	cmp	r6, r4
 8011ada:	bf38      	it	cc
 8011adc:	2304      	movcc	r3, #4
 8011ade:	441d      	add	r5, r3
 8011ae0:	445b      	add	r3, fp
 8011ae2:	461e      	mov	r6, r3
 8011ae4:	462c      	mov	r4, r5
 8011ae6:	4544      	cmp	r4, r8
 8011ae8:	d30e      	bcc.n	8011b08 <__mdiff+0xf8>
 8011aea:	f108 0103 	add.w	r1, r8, #3
 8011aee:	1b49      	subs	r1, r1, r5
 8011af0:	f021 0103 	bic.w	r1, r1, #3
 8011af4:	3d03      	subs	r5, #3
 8011af6:	45a8      	cmp	r8, r5
 8011af8:	bf38      	it	cc
 8011afa:	2100      	movcc	r1, #0
 8011afc:	440b      	add	r3, r1
 8011afe:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011b02:	b191      	cbz	r1, 8011b2a <__mdiff+0x11a>
 8011b04:	6117      	str	r7, [r2, #16]
 8011b06:	e79d      	b.n	8011a44 <__mdiff+0x34>
 8011b08:	f854 1b04 	ldr.w	r1, [r4], #4
 8011b0c:	46e6      	mov	lr, ip
 8011b0e:	0c08      	lsrs	r0, r1, #16
 8011b10:	fa1c fc81 	uxtah	ip, ip, r1
 8011b14:	4471      	add	r1, lr
 8011b16:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8011b1a:	b289      	uxth	r1, r1
 8011b1c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8011b20:	f846 1b04 	str.w	r1, [r6], #4
 8011b24:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011b28:	e7dd      	b.n	8011ae6 <__mdiff+0xd6>
 8011b2a:	3f01      	subs	r7, #1
 8011b2c:	e7e7      	b.n	8011afe <__mdiff+0xee>
 8011b2e:	bf00      	nop
 8011b30:	080185be 	.word	0x080185be
 8011b34:	080185cf 	.word	0x080185cf

08011b38 <__ulp>:
 8011b38:	b082      	sub	sp, #8
 8011b3a:	ed8d 0b00 	vstr	d0, [sp]
 8011b3e:	9a01      	ldr	r2, [sp, #4]
 8011b40:	4b0f      	ldr	r3, [pc, #60]	@ (8011b80 <__ulp+0x48>)
 8011b42:	4013      	ands	r3, r2
 8011b44:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8011b48:	2b00      	cmp	r3, #0
 8011b4a:	dc08      	bgt.n	8011b5e <__ulp+0x26>
 8011b4c:	425b      	negs	r3, r3
 8011b4e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8011b52:	ea4f 5223 	mov.w	r2, r3, asr #20
 8011b56:	da04      	bge.n	8011b62 <__ulp+0x2a>
 8011b58:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8011b5c:	4113      	asrs	r3, r2
 8011b5e:	2200      	movs	r2, #0
 8011b60:	e008      	b.n	8011b74 <__ulp+0x3c>
 8011b62:	f1a2 0314 	sub.w	r3, r2, #20
 8011b66:	2b1e      	cmp	r3, #30
 8011b68:	bfda      	itte	le
 8011b6a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8011b6e:	40da      	lsrle	r2, r3
 8011b70:	2201      	movgt	r2, #1
 8011b72:	2300      	movs	r3, #0
 8011b74:	4619      	mov	r1, r3
 8011b76:	4610      	mov	r0, r2
 8011b78:	ec41 0b10 	vmov	d0, r0, r1
 8011b7c:	b002      	add	sp, #8
 8011b7e:	4770      	bx	lr
 8011b80:	7ff00000 	.word	0x7ff00000

08011b84 <__b2d>:
 8011b84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b88:	6906      	ldr	r6, [r0, #16]
 8011b8a:	f100 0814 	add.w	r8, r0, #20
 8011b8e:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8011b92:	1f37      	subs	r7, r6, #4
 8011b94:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8011b98:	4610      	mov	r0, r2
 8011b9a:	f7ff fd53 	bl	8011644 <__hi0bits>
 8011b9e:	f1c0 0320 	rsb	r3, r0, #32
 8011ba2:	280a      	cmp	r0, #10
 8011ba4:	600b      	str	r3, [r1, #0]
 8011ba6:	491b      	ldr	r1, [pc, #108]	@ (8011c14 <__b2d+0x90>)
 8011ba8:	dc15      	bgt.n	8011bd6 <__b2d+0x52>
 8011baa:	f1c0 0c0b 	rsb	ip, r0, #11
 8011bae:	fa22 f30c 	lsr.w	r3, r2, ip
 8011bb2:	45b8      	cmp	r8, r7
 8011bb4:	ea43 0501 	orr.w	r5, r3, r1
 8011bb8:	bf34      	ite	cc
 8011bba:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8011bbe:	2300      	movcs	r3, #0
 8011bc0:	3015      	adds	r0, #21
 8011bc2:	fa02 f000 	lsl.w	r0, r2, r0
 8011bc6:	fa23 f30c 	lsr.w	r3, r3, ip
 8011bca:	4303      	orrs	r3, r0
 8011bcc:	461c      	mov	r4, r3
 8011bce:	ec45 4b10 	vmov	d0, r4, r5
 8011bd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bd6:	45b8      	cmp	r8, r7
 8011bd8:	bf3a      	itte	cc
 8011bda:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8011bde:	f1a6 0708 	subcc.w	r7, r6, #8
 8011be2:	2300      	movcs	r3, #0
 8011be4:	380b      	subs	r0, #11
 8011be6:	d012      	beq.n	8011c0e <__b2d+0x8a>
 8011be8:	f1c0 0120 	rsb	r1, r0, #32
 8011bec:	fa23 f401 	lsr.w	r4, r3, r1
 8011bf0:	4082      	lsls	r2, r0
 8011bf2:	4322      	orrs	r2, r4
 8011bf4:	4547      	cmp	r7, r8
 8011bf6:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8011bfa:	bf8c      	ite	hi
 8011bfc:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8011c00:	2200      	movls	r2, #0
 8011c02:	4083      	lsls	r3, r0
 8011c04:	40ca      	lsrs	r2, r1
 8011c06:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8011c0a:	4313      	orrs	r3, r2
 8011c0c:	e7de      	b.n	8011bcc <__b2d+0x48>
 8011c0e:	ea42 0501 	orr.w	r5, r2, r1
 8011c12:	e7db      	b.n	8011bcc <__b2d+0x48>
 8011c14:	3ff00000 	.word	0x3ff00000

08011c18 <__d2b>:
 8011c18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011c1c:	460f      	mov	r7, r1
 8011c1e:	2101      	movs	r1, #1
 8011c20:	ec59 8b10 	vmov	r8, r9, d0
 8011c24:	4616      	mov	r6, r2
 8011c26:	f7ff fc1b 	bl	8011460 <_Balloc>
 8011c2a:	4604      	mov	r4, r0
 8011c2c:	b930      	cbnz	r0, 8011c3c <__d2b+0x24>
 8011c2e:	4602      	mov	r2, r0
 8011c30:	4b23      	ldr	r3, [pc, #140]	@ (8011cc0 <__d2b+0xa8>)
 8011c32:	4824      	ldr	r0, [pc, #144]	@ (8011cc4 <__d2b+0xac>)
 8011c34:	f240 310f 	movw	r1, #783	@ 0x30f
 8011c38:	f001 f90e 	bl	8012e58 <__assert_func>
 8011c3c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8011c40:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011c44:	b10d      	cbz	r5, 8011c4a <__d2b+0x32>
 8011c46:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8011c4a:	9301      	str	r3, [sp, #4]
 8011c4c:	f1b8 0300 	subs.w	r3, r8, #0
 8011c50:	d023      	beq.n	8011c9a <__d2b+0x82>
 8011c52:	4668      	mov	r0, sp
 8011c54:	9300      	str	r3, [sp, #0]
 8011c56:	f7ff fd14 	bl	8011682 <__lo0bits>
 8011c5a:	e9dd 1200 	ldrd	r1, r2, [sp]
 8011c5e:	b1d0      	cbz	r0, 8011c96 <__d2b+0x7e>
 8011c60:	f1c0 0320 	rsb	r3, r0, #32
 8011c64:	fa02 f303 	lsl.w	r3, r2, r3
 8011c68:	430b      	orrs	r3, r1
 8011c6a:	40c2      	lsrs	r2, r0
 8011c6c:	6163      	str	r3, [r4, #20]
 8011c6e:	9201      	str	r2, [sp, #4]
 8011c70:	9b01      	ldr	r3, [sp, #4]
 8011c72:	61a3      	str	r3, [r4, #24]
 8011c74:	2b00      	cmp	r3, #0
 8011c76:	bf0c      	ite	eq
 8011c78:	2201      	moveq	r2, #1
 8011c7a:	2202      	movne	r2, #2
 8011c7c:	6122      	str	r2, [r4, #16]
 8011c7e:	b1a5      	cbz	r5, 8011caa <__d2b+0x92>
 8011c80:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8011c84:	4405      	add	r5, r0
 8011c86:	603d      	str	r5, [r7, #0]
 8011c88:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8011c8c:	6030      	str	r0, [r6, #0]
 8011c8e:	4620      	mov	r0, r4
 8011c90:	b003      	add	sp, #12
 8011c92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c96:	6161      	str	r1, [r4, #20]
 8011c98:	e7ea      	b.n	8011c70 <__d2b+0x58>
 8011c9a:	a801      	add	r0, sp, #4
 8011c9c:	f7ff fcf1 	bl	8011682 <__lo0bits>
 8011ca0:	9b01      	ldr	r3, [sp, #4]
 8011ca2:	6163      	str	r3, [r4, #20]
 8011ca4:	3020      	adds	r0, #32
 8011ca6:	2201      	movs	r2, #1
 8011ca8:	e7e8      	b.n	8011c7c <__d2b+0x64>
 8011caa:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011cae:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8011cb2:	6038      	str	r0, [r7, #0]
 8011cb4:	6918      	ldr	r0, [r3, #16]
 8011cb6:	f7ff fcc5 	bl	8011644 <__hi0bits>
 8011cba:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011cbe:	e7e5      	b.n	8011c8c <__d2b+0x74>
 8011cc0:	080185be 	.word	0x080185be
 8011cc4:	080185cf 	.word	0x080185cf

08011cc8 <__ratio>:
 8011cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ccc:	b085      	sub	sp, #20
 8011cce:	e9cd 1000 	strd	r1, r0, [sp]
 8011cd2:	a902      	add	r1, sp, #8
 8011cd4:	f7ff ff56 	bl	8011b84 <__b2d>
 8011cd8:	9800      	ldr	r0, [sp, #0]
 8011cda:	a903      	add	r1, sp, #12
 8011cdc:	ec55 4b10 	vmov	r4, r5, d0
 8011ce0:	f7ff ff50 	bl	8011b84 <__b2d>
 8011ce4:	9b01      	ldr	r3, [sp, #4]
 8011ce6:	6919      	ldr	r1, [r3, #16]
 8011ce8:	9b00      	ldr	r3, [sp, #0]
 8011cea:	691b      	ldr	r3, [r3, #16]
 8011cec:	1ac9      	subs	r1, r1, r3
 8011cee:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8011cf2:	1a9b      	subs	r3, r3, r2
 8011cf4:	ec5b ab10 	vmov	sl, fp, d0
 8011cf8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8011cfc:	2b00      	cmp	r3, #0
 8011cfe:	bfce      	itee	gt
 8011d00:	462a      	movgt	r2, r5
 8011d02:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8011d06:	465a      	movle	r2, fp
 8011d08:	462f      	mov	r7, r5
 8011d0a:	46d9      	mov	r9, fp
 8011d0c:	bfcc      	ite	gt
 8011d0e:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8011d12:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8011d16:	464b      	mov	r3, r9
 8011d18:	4652      	mov	r2, sl
 8011d1a:	4620      	mov	r0, r4
 8011d1c:	4639      	mov	r1, r7
 8011d1e:	f7ee fd6d 	bl	80007fc <__aeabi_ddiv>
 8011d22:	ec41 0b10 	vmov	d0, r0, r1
 8011d26:	b005      	add	sp, #20
 8011d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011d2c <__copybits>:
 8011d2c:	3901      	subs	r1, #1
 8011d2e:	b570      	push	{r4, r5, r6, lr}
 8011d30:	1149      	asrs	r1, r1, #5
 8011d32:	6914      	ldr	r4, [r2, #16]
 8011d34:	3101      	adds	r1, #1
 8011d36:	f102 0314 	add.w	r3, r2, #20
 8011d3a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011d3e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8011d42:	1f05      	subs	r5, r0, #4
 8011d44:	42a3      	cmp	r3, r4
 8011d46:	d30c      	bcc.n	8011d62 <__copybits+0x36>
 8011d48:	1aa3      	subs	r3, r4, r2
 8011d4a:	3b11      	subs	r3, #17
 8011d4c:	f023 0303 	bic.w	r3, r3, #3
 8011d50:	3211      	adds	r2, #17
 8011d52:	42a2      	cmp	r2, r4
 8011d54:	bf88      	it	hi
 8011d56:	2300      	movhi	r3, #0
 8011d58:	4418      	add	r0, r3
 8011d5a:	2300      	movs	r3, #0
 8011d5c:	4288      	cmp	r0, r1
 8011d5e:	d305      	bcc.n	8011d6c <__copybits+0x40>
 8011d60:	bd70      	pop	{r4, r5, r6, pc}
 8011d62:	f853 6b04 	ldr.w	r6, [r3], #4
 8011d66:	f845 6f04 	str.w	r6, [r5, #4]!
 8011d6a:	e7eb      	b.n	8011d44 <__copybits+0x18>
 8011d6c:	f840 3b04 	str.w	r3, [r0], #4
 8011d70:	e7f4      	b.n	8011d5c <__copybits+0x30>

08011d72 <__any_on>:
 8011d72:	f100 0214 	add.w	r2, r0, #20
 8011d76:	6900      	ldr	r0, [r0, #16]
 8011d78:	114b      	asrs	r3, r1, #5
 8011d7a:	4298      	cmp	r0, r3
 8011d7c:	b510      	push	{r4, lr}
 8011d7e:	db11      	blt.n	8011da4 <__any_on+0x32>
 8011d80:	dd0a      	ble.n	8011d98 <__any_on+0x26>
 8011d82:	f011 011f 	ands.w	r1, r1, #31
 8011d86:	d007      	beq.n	8011d98 <__any_on+0x26>
 8011d88:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8011d8c:	fa24 f001 	lsr.w	r0, r4, r1
 8011d90:	fa00 f101 	lsl.w	r1, r0, r1
 8011d94:	428c      	cmp	r4, r1
 8011d96:	d10b      	bne.n	8011db0 <__any_on+0x3e>
 8011d98:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011d9c:	4293      	cmp	r3, r2
 8011d9e:	d803      	bhi.n	8011da8 <__any_on+0x36>
 8011da0:	2000      	movs	r0, #0
 8011da2:	bd10      	pop	{r4, pc}
 8011da4:	4603      	mov	r3, r0
 8011da6:	e7f7      	b.n	8011d98 <__any_on+0x26>
 8011da8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011dac:	2900      	cmp	r1, #0
 8011dae:	d0f5      	beq.n	8011d9c <__any_on+0x2a>
 8011db0:	2001      	movs	r0, #1
 8011db2:	e7f6      	b.n	8011da2 <__any_on+0x30>

08011db4 <sulp>:
 8011db4:	b570      	push	{r4, r5, r6, lr}
 8011db6:	4604      	mov	r4, r0
 8011db8:	460d      	mov	r5, r1
 8011dba:	ec45 4b10 	vmov	d0, r4, r5
 8011dbe:	4616      	mov	r6, r2
 8011dc0:	f7ff feba 	bl	8011b38 <__ulp>
 8011dc4:	ec51 0b10 	vmov	r0, r1, d0
 8011dc8:	b17e      	cbz	r6, 8011dea <sulp+0x36>
 8011dca:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8011dce:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8011dd2:	2b00      	cmp	r3, #0
 8011dd4:	dd09      	ble.n	8011dea <sulp+0x36>
 8011dd6:	051b      	lsls	r3, r3, #20
 8011dd8:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8011ddc:	2400      	movs	r4, #0
 8011dde:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8011de2:	4622      	mov	r2, r4
 8011de4:	462b      	mov	r3, r5
 8011de6:	f7ee fbdf 	bl	80005a8 <__aeabi_dmul>
 8011dea:	ec41 0b10 	vmov	d0, r0, r1
 8011dee:	bd70      	pop	{r4, r5, r6, pc}

08011df0 <_strtod_l>:
 8011df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011df4:	b09f      	sub	sp, #124	@ 0x7c
 8011df6:	460c      	mov	r4, r1
 8011df8:	9217      	str	r2, [sp, #92]	@ 0x5c
 8011dfa:	2200      	movs	r2, #0
 8011dfc:	921a      	str	r2, [sp, #104]	@ 0x68
 8011dfe:	9005      	str	r0, [sp, #20]
 8011e00:	f04f 0a00 	mov.w	sl, #0
 8011e04:	f04f 0b00 	mov.w	fp, #0
 8011e08:	460a      	mov	r2, r1
 8011e0a:	9219      	str	r2, [sp, #100]	@ 0x64
 8011e0c:	7811      	ldrb	r1, [r2, #0]
 8011e0e:	292b      	cmp	r1, #43	@ 0x2b
 8011e10:	d04a      	beq.n	8011ea8 <_strtod_l+0xb8>
 8011e12:	d838      	bhi.n	8011e86 <_strtod_l+0x96>
 8011e14:	290d      	cmp	r1, #13
 8011e16:	d832      	bhi.n	8011e7e <_strtod_l+0x8e>
 8011e18:	2908      	cmp	r1, #8
 8011e1a:	d832      	bhi.n	8011e82 <_strtod_l+0x92>
 8011e1c:	2900      	cmp	r1, #0
 8011e1e:	d03b      	beq.n	8011e98 <_strtod_l+0xa8>
 8011e20:	2200      	movs	r2, #0
 8011e22:	920e      	str	r2, [sp, #56]	@ 0x38
 8011e24:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8011e26:	782a      	ldrb	r2, [r5, #0]
 8011e28:	2a30      	cmp	r2, #48	@ 0x30
 8011e2a:	f040 80b2 	bne.w	8011f92 <_strtod_l+0x1a2>
 8011e2e:	786a      	ldrb	r2, [r5, #1]
 8011e30:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8011e34:	2a58      	cmp	r2, #88	@ 0x58
 8011e36:	d16e      	bne.n	8011f16 <_strtod_l+0x126>
 8011e38:	9302      	str	r3, [sp, #8]
 8011e3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e3c:	9301      	str	r3, [sp, #4]
 8011e3e:	ab1a      	add	r3, sp, #104	@ 0x68
 8011e40:	9300      	str	r3, [sp, #0]
 8011e42:	4a8f      	ldr	r2, [pc, #572]	@ (8012080 <_strtod_l+0x290>)
 8011e44:	9805      	ldr	r0, [sp, #20]
 8011e46:	ab1b      	add	r3, sp, #108	@ 0x6c
 8011e48:	a919      	add	r1, sp, #100	@ 0x64
 8011e4a:	f001 f89f 	bl	8012f8c <__gethex>
 8011e4e:	f010 060f 	ands.w	r6, r0, #15
 8011e52:	4604      	mov	r4, r0
 8011e54:	d005      	beq.n	8011e62 <_strtod_l+0x72>
 8011e56:	2e06      	cmp	r6, #6
 8011e58:	d128      	bne.n	8011eac <_strtod_l+0xbc>
 8011e5a:	3501      	adds	r5, #1
 8011e5c:	2300      	movs	r3, #0
 8011e5e:	9519      	str	r5, [sp, #100]	@ 0x64
 8011e60:	930e      	str	r3, [sp, #56]	@ 0x38
 8011e62:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8011e64:	2b00      	cmp	r3, #0
 8011e66:	f040 858e 	bne.w	8012986 <_strtod_l+0xb96>
 8011e6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e6c:	b1cb      	cbz	r3, 8011ea2 <_strtod_l+0xb2>
 8011e6e:	4652      	mov	r2, sl
 8011e70:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8011e74:	ec43 2b10 	vmov	d0, r2, r3
 8011e78:	b01f      	add	sp, #124	@ 0x7c
 8011e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e7e:	2920      	cmp	r1, #32
 8011e80:	d1ce      	bne.n	8011e20 <_strtod_l+0x30>
 8011e82:	3201      	adds	r2, #1
 8011e84:	e7c1      	b.n	8011e0a <_strtod_l+0x1a>
 8011e86:	292d      	cmp	r1, #45	@ 0x2d
 8011e88:	d1ca      	bne.n	8011e20 <_strtod_l+0x30>
 8011e8a:	2101      	movs	r1, #1
 8011e8c:	910e      	str	r1, [sp, #56]	@ 0x38
 8011e8e:	1c51      	adds	r1, r2, #1
 8011e90:	9119      	str	r1, [sp, #100]	@ 0x64
 8011e92:	7852      	ldrb	r2, [r2, #1]
 8011e94:	2a00      	cmp	r2, #0
 8011e96:	d1c5      	bne.n	8011e24 <_strtod_l+0x34>
 8011e98:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8011e9a:	9419      	str	r4, [sp, #100]	@ 0x64
 8011e9c:	2b00      	cmp	r3, #0
 8011e9e:	f040 8570 	bne.w	8012982 <_strtod_l+0xb92>
 8011ea2:	4652      	mov	r2, sl
 8011ea4:	465b      	mov	r3, fp
 8011ea6:	e7e5      	b.n	8011e74 <_strtod_l+0x84>
 8011ea8:	2100      	movs	r1, #0
 8011eaa:	e7ef      	b.n	8011e8c <_strtod_l+0x9c>
 8011eac:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8011eae:	b13a      	cbz	r2, 8011ec0 <_strtod_l+0xd0>
 8011eb0:	2135      	movs	r1, #53	@ 0x35
 8011eb2:	a81c      	add	r0, sp, #112	@ 0x70
 8011eb4:	f7ff ff3a 	bl	8011d2c <__copybits>
 8011eb8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8011eba:	9805      	ldr	r0, [sp, #20]
 8011ebc:	f7ff fb10 	bl	80114e0 <_Bfree>
 8011ec0:	3e01      	subs	r6, #1
 8011ec2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011ec4:	2e04      	cmp	r6, #4
 8011ec6:	d806      	bhi.n	8011ed6 <_strtod_l+0xe6>
 8011ec8:	e8df f006 	tbb	[pc, r6]
 8011ecc:	201d0314 	.word	0x201d0314
 8011ed0:	14          	.byte	0x14
 8011ed1:	00          	.byte	0x00
 8011ed2:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8011ed6:	05e1      	lsls	r1, r4, #23
 8011ed8:	bf48      	it	mi
 8011eda:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8011ede:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8011ee2:	0d1b      	lsrs	r3, r3, #20
 8011ee4:	051b      	lsls	r3, r3, #20
 8011ee6:	2b00      	cmp	r3, #0
 8011ee8:	d1bb      	bne.n	8011e62 <_strtod_l+0x72>
 8011eea:	f7fe fb1f 	bl	801052c <__errno>
 8011eee:	2322      	movs	r3, #34	@ 0x22
 8011ef0:	6003      	str	r3, [r0, #0]
 8011ef2:	e7b6      	b.n	8011e62 <_strtod_l+0x72>
 8011ef4:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8011ef8:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8011efc:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8011f00:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8011f04:	e7e7      	b.n	8011ed6 <_strtod_l+0xe6>
 8011f06:	f8df b180 	ldr.w	fp, [pc, #384]	@ 8012088 <_strtod_l+0x298>
 8011f0a:	e7e4      	b.n	8011ed6 <_strtod_l+0xe6>
 8011f0c:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8011f10:	f04f 3aff 	mov.w	sl, #4294967295
 8011f14:	e7df      	b.n	8011ed6 <_strtod_l+0xe6>
 8011f16:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011f18:	1c5a      	adds	r2, r3, #1
 8011f1a:	9219      	str	r2, [sp, #100]	@ 0x64
 8011f1c:	785b      	ldrb	r3, [r3, #1]
 8011f1e:	2b30      	cmp	r3, #48	@ 0x30
 8011f20:	d0f9      	beq.n	8011f16 <_strtod_l+0x126>
 8011f22:	2b00      	cmp	r3, #0
 8011f24:	d09d      	beq.n	8011e62 <_strtod_l+0x72>
 8011f26:	2301      	movs	r3, #1
 8011f28:	2700      	movs	r7, #0
 8011f2a:	9308      	str	r3, [sp, #32]
 8011f2c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011f2e:	930c      	str	r3, [sp, #48]	@ 0x30
 8011f30:	970b      	str	r7, [sp, #44]	@ 0x2c
 8011f32:	46b9      	mov	r9, r7
 8011f34:	220a      	movs	r2, #10
 8011f36:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8011f38:	7805      	ldrb	r5, [r0, #0]
 8011f3a:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8011f3e:	b2d9      	uxtb	r1, r3
 8011f40:	2909      	cmp	r1, #9
 8011f42:	d928      	bls.n	8011f96 <_strtod_l+0x1a6>
 8011f44:	494f      	ldr	r1, [pc, #316]	@ (8012084 <_strtod_l+0x294>)
 8011f46:	2201      	movs	r2, #1
 8011f48:	f000 ff5a 	bl	8012e00 <strncmp>
 8011f4c:	2800      	cmp	r0, #0
 8011f4e:	d032      	beq.n	8011fb6 <_strtod_l+0x1c6>
 8011f50:	2000      	movs	r0, #0
 8011f52:	462a      	mov	r2, r5
 8011f54:	900a      	str	r0, [sp, #40]	@ 0x28
 8011f56:	464d      	mov	r5, r9
 8011f58:	4603      	mov	r3, r0
 8011f5a:	2a65      	cmp	r2, #101	@ 0x65
 8011f5c:	d001      	beq.n	8011f62 <_strtod_l+0x172>
 8011f5e:	2a45      	cmp	r2, #69	@ 0x45
 8011f60:	d114      	bne.n	8011f8c <_strtod_l+0x19c>
 8011f62:	b91d      	cbnz	r5, 8011f6c <_strtod_l+0x17c>
 8011f64:	9a08      	ldr	r2, [sp, #32]
 8011f66:	4302      	orrs	r2, r0
 8011f68:	d096      	beq.n	8011e98 <_strtod_l+0xa8>
 8011f6a:	2500      	movs	r5, #0
 8011f6c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8011f6e:	1c62      	adds	r2, r4, #1
 8011f70:	9219      	str	r2, [sp, #100]	@ 0x64
 8011f72:	7862      	ldrb	r2, [r4, #1]
 8011f74:	2a2b      	cmp	r2, #43	@ 0x2b
 8011f76:	d07a      	beq.n	801206e <_strtod_l+0x27e>
 8011f78:	2a2d      	cmp	r2, #45	@ 0x2d
 8011f7a:	d07e      	beq.n	801207a <_strtod_l+0x28a>
 8011f7c:	f04f 0c00 	mov.w	ip, #0
 8011f80:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8011f84:	2909      	cmp	r1, #9
 8011f86:	f240 8085 	bls.w	8012094 <_strtod_l+0x2a4>
 8011f8a:	9419      	str	r4, [sp, #100]	@ 0x64
 8011f8c:	f04f 0800 	mov.w	r8, #0
 8011f90:	e0a5      	b.n	80120de <_strtod_l+0x2ee>
 8011f92:	2300      	movs	r3, #0
 8011f94:	e7c8      	b.n	8011f28 <_strtod_l+0x138>
 8011f96:	f1b9 0f08 	cmp.w	r9, #8
 8011f9a:	bfd8      	it	le
 8011f9c:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8011f9e:	f100 0001 	add.w	r0, r0, #1
 8011fa2:	bfda      	itte	le
 8011fa4:	fb02 3301 	mlale	r3, r2, r1, r3
 8011fa8:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8011faa:	fb02 3707 	mlagt	r7, r2, r7, r3
 8011fae:	f109 0901 	add.w	r9, r9, #1
 8011fb2:	9019      	str	r0, [sp, #100]	@ 0x64
 8011fb4:	e7bf      	b.n	8011f36 <_strtod_l+0x146>
 8011fb6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011fb8:	1c5a      	adds	r2, r3, #1
 8011fba:	9219      	str	r2, [sp, #100]	@ 0x64
 8011fbc:	785a      	ldrb	r2, [r3, #1]
 8011fbe:	f1b9 0f00 	cmp.w	r9, #0
 8011fc2:	d03b      	beq.n	801203c <_strtod_l+0x24c>
 8011fc4:	900a      	str	r0, [sp, #40]	@ 0x28
 8011fc6:	464d      	mov	r5, r9
 8011fc8:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8011fcc:	2b09      	cmp	r3, #9
 8011fce:	d912      	bls.n	8011ff6 <_strtod_l+0x206>
 8011fd0:	2301      	movs	r3, #1
 8011fd2:	e7c2      	b.n	8011f5a <_strtod_l+0x16a>
 8011fd4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011fd6:	1c5a      	adds	r2, r3, #1
 8011fd8:	9219      	str	r2, [sp, #100]	@ 0x64
 8011fda:	785a      	ldrb	r2, [r3, #1]
 8011fdc:	3001      	adds	r0, #1
 8011fde:	2a30      	cmp	r2, #48	@ 0x30
 8011fe0:	d0f8      	beq.n	8011fd4 <_strtod_l+0x1e4>
 8011fe2:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8011fe6:	2b08      	cmp	r3, #8
 8011fe8:	f200 84d2 	bhi.w	8012990 <_strtod_l+0xba0>
 8011fec:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011fee:	900a      	str	r0, [sp, #40]	@ 0x28
 8011ff0:	2000      	movs	r0, #0
 8011ff2:	930c      	str	r3, [sp, #48]	@ 0x30
 8011ff4:	4605      	mov	r5, r0
 8011ff6:	3a30      	subs	r2, #48	@ 0x30
 8011ff8:	f100 0301 	add.w	r3, r0, #1
 8011ffc:	d018      	beq.n	8012030 <_strtod_l+0x240>
 8011ffe:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8012000:	4419      	add	r1, r3
 8012002:	910a      	str	r1, [sp, #40]	@ 0x28
 8012004:	462e      	mov	r6, r5
 8012006:	f04f 0e0a 	mov.w	lr, #10
 801200a:	1c71      	adds	r1, r6, #1
 801200c:	eba1 0c05 	sub.w	ip, r1, r5
 8012010:	4563      	cmp	r3, ip
 8012012:	dc15      	bgt.n	8012040 <_strtod_l+0x250>
 8012014:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8012018:	182b      	adds	r3, r5, r0
 801201a:	2b08      	cmp	r3, #8
 801201c:	f105 0501 	add.w	r5, r5, #1
 8012020:	4405      	add	r5, r0
 8012022:	dc1a      	bgt.n	801205a <_strtod_l+0x26a>
 8012024:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012026:	230a      	movs	r3, #10
 8012028:	fb03 2301 	mla	r3, r3, r1, r2
 801202c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801202e:	2300      	movs	r3, #0
 8012030:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8012032:	1c51      	adds	r1, r2, #1
 8012034:	9119      	str	r1, [sp, #100]	@ 0x64
 8012036:	7852      	ldrb	r2, [r2, #1]
 8012038:	4618      	mov	r0, r3
 801203a:	e7c5      	b.n	8011fc8 <_strtod_l+0x1d8>
 801203c:	4648      	mov	r0, r9
 801203e:	e7ce      	b.n	8011fde <_strtod_l+0x1ee>
 8012040:	2e08      	cmp	r6, #8
 8012042:	dc05      	bgt.n	8012050 <_strtod_l+0x260>
 8012044:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8012046:	fb0e f606 	mul.w	r6, lr, r6
 801204a:	960b      	str	r6, [sp, #44]	@ 0x2c
 801204c:	460e      	mov	r6, r1
 801204e:	e7dc      	b.n	801200a <_strtod_l+0x21a>
 8012050:	2910      	cmp	r1, #16
 8012052:	bfd8      	it	le
 8012054:	fb0e f707 	mulle.w	r7, lr, r7
 8012058:	e7f8      	b.n	801204c <_strtod_l+0x25c>
 801205a:	2b0f      	cmp	r3, #15
 801205c:	bfdc      	itt	le
 801205e:	230a      	movle	r3, #10
 8012060:	fb03 2707 	mlale	r7, r3, r7, r2
 8012064:	e7e3      	b.n	801202e <_strtod_l+0x23e>
 8012066:	2300      	movs	r3, #0
 8012068:	930a      	str	r3, [sp, #40]	@ 0x28
 801206a:	2301      	movs	r3, #1
 801206c:	e77a      	b.n	8011f64 <_strtod_l+0x174>
 801206e:	f04f 0c00 	mov.w	ip, #0
 8012072:	1ca2      	adds	r2, r4, #2
 8012074:	9219      	str	r2, [sp, #100]	@ 0x64
 8012076:	78a2      	ldrb	r2, [r4, #2]
 8012078:	e782      	b.n	8011f80 <_strtod_l+0x190>
 801207a:	f04f 0c01 	mov.w	ip, #1
 801207e:	e7f8      	b.n	8012072 <_strtod_l+0x282>
 8012080:	080187f4 	.word	0x080187f4
 8012084:	08018628 	.word	0x08018628
 8012088:	7ff00000 	.word	0x7ff00000
 801208c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801208e:	1c51      	adds	r1, r2, #1
 8012090:	9119      	str	r1, [sp, #100]	@ 0x64
 8012092:	7852      	ldrb	r2, [r2, #1]
 8012094:	2a30      	cmp	r2, #48	@ 0x30
 8012096:	d0f9      	beq.n	801208c <_strtod_l+0x29c>
 8012098:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 801209c:	2908      	cmp	r1, #8
 801209e:	f63f af75 	bhi.w	8011f8c <_strtod_l+0x19c>
 80120a2:	3a30      	subs	r2, #48	@ 0x30
 80120a4:	9209      	str	r2, [sp, #36]	@ 0x24
 80120a6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80120a8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80120aa:	f04f 080a 	mov.w	r8, #10
 80120ae:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80120b0:	1c56      	adds	r6, r2, #1
 80120b2:	9619      	str	r6, [sp, #100]	@ 0x64
 80120b4:	7852      	ldrb	r2, [r2, #1]
 80120b6:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80120ba:	f1be 0f09 	cmp.w	lr, #9
 80120be:	d939      	bls.n	8012134 <_strtod_l+0x344>
 80120c0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80120c2:	1a76      	subs	r6, r6, r1
 80120c4:	2e08      	cmp	r6, #8
 80120c6:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80120ca:	dc03      	bgt.n	80120d4 <_strtod_l+0x2e4>
 80120cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80120ce:	4588      	cmp	r8, r1
 80120d0:	bfa8      	it	ge
 80120d2:	4688      	movge	r8, r1
 80120d4:	f1bc 0f00 	cmp.w	ip, #0
 80120d8:	d001      	beq.n	80120de <_strtod_l+0x2ee>
 80120da:	f1c8 0800 	rsb	r8, r8, #0
 80120de:	2d00      	cmp	r5, #0
 80120e0:	d14e      	bne.n	8012180 <_strtod_l+0x390>
 80120e2:	9908      	ldr	r1, [sp, #32]
 80120e4:	4308      	orrs	r0, r1
 80120e6:	f47f aebc 	bne.w	8011e62 <_strtod_l+0x72>
 80120ea:	2b00      	cmp	r3, #0
 80120ec:	f47f aed4 	bne.w	8011e98 <_strtod_l+0xa8>
 80120f0:	2a69      	cmp	r2, #105	@ 0x69
 80120f2:	d028      	beq.n	8012146 <_strtod_l+0x356>
 80120f4:	dc25      	bgt.n	8012142 <_strtod_l+0x352>
 80120f6:	2a49      	cmp	r2, #73	@ 0x49
 80120f8:	d025      	beq.n	8012146 <_strtod_l+0x356>
 80120fa:	2a4e      	cmp	r2, #78	@ 0x4e
 80120fc:	f47f aecc 	bne.w	8011e98 <_strtod_l+0xa8>
 8012100:	499a      	ldr	r1, [pc, #616]	@ (801236c <_strtod_l+0x57c>)
 8012102:	a819      	add	r0, sp, #100	@ 0x64
 8012104:	f001 f964 	bl	80133d0 <__match>
 8012108:	2800      	cmp	r0, #0
 801210a:	f43f aec5 	beq.w	8011e98 <_strtod_l+0xa8>
 801210e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8012110:	781b      	ldrb	r3, [r3, #0]
 8012112:	2b28      	cmp	r3, #40	@ 0x28
 8012114:	d12e      	bne.n	8012174 <_strtod_l+0x384>
 8012116:	4996      	ldr	r1, [pc, #600]	@ (8012370 <_strtod_l+0x580>)
 8012118:	aa1c      	add	r2, sp, #112	@ 0x70
 801211a:	a819      	add	r0, sp, #100	@ 0x64
 801211c:	f001 f96c 	bl	80133f8 <__hexnan>
 8012120:	2805      	cmp	r0, #5
 8012122:	d127      	bne.n	8012174 <_strtod_l+0x384>
 8012124:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8012126:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 801212a:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 801212e:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8012132:	e696      	b.n	8011e62 <_strtod_l+0x72>
 8012134:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8012136:	fb08 2101 	mla	r1, r8, r1, r2
 801213a:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 801213e:	9209      	str	r2, [sp, #36]	@ 0x24
 8012140:	e7b5      	b.n	80120ae <_strtod_l+0x2be>
 8012142:	2a6e      	cmp	r2, #110	@ 0x6e
 8012144:	e7da      	b.n	80120fc <_strtod_l+0x30c>
 8012146:	498b      	ldr	r1, [pc, #556]	@ (8012374 <_strtod_l+0x584>)
 8012148:	a819      	add	r0, sp, #100	@ 0x64
 801214a:	f001 f941 	bl	80133d0 <__match>
 801214e:	2800      	cmp	r0, #0
 8012150:	f43f aea2 	beq.w	8011e98 <_strtod_l+0xa8>
 8012154:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8012156:	4988      	ldr	r1, [pc, #544]	@ (8012378 <_strtod_l+0x588>)
 8012158:	3b01      	subs	r3, #1
 801215a:	a819      	add	r0, sp, #100	@ 0x64
 801215c:	9319      	str	r3, [sp, #100]	@ 0x64
 801215e:	f001 f937 	bl	80133d0 <__match>
 8012162:	b910      	cbnz	r0, 801216a <_strtod_l+0x37a>
 8012164:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8012166:	3301      	adds	r3, #1
 8012168:	9319      	str	r3, [sp, #100]	@ 0x64
 801216a:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 8012388 <_strtod_l+0x598>
 801216e:	f04f 0a00 	mov.w	sl, #0
 8012172:	e676      	b.n	8011e62 <_strtod_l+0x72>
 8012174:	4881      	ldr	r0, [pc, #516]	@ (801237c <_strtod_l+0x58c>)
 8012176:	f000 fe67 	bl	8012e48 <nan>
 801217a:	ec5b ab10 	vmov	sl, fp, d0
 801217e:	e670      	b.n	8011e62 <_strtod_l+0x72>
 8012180:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012182:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8012184:	eba8 0303 	sub.w	r3, r8, r3
 8012188:	f1b9 0f00 	cmp.w	r9, #0
 801218c:	bf08      	it	eq
 801218e:	46a9      	moveq	r9, r5
 8012190:	2d10      	cmp	r5, #16
 8012192:	9309      	str	r3, [sp, #36]	@ 0x24
 8012194:	462c      	mov	r4, r5
 8012196:	bfa8      	it	ge
 8012198:	2410      	movge	r4, #16
 801219a:	f7ee f98b 	bl	80004b4 <__aeabi_ui2d>
 801219e:	2d09      	cmp	r5, #9
 80121a0:	4682      	mov	sl, r0
 80121a2:	468b      	mov	fp, r1
 80121a4:	dc13      	bgt.n	80121ce <_strtod_l+0x3de>
 80121a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	f43f ae5a 	beq.w	8011e62 <_strtod_l+0x72>
 80121ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80121b0:	dd78      	ble.n	80122a4 <_strtod_l+0x4b4>
 80121b2:	2b16      	cmp	r3, #22
 80121b4:	dc5f      	bgt.n	8012276 <_strtod_l+0x486>
 80121b6:	4972      	ldr	r1, [pc, #456]	@ (8012380 <_strtod_l+0x590>)
 80121b8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80121bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80121c0:	4652      	mov	r2, sl
 80121c2:	465b      	mov	r3, fp
 80121c4:	f7ee f9f0 	bl	80005a8 <__aeabi_dmul>
 80121c8:	4682      	mov	sl, r0
 80121ca:	468b      	mov	fp, r1
 80121cc:	e649      	b.n	8011e62 <_strtod_l+0x72>
 80121ce:	4b6c      	ldr	r3, [pc, #432]	@ (8012380 <_strtod_l+0x590>)
 80121d0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80121d4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 80121d8:	f7ee f9e6 	bl	80005a8 <__aeabi_dmul>
 80121dc:	4682      	mov	sl, r0
 80121de:	4638      	mov	r0, r7
 80121e0:	468b      	mov	fp, r1
 80121e2:	f7ee f967 	bl	80004b4 <__aeabi_ui2d>
 80121e6:	4602      	mov	r2, r0
 80121e8:	460b      	mov	r3, r1
 80121ea:	4650      	mov	r0, sl
 80121ec:	4659      	mov	r1, fp
 80121ee:	f7ee f825 	bl	800023c <__adddf3>
 80121f2:	2d0f      	cmp	r5, #15
 80121f4:	4682      	mov	sl, r0
 80121f6:	468b      	mov	fp, r1
 80121f8:	ddd5      	ble.n	80121a6 <_strtod_l+0x3b6>
 80121fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80121fc:	1b2c      	subs	r4, r5, r4
 80121fe:	441c      	add	r4, r3
 8012200:	2c00      	cmp	r4, #0
 8012202:	f340 8093 	ble.w	801232c <_strtod_l+0x53c>
 8012206:	f014 030f 	ands.w	r3, r4, #15
 801220a:	d00a      	beq.n	8012222 <_strtod_l+0x432>
 801220c:	495c      	ldr	r1, [pc, #368]	@ (8012380 <_strtod_l+0x590>)
 801220e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8012212:	4652      	mov	r2, sl
 8012214:	465b      	mov	r3, fp
 8012216:	e9d1 0100 	ldrd	r0, r1, [r1]
 801221a:	f7ee f9c5 	bl	80005a8 <__aeabi_dmul>
 801221e:	4682      	mov	sl, r0
 8012220:	468b      	mov	fp, r1
 8012222:	f034 040f 	bics.w	r4, r4, #15
 8012226:	d073      	beq.n	8012310 <_strtod_l+0x520>
 8012228:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 801222c:	dd49      	ble.n	80122c2 <_strtod_l+0x4d2>
 801222e:	2400      	movs	r4, #0
 8012230:	46a0      	mov	r8, r4
 8012232:	940b      	str	r4, [sp, #44]	@ 0x2c
 8012234:	46a1      	mov	r9, r4
 8012236:	9a05      	ldr	r2, [sp, #20]
 8012238:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8012388 <_strtod_l+0x598>
 801223c:	2322      	movs	r3, #34	@ 0x22
 801223e:	6013      	str	r3, [r2, #0]
 8012240:	f04f 0a00 	mov.w	sl, #0
 8012244:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012246:	2b00      	cmp	r3, #0
 8012248:	f43f ae0b 	beq.w	8011e62 <_strtod_l+0x72>
 801224c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801224e:	9805      	ldr	r0, [sp, #20]
 8012250:	f7ff f946 	bl	80114e0 <_Bfree>
 8012254:	9805      	ldr	r0, [sp, #20]
 8012256:	4649      	mov	r1, r9
 8012258:	f7ff f942 	bl	80114e0 <_Bfree>
 801225c:	9805      	ldr	r0, [sp, #20]
 801225e:	4641      	mov	r1, r8
 8012260:	f7ff f93e 	bl	80114e0 <_Bfree>
 8012264:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012266:	9805      	ldr	r0, [sp, #20]
 8012268:	f7ff f93a 	bl	80114e0 <_Bfree>
 801226c:	9805      	ldr	r0, [sp, #20]
 801226e:	4621      	mov	r1, r4
 8012270:	f7ff f936 	bl	80114e0 <_Bfree>
 8012274:	e5f5      	b.n	8011e62 <_strtod_l+0x72>
 8012276:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012278:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 801227c:	4293      	cmp	r3, r2
 801227e:	dbbc      	blt.n	80121fa <_strtod_l+0x40a>
 8012280:	4c3f      	ldr	r4, [pc, #252]	@ (8012380 <_strtod_l+0x590>)
 8012282:	f1c5 050f 	rsb	r5, r5, #15
 8012286:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 801228a:	4652      	mov	r2, sl
 801228c:	465b      	mov	r3, fp
 801228e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012292:	f7ee f989 	bl	80005a8 <__aeabi_dmul>
 8012296:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012298:	1b5d      	subs	r5, r3, r5
 801229a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 801229e:	e9d4 2300 	ldrd	r2, r3, [r4]
 80122a2:	e78f      	b.n	80121c4 <_strtod_l+0x3d4>
 80122a4:	3316      	adds	r3, #22
 80122a6:	dba8      	blt.n	80121fa <_strtod_l+0x40a>
 80122a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80122aa:	eba3 0808 	sub.w	r8, r3, r8
 80122ae:	4b34      	ldr	r3, [pc, #208]	@ (8012380 <_strtod_l+0x590>)
 80122b0:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 80122b4:	e9d8 2300 	ldrd	r2, r3, [r8]
 80122b8:	4650      	mov	r0, sl
 80122ba:	4659      	mov	r1, fp
 80122bc:	f7ee fa9e 	bl	80007fc <__aeabi_ddiv>
 80122c0:	e782      	b.n	80121c8 <_strtod_l+0x3d8>
 80122c2:	2300      	movs	r3, #0
 80122c4:	4f2f      	ldr	r7, [pc, #188]	@ (8012384 <_strtod_l+0x594>)
 80122c6:	1124      	asrs	r4, r4, #4
 80122c8:	4650      	mov	r0, sl
 80122ca:	4659      	mov	r1, fp
 80122cc:	461e      	mov	r6, r3
 80122ce:	2c01      	cmp	r4, #1
 80122d0:	dc21      	bgt.n	8012316 <_strtod_l+0x526>
 80122d2:	b10b      	cbz	r3, 80122d8 <_strtod_l+0x4e8>
 80122d4:	4682      	mov	sl, r0
 80122d6:	468b      	mov	fp, r1
 80122d8:	492a      	ldr	r1, [pc, #168]	@ (8012384 <_strtod_l+0x594>)
 80122da:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 80122de:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 80122e2:	4652      	mov	r2, sl
 80122e4:	465b      	mov	r3, fp
 80122e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80122ea:	f7ee f95d 	bl	80005a8 <__aeabi_dmul>
 80122ee:	4b26      	ldr	r3, [pc, #152]	@ (8012388 <_strtod_l+0x598>)
 80122f0:	460a      	mov	r2, r1
 80122f2:	400b      	ands	r3, r1
 80122f4:	4925      	ldr	r1, [pc, #148]	@ (801238c <_strtod_l+0x59c>)
 80122f6:	428b      	cmp	r3, r1
 80122f8:	4682      	mov	sl, r0
 80122fa:	d898      	bhi.n	801222e <_strtod_l+0x43e>
 80122fc:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8012300:	428b      	cmp	r3, r1
 8012302:	bf86      	itte	hi
 8012304:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8012390 <_strtod_l+0x5a0>
 8012308:	f04f 3aff 	movhi.w	sl, #4294967295
 801230c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8012310:	2300      	movs	r3, #0
 8012312:	9308      	str	r3, [sp, #32]
 8012314:	e076      	b.n	8012404 <_strtod_l+0x614>
 8012316:	07e2      	lsls	r2, r4, #31
 8012318:	d504      	bpl.n	8012324 <_strtod_l+0x534>
 801231a:	e9d7 2300 	ldrd	r2, r3, [r7]
 801231e:	f7ee f943 	bl	80005a8 <__aeabi_dmul>
 8012322:	2301      	movs	r3, #1
 8012324:	3601      	adds	r6, #1
 8012326:	1064      	asrs	r4, r4, #1
 8012328:	3708      	adds	r7, #8
 801232a:	e7d0      	b.n	80122ce <_strtod_l+0x4de>
 801232c:	d0f0      	beq.n	8012310 <_strtod_l+0x520>
 801232e:	4264      	negs	r4, r4
 8012330:	f014 020f 	ands.w	r2, r4, #15
 8012334:	d00a      	beq.n	801234c <_strtod_l+0x55c>
 8012336:	4b12      	ldr	r3, [pc, #72]	@ (8012380 <_strtod_l+0x590>)
 8012338:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801233c:	4650      	mov	r0, sl
 801233e:	4659      	mov	r1, fp
 8012340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012344:	f7ee fa5a 	bl	80007fc <__aeabi_ddiv>
 8012348:	4682      	mov	sl, r0
 801234a:	468b      	mov	fp, r1
 801234c:	1124      	asrs	r4, r4, #4
 801234e:	d0df      	beq.n	8012310 <_strtod_l+0x520>
 8012350:	2c1f      	cmp	r4, #31
 8012352:	dd1f      	ble.n	8012394 <_strtod_l+0x5a4>
 8012354:	2400      	movs	r4, #0
 8012356:	46a0      	mov	r8, r4
 8012358:	940b      	str	r4, [sp, #44]	@ 0x2c
 801235a:	46a1      	mov	r9, r4
 801235c:	9a05      	ldr	r2, [sp, #20]
 801235e:	2322      	movs	r3, #34	@ 0x22
 8012360:	f04f 0a00 	mov.w	sl, #0
 8012364:	f04f 0b00 	mov.w	fp, #0
 8012368:	6013      	str	r3, [r2, #0]
 801236a:	e76b      	b.n	8012244 <_strtod_l+0x454>
 801236c:	08018516 	.word	0x08018516
 8012370:	080187e0 	.word	0x080187e0
 8012374:	0801850e 	.word	0x0801850e
 8012378:	08018545 	.word	0x08018545
 801237c:	0801867e 	.word	0x0801867e
 8012380:	08018718 	.word	0x08018718
 8012384:	080186f0 	.word	0x080186f0
 8012388:	7ff00000 	.word	0x7ff00000
 801238c:	7ca00000 	.word	0x7ca00000
 8012390:	7fefffff 	.word	0x7fefffff
 8012394:	f014 0310 	ands.w	r3, r4, #16
 8012398:	bf18      	it	ne
 801239a:	236a      	movne	r3, #106	@ 0x6a
 801239c:	4ea9      	ldr	r6, [pc, #676]	@ (8012644 <_strtod_l+0x854>)
 801239e:	9308      	str	r3, [sp, #32]
 80123a0:	4650      	mov	r0, sl
 80123a2:	4659      	mov	r1, fp
 80123a4:	2300      	movs	r3, #0
 80123a6:	07e7      	lsls	r7, r4, #31
 80123a8:	d504      	bpl.n	80123b4 <_strtod_l+0x5c4>
 80123aa:	e9d6 2300 	ldrd	r2, r3, [r6]
 80123ae:	f7ee f8fb 	bl	80005a8 <__aeabi_dmul>
 80123b2:	2301      	movs	r3, #1
 80123b4:	1064      	asrs	r4, r4, #1
 80123b6:	f106 0608 	add.w	r6, r6, #8
 80123ba:	d1f4      	bne.n	80123a6 <_strtod_l+0x5b6>
 80123bc:	b10b      	cbz	r3, 80123c2 <_strtod_l+0x5d2>
 80123be:	4682      	mov	sl, r0
 80123c0:	468b      	mov	fp, r1
 80123c2:	9b08      	ldr	r3, [sp, #32]
 80123c4:	b1b3      	cbz	r3, 80123f4 <_strtod_l+0x604>
 80123c6:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80123ca:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80123ce:	2b00      	cmp	r3, #0
 80123d0:	4659      	mov	r1, fp
 80123d2:	dd0f      	ble.n	80123f4 <_strtod_l+0x604>
 80123d4:	2b1f      	cmp	r3, #31
 80123d6:	dd56      	ble.n	8012486 <_strtod_l+0x696>
 80123d8:	2b34      	cmp	r3, #52	@ 0x34
 80123da:	bfde      	ittt	le
 80123dc:	f04f 33ff 	movle.w	r3, #4294967295
 80123e0:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 80123e4:	4093      	lslle	r3, r2
 80123e6:	f04f 0a00 	mov.w	sl, #0
 80123ea:	bfcc      	ite	gt
 80123ec:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 80123f0:	ea03 0b01 	andle.w	fp, r3, r1
 80123f4:	2200      	movs	r2, #0
 80123f6:	2300      	movs	r3, #0
 80123f8:	4650      	mov	r0, sl
 80123fa:	4659      	mov	r1, fp
 80123fc:	f7ee fb3c 	bl	8000a78 <__aeabi_dcmpeq>
 8012400:	2800      	cmp	r0, #0
 8012402:	d1a7      	bne.n	8012354 <_strtod_l+0x564>
 8012404:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012406:	9300      	str	r3, [sp, #0]
 8012408:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801240a:	9805      	ldr	r0, [sp, #20]
 801240c:	462b      	mov	r3, r5
 801240e:	464a      	mov	r2, r9
 8012410:	f7ff f8ce 	bl	80115b0 <__s2b>
 8012414:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012416:	2800      	cmp	r0, #0
 8012418:	f43f af09 	beq.w	801222e <_strtod_l+0x43e>
 801241c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801241e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012420:	2a00      	cmp	r2, #0
 8012422:	eba3 0308 	sub.w	r3, r3, r8
 8012426:	bfa8      	it	ge
 8012428:	2300      	movge	r3, #0
 801242a:	9312      	str	r3, [sp, #72]	@ 0x48
 801242c:	2400      	movs	r4, #0
 801242e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8012432:	9316      	str	r3, [sp, #88]	@ 0x58
 8012434:	46a0      	mov	r8, r4
 8012436:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012438:	9805      	ldr	r0, [sp, #20]
 801243a:	6859      	ldr	r1, [r3, #4]
 801243c:	f7ff f810 	bl	8011460 <_Balloc>
 8012440:	4681      	mov	r9, r0
 8012442:	2800      	cmp	r0, #0
 8012444:	f43f aef7 	beq.w	8012236 <_strtod_l+0x446>
 8012448:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801244a:	691a      	ldr	r2, [r3, #16]
 801244c:	3202      	adds	r2, #2
 801244e:	f103 010c 	add.w	r1, r3, #12
 8012452:	0092      	lsls	r2, r2, #2
 8012454:	300c      	adds	r0, #12
 8012456:	f7fe f896 	bl	8010586 <memcpy>
 801245a:	ec4b ab10 	vmov	d0, sl, fp
 801245e:	9805      	ldr	r0, [sp, #20]
 8012460:	aa1c      	add	r2, sp, #112	@ 0x70
 8012462:	a91b      	add	r1, sp, #108	@ 0x6c
 8012464:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8012468:	f7ff fbd6 	bl	8011c18 <__d2b>
 801246c:	901a      	str	r0, [sp, #104]	@ 0x68
 801246e:	2800      	cmp	r0, #0
 8012470:	f43f aee1 	beq.w	8012236 <_strtod_l+0x446>
 8012474:	9805      	ldr	r0, [sp, #20]
 8012476:	2101      	movs	r1, #1
 8012478:	f7ff f930 	bl	80116dc <__i2b>
 801247c:	4680      	mov	r8, r0
 801247e:	b948      	cbnz	r0, 8012494 <_strtod_l+0x6a4>
 8012480:	f04f 0800 	mov.w	r8, #0
 8012484:	e6d7      	b.n	8012236 <_strtod_l+0x446>
 8012486:	f04f 32ff 	mov.w	r2, #4294967295
 801248a:	fa02 f303 	lsl.w	r3, r2, r3
 801248e:	ea03 0a0a 	and.w	sl, r3, sl
 8012492:	e7af      	b.n	80123f4 <_strtod_l+0x604>
 8012494:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8012496:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8012498:	2d00      	cmp	r5, #0
 801249a:	bfab      	itete	ge
 801249c:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 801249e:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80124a0:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80124a2:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80124a4:	bfac      	ite	ge
 80124a6:	18ef      	addge	r7, r5, r3
 80124a8:	1b5e      	sublt	r6, r3, r5
 80124aa:	9b08      	ldr	r3, [sp, #32]
 80124ac:	1aed      	subs	r5, r5, r3
 80124ae:	4415      	add	r5, r2
 80124b0:	4b65      	ldr	r3, [pc, #404]	@ (8012648 <_strtod_l+0x858>)
 80124b2:	3d01      	subs	r5, #1
 80124b4:	429d      	cmp	r5, r3
 80124b6:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80124ba:	da50      	bge.n	801255e <_strtod_l+0x76e>
 80124bc:	1b5b      	subs	r3, r3, r5
 80124be:	2b1f      	cmp	r3, #31
 80124c0:	eba2 0203 	sub.w	r2, r2, r3
 80124c4:	f04f 0101 	mov.w	r1, #1
 80124c8:	dc3d      	bgt.n	8012546 <_strtod_l+0x756>
 80124ca:	fa01 f303 	lsl.w	r3, r1, r3
 80124ce:	9313      	str	r3, [sp, #76]	@ 0x4c
 80124d0:	2300      	movs	r3, #0
 80124d2:	9310      	str	r3, [sp, #64]	@ 0x40
 80124d4:	18bd      	adds	r5, r7, r2
 80124d6:	9b08      	ldr	r3, [sp, #32]
 80124d8:	42af      	cmp	r7, r5
 80124da:	4416      	add	r6, r2
 80124dc:	441e      	add	r6, r3
 80124de:	463b      	mov	r3, r7
 80124e0:	bfa8      	it	ge
 80124e2:	462b      	movge	r3, r5
 80124e4:	42b3      	cmp	r3, r6
 80124e6:	bfa8      	it	ge
 80124e8:	4633      	movge	r3, r6
 80124ea:	2b00      	cmp	r3, #0
 80124ec:	bfc2      	ittt	gt
 80124ee:	1aed      	subgt	r5, r5, r3
 80124f0:	1af6      	subgt	r6, r6, r3
 80124f2:	1aff      	subgt	r7, r7, r3
 80124f4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80124f6:	2b00      	cmp	r3, #0
 80124f8:	dd16      	ble.n	8012528 <_strtod_l+0x738>
 80124fa:	4641      	mov	r1, r8
 80124fc:	9805      	ldr	r0, [sp, #20]
 80124fe:	461a      	mov	r2, r3
 8012500:	f7ff f9a4 	bl	801184c <__pow5mult>
 8012504:	4680      	mov	r8, r0
 8012506:	2800      	cmp	r0, #0
 8012508:	d0ba      	beq.n	8012480 <_strtod_l+0x690>
 801250a:	4601      	mov	r1, r0
 801250c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 801250e:	9805      	ldr	r0, [sp, #20]
 8012510:	f7ff f8fa 	bl	8011708 <__multiply>
 8012514:	900a      	str	r0, [sp, #40]	@ 0x28
 8012516:	2800      	cmp	r0, #0
 8012518:	f43f ae8d 	beq.w	8012236 <_strtod_l+0x446>
 801251c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801251e:	9805      	ldr	r0, [sp, #20]
 8012520:	f7fe ffde 	bl	80114e0 <_Bfree>
 8012524:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012526:	931a      	str	r3, [sp, #104]	@ 0x68
 8012528:	2d00      	cmp	r5, #0
 801252a:	dc1d      	bgt.n	8012568 <_strtod_l+0x778>
 801252c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801252e:	2b00      	cmp	r3, #0
 8012530:	dd23      	ble.n	801257a <_strtod_l+0x78a>
 8012532:	4649      	mov	r1, r9
 8012534:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8012536:	9805      	ldr	r0, [sp, #20]
 8012538:	f7ff f988 	bl	801184c <__pow5mult>
 801253c:	4681      	mov	r9, r0
 801253e:	b9e0      	cbnz	r0, 801257a <_strtod_l+0x78a>
 8012540:	f04f 0900 	mov.w	r9, #0
 8012544:	e677      	b.n	8012236 <_strtod_l+0x446>
 8012546:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 801254a:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 801254e:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8012552:	35e2      	adds	r5, #226	@ 0xe2
 8012554:	fa01 f305 	lsl.w	r3, r1, r5
 8012558:	9310      	str	r3, [sp, #64]	@ 0x40
 801255a:	9113      	str	r1, [sp, #76]	@ 0x4c
 801255c:	e7ba      	b.n	80124d4 <_strtod_l+0x6e4>
 801255e:	2300      	movs	r3, #0
 8012560:	9310      	str	r3, [sp, #64]	@ 0x40
 8012562:	2301      	movs	r3, #1
 8012564:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012566:	e7b5      	b.n	80124d4 <_strtod_l+0x6e4>
 8012568:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801256a:	9805      	ldr	r0, [sp, #20]
 801256c:	462a      	mov	r2, r5
 801256e:	f7ff f9c7 	bl	8011900 <__lshift>
 8012572:	901a      	str	r0, [sp, #104]	@ 0x68
 8012574:	2800      	cmp	r0, #0
 8012576:	d1d9      	bne.n	801252c <_strtod_l+0x73c>
 8012578:	e65d      	b.n	8012236 <_strtod_l+0x446>
 801257a:	2e00      	cmp	r6, #0
 801257c:	dd07      	ble.n	801258e <_strtod_l+0x79e>
 801257e:	4649      	mov	r1, r9
 8012580:	9805      	ldr	r0, [sp, #20]
 8012582:	4632      	mov	r2, r6
 8012584:	f7ff f9bc 	bl	8011900 <__lshift>
 8012588:	4681      	mov	r9, r0
 801258a:	2800      	cmp	r0, #0
 801258c:	d0d8      	beq.n	8012540 <_strtod_l+0x750>
 801258e:	2f00      	cmp	r7, #0
 8012590:	dd08      	ble.n	80125a4 <_strtod_l+0x7b4>
 8012592:	4641      	mov	r1, r8
 8012594:	9805      	ldr	r0, [sp, #20]
 8012596:	463a      	mov	r2, r7
 8012598:	f7ff f9b2 	bl	8011900 <__lshift>
 801259c:	4680      	mov	r8, r0
 801259e:	2800      	cmp	r0, #0
 80125a0:	f43f ae49 	beq.w	8012236 <_strtod_l+0x446>
 80125a4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80125a6:	9805      	ldr	r0, [sp, #20]
 80125a8:	464a      	mov	r2, r9
 80125aa:	f7ff fa31 	bl	8011a10 <__mdiff>
 80125ae:	4604      	mov	r4, r0
 80125b0:	2800      	cmp	r0, #0
 80125b2:	f43f ae40 	beq.w	8012236 <_strtod_l+0x446>
 80125b6:	68c3      	ldr	r3, [r0, #12]
 80125b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80125ba:	2300      	movs	r3, #0
 80125bc:	60c3      	str	r3, [r0, #12]
 80125be:	4641      	mov	r1, r8
 80125c0:	f7ff fa0a 	bl	80119d8 <__mcmp>
 80125c4:	2800      	cmp	r0, #0
 80125c6:	da45      	bge.n	8012654 <_strtod_l+0x864>
 80125c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80125ca:	ea53 030a 	orrs.w	r3, r3, sl
 80125ce:	d16b      	bne.n	80126a8 <_strtod_l+0x8b8>
 80125d0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80125d4:	2b00      	cmp	r3, #0
 80125d6:	d167      	bne.n	80126a8 <_strtod_l+0x8b8>
 80125d8:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80125dc:	0d1b      	lsrs	r3, r3, #20
 80125de:	051b      	lsls	r3, r3, #20
 80125e0:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80125e4:	d960      	bls.n	80126a8 <_strtod_l+0x8b8>
 80125e6:	6963      	ldr	r3, [r4, #20]
 80125e8:	b913      	cbnz	r3, 80125f0 <_strtod_l+0x800>
 80125ea:	6923      	ldr	r3, [r4, #16]
 80125ec:	2b01      	cmp	r3, #1
 80125ee:	dd5b      	ble.n	80126a8 <_strtod_l+0x8b8>
 80125f0:	4621      	mov	r1, r4
 80125f2:	2201      	movs	r2, #1
 80125f4:	9805      	ldr	r0, [sp, #20]
 80125f6:	f7ff f983 	bl	8011900 <__lshift>
 80125fa:	4641      	mov	r1, r8
 80125fc:	4604      	mov	r4, r0
 80125fe:	f7ff f9eb 	bl	80119d8 <__mcmp>
 8012602:	2800      	cmp	r0, #0
 8012604:	dd50      	ble.n	80126a8 <_strtod_l+0x8b8>
 8012606:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 801260a:	9a08      	ldr	r2, [sp, #32]
 801260c:	0d1b      	lsrs	r3, r3, #20
 801260e:	051b      	lsls	r3, r3, #20
 8012610:	2a00      	cmp	r2, #0
 8012612:	d06a      	beq.n	80126ea <_strtod_l+0x8fa>
 8012614:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8012618:	d867      	bhi.n	80126ea <_strtod_l+0x8fa>
 801261a:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 801261e:	f67f ae9d 	bls.w	801235c <_strtod_l+0x56c>
 8012622:	4b0a      	ldr	r3, [pc, #40]	@ (801264c <_strtod_l+0x85c>)
 8012624:	4650      	mov	r0, sl
 8012626:	4659      	mov	r1, fp
 8012628:	2200      	movs	r2, #0
 801262a:	f7ed ffbd 	bl	80005a8 <__aeabi_dmul>
 801262e:	4b08      	ldr	r3, [pc, #32]	@ (8012650 <_strtod_l+0x860>)
 8012630:	400b      	ands	r3, r1
 8012632:	4682      	mov	sl, r0
 8012634:	468b      	mov	fp, r1
 8012636:	2b00      	cmp	r3, #0
 8012638:	f47f ae08 	bne.w	801224c <_strtod_l+0x45c>
 801263c:	9a05      	ldr	r2, [sp, #20]
 801263e:	2322      	movs	r3, #34	@ 0x22
 8012640:	6013      	str	r3, [r2, #0]
 8012642:	e603      	b.n	801224c <_strtod_l+0x45c>
 8012644:	08018808 	.word	0x08018808
 8012648:	fffffc02 	.word	0xfffffc02
 801264c:	39500000 	.word	0x39500000
 8012650:	7ff00000 	.word	0x7ff00000
 8012654:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8012658:	d165      	bne.n	8012726 <_strtod_l+0x936>
 801265a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801265c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8012660:	b35a      	cbz	r2, 80126ba <_strtod_l+0x8ca>
 8012662:	4a9f      	ldr	r2, [pc, #636]	@ (80128e0 <_strtod_l+0xaf0>)
 8012664:	4293      	cmp	r3, r2
 8012666:	d12b      	bne.n	80126c0 <_strtod_l+0x8d0>
 8012668:	9b08      	ldr	r3, [sp, #32]
 801266a:	4651      	mov	r1, sl
 801266c:	b303      	cbz	r3, 80126b0 <_strtod_l+0x8c0>
 801266e:	4b9d      	ldr	r3, [pc, #628]	@ (80128e4 <_strtod_l+0xaf4>)
 8012670:	465a      	mov	r2, fp
 8012672:	4013      	ands	r3, r2
 8012674:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8012678:	f04f 32ff 	mov.w	r2, #4294967295
 801267c:	d81b      	bhi.n	80126b6 <_strtod_l+0x8c6>
 801267e:	0d1b      	lsrs	r3, r3, #20
 8012680:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8012684:	fa02 f303 	lsl.w	r3, r2, r3
 8012688:	4299      	cmp	r1, r3
 801268a:	d119      	bne.n	80126c0 <_strtod_l+0x8d0>
 801268c:	4b96      	ldr	r3, [pc, #600]	@ (80128e8 <_strtod_l+0xaf8>)
 801268e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012690:	429a      	cmp	r2, r3
 8012692:	d102      	bne.n	801269a <_strtod_l+0x8aa>
 8012694:	3101      	adds	r1, #1
 8012696:	f43f adce 	beq.w	8012236 <_strtod_l+0x446>
 801269a:	4b92      	ldr	r3, [pc, #584]	@ (80128e4 <_strtod_l+0xaf4>)
 801269c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801269e:	401a      	ands	r2, r3
 80126a0:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80126a4:	f04f 0a00 	mov.w	sl, #0
 80126a8:	9b08      	ldr	r3, [sp, #32]
 80126aa:	2b00      	cmp	r3, #0
 80126ac:	d1b9      	bne.n	8012622 <_strtod_l+0x832>
 80126ae:	e5cd      	b.n	801224c <_strtod_l+0x45c>
 80126b0:	f04f 33ff 	mov.w	r3, #4294967295
 80126b4:	e7e8      	b.n	8012688 <_strtod_l+0x898>
 80126b6:	4613      	mov	r3, r2
 80126b8:	e7e6      	b.n	8012688 <_strtod_l+0x898>
 80126ba:	ea53 030a 	orrs.w	r3, r3, sl
 80126be:	d0a2      	beq.n	8012606 <_strtod_l+0x816>
 80126c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80126c2:	b1db      	cbz	r3, 80126fc <_strtod_l+0x90c>
 80126c4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80126c6:	4213      	tst	r3, r2
 80126c8:	d0ee      	beq.n	80126a8 <_strtod_l+0x8b8>
 80126ca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80126cc:	9a08      	ldr	r2, [sp, #32]
 80126ce:	4650      	mov	r0, sl
 80126d0:	4659      	mov	r1, fp
 80126d2:	b1bb      	cbz	r3, 8012704 <_strtod_l+0x914>
 80126d4:	f7ff fb6e 	bl	8011db4 <sulp>
 80126d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80126dc:	ec53 2b10 	vmov	r2, r3, d0
 80126e0:	f7ed fdac 	bl	800023c <__adddf3>
 80126e4:	4682      	mov	sl, r0
 80126e6:	468b      	mov	fp, r1
 80126e8:	e7de      	b.n	80126a8 <_strtod_l+0x8b8>
 80126ea:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80126ee:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80126f2:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80126f6:	f04f 3aff 	mov.w	sl, #4294967295
 80126fa:	e7d5      	b.n	80126a8 <_strtod_l+0x8b8>
 80126fc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80126fe:	ea13 0f0a 	tst.w	r3, sl
 8012702:	e7e1      	b.n	80126c8 <_strtod_l+0x8d8>
 8012704:	f7ff fb56 	bl	8011db4 <sulp>
 8012708:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801270c:	ec53 2b10 	vmov	r2, r3, d0
 8012710:	f7ed fd92 	bl	8000238 <__aeabi_dsub>
 8012714:	2200      	movs	r2, #0
 8012716:	2300      	movs	r3, #0
 8012718:	4682      	mov	sl, r0
 801271a:	468b      	mov	fp, r1
 801271c:	f7ee f9ac 	bl	8000a78 <__aeabi_dcmpeq>
 8012720:	2800      	cmp	r0, #0
 8012722:	d0c1      	beq.n	80126a8 <_strtod_l+0x8b8>
 8012724:	e61a      	b.n	801235c <_strtod_l+0x56c>
 8012726:	4641      	mov	r1, r8
 8012728:	4620      	mov	r0, r4
 801272a:	f7ff facd 	bl	8011cc8 <__ratio>
 801272e:	ec57 6b10 	vmov	r6, r7, d0
 8012732:	2200      	movs	r2, #0
 8012734:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8012738:	4630      	mov	r0, r6
 801273a:	4639      	mov	r1, r7
 801273c:	f7ee f9b0 	bl	8000aa0 <__aeabi_dcmple>
 8012740:	2800      	cmp	r0, #0
 8012742:	d06f      	beq.n	8012824 <_strtod_l+0xa34>
 8012744:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012746:	2b00      	cmp	r3, #0
 8012748:	d17a      	bne.n	8012840 <_strtod_l+0xa50>
 801274a:	f1ba 0f00 	cmp.w	sl, #0
 801274e:	d158      	bne.n	8012802 <_strtod_l+0xa12>
 8012750:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012752:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8012756:	2b00      	cmp	r3, #0
 8012758:	d15a      	bne.n	8012810 <_strtod_l+0xa20>
 801275a:	4b64      	ldr	r3, [pc, #400]	@ (80128ec <_strtod_l+0xafc>)
 801275c:	2200      	movs	r2, #0
 801275e:	4630      	mov	r0, r6
 8012760:	4639      	mov	r1, r7
 8012762:	f7ee f993 	bl	8000a8c <__aeabi_dcmplt>
 8012766:	2800      	cmp	r0, #0
 8012768:	d159      	bne.n	801281e <_strtod_l+0xa2e>
 801276a:	4630      	mov	r0, r6
 801276c:	4639      	mov	r1, r7
 801276e:	4b60      	ldr	r3, [pc, #384]	@ (80128f0 <_strtod_l+0xb00>)
 8012770:	2200      	movs	r2, #0
 8012772:	f7ed ff19 	bl	80005a8 <__aeabi_dmul>
 8012776:	4606      	mov	r6, r0
 8012778:	460f      	mov	r7, r1
 801277a:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 801277e:	9606      	str	r6, [sp, #24]
 8012780:	9307      	str	r3, [sp, #28]
 8012782:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012786:	4d57      	ldr	r5, [pc, #348]	@ (80128e4 <_strtod_l+0xaf4>)
 8012788:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 801278c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801278e:	401d      	ands	r5, r3
 8012790:	4b58      	ldr	r3, [pc, #352]	@ (80128f4 <_strtod_l+0xb04>)
 8012792:	429d      	cmp	r5, r3
 8012794:	f040 80b2 	bne.w	80128fc <_strtod_l+0xb0c>
 8012798:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801279a:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 801279e:	ec4b ab10 	vmov	d0, sl, fp
 80127a2:	f7ff f9c9 	bl	8011b38 <__ulp>
 80127a6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80127aa:	ec51 0b10 	vmov	r0, r1, d0
 80127ae:	f7ed fefb 	bl	80005a8 <__aeabi_dmul>
 80127b2:	4652      	mov	r2, sl
 80127b4:	465b      	mov	r3, fp
 80127b6:	f7ed fd41 	bl	800023c <__adddf3>
 80127ba:	460b      	mov	r3, r1
 80127bc:	4949      	ldr	r1, [pc, #292]	@ (80128e4 <_strtod_l+0xaf4>)
 80127be:	4a4e      	ldr	r2, [pc, #312]	@ (80128f8 <_strtod_l+0xb08>)
 80127c0:	4019      	ands	r1, r3
 80127c2:	4291      	cmp	r1, r2
 80127c4:	4682      	mov	sl, r0
 80127c6:	d942      	bls.n	801284e <_strtod_l+0xa5e>
 80127c8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80127ca:	4b47      	ldr	r3, [pc, #284]	@ (80128e8 <_strtod_l+0xaf8>)
 80127cc:	429a      	cmp	r2, r3
 80127ce:	d103      	bne.n	80127d8 <_strtod_l+0x9e8>
 80127d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80127d2:	3301      	adds	r3, #1
 80127d4:	f43f ad2f 	beq.w	8012236 <_strtod_l+0x446>
 80127d8:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 80128e8 <_strtod_l+0xaf8>
 80127dc:	f04f 3aff 	mov.w	sl, #4294967295
 80127e0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80127e2:	9805      	ldr	r0, [sp, #20]
 80127e4:	f7fe fe7c 	bl	80114e0 <_Bfree>
 80127e8:	9805      	ldr	r0, [sp, #20]
 80127ea:	4649      	mov	r1, r9
 80127ec:	f7fe fe78 	bl	80114e0 <_Bfree>
 80127f0:	9805      	ldr	r0, [sp, #20]
 80127f2:	4641      	mov	r1, r8
 80127f4:	f7fe fe74 	bl	80114e0 <_Bfree>
 80127f8:	9805      	ldr	r0, [sp, #20]
 80127fa:	4621      	mov	r1, r4
 80127fc:	f7fe fe70 	bl	80114e0 <_Bfree>
 8012800:	e619      	b.n	8012436 <_strtod_l+0x646>
 8012802:	f1ba 0f01 	cmp.w	sl, #1
 8012806:	d103      	bne.n	8012810 <_strtod_l+0xa20>
 8012808:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801280a:	2b00      	cmp	r3, #0
 801280c:	f43f ada6 	beq.w	801235c <_strtod_l+0x56c>
 8012810:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 80128c0 <_strtod_l+0xad0>
 8012814:	4f35      	ldr	r7, [pc, #212]	@ (80128ec <_strtod_l+0xafc>)
 8012816:	ed8d 7b06 	vstr	d7, [sp, #24]
 801281a:	2600      	movs	r6, #0
 801281c:	e7b1      	b.n	8012782 <_strtod_l+0x992>
 801281e:	4f34      	ldr	r7, [pc, #208]	@ (80128f0 <_strtod_l+0xb00>)
 8012820:	2600      	movs	r6, #0
 8012822:	e7aa      	b.n	801277a <_strtod_l+0x98a>
 8012824:	4b32      	ldr	r3, [pc, #200]	@ (80128f0 <_strtod_l+0xb00>)
 8012826:	4630      	mov	r0, r6
 8012828:	4639      	mov	r1, r7
 801282a:	2200      	movs	r2, #0
 801282c:	f7ed febc 	bl	80005a8 <__aeabi_dmul>
 8012830:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012832:	4606      	mov	r6, r0
 8012834:	460f      	mov	r7, r1
 8012836:	2b00      	cmp	r3, #0
 8012838:	d09f      	beq.n	801277a <_strtod_l+0x98a>
 801283a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 801283e:	e7a0      	b.n	8012782 <_strtod_l+0x992>
 8012840:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 80128c8 <_strtod_l+0xad8>
 8012844:	ed8d 7b06 	vstr	d7, [sp, #24]
 8012848:	ec57 6b17 	vmov	r6, r7, d7
 801284c:	e799      	b.n	8012782 <_strtod_l+0x992>
 801284e:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8012852:	9b08      	ldr	r3, [sp, #32]
 8012854:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8012858:	2b00      	cmp	r3, #0
 801285a:	d1c1      	bne.n	80127e0 <_strtod_l+0x9f0>
 801285c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8012860:	0d1b      	lsrs	r3, r3, #20
 8012862:	051b      	lsls	r3, r3, #20
 8012864:	429d      	cmp	r5, r3
 8012866:	d1bb      	bne.n	80127e0 <_strtod_l+0x9f0>
 8012868:	4630      	mov	r0, r6
 801286a:	4639      	mov	r1, r7
 801286c:	f7ee f9fc 	bl	8000c68 <__aeabi_d2lz>
 8012870:	f7ed fe6c 	bl	800054c <__aeabi_l2d>
 8012874:	4602      	mov	r2, r0
 8012876:	460b      	mov	r3, r1
 8012878:	4630      	mov	r0, r6
 801287a:	4639      	mov	r1, r7
 801287c:	f7ed fcdc 	bl	8000238 <__aeabi_dsub>
 8012880:	460b      	mov	r3, r1
 8012882:	4602      	mov	r2, r0
 8012884:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8012888:	f3cb 0613 	ubfx	r6, fp, #0, #20
 801288c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801288e:	ea46 060a 	orr.w	r6, r6, sl
 8012892:	431e      	orrs	r6, r3
 8012894:	d06f      	beq.n	8012976 <_strtod_l+0xb86>
 8012896:	a30e      	add	r3, pc, #56	@ (adr r3, 80128d0 <_strtod_l+0xae0>)
 8012898:	e9d3 2300 	ldrd	r2, r3, [r3]
 801289c:	f7ee f8f6 	bl	8000a8c <__aeabi_dcmplt>
 80128a0:	2800      	cmp	r0, #0
 80128a2:	f47f acd3 	bne.w	801224c <_strtod_l+0x45c>
 80128a6:	a30c      	add	r3, pc, #48	@ (adr r3, 80128d8 <_strtod_l+0xae8>)
 80128a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80128ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80128b0:	f7ee f90a 	bl	8000ac8 <__aeabi_dcmpgt>
 80128b4:	2800      	cmp	r0, #0
 80128b6:	d093      	beq.n	80127e0 <_strtod_l+0x9f0>
 80128b8:	e4c8      	b.n	801224c <_strtod_l+0x45c>
 80128ba:	bf00      	nop
 80128bc:	f3af 8000 	nop.w
 80128c0:	00000000 	.word	0x00000000
 80128c4:	bff00000 	.word	0xbff00000
 80128c8:	00000000 	.word	0x00000000
 80128cc:	3ff00000 	.word	0x3ff00000
 80128d0:	94a03595 	.word	0x94a03595
 80128d4:	3fdfffff 	.word	0x3fdfffff
 80128d8:	35afe535 	.word	0x35afe535
 80128dc:	3fe00000 	.word	0x3fe00000
 80128e0:	000fffff 	.word	0x000fffff
 80128e4:	7ff00000 	.word	0x7ff00000
 80128e8:	7fefffff 	.word	0x7fefffff
 80128ec:	3ff00000 	.word	0x3ff00000
 80128f0:	3fe00000 	.word	0x3fe00000
 80128f4:	7fe00000 	.word	0x7fe00000
 80128f8:	7c9fffff 	.word	0x7c9fffff
 80128fc:	9b08      	ldr	r3, [sp, #32]
 80128fe:	b323      	cbz	r3, 801294a <_strtod_l+0xb5a>
 8012900:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8012904:	d821      	bhi.n	801294a <_strtod_l+0xb5a>
 8012906:	a328      	add	r3, pc, #160	@ (adr r3, 80129a8 <_strtod_l+0xbb8>)
 8012908:	e9d3 2300 	ldrd	r2, r3, [r3]
 801290c:	4630      	mov	r0, r6
 801290e:	4639      	mov	r1, r7
 8012910:	f7ee f8c6 	bl	8000aa0 <__aeabi_dcmple>
 8012914:	b1a0      	cbz	r0, 8012940 <_strtod_l+0xb50>
 8012916:	4639      	mov	r1, r7
 8012918:	4630      	mov	r0, r6
 801291a:	f7ee f91d 	bl	8000b58 <__aeabi_d2uiz>
 801291e:	2801      	cmp	r0, #1
 8012920:	bf38      	it	cc
 8012922:	2001      	movcc	r0, #1
 8012924:	f7ed fdc6 	bl	80004b4 <__aeabi_ui2d>
 8012928:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801292a:	4606      	mov	r6, r0
 801292c:	460f      	mov	r7, r1
 801292e:	b9fb      	cbnz	r3, 8012970 <_strtod_l+0xb80>
 8012930:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8012934:	9014      	str	r0, [sp, #80]	@ 0x50
 8012936:	9315      	str	r3, [sp, #84]	@ 0x54
 8012938:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 801293c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8012940:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8012942:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8012946:	1b5b      	subs	r3, r3, r5
 8012948:	9311      	str	r3, [sp, #68]	@ 0x44
 801294a:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 801294e:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8012952:	f7ff f8f1 	bl	8011b38 <__ulp>
 8012956:	4650      	mov	r0, sl
 8012958:	ec53 2b10 	vmov	r2, r3, d0
 801295c:	4659      	mov	r1, fp
 801295e:	f7ed fe23 	bl	80005a8 <__aeabi_dmul>
 8012962:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8012966:	f7ed fc69 	bl	800023c <__adddf3>
 801296a:	4682      	mov	sl, r0
 801296c:	468b      	mov	fp, r1
 801296e:	e770      	b.n	8012852 <_strtod_l+0xa62>
 8012970:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8012974:	e7e0      	b.n	8012938 <_strtod_l+0xb48>
 8012976:	a30e      	add	r3, pc, #56	@ (adr r3, 80129b0 <_strtod_l+0xbc0>)
 8012978:	e9d3 2300 	ldrd	r2, r3, [r3]
 801297c:	f7ee f886 	bl	8000a8c <__aeabi_dcmplt>
 8012980:	e798      	b.n	80128b4 <_strtod_l+0xac4>
 8012982:	2300      	movs	r3, #0
 8012984:	930e      	str	r3, [sp, #56]	@ 0x38
 8012986:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8012988:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801298a:	6013      	str	r3, [r2, #0]
 801298c:	f7ff ba6d 	b.w	8011e6a <_strtod_l+0x7a>
 8012990:	2a65      	cmp	r2, #101	@ 0x65
 8012992:	f43f ab68 	beq.w	8012066 <_strtod_l+0x276>
 8012996:	2a45      	cmp	r2, #69	@ 0x45
 8012998:	f43f ab65 	beq.w	8012066 <_strtod_l+0x276>
 801299c:	2301      	movs	r3, #1
 801299e:	f7ff bba0 	b.w	80120e2 <_strtod_l+0x2f2>
 80129a2:	bf00      	nop
 80129a4:	f3af 8000 	nop.w
 80129a8:	ffc00000 	.word	0xffc00000
 80129ac:	41dfffff 	.word	0x41dfffff
 80129b0:	94a03595 	.word	0x94a03595
 80129b4:	3fcfffff 	.word	0x3fcfffff

080129b8 <_strtod_r>:
 80129b8:	4b01      	ldr	r3, [pc, #4]	@ (80129c0 <_strtod_r+0x8>)
 80129ba:	f7ff ba19 	b.w	8011df0 <_strtod_l>
 80129be:	bf00      	nop
 80129c0:	20000190 	.word	0x20000190

080129c4 <__ssputs_r>:
 80129c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129c8:	688e      	ldr	r6, [r1, #8]
 80129ca:	461f      	mov	r7, r3
 80129cc:	42be      	cmp	r6, r7
 80129ce:	680b      	ldr	r3, [r1, #0]
 80129d0:	4682      	mov	sl, r0
 80129d2:	460c      	mov	r4, r1
 80129d4:	4690      	mov	r8, r2
 80129d6:	d82d      	bhi.n	8012a34 <__ssputs_r+0x70>
 80129d8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80129dc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80129e0:	d026      	beq.n	8012a30 <__ssputs_r+0x6c>
 80129e2:	6965      	ldr	r5, [r4, #20]
 80129e4:	6909      	ldr	r1, [r1, #16]
 80129e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80129ea:	eba3 0901 	sub.w	r9, r3, r1
 80129ee:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80129f2:	1c7b      	adds	r3, r7, #1
 80129f4:	444b      	add	r3, r9
 80129f6:	106d      	asrs	r5, r5, #1
 80129f8:	429d      	cmp	r5, r3
 80129fa:	bf38      	it	cc
 80129fc:	461d      	movcc	r5, r3
 80129fe:	0553      	lsls	r3, r2, #21
 8012a00:	d527      	bpl.n	8012a52 <__ssputs_r+0x8e>
 8012a02:	4629      	mov	r1, r5
 8012a04:	f7fe fca0 	bl	8011348 <_malloc_r>
 8012a08:	4606      	mov	r6, r0
 8012a0a:	b360      	cbz	r0, 8012a66 <__ssputs_r+0xa2>
 8012a0c:	6921      	ldr	r1, [r4, #16]
 8012a0e:	464a      	mov	r2, r9
 8012a10:	f7fd fdb9 	bl	8010586 <memcpy>
 8012a14:	89a3      	ldrh	r3, [r4, #12]
 8012a16:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8012a1a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8012a1e:	81a3      	strh	r3, [r4, #12]
 8012a20:	6126      	str	r6, [r4, #16]
 8012a22:	6165      	str	r5, [r4, #20]
 8012a24:	444e      	add	r6, r9
 8012a26:	eba5 0509 	sub.w	r5, r5, r9
 8012a2a:	6026      	str	r6, [r4, #0]
 8012a2c:	60a5      	str	r5, [r4, #8]
 8012a2e:	463e      	mov	r6, r7
 8012a30:	42be      	cmp	r6, r7
 8012a32:	d900      	bls.n	8012a36 <__ssputs_r+0x72>
 8012a34:	463e      	mov	r6, r7
 8012a36:	6820      	ldr	r0, [r4, #0]
 8012a38:	4632      	mov	r2, r6
 8012a3a:	4641      	mov	r1, r8
 8012a3c:	f000 f9c6 	bl	8012dcc <memmove>
 8012a40:	68a3      	ldr	r3, [r4, #8]
 8012a42:	1b9b      	subs	r3, r3, r6
 8012a44:	60a3      	str	r3, [r4, #8]
 8012a46:	6823      	ldr	r3, [r4, #0]
 8012a48:	4433      	add	r3, r6
 8012a4a:	6023      	str	r3, [r4, #0]
 8012a4c:	2000      	movs	r0, #0
 8012a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012a52:	462a      	mov	r2, r5
 8012a54:	f000 fd7d 	bl	8013552 <_realloc_r>
 8012a58:	4606      	mov	r6, r0
 8012a5a:	2800      	cmp	r0, #0
 8012a5c:	d1e0      	bne.n	8012a20 <__ssputs_r+0x5c>
 8012a5e:	6921      	ldr	r1, [r4, #16]
 8012a60:	4650      	mov	r0, sl
 8012a62:	f7fe fbfd 	bl	8011260 <_free_r>
 8012a66:	230c      	movs	r3, #12
 8012a68:	f8ca 3000 	str.w	r3, [sl]
 8012a6c:	89a3      	ldrh	r3, [r4, #12]
 8012a6e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012a72:	81a3      	strh	r3, [r4, #12]
 8012a74:	f04f 30ff 	mov.w	r0, #4294967295
 8012a78:	e7e9      	b.n	8012a4e <__ssputs_r+0x8a>
	...

08012a7c <_svfiprintf_r>:
 8012a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a80:	4698      	mov	r8, r3
 8012a82:	898b      	ldrh	r3, [r1, #12]
 8012a84:	061b      	lsls	r3, r3, #24
 8012a86:	b09d      	sub	sp, #116	@ 0x74
 8012a88:	4607      	mov	r7, r0
 8012a8a:	460d      	mov	r5, r1
 8012a8c:	4614      	mov	r4, r2
 8012a8e:	d510      	bpl.n	8012ab2 <_svfiprintf_r+0x36>
 8012a90:	690b      	ldr	r3, [r1, #16]
 8012a92:	b973      	cbnz	r3, 8012ab2 <_svfiprintf_r+0x36>
 8012a94:	2140      	movs	r1, #64	@ 0x40
 8012a96:	f7fe fc57 	bl	8011348 <_malloc_r>
 8012a9a:	6028      	str	r0, [r5, #0]
 8012a9c:	6128      	str	r0, [r5, #16]
 8012a9e:	b930      	cbnz	r0, 8012aae <_svfiprintf_r+0x32>
 8012aa0:	230c      	movs	r3, #12
 8012aa2:	603b      	str	r3, [r7, #0]
 8012aa4:	f04f 30ff 	mov.w	r0, #4294967295
 8012aa8:	b01d      	add	sp, #116	@ 0x74
 8012aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012aae:	2340      	movs	r3, #64	@ 0x40
 8012ab0:	616b      	str	r3, [r5, #20]
 8012ab2:	2300      	movs	r3, #0
 8012ab4:	9309      	str	r3, [sp, #36]	@ 0x24
 8012ab6:	2320      	movs	r3, #32
 8012ab8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8012abc:	f8cd 800c 	str.w	r8, [sp, #12]
 8012ac0:	2330      	movs	r3, #48	@ 0x30
 8012ac2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8012c60 <_svfiprintf_r+0x1e4>
 8012ac6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8012aca:	f04f 0901 	mov.w	r9, #1
 8012ace:	4623      	mov	r3, r4
 8012ad0:	469a      	mov	sl, r3
 8012ad2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012ad6:	b10a      	cbz	r2, 8012adc <_svfiprintf_r+0x60>
 8012ad8:	2a25      	cmp	r2, #37	@ 0x25
 8012ada:	d1f9      	bne.n	8012ad0 <_svfiprintf_r+0x54>
 8012adc:	ebba 0b04 	subs.w	fp, sl, r4
 8012ae0:	d00b      	beq.n	8012afa <_svfiprintf_r+0x7e>
 8012ae2:	465b      	mov	r3, fp
 8012ae4:	4622      	mov	r2, r4
 8012ae6:	4629      	mov	r1, r5
 8012ae8:	4638      	mov	r0, r7
 8012aea:	f7ff ff6b 	bl	80129c4 <__ssputs_r>
 8012aee:	3001      	adds	r0, #1
 8012af0:	f000 80a7 	beq.w	8012c42 <_svfiprintf_r+0x1c6>
 8012af4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012af6:	445a      	add	r2, fp
 8012af8:	9209      	str	r2, [sp, #36]	@ 0x24
 8012afa:	f89a 3000 	ldrb.w	r3, [sl]
 8012afe:	2b00      	cmp	r3, #0
 8012b00:	f000 809f 	beq.w	8012c42 <_svfiprintf_r+0x1c6>
 8012b04:	2300      	movs	r3, #0
 8012b06:	f04f 32ff 	mov.w	r2, #4294967295
 8012b0a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8012b0e:	f10a 0a01 	add.w	sl, sl, #1
 8012b12:	9304      	str	r3, [sp, #16]
 8012b14:	9307      	str	r3, [sp, #28]
 8012b16:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8012b1a:	931a      	str	r3, [sp, #104]	@ 0x68
 8012b1c:	4654      	mov	r4, sl
 8012b1e:	2205      	movs	r2, #5
 8012b20:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012b24:	484e      	ldr	r0, [pc, #312]	@ (8012c60 <_svfiprintf_r+0x1e4>)
 8012b26:	f7ed fb2b 	bl	8000180 <memchr>
 8012b2a:	9a04      	ldr	r2, [sp, #16]
 8012b2c:	b9d8      	cbnz	r0, 8012b66 <_svfiprintf_r+0xea>
 8012b2e:	06d0      	lsls	r0, r2, #27
 8012b30:	bf44      	itt	mi
 8012b32:	2320      	movmi	r3, #32
 8012b34:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8012b38:	0711      	lsls	r1, r2, #28
 8012b3a:	bf44      	itt	mi
 8012b3c:	232b      	movmi	r3, #43	@ 0x2b
 8012b3e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8012b42:	f89a 3000 	ldrb.w	r3, [sl]
 8012b46:	2b2a      	cmp	r3, #42	@ 0x2a
 8012b48:	d015      	beq.n	8012b76 <_svfiprintf_r+0xfa>
 8012b4a:	9a07      	ldr	r2, [sp, #28]
 8012b4c:	4654      	mov	r4, sl
 8012b4e:	2000      	movs	r0, #0
 8012b50:	f04f 0c0a 	mov.w	ip, #10
 8012b54:	4621      	mov	r1, r4
 8012b56:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012b5a:	3b30      	subs	r3, #48	@ 0x30
 8012b5c:	2b09      	cmp	r3, #9
 8012b5e:	d94b      	bls.n	8012bf8 <_svfiprintf_r+0x17c>
 8012b60:	b1b0      	cbz	r0, 8012b90 <_svfiprintf_r+0x114>
 8012b62:	9207      	str	r2, [sp, #28]
 8012b64:	e014      	b.n	8012b90 <_svfiprintf_r+0x114>
 8012b66:	eba0 0308 	sub.w	r3, r0, r8
 8012b6a:	fa09 f303 	lsl.w	r3, r9, r3
 8012b6e:	4313      	orrs	r3, r2
 8012b70:	9304      	str	r3, [sp, #16]
 8012b72:	46a2      	mov	sl, r4
 8012b74:	e7d2      	b.n	8012b1c <_svfiprintf_r+0xa0>
 8012b76:	9b03      	ldr	r3, [sp, #12]
 8012b78:	1d19      	adds	r1, r3, #4
 8012b7a:	681b      	ldr	r3, [r3, #0]
 8012b7c:	9103      	str	r1, [sp, #12]
 8012b7e:	2b00      	cmp	r3, #0
 8012b80:	bfbb      	ittet	lt
 8012b82:	425b      	neglt	r3, r3
 8012b84:	f042 0202 	orrlt.w	r2, r2, #2
 8012b88:	9307      	strge	r3, [sp, #28]
 8012b8a:	9307      	strlt	r3, [sp, #28]
 8012b8c:	bfb8      	it	lt
 8012b8e:	9204      	strlt	r2, [sp, #16]
 8012b90:	7823      	ldrb	r3, [r4, #0]
 8012b92:	2b2e      	cmp	r3, #46	@ 0x2e
 8012b94:	d10a      	bne.n	8012bac <_svfiprintf_r+0x130>
 8012b96:	7863      	ldrb	r3, [r4, #1]
 8012b98:	2b2a      	cmp	r3, #42	@ 0x2a
 8012b9a:	d132      	bne.n	8012c02 <_svfiprintf_r+0x186>
 8012b9c:	9b03      	ldr	r3, [sp, #12]
 8012b9e:	1d1a      	adds	r2, r3, #4
 8012ba0:	681b      	ldr	r3, [r3, #0]
 8012ba2:	9203      	str	r2, [sp, #12]
 8012ba4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8012ba8:	3402      	adds	r4, #2
 8012baa:	9305      	str	r3, [sp, #20]
 8012bac:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8012c70 <_svfiprintf_r+0x1f4>
 8012bb0:	7821      	ldrb	r1, [r4, #0]
 8012bb2:	2203      	movs	r2, #3
 8012bb4:	4650      	mov	r0, sl
 8012bb6:	f7ed fae3 	bl	8000180 <memchr>
 8012bba:	b138      	cbz	r0, 8012bcc <_svfiprintf_r+0x150>
 8012bbc:	9b04      	ldr	r3, [sp, #16]
 8012bbe:	eba0 000a 	sub.w	r0, r0, sl
 8012bc2:	2240      	movs	r2, #64	@ 0x40
 8012bc4:	4082      	lsls	r2, r0
 8012bc6:	4313      	orrs	r3, r2
 8012bc8:	3401      	adds	r4, #1
 8012bca:	9304      	str	r3, [sp, #16]
 8012bcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012bd0:	4824      	ldr	r0, [pc, #144]	@ (8012c64 <_svfiprintf_r+0x1e8>)
 8012bd2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8012bd6:	2206      	movs	r2, #6
 8012bd8:	f7ed fad2 	bl	8000180 <memchr>
 8012bdc:	2800      	cmp	r0, #0
 8012bde:	d036      	beq.n	8012c4e <_svfiprintf_r+0x1d2>
 8012be0:	4b21      	ldr	r3, [pc, #132]	@ (8012c68 <_svfiprintf_r+0x1ec>)
 8012be2:	bb1b      	cbnz	r3, 8012c2c <_svfiprintf_r+0x1b0>
 8012be4:	9b03      	ldr	r3, [sp, #12]
 8012be6:	3307      	adds	r3, #7
 8012be8:	f023 0307 	bic.w	r3, r3, #7
 8012bec:	3308      	adds	r3, #8
 8012bee:	9303      	str	r3, [sp, #12]
 8012bf0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012bf2:	4433      	add	r3, r6
 8012bf4:	9309      	str	r3, [sp, #36]	@ 0x24
 8012bf6:	e76a      	b.n	8012ace <_svfiprintf_r+0x52>
 8012bf8:	fb0c 3202 	mla	r2, ip, r2, r3
 8012bfc:	460c      	mov	r4, r1
 8012bfe:	2001      	movs	r0, #1
 8012c00:	e7a8      	b.n	8012b54 <_svfiprintf_r+0xd8>
 8012c02:	2300      	movs	r3, #0
 8012c04:	3401      	adds	r4, #1
 8012c06:	9305      	str	r3, [sp, #20]
 8012c08:	4619      	mov	r1, r3
 8012c0a:	f04f 0c0a 	mov.w	ip, #10
 8012c0e:	4620      	mov	r0, r4
 8012c10:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012c14:	3a30      	subs	r2, #48	@ 0x30
 8012c16:	2a09      	cmp	r2, #9
 8012c18:	d903      	bls.n	8012c22 <_svfiprintf_r+0x1a6>
 8012c1a:	2b00      	cmp	r3, #0
 8012c1c:	d0c6      	beq.n	8012bac <_svfiprintf_r+0x130>
 8012c1e:	9105      	str	r1, [sp, #20]
 8012c20:	e7c4      	b.n	8012bac <_svfiprintf_r+0x130>
 8012c22:	fb0c 2101 	mla	r1, ip, r1, r2
 8012c26:	4604      	mov	r4, r0
 8012c28:	2301      	movs	r3, #1
 8012c2a:	e7f0      	b.n	8012c0e <_svfiprintf_r+0x192>
 8012c2c:	ab03      	add	r3, sp, #12
 8012c2e:	9300      	str	r3, [sp, #0]
 8012c30:	462a      	mov	r2, r5
 8012c32:	4b0e      	ldr	r3, [pc, #56]	@ (8012c6c <_svfiprintf_r+0x1f0>)
 8012c34:	a904      	add	r1, sp, #16
 8012c36:	4638      	mov	r0, r7
 8012c38:	f7fc fd04 	bl	800f644 <_printf_float>
 8012c3c:	1c42      	adds	r2, r0, #1
 8012c3e:	4606      	mov	r6, r0
 8012c40:	d1d6      	bne.n	8012bf0 <_svfiprintf_r+0x174>
 8012c42:	89ab      	ldrh	r3, [r5, #12]
 8012c44:	065b      	lsls	r3, r3, #25
 8012c46:	f53f af2d 	bmi.w	8012aa4 <_svfiprintf_r+0x28>
 8012c4a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012c4c:	e72c      	b.n	8012aa8 <_svfiprintf_r+0x2c>
 8012c4e:	ab03      	add	r3, sp, #12
 8012c50:	9300      	str	r3, [sp, #0]
 8012c52:	462a      	mov	r2, r5
 8012c54:	4b05      	ldr	r3, [pc, #20]	@ (8012c6c <_svfiprintf_r+0x1f0>)
 8012c56:	a904      	add	r1, sp, #16
 8012c58:	4638      	mov	r0, r7
 8012c5a:	f7fc ff8b 	bl	800fb74 <_printf_i>
 8012c5e:	e7ed      	b.n	8012c3c <_svfiprintf_r+0x1c0>
 8012c60:	0801862a 	.word	0x0801862a
 8012c64:	08018634 	.word	0x08018634
 8012c68:	0800f645 	.word	0x0800f645
 8012c6c:	080129c5 	.word	0x080129c5
 8012c70:	08018630 	.word	0x08018630

08012c74 <__sflush_r>:
 8012c74:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8012c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c7c:	0716      	lsls	r6, r2, #28
 8012c7e:	4605      	mov	r5, r0
 8012c80:	460c      	mov	r4, r1
 8012c82:	d454      	bmi.n	8012d2e <__sflush_r+0xba>
 8012c84:	684b      	ldr	r3, [r1, #4]
 8012c86:	2b00      	cmp	r3, #0
 8012c88:	dc02      	bgt.n	8012c90 <__sflush_r+0x1c>
 8012c8a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8012c8c:	2b00      	cmp	r3, #0
 8012c8e:	dd48      	ble.n	8012d22 <__sflush_r+0xae>
 8012c90:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8012c92:	2e00      	cmp	r6, #0
 8012c94:	d045      	beq.n	8012d22 <__sflush_r+0xae>
 8012c96:	2300      	movs	r3, #0
 8012c98:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8012c9c:	682f      	ldr	r7, [r5, #0]
 8012c9e:	6a21      	ldr	r1, [r4, #32]
 8012ca0:	602b      	str	r3, [r5, #0]
 8012ca2:	d030      	beq.n	8012d06 <__sflush_r+0x92>
 8012ca4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8012ca6:	89a3      	ldrh	r3, [r4, #12]
 8012ca8:	0759      	lsls	r1, r3, #29
 8012caa:	d505      	bpl.n	8012cb8 <__sflush_r+0x44>
 8012cac:	6863      	ldr	r3, [r4, #4]
 8012cae:	1ad2      	subs	r2, r2, r3
 8012cb0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8012cb2:	b10b      	cbz	r3, 8012cb8 <__sflush_r+0x44>
 8012cb4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8012cb6:	1ad2      	subs	r2, r2, r3
 8012cb8:	2300      	movs	r3, #0
 8012cba:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8012cbc:	6a21      	ldr	r1, [r4, #32]
 8012cbe:	4628      	mov	r0, r5
 8012cc0:	47b0      	blx	r6
 8012cc2:	1c43      	adds	r3, r0, #1
 8012cc4:	89a3      	ldrh	r3, [r4, #12]
 8012cc6:	d106      	bne.n	8012cd6 <__sflush_r+0x62>
 8012cc8:	6829      	ldr	r1, [r5, #0]
 8012cca:	291d      	cmp	r1, #29
 8012ccc:	d82b      	bhi.n	8012d26 <__sflush_r+0xb2>
 8012cce:	4a2a      	ldr	r2, [pc, #168]	@ (8012d78 <__sflush_r+0x104>)
 8012cd0:	40ca      	lsrs	r2, r1
 8012cd2:	07d6      	lsls	r6, r2, #31
 8012cd4:	d527      	bpl.n	8012d26 <__sflush_r+0xb2>
 8012cd6:	2200      	movs	r2, #0
 8012cd8:	6062      	str	r2, [r4, #4]
 8012cda:	04d9      	lsls	r1, r3, #19
 8012cdc:	6922      	ldr	r2, [r4, #16]
 8012cde:	6022      	str	r2, [r4, #0]
 8012ce0:	d504      	bpl.n	8012cec <__sflush_r+0x78>
 8012ce2:	1c42      	adds	r2, r0, #1
 8012ce4:	d101      	bne.n	8012cea <__sflush_r+0x76>
 8012ce6:	682b      	ldr	r3, [r5, #0]
 8012ce8:	b903      	cbnz	r3, 8012cec <__sflush_r+0x78>
 8012cea:	6560      	str	r0, [r4, #84]	@ 0x54
 8012cec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8012cee:	602f      	str	r7, [r5, #0]
 8012cf0:	b1b9      	cbz	r1, 8012d22 <__sflush_r+0xae>
 8012cf2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8012cf6:	4299      	cmp	r1, r3
 8012cf8:	d002      	beq.n	8012d00 <__sflush_r+0x8c>
 8012cfa:	4628      	mov	r0, r5
 8012cfc:	f7fe fab0 	bl	8011260 <_free_r>
 8012d00:	2300      	movs	r3, #0
 8012d02:	6363      	str	r3, [r4, #52]	@ 0x34
 8012d04:	e00d      	b.n	8012d22 <__sflush_r+0xae>
 8012d06:	2301      	movs	r3, #1
 8012d08:	4628      	mov	r0, r5
 8012d0a:	47b0      	blx	r6
 8012d0c:	4602      	mov	r2, r0
 8012d0e:	1c50      	adds	r0, r2, #1
 8012d10:	d1c9      	bne.n	8012ca6 <__sflush_r+0x32>
 8012d12:	682b      	ldr	r3, [r5, #0]
 8012d14:	2b00      	cmp	r3, #0
 8012d16:	d0c6      	beq.n	8012ca6 <__sflush_r+0x32>
 8012d18:	2b1d      	cmp	r3, #29
 8012d1a:	d001      	beq.n	8012d20 <__sflush_r+0xac>
 8012d1c:	2b16      	cmp	r3, #22
 8012d1e:	d11e      	bne.n	8012d5e <__sflush_r+0xea>
 8012d20:	602f      	str	r7, [r5, #0]
 8012d22:	2000      	movs	r0, #0
 8012d24:	e022      	b.n	8012d6c <__sflush_r+0xf8>
 8012d26:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012d2a:	b21b      	sxth	r3, r3
 8012d2c:	e01b      	b.n	8012d66 <__sflush_r+0xf2>
 8012d2e:	690f      	ldr	r7, [r1, #16]
 8012d30:	2f00      	cmp	r7, #0
 8012d32:	d0f6      	beq.n	8012d22 <__sflush_r+0xae>
 8012d34:	0793      	lsls	r3, r2, #30
 8012d36:	680e      	ldr	r6, [r1, #0]
 8012d38:	bf08      	it	eq
 8012d3a:	694b      	ldreq	r3, [r1, #20]
 8012d3c:	600f      	str	r7, [r1, #0]
 8012d3e:	bf18      	it	ne
 8012d40:	2300      	movne	r3, #0
 8012d42:	eba6 0807 	sub.w	r8, r6, r7
 8012d46:	608b      	str	r3, [r1, #8]
 8012d48:	f1b8 0f00 	cmp.w	r8, #0
 8012d4c:	dde9      	ble.n	8012d22 <__sflush_r+0xae>
 8012d4e:	6a21      	ldr	r1, [r4, #32]
 8012d50:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8012d52:	4643      	mov	r3, r8
 8012d54:	463a      	mov	r2, r7
 8012d56:	4628      	mov	r0, r5
 8012d58:	47b0      	blx	r6
 8012d5a:	2800      	cmp	r0, #0
 8012d5c:	dc08      	bgt.n	8012d70 <__sflush_r+0xfc>
 8012d5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012d62:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012d66:	81a3      	strh	r3, [r4, #12]
 8012d68:	f04f 30ff 	mov.w	r0, #4294967295
 8012d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d70:	4407      	add	r7, r0
 8012d72:	eba8 0800 	sub.w	r8, r8, r0
 8012d76:	e7e7      	b.n	8012d48 <__sflush_r+0xd4>
 8012d78:	20400001 	.word	0x20400001

08012d7c <_fflush_r>:
 8012d7c:	b538      	push	{r3, r4, r5, lr}
 8012d7e:	690b      	ldr	r3, [r1, #16]
 8012d80:	4605      	mov	r5, r0
 8012d82:	460c      	mov	r4, r1
 8012d84:	b913      	cbnz	r3, 8012d8c <_fflush_r+0x10>
 8012d86:	2500      	movs	r5, #0
 8012d88:	4628      	mov	r0, r5
 8012d8a:	bd38      	pop	{r3, r4, r5, pc}
 8012d8c:	b118      	cbz	r0, 8012d96 <_fflush_r+0x1a>
 8012d8e:	6a03      	ldr	r3, [r0, #32]
 8012d90:	b90b      	cbnz	r3, 8012d96 <_fflush_r+0x1a>
 8012d92:	f7fd faa7 	bl	80102e4 <__sinit>
 8012d96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012d9a:	2b00      	cmp	r3, #0
 8012d9c:	d0f3      	beq.n	8012d86 <_fflush_r+0xa>
 8012d9e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8012da0:	07d0      	lsls	r0, r2, #31
 8012da2:	d404      	bmi.n	8012dae <_fflush_r+0x32>
 8012da4:	0599      	lsls	r1, r3, #22
 8012da6:	d402      	bmi.n	8012dae <_fflush_r+0x32>
 8012da8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8012daa:	f7fd fbea 	bl	8010582 <__retarget_lock_acquire_recursive>
 8012dae:	4628      	mov	r0, r5
 8012db0:	4621      	mov	r1, r4
 8012db2:	f7ff ff5f 	bl	8012c74 <__sflush_r>
 8012db6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8012db8:	07da      	lsls	r2, r3, #31
 8012dba:	4605      	mov	r5, r0
 8012dbc:	d4e4      	bmi.n	8012d88 <_fflush_r+0xc>
 8012dbe:	89a3      	ldrh	r3, [r4, #12]
 8012dc0:	059b      	lsls	r3, r3, #22
 8012dc2:	d4e1      	bmi.n	8012d88 <_fflush_r+0xc>
 8012dc4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8012dc6:	f7fd fbdd 	bl	8010584 <__retarget_lock_release_recursive>
 8012dca:	e7dd      	b.n	8012d88 <_fflush_r+0xc>

08012dcc <memmove>:
 8012dcc:	4288      	cmp	r0, r1
 8012dce:	b510      	push	{r4, lr}
 8012dd0:	eb01 0402 	add.w	r4, r1, r2
 8012dd4:	d902      	bls.n	8012ddc <memmove+0x10>
 8012dd6:	4284      	cmp	r4, r0
 8012dd8:	4623      	mov	r3, r4
 8012dda:	d807      	bhi.n	8012dec <memmove+0x20>
 8012ddc:	1e43      	subs	r3, r0, #1
 8012dde:	42a1      	cmp	r1, r4
 8012de0:	d008      	beq.n	8012df4 <memmove+0x28>
 8012de2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012de6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8012dea:	e7f8      	b.n	8012dde <memmove+0x12>
 8012dec:	4402      	add	r2, r0
 8012dee:	4601      	mov	r1, r0
 8012df0:	428a      	cmp	r2, r1
 8012df2:	d100      	bne.n	8012df6 <memmove+0x2a>
 8012df4:	bd10      	pop	{r4, pc}
 8012df6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012dfa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012dfe:	e7f7      	b.n	8012df0 <memmove+0x24>

08012e00 <strncmp>:
 8012e00:	b510      	push	{r4, lr}
 8012e02:	b16a      	cbz	r2, 8012e20 <strncmp+0x20>
 8012e04:	3901      	subs	r1, #1
 8012e06:	1884      	adds	r4, r0, r2
 8012e08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012e0c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8012e10:	429a      	cmp	r2, r3
 8012e12:	d103      	bne.n	8012e1c <strncmp+0x1c>
 8012e14:	42a0      	cmp	r0, r4
 8012e16:	d001      	beq.n	8012e1c <strncmp+0x1c>
 8012e18:	2a00      	cmp	r2, #0
 8012e1a:	d1f5      	bne.n	8012e08 <strncmp+0x8>
 8012e1c:	1ad0      	subs	r0, r2, r3
 8012e1e:	bd10      	pop	{r4, pc}
 8012e20:	4610      	mov	r0, r2
 8012e22:	e7fc      	b.n	8012e1e <strncmp+0x1e>

08012e24 <_sbrk_r>:
 8012e24:	b538      	push	{r3, r4, r5, lr}
 8012e26:	4d06      	ldr	r5, [pc, #24]	@ (8012e40 <_sbrk_r+0x1c>)
 8012e28:	2300      	movs	r3, #0
 8012e2a:	4604      	mov	r4, r0
 8012e2c:	4608      	mov	r0, r1
 8012e2e:	602b      	str	r3, [r5, #0]
 8012e30:	f7f2 f8b4 	bl	8004f9c <_sbrk>
 8012e34:	1c43      	adds	r3, r0, #1
 8012e36:	d102      	bne.n	8012e3e <_sbrk_r+0x1a>
 8012e38:	682b      	ldr	r3, [r5, #0]
 8012e3a:	b103      	cbz	r3, 8012e3e <_sbrk_r+0x1a>
 8012e3c:	6023      	str	r3, [r4, #0]
 8012e3e:	bd38      	pop	{r3, r4, r5, pc}
 8012e40:	20005b84 	.word	0x20005b84
 8012e44:	00000000 	.word	0x00000000

08012e48 <nan>:
 8012e48:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8012e50 <nan+0x8>
 8012e4c:	4770      	bx	lr
 8012e4e:	bf00      	nop
 8012e50:	00000000 	.word	0x00000000
 8012e54:	7ff80000 	.word	0x7ff80000

08012e58 <__assert_func>:
 8012e58:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012e5a:	4614      	mov	r4, r2
 8012e5c:	461a      	mov	r2, r3
 8012e5e:	4b09      	ldr	r3, [pc, #36]	@ (8012e84 <__assert_func+0x2c>)
 8012e60:	681b      	ldr	r3, [r3, #0]
 8012e62:	4605      	mov	r5, r0
 8012e64:	68d8      	ldr	r0, [r3, #12]
 8012e66:	b14c      	cbz	r4, 8012e7c <__assert_func+0x24>
 8012e68:	4b07      	ldr	r3, [pc, #28]	@ (8012e88 <__assert_func+0x30>)
 8012e6a:	9100      	str	r1, [sp, #0]
 8012e6c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012e70:	4906      	ldr	r1, [pc, #24]	@ (8012e8c <__assert_func+0x34>)
 8012e72:	462b      	mov	r3, r5
 8012e74:	f000 fba8 	bl	80135c8 <fiprintf>
 8012e78:	f000 fbb8 	bl	80135ec <abort>
 8012e7c:	4b04      	ldr	r3, [pc, #16]	@ (8012e90 <__assert_func+0x38>)
 8012e7e:	461c      	mov	r4, r3
 8012e80:	e7f3      	b.n	8012e6a <__assert_func+0x12>
 8012e82:	bf00      	nop
 8012e84:	20000140 	.word	0x20000140
 8012e88:	08018643 	.word	0x08018643
 8012e8c:	08018650 	.word	0x08018650
 8012e90:	0801867e 	.word	0x0801867e

08012e94 <_calloc_r>:
 8012e94:	b570      	push	{r4, r5, r6, lr}
 8012e96:	fba1 5402 	umull	r5, r4, r1, r2
 8012e9a:	b934      	cbnz	r4, 8012eaa <_calloc_r+0x16>
 8012e9c:	4629      	mov	r1, r5
 8012e9e:	f7fe fa53 	bl	8011348 <_malloc_r>
 8012ea2:	4606      	mov	r6, r0
 8012ea4:	b928      	cbnz	r0, 8012eb2 <_calloc_r+0x1e>
 8012ea6:	4630      	mov	r0, r6
 8012ea8:	bd70      	pop	{r4, r5, r6, pc}
 8012eaa:	220c      	movs	r2, #12
 8012eac:	6002      	str	r2, [r0, #0]
 8012eae:	2600      	movs	r6, #0
 8012eb0:	e7f9      	b.n	8012ea6 <_calloc_r+0x12>
 8012eb2:	462a      	mov	r2, r5
 8012eb4:	4621      	mov	r1, r4
 8012eb6:	f7fd fae6 	bl	8010486 <memset>
 8012eba:	e7f4      	b.n	8012ea6 <_calloc_r+0x12>

08012ebc <rshift>:
 8012ebc:	6903      	ldr	r3, [r0, #16]
 8012ebe:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8012ec2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012ec6:	ea4f 1261 	mov.w	r2, r1, asr #5
 8012eca:	f100 0414 	add.w	r4, r0, #20
 8012ece:	dd45      	ble.n	8012f5c <rshift+0xa0>
 8012ed0:	f011 011f 	ands.w	r1, r1, #31
 8012ed4:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8012ed8:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8012edc:	d10c      	bne.n	8012ef8 <rshift+0x3c>
 8012ede:	f100 0710 	add.w	r7, r0, #16
 8012ee2:	4629      	mov	r1, r5
 8012ee4:	42b1      	cmp	r1, r6
 8012ee6:	d334      	bcc.n	8012f52 <rshift+0x96>
 8012ee8:	1a9b      	subs	r3, r3, r2
 8012eea:	009b      	lsls	r3, r3, #2
 8012eec:	1eea      	subs	r2, r5, #3
 8012eee:	4296      	cmp	r6, r2
 8012ef0:	bf38      	it	cc
 8012ef2:	2300      	movcc	r3, #0
 8012ef4:	4423      	add	r3, r4
 8012ef6:	e015      	b.n	8012f24 <rshift+0x68>
 8012ef8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8012efc:	f1c1 0820 	rsb	r8, r1, #32
 8012f00:	40cf      	lsrs	r7, r1
 8012f02:	f105 0e04 	add.w	lr, r5, #4
 8012f06:	46a1      	mov	r9, r4
 8012f08:	4576      	cmp	r6, lr
 8012f0a:	46f4      	mov	ip, lr
 8012f0c:	d815      	bhi.n	8012f3a <rshift+0x7e>
 8012f0e:	1a9a      	subs	r2, r3, r2
 8012f10:	0092      	lsls	r2, r2, #2
 8012f12:	3a04      	subs	r2, #4
 8012f14:	3501      	adds	r5, #1
 8012f16:	42ae      	cmp	r6, r5
 8012f18:	bf38      	it	cc
 8012f1a:	2200      	movcc	r2, #0
 8012f1c:	18a3      	adds	r3, r4, r2
 8012f1e:	50a7      	str	r7, [r4, r2]
 8012f20:	b107      	cbz	r7, 8012f24 <rshift+0x68>
 8012f22:	3304      	adds	r3, #4
 8012f24:	1b1a      	subs	r2, r3, r4
 8012f26:	42a3      	cmp	r3, r4
 8012f28:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8012f2c:	bf08      	it	eq
 8012f2e:	2300      	moveq	r3, #0
 8012f30:	6102      	str	r2, [r0, #16]
 8012f32:	bf08      	it	eq
 8012f34:	6143      	streq	r3, [r0, #20]
 8012f36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f3a:	f8dc c000 	ldr.w	ip, [ip]
 8012f3e:	fa0c fc08 	lsl.w	ip, ip, r8
 8012f42:	ea4c 0707 	orr.w	r7, ip, r7
 8012f46:	f849 7b04 	str.w	r7, [r9], #4
 8012f4a:	f85e 7b04 	ldr.w	r7, [lr], #4
 8012f4e:	40cf      	lsrs	r7, r1
 8012f50:	e7da      	b.n	8012f08 <rshift+0x4c>
 8012f52:	f851 cb04 	ldr.w	ip, [r1], #4
 8012f56:	f847 cf04 	str.w	ip, [r7, #4]!
 8012f5a:	e7c3      	b.n	8012ee4 <rshift+0x28>
 8012f5c:	4623      	mov	r3, r4
 8012f5e:	e7e1      	b.n	8012f24 <rshift+0x68>

08012f60 <__hexdig_fun>:
 8012f60:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8012f64:	2b09      	cmp	r3, #9
 8012f66:	d802      	bhi.n	8012f6e <__hexdig_fun+0xe>
 8012f68:	3820      	subs	r0, #32
 8012f6a:	b2c0      	uxtb	r0, r0
 8012f6c:	4770      	bx	lr
 8012f6e:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8012f72:	2b05      	cmp	r3, #5
 8012f74:	d801      	bhi.n	8012f7a <__hexdig_fun+0x1a>
 8012f76:	3847      	subs	r0, #71	@ 0x47
 8012f78:	e7f7      	b.n	8012f6a <__hexdig_fun+0xa>
 8012f7a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8012f7e:	2b05      	cmp	r3, #5
 8012f80:	d801      	bhi.n	8012f86 <__hexdig_fun+0x26>
 8012f82:	3827      	subs	r0, #39	@ 0x27
 8012f84:	e7f1      	b.n	8012f6a <__hexdig_fun+0xa>
 8012f86:	2000      	movs	r0, #0
 8012f88:	4770      	bx	lr
	...

08012f8c <__gethex>:
 8012f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f90:	b085      	sub	sp, #20
 8012f92:	468a      	mov	sl, r1
 8012f94:	9302      	str	r3, [sp, #8]
 8012f96:	680b      	ldr	r3, [r1, #0]
 8012f98:	9001      	str	r0, [sp, #4]
 8012f9a:	4690      	mov	r8, r2
 8012f9c:	1c9c      	adds	r4, r3, #2
 8012f9e:	46a1      	mov	r9, r4
 8012fa0:	f814 0b01 	ldrb.w	r0, [r4], #1
 8012fa4:	2830      	cmp	r0, #48	@ 0x30
 8012fa6:	d0fa      	beq.n	8012f9e <__gethex+0x12>
 8012fa8:	eba9 0303 	sub.w	r3, r9, r3
 8012fac:	f1a3 0b02 	sub.w	fp, r3, #2
 8012fb0:	f7ff ffd6 	bl	8012f60 <__hexdig_fun>
 8012fb4:	4605      	mov	r5, r0
 8012fb6:	2800      	cmp	r0, #0
 8012fb8:	d168      	bne.n	801308c <__gethex+0x100>
 8012fba:	49a0      	ldr	r1, [pc, #640]	@ (801323c <__gethex+0x2b0>)
 8012fbc:	2201      	movs	r2, #1
 8012fbe:	4648      	mov	r0, r9
 8012fc0:	f7ff ff1e 	bl	8012e00 <strncmp>
 8012fc4:	4607      	mov	r7, r0
 8012fc6:	2800      	cmp	r0, #0
 8012fc8:	d167      	bne.n	801309a <__gethex+0x10e>
 8012fca:	f899 0001 	ldrb.w	r0, [r9, #1]
 8012fce:	4626      	mov	r6, r4
 8012fd0:	f7ff ffc6 	bl	8012f60 <__hexdig_fun>
 8012fd4:	2800      	cmp	r0, #0
 8012fd6:	d062      	beq.n	801309e <__gethex+0x112>
 8012fd8:	4623      	mov	r3, r4
 8012fda:	7818      	ldrb	r0, [r3, #0]
 8012fdc:	2830      	cmp	r0, #48	@ 0x30
 8012fde:	4699      	mov	r9, r3
 8012fe0:	f103 0301 	add.w	r3, r3, #1
 8012fe4:	d0f9      	beq.n	8012fda <__gethex+0x4e>
 8012fe6:	f7ff ffbb 	bl	8012f60 <__hexdig_fun>
 8012fea:	fab0 f580 	clz	r5, r0
 8012fee:	096d      	lsrs	r5, r5, #5
 8012ff0:	f04f 0b01 	mov.w	fp, #1
 8012ff4:	464a      	mov	r2, r9
 8012ff6:	4616      	mov	r6, r2
 8012ff8:	3201      	adds	r2, #1
 8012ffa:	7830      	ldrb	r0, [r6, #0]
 8012ffc:	f7ff ffb0 	bl	8012f60 <__hexdig_fun>
 8013000:	2800      	cmp	r0, #0
 8013002:	d1f8      	bne.n	8012ff6 <__gethex+0x6a>
 8013004:	498d      	ldr	r1, [pc, #564]	@ (801323c <__gethex+0x2b0>)
 8013006:	2201      	movs	r2, #1
 8013008:	4630      	mov	r0, r6
 801300a:	f7ff fef9 	bl	8012e00 <strncmp>
 801300e:	2800      	cmp	r0, #0
 8013010:	d13f      	bne.n	8013092 <__gethex+0x106>
 8013012:	b944      	cbnz	r4, 8013026 <__gethex+0x9a>
 8013014:	1c74      	adds	r4, r6, #1
 8013016:	4622      	mov	r2, r4
 8013018:	4616      	mov	r6, r2
 801301a:	3201      	adds	r2, #1
 801301c:	7830      	ldrb	r0, [r6, #0]
 801301e:	f7ff ff9f 	bl	8012f60 <__hexdig_fun>
 8013022:	2800      	cmp	r0, #0
 8013024:	d1f8      	bne.n	8013018 <__gethex+0x8c>
 8013026:	1ba4      	subs	r4, r4, r6
 8013028:	00a7      	lsls	r7, r4, #2
 801302a:	7833      	ldrb	r3, [r6, #0]
 801302c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8013030:	2b50      	cmp	r3, #80	@ 0x50
 8013032:	d13e      	bne.n	80130b2 <__gethex+0x126>
 8013034:	7873      	ldrb	r3, [r6, #1]
 8013036:	2b2b      	cmp	r3, #43	@ 0x2b
 8013038:	d033      	beq.n	80130a2 <__gethex+0x116>
 801303a:	2b2d      	cmp	r3, #45	@ 0x2d
 801303c:	d034      	beq.n	80130a8 <__gethex+0x11c>
 801303e:	1c71      	adds	r1, r6, #1
 8013040:	2400      	movs	r4, #0
 8013042:	7808      	ldrb	r0, [r1, #0]
 8013044:	f7ff ff8c 	bl	8012f60 <__hexdig_fun>
 8013048:	1e43      	subs	r3, r0, #1
 801304a:	b2db      	uxtb	r3, r3
 801304c:	2b18      	cmp	r3, #24
 801304e:	d830      	bhi.n	80130b2 <__gethex+0x126>
 8013050:	f1a0 0210 	sub.w	r2, r0, #16
 8013054:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8013058:	f7ff ff82 	bl	8012f60 <__hexdig_fun>
 801305c:	f100 3cff 	add.w	ip, r0, #4294967295
 8013060:	fa5f fc8c 	uxtb.w	ip, ip
 8013064:	f1bc 0f18 	cmp.w	ip, #24
 8013068:	f04f 030a 	mov.w	r3, #10
 801306c:	d91e      	bls.n	80130ac <__gethex+0x120>
 801306e:	b104      	cbz	r4, 8013072 <__gethex+0xe6>
 8013070:	4252      	negs	r2, r2
 8013072:	4417      	add	r7, r2
 8013074:	f8ca 1000 	str.w	r1, [sl]
 8013078:	b1ed      	cbz	r5, 80130b6 <__gethex+0x12a>
 801307a:	f1bb 0f00 	cmp.w	fp, #0
 801307e:	bf0c      	ite	eq
 8013080:	2506      	moveq	r5, #6
 8013082:	2500      	movne	r5, #0
 8013084:	4628      	mov	r0, r5
 8013086:	b005      	add	sp, #20
 8013088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801308c:	2500      	movs	r5, #0
 801308e:	462c      	mov	r4, r5
 8013090:	e7b0      	b.n	8012ff4 <__gethex+0x68>
 8013092:	2c00      	cmp	r4, #0
 8013094:	d1c7      	bne.n	8013026 <__gethex+0x9a>
 8013096:	4627      	mov	r7, r4
 8013098:	e7c7      	b.n	801302a <__gethex+0x9e>
 801309a:	464e      	mov	r6, r9
 801309c:	462f      	mov	r7, r5
 801309e:	2501      	movs	r5, #1
 80130a0:	e7c3      	b.n	801302a <__gethex+0x9e>
 80130a2:	2400      	movs	r4, #0
 80130a4:	1cb1      	adds	r1, r6, #2
 80130a6:	e7cc      	b.n	8013042 <__gethex+0xb6>
 80130a8:	2401      	movs	r4, #1
 80130aa:	e7fb      	b.n	80130a4 <__gethex+0x118>
 80130ac:	fb03 0002 	mla	r0, r3, r2, r0
 80130b0:	e7ce      	b.n	8013050 <__gethex+0xc4>
 80130b2:	4631      	mov	r1, r6
 80130b4:	e7de      	b.n	8013074 <__gethex+0xe8>
 80130b6:	eba6 0309 	sub.w	r3, r6, r9
 80130ba:	3b01      	subs	r3, #1
 80130bc:	4629      	mov	r1, r5
 80130be:	2b07      	cmp	r3, #7
 80130c0:	dc0a      	bgt.n	80130d8 <__gethex+0x14c>
 80130c2:	9801      	ldr	r0, [sp, #4]
 80130c4:	f7fe f9cc 	bl	8011460 <_Balloc>
 80130c8:	4604      	mov	r4, r0
 80130ca:	b940      	cbnz	r0, 80130de <__gethex+0x152>
 80130cc:	4b5c      	ldr	r3, [pc, #368]	@ (8013240 <__gethex+0x2b4>)
 80130ce:	4602      	mov	r2, r0
 80130d0:	21e4      	movs	r1, #228	@ 0xe4
 80130d2:	485c      	ldr	r0, [pc, #368]	@ (8013244 <__gethex+0x2b8>)
 80130d4:	f7ff fec0 	bl	8012e58 <__assert_func>
 80130d8:	3101      	adds	r1, #1
 80130da:	105b      	asrs	r3, r3, #1
 80130dc:	e7ef      	b.n	80130be <__gethex+0x132>
 80130de:	f100 0a14 	add.w	sl, r0, #20
 80130e2:	2300      	movs	r3, #0
 80130e4:	4655      	mov	r5, sl
 80130e6:	469b      	mov	fp, r3
 80130e8:	45b1      	cmp	r9, r6
 80130ea:	d337      	bcc.n	801315c <__gethex+0x1d0>
 80130ec:	f845 bb04 	str.w	fp, [r5], #4
 80130f0:	eba5 050a 	sub.w	r5, r5, sl
 80130f4:	10ad      	asrs	r5, r5, #2
 80130f6:	6125      	str	r5, [r4, #16]
 80130f8:	4658      	mov	r0, fp
 80130fa:	f7fe faa3 	bl	8011644 <__hi0bits>
 80130fe:	016d      	lsls	r5, r5, #5
 8013100:	f8d8 6000 	ldr.w	r6, [r8]
 8013104:	1a2d      	subs	r5, r5, r0
 8013106:	42b5      	cmp	r5, r6
 8013108:	dd54      	ble.n	80131b4 <__gethex+0x228>
 801310a:	1bad      	subs	r5, r5, r6
 801310c:	4629      	mov	r1, r5
 801310e:	4620      	mov	r0, r4
 8013110:	f7fe fe2f 	bl	8011d72 <__any_on>
 8013114:	4681      	mov	r9, r0
 8013116:	b178      	cbz	r0, 8013138 <__gethex+0x1ac>
 8013118:	1e6b      	subs	r3, r5, #1
 801311a:	1159      	asrs	r1, r3, #5
 801311c:	f003 021f 	and.w	r2, r3, #31
 8013120:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8013124:	f04f 0901 	mov.w	r9, #1
 8013128:	fa09 f202 	lsl.w	r2, r9, r2
 801312c:	420a      	tst	r2, r1
 801312e:	d003      	beq.n	8013138 <__gethex+0x1ac>
 8013130:	454b      	cmp	r3, r9
 8013132:	dc36      	bgt.n	80131a2 <__gethex+0x216>
 8013134:	f04f 0902 	mov.w	r9, #2
 8013138:	4629      	mov	r1, r5
 801313a:	4620      	mov	r0, r4
 801313c:	f7ff febe 	bl	8012ebc <rshift>
 8013140:	442f      	add	r7, r5
 8013142:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8013146:	42bb      	cmp	r3, r7
 8013148:	da42      	bge.n	80131d0 <__gethex+0x244>
 801314a:	9801      	ldr	r0, [sp, #4]
 801314c:	4621      	mov	r1, r4
 801314e:	f7fe f9c7 	bl	80114e0 <_Bfree>
 8013152:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013154:	2300      	movs	r3, #0
 8013156:	6013      	str	r3, [r2, #0]
 8013158:	25a3      	movs	r5, #163	@ 0xa3
 801315a:	e793      	b.n	8013084 <__gethex+0xf8>
 801315c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8013160:	2a2e      	cmp	r2, #46	@ 0x2e
 8013162:	d012      	beq.n	801318a <__gethex+0x1fe>
 8013164:	2b20      	cmp	r3, #32
 8013166:	d104      	bne.n	8013172 <__gethex+0x1e6>
 8013168:	f845 bb04 	str.w	fp, [r5], #4
 801316c:	f04f 0b00 	mov.w	fp, #0
 8013170:	465b      	mov	r3, fp
 8013172:	7830      	ldrb	r0, [r6, #0]
 8013174:	9303      	str	r3, [sp, #12]
 8013176:	f7ff fef3 	bl	8012f60 <__hexdig_fun>
 801317a:	9b03      	ldr	r3, [sp, #12]
 801317c:	f000 000f 	and.w	r0, r0, #15
 8013180:	4098      	lsls	r0, r3
 8013182:	ea4b 0b00 	orr.w	fp, fp, r0
 8013186:	3304      	adds	r3, #4
 8013188:	e7ae      	b.n	80130e8 <__gethex+0x15c>
 801318a:	45b1      	cmp	r9, r6
 801318c:	d8ea      	bhi.n	8013164 <__gethex+0x1d8>
 801318e:	492b      	ldr	r1, [pc, #172]	@ (801323c <__gethex+0x2b0>)
 8013190:	9303      	str	r3, [sp, #12]
 8013192:	2201      	movs	r2, #1
 8013194:	4630      	mov	r0, r6
 8013196:	f7ff fe33 	bl	8012e00 <strncmp>
 801319a:	9b03      	ldr	r3, [sp, #12]
 801319c:	2800      	cmp	r0, #0
 801319e:	d1e1      	bne.n	8013164 <__gethex+0x1d8>
 80131a0:	e7a2      	b.n	80130e8 <__gethex+0x15c>
 80131a2:	1ea9      	subs	r1, r5, #2
 80131a4:	4620      	mov	r0, r4
 80131a6:	f7fe fde4 	bl	8011d72 <__any_on>
 80131aa:	2800      	cmp	r0, #0
 80131ac:	d0c2      	beq.n	8013134 <__gethex+0x1a8>
 80131ae:	f04f 0903 	mov.w	r9, #3
 80131b2:	e7c1      	b.n	8013138 <__gethex+0x1ac>
 80131b4:	da09      	bge.n	80131ca <__gethex+0x23e>
 80131b6:	1b75      	subs	r5, r6, r5
 80131b8:	4621      	mov	r1, r4
 80131ba:	9801      	ldr	r0, [sp, #4]
 80131bc:	462a      	mov	r2, r5
 80131be:	f7fe fb9f 	bl	8011900 <__lshift>
 80131c2:	1b7f      	subs	r7, r7, r5
 80131c4:	4604      	mov	r4, r0
 80131c6:	f100 0a14 	add.w	sl, r0, #20
 80131ca:	f04f 0900 	mov.w	r9, #0
 80131ce:	e7b8      	b.n	8013142 <__gethex+0x1b6>
 80131d0:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80131d4:	42bd      	cmp	r5, r7
 80131d6:	dd6f      	ble.n	80132b8 <__gethex+0x32c>
 80131d8:	1bed      	subs	r5, r5, r7
 80131da:	42ae      	cmp	r6, r5
 80131dc:	dc34      	bgt.n	8013248 <__gethex+0x2bc>
 80131de:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80131e2:	2b02      	cmp	r3, #2
 80131e4:	d022      	beq.n	801322c <__gethex+0x2a0>
 80131e6:	2b03      	cmp	r3, #3
 80131e8:	d024      	beq.n	8013234 <__gethex+0x2a8>
 80131ea:	2b01      	cmp	r3, #1
 80131ec:	d115      	bne.n	801321a <__gethex+0x28e>
 80131ee:	42ae      	cmp	r6, r5
 80131f0:	d113      	bne.n	801321a <__gethex+0x28e>
 80131f2:	2e01      	cmp	r6, #1
 80131f4:	d10b      	bne.n	801320e <__gethex+0x282>
 80131f6:	9a02      	ldr	r2, [sp, #8]
 80131f8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80131fc:	6013      	str	r3, [r2, #0]
 80131fe:	2301      	movs	r3, #1
 8013200:	6123      	str	r3, [r4, #16]
 8013202:	f8ca 3000 	str.w	r3, [sl]
 8013206:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013208:	2562      	movs	r5, #98	@ 0x62
 801320a:	601c      	str	r4, [r3, #0]
 801320c:	e73a      	b.n	8013084 <__gethex+0xf8>
 801320e:	1e71      	subs	r1, r6, #1
 8013210:	4620      	mov	r0, r4
 8013212:	f7fe fdae 	bl	8011d72 <__any_on>
 8013216:	2800      	cmp	r0, #0
 8013218:	d1ed      	bne.n	80131f6 <__gethex+0x26a>
 801321a:	9801      	ldr	r0, [sp, #4]
 801321c:	4621      	mov	r1, r4
 801321e:	f7fe f95f 	bl	80114e0 <_Bfree>
 8013222:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013224:	2300      	movs	r3, #0
 8013226:	6013      	str	r3, [r2, #0]
 8013228:	2550      	movs	r5, #80	@ 0x50
 801322a:	e72b      	b.n	8013084 <__gethex+0xf8>
 801322c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801322e:	2b00      	cmp	r3, #0
 8013230:	d1f3      	bne.n	801321a <__gethex+0x28e>
 8013232:	e7e0      	b.n	80131f6 <__gethex+0x26a>
 8013234:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013236:	2b00      	cmp	r3, #0
 8013238:	d1dd      	bne.n	80131f6 <__gethex+0x26a>
 801323a:	e7ee      	b.n	801321a <__gethex+0x28e>
 801323c:	08018628 	.word	0x08018628
 8013240:	080185be 	.word	0x080185be
 8013244:	0801867f 	.word	0x0801867f
 8013248:	1e6f      	subs	r7, r5, #1
 801324a:	f1b9 0f00 	cmp.w	r9, #0
 801324e:	d130      	bne.n	80132b2 <__gethex+0x326>
 8013250:	b127      	cbz	r7, 801325c <__gethex+0x2d0>
 8013252:	4639      	mov	r1, r7
 8013254:	4620      	mov	r0, r4
 8013256:	f7fe fd8c 	bl	8011d72 <__any_on>
 801325a:	4681      	mov	r9, r0
 801325c:	117a      	asrs	r2, r7, #5
 801325e:	2301      	movs	r3, #1
 8013260:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8013264:	f007 071f 	and.w	r7, r7, #31
 8013268:	40bb      	lsls	r3, r7
 801326a:	4213      	tst	r3, r2
 801326c:	4629      	mov	r1, r5
 801326e:	4620      	mov	r0, r4
 8013270:	bf18      	it	ne
 8013272:	f049 0902 	orrne.w	r9, r9, #2
 8013276:	f7ff fe21 	bl	8012ebc <rshift>
 801327a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 801327e:	1b76      	subs	r6, r6, r5
 8013280:	2502      	movs	r5, #2
 8013282:	f1b9 0f00 	cmp.w	r9, #0
 8013286:	d047      	beq.n	8013318 <__gethex+0x38c>
 8013288:	f8d8 300c 	ldr.w	r3, [r8, #12]
 801328c:	2b02      	cmp	r3, #2
 801328e:	d015      	beq.n	80132bc <__gethex+0x330>
 8013290:	2b03      	cmp	r3, #3
 8013292:	d017      	beq.n	80132c4 <__gethex+0x338>
 8013294:	2b01      	cmp	r3, #1
 8013296:	d109      	bne.n	80132ac <__gethex+0x320>
 8013298:	f019 0f02 	tst.w	r9, #2
 801329c:	d006      	beq.n	80132ac <__gethex+0x320>
 801329e:	f8da 3000 	ldr.w	r3, [sl]
 80132a2:	ea49 0903 	orr.w	r9, r9, r3
 80132a6:	f019 0f01 	tst.w	r9, #1
 80132aa:	d10e      	bne.n	80132ca <__gethex+0x33e>
 80132ac:	f045 0510 	orr.w	r5, r5, #16
 80132b0:	e032      	b.n	8013318 <__gethex+0x38c>
 80132b2:	f04f 0901 	mov.w	r9, #1
 80132b6:	e7d1      	b.n	801325c <__gethex+0x2d0>
 80132b8:	2501      	movs	r5, #1
 80132ba:	e7e2      	b.n	8013282 <__gethex+0x2f6>
 80132bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80132be:	f1c3 0301 	rsb	r3, r3, #1
 80132c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80132c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80132c6:	2b00      	cmp	r3, #0
 80132c8:	d0f0      	beq.n	80132ac <__gethex+0x320>
 80132ca:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80132ce:	f104 0314 	add.w	r3, r4, #20
 80132d2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80132d6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80132da:	f04f 0c00 	mov.w	ip, #0
 80132de:	4618      	mov	r0, r3
 80132e0:	f853 2b04 	ldr.w	r2, [r3], #4
 80132e4:	f1b2 3fff 	cmp.w	r2, #4294967295
 80132e8:	d01b      	beq.n	8013322 <__gethex+0x396>
 80132ea:	3201      	adds	r2, #1
 80132ec:	6002      	str	r2, [r0, #0]
 80132ee:	2d02      	cmp	r5, #2
 80132f0:	f104 0314 	add.w	r3, r4, #20
 80132f4:	d13c      	bne.n	8013370 <__gethex+0x3e4>
 80132f6:	f8d8 2000 	ldr.w	r2, [r8]
 80132fa:	3a01      	subs	r2, #1
 80132fc:	42b2      	cmp	r2, r6
 80132fe:	d109      	bne.n	8013314 <__gethex+0x388>
 8013300:	1171      	asrs	r1, r6, #5
 8013302:	2201      	movs	r2, #1
 8013304:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8013308:	f006 061f 	and.w	r6, r6, #31
 801330c:	fa02 f606 	lsl.w	r6, r2, r6
 8013310:	421e      	tst	r6, r3
 8013312:	d13a      	bne.n	801338a <__gethex+0x3fe>
 8013314:	f045 0520 	orr.w	r5, r5, #32
 8013318:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801331a:	601c      	str	r4, [r3, #0]
 801331c:	9b02      	ldr	r3, [sp, #8]
 801331e:	601f      	str	r7, [r3, #0]
 8013320:	e6b0      	b.n	8013084 <__gethex+0xf8>
 8013322:	4299      	cmp	r1, r3
 8013324:	f843 cc04 	str.w	ip, [r3, #-4]
 8013328:	d8d9      	bhi.n	80132de <__gethex+0x352>
 801332a:	68a3      	ldr	r3, [r4, #8]
 801332c:	459b      	cmp	fp, r3
 801332e:	db17      	blt.n	8013360 <__gethex+0x3d4>
 8013330:	6861      	ldr	r1, [r4, #4]
 8013332:	9801      	ldr	r0, [sp, #4]
 8013334:	3101      	adds	r1, #1
 8013336:	f7fe f893 	bl	8011460 <_Balloc>
 801333a:	4681      	mov	r9, r0
 801333c:	b918      	cbnz	r0, 8013346 <__gethex+0x3ba>
 801333e:	4b1a      	ldr	r3, [pc, #104]	@ (80133a8 <__gethex+0x41c>)
 8013340:	4602      	mov	r2, r0
 8013342:	2184      	movs	r1, #132	@ 0x84
 8013344:	e6c5      	b.n	80130d2 <__gethex+0x146>
 8013346:	6922      	ldr	r2, [r4, #16]
 8013348:	3202      	adds	r2, #2
 801334a:	f104 010c 	add.w	r1, r4, #12
 801334e:	0092      	lsls	r2, r2, #2
 8013350:	300c      	adds	r0, #12
 8013352:	f7fd f918 	bl	8010586 <memcpy>
 8013356:	4621      	mov	r1, r4
 8013358:	9801      	ldr	r0, [sp, #4]
 801335a:	f7fe f8c1 	bl	80114e0 <_Bfree>
 801335e:	464c      	mov	r4, r9
 8013360:	6923      	ldr	r3, [r4, #16]
 8013362:	1c5a      	adds	r2, r3, #1
 8013364:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8013368:	6122      	str	r2, [r4, #16]
 801336a:	2201      	movs	r2, #1
 801336c:	615a      	str	r2, [r3, #20]
 801336e:	e7be      	b.n	80132ee <__gethex+0x362>
 8013370:	6922      	ldr	r2, [r4, #16]
 8013372:	455a      	cmp	r2, fp
 8013374:	dd0b      	ble.n	801338e <__gethex+0x402>
 8013376:	2101      	movs	r1, #1
 8013378:	4620      	mov	r0, r4
 801337a:	f7ff fd9f 	bl	8012ebc <rshift>
 801337e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8013382:	3701      	adds	r7, #1
 8013384:	42bb      	cmp	r3, r7
 8013386:	f6ff aee0 	blt.w	801314a <__gethex+0x1be>
 801338a:	2501      	movs	r5, #1
 801338c:	e7c2      	b.n	8013314 <__gethex+0x388>
 801338e:	f016 061f 	ands.w	r6, r6, #31
 8013392:	d0fa      	beq.n	801338a <__gethex+0x3fe>
 8013394:	4453      	add	r3, sl
 8013396:	f1c6 0620 	rsb	r6, r6, #32
 801339a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 801339e:	f7fe f951 	bl	8011644 <__hi0bits>
 80133a2:	42b0      	cmp	r0, r6
 80133a4:	dbe7      	blt.n	8013376 <__gethex+0x3ea>
 80133a6:	e7f0      	b.n	801338a <__gethex+0x3fe>
 80133a8:	080185be 	.word	0x080185be

080133ac <L_shift>:
 80133ac:	f1c2 0208 	rsb	r2, r2, #8
 80133b0:	0092      	lsls	r2, r2, #2
 80133b2:	b570      	push	{r4, r5, r6, lr}
 80133b4:	f1c2 0620 	rsb	r6, r2, #32
 80133b8:	6843      	ldr	r3, [r0, #4]
 80133ba:	6804      	ldr	r4, [r0, #0]
 80133bc:	fa03 f506 	lsl.w	r5, r3, r6
 80133c0:	432c      	orrs	r4, r5
 80133c2:	40d3      	lsrs	r3, r2
 80133c4:	6004      	str	r4, [r0, #0]
 80133c6:	f840 3f04 	str.w	r3, [r0, #4]!
 80133ca:	4288      	cmp	r0, r1
 80133cc:	d3f4      	bcc.n	80133b8 <L_shift+0xc>
 80133ce:	bd70      	pop	{r4, r5, r6, pc}

080133d0 <__match>:
 80133d0:	b530      	push	{r4, r5, lr}
 80133d2:	6803      	ldr	r3, [r0, #0]
 80133d4:	3301      	adds	r3, #1
 80133d6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80133da:	b914      	cbnz	r4, 80133e2 <__match+0x12>
 80133dc:	6003      	str	r3, [r0, #0]
 80133de:	2001      	movs	r0, #1
 80133e0:	bd30      	pop	{r4, r5, pc}
 80133e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80133e6:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80133ea:	2d19      	cmp	r5, #25
 80133ec:	bf98      	it	ls
 80133ee:	3220      	addls	r2, #32
 80133f0:	42a2      	cmp	r2, r4
 80133f2:	d0f0      	beq.n	80133d6 <__match+0x6>
 80133f4:	2000      	movs	r0, #0
 80133f6:	e7f3      	b.n	80133e0 <__match+0x10>

080133f8 <__hexnan>:
 80133f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133fc:	680b      	ldr	r3, [r1, #0]
 80133fe:	6801      	ldr	r1, [r0, #0]
 8013400:	115e      	asrs	r6, r3, #5
 8013402:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013406:	f013 031f 	ands.w	r3, r3, #31
 801340a:	b087      	sub	sp, #28
 801340c:	bf18      	it	ne
 801340e:	3604      	addne	r6, #4
 8013410:	2500      	movs	r5, #0
 8013412:	1f37      	subs	r7, r6, #4
 8013414:	4682      	mov	sl, r0
 8013416:	4690      	mov	r8, r2
 8013418:	9301      	str	r3, [sp, #4]
 801341a:	f846 5c04 	str.w	r5, [r6, #-4]
 801341e:	46b9      	mov	r9, r7
 8013420:	463c      	mov	r4, r7
 8013422:	9502      	str	r5, [sp, #8]
 8013424:	46ab      	mov	fp, r5
 8013426:	784a      	ldrb	r2, [r1, #1]
 8013428:	1c4b      	adds	r3, r1, #1
 801342a:	9303      	str	r3, [sp, #12]
 801342c:	b342      	cbz	r2, 8013480 <__hexnan+0x88>
 801342e:	4610      	mov	r0, r2
 8013430:	9105      	str	r1, [sp, #20]
 8013432:	9204      	str	r2, [sp, #16]
 8013434:	f7ff fd94 	bl	8012f60 <__hexdig_fun>
 8013438:	2800      	cmp	r0, #0
 801343a:	d151      	bne.n	80134e0 <__hexnan+0xe8>
 801343c:	9a04      	ldr	r2, [sp, #16]
 801343e:	9905      	ldr	r1, [sp, #20]
 8013440:	2a20      	cmp	r2, #32
 8013442:	d818      	bhi.n	8013476 <__hexnan+0x7e>
 8013444:	9b02      	ldr	r3, [sp, #8]
 8013446:	459b      	cmp	fp, r3
 8013448:	dd13      	ble.n	8013472 <__hexnan+0x7a>
 801344a:	454c      	cmp	r4, r9
 801344c:	d206      	bcs.n	801345c <__hexnan+0x64>
 801344e:	2d07      	cmp	r5, #7
 8013450:	dc04      	bgt.n	801345c <__hexnan+0x64>
 8013452:	462a      	mov	r2, r5
 8013454:	4649      	mov	r1, r9
 8013456:	4620      	mov	r0, r4
 8013458:	f7ff ffa8 	bl	80133ac <L_shift>
 801345c:	4544      	cmp	r4, r8
 801345e:	d952      	bls.n	8013506 <__hexnan+0x10e>
 8013460:	2300      	movs	r3, #0
 8013462:	f1a4 0904 	sub.w	r9, r4, #4
 8013466:	f844 3c04 	str.w	r3, [r4, #-4]
 801346a:	f8cd b008 	str.w	fp, [sp, #8]
 801346e:	464c      	mov	r4, r9
 8013470:	461d      	mov	r5, r3
 8013472:	9903      	ldr	r1, [sp, #12]
 8013474:	e7d7      	b.n	8013426 <__hexnan+0x2e>
 8013476:	2a29      	cmp	r2, #41	@ 0x29
 8013478:	d157      	bne.n	801352a <__hexnan+0x132>
 801347a:	3102      	adds	r1, #2
 801347c:	f8ca 1000 	str.w	r1, [sl]
 8013480:	f1bb 0f00 	cmp.w	fp, #0
 8013484:	d051      	beq.n	801352a <__hexnan+0x132>
 8013486:	454c      	cmp	r4, r9
 8013488:	d206      	bcs.n	8013498 <__hexnan+0xa0>
 801348a:	2d07      	cmp	r5, #7
 801348c:	dc04      	bgt.n	8013498 <__hexnan+0xa0>
 801348e:	462a      	mov	r2, r5
 8013490:	4649      	mov	r1, r9
 8013492:	4620      	mov	r0, r4
 8013494:	f7ff ff8a 	bl	80133ac <L_shift>
 8013498:	4544      	cmp	r4, r8
 801349a:	d936      	bls.n	801350a <__hexnan+0x112>
 801349c:	f1a8 0204 	sub.w	r2, r8, #4
 80134a0:	4623      	mov	r3, r4
 80134a2:	f853 1b04 	ldr.w	r1, [r3], #4
 80134a6:	f842 1f04 	str.w	r1, [r2, #4]!
 80134aa:	429f      	cmp	r7, r3
 80134ac:	d2f9      	bcs.n	80134a2 <__hexnan+0xaa>
 80134ae:	1b3b      	subs	r3, r7, r4
 80134b0:	f023 0303 	bic.w	r3, r3, #3
 80134b4:	3304      	adds	r3, #4
 80134b6:	3401      	adds	r4, #1
 80134b8:	3e03      	subs	r6, #3
 80134ba:	42b4      	cmp	r4, r6
 80134bc:	bf88      	it	hi
 80134be:	2304      	movhi	r3, #4
 80134c0:	4443      	add	r3, r8
 80134c2:	2200      	movs	r2, #0
 80134c4:	f843 2b04 	str.w	r2, [r3], #4
 80134c8:	429f      	cmp	r7, r3
 80134ca:	d2fb      	bcs.n	80134c4 <__hexnan+0xcc>
 80134cc:	683b      	ldr	r3, [r7, #0]
 80134ce:	b91b      	cbnz	r3, 80134d8 <__hexnan+0xe0>
 80134d0:	4547      	cmp	r7, r8
 80134d2:	d128      	bne.n	8013526 <__hexnan+0x12e>
 80134d4:	2301      	movs	r3, #1
 80134d6:	603b      	str	r3, [r7, #0]
 80134d8:	2005      	movs	r0, #5
 80134da:	b007      	add	sp, #28
 80134dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134e0:	3501      	adds	r5, #1
 80134e2:	2d08      	cmp	r5, #8
 80134e4:	f10b 0b01 	add.w	fp, fp, #1
 80134e8:	dd06      	ble.n	80134f8 <__hexnan+0x100>
 80134ea:	4544      	cmp	r4, r8
 80134ec:	d9c1      	bls.n	8013472 <__hexnan+0x7a>
 80134ee:	2300      	movs	r3, #0
 80134f0:	f844 3c04 	str.w	r3, [r4, #-4]
 80134f4:	2501      	movs	r5, #1
 80134f6:	3c04      	subs	r4, #4
 80134f8:	6822      	ldr	r2, [r4, #0]
 80134fa:	f000 000f 	and.w	r0, r0, #15
 80134fe:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8013502:	6020      	str	r0, [r4, #0]
 8013504:	e7b5      	b.n	8013472 <__hexnan+0x7a>
 8013506:	2508      	movs	r5, #8
 8013508:	e7b3      	b.n	8013472 <__hexnan+0x7a>
 801350a:	9b01      	ldr	r3, [sp, #4]
 801350c:	2b00      	cmp	r3, #0
 801350e:	d0dd      	beq.n	80134cc <__hexnan+0xd4>
 8013510:	f1c3 0320 	rsb	r3, r3, #32
 8013514:	f04f 32ff 	mov.w	r2, #4294967295
 8013518:	40da      	lsrs	r2, r3
 801351a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 801351e:	4013      	ands	r3, r2
 8013520:	f846 3c04 	str.w	r3, [r6, #-4]
 8013524:	e7d2      	b.n	80134cc <__hexnan+0xd4>
 8013526:	3f04      	subs	r7, #4
 8013528:	e7d0      	b.n	80134cc <__hexnan+0xd4>
 801352a:	2004      	movs	r0, #4
 801352c:	e7d5      	b.n	80134da <__hexnan+0xe2>

0801352e <__ascii_mbtowc>:
 801352e:	b082      	sub	sp, #8
 8013530:	b901      	cbnz	r1, 8013534 <__ascii_mbtowc+0x6>
 8013532:	a901      	add	r1, sp, #4
 8013534:	b142      	cbz	r2, 8013548 <__ascii_mbtowc+0x1a>
 8013536:	b14b      	cbz	r3, 801354c <__ascii_mbtowc+0x1e>
 8013538:	7813      	ldrb	r3, [r2, #0]
 801353a:	600b      	str	r3, [r1, #0]
 801353c:	7812      	ldrb	r2, [r2, #0]
 801353e:	1e10      	subs	r0, r2, #0
 8013540:	bf18      	it	ne
 8013542:	2001      	movne	r0, #1
 8013544:	b002      	add	sp, #8
 8013546:	4770      	bx	lr
 8013548:	4610      	mov	r0, r2
 801354a:	e7fb      	b.n	8013544 <__ascii_mbtowc+0x16>
 801354c:	f06f 0001 	mvn.w	r0, #1
 8013550:	e7f8      	b.n	8013544 <__ascii_mbtowc+0x16>

08013552 <_realloc_r>:
 8013552:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013556:	4607      	mov	r7, r0
 8013558:	4614      	mov	r4, r2
 801355a:	460d      	mov	r5, r1
 801355c:	b921      	cbnz	r1, 8013568 <_realloc_r+0x16>
 801355e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013562:	4611      	mov	r1, r2
 8013564:	f7fd bef0 	b.w	8011348 <_malloc_r>
 8013568:	b92a      	cbnz	r2, 8013576 <_realloc_r+0x24>
 801356a:	f7fd fe79 	bl	8011260 <_free_r>
 801356e:	4625      	mov	r5, r4
 8013570:	4628      	mov	r0, r5
 8013572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013576:	f000 f840 	bl	80135fa <_malloc_usable_size_r>
 801357a:	4284      	cmp	r4, r0
 801357c:	4606      	mov	r6, r0
 801357e:	d802      	bhi.n	8013586 <_realloc_r+0x34>
 8013580:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8013584:	d8f4      	bhi.n	8013570 <_realloc_r+0x1e>
 8013586:	4621      	mov	r1, r4
 8013588:	4638      	mov	r0, r7
 801358a:	f7fd fedd 	bl	8011348 <_malloc_r>
 801358e:	4680      	mov	r8, r0
 8013590:	b908      	cbnz	r0, 8013596 <_realloc_r+0x44>
 8013592:	4645      	mov	r5, r8
 8013594:	e7ec      	b.n	8013570 <_realloc_r+0x1e>
 8013596:	42b4      	cmp	r4, r6
 8013598:	4622      	mov	r2, r4
 801359a:	4629      	mov	r1, r5
 801359c:	bf28      	it	cs
 801359e:	4632      	movcs	r2, r6
 80135a0:	f7fc fff1 	bl	8010586 <memcpy>
 80135a4:	4629      	mov	r1, r5
 80135a6:	4638      	mov	r0, r7
 80135a8:	f7fd fe5a 	bl	8011260 <_free_r>
 80135ac:	e7f1      	b.n	8013592 <_realloc_r+0x40>

080135ae <__ascii_wctomb>:
 80135ae:	4603      	mov	r3, r0
 80135b0:	4608      	mov	r0, r1
 80135b2:	b141      	cbz	r1, 80135c6 <__ascii_wctomb+0x18>
 80135b4:	2aff      	cmp	r2, #255	@ 0xff
 80135b6:	d904      	bls.n	80135c2 <__ascii_wctomb+0x14>
 80135b8:	228a      	movs	r2, #138	@ 0x8a
 80135ba:	601a      	str	r2, [r3, #0]
 80135bc:	f04f 30ff 	mov.w	r0, #4294967295
 80135c0:	4770      	bx	lr
 80135c2:	700a      	strb	r2, [r1, #0]
 80135c4:	2001      	movs	r0, #1
 80135c6:	4770      	bx	lr

080135c8 <fiprintf>:
 80135c8:	b40e      	push	{r1, r2, r3}
 80135ca:	b503      	push	{r0, r1, lr}
 80135cc:	4601      	mov	r1, r0
 80135ce:	ab03      	add	r3, sp, #12
 80135d0:	4805      	ldr	r0, [pc, #20]	@ (80135e8 <fiprintf+0x20>)
 80135d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80135d6:	6800      	ldr	r0, [r0, #0]
 80135d8:	9301      	str	r3, [sp, #4]
 80135da:	f000 f83f 	bl	801365c <_vfiprintf_r>
 80135de:	b002      	add	sp, #8
 80135e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80135e4:	b003      	add	sp, #12
 80135e6:	4770      	bx	lr
 80135e8:	20000140 	.word	0x20000140

080135ec <abort>:
 80135ec:	b508      	push	{r3, lr}
 80135ee:	2006      	movs	r0, #6
 80135f0:	f000 fa08 	bl	8013a04 <raise>
 80135f4:	2001      	movs	r0, #1
 80135f6:	f7f1 fca1 	bl	8004f3c <_exit>

080135fa <_malloc_usable_size_r>:
 80135fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80135fe:	1f18      	subs	r0, r3, #4
 8013600:	2b00      	cmp	r3, #0
 8013602:	bfbc      	itt	lt
 8013604:	580b      	ldrlt	r3, [r1, r0]
 8013606:	18c0      	addlt	r0, r0, r3
 8013608:	4770      	bx	lr

0801360a <__sfputc_r>:
 801360a:	6893      	ldr	r3, [r2, #8]
 801360c:	3b01      	subs	r3, #1
 801360e:	2b00      	cmp	r3, #0
 8013610:	b410      	push	{r4}
 8013612:	6093      	str	r3, [r2, #8]
 8013614:	da08      	bge.n	8013628 <__sfputc_r+0x1e>
 8013616:	6994      	ldr	r4, [r2, #24]
 8013618:	42a3      	cmp	r3, r4
 801361a:	db01      	blt.n	8013620 <__sfputc_r+0x16>
 801361c:	290a      	cmp	r1, #10
 801361e:	d103      	bne.n	8013628 <__sfputc_r+0x1e>
 8013620:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013624:	f000 b932 	b.w	801388c <__swbuf_r>
 8013628:	6813      	ldr	r3, [r2, #0]
 801362a:	1c58      	adds	r0, r3, #1
 801362c:	6010      	str	r0, [r2, #0]
 801362e:	7019      	strb	r1, [r3, #0]
 8013630:	4608      	mov	r0, r1
 8013632:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013636:	4770      	bx	lr

08013638 <__sfputs_r>:
 8013638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801363a:	4606      	mov	r6, r0
 801363c:	460f      	mov	r7, r1
 801363e:	4614      	mov	r4, r2
 8013640:	18d5      	adds	r5, r2, r3
 8013642:	42ac      	cmp	r4, r5
 8013644:	d101      	bne.n	801364a <__sfputs_r+0x12>
 8013646:	2000      	movs	r0, #0
 8013648:	e007      	b.n	801365a <__sfputs_r+0x22>
 801364a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801364e:	463a      	mov	r2, r7
 8013650:	4630      	mov	r0, r6
 8013652:	f7ff ffda 	bl	801360a <__sfputc_r>
 8013656:	1c43      	adds	r3, r0, #1
 8013658:	d1f3      	bne.n	8013642 <__sfputs_r+0xa>
 801365a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801365c <_vfiprintf_r>:
 801365c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013660:	460d      	mov	r5, r1
 8013662:	b09d      	sub	sp, #116	@ 0x74
 8013664:	4614      	mov	r4, r2
 8013666:	4698      	mov	r8, r3
 8013668:	4606      	mov	r6, r0
 801366a:	b118      	cbz	r0, 8013674 <_vfiprintf_r+0x18>
 801366c:	6a03      	ldr	r3, [r0, #32]
 801366e:	b90b      	cbnz	r3, 8013674 <_vfiprintf_r+0x18>
 8013670:	f7fc fe38 	bl	80102e4 <__sinit>
 8013674:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8013676:	07d9      	lsls	r1, r3, #31
 8013678:	d405      	bmi.n	8013686 <_vfiprintf_r+0x2a>
 801367a:	89ab      	ldrh	r3, [r5, #12]
 801367c:	059a      	lsls	r2, r3, #22
 801367e:	d402      	bmi.n	8013686 <_vfiprintf_r+0x2a>
 8013680:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013682:	f7fc ff7e 	bl	8010582 <__retarget_lock_acquire_recursive>
 8013686:	89ab      	ldrh	r3, [r5, #12]
 8013688:	071b      	lsls	r3, r3, #28
 801368a:	d501      	bpl.n	8013690 <_vfiprintf_r+0x34>
 801368c:	692b      	ldr	r3, [r5, #16]
 801368e:	b99b      	cbnz	r3, 80136b8 <_vfiprintf_r+0x5c>
 8013690:	4629      	mov	r1, r5
 8013692:	4630      	mov	r0, r6
 8013694:	f000 f938 	bl	8013908 <__swsetup_r>
 8013698:	b170      	cbz	r0, 80136b8 <_vfiprintf_r+0x5c>
 801369a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801369c:	07dc      	lsls	r4, r3, #31
 801369e:	d504      	bpl.n	80136aa <_vfiprintf_r+0x4e>
 80136a0:	f04f 30ff 	mov.w	r0, #4294967295
 80136a4:	b01d      	add	sp, #116	@ 0x74
 80136a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136aa:	89ab      	ldrh	r3, [r5, #12]
 80136ac:	0598      	lsls	r0, r3, #22
 80136ae:	d4f7      	bmi.n	80136a0 <_vfiprintf_r+0x44>
 80136b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80136b2:	f7fc ff67 	bl	8010584 <__retarget_lock_release_recursive>
 80136b6:	e7f3      	b.n	80136a0 <_vfiprintf_r+0x44>
 80136b8:	2300      	movs	r3, #0
 80136ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80136bc:	2320      	movs	r3, #32
 80136be:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80136c2:	f8cd 800c 	str.w	r8, [sp, #12]
 80136c6:	2330      	movs	r3, #48	@ 0x30
 80136c8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8013878 <_vfiprintf_r+0x21c>
 80136cc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80136d0:	f04f 0901 	mov.w	r9, #1
 80136d4:	4623      	mov	r3, r4
 80136d6:	469a      	mov	sl, r3
 80136d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80136dc:	b10a      	cbz	r2, 80136e2 <_vfiprintf_r+0x86>
 80136de:	2a25      	cmp	r2, #37	@ 0x25
 80136e0:	d1f9      	bne.n	80136d6 <_vfiprintf_r+0x7a>
 80136e2:	ebba 0b04 	subs.w	fp, sl, r4
 80136e6:	d00b      	beq.n	8013700 <_vfiprintf_r+0xa4>
 80136e8:	465b      	mov	r3, fp
 80136ea:	4622      	mov	r2, r4
 80136ec:	4629      	mov	r1, r5
 80136ee:	4630      	mov	r0, r6
 80136f0:	f7ff ffa2 	bl	8013638 <__sfputs_r>
 80136f4:	3001      	adds	r0, #1
 80136f6:	f000 80a7 	beq.w	8013848 <_vfiprintf_r+0x1ec>
 80136fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80136fc:	445a      	add	r2, fp
 80136fe:	9209      	str	r2, [sp, #36]	@ 0x24
 8013700:	f89a 3000 	ldrb.w	r3, [sl]
 8013704:	2b00      	cmp	r3, #0
 8013706:	f000 809f 	beq.w	8013848 <_vfiprintf_r+0x1ec>
 801370a:	2300      	movs	r3, #0
 801370c:	f04f 32ff 	mov.w	r2, #4294967295
 8013710:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8013714:	f10a 0a01 	add.w	sl, sl, #1
 8013718:	9304      	str	r3, [sp, #16]
 801371a:	9307      	str	r3, [sp, #28]
 801371c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8013720:	931a      	str	r3, [sp, #104]	@ 0x68
 8013722:	4654      	mov	r4, sl
 8013724:	2205      	movs	r2, #5
 8013726:	f814 1b01 	ldrb.w	r1, [r4], #1
 801372a:	4853      	ldr	r0, [pc, #332]	@ (8013878 <_vfiprintf_r+0x21c>)
 801372c:	f7ec fd28 	bl	8000180 <memchr>
 8013730:	9a04      	ldr	r2, [sp, #16]
 8013732:	b9d8      	cbnz	r0, 801376c <_vfiprintf_r+0x110>
 8013734:	06d1      	lsls	r1, r2, #27
 8013736:	bf44      	itt	mi
 8013738:	2320      	movmi	r3, #32
 801373a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801373e:	0713      	lsls	r3, r2, #28
 8013740:	bf44      	itt	mi
 8013742:	232b      	movmi	r3, #43	@ 0x2b
 8013744:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8013748:	f89a 3000 	ldrb.w	r3, [sl]
 801374c:	2b2a      	cmp	r3, #42	@ 0x2a
 801374e:	d015      	beq.n	801377c <_vfiprintf_r+0x120>
 8013750:	9a07      	ldr	r2, [sp, #28]
 8013752:	4654      	mov	r4, sl
 8013754:	2000      	movs	r0, #0
 8013756:	f04f 0c0a 	mov.w	ip, #10
 801375a:	4621      	mov	r1, r4
 801375c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013760:	3b30      	subs	r3, #48	@ 0x30
 8013762:	2b09      	cmp	r3, #9
 8013764:	d94b      	bls.n	80137fe <_vfiprintf_r+0x1a2>
 8013766:	b1b0      	cbz	r0, 8013796 <_vfiprintf_r+0x13a>
 8013768:	9207      	str	r2, [sp, #28]
 801376a:	e014      	b.n	8013796 <_vfiprintf_r+0x13a>
 801376c:	eba0 0308 	sub.w	r3, r0, r8
 8013770:	fa09 f303 	lsl.w	r3, r9, r3
 8013774:	4313      	orrs	r3, r2
 8013776:	9304      	str	r3, [sp, #16]
 8013778:	46a2      	mov	sl, r4
 801377a:	e7d2      	b.n	8013722 <_vfiprintf_r+0xc6>
 801377c:	9b03      	ldr	r3, [sp, #12]
 801377e:	1d19      	adds	r1, r3, #4
 8013780:	681b      	ldr	r3, [r3, #0]
 8013782:	9103      	str	r1, [sp, #12]
 8013784:	2b00      	cmp	r3, #0
 8013786:	bfbb      	ittet	lt
 8013788:	425b      	neglt	r3, r3
 801378a:	f042 0202 	orrlt.w	r2, r2, #2
 801378e:	9307      	strge	r3, [sp, #28]
 8013790:	9307      	strlt	r3, [sp, #28]
 8013792:	bfb8      	it	lt
 8013794:	9204      	strlt	r2, [sp, #16]
 8013796:	7823      	ldrb	r3, [r4, #0]
 8013798:	2b2e      	cmp	r3, #46	@ 0x2e
 801379a:	d10a      	bne.n	80137b2 <_vfiprintf_r+0x156>
 801379c:	7863      	ldrb	r3, [r4, #1]
 801379e:	2b2a      	cmp	r3, #42	@ 0x2a
 80137a0:	d132      	bne.n	8013808 <_vfiprintf_r+0x1ac>
 80137a2:	9b03      	ldr	r3, [sp, #12]
 80137a4:	1d1a      	adds	r2, r3, #4
 80137a6:	681b      	ldr	r3, [r3, #0]
 80137a8:	9203      	str	r2, [sp, #12]
 80137aa:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80137ae:	3402      	adds	r4, #2
 80137b0:	9305      	str	r3, [sp, #20]
 80137b2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8013888 <_vfiprintf_r+0x22c>
 80137b6:	7821      	ldrb	r1, [r4, #0]
 80137b8:	2203      	movs	r2, #3
 80137ba:	4650      	mov	r0, sl
 80137bc:	f7ec fce0 	bl	8000180 <memchr>
 80137c0:	b138      	cbz	r0, 80137d2 <_vfiprintf_r+0x176>
 80137c2:	9b04      	ldr	r3, [sp, #16]
 80137c4:	eba0 000a 	sub.w	r0, r0, sl
 80137c8:	2240      	movs	r2, #64	@ 0x40
 80137ca:	4082      	lsls	r2, r0
 80137cc:	4313      	orrs	r3, r2
 80137ce:	3401      	adds	r4, #1
 80137d0:	9304      	str	r3, [sp, #16]
 80137d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80137d6:	4829      	ldr	r0, [pc, #164]	@ (801387c <_vfiprintf_r+0x220>)
 80137d8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80137dc:	2206      	movs	r2, #6
 80137de:	f7ec fccf 	bl	8000180 <memchr>
 80137e2:	2800      	cmp	r0, #0
 80137e4:	d03f      	beq.n	8013866 <_vfiprintf_r+0x20a>
 80137e6:	4b26      	ldr	r3, [pc, #152]	@ (8013880 <_vfiprintf_r+0x224>)
 80137e8:	bb1b      	cbnz	r3, 8013832 <_vfiprintf_r+0x1d6>
 80137ea:	9b03      	ldr	r3, [sp, #12]
 80137ec:	3307      	adds	r3, #7
 80137ee:	f023 0307 	bic.w	r3, r3, #7
 80137f2:	3308      	adds	r3, #8
 80137f4:	9303      	str	r3, [sp, #12]
 80137f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137f8:	443b      	add	r3, r7
 80137fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80137fc:	e76a      	b.n	80136d4 <_vfiprintf_r+0x78>
 80137fe:	fb0c 3202 	mla	r2, ip, r2, r3
 8013802:	460c      	mov	r4, r1
 8013804:	2001      	movs	r0, #1
 8013806:	e7a8      	b.n	801375a <_vfiprintf_r+0xfe>
 8013808:	2300      	movs	r3, #0
 801380a:	3401      	adds	r4, #1
 801380c:	9305      	str	r3, [sp, #20]
 801380e:	4619      	mov	r1, r3
 8013810:	f04f 0c0a 	mov.w	ip, #10
 8013814:	4620      	mov	r0, r4
 8013816:	f810 2b01 	ldrb.w	r2, [r0], #1
 801381a:	3a30      	subs	r2, #48	@ 0x30
 801381c:	2a09      	cmp	r2, #9
 801381e:	d903      	bls.n	8013828 <_vfiprintf_r+0x1cc>
 8013820:	2b00      	cmp	r3, #0
 8013822:	d0c6      	beq.n	80137b2 <_vfiprintf_r+0x156>
 8013824:	9105      	str	r1, [sp, #20]
 8013826:	e7c4      	b.n	80137b2 <_vfiprintf_r+0x156>
 8013828:	fb0c 2101 	mla	r1, ip, r1, r2
 801382c:	4604      	mov	r4, r0
 801382e:	2301      	movs	r3, #1
 8013830:	e7f0      	b.n	8013814 <_vfiprintf_r+0x1b8>
 8013832:	ab03      	add	r3, sp, #12
 8013834:	9300      	str	r3, [sp, #0]
 8013836:	462a      	mov	r2, r5
 8013838:	4b12      	ldr	r3, [pc, #72]	@ (8013884 <_vfiprintf_r+0x228>)
 801383a:	a904      	add	r1, sp, #16
 801383c:	4630      	mov	r0, r6
 801383e:	f7fb ff01 	bl	800f644 <_printf_float>
 8013842:	4607      	mov	r7, r0
 8013844:	1c78      	adds	r0, r7, #1
 8013846:	d1d6      	bne.n	80137f6 <_vfiprintf_r+0x19a>
 8013848:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801384a:	07d9      	lsls	r1, r3, #31
 801384c:	d405      	bmi.n	801385a <_vfiprintf_r+0x1fe>
 801384e:	89ab      	ldrh	r3, [r5, #12]
 8013850:	059a      	lsls	r2, r3, #22
 8013852:	d402      	bmi.n	801385a <_vfiprintf_r+0x1fe>
 8013854:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013856:	f7fc fe95 	bl	8010584 <__retarget_lock_release_recursive>
 801385a:	89ab      	ldrh	r3, [r5, #12]
 801385c:	065b      	lsls	r3, r3, #25
 801385e:	f53f af1f 	bmi.w	80136a0 <_vfiprintf_r+0x44>
 8013862:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013864:	e71e      	b.n	80136a4 <_vfiprintf_r+0x48>
 8013866:	ab03      	add	r3, sp, #12
 8013868:	9300      	str	r3, [sp, #0]
 801386a:	462a      	mov	r2, r5
 801386c:	4b05      	ldr	r3, [pc, #20]	@ (8013884 <_vfiprintf_r+0x228>)
 801386e:	a904      	add	r1, sp, #16
 8013870:	4630      	mov	r0, r6
 8013872:	f7fc f97f 	bl	800fb74 <_printf_i>
 8013876:	e7e4      	b.n	8013842 <_vfiprintf_r+0x1e6>
 8013878:	0801862a 	.word	0x0801862a
 801387c:	08018634 	.word	0x08018634
 8013880:	0800f645 	.word	0x0800f645
 8013884:	08013639 	.word	0x08013639
 8013888:	08018630 	.word	0x08018630

0801388c <__swbuf_r>:
 801388c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801388e:	460e      	mov	r6, r1
 8013890:	4614      	mov	r4, r2
 8013892:	4605      	mov	r5, r0
 8013894:	b118      	cbz	r0, 801389e <__swbuf_r+0x12>
 8013896:	6a03      	ldr	r3, [r0, #32]
 8013898:	b90b      	cbnz	r3, 801389e <__swbuf_r+0x12>
 801389a:	f7fc fd23 	bl	80102e4 <__sinit>
 801389e:	69a3      	ldr	r3, [r4, #24]
 80138a0:	60a3      	str	r3, [r4, #8]
 80138a2:	89a3      	ldrh	r3, [r4, #12]
 80138a4:	071a      	lsls	r2, r3, #28
 80138a6:	d501      	bpl.n	80138ac <__swbuf_r+0x20>
 80138a8:	6923      	ldr	r3, [r4, #16]
 80138aa:	b943      	cbnz	r3, 80138be <__swbuf_r+0x32>
 80138ac:	4621      	mov	r1, r4
 80138ae:	4628      	mov	r0, r5
 80138b0:	f000 f82a 	bl	8013908 <__swsetup_r>
 80138b4:	b118      	cbz	r0, 80138be <__swbuf_r+0x32>
 80138b6:	f04f 37ff 	mov.w	r7, #4294967295
 80138ba:	4638      	mov	r0, r7
 80138bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80138be:	6823      	ldr	r3, [r4, #0]
 80138c0:	6922      	ldr	r2, [r4, #16]
 80138c2:	1a98      	subs	r0, r3, r2
 80138c4:	6963      	ldr	r3, [r4, #20]
 80138c6:	b2f6      	uxtb	r6, r6
 80138c8:	4283      	cmp	r3, r0
 80138ca:	4637      	mov	r7, r6
 80138cc:	dc05      	bgt.n	80138da <__swbuf_r+0x4e>
 80138ce:	4621      	mov	r1, r4
 80138d0:	4628      	mov	r0, r5
 80138d2:	f7ff fa53 	bl	8012d7c <_fflush_r>
 80138d6:	2800      	cmp	r0, #0
 80138d8:	d1ed      	bne.n	80138b6 <__swbuf_r+0x2a>
 80138da:	68a3      	ldr	r3, [r4, #8]
 80138dc:	3b01      	subs	r3, #1
 80138de:	60a3      	str	r3, [r4, #8]
 80138e0:	6823      	ldr	r3, [r4, #0]
 80138e2:	1c5a      	adds	r2, r3, #1
 80138e4:	6022      	str	r2, [r4, #0]
 80138e6:	701e      	strb	r6, [r3, #0]
 80138e8:	6962      	ldr	r2, [r4, #20]
 80138ea:	1c43      	adds	r3, r0, #1
 80138ec:	429a      	cmp	r2, r3
 80138ee:	d004      	beq.n	80138fa <__swbuf_r+0x6e>
 80138f0:	89a3      	ldrh	r3, [r4, #12]
 80138f2:	07db      	lsls	r3, r3, #31
 80138f4:	d5e1      	bpl.n	80138ba <__swbuf_r+0x2e>
 80138f6:	2e0a      	cmp	r6, #10
 80138f8:	d1df      	bne.n	80138ba <__swbuf_r+0x2e>
 80138fa:	4621      	mov	r1, r4
 80138fc:	4628      	mov	r0, r5
 80138fe:	f7ff fa3d 	bl	8012d7c <_fflush_r>
 8013902:	2800      	cmp	r0, #0
 8013904:	d0d9      	beq.n	80138ba <__swbuf_r+0x2e>
 8013906:	e7d6      	b.n	80138b6 <__swbuf_r+0x2a>

08013908 <__swsetup_r>:
 8013908:	b538      	push	{r3, r4, r5, lr}
 801390a:	4b29      	ldr	r3, [pc, #164]	@ (80139b0 <__swsetup_r+0xa8>)
 801390c:	4605      	mov	r5, r0
 801390e:	6818      	ldr	r0, [r3, #0]
 8013910:	460c      	mov	r4, r1
 8013912:	b118      	cbz	r0, 801391c <__swsetup_r+0x14>
 8013914:	6a03      	ldr	r3, [r0, #32]
 8013916:	b90b      	cbnz	r3, 801391c <__swsetup_r+0x14>
 8013918:	f7fc fce4 	bl	80102e4 <__sinit>
 801391c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013920:	0719      	lsls	r1, r3, #28
 8013922:	d422      	bmi.n	801396a <__swsetup_r+0x62>
 8013924:	06da      	lsls	r2, r3, #27
 8013926:	d407      	bmi.n	8013938 <__swsetup_r+0x30>
 8013928:	2209      	movs	r2, #9
 801392a:	602a      	str	r2, [r5, #0]
 801392c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8013930:	81a3      	strh	r3, [r4, #12]
 8013932:	f04f 30ff 	mov.w	r0, #4294967295
 8013936:	e033      	b.n	80139a0 <__swsetup_r+0x98>
 8013938:	0758      	lsls	r0, r3, #29
 801393a:	d512      	bpl.n	8013962 <__swsetup_r+0x5a>
 801393c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801393e:	b141      	cbz	r1, 8013952 <__swsetup_r+0x4a>
 8013940:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8013944:	4299      	cmp	r1, r3
 8013946:	d002      	beq.n	801394e <__swsetup_r+0x46>
 8013948:	4628      	mov	r0, r5
 801394a:	f7fd fc89 	bl	8011260 <_free_r>
 801394e:	2300      	movs	r3, #0
 8013950:	6363      	str	r3, [r4, #52]	@ 0x34
 8013952:	89a3      	ldrh	r3, [r4, #12]
 8013954:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8013958:	81a3      	strh	r3, [r4, #12]
 801395a:	2300      	movs	r3, #0
 801395c:	6063      	str	r3, [r4, #4]
 801395e:	6923      	ldr	r3, [r4, #16]
 8013960:	6023      	str	r3, [r4, #0]
 8013962:	89a3      	ldrh	r3, [r4, #12]
 8013964:	f043 0308 	orr.w	r3, r3, #8
 8013968:	81a3      	strh	r3, [r4, #12]
 801396a:	6923      	ldr	r3, [r4, #16]
 801396c:	b94b      	cbnz	r3, 8013982 <__swsetup_r+0x7a>
 801396e:	89a3      	ldrh	r3, [r4, #12]
 8013970:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8013974:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8013978:	d003      	beq.n	8013982 <__swsetup_r+0x7a>
 801397a:	4621      	mov	r1, r4
 801397c:	4628      	mov	r0, r5
 801397e:	f000 f883 	bl	8013a88 <__smakebuf_r>
 8013982:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013986:	f013 0201 	ands.w	r2, r3, #1
 801398a:	d00a      	beq.n	80139a2 <__swsetup_r+0x9a>
 801398c:	2200      	movs	r2, #0
 801398e:	60a2      	str	r2, [r4, #8]
 8013990:	6962      	ldr	r2, [r4, #20]
 8013992:	4252      	negs	r2, r2
 8013994:	61a2      	str	r2, [r4, #24]
 8013996:	6922      	ldr	r2, [r4, #16]
 8013998:	b942      	cbnz	r2, 80139ac <__swsetup_r+0xa4>
 801399a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801399e:	d1c5      	bne.n	801392c <__swsetup_r+0x24>
 80139a0:	bd38      	pop	{r3, r4, r5, pc}
 80139a2:	0799      	lsls	r1, r3, #30
 80139a4:	bf58      	it	pl
 80139a6:	6962      	ldrpl	r2, [r4, #20]
 80139a8:	60a2      	str	r2, [r4, #8]
 80139aa:	e7f4      	b.n	8013996 <__swsetup_r+0x8e>
 80139ac:	2000      	movs	r0, #0
 80139ae:	e7f7      	b.n	80139a0 <__swsetup_r+0x98>
 80139b0:	20000140 	.word	0x20000140

080139b4 <_raise_r>:
 80139b4:	291f      	cmp	r1, #31
 80139b6:	b538      	push	{r3, r4, r5, lr}
 80139b8:	4605      	mov	r5, r0
 80139ba:	460c      	mov	r4, r1
 80139bc:	d904      	bls.n	80139c8 <_raise_r+0x14>
 80139be:	2316      	movs	r3, #22
 80139c0:	6003      	str	r3, [r0, #0]
 80139c2:	f04f 30ff 	mov.w	r0, #4294967295
 80139c6:	bd38      	pop	{r3, r4, r5, pc}
 80139c8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80139ca:	b112      	cbz	r2, 80139d2 <_raise_r+0x1e>
 80139cc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80139d0:	b94b      	cbnz	r3, 80139e6 <_raise_r+0x32>
 80139d2:	4628      	mov	r0, r5
 80139d4:	f000 f830 	bl	8013a38 <_getpid_r>
 80139d8:	4622      	mov	r2, r4
 80139da:	4601      	mov	r1, r0
 80139dc:	4628      	mov	r0, r5
 80139de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80139e2:	f000 b817 	b.w	8013a14 <_kill_r>
 80139e6:	2b01      	cmp	r3, #1
 80139e8:	d00a      	beq.n	8013a00 <_raise_r+0x4c>
 80139ea:	1c59      	adds	r1, r3, #1
 80139ec:	d103      	bne.n	80139f6 <_raise_r+0x42>
 80139ee:	2316      	movs	r3, #22
 80139f0:	6003      	str	r3, [r0, #0]
 80139f2:	2001      	movs	r0, #1
 80139f4:	e7e7      	b.n	80139c6 <_raise_r+0x12>
 80139f6:	2100      	movs	r1, #0
 80139f8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80139fc:	4620      	mov	r0, r4
 80139fe:	4798      	blx	r3
 8013a00:	2000      	movs	r0, #0
 8013a02:	e7e0      	b.n	80139c6 <_raise_r+0x12>

08013a04 <raise>:
 8013a04:	4b02      	ldr	r3, [pc, #8]	@ (8013a10 <raise+0xc>)
 8013a06:	4601      	mov	r1, r0
 8013a08:	6818      	ldr	r0, [r3, #0]
 8013a0a:	f7ff bfd3 	b.w	80139b4 <_raise_r>
 8013a0e:	bf00      	nop
 8013a10:	20000140 	.word	0x20000140

08013a14 <_kill_r>:
 8013a14:	b538      	push	{r3, r4, r5, lr}
 8013a16:	4d07      	ldr	r5, [pc, #28]	@ (8013a34 <_kill_r+0x20>)
 8013a18:	2300      	movs	r3, #0
 8013a1a:	4604      	mov	r4, r0
 8013a1c:	4608      	mov	r0, r1
 8013a1e:	4611      	mov	r1, r2
 8013a20:	602b      	str	r3, [r5, #0]
 8013a22:	f7f1 fa83 	bl	8004f2c <_kill>
 8013a26:	1c43      	adds	r3, r0, #1
 8013a28:	d102      	bne.n	8013a30 <_kill_r+0x1c>
 8013a2a:	682b      	ldr	r3, [r5, #0]
 8013a2c:	b103      	cbz	r3, 8013a30 <_kill_r+0x1c>
 8013a2e:	6023      	str	r3, [r4, #0]
 8013a30:	bd38      	pop	{r3, r4, r5, pc}
 8013a32:	bf00      	nop
 8013a34:	20005b84 	.word	0x20005b84

08013a38 <_getpid_r>:
 8013a38:	f7f1 ba76 	b.w	8004f28 <_getpid>

08013a3c <__swhatbuf_r>:
 8013a3c:	b570      	push	{r4, r5, r6, lr}
 8013a3e:	460c      	mov	r4, r1
 8013a40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8013a44:	2900      	cmp	r1, #0
 8013a46:	b096      	sub	sp, #88	@ 0x58
 8013a48:	4615      	mov	r5, r2
 8013a4a:	461e      	mov	r6, r3
 8013a4c:	da0d      	bge.n	8013a6a <__swhatbuf_r+0x2e>
 8013a4e:	89a3      	ldrh	r3, [r4, #12]
 8013a50:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8013a54:	f04f 0100 	mov.w	r1, #0
 8013a58:	bf14      	ite	ne
 8013a5a:	2340      	movne	r3, #64	@ 0x40
 8013a5c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8013a60:	2000      	movs	r0, #0
 8013a62:	6031      	str	r1, [r6, #0]
 8013a64:	602b      	str	r3, [r5, #0]
 8013a66:	b016      	add	sp, #88	@ 0x58
 8013a68:	bd70      	pop	{r4, r5, r6, pc}
 8013a6a:	466a      	mov	r2, sp
 8013a6c:	f000 f848 	bl	8013b00 <_fstat_r>
 8013a70:	2800      	cmp	r0, #0
 8013a72:	dbec      	blt.n	8013a4e <__swhatbuf_r+0x12>
 8013a74:	9901      	ldr	r1, [sp, #4]
 8013a76:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8013a7a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8013a7e:	4259      	negs	r1, r3
 8013a80:	4159      	adcs	r1, r3
 8013a82:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8013a86:	e7eb      	b.n	8013a60 <__swhatbuf_r+0x24>

08013a88 <__smakebuf_r>:
 8013a88:	898b      	ldrh	r3, [r1, #12]
 8013a8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013a8c:	079d      	lsls	r5, r3, #30
 8013a8e:	4606      	mov	r6, r0
 8013a90:	460c      	mov	r4, r1
 8013a92:	d507      	bpl.n	8013aa4 <__smakebuf_r+0x1c>
 8013a94:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8013a98:	6023      	str	r3, [r4, #0]
 8013a9a:	6123      	str	r3, [r4, #16]
 8013a9c:	2301      	movs	r3, #1
 8013a9e:	6163      	str	r3, [r4, #20]
 8013aa0:	b003      	add	sp, #12
 8013aa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013aa4:	ab01      	add	r3, sp, #4
 8013aa6:	466a      	mov	r2, sp
 8013aa8:	f7ff ffc8 	bl	8013a3c <__swhatbuf_r>
 8013aac:	9f00      	ldr	r7, [sp, #0]
 8013aae:	4605      	mov	r5, r0
 8013ab0:	4639      	mov	r1, r7
 8013ab2:	4630      	mov	r0, r6
 8013ab4:	f7fd fc48 	bl	8011348 <_malloc_r>
 8013ab8:	b948      	cbnz	r0, 8013ace <__smakebuf_r+0x46>
 8013aba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013abe:	059a      	lsls	r2, r3, #22
 8013ac0:	d4ee      	bmi.n	8013aa0 <__smakebuf_r+0x18>
 8013ac2:	f023 0303 	bic.w	r3, r3, #3
 8013ac6:	f043 0302 	orr.w	r3, r3, #2
 8013aca:	81a3      	strh	r3, [r4, #12]
 8013acc:	e7e2      	b.n	8013a94 <__smakebuf_r+0xc>
 8013ace:	89a3      	ldrh	r3, [r4, #12]
 8013ad0:	6020      	str	r0, [r4, #0]
 8013ad2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8013ad6:	81a3      	strh	r3, [r4, #12]
 8013ad8:	9b01      	ldr	r3, [sp, #4]
 8013ada:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8013ade:	b15b      	cbz	r3, 8013af8 <__smakebuf_r+0x70>
 8013ae0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8013ae4:	4630      	mov	r0, r6
 8013ae6:	f000 f81d 	bl	8013b24 <_isatty_r>
 8013aea:	b128      	cbz	r0, 8013af8 <__smakebuf_r+0x70>
 8013aec:	89a3      	ldrh	r3, [r4, #12]
 8013aee:	f023 0303 	bic.w	r3, r3, #3
 8013af2:	f043 0301 	orr.w	r3, r3, #1
 8013af6:	81a3      	strh	r3, [r4, #12]
 8013af8:	89a3      	ldrh	r3, [r4, #12]
 8013afa:	431d      	orrs	r5, r3
 8013afc:	81a5      	strh	r5, [r4, #12]
 8013afe:	e7cf      	b.n	8013aa0 <__smakebuf_r+0x18>

08013b00 <_fstat_r>:
 8013b00:	b538      	push	{r3, r4, r5, lr}
 8013b02:	4d07      	ldr	r5, [pc, #28]	@ (8013b20 <_fstat_r+0x20>)
 8013b04:	2300      	movs	r3, #0
 8013b06:	4604      	mov	r4, r0
 8013b08:	4608      	mov	r0, r1
 8013b0a:	4611      	mov	r1, r2
 8013b0c:	602b      	str	r3, [r5, #0]
 8013b0e:	f7f1 fa3b 	bl	8004f88 <_fstat>
 8013b12:	1c43      	adds	r3, r0, #1
 8013b14:	d102      	bne.n	8013b1c <_fstat_r+0x1c>
 8013b16:	682b      	ldr	r3, [r5, #0]
 8013b18:	b103      	cbz	r3, 8013b1c <_fstat_r+0x1c>
 8013b1a:	6023      	str	r3, [r4, #0]
 8013b1c:	bd38      	pop	{r3, r4, r5, pc}
 8013b1e:	bf00      	nop
 8013b20:	20005b84 	.word	0x20005b84

08013b24 <_isatty_r>:
 8013b24:	b538      	push	{r3, r4, r5, lr}
 8013b26:	4d06      	ldr	r5, [pc, #24]	@ (8013b40 <_isatty_r+0x1c>)
 8013b28:	2300      	movs	r3, #0
 8013b2a:	4604      	mov	r4, r0
 8013b2c:	4608      	mov	r0, r1
 8013b2e:	602b      	str	r3, [r5, #0]
 8013b30:	f7f1 fa30 	bl	8004f94 <_isatty>
 8013b34:	1c43      	adds	r3, r0, #1
 8013b36:	d102      	bne.n	8013b3e <_isatty_r+0x1a>
 8013b38:	682b      	ldr	r3, [r5, #0]
 8013b3a:	b103      	cbz	r3, 8013b3e <_isatty_r+0x1a>
 8013b3c:	6023      	str	r3, [r4, #0]
 8013b3e:	bd38      	pop	{r3, r4, r5, pc}
 8013b40:	20005b84 	.word	0x20005b84
 8013b44:	00000000 	.word	0x00000000

08013b48 <log>:
 8013b48:	b538      	push	{r3, r4, r5, lr}
 8013b4a:	ed2d 8b02 	vpush	{d8}
 8013b4e:	ec55 4b10 	vmov	r4, r5, d0
 8013b52:	f000 fb49 	bl	80141e8 <__ieee754_log>
 8013b56:	4622      	mov	r2, r4
 8013b58:	462b      	mov	r3, r5
 8013b5a:	4620      	mov	r0, r4
 8013b5c:	4629      	mov	r1, r5
 8013b5e:	eeb0 8a40 	vmov.f32	s16, s0
 8013b62:	eef0 8a60 	vmov.f32	s17, s1
 8013b66:	f7ec ffb9 	bl	8000adc <__aeabi_dcmpun>
 8013b6a:	b998      	cbnz	r0, 8013b94 <log+0x4c>
 8013b6c:	2200      	movs	r2, #0
 8013b6e:	2300      	movs	r3, #0
 8013b70:	4620      	mov	r0, r4
 8013b72:	4629      	mov	r1, r5
 8013b74:	f7ec ffa8 	bl	8000ac8 <__aeabi_dcmpgt>
 8013b78:	b960      	cbnz	r0, 8013b94 <log+0x4c>
 8013b7a:	2200      	movs	r2, #0
 8013b7c:	2300      	movs	r3, #0
 8013b7e:	4620      	mov	r0, r4
 8013b80:	4629      	mov	r1, r5
 8013b82:	f7ec ff79 	bl	8000a78 <__aeabi_dcmpeq>
 8013b86:	b160      	cbz	r0, 8013ba2 <log+0x5a>
 8013b88:	f7fc fcd0 	bl	801052c <__errno>
 8013b8c:	ed9f 8b0a 	vldr	d8, [pc, #40]	@ 8013bb8 <log+0x70>
 8013b90:	2322      	movs	r3, #34	@ 0x22
 8013b92:	6003      	str	r3, [r0, #0]
 8013b94:	eeb0 0a48 	vmov.f32	s0, s16
 8013b98:	eef0 0a68 	vmov.f32	s1, s17
 8013b9c:	ecbd 8b02 	vpop	{d8}
 8013ba0:	bd38      	pop	{r3, r4, r5, pc}
 8013ba2:	f7fc fcc3 	bl	801052c <__errno>
 8013ba6:	ecbd 8b02 	vpop	{d8}
 8013baa:	2321      	movs	r3, #33	@ 0x21
 8013bac:	6003      	str	r3, [r0, #0]
 8013bae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013bb2:	4803      	ldr	r0, [pc, #12]	@ (8013bc0 <log+0x78>)
 8013bb4:	f7ff b948 	b.w	8012e48 <nan>
 8013bb8:	00000000 	.word	0x00000000
 8013bbc:	fff00000 	.word	0xfff00000
 8013bc0:	0801867e 	.word	0x0801867e
 8013bc4:	00000000 	.word	0x00000000

08013bc8 <cos>:
 8013bc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013bca:	ec53 2b10 	vmov	r2, r3, d0
 8013bce:	4826      	ldr	r0, [pc, #152]	@ (8013c68 <cos+0xa0>)
 8013bd0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8013bd4:	4281      	cmp	r1, r0
 8013bd6:	d806      	bhi.n	8013be6 <cos+0x1e>
 8013bd8:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 8013c60 <cos+0x98>
 8013bdc:	b005      	add	sp, #20
 8013bde:	f85d eb04 	ldr.w	lr, [sp], #4
 8013be2:	f000 b97d 	b.w	8013ee0 <__kernel_cos>
 8013be6:	4821      	ldr	r0, [pc, #132]	@ (8013c6c <cos+0xa4>)
 8013be8:	4281      	cmp	r1, r0
 8013bea:	d908      	bls.n	8013bfe <cos+0x36>
 8013bec:	4610      	mov	r0, r2
 8013bee:	4619      	mov	r1, r3
 8013bf0:	f7ec fb22 	bl	8000238 <__aeabi_dsub>
 8013bf4:	ec41 0b10 	vmov	d0, r0, r1
 8013bf8:	b005      	add	sp, #20
 8013bfa:	f85d fb04 	ldr.w	pc, [sp], #4
 8013bfe:	4668      	mov	r0, sp
 8013c00:	f000 fcaa 	bl	8014558 <__ieee754_rem_pio2>
 8013c04:	f000 0003 	and.w	r0, r0, #3
 8013c08:	2801      	cmp	r0, #1
 8013c0a:	d00b      	beq.n	8013c24 <cos+0x5c>
 8013c0c:	2802      	cmp	r0, #2
 8013c0e:	d015      	beq.n	8013c3c <cos+0x74>
 8013c10:	b9d8      	cbnz	r0, 8013c4a <cos+0x82>
 8013c12:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c16:	ed9d 0b00 	vldr	d0, [sp]
 8013c1a:	f000 f961 	bl	8013ee0 <__kernel_cos>
 8013c1e:	ec51 0b10 	vmov	r0, r1, d0
 8013c22:	e7e7      	b.n	8013bf4 <cos+0x2c>
 8013c24:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c28:	ed9d 0b00 	vldr	d0, [sp]
 8013c2c:	f000 fa20 	bl	8014070 <__kernel_sin>
 8013c30:	ec53 2b10 	vmov	r2, r3, d0
 8013c34:	4610      	mov	r0, r2
 8013c36:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8013c3a:	e7db      	b.n	8013bf4 <cos+0x2c>
 8013c3c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c40:	ed9d 0b00 	vldr	d0, [sp]
 8013c44:	f000 f94c 	bl	8013ee0 <__kernel_cos>
 8013c48:	e7f2      	b.n	8013c30 <cos+0x68>
 8013c4a:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013c4e:	ed9d 0b00 	vldr	d0, [sp]
 8013c52:	2001      	movs	r0, #1
 8013c54:	f000 fa0c 	bl	8014070 <__kernel_sin>
 8013c58:	e7e1      	b.n	8013c1e <cos+0x56>
 8013c5a:	bf00      	nop
 8013c5c:	f3af 8000 	nop.w
	...
 8013c68:	3fe921fb 	.word	0x3fe921fb
 8013c6c:	7fefffff 	.word	0x7fefffff

08013c70 <sin>:
 8013c70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013c72:	ec53 2b10 	vmov	r2, r3, d0
 8013c76:	4826      	ldr	r0, [pc, #152]	@ (8013d10 <sin+0xa0>)
 8013c78:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8013c7c:	4281      	cmp	r1, r0
 8013c7e:	d807      	bhi.n	8013c90 <sin+0x20>
 8013c80:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 8013d08 <sin+0x98>
 8013c84:	2000      	movs	r0, #0
 8013c86:	b005      	add	sp, #20
 8013c88:	f85d eb04 	ldr.w	lr, [sp], #4
 8013c8c:	f000 b9f0 	b.w	8014070 <__kernel_sin>
 8013c90:	4820      	ldr	r0, [pc, #128]	@ (8013d14 <sin+0xa4>)
 8013c92:	4281      	cmp	r1, r0
 8013c94:	d908      	bls.n	8013ca8 <sin+0x38>
 8013c96:	4610      	mov	r0, r2
 8013c98:	4619      	mov	r1, r3
 8013c9a:	f7ec facd 	bl	8000238 <__aeabi_dsub>
 8013c9e:	ec41 0b10 	vmov	d0, r0, r1
 8013ca2:	b005      	add	sp, #20
 8013ca4:	f85d fb04 	ldr.w	pc, [sp], #4
 8013ca8:	4668      	mov	r0, sp
 8013caa:	f000 fc55 	bl	8014558 <__ieee754_rem_pio2>
 8013cae:	f000 0003 	and.w	r0, r0, #3
 8013cb2:	2801      	cmp	r0, #1
 8013cb4:	d00c      	beq.n	8013cd0 <sin+0x60>
 8013cb6:	2802      	cmp	r0, #2
 8013cb8:	d011      	beq.n	8013cde <sin+0x6e>
 8013cba:	b9e8      	cbnz	r0, 8013cf8 <sin+0x88>
 8013cbc:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013cc0:	ed9d 0b00 	vldr	d0, [sp]
 8013cc4:	2001      	movs	r0, #1
 8013cc6:	f000 f9d3 	bl	8014070 <__kernel_sin>
 8013cca:	ec51 0b10 	vmov	r0, r1, d0
 8013cce:	e7e6      	b.n	8013c9e <sin+0x2e>
 8013cd0:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013cd4:	ed9d 0b00 	vldr	d0, [sp]
 8013cd8:	f000 f902 	bl	8013ee0 <__kernel_cos>
 8013cdc:	e7f5      	b.n	8013cca <sin+0x5a>
 8013cde:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013ce2:	ed9d 0b00 	vldr	d0, [sp]
 8013ce6:	2001      	movs	r0, #1
 8013ce8:	f000 f9c2 	bl	8014070 <__kernel_sin>
 8013cec:	ec53 2b10 	vmov	r2, r3, d0
 8013cf0:	4610      	mov	r0, r2
 8013cf2:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8013cf6:	e7d2      	b.n	8013c9e <sin+0x2e>
 8013cf8:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013cfc:	ed9d 0b00 	vldr	d0, [sp]
 8013d00:	f000 f8ee 	bl	8013ee0 <__kernel_cos>
 8013d04:	e7f2      	b.n	8013cec <sin+0x7c>
 8013d06:	bf00      	nop
	...
 8013d10:	3fe921fb 	.word	0x3fe921fb
 8013d14:	7fefffff 	.word	0x7fefffff

08013d18 <powf>:
 8013d18:	b508      	push	{r3, lr}
 8013d1a:	ed2d 8b04 	vpush	{d8-d9}
 8013d1e:	eeb0 8a60 	vmov.f32	s16, s1
 8013d22:	eeb0 9a40 	vmov.f32	s18, s0
 8013d26:	f000 fe4f 	bl	80149c8 <__ieee754_powf>
 8013d2a:	eeb4 8a48 	vcmp.f32	s16, s16
 8013d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d32:	eef0 8a40 	vmov.f32	s17, s0
 8013d36:	d63e      	bvs.n	8013db6 <powf+0x9e>
 8013d38:	eeb5 9a40 	vcmp.f32	s18, #0.0
 8013d3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d40:	d112      	bne.n	8013d68 <powf+0x50>
 8013d42:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8013d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d4a:	d039      	beq.n	8013dc0 <powf+0xa8>
 8013d4c:	eeb0 0a48 	vmov.f32	s0, s16
 8013d50:	f000 f839 	bl	8013dc6 <finitef>
 8013d54:	b378      	cbz	r0, 8013db6 <powf+0x9e>
 8013d56:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013d5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d5e:	d52a      	bpl.n	8013db6 <powf+0x9e>
 8013d60:	f7fc fbe4 	bl	801052c <__errno>
 8013d64:	2322      	movs	r3, #34	@ 0x22
 8013d66:	e014      	b.n	8013d92 <powf+0x7a>
 8013d68:	f000 f82d 	bl	8013dc6 <finitef>
 8013d6c:	b998      	cbnz	r0, 8013d96 <powf+0x7e>
 8013d6e:	eeb0 0a49 	vmov.f32	s0, s18
 8013d72:	f000 f828 	bl	8013dc6 <finitef>
 8013d76:	b170      	cbz	r0, 8013d96 <powf+0x7e>
 8013d78:	eeb0 0a48 	vmov.f32	s0, s16
 8013d7c:	f000 f823 	bl	8013dc6 <finitef>
 8013d80:	b148      	cbz	r0, 8013d96 <powf+0x7e>
 8013d82:	eef4 8a68 	vcmp.f32	s17, s17
 8013d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d8a:	d7e9      	bvc.n	8013d60 <powf+0x48>
 8013d8c:	f7fc fbce 	bl	801052c <__errno>
 8013d90:	2321      	movs	r3, #33	@ 0x21
 8013d92:	6003      	str	r3, [r0, #0]
 8013d94:	e00f      	b.n	8013db6 <powf+0x9e>
 8013d96:	eef5 8a40 	vcmp.f32	s17, #0.0
 8013d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d9e:	d10a      	bne.n	8013db6 <powf+0x9e>
 8013da0:	eeb0 0a49 	vmov.f32	s0, s18
 8013da4:	f000 f80f 	bl	8013dc6 <finitef>
 8013da8:	b128      	cbz	r0, 8013db6 <powf+0x9e>
 8013daa:	eeb0 0a48 	vmov.f32	s0, s16
 8013dae:	f000 f80a 	bl	8013dc6 <finitef>
 8013db2:	2800      	cmp	r0, #0
 8013db4:	d1d4      	bne.n	8013d60 <powf+0x48>
 8013db6:	eeb0 0a68 	vmov.f32	s0, s17
 8013dba:	ecbd 8b04 	vpop	{d8-d9}
 8013dbe:	bd08      	pop	{r3, pc}
 8013dc0:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 8013dc4:	e7f7      	b.n	8013db6 <powf+0x9e>

08013dc6 <finitef>:
 8013dc6:	ee10 3a10 	vmov	r3, s0
 8013dca:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 8013dce:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 8013dd2:	bfac      	ite	ge
 8013dd4:	2000      	movge	r0, #0
 8013dd6:	2001      	movlt	r0, #1
 8013dd8:	4770      	bx	lr

08013dda <cosl>:
 8013dda:	f7ff bef5 	b.w	8013bc8 <cos>

08013dde <sinl>:
 8013dde:	f7ff bf47 	b.w	8013c70 <sin>

08013de2 <acosl>:
 8013de2:	f000 bdb5 	b.w	8014950 <acos>
	...

08013de8 <floor>:
 8013de8:	ec51 0b10 	vmov	r0, r1, d0
 8013dec:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8013df0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013df4:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8013df8:	2e13      	cmp	r6, #19
 8013dfa:	460c      	mov	r4, r1
 8013dfc:	4605      	mov	r5, r0
 8013dfe:	4680      	mov	r8, r0
 8013e00:	dc34      	bgt.n	8013e6c <floor+0x84>
 8013e02:	2e00      	cmp	r6, #0
 8013e04:	da17      	bge.n	8013e36 <floor+0x4e>
 8013e06:	a332      	add	r3, pc, #200	@ (adr r3, 8013ed0 <floor+0xe8>)
 8013e08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e0c:	f7ec fa16 	bl	800023c <__adddf3>
 8013e10:	2200      	movs	r2, #0
 8013e12:	2300      	movs	r3, #0
 8013e14:	f7ec fe58 	bl	8000ac8 <__aeabi_dcmpgt>
 8013e18:	b150      	cbz	r0, 8013e30 <floor+0x48>
 8013e1a:	2c00      	cmp	r4, #0
 8013e1c:	da55      	bge.n	8013eca <floor+0xe2>
 8013e1e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8013e22:	432c      	orrs	r4, r5
 8013e24:	2500      	movs	r5, #0
 8013e26:	42ac      	cmp	r4, r5
 8013e28:	4c2b      	ldr	r4, [pc, #172]	@ (8013ed8 <floor+0xf0>)
 8013e2a:	bf08      	it	eq
 8013e2c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8013e30:	4621      	mov	r1, r4
 8013e32:	4628      	mov	r0, r5
 8013e34:	e023      	b.n	8013e7e <floor+0x96>
 8013e36:	4f29      	ldr	r7, [pc, #164]	@ (8013edc <floor+0xf4>)
 8013e38:	4137      	asrs	r7, r6
 8013e3a:	ea01 0307 	and.w	r3, r1, r7
 8013e3e:	4303      	orrs	r3, r0
 8013e40:	d01d      	beq.n	8013e7e <floor+0x96>
 8013e42:	a323      	add	r3, pc, #140	@ (adr r3, 8013ed0 <floor+0xe8>)
 8013e44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e48:	f7ec f9f8 	bl	800023c <__adddf3>
 8013e4c:	2200      	movs	r2, #0
 8013e4e:	2300      	movs	r3, #0
 8013e50:	f7ec fe3a 	bl	8000ac8 <__aeabi_dcmpgt>
 8013e54:	2800      	cmp	r0, #0
 8013e56:	d0eb      	beq.n	8013e30 <floor+0x48>
 8013e58:	2c00      	cmp	r4, #0
 8013e5a:	bfbe      	ittt	lt
 8013e5c:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8013e60:	4133      	asrlt	r3, r6
 8013e62:	18e4      	addlt	r4, r4, r3
 8013e64:	ea24 0407 	bic.w	r4, r4, r7
 8013e68:	2500      	movs	r5, #0
 8013e6a:	e7e1      	b.n	8013e30 <floor+0x48>
 8013e6c:	2e33      	cmp	r6, #51	@ 0x33
 8013e6e:	dd0a      	ble.n	8013e86 <floor+0x9e>
 8013e70:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013e74:	d103      	bne.n	8013e7e <floor+0x96>
 8013e76:	4602      	mov	r2, r0
 8013e78:	460b      	mov	r3, r1
 8013e7a:	f7ec f9df 	bl	800023c <__adddf3>
 8013e7e:	ec41 0b10 	vmov	d0, r0, r1
 8013e82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e86:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8013e8a:	f04f 37ff 	mov.w	r7, #4294967295
 8013e8e:	40df      	lsrs	r7, r3
 8013e90:	4207      	tst	r7, r0
 8013e92:	d0f4      	beq.n	8013e7e <floor+0x96>
 8013e94:	a30e      	add	r3, pc, #56	@ (adr r3, 8013ed0 <floor+0xe8>)
 8013e96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e9a:	f7ec f9cf 	bl	800023c <__adddf3>
 8013e9e:	2200      	movs	r2, #0
 8013ea0:	2300      	movs	r3, #0
 8013ea2:	f7ec fe11 	bl	8000ac8 <__aeabi_dcmpgt>
 8013ea6:	2800      	cmp	r0, #0
 8013ea8:	d0c2      	beq.n	8013e30 <floor+0x48>
 8013eaa:	2c00      	cmp	r4, #0
 8013eac:	da0a      	bge.n	8013ec4 <floor+0xdc>
 8013eae:	2e14      	cmp	r6, #20
 8013eb0:	d101      	bne.n	8013eb6 <floor+0xce>
 8013eb2:	3401      	adds	r4, #1
 8013eb4:	e006      	b.n	8013ec4 <floor+0xdc>
 8013eb6:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8013eba:	2301      	movs	r3, #1
 8013ebc:	40b3      	lsls	r3, r6
 8013ebe:	441d      	add	r5, r3
 8013ec0:	4545      	cmp	r5, r8
 8013ec2:	d3f6      	bcc.n	8013eb2 <floor+0xca>
 8013ec4:	ea25 0507 	bic.w	r5, r5, r7
 8013ec8:	e7b2      	b.n	8013e30 <floor+0x48>
 8013eca:	2500      	movs	r5, #0
 8013ecc:	462c      	mov	r4, r5
 8013ece:	e7af      	b.n	8013e30 <floor+0x48>
 8013ed0:	8800759c 	.word	0x8800759c
 8013ed4:	7e37e43c 	.word	0x7e37e43c
 8013ed8:	bff00000 	.word	0xbff00000
 8013edc:	000fffff 	.word	0x000fffff

08013ee0 <__kernel_cos>:
 8013ee0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ee4:	ec57 6b10 	vmov	r6, r7, d0
 8013ee8:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8013eec:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 8013ef0:	ed8d 1b00 	vstr	d1, [sp]
 8013ef4:	d206      	bcs.n	8013f04 <__kernel_cos+0x24>
 8013ef6:	4630      	mov	r0, r6
 8013ef8:	4639      	mov	r1, r7
 8013efa:	f7ec fe05 	bl	8000b08 <__aeabi_d2iz>
 8013efe:	2800      	cmp	r0, #0
 8013f00:	f000 8088 	beq.w	8014014 <__kernel_cos+0x134>
 8013f04:	4632      	mov	r2, r6
 8013f06:	463b      	mov	r3, r7
 8013f08:	4630      	mov	r0, r6
 8013f0a:	4639      	mov	r1, r7
 8013f0c:	f7ec fb4c 	bl	80005a8 <__aeabi_dmul>
 8013f10:	4b51      	ldr	r3, [pc, #324]	@ (8014058 <__kernel_cos+0x178>)
 8013f12:	2200      	movs	r2, #0
 8013f14:	4604      	mov	r4, r0
 8013f16:	460d      	mov	r5, r1
 8013f18:	f7ec fb46 	bl	80005a8 <__aeabi_dmul>
 8013f1c:	a340      	add	r3, pc, #256	@ (adr r3, 8014020 <__kernel_cos+0x140>)
 8013f1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f22:	4682      	mov	sl, r0
 8013f24:	468b      	mov	fp, r1
 8013f26:	4620      	mov	r0, r4
 8013f28:	4629      	mov	r1, r5
 8013f2a:	f7ec fb3d 	bl	80005a8 <__aeabi_dmul>
 8013f2e:	a33e      	add	r3, pc, #248	@ (adr r3, 8014028 <__kernel_cos+0x148>)
 8013f30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f34:	f7ec f982 	bl	800023c <__adddf3>
 8013f38:	4622      	mov	r2, r4
 8013f3a:	462b      	mov	r3, r5
 8013f3c:	f7ec fb34 	bl	80005a8 <__aeabi_dmul>
 8013f40:	a33b      	add	r3, pc, #236	@ (adr r3, 8014030 <__kernel_cos+0x150>)
 8013f42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f46:	f7ec f977 	bl	8000238 <__aeabi_dsub>
 8013f4a:	4622      	mov	r2, r4
 8013f4c:	462b      	mov	r3, r5
 8013f4e:	f7ec fb2b 	bl	80005a8 <__aeabi_dmul>
 8013f52:	a339      	add	r3, pc, #228	@ (adr r3, 8014038 <__kernel_cos+0x158>)
 8013f54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f58:	f7ec f970 	bl	800023c <__adddf3>
 8013f5c:	4622      	mov	r2, r4
 8013f5e:	462b      	mov	r3, r5
 8013f60:	f7ec fb22 	bl	80005a8 <__aeabi_dmul>
 8013f64:	a336      	add	r3, pc, #216	@ (adr r3, 8014040 <__kernel_cos+0x160>)
 8013f66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f6a:	f7ec f965 	bl	8000238 <__aeabi_dsub>
 8013f6e:	4622      	mov	r2, r4
 8013f70:	462b      	mov	r3, r5
 8013f72:	f7ec fb19 	bl	80005a8 <__aeabi_dmul>
 8013f76:	a334      	add	r3, pc, #208	@ (adr r3, 8014048 <__kernel_cos+0x168>)
 8013f78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013f7c:	f7ec f95e 	bl	800023c <__adddf3>
 8013f80:	4622      	mov	r2, r4
 8013f82:	462b      	mov	r3, r5
 8013f84:	f7ec fb10 	bl	80005a8 <__aeabi_dmul>
 8013f88:	4622      	mov	r2, r4
 8013f8a:	462b      	mov	r3, r5
 8013f8c:	f7ec fb0c 	bl	80005a8 <__aeabi_dmul>
 8013f90:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013f94:	4604      	mov	r4, r0
 8013f96:	460d      	mov	r5, r1
 8013f98:	4630      	mov	r0, r6
 8013f9a:	4639      	mov	r1, r7
 8013f9c:	f7ec fb04 	bl	80005a8 <__aeabi_dmul>
 8013fa0:	460b      	mov	r3, r1
 8013fa2:	4602      	mov	r2, r0
 8013fa4:	4629      	mov	r1, r5
 8013fa6:	4620      	mov	r0, r4
 8013fa8:	f7ec f946 	bl	8000238 <__aeabi_dsub>
 8013fac:	4b2b      	ldr	r3, [pc, #172]	@ (801405c <__kernel_cos+0x17c>)
 8013fae:	4598      	cmp	r8, r3
 8013fb0:	4606      	mov	r6, r0
 8013fb2:	460f      	mov	r7, r1
 8013fb4:	d810      	bhi.n	8013fd8 <__kernel_cos+0xf8>
 8013fb6:	4602      	mov	r2, r0
 8013fb8:	460b      	mov	r3, r1
 8013fba:	4650      	mov	r0, sl
 8013fbc:	4659      	mov	r1, fp
 8013fbe:	f7ec f93b 	bl	8000238 <__aeabi_dsub>
 8013fc2:	460b      	mov	r3, r1
 8013fc4:	4926      	ldr	r1, [pc, #152]	@ (8014060 <__kernel_cos+0x180>)
 8013fc6:	4602      	mov	r2, r0
 8013fc8:	2000      	movs	r0, #0
 8013fca:	f7ec f935 	bl	8000238 <__aeabi_dsub>
 8013fce:	ec41 0b10 	vmov	d0, r0, r1
 8013fd2:	b003      	add	sp, #12
 8013fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fd8:	4b22      	ldr	r3, [pc, #136]	@ (8014064 <__kernel_cos+0x184>)
 8013fda:	4921      	ldr	r1, [pc, #132]	@ (8014060 <__kernel_cos+0x180>)
 8013fdc:	4598      	cmp	r8, r3
 8013fde:	bf8c      	ite	hi
 8013fe0:	4d21      	ldrhi	r5, [pc, #132]	@ (8014068 <__kernel_cos+0x188>)
 8013fe2:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 8013fe6:	2400      	movs	r4, #0
 8013fe8:	4622      	mov	r2, r4
 8013fea:	462b      	mov	r3, r5
 8013fec:	2000      	movs	r0, #0
 8013fee:	f7ec f923 	bl	8000238 <__aeabi_dsub>
 8013ff2:	4622      	mov	r2, r4
 8013ff4:	4680      	mov	r8, r0
 8013ff6:	4689      	mov	r9, r1
 8013ff8:	462b      	mov	r3, r5
 8013ffa:	4650      	mov	r0, sl
 8013ffc:	4659      	mov	r1, fp
 8013ffe:	f7ec f91b 	bl	8000238 <__aeabi_dsub>
 8014002:	4632      	mov	r2, r6
 8014004:	463b      	mov	r3, r7
 8014006:	f7ec f917 	bl	8000238 <__aeabi_dsub>
 801400a:	4602      	mov	r2, r0
 801400c:	460b      	mov	r3, r1
 801400e:	4640      	mov	r0, r8
 8014010:	4649      	mov	r1, r9
 8014012:	e7da      	b.n	8013fca <__kernel_cos+0xea>
 8014014:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 8014050 <__kernel_cos+0x170>
 8014018:	e7db      	b.n	8013fd2 <__kernel_cos+0xf2>
 801401a:	bf00      	nop
 801401c:	f3af 8000 	nop.w
 8014020:	be8838d4 	.word	0xbe8838d4
 8014024:	bda8fae9 	.word	0xbda8fae9
 8014028:	bdb4b1c4 	.word	0xbdb4b1c4
 801402c:	3e21ee9e 	.word	0x3e21ee9e
 8014030:	809c52ad 	.word	0x809c52ad
 8014034:	3e927e4f 	.word	0x3e927e4f
 8014038:	19cb1590 	.word	0x19cb1590
 801403c:	3efa01a0 	.word	0x3efa01a0
 8014040:	16c15177 	.word	0x16c15177
 8014044:	3f56c16c 	.word	0x3f56c16c
 8014048:	5555554c 	.word	0x5555554c
 801404c:	3fa55555 	.word	0x3fa55555
 8014050:	00000000 	.word	0x00000000
 8014054:	3ff00000 	.word	0x3ff00000
 8014058:	3fe00000 	.word	0x3fe00000
 801405c:	3fd33332 	.word	0x3fd33332
 8014060:	3ff00000 	.word	0x3ff00000
 8014064:	3fe90000 	.word	0x3fe90000
 8014068:	3fd20000 	.word	0x3fd20000
 801406c:	00000000 	.word	0x00000000

08014070 <__kernel_sin>:
 8014070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014074:	ec55 4b10 	vmov	r4, r5, d0
 8014078:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 801407c:	b085      	sub	sp, #20
 801407e:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 8014082:	ed8d 1b02 	vstr	d1, [sp, #8]
 8014086:	4680      	mov	r8, r0
 8014088:	d205      	bcs.n	8014096 <__kernel_sin+0x26>
 801408a:	4620      	mov	r0, r4
 801408c:	4629      	mov	r1, r5
 801408e:	f7ec fd3b 	bl	8000b08 <__aeabi_d2iz>
 8014092:	2800      	cmp	r0, #0
 8014094:	d052      	beq.n	801413c <__kernel_sin+0xcc>
 8014096:	4622      	mov	r2, r4
 8014098:	462b      	mov	r3, r5
 801409a:	4620      	mov	r0, r4
 801409c:	4629      	mov	r1, r5
 801409e:	f7ec fa83 	bl	80005a8 <__aeabi_dmul>
 80140a2:	4682      	mov	sl, r0
 80140a4:	468b      	mov	fp, r1
 80140a6:	4602      	mov	r2, r0
 80140a8:	460b      	mov	r3, r1
 80140aa:	4620      	mov	r0, r4
 80140ac:	4629      	mov	r1, r5
 80140ae:	f7ec fa7b 	bl	80005a8 <__aeabi_dmul>
 80140b2:	a342      	add	r3, pc, #264	@ (adr r3, 80141bc <__kernel_sin+0x14c>)
 80140b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140b8:	e9cd 0100 	strd	r0, r1, [sp]
 80140bc:	4650      	mov	r0, sl
 80140be:	4659      	mov	r1, fp
 80140c0:	f7ec fa72 	bl	80005a8 <__aeabi_dmul>
 80140c4:	a33f      	add	r3, pc, #252	@ (adr r3, 80141c4 <__kernel_sin+0x154>)
 80140c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140ca:	f7ec f8b5 	bl	8000238 <__aeabi_dsub>
 80140ce:	4652      	mov	r2, sl
 80140d0:	465b      	mov	r3, fp
 80140d2:	f7ec fa69 	bl	80005a8 <__aeabi_dmul>
 80140d6:	a33d      	add	r3, pc, #244	@ (adr r3, 80141cc <__kernel_sin+0x15c>)
 80140d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140dc:	f7ec f8ae 	bl	800023c <__adddf3>
 80140e0:	4652      	mov	r2, sl
 80140e2:	465b      	mov	r3, fp
 80140e4:	f7ec fa60 	bl	80005a8 <__aeabi_dmul>
 80140e8:	a33a      	add	r3, pc, #232	@ (adr r3, 80141d4 <__kernel_sin+0x164>)
 80140ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140ee:	f7ec f8a3 	bl	8000238 <__aeabi_dsub>
 80140f2:	4652      	mov	r2, sl
 80140f4:	465b      	mov	r3, fp
 80140f6:	f7ec fa57 	bl	80005a8 <__aeabi_dmul>
 80140fa:	a338      	add	r3, pc, #224	@ (adr r3, 80141dc <__kernel_sin+0x16c>)
 80140fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014100:	f7ec f89c 	bl	800023c <__adddf3>
 8014104:	4606      	mov	r6, r0
 8014106:	460f      	mov	r7, r1
 8014108:	f1b8 0f00 	cmp.w	r8, #0
 801410c:	d11b      	bne.n	8014146 <__kernel_sin+0xd6>
 801410e:	4602      	mov	r2, r0
 8014110:	460b      	mov	r3, r1
 8014112:	4650      	mov	r0, sl
 8014114:	4659      	mov	r1, fp
 8014116:	f7ec fa47 	bl	80005a8 <__aeabi_dmul>
 801411a:	a325      	add	r3, pc, #148	@ (adr r3, 80141b0 <__kernel_sin+0x140>)
 801411c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014120:	f7ec f88a 	bl	8000238 <__aeabi_dsub>
 8014124:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014128:	f7ec fa3e 	bl	80005a8 <__aeabi_dmul>
 801412c:	4602      	mov	r2, r0
 801412e:	460b      	mov	r3, r1
 8014130:	4620      	mov	r0, r4
 8014132:	4629      	mov	r1, r5
 8014134:	f7ec f882 	bl	800023c <__adddf3>
 8014138:	4604      	mov	r4, r0
 801413a:	460d      	mov	r5, r1
 801413c:	ec45 4b10 	vmov	d0, r4, r5
 8014140:	b005      	add	sp, #20
 8014142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014146:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801414a:	4b1b      	ldr	r3, [pc, #108]	@ (80141b8 <__kernel_sin+0x148>)
 801414c:	2200      	movs	r2, #0
 801414e:	f7ec fa2b 	bl	80005a8 <__aeabi_dmul>
 8014152:	4632      	mov	r2, r6
 8014154:	4680      	mov	r8, r0
 8014156:	4689      	mov	r9, r1
 8014158:	463b      	mov	r3, r7
 801415a:	e9dd 0100 	ldrd	r0, r1, [sp]
 801415e:	f7ec fa23 	bl	80005a8 <__aeabi_dmul>
 8014162:	4602      	mov	r2, r0
 8014164:	460b      	mov	r3, r1
 8014166:	4640      	mov	r0, r8
 8014168:	4649      	mov	r1, r9
 801416a:	f7ec f865 	bl	8000238 <__aeabi_dsub>
 801416e:	4652      	mov	r2, sl
 8014170:	465b      	mov	r3, fp
 8014172:	f7ec fa19 	bl	80005a8 <__aeabi_dmul>
 8014176:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801417a:	f7ec f85d 	bl	8000238 <__aeabi_dsub>
 801417e:	a30c      	add	r3, pc, #48	@ (adr r3, 80141b0 <__kernel_sin+0x140>)
 8014180:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014184:	4606      	mov	r6, r0
 8014186:	460f      	mov	r7, r1
 8014188:	e9dd 0100 	ldrd	r0, r1, [sp]
 801418c:	f7ec fa0c 	bl	80005a8 <__aeabi_dmul>
 8014190:	4602      	mov	r2, r0
 8014192:	460b      	mov	r3, r1
 8014194:	4630      	mov	r0, r6
 8014196:	4639      	mov	r1, r7
 8014198:	f7ec f850 	bl	800023c <__adddf3>
 801419c:	4602      	mov	r2, r0
 801419e:	460b      	mov	r3, r1
 80141a0:	4620      	mov	r0, r4
 80141a2:	4629      	mov	r1, r5
 80141a4:	f7ec f848 	bl	8000238 <__aeabi_dsub>
 80141a8:	e7c6      	b.n	8014138 <__kernel_sin+0xc8>
 80141aa:	bf00      	nop
 80141ac:	f3af 8000 	nop.w
 80141b0:	55555549 	.word	0x55555549
 80141b4:	3fc55555 	.word	0x3fc55555
 80141b8:	3fe00000 	.word	0x3fe00000
 80141bc:	5acfd57c 	.word	0x5acfd57c
 80141c0:	3de5d93a 	.word	0x3de5d93a
 80141c4:	8a2b9ceb 	.word	0x8a2b9ceb
 80141c8:	3e5ae5e6 	.word	0x3e5ae5e6
 80141cc:	57b1fe7d 	.word	0x57b1fe7d
 80141d0:	3ec71de3 	.word	0x3ec71de3
 80141d4:	19c161d5 	.word	0x19c161d5
 80141d8:	3f2a01a0 	.word	0x3f2a01a0
 80141dc:	1110f8a6 	.word	0x1110f8a6
 80141e0:	3f811111 	.word	0x3f811111
 80141e4:	00000000 	.word	0x00000000

080141e8 <__ieee754_log>:
 80141e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141ec:	ec51 0b10 	vmov	r0, r1, d0
 80141f0:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80141f4:	b087      	sub	sp, #28
 80141f6:	460d      	mov	r5, r1
 80141f8:	da26      	bge.n	8014248 <__ieee754_log+0x60>
 80141fa:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80141fe:	4303      	orrs	r3, r0
 8014200:	4602      	mov	r2, r0
 8014202:	d10a      	bne.n	801421a <__ieee754_log+0x32>
 8014204:	49ce      	ldr	r1, [pc, #824]	@ (8014540 <__ieee754_log+0x358>)
 8014206:	2200      	movs	r2, #0
 8014208:	2300      	movs	r3, #0
 801420a:	2000      	movs	r0, #0
 801420c:	f7ec faf6 	bl	80007fc <__aeabi_ddiv>
 8014210:	ec41 0b10 	vmov	d0, r0, r1
 8014214:	b007      	add	sp, #28
 8014216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801421a:	2900      	cmp	r1, #0
 801421c:	da05      	bge.n	801422a <__ieee754_log+0x42>
 801421e:	460b      	mov	r3, r1
 8014220:	f7ec f80a 	bl	8000238 <__aeabi_dsub>
 8014224:	2200      	movs	r2, #0
 8014226:	2300      	movs	r3, #0
 8014228:	e7f0      	b.n	801420c <__ieee754_log+0x24>
 801422a:	4bc6      	ldr	r3, [pc, #792]	@ (8014544 <__ieee754_log+0x35c>)
 801422c:	2200      	movs	r2, #0
 801422e:	f7ec f9bb 	bl	80005a8 <__aeabi_dmul>
 8014232:	f06f 0335 	mvn.w	r3, #53	@ 0x35
 8014236:	460d      	mov	r5, r1
 8014238:	4ac3      	ldr	r2, [pc, #780]	@ (8014548 <__ieee754_log+0x360>)
 801423a:	4295      	cmp	r5, r2
 801423c:	dd06      	ble.n	801424c <__ieee754_log+0x64>
 801423e:	4602      	mov	r2, r0
 8014240:	460b      	mov	r3, r1
 8014242:	f7eb fffb 	bl	800023c <__adddf3>
 8014246:	e7e3      	b.n	8014210 <__ieee754_log+0x28>
 8014248:	2300      	movs	r3, #0
 801424a:	e7f5      	b.n	8014238 <__ieee754_log+0x50>
 801424c:	152c      	asrs	r4, r5, #20
 801424e:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 8014252:	f3c5 0513 	ubfx	r5, r5, #0, #20
 8014256:	441c      	add	r4, r3
 8014258:	f505 2315 	add.w	r3, r5, #610304	@ 0x95000
 801425c:	f603 7364 	addw	r3, r3, #3940	@ 0xf64
 8014260:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8014264:	f083 527f 	eor.w	r2, r3, #1069547520	@ 0x3fc00000
 8014268:	f482 1240 	eor.w	r2, r2, #3145728	@ 0x300000
 801426c:	ea42 0105 	orr.w	r1, r2, r5
 8014270:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 8014274:	2200      	movs	r2, #0
 8014276:	4bb5      	ldr	r3, [pc, #724]	@ (801454c <__ieee754_log+0x364>)
 8014278:	f7eb ffde 	bl	8000238 <__aeabi_dsub>
 801427c:	1cab      	adds	r3, r5, #2
 801427e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8014282:	2b02      	cmp	r3, #2
 8014284:	4682      	mov	sl, r0
 8014286:	468b      	mov	fp, r1
 8014288:	f04f 0200 	mov.w	r2, #0
 801428c:	dc53      	bgt.n	8014336 <__ieee754_log+0x14e>
 801428e:	2300      	movs	r3, #0
 8014290:	f7ec fbf2 	bl	8000a78 <__aeabi_dcmpeq>
 8014294:	b1d0      	cbz	r0, 80142cc <__ieee754_log+0xe4>
 8014296:	2c00      	cmp	r4, #0
 8014298:	f000 8120 	beq.w	80144dc <__ieee754_log+0x2f4>
 801429c:	4620      	mov	r0, r4
 801429e:	f7ec f919 	bl	80004d4 <__aeabi_i2d>
 80142a2:	a391      	add	r3, pc, #580	@ (adr r3, 80144e8 <__ieee754_log+0x300>)
 80142a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80142a8:	4606      	mov	r6, r0
 80142aa:	460f      	mov	r7, r1
 80142ac:	f7ec f97c 	bl	80005a8 <__aeabi_dmul>
 80142b0:	a38f      	add	r3, pc, #572	@ (adr r3, 80144f0 <__ieee754_log+0x308>)
 80142b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80142b6:	4604      	mov	r4, r0
 80142b8:	460d      	mov	r5, r1
 80142ba:	4630      	mov	r0, r6
 80142bc:	4639      	mov	r1, r7
 80142be:	f7ec f973 	bl	80005a8 <__aeabi_dmul>
 80142c2:	4602      	mov	r2, r0
 80142c4:	460b      	mov	r3, r1
 80142c6:	4620      	mov	r0, r4
 80142c8:	4629      	mov	r1, r5
 80142ca:	e7ba      	b.n	8014242 <__ieee754_log+0x5a>
 80142cc:	a38a      	add	r3, pc, #552	@ (adr r3, 80144f8 <__ieee754_log+0x310>)
 80142ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80142d2:	4650      	mov	r0, sl
 80142d4:	4659      	mov	r1, fp
 80142d6:	f7ec f967 	bl	80005a8 <__aeabi_dmul>
 80142da:	4602      	mov	r2, r0
 80142dc:	460b      	mov	r3, r1
 80142de:	2000      	movs	r0, #0
 80142e0:	499b      	ldr	r1, [pc, #620]	@ (8014550 <__ieee754_log+0x368>)
 80142e2:	f7eb ffa9 	bl	8000238 <__aeabi_dsub>
 80142e6:	4652      	mov	r2, sl
 80142e8:	4606      	mov	r6, r0
 80142ea:	460f      	mov	r7, r1
 80142ec:	465b      	mov	r3, fp
 80142ee:	4650      	mov	r0, sl
 80142f0:	4659      	mov	r1, fp
 80142f2:	f7ec f959 	bl	80005a8 <__aeabi_dmul>
 80142f6:	4602      	mov	r2, r0
 80142f8:	460b      	mov	r3, r1
 80142fa:	4630      	mov	r0, r6
 80142fc:	4639      	mov	r1, r7
 80142fe:	f7ec f953 	bl	80005a8 <__aeabi_dmul>
 8014302:	4606      	mov	r6, r0
 8014304:	460f      	mov	r7, r1
 8014306:	b914      	cbnz	r4, 801430e <__ieee754_log+0x126>
 8014308:	4632      	mov	r2, r6
 801430a:	463b      	mov	r3, r7
 801430c:	e0a0      	b.n	8014450 <__ieee754_log+0x268>
 801430e:	4620      	mov	r0, r4
 8014310:	f7ec f8e0 	bl	80004d4 <__aeabi_i2d>
 8014314:	a374      	add	r3, pc, #464	@ (adr r3, 80144e8 <__ieee754_log+0x300>)
 8014316:	e9d3 2300 	ldrd	r2, r3, [r3]
 801431a:	4680      	mov	r8, r0
 801431c:	4689      	mov	r9, r1
 801431e:	f7ec f943 	bl	80005a8 <__aeabi_dmul>
 8014322:	a373      	add	r3, pc, #460	@ (adr r3, 80144f0 <__ieee754_log+0x308>)
 8014324:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014328:	4604      	mov	r4, r0
 801432a:	460d      	mov	r5, r1
 801432c:	4640      	mov	r0, r8
 801432e:	4649      	mov	r1, r9
 8014330:	f7ec f93a 	bl	80005a8 <__aeabi_dmul>
 8014334:	e0a5      	b.n	8014482 <__ieee754_log+0x29a>
 8014336:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 801433a:	f7eb ff7f 	bl	800023c <__adddf3>
 801433e:	4602      	mov	r2, r0
 8014340:	460b      	mov	r3, r1
 8014342:	4650      	mov	r0, sl
 8014344:	4659      	mov	r1, fp
 8014346:	f7ec fa59 	bl	80007fc <__aeabi_ddiv>
 801434a:	e9cd 0100 	strd	r0, r1, [sp]
 801434e:	4620      	mov	r0, r4
 8014350:	f7ec f8c0 	bl	80004d4 <__aeabi_i2d>
 8014354:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014358:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801435c:	4610      	mov	r0, r2
 801435e:	4619      	mov	r1, r3
 8014360:	f7ec f922 	bl	80005a8 <__aeabi_dmul>
 8014364:	4602      	mov	r2, r0
 8014366:	460b      	mov	r3, r1
 8014368:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801436c:	f7ec f91c 	bl	80005a8 <__aeabi_dmul>
 8014370:	a363      	add	r3, pc, #396	@ (adr r3, 8014500 <__ieee754_log+0x318>)
 8014372:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014376:	4680      	mov	r8, r0
 8014378:	4689      	mov	r9, r1
 801437a:	f7ec f915 	bl	80005a8 <__aeabi_dmul>
 801437e:	a362      	add	r3, pc, #392	@ (adr r3, 8014508 <__ieee754_log+0x320>)
 8014380:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014384:	f7eb ff5a 	bl	800023c <__adddf3>
 8014388:	4642      	mov	r2, r8
 801438a:	464b      	mov	r3, r9
 801438c:	f7ec f90c 	bl	80005a8 <__aeabi_dmul>
 8014390:	a35f      	add	r3, pc, #380	@ (adr r3, 8014510 <__ieee754_log+0x328>)
 8014392:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014396:	f7eb ff51 	bl	800023c <__adddf3>
 801439a:	4642      	mov	r2, r8
 801439c:	464b      	mov	r3, r9
 801439e:	f7ec f903 	bl	80005a8 <__aeabi_dmul>
 80143a2:	a35d      	add	r3, pc, #372	@ (adr r3, 8014518 <__ieee754_log+0x330>)
 80143a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143a8:	f7eb ff48 	bl	800023c <__adddf3>
 80143ac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80143b0:	f7ec f8fa 	bl	80005a8 <__aeabi_dmul>
 80143b4:	a35a      	add	r3, pc, #360	@ (adr r3, 8014520 <__ieee754_log+0x338>)
 80143b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143ba:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80143be:	4640      	mov	r0, r8
 80143c0:	4649      	mov	r1, r9
 80143c2:	f7ec f8f1 	bl	80005a8 <__aeabi_dmul>
 80143c6:	a358      	add	r3, pc, #352	@ (adr r3, 8014528 <__ieee754_log+0x340>)
 80143c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143cc:	f7eb ff36 	bl	800023c <__adddf3>
 80143d0:	4642      	mov	r2, r8
 80143d2:	464b      	mov	r3, r9
 80143d4:	f7ec f8e8 	bl	80005a8 <__aeabi_dmul>
 80143d8:	a355      	add	r3, pc, #340	@ (adr r3, 8014530 <__ieee754_log+0x348>)
 80143da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143de:	f7eb ff2d 	bl	800023c <__adddf3>
 80143e2:	4642      	mov	r2, r8
 80143e4:	464b      	mov	r3, r9
 80143e6:	f7ec f8df 	bl	80005a8 <__aeabi_dmul>
 80143ea:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 80143ee:	4602      	mov	r2, r0
 80143f0:	460b      	mov	r3, r1
 80143f2:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 80143f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80143fa:	f7eb ff1f 	bl	800023c <__adddf3>
 80143fe:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 8014402:	3551      	adds	r5, #81	@ 0x51
 8014404:	4335      	orrs	r5, r6
 8014406:	2d00      	cmp	r5, #0
 8014408:	4680      	mov	r8, r0
 801440a:	4689      	mov	r9, r1
 801440c:	dd48      	ble.n	80144a0 <__ieee754_log+0x2b8>
 801440e:	4b50      	ldr	r3, [pc, #320]	@ (8014550 <__ieee754_log+0x368>)
 8014410:	2200      	movs	r2, #0
 8014412:	4650      	mov	r0, sl
 8014414:	4659      	mov	r1, fp
 8014416:	f7ec f8c7 	bl	80005a8 <__aeabi_dmul>
 801441a:	4652      	mov	r2, sl
 801441c:	465b      	mov	r3, fp
 801441e:	f7ec f8c3 	bl	80005a8 <__aeabi_dmul>
 8014422:	4602      	mov	r2, r0
 8014424:	460b      	mov	r3, r1
 8014426:	4606      	mov	r6, r0
 8014428:	460f      	mov	r7, r1
 801442a:	4640      	mov	r0, r8
 801442c:	4649      	mov	r1, r9
 801442e:	f7eb ff05 	bl	800023c <__adddf3>
 8014432:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014436:	f7ec f8b7 	bl	80005a8 <__aeabi_dmul>
 801443a:	4680      	mov	r8, r0
 801443c:	4689      	mov	r9, r1
 801443e:	b964      	cbnz	r4, 801445a <__ieee754_log+0x272>
 8014440:	4602      	mov	r2, r0
 8014442:	460b      	mov	r3, r1
 8014444:	4630      	mov	r0, r6
 8014446:	4639      	mov	r1, r7
 8014448:	f7eb fef6 	bl	8000238 <__aeabi_dsub>
 801444c:	4602      	mov	r2, r0
 801444e:	460b      	mov	r3, r1
 8014450:	4650      	mov	r0, sl
 8014452:	4659      	mov	r1, fp
 8014454:	f7eb fef0 	bl	8000238 <__aeabi_dsub>
 8014458:	e6da      	b.n	8014210 <__ieee754_log+0x28>
 801445a:	a323      	add	r3, pc, #140	@ (adr r3, 80144e8 <__ieee754_log+0x300>)
 801445c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014460:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014464:	f7ec f8a0 	bl	80005a8 <__aeabi_dmul>
 8014468:	a321      	add	r3, pc, #132	@ (adr r3, 80144f0 <__ieee754_log+0x308>)
 801446a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801446e:	4604      	mov	r4, r0
 8014470:	460d      	mov	r5, r1
 8014472:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014476:	f7ec f897 	bl	80005a8 <__aeabi_dmul>
 801447a:	4642      	mov	r2, r8
 801447c:	464b      	mov	r3, r9
 801447e:	f7eb fedd 	bl	800023c <__adddf3>
 8014482:	4602      	mov	r2, r0
 8014484:	460b      	mov	r3, r1
 8014486:	4630      	mov	r0, r6
 8014488:	4639      	mov	r1, r7
 801448a:	f7eb fed5 	bl	8000238 <__aeabi_dsub>
 801448e:	4652      	mov	r2, sl
 8014490:	465b      	mov	r3, fp
 8014492:	f7eb fed1 	bl	8000238 <__aeabi_dsub>
 8014496:	4602      	mov	r2, r0
 8014498:	460b      	mov	r3, r1
 801449a:	4620      	mov	r0, r4
 801449c:	4629      	mov	r1, r5
 801449e:	e7d9      	b.n	8014454 <__ieee754_log+0x26c>
 80144a0:	4602      	mov	r2, r0
 80144a2:	460b      	mov	r3, r1
 80144a4:	4650      	mov	r0, sl
 80144a6:	4659      	mov	r1, fp
 80144a8:	f7eb fec6 	bl	8000238 <__aeabi_dsub>
 80144ac:	e9dd 2300 	ldrd	r2, r3, [sp]
 80144b0:	f7ec f87a 	bl	80005a8 <__aeabi_dmul>
 80144b4:	4606      	mov	r6, r0
 80144b6:	460f      	mov	r7, r1
 80144b8:	2c00      	cmp	r4, #0
 80144ba:	f43f af25 	beq.w	8014308 <__ieee754_log+0x120>
 80144be:	a30a      	add	r3, pc, #40	@ (adr r3, 80144e8 <__ieee754_log+0x300>)
 80144c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80144c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80144c8:	f7ec f86e 	bl	80005a8 <__aeabi_dmul>
 80144cc:	a308      	add	r3, pc, #32	@ (adr r3, 80144f0 <__ieee754_log+0x308>)
 80144ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80144d2:	4604      	mov	r4, r0
 80144d4:	460d      	mov	r5, r1
 80144d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80144da:	e729      	b.n	8014330 <__ieee754_log+0x148>
 80144dc:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 8014538 <__ieee754_log+0x350>
 80144e0:	e698      	b.n	8014214 <__ieee754_log+0x2c>
 80144e2:	bf00      	nop
 80144e4:	f3af 8000 	nop.w
 80144e8:	fee00000 	.word	0xfee00000
 80144ec:	3fe62e42 	.word	0x3fe62e42
 80144f0:	35793c76 	.word	0x35793c76
 80144f4:	3dea39ef 	.word	0x3dea39ef
 80144f8:	55555555 	.word	0x55555555
 80144fc:	3fd55555 	.word	0x3fd55555
 8014500:	df3e5244 	.word	0xdf3e5244
 8014504:	3fc2f112 	.word	0x3fc2f112
 8014508:	96cb03de 	.word	0x96cb03de
 801450c:	3fc74664 	.word	0x3fc74664
 8014510:	94229359 	.word	0x94229359
 8014514:	3fd24924 	.word	0x3fd24924
 8014518:	55555593 	.word	0x55555593
 801451c:	3fe55555 	.word	0x3fe55555
 8014520:	d078c69f 	.word	0xd078c69f
 8014524:	3fc39a09 	.word	0x3fc39a09
 8014528:	1d8e78af 	.word	0x1d8e78af
 801452c:	3fcc71c5 	.word	0x3fcc71c5
 8014530:	9997fa04 	.word	0x9997fa04
 8014534:	3fd99999 	.word	0x3fd99999
	...
 8014540:	c3500000 	.word	0xc3500000
 8014544:	43500000 	.word	0x43500000
 8014548:	7fefffff 	.word	0x7fefffff
 801454c:	3ff00000 	.word	0x3ff00000
 8014550:	3fe00000 	.word	0x3fe00000
 8014554:	00000000 	.word	0x00000000

08014558 <__ieee754_rem_pio2>:
 8014558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801455c:	ec57 6b10 	vmov	r6, r7, d0
 8014560:	4bc5      	ldr	r3, [pc, #788]	@ (8014878 <__ieee754_rem_pio2+0x320>)
 8014562:	b08d      	sub	sp, #52	@ 0x34
 8014564:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8014568:	4598      	cmp	r8, r3
 801456a:	4604      	mov	r4, r0
 801456c:	9704      	str	r7, [sp, #16]
 801456e:	d807      	bhi.n	8014580 <__ieee754_rem_pio2+0x28>
 8014570:	2200      	movs	r2, #0
 8014572:	2300      	movs	r3, #0
 8014574:	ed80 0b00 	vstr	d0, [r0]
 8014578:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801457c:	2500      	movs	r5, #0
 801457e:	e028      	b.n	80145d2 <__ieee754_rem_pio2+0x7a>
 8014580:	4bbe      	ldr	r3, [pc, #760]	@ (801487c <__ieee754_rem_pio2+0x324>)
 8014582:	4598      	cmp	r8, r3
 8014584:	d878      	bhi.n	8014678 <__ieee754_rem_pio2+0x120>
 8014586:	9b04      	ldr	r3, [sp, #16]
 8014588:	4dbd      	ldr	r5, [pc, #756]	@ (8014880 <__ieee754_rem_pio2+0x328>)
 801458a:	2b00      	cmp	r3, #0
 801458c:	4630      	mov	r0, r6
 801458e:	a3ac      	add	r3, pc, #688	@ (adr r3, 8014840 <__ieee754_rem_pio2+0x2e8>)
 8014590:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014594:	4639      	mov	r1, r7
 8014596:	dd38      	ble.n	801460a <__ieee754_rem_pio2+0xb2>
 8014598:	f7eb fe4e 	bl	8000238 <__aeabi_dsub>
 801459c:	45a8      	cmp	r8, r5
 801459e:	4606      	mov	r6, r0
 80145a0:	460f      	mov	r7, r1
 80145a2:	d01a      	beq.n	80145da <__ieee754_rem_pio2+0x82>
 80145a4:	a3a8      	add	r3, pc, #672	@ (adr r3, 8014848 <__ieee754_rem_pio2+0x2f0>)
 80145a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145aa:	f7eb fe45 	bl	8000238 <__aeabi_dsub>
 80145ae:	4602      	mov	r2, r0
 80145b0:	460b      	mov	r3, r1
 80145b2:	4680      	mov	r8, r0
 80145b4:	4689      	mov	r9, r1
 80145b6:	4630      	mov	r0, r6
 80145b8:	4639      	mov	r1, r7
 80145ba:	f7eb fe3d 	bl	8000238 <__aeabi_dsub>
 80145be:	a3a2      	add	r3, pc, #648	@ (adr r3, 8014848 <__ieee754_rem_pio2+0x2f0>)
 80145c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145c4:	f7eb fe38 	bl	8000238 <__aeabi_dsub>
 80145c8:	e9c4 8900 	strd	r8, r9, [r4]
 80145cc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80145d0:	2501      	movs	r5, #1
 80145d2:	4628      	mov	r0, r5
 80145d4:	b00d      	add	sp, #52	@ 0x34
 80145d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145da:	a39d      	add	r3, pc, #628	@ (adr r3, 8014850 <__ieee754_rem_pio2+0x2f8>)
 80145dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145e0:	f7eb fe2a 	bl	8000238 <__aeabi_dsub>
 80145e4:	a39c      	add	r3, pc, #624	@ (adr r3, 8014858 <__ieee754_rem_pio2+0x300>)
 80145e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80145ea:	4606      	mov	r6, r0
 80145ec:	460f      	mov	r7, r1
 80145ee:	f7eb fe23 	bl	8000238 <__aeabi_dsub>
 80145f2:	4602      	mov	r2, r0
 80145f4:	460b      	mov	r3, r1
 80145f6:	4680      	mov	r8, r0
 80145f8:	4689      	mov	r9, r1
 80145fa:	4630      	mov	r0, r6
 80145fc:	4639      	mov	r1, r7
 80145fe:	f7eb fe1b 	bl	8000238 <__aeabi_dsub>
 8014602:	a395      	add	r3, pc, #596	@ (adr r3, 8014858 <__ieee754_rem_pio2+0x300>)
 8014604:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014608:	e7dc      	b.n	80145c4 <__ieee754_rem_pio2+0x6c>
 801460a:	f7eb fe17 	bl	800023c <__adddf3>
 801460e:	45a8      	cmp	r8, r5
 8014610:	4606      	mov	r6, r0
 8014612:	460f      	mov	r7, r1
 8014614:	d018      	beq.n	8014648 <__ieee754_rem_pio2+0xf0>
 8014616:	a38c      	add	r3, pc, #560	@ (adr r3, 8014848 <__ieee754_rem_pio2+0x2f0>)
 8014618:	e9d3 2300 	ldrd	r2, r3, [r3]
 801461c:	f7eb fe0e 	bl	800023c <__adddf3>
 8014620:	4602      	mov	r2, r0
 8014622:	460b      	mov	r3, r1
 8014624:	4680      	mov	r8, r0
 8014626:	4689      	mov	r9, r1
 8014628:	4630      	mov	r0, r6
 801462a:	4639      	mov	r1, r7
 801462c:	f7eb fe04 	bl	8000238 <__aeabi_dsub>
 8014630:	a385      	add	r3, pc, #532	@ (adr r3, 8014848 <__ieee754_rem_pio2+0x2f0>)
 8014632:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014636:	f7eb fe01 	bl	800023c <__adddf3>
 801463a:	f04f 35ff 	mov.w	r5, #4294967295
 801463e:	e9c4 8900 	strd	r8, r9, [r4]
 8014642:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014646:	e7c4      	b.n	80145d2 <__ieee754_rem_pio2+0x7a>
 8014648:	a381      	add	r3, pc, #516	@ (adr r3, 8014850 <__ieee754_rem_pio2+0x2f8>)
 801464a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801464e:	f7eb fdf5 	bl	800023c <__adddf3>
 8014652:	a381      	add	r3, pc, #516	@ (adr r3, 8014858 <__ieee754_rem_pio2+0x300>)
 8014654:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014658:	4606      	mov	r6, r0
 801465a:	460f      	mov	r7, r1
 801465c:	f7eb fdee 	bl	800023c <__adddf3>
 8014660:	4602      	mov	r2, r0
 8014662:	460b      	mov	r3, r1
 8014664:	4680      	mov	r8, r0
 8014666:	4689      	mov	r9, r1
 8014668:	4630      	mov	r0, r6
 801466a:	4639      	mov	r1, r7
 801466c:	f7eb fde4 	bl	8000238 <__aeabi_dsub>
 8014670:	a379      	add	r3, pc, #484	@ (adr r3, 8014858 <__ieee754_rem_pio2+0x300>)
 8014672:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014676:	e7de      	b.n	8014636 <__ieee754_rem_pio2+0xde>
 8014678:	4b82      	ldr	r3, [pc, #520]	@ (8014884 <__ieee754_rem_pio2+0x32c>)
 801467a:	4598      	cmp	r8, r3
 801467c:	f200 80d1 	bhi.w	8014822 <__ieee754_rem_pio2+0x2ca>
 8014680:	f000 f99a 	bl	80149b8 <fabs>
 8014684:	ec57 6b10 	vmov	r6, r7, d0
 8014688:	a375      	add	r3, pc, #468	@ (adr r3, 8014860 <__ieee754_rem_pio2+0x308>)
 801468a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801468e:	4630      	mov	r0, r6
 8014690:	4639      	mov	r1, r7
 8014692:	f7eb ff89 	bl	80005a8 <__aeabi_dmul>
 8014696:	4b7c      	ldr	r3, [pc, #496]	@ (8014888 <__ieee754_rem_pio2+0x330>)
 8014698:	2200      	movs	r2, #0
 801469a:	f7eb fdcf 	bl	800023c <__adddf3>
 801469e:	f7ec fa33 	bl	8000b08 <__aeabi_d2iz>
 80146a2:	4605      	mov	r5, r0
 80146a4:	f7eb ff16 	bl	80004d4 <__aeabi_i2d>
 80146a8:	4602      	mov	r2, r0
 80146aa:	460b      	mov	r3, r1
 80146ac:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80146b0:	a363      	add	r3, pc, #396	@ (adr r3, 8014840 <__ieee754_rem_pio2+0x2e8>)
 80146b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80146b6:	f7eb ff77 	bl	80005a8 <__aeabi_dmul>
 80146ba:	4602      	mov	r2, r0
 80146bc:	460b      	mov	r3, r1
 80146be:	4630      	mov	r0, r6
 80146c0:	4639      	mov	r1, r7
 80146c2:	f7eb fdb9 	bl	8000238 <__aeabi_dsub>
 80146c6:	a360      	add	r3, pc, #384	@ (adr r3, 8014848 <__ieee754_rem_pio2+0x2f0>)
 80146c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80146cc:	4682      	mov	sl, r0
 80146ce:	468b      	mov	fp, r1
 80146d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80146d4:	f7eb ff68 	bl	80005a8 <__aeabi_dmul>
 80146d8:	2d1f      	cmp	r5, #31
 80146da:	4606      	mov	r6, r0
 80146dc:	460f      	mov	r7, r1
 80146de:	dc0c      	bgt.n	80146fa <__ieee754_rem_pio2+0x1a2>
 80146e0:	4b6a      	ldr	r3, [pc, #424]	@ (801488c <__ieee754_rem_pio2+0x334>)
 80146e2:	1e6a      	subs	r2, r5, #1
 80146e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80146e8:	4543      	cmp	r3, r8
 80146ea:	d006      	beq.n	80146fa <__ieee754_rem_pio2+0x1a2>
 80146ec:	4632      	mov	r2, r6
 80146ee:	463b      	mov	r3, r7
 80146f0:	4650      	mov	r0, sl
 80146f2:	4659      	mov	r1, fp
 80146f4:	f7eb fda0 	bl	8000238 <__aeabi_dsub>
 80146f8:	e00e      	b.n	8014718 <__ieee754_rem_pio2+0x1c0>
 80146fa:	463b      	mov	r3, r7
 80146fc:	4632      	mov	r2, r6
 80146fe:	4650      	mov	r0, sl
 8014700:	4659      	mov	r1, fp
 8014702:	f7eb fd99 	bl	8000238 <__aeabi_dsub>
 8014706:	ea4f 5328 	mov.w	r3, r8, asr #20
 801470a:	9305      	str	r3, [sp, #20]
 801470c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8014710:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 8014714:	2b10      	cmp	r3, #16
 8014716:	dc02      	bgt.n	801471e <__ieee754_rem_pio2+0x1c6>
 8014718:	e9c4 0100 	strd	r0, r1, [r4]
 801471c:	e039      	b.n	8014792 <__ieee754_rem_pio2+0x23a>
 801471e:	a34c      	add	r3, pc, #304	@ (adr r3, 8014850 <__ieee754_rem_pio2+0x2f8>)
 8014720:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014724:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014728:	f7eb ff3e 	bl	80005a8 <__aeabi_dmul>
 801472c:	4606      	mov	r6, r0
 801472e:	460f      	mov	r7, r1
 8014730:	4602      	mov	r2, r0
 8014732:	460b      	mov	r3, r1
 8014734:	4650      	mov	r0, sl
 8014736:	4659      	mov	r1, fp
 8014738:	f7eb fd7e 	bl	8000238 <__aeabi_dsub>
 801473c:	4602      	mov	r2, r0
 801473e:	460b      	mov	r3, r1
 8014740:	4680      	mov	r8, r0
 8014742:	4689      	mov	r9, r1
 8014744:	4650      	mov	r0, sl
 8014746:	4659      	mov	r1, fp
 8014748:	f7eb fd76 	bl	8000238 <__aeabi_dsub>
 801474c:	4632      	mov	r2, r6
 801474e:	463b      	mov	r3, r7
 8014750:	f7eb fd72 	bl	8000238 <__aeabi_dsub>
 8014754:	a340      	add	r3, pc, #256	@ (adr r3, 8014858 <__ieee754_rem_pio2+0x300>)
 8014756:	e9d3 2300 	ldrd	r2, r3, [r3]
 801475a:	4606      	mov	r6, r0
 801475c:	460f      	mov	r7, r1
 801475e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014762:	f7eb ff21 	bl	80005a8 <__aeabi_dmul>
 8014766:	4632      	mov	r2, r6
 8014768:	463b      	mov	r3, r7
 801476a:	f7eb fd65 	bl	8000238 <__aeabi_dsub>
 801476e:	4602      	mov	r2, r0
 8014770:	460b      	mov	r3, r1
 8014772:	4606      	mov	r6, r0
 8014774:	460f      	mov	r7, r1
 8014776:	4640      	mov	r0, r8
 8014778:	4649      	mov	r1, r9
 801477a:	f7eb fd5d 	bl	8000238 <__aeabi_dsub>
 801477e:	9a05      	ldr	r2, [sp, #20]
 8014780:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8014784:	1ad3      	subs	r3, r2, r3
 8014786:	2b31      	cmp	r3, #49	@ 0x31
 8014788:	dc20      	bgt.n	80147cc <__ieee754_rem_pio2+0x274>
 801478a:	e9c4 0100 	strd	r0, r1, [r4]
 801478e:	46c2      	mov	sl, r8
 8014790:	46cb      	mov	fp, r9
 8014792:	e9d4 8900 	ldrd	r8, r9, [r4]
 8014796:	4650      	mov	r0, sl
 8014798:	4642      	mov	r2, r8
 801479a:	464b      	mov	r3, r9
 801479c:	4659      	mov	r1, fp
 801479e:	f7eb fd4b 	bl	8000238 <__aeabi_dsub>
 80147a2:	463b      	mov	r3, r7
 80147a4:	4632      	mov	r2, r6
 80147a6:	f7eb fd47 	bl	8000238 <__aeabi_dsub>
 80147aa:	9b04      	ldr	r3, [sp, #16]
 80147ac:	2b00      	cmp	r3, #0
 80147ae:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80147b2:	f6bf af0e 	bge.w	80145d2 <__ieee754_rem_pio2+0x7a>
 80147b6:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 80147ba:	6063      	str	r3, [r4, #4]
 80147bc:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80147c0:	f8c4 8000 	str.w	r8, [r4]
 80147c4:	60a0      	str	r0, [r4, #8]
 80147c6:	60e3      	str	r3, [r4, #12]
 80147c8:	426d      	negs	r5, r5
 80147ca:	e702      	b.n	80145d2 <__ieee754_rem_pio2+0x7a>
 80147cc:	a326      	add	r3, pc, #152	@ (adr r3, 8014868 <__ieee754_rem_pio2+0x310>)
 80147ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80147d2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80147d6:	f7eb fee7 	bl	80005a8 <__aeabi_dmul>
 80147da:	4606      	mov	r6, r0
 80147dc:	460f      	mov	r7, r1
 80147de:	4602      	mov	r2, r0
 80147e0:	460b      	mov	r3, r1
 80147e2:	4640      	mov	r0, r8
 80147e4:	4649      	mov	r1, r9
 80147e6:	f7eb fd27 	bl	8000238 <__aeabi_dsub>
 80147ea:	4602      	mov	r2, r0
 80147ec:	460b      	mov	r3, r1
 80147ee:	4682      	mov	sl, r0
 80147f0:	468b      	mov	fp, r1
 80147f2:	4640      	mov	r0, r8
 80147f4:	4649      	mov	r1, r9
 80147f6:	f7eb fd1f 	bl	8000238 <__aeabi_dsub>
 80147fa:	4632      	mov	r2, r6
 80147fc:	463b      	mov	r3, r7
 80147fe:	f7eb fd1b 	bl	8000238 <__aeabi_dsub>
 8014802:	a31b      	add	r3, pc, #108	@ (adr r3, 8014870 <__ieee754_rem_pio2+0x318>)
 8014804:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014808:	4606      	mov	r6, r0
 801480a:	460f      	mov	r7, r1
 801480c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014810:	f7eb feca 	bl	80005a8 <__aeabi_dmul>
 8014814:	4632      	mov	r2, r6
 8014816:	463b      	mov	r3, r7
 8014818:	f7eb fd0e 	bl	8000238 <__aeabi_dsub>
 801481c:	4606      	mov	r6, r0
 801481e:	460f      	mov	r7, r1
 8014820:	e764      	b.n	80146ec <__ieee754_rem_pio2+0x194>
 8014822:	4b1b      	ldr	r3, [pc, #108]	@ (8014890 <__ieee754_rem_pio2+0x338>)
 8014824:	4598      	cmp	r8, r3
 8014826:	d935      	bls.n	8014894 <__ieee754_rem_pio2+0x33c>
 8014828:	4632      	mov	r2, r6
 801482a:	463b      	mov	r3, r7
 801482c:	4630      	mov	r0, r6
 801482e:	4639      	mov	r1, r7
 8014830:	f7eb fd02 	bl	8000238 <__aeabi_dsub>
 8014834:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014838:	e9c4 0100 	strd	r0, r1, [r4]
 801483c:	e69e      	b.n	801457c <__ieee754_rem_pio2+0x24>
 801483e:	bf00      	nop
 8014840:	54400000 	.word	0x54400000
 8014844:	3ff921fb 	.word	0x3ff921fb
 8014848:	1a626331 	.word	0x1a626331
 801484c:	3dd0b461 	.word	0x3dd0b461
 8014850:	1a600000 	.word	0x1a600000
 8014854:	3dd0b461 	.word	0x3dd0b461
 8014858:	2e037073 	.word	0x2e037073
 801485c:	3ba3198a 	.word	0x3ba3198a
 8014860:	6dc9c883 	.word	0x6dc9c883
 8014864:	3fe45f30 	.word	0x3fe45f30
 8014868:	2e000000 	.word	0x2e000000
 801486c:	3ba3198a 	.word	0x3ba3198a
 8014870:	252049c1 	.word	0x252049c1
 8014874:	397b839a 	.word	0x397b839a
 8014878:	3fe921fb 	.word	0x3fe921fb
 801487c:	4002d97b 	.word	0x4002d97b
 8014880:	3ff921fb 	.word	0x3ff921fb
 8014884:	413921fb 	.word	0x413921fb
 8014888:	3fe00000 	.word	0x3fe00000
 801488c:	08018830 	.word	0x08018830
 8014890:	7fefffff 	.word	0x7fefffff
 8014894:	ea4f 5528 	mov.w	r5, r8, asr #20
 8014898:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 801489c:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 80148a0:	4630      	mov	r0, r6
 80148a2:	460f      	mov	r7, r1
 80148a4:	f7ec f930 	bl	8000b08 <__aeabi_d2iz>
 80148a8:	f7eb fe14 	bl	80004d4 <__aeabi_i2d>
 80148ac:	4602      	mov	r2, r0
 80148ae:	460b      	mov	r3, r1
 80148b0:	4630      	mov	r0, r6
 80148b2:	4639      	mov	r1, r7
 80148b4:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80148b8:	f7eb fcbe 	bl	8000238 <__aeabi_dsub>
 80148bc:	4b22      	ldr	r3, [pc, #136]	@ (8014948 <__ieee754_rem_pio2+0x3f0>)
 80148be:	2200      	movs	r2, #0
 80148c0:	f7eb fe72 	bl	80005a8 <__aeabi_dmul>
 80148c4:	460f      	mov	r7, r1
 80148c6:	4606      	mov	r6, r0
 80148c8:	f7ec f91e 	bl	8000b08 <__aeabi_d2iz>
 80148cc:	f7eb fe02 	bl	80004d4 <__aeabi_i2d>
 80148d0:	4602      	mov	r2, r0
 80148d2:	460b      	mov	r3, r1
 80148d4:	4630      	mov	r0, r6
 80148d6:	4639      	mov	r1, r7
 80148d8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80148dc:	f7eb fcac 	bl	8000238 <__aeabi_dsub>
 80148e0:	4b19      	ldr	r3, [pc, #100]	@ (8014948 <__ieee754_rem_pio2+0x3f0>)
 80148e2:	2200      	movs	r2, #0
 80148e4:	f7eb fe60 	bl	80005a8 <__aeabi_dmul>
 80148e8:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80148ec:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 80148f0:	f04f 0803 	mov.w	r8, #3
 80148f4:	2600      	movs	r6, #0
 80148f6:	2700      	movs	r7, #0
 80148f8:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 80148fc:	4632      	mov	r2, r6
 80148fe:	463b      	mov	r3, r7
 8014900:	46c2      	mov	sl, r8
 8014902:	f108 38ff 	add.w	r8, r8, #4294967295
 8014906:	f7ec f8b7 	bl	8000a78 <__aeabi_dcmpeq>
 801490a:	2800      	cmp	r0, #0
 801490c:	d1f4      	bne.n	80148f8 <__ieee754_rem_pio2+0x3a0>
 801490e:	4b0f      	ldr	r3, [pc, #60]	@ (801494c <__ieee754_rem_pio2+0x3f4>)
 8014910:	9301      	str	r3, [sp, #4]
 8014912:	2302      	movs	r3, #2
 8014914:	9300      	str	r3, [sp, #0]
 8014916:	462a      	mov	r2, r5
 8014918:	4653      	mov	r3, sl
 801491a:	4621      	mov	r1, r4
 801491c:	a806      	add	r0, sp, #24
 801491e:	f000 fbbb 	bl	8015098 <__kernel_rem_pio2>
 8014922:	9b04      	ldr	r3, [sp, #16]
 8014924:	2b00      	cmp	r3, #0
 8014926:	4605      	mov	r5, r0
 8014928:	f6bf ae53 	bge.w	80145d2 <__ieee754_rem_pio2+0x7a>
 801492c:	e9d4 2100 	ldrd	r2, r1, [r4]
 8014930:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8014934:	e9c4 2300 	strd	r2, r3, [r4]
 8014938:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 801493c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8014940:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8014944:	e740      	b.n	80147c8 <__ieee754_rem_pio2+0x270>
 8014946:	bf00      	nop
 8014948:	41700000 	.word	0x41700000
 801494c:	080188b0 	.word	0x080188b0

08014950 <acos>:
 8014950:	b538      	push	{r3, r4, r5, lr}
 8014952:	ed2d 8b02 	vpush	{d8}
 8014956:	ec55 4b10 	vmov	r4, r5, d0
 801495a:	f000 feed 	bl	8015738 <__ieee754_acos>
 801495e:	4622      	mov	r2, r4
 8014960:	462b      	mov	r3, r5
 8014962:	4620      	mov	r0, r4
 8014964:	4629      	mov	r1, r5
 8014966:	eeb0 8a40 	vmov.f32	s16, s0
 801496a:	eef0 8a60 	vmov.f32	s17, s1
 801496e:	f7ec f8b5 	bl	8000adc <__aeabi_dcmpun>
 8014972:	b9a8      	cbnz	r0, 80149a0 <acos+0x50>
 8014974:	ec45 4b10 	vmov	d0, r4, r5
 8014978:	f000 f81e 	bl	80149b8 <fabs>
 801497c:	4b0c      	ldr	r3, [pc, #48]	@ (80149b0 <acos+0x60>)
 801497e:	ec51 0b10 	vmov	r0, r1, d0
 8014982:	2200      	movs	r2, #0
 8014984:	f7ec f8a0 	bl	8000ac8 <__aeabi_dcmpgt>
 8014988:	b150      	cbz	r0, 80149a0 <acos+0x50>
 801498a:	f7fb fdcf 	bl	801052c <__errno>
 801498e:	ecbd 8b02 	vpop	{d8}
 8014992:	2321      	movs	r3, #33	@ 0x21
 8014994:	6003      	str	r3, [r0, #0]
 8014996:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801499a:	4806      	ldr	r0, [pc, #24]	@ (80149b4 <acos+0x64>)
 801499c:	f7fe ba54 	b.w	8012e48 <nan>
 80149a0:	eeb0 0a48 	vmov.f32	s0, s16
 80149a4:	eef0 0a68 	vmov.f32	s1, s17
 80149a8:	ecbd 8b02 	vpop	{d8}
 80149ac:	bd38      	pop	{r3, r4, r5, pc}
 80149ae:	bf00      	nop
 80149b0:	3ff00000 	.word	0x3ff00000
 80149b4:	0801867e 	.word	0x0801867e

080149b8 <fabs>:
 80149b8:	ec51 0b10 	vmov	r0, r1, d0
 80149bc:	4602      	mov	r2, r0
 80149be:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80149c2:	ec43 2b10 	vmov	d0, r2, r3
 80149c6:	4770      	bx	lr

080149c8 <__ieee754_powf>:
 80149c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80149cc:	ee10 4a90 	vmov	r4, s1
 80149d0:	f034 4900 	bics.w	r9, r4, #2147483648	@ 0x80000000
 80149d4:	ed2d 8b02 	vpush	{d8}
 80149d8:	ee10 6a10 	vmov	r6, s0
 80149dc:	eeb0 8a40 	vmov.f32	s16, s0
 80149e0:	eef0 8a60 	vmov.f32	s17, s1
 80149e4:	d10c      	bne.n	8014a00 <__ieee754_powf+0x38>
 80149e6:	f486 0680 	eor.w	r6, r6, #4194304	@ 0x400000
 80149ea:	0076      	lsls	r6, r6, #1
 80149ec:	f516 0f00 	cmn.w	r6, #8388608	@ 0x800000
 80149f0:	f240 8274 	bls.w	8014edc <__ieee754_powf+0x514>
 80149f4:	ee38 0a28 	vadd.f32	s0, s16, s17
 80149f8:	ecbd 8b02 	vpop	{d8}
 80149fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014a00:	f026 4800 	bic.w	r8, r6, #2147483648	@ 0x80000000
 8014a04:	f1b8 4fff 	cmp.w	r8, #2139095040	@ 0x7f800000
 8014a08:	d802      	bhi.n	8014a10 <__ieee754_powf+0x48>
 8014a0a:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 8014a0e:	d908      	bls.n	8014a22 <__ieee754_powf+0x5a>
 8014a10:	f1b6 5f7e 	cmp.w	r6, #1065353216	@ 0x3f800000
 8014a14:	d1ee      	bne.n	80149f4 <__ieee754_powf+0x2c>
 8014a16:	f484 0480 	eor.w	r4, r4, #4194304	@ 0x400000
 8014a1a:	0064      	lsls	r4, r4, #1
 8014a1c:	f514 0f00 	cmn.w	r4, #8388608	@ 0x800000
 8014a20:	e7e6      	b.n	80149f0 <__ieee754_powf+0x28>
 8014a22:	2e00      	cmp	r6, #0
 8014a24:	da1f      	bge.n	8014a66 <__ieee754_powf+0x9e>
 8014a26:	f1b9 4f97 	cmp.w	r9, #1266679808	@ 0x4b800000
 8014a2a:	f080 8260 	bcs.w	8014eee <__ieee754_powf+0x526>
 8014a2e:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8014a32:	d32f      	bcc.n	8014a94 <__ieee754_powf+0xcc>
 8014a34:	ea4f 53e9 	mov.w	r3, r9, asr #23
 8014a38:	f1c3 0396 	rsb	r3, r3, #150	@ 0x96
 8014a3c:	fa49 f503 	asr.w	r5, r9, r3
 8014a40:	fa05 f303 	lsl.w	r3, r5, r3
 8014a44:	454b      	cmp	r3, r9
 8014a46:	d123      	bne.n	8014a90 <__ieee754_powf+0xc8>
 8014a48:	f005 0501 	and.w	r5, r5, #1
 8014a4c:	f1c5 0502 	rsb	r5, r5, #2
 8014a50:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8014a54:	d11f      	bne.n	8014a96 <__ieee754_powf+0xce>
 8014a56:	2c00      	cmp	r4, #0
 8014a58:	f280 8246 	bge.w	8014ee8 <__ieee754_powf+0x520>
 8014a5c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014a60:	ee87 0a88 	vdiv.f32	s0, s15, s16
 8014a64:	e7c8      	b.n	80149f8 <__ieee754_powf+0x30>
 8014a66:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 8014a6a:	d111      	bne.n	8014a90 <__ieee754_powf+0xc8>
 8014a6c:	f1b8 5f7e 	cmp.w	r8, #1065353216	@ 0x3f800000
 8014a70:	f000 8234 	beq.w	8014edc <__ieee754_powf+0x514>
 8014a74:	d906      	bls.n	8014a84 <__ieee754_powf+0xbc>
 8014a76:	ed9f 0ac5 	vldr	s0, [pc, #788]	@ 8014d8c <__ieee754_powf+0x3c4>
 8014a7a:	2c00      	cmp	r4, #0
 8014a7c:	bfa8      	it	ge
 8014a7e:	eeb0 0a68 	vmovge.f32	s0, s17
 8014a82:	e7b9      	b.n	80149f8 <__ieee754_powf+0x30>
 8014a84:	2c00      	cmp	r4, #0
 8014a86:	f280 822c 	bge.w	8014ee2 <__ieee754_powf+0x51a>
 8014a8a:	eeb1 0a68 	vneg.f32	s0, s17
 8014a8e:	e7b3      	b.n	80149f8 <__ieee754_powf+0x30>
 8014a90:	2500      	movs	r5, #0
 8014a92:	e7dd      	b.n	8014a50 <__ieee754_powf+0x88>
 8014a94:	2500      	movs	r5, #0
 8014a96:	f1b4 4f80 	cmp.w	r4, #1073741824	@ 0x40000000
 8014a9a:	d102      	bne.n	8014aa2 <__ieee754_powf+0xda>
 8014a9c:	ee28 0a08 	vmul.f32	s0, s16, s16
 8014aa0:	e7aa      	b.n	80149f8 <__ieee754_powf+0x30>
 8014aa2:	f1b4 5f7c 	cmp.w	r4, #1056964608	@ 0x3f000000
 8014aa6:	f040 8227 	bne.w	8014ef8 <__ieee754_powf+0x530>
 8014aaa:	2e00      	cmp	r6, #0
 8014aac:	f2c0 8224 	blt.w	8014ef8 <__ieee754_powf+0x530>
 8014ab0:	eeb0 0a48 	vmov.f32	s0, s16
 8014ab4:	ecbd 8b02 	vpop	{d8}
 8014ab8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014abc:	f000 bae6 	b.w	801508c <__ieee754_sqrtf>
 8014ac0:	2d01      	cmp	r5, #1
 8014ac2:	d199      	bne.n	80149f8 <__ieee754_powf+0x30>
 8014ac4:	eeb1 0a40 	vneg.f32	s0, s0
 8014ac8:	e796      	b.n	80149f8 <__ieee754_powf+0x30>
 8014aca:	0ff0      	lsrs	r0, r6, #31
 8014acc:	3801      	subs	r0, #1
 8014ace:	ea55 0300 	orrs.w	r3, r5, r0
 8014ad2:	d104      	bne.n	8014ade <__ieee754_powf+0x116>
 8014ad4:	ee38 8a48 	vsub.f32	s16, s16, s16
 8014ad8:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8014adc:	e78c      	b.n	80149f8 <__ieee754_powf+0x30>
 8014ade:	f1b9 4f9a 	cmp.w	r9, #1291845632	@ 0x4d000000
 8014ae2:	d96d      	bls.n	8014bc0 <__ieee754_powf+0x1f8>
 8014ae4:	4baa      	ldr	r3, [pc, #680]	@ (8014d90 <__ieee754_powf+0x3c8>)
 8014ae6:	4598      	cmp	r8, r3
 8014ae8:	d808      	bhi.n	8014afc <__ieee754_powf+0x134>
 8014aea:	2c00      	cmp	r4, #0
 8014aec:	da0b      	bge.n	8014b06 <__ieee754_powf+0x13e>
 8014aee:	2000      	movs	r0, #0
 8014af0:	ecbd 8b02 	vpop	{d8}
 8014af4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014af8:	f000 bac2 	b.w	8015080 <__math_oflowf>
 8014afc:	4ba5      	ldr	r3, [pc, #660]	@ (8014d94 <__ieee754_powf+0x3cc>)
 8014afe:	4598      	cmp	r8, r3
 8014b00:	d908      	bls.n	8014b14 <__ieee754_powf+0x14c>
 8014b02:	2c00      	cmp	r4, #0
 8014b04:	dcf3      	bgt.n	8014aee <__ieee754_powf+0x126>
 8014b06:	2000      	movs	r0, #0
 8014b08:	ecbd 8b02 	vpop	{d8}
 8014b0c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014b10:	f000 bab0 	b.w	8015074 <__math_uflowf>
 8014b14:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014b18:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014b1c:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8014d98 <__ieee754_powf+0x3d0>
 8014b20:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8014b24:	eee0 6a67 	vfms.f32	s13, s0, s15
 8014b28:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8014b2c:	eee6 7ac0 	vfms.f32	s15, s13, s0
 8014b30:	ee20 7a00 	vmul.f32	s14, s0, s0
 8014b34:	eddf 6a99 	vldr	s13, [pc, #612]	@ 8014d9c <__ieee754_powf+0x3d4>
 8014b38:	ee27 7a27 	vmul.f32	s14, s14, s15
 8014b3c:	eddf 7a98 	vldr	s15, [pc, #608]	@ 8014da0 <__ieee754_powf+0x3d8>
 8014b40:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 8014b44:	ed9f 7a97 	vldr	s14, [pc, #604]	@ 8014da4 <__ieee754_powf+0x3dc>
 8014b48:	eee0 7a07 	vfma.f32	s15, s0, s14
 8014b4c:	eeb0 7a67 	vmov.f32	s14, s15
 8014b50:	eea0 7a26 	vfma.f32	s14, s0, s13
 8014b54:	ee17 3a10 	vmov	r3, s14
 8014b58:	f36f 030b 	bfc	r3, #0, #12
 8014b5c:	ee07 3a10 	vmov	s14, r3
 8014b60:	eeb0 6a47 	vmov.f32	s12, s14
 8014b64:	eea0 6a66 	vfms.f32	s12, s0, s13
 8014b68:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8014b6c:	3d01      	subs	r5, #1
 8014b6e:	4305      	orrs	r5, r0
 8014b70:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014b74:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 8014b78:	f36f 040b 	bfc	r4, #0, #12
 8014b7c:	bf18      	it	ne
 8014b7e:	eeb0 8a66 	vmovne.f32	s16, s13
 8014b82:	ee06 4a90 	vmov	s13, r4
 8014b86:	ee67 0aa8 	vmul.f32	s1, s15, s17
 8014b8a:	ee38 6ae6 	vsub.f32	s12, s17, s13
 8014b8e:	ee67 7a26 	vmul.f32	s15, s14, s13
 8014b92:	eee6 0a07 	vfma.f32	s1, s12, s14
 8014b96:	ee30 7aa7 	vadd.f32	s14, s1, s15
 8014b9a:	ee17 1a10 	vmov	r1, s14
 8014b9e:	2900      	cmp	r1, #0
 8014ba0:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8014ba4:	f340 80dd 	ble.w	8014d62 <__ieee754_powf+0x39a>
 8014ba8:	f1b3 4f86 	cmp.w	r3, #1124073472	@ 0x43000000
 8014bac:	f240 80ca 	bls.w	8014d44 <__ieee754_powf+0x37c>
 8014bb0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8014bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014bb8:	bf4c      	ite	mi
 8014bba:	2001      	movmi	r0, #1
 8014bbc:	2000      	movpl	r0, #0
 8014bbe:	e797      	b.n	8014af0 <__ieee754_powf+0x128>
 8014bc0:	f016 4fff 	tst.w	r6, #2139095040	@ 0x7f800000
 8014bc4:	bf01      	itttt	eq
 8014bc6:	eddf 7a78 	vldreq	s15, [pc, #480]	@ 8014da8 <__ieee754_powf+0x3e0>
 8014bca:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 8014bce:	f06f 0317 	mvneq.w	r3, #23
 8014bd2:	ee17 7a90 	vmoveq	r7, s15
 8014bd6:	ea4f 52e7 	mov.w	r2, r7, asr #23
 8014bda:	bf18      	it	ne
 8014bdc:	2300      	movne	r3, #0
 8014bde:	3a7f      	subs	r2, #127	@ 0x7f
 8014be0:	441a      	add	r2, r3
 8014be2:	4b72      	ldr	r3, [pc, #456]	@ (8014dac <__ieee754_powf+0x3e4>)
 8014be4:	f3c7 0716 	ubfx	r7, r7, #0, #23
 8014be8:	429f      	cmp	r7, r3
 8014bea:	f047 517e 	orr.w	r1, r7, #1065353216	@ 0x3f800000
 8014bee:	dd06      	ble.n	8014bfe <__ieee754_powf+0x236>
 8014bf0:	4b6f      	ldr	r3, [pc, #444]	@ (8014db0 <__ieee754_powf+0x3e8>)
 8014bf2:	429f      	cmp	r7, r3
 8014bf4:	f340 80a4 	ble.w	8014d40 <__ieee754_powf+0x378>
 8014bf8:	3201      	adds	r2, #1
 8014bfa:	f5a1 0100 	sub.w	r1, r1, #8388608	@ 0x800000
 8014bfe:	2600      	movs	r6, #0
 8014c00:	4b6c      	ldr	r3, [pc, #432]	@ (8014db4 <__ieee754_powf+0x3ec>)
 8014c02:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8014c06:	ee07 1a10 	vmov	s14, r1
 8014c0a:	edd3 5a00 	vldr	s11, [r3]
 8014c0e:	4b6a      	ldr	r3, [pc, #424]	@ (8014db8 <__ieee754_powf+0x3f0>)
 8014c10:	ee75 7a87 	vadd.f32	s15, s11, s14
 8014c14:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014c18:	eec6 4aa7 	vdiv.f32	s9, s13, s15
 8014c1c:	1049      	asrs	r1, r1, #1
 8014c1e:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
 8014c22:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
 8014c26:	eb01 5146 	add.w	r1, r1, r6, lsl #21
 8014c2a:	ee37 6a65 	vsub.f32	s12, s14, s11
 8014c2e:	ee07 1a90 	vmov	s15, r1
 8014c32:	ee26 5a24 	vmul.f32	s10, s12, s9
 8014c36:	ee77 5ae5 	vsub.f32	s11, s15, s11
 8014c3a:	ee15 7a10 	vmov	r7, s10
 8014c3e:	401f      	ands	r7, r3
 8014c40:	ee06 7a90 	vmov	s13, r7
 8014c44:	eea6 6ae7 	vfms.f32	s12, s13, s15
 8014c48:	ee37 7a65 	vsub.f32	s14, s14, s11
 8014c4c:	ee65 7a05 	vmul.f32	s15, s10, s10
 8014c50:	eea6 6ac7 	vfms.f32	s12, s13, s14
 8014c54:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8014dbc <__ieee754_powf+0x3f4>
 8014c58:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8014dc0 <__ieee754_powf+0x3f8>
 8014c5c:	eee7 5a87 	vfma.f32	s11, s15, s14
 8014c60:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8014dc4 <__ieee754_powf+0x3fc>
 8014c64:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8014c68:	eddf 5a4b 	vldr	s11, [pc, #300]	@ 8014d98 <__ieee754_powf+0x3d0>
 8014c6c:	eee7 5a27 	vfma.f32	s11, s14, s15
 8014c70:	ed9f 7a55 	vldr	s14, [pc, #340]	@ 8014dc8 <__ieee754_powf+0x400>
 8014c74:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8014c78:	eddf 5a54 	vldr	s11, [pc, #336]	@ 8014dcc <__ieee754_powf+0x404>
 8014c7c:	ee26 6a24 	vmul.f32	s12, s12, s9
 8014c80:	eee7 5a27 	vfma.f32	s11, s14, s15
 8014c84:	ee35 7a26 	vadd.f32	s14, s10, s13
 8014c88:	ee67 4aa7 	vmul.f32	s9, s15, s15
 8014c8c:	ee27 7a06 	vmul.f32	s14, s14, s12
 8014c90:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
 8014c94:	eea4 7aa5 	vfma.f32	s14, s9, s11
 8014c98:	eef0 5a67 	vmov.f32	s11, s15
 8014c9c:	eee6 5aa6 	vfma.f32	s11, s13, s13
 8014ca0:	ee75 5a87 	vadd.f32	s11, s11, s14
 8014ca4:	ee15 1a90 	vmov	r1, s11
 8014ca8:	4019      	ands	r1, r3
 8014caa:	ee05 1a90 	vmov	s11, r1
 8014cae:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8014cb2:	eee6 7ae6 	vfms.f32	s15, s13, s13
 8014cb6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014cba:	ee67 7a85 	vmul.f32	s15, s15, s10
 8014cbe:	eee6 7a25 	vfma.f32	s15, s12, s11
 8014cc2:	eeb0 6a67 	vmov.f32	s12, s15
 8014cc6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014cca:	ee16 1a10 	vmov	r1, s12
 8014cce:	4019      	ands	r1, r3
 8014cd0:	ee06 1a10 	vmov	s12, r1
 8014cd4:	eeb0 7a46 	vmov.f32	s14, s12
 8014cd8:	eea6 7ae5 	vfms.f32	s14, s13, s11
 8014cdc:	493c      	ldr	r1, [pc, #240]	@ (8014dd0 <__ieee754_powf+0x408>)
 8014cde:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 8014ce2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014ce6:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8014dd4 <__ieee754_powf+0x40c>
 8014cea:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8014dd8 <__ieee754_powf+0x410>
 8014cee:	ee67 7a87 	vmul.f32	s15, s15, s14
 8014cf2:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 8014ddc <__ieee754_powf+0x414>
 8014cf6:	eee6 7a07 	vfma.f32	s15, s12, s14
 8014cfa:	ed91 7a00 	vldr	s14, [r1]
 8014cfe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014d02:	ee07 2a10 	vmov	s14, r2
 8014d06:	4a36      	ldr	r2, [pc, #216]	@ (8014de0 <__ieee754_powf+0x418>)
 8014d08:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8014d0c:	eeb0 7a67 	vmov.f32	s14, s15
 8014d10:	eea6 7a25 	vfma.f32	s14, s12, s11
 8014d14:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 8014d18:	ed92 5a00 	vldr	s10, [r2]
 8014d1c:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014d20:	ee37 7a26 	vadd.f32	s14, s14, s13
 8014d24:	ee17 2a10 	vmov	r2, s14
 8014d28:	401a      	ands	r2, r3
 8014d2a:	ee07 2a10 	vmov	s14, r2
 8014d2e:	ee77 6a66 	vsub.f32	s13, s14, s13
 8014d32:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8014d36:	eee6 6a65 	vfms.f32	s13, s12, s11
 8014d3a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014d3e:	e715      	b.n	8014b6c <__ieee754_powf+0x1a4>
 8014d40:	2601      	movs	r6, #1
 8014d42:	e75d      	b.n	8014c00 <__ieee754_powf+0x238>
 8014d44:	d152      	bne.n	8014dec <__ieee754_powf+0x424>
 8014d46:	eddf 6a27 	vldr	s13, [pc, #156]	@ 8014de4 <__ieee754_powf+0x41c>
 8014d4a:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014d4e:	ee70 6aa6 	vadd.f32	s13, s1, s13
 8014d52:	eef4 6ac7 	vcmpe.f32	s13, s14
 8014d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d5a:	f73f af29 	bgt.w	8014bb0 <__ieee754_powf+0x1e8>
 8014d5e:	2386      	movs	r3, #134	@ 0x86
 8014d60:	e048      	b.n	8014df4 <__ieee754_powf+0x42c>
 8014d62:	4a21      	ldr	r2, [pc, #132]	@ (8014de8 <__ieee754_powf+0x420>)
 8014d64:	4293      	cmp	r3, r2
 8014d66:	d907      	bls.n	8014d78 <__ieee754_powf+0x3b0>
 8014d68:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8014d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d70:	bf4c      	ite	mi
 8014d72:	2001      	movmi	r0, #1
 8014d74:	2000      	movpl	r0, #0
 8014d76:	e6c7      	b.n	8014b08 <__ieee754_powf+0x140>
 8014d78:	d138      	bne.n	8014dec <__ieee754_powf+0x424>
 8014d7a:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014d7e:	eeb4 7ae0 	vcmpe.f32	s14, s1
 8014d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d86:	dbea      	blt.n	8014d5e <__ieee754_powf+0x396>
 8014d88:	e7ee      	b.n	8014d68 <__ieee754_powf+0x3a0>
 8014d8a:	bf00      	nop
 8014d8c:	00000000 	.word	0x00000000
 8014d90:	3f7ffff3 	.word	0x3f7ffff3
 8014d94:	3f800007 	.word	0x3f800007
 8014d98:	3eaaaaab 	.word	0x3eaaaaab
 8014d9c:	3fb8aa00 	.word	0x3fb8aa00
 8014da0:	3fb8aa3b 	.word	0x3fb8aa3b
 8014da4:	36eca570 	.word	0x36eca570
 8014da8:	4b800000 	.word	0x4b800000
 8014dac:	001cc471 	.word	0x001cc471
 8014db0:	005db3d6 	.word	0x005db3d6
 8014db4:	080189c8 	.word	0x080189c8
 8014db8:	fffff000 	.word	0xfffff000
 8014dbc:	3e6c3255 	.word	0x3e6c3255
 8014dc0:	3e53f142 	.word	0x3e53f142
 8014dc4:	3e8ba305 	.word	0x3e8ba305
 8014dc8:	3edb6db7 	.word	0x3edb6db7
 8014dcc:	3f19999a 	.word	0x3f19999a
 8014dd0:	080189b8 	.word	0x080189b8
 8014dd4:	3f76384f 	.word	0x3f76384f
 8014dd8:	3f763800 	.word	0x3f763800
 8014ddc:	369dc3a0 	.word	0x369dc3a0
 8014de0:	080189c0 	.word	0x080189c0
 8014de4:	3338aa3c 	.word	0x3338aa3c
 8014de8:	43160000 	.word	0x43160000
 8014dec:	f1b3 5f7c 	cmp.w	r3, #1056964608	@ 0x3f000000
 8014df0:	d96f      	bls.n	8014ed2 <__ieee754_powf+0x50a>
 8014df2:	15db      	asrs	r3, r3, #23
 8014df4:	3b7e      	subs	r3, #126	@ 0x7e
 8014df6:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8014dfa:	4118      	asrs	r0, r3
 8014dfc:	4408      	add	r0, r1
 8014dfe:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8014e02:	4a4e      	ldr	r2, [pc, #312]	@ (8014f3c <__ieee754_powf+0x574>)
 8014e04:	3b7f      	subs	r3, #127	@ 0x7f
 8014e06:	411a      	asrs	r2, r3
 8014e08:	4002      	ands	r2, r0
 8014e0a:	ee07 2a10 	vmov	s14, r2
 8014e0e:	f3c0 0016 	ubfx	r0, r0, #0, #23
 8014e12:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8014e16:	f1c3 0317 	rsb	r3, r3, #23
 8014e1a:	4118      	asrs	r0, r3
 8014e1c:	2900      	cmp	r1, #0
 8014e1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014e22:	bfb8      	it	lt
 8014e24:	4240      	neglt	r0, r0
 8014e26:	ee77 6aa0 	vadd.f32	s13, s15, s1
 8014e2a:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8014f40 <__ieee754_powf+0x578>
 8014e2e:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8014f44 <__ieee754_powf+0x57c>
 8014e32:	ee16 3a90 	vmov	r3, s13
 8014e36:	f36f 030b 	bfc	r3, #0, #12
 8014e3a:	ee06 3a90 	vmov	s13, r3
 8014e3e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8014e42:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014e46:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8014e4a:	eddf 7a3f 	vldr	s15, [pc, #252]	@ 8014f48 <__ieee754_powf+0x580>
 8014e4e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8014e52:	eee0 7a87 	vfma.f32	s15, s1, s14
 8014e56:	eeb0 7a67 	vmov.f32	s14, s15
 8014e5a:	eea6 7a86 	vfma.f32	s14, s13, s12
 8014e5e:	eef0 5a47 	vmov.f32	s11, s14
 8014e62:	eee6 5ac6 	vfms.f32	s11, s13, s12
 8014e66:	ee67 6a07 	vmul.f32	s13, s14, s14
 8014e6a:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8014e6e:	ed9f 6a37 	vldr	s12, [pc, #220]	@ 8014f4c <__ieee754_powf+0x584>
 8014e72:	eddf 5a37 	vldr	s11, [pc, #220]	@ 8014f50 <__ieee754_powf+0x588>
 8014e76:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014e7a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 8014f54 <__ieee754_powf+0x58c>
 8014e7e:	eee6 5a26 	vfma.f32	s11, s12, s13
 8014e82:	ed9f 6a35 	vldr	s12, [pc, #212]	@ 8014f58 <__ieee754_powf+0x590>
 8014e86:	eea5 6aa6 	vfma.f32	s12, s11, s13
 8014e8a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8014f5c <__ieee754_powf+0x594>
 8014e8e:	eee6 5a26 	vfma.f32	s11, s12, s13
 8014e92:	eeb0 6a47 	vmov.f32	s12, s14
 8014e96:	eea5 6ae6 	vfms.f32	s12, s11, s13
 8014e9a:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8014e9e:	ee67 5a06 	vmul.f32	s11, s14, s12
 8014ea2:	ee36 6a66 	vsub.f32	s12, s12, s13
 8014ea6:	eee7 7a27 	vfma.f32	s15, s14, s15
 8014eaa:	eec5 6a86 	vdiv.f32	s13, s11, s12
 8014eae:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8014eb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014eb6:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014eba:	ee10 3a10 	vmov	r3, s0
 8014ebe:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 8014ec2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8014ec6:	da06      	bge.n	8014ed6 <__ieee754_powf+0x50e>
 8014ec8:	f000 f854 	bl	8014f74 <scalbnf>
 8014ecc:	ee20 0a08 	vmul.f32	s0, s0, s16
 8014ed0:	e592      	b.n	80149f8 <__ieee754_powf+0x30>
 8014ed2:	2000      	movs	r0, #0
 8014ed4:	e7a7      	b.n	8014e26 <__ieee754_powf+0x45e>
 8014ed6:	ee00 3a10 	vmov	s0, r3
 8014eda:	e7f7      	b.n	8014ecc <__ieee754_powf+0x504>
 8014edc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014ee0:	e58a      	b.n	80149f8 <__ieee754_powf+0x30>
 8014ee2:	ed9f 0a1f 	vldr	s0, [pc, #124]	@ 8014f60 <__ieee754_powf+0x598>
 8014ee6:	e587      	b.n	80149f8 <__ieee754_powf+0x30>
 8014ee8:	eeb0 0a48 	vmov.f32	s0, s16
 8014eec:	e584      	b.n	80149f8 <__ieee754_powf+0x30>
 8014eee:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 8014ef2:	f43f adbb 	beq.w	8014a6c <__ieee754_powf+0xa4>
 8014ef6:	2502      	movs	r5, #2
 8014ef8:	eeb0 0a48 	vmov.f32	s0, s16
 8014efc:	f000 f832 	bl	8014f64 <fabsf>
 8014f00:	f026 4340 	bic.w	r3, r6, #3221225472	@ 0xc0000000
 8014f04:	f1b3 5f7e 	cmp.w	r3, #1065353216	@ 0x3f800000
 8014f08:	4647      	mov	r7, r8
 8014f0a:	d003      	beq.n	8014f14 <__ieee754_powf+0x54c>
 8014f0c:	f1b8 0f00 	cmp.w	r8, #0
 8014f10:	f47f addb 	bne.w	8014aca <__ieee754_powf+0x102>
 8014f14:	2c00      	cmp	r4, #0
 8014f16:	bfbc      	itt	lt
 8014f18:	eef7 7a00 	vmovlt.f32	s15, #112	@ 0x3f800000  1.0
 8014f1c:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 8014f20:	2e00      	cmp	r6, #0
 8014f22:	f6bf ad69 	bge.w	80149f8 <__ieee754_powf+0x30>
 8014f26:	f1a8 587e 	sub.w	r8, r8, #1065353216	@ 0x3f800000
 8014f2a:	ea58 0805 	orrs.w	r8, r8, r5
 8014f2e:	f47f adc7 	bne.w	8014ac0 <__ieee754_powf+0xf8>
 8014f32:	ee70 7a40 	vsub.f32	s15, s0, s0
 8014f36:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8014f3a:	e55d      	b.n	80149f8 <__ieee754_powf+0x30>
 8014f3c:	ff800000 	.word	0xff800000
 8014f40:	3f317218 	.word	0x3f317218
 8014f44:	3f317200 	.word	0x3f317200
 8014f48:	35bfbe8c 	.word	0x35bfbe8c
 8014f4c:	b5ddea0e 	.word	0xb5ddea0e
 8014f50:	3331bb4c 	.word	0x3331bb4c
 8014f54:	388ab355 	.word	0x388ab355
 8014f58:	bb360b61 	.word	0xbb360b61
 8014f5c:	3e2aaaab 	.word	0x3e2aaaab
 8014f60:	00000000 	.word	0x00000000

08014f64 <fabsf>:
 8014f64:	ee10 3a10 	vmov	r3, s0
 8014f68:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8014f6c:	ee00 3a10 	vmov	s0, r3
 8014f70:	4770      	bx	lr
	...

08014f74 <scalbnf>:
 8014f74:	ee10 3a10 	vmov	r3, s0
 8014f78:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8014f7c:	d02b      	beq.n	8014fd6 <scalbnf+0x62>
 8014f7e:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8014f82:	d302      	bcc.n	8014f8a <scalbnf+0x16>
 8014f84:	ee30 0a00 	vadd.f32	s0, s0, s0
 8014f88:	4770      	bx	lr
 8014f8a:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8014f8e:	d123      	bne.n	8014fd8 <scalbnf+0x64>
 8014f90:	4b24      	ldr	r3, [pc, #144]	@ (8015024 <scalbnf+0xb0>)
 8014f92:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8015028 <scalbnf+0xb4>
 8014f96:	4298      	cmp	r0, r3
 8014f98:	ee20 0a27 	vmul.f32	s0, s0, s15
 8014f9c:	db17      	blt.n	8014fce <scalbnf+0x5a>
 8014f9e:	ee10 3a10 	vmov	r3, s0
 8014fa2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8014fa6:	3a19      	subs	r2, #25
 8014fa8:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8014fac:	4288      	cmp	r0, r1
 8014fae:	dd15      	ble.n	8014fdc <scalbnf+0x68>
 8014fb0:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 801502c <scalbnf+0xb8>
 8014fb4:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8015030 <scalbnf+0xbc>
 8014fb8:	ee10 3a10 	vmov	r3, s0
 8014fbc:	eeb0 7a67 	vmov.f32	s14, s15
 8014fc0:	2b00      	cmp	r3, #0
 8014fc2:	bfb8      	it	lt
 8014fc4:	eef0 7a66 	vmovlt.f32	s15, s13
 8014fc8:	ee27 0a87 	vmul.f32	s0, s15, s14
 8014fcc:	4770      	bx	lr
 8014fce:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8015034 <scalbnf+0xc0>
 8014fd2:	ee27 0a80 	vmul.f32	s0, s15, s0
 8014fd6:	4770      	bx	lr
 8014fd8:	0dd2      	lsrs	r2, r2, #23
 8014fda:	e7e5      	b.n	8014fa8 <scalbnf+0x34>
 8014fdc:	4410      	add	r0, r2
 8014fde:	28fe      	cmp	r0, #254	@ 0xfe
 8014fe0:	dce6      	bgt.n	8014fb0 <scalbnf+0x3c>
 8014fe2:	2800      	cmp	r0, #0
 8014fe4:	dd06      	ble.n	8014ff4 <scalbnf+0x80>
 8014fe6:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8014fea:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8014fee:	ee00 3a10 	vmov	s0, r3
 8014ff2:	4770      	bx	lr
 8014ff4:	f110 0f16 	cmn.w	r0, #22
 8014ff8:	da09      	bge.n	801500e <scalbnf+0x9a>
 8014ffa:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8015034 <scalbnf+0xc0>
 8014ffe:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8015038 <scalbnf+0xc4>
 8015002:	ee10 3a10 	vmov	r3, s0
 8015006:	eeb0 7a67 	vmov.f32	s14, s15
 801500a:	2b00      	cmp	r3, #0
 801500c:	e7d9      	b.n	8014fc2 <scalbnf+0x4e>
 801500e:	3019      	adds	r0, #25
 8015010:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8015014:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8015018:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 801503c <scalbnf+0xc8>
 801501c:	ee07 3a90 	vmov	s15, r3
 8015020:	e7d7      	b.n	8014fd2 <scalbnf+0x5e>
 8015022:	bf00      	nop
 8015024:	ffff3cb0 	.word	0xffff3cb0
 8015028:	4c000000 	.word	0x4c000000
 801502c:	7149f2ca 	.word	0x7149f2ca
 8015030:	f149f2ca 	.word	0xf149f2ca
 8015034:	0da24260 	.word	0x0da24260
 8015038:	8da24260 	.word	0x8da24260
 801503c:	33000000 	.word	0x33000000

08015040 <with_errnof>:
 8015040:	b510      	push	{r4, lr}
 8015042:	ed2d 8b02 	vpush	{d8}
 8015046:	eeb0 8a40 	vmov.f32	s16, s0
 801504a:	4604      	mov	r4, r0
 801504c:	f7fb fa6e 	bl	801052c <__errno>
 8015050:	eeb0 0a48 	vmov.f32	s0, s16
 8015054:	ecbd 8b02 	vpop	{d8}
 8015058:	6004      	str	r4, [r0, #0]
 801505a:	bd10      	pop	{r4, pc}

0801505c <xflowf>:
 801505c:	b130      	cbz	r0, 801506c <xflowf+0x10>
 801505e:	eef1 7a40 	vneg.f32	s15, s0
 8015062:	ee27 0a80 	vmul.f32	s0, s15, s0
 8015066:	2022      	movs	r0, #34	@ 0x22
 8015068:	f7ff bfea 	b.w	8015040 <with_errnof>
 801506c:	eef0 7a40 	vmov.f32	s15, s0
 8015070:	e7f7      	b.n	8015062 <xflowf+0x6>
	...

08015074 <__math_uflowf>:
 8015074:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 801507c <__math_uflowf+0x8>
 8015078:	f7ff bff0 	b.w	801505c <xflowf>
 801507c:	10000000 	.word	0x10000000

08015080 <__math_oflowf>:
 8015080:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8015088 <__math_oflowf+0x8>
 8015084:	f7ff bfea 	b.w	801505c <xflowf>
 8015088:	70000000 	.word	0x70000000

0801508c <__ieee754_sqrtf>:
 801508c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8015090:	4770      	bx	lr
 8015092:	0000      	movs	r0, r0
 8015094:	0000      	movs	r0, r0
	...

08015098 <__kernel_rem_pio2>:
 8015098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801509c:	ed2d 8b02 	vpush	{d8}
 80150a0:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 80150a4:	f112 0f14 	cmn.w	r2, #20
 80150a8:	9306      	str	r3, [sp, #24]
 80150aa:	9104      	str	r1, [sp, #16]
 80150ac:	4bc2      	ldr	r3, [pc, #776]	@ (80153b8 <__kernel_rem_pio2+0x320>)
 80150ae:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 80150b0:	9008      	str	r0, [sp, #32]
 80150b2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80150b6:	9300      	str	r3, [sp, #0]
 80150b8:	9b06      	ldr	r3, [sp, #24]
 80150ba:	f103 33ff 	add.w	r3, r3, #4294967295
 80150be:	bfa8      	it	ge
 80150c0:	1ed4      	subge	r4, r2, #3
 80150c2:	9305      	str	r3, [sp, #20]
 80150c4:	bfb2      	itee	lt
 80150c6:	2400      	movlt	r4, #0
 80150c8:	2318      	movge	r3, #24
 80150ca:	fb94 f4f3 	sdivge	r4, r4, r3
 80150ce:	f06f 0317 	mvn.w	r3, #23
 80150d2:	fb04 3303 	mla	r3, r4, r3, r3
 80150d6:	eb03 0b02 	add.w	fp, r3, r2
 80150da:	9b00      	ldr	r3, [sp, #0]
 80150dc:	9a05      	ldr	r2, [sp, #20]
 80150de:	ed9f 8bb2 	vldr	d8, [pc, #712]	@ 80153a8 <__kernel_rem_pio2+0x310>
 80150e2:	eb03 0802 	add.w	r8, r3, r2
 80150e6:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 80150e8:	1aa7      	subs	r7, r4, r2
 80150ea:	ae20      	add	r6, sp, #128	@ 0x80
 80150ec:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80150f0:	2500      	movs	r5, #0
 80150f2:	4545      	cmp	r5, r8
 80150f4:	dd12      	ble.n	801511c <__kernel_rem_pio2+0x84>
 80150f6:	9b06      	ldr	r3, [sp, #24]
 80150f8:	aa20      	add	r2, sp, #128	@ 0x80
 80150fa:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 80150fe:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8015102:	2700      	movs	r7, #0
 8015104:	9b00      	ldr	r3, [sp, #0]
 8015106:	429f      	cmp	r7, r3
 8015108:	dc2e      	bgt.n	8015168 <__kernel_rem_pio2+0xd0>
 801510a:	ed9f 7ba7 	vldr	d7, [pc, #668]	@ 80153a8 <__kernel_rem_pio2+0x310>
 801510e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8015112:	ed8d 7b02 	vstr	d7, [sp, #8]
 8015116:	46a8      	mov	r8, r5
 8015118:	2600      	movs	r6, #0
 801511a:	e01b      	b.n	8015154 <__kernel_rem_pio2+0xbc>
 801511c:	42ef      	cmn	r7, r5
 801511e:	d407      	bmi.n	8015130 <__kernel_rem_pio2+0x98>
 8015120:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8015124:	f7eb f9d6 	bl	80004d4 <__aeabi_i2d>
 8015128:	e8e6 0102 	strd	r0, r1, [r6], #8
 801512c:	3501      	adds	r5, #1
 801512e:	e7e0      	b.n	80150f2 <__kernel_rem_pio2+0x5a>
 8015130:	ec51 0b18 	vmov	r0, r1, d8
 8015134:	e7f8      	b.n	8015128 <__kernel_rem_pio2+0x90>
 8015136:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
 801513a:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 801513e:	f7eb fa33 	bl	80005a8 <__aeabi_dmul>
 8015142:	4602      	mov	r2, r0
 8015144:	460b      	mov	r3, r1
 8015146:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801514a:	f7eb f877 	bl	800023c <__adddf3>
 801514e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8015152:	3601      	adds	r6, #1
 8015154:	9b05      	ldr	r3, [sp, #20]
 8015156:	429e      	cmp	r6, r3
 8015158:	dded      	ble.n	8015136 <__kernel_rem_pio2+0x9e>
 801515a:	ed9d 7b02 	vldr	d7, [sp, #8]
 801515e:	3701      	adds	r7, #1
 8015160:	ecaa 7b02 	vstmia	sl!, {d7}
 8015164:	3508      	adds	r5, #8
 8015166:	e7cd      	b.n	8015104 <__kernel_rem_pio2+0x6c>
 8015168:	9b00      	ldr	r3, [sp, #0]
 801516a:	f8dd 8000 	ldr.w	r8, [sp]
 801516e:	aa0c      	add	r2, sp, #48	@ 0x30
 8015170:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8015174:	930a      	str	r3, [sp, #40]	@ 0x28
 8015176:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8015178:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 801517c:	9309      	str	r3, [sp, #36]	@ 0x24
 801517e:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8015182:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015184:	ab98      	add	r3, sp, #608	@ 0x260
 8015186:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 801518a:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 801518e:	ed8d 7b02 	vstr	d7, [sp, #8]
 8015192:	ac0c      	add	r4, sp, #48	@ 0x30
 8015194:	ab70      	add	r3, sp, #448	@ 0x1c0
 8015196:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 801519a:	46a1      	mov	r9, r4
 801519c:	46c2      	mov	sl, r8
 801519e:	f1ba 0f00 	cmp.w	sl, #0
 80151a2:	dc77      	bgt.n	8015294 <__kernel_rem_pio2+0x1fc>
 80151a4:	4658      	mov	r0, fp
 80151a6:	ed9d 0b02 	vldr	d0, [sp, #8]
 80151aa:	f000 fd21 	bl	8015bf0 <scalbn>
 80151ae:	ec57 6b10 	vmov	r6, r7, d0
 80151b2:	2200      	movs	r2, #0
 80151b4:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 80151b8:	4630      	mov	r0, r6
 80151ba:	4639      	mov	r1, r7
 80151bc:	f7eb f9f4 	bl	80005a8 <__aeabi_dmul>
 80151c0:	ec41 0b10 	vmov	d0, r0, r1
 80151c4:	f7fe fe10 	bl	8013de8 <floor>
 80151c8:	4b7c      	ldr	r3, [pc, #496]	@ (80153bc <__kernel_rem_pio2+0x324>)
 80151ca:	ec51 0b10 	vmov	r0, r1, d0
 80151ce:	2200      	movs	r2, #0
 80151d0:	f7eb f9ea 	bl	80005a8 <__aeabi_dmul>
 80151d4:	4602      	mov	r2, r0
 80151d6:	460b      	mov	r3, r1
 80151d8:	4630      	mov	r0, r6
 80151da:	4639      	mov	r1, r7
 80151dc:	f7eb f82c 	bl	8000238 <__aeabi_dsub>
 80151e0:	460f      	mov	r7, r1
 80151e2:	4606      	mov	r6, r0
 80151e4:	f7eb fc90 	bl	8000b08 <__aeabi_d2iz>
 80151e8:	9002      	str	r0, [sp, #8]
 80151ea:	f7eb f973 	bl	80004d4 <__aeabi_i2d>
 80151ee:	4602      	mov	r2, r0
 80151f0:	460b      	mov	r3, r1
 80151f2:	4630      	mov	r0, r6
 80151f4:	4639      	mov	r1, r7
 80151f6:	f7eb f81f 	bl	8000238 <__aeabi_dsub>
 80151fa:	f1bb 0f00 	cmp.w	fp, #0
 80151fe:	4606      	mov	r6, r0
 8015200:	460f      	mov	r7, r1
 8015202:	dd6c      	ble.n	80152de <__kernel_rem_pio2+0x246>
 8015204:	f108 31ff 	add.w	r1, r8, #4294967295
 8015208:	ab0c      	add	r3, sp, #48	@ 0x30
 801520a:	9d02      	ldr	r5, [sp, #8]
 801520c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8015210:	f1cb 0018 	rsb	r0, fp, #24
 8015214:	fa43 f200 	asr.w	r2, r3, r0
 8015218:	4415      	add	r5, r2
 801521a:	4082      	lsls	r2, r0
 801521c:	1a9b      	subs	r3, r3, r2
 801521e:	aa0c      	add	r2, sp, #48	@ 0x30
 8015220:	9502      	str	r5, [sp, #8]
 8015222:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8015226:	f1cb 0217 	rsb	r2, fp, #23
 801522a:	fa43 f902 	asr.w	r9, r3, r2
 801522e:	f1b9 0f00 	cmp.w	r9, #0
 8015232:	dd64      	ble.n	80152fe <__kernel_rem_pio2+0x266>
 8015234:	9b02      	ldr	r3, [sp, #8]
 8015236:	2200      	movs	r2, #0
 8015238:	3301      	adds	r3, #1
 801523a:	9302      	str	r3, [sp, #8]
 801523c:	4615      	mov	r5, r2
 801523e:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 8015242:	4590      	cmp	r8, r2
 8015244:	f300 80a1 	bgt.w	801538a <__kernel_rem_pio2+0x2f2>
 8015248:	f1bb 0f00 	cmp.w	fp, #0
 801524c:	dd07      	ble.n	801525e <__kernel_rem_pio2+0x1c6>
 801524e:	f1bb 0f01 	cmp.w	fp, #1
 8015252:	f000 80c1 	beq.w	80153d8 <__kernel_rem_pio2+0x340>
 8015256:	f1bb 0f02 	cmp.w	fp, #2
 801525a:	f000 80c8 	beq.w	80153ee <__kernel_rem_pio2+0x356>
 801525e:	f1b9 0f02 	cmp.w	r9, #2
 8015262:	d14c      	bne.n	80152fe <__kernel_rem_pio2+0x266>
 8015264:	4632      	mov	r2, r6
 8015266:	463b      	mov	r3, r7
 8015268:	4955      	ldr	r1, [pc, #340]	@ (80153c0 <__kernel_rem_pio2+0x328>)
 801526a:	2000      	movs	r0, #0
 801526c:	f7ea ffe4 	bl	8000238 <__aeabi_dsub>
 8015270:	4606      	mov	r6, r0
 8015272:	460f      	mov	r7, r1
 8015274:	2d00      	cmp	r5, #0
 8015276:	d042      	beq.n	80152fe <__kernel_rem_pio2+0x266>
 8015278:	4658      	mov	r0, fp
 801527a:	ed9f 0b4d 	vldr	d0, [pc, #308]	@ 80153b0 <__kernel_rem_pio2+0x318>
 801527e:	f000 fcb7 	bl	8015bf0 <scalbn>
 8015282:	4630      	mov	r0, r6
 8015284:	4639      	mov	r1, r7
 8015286:	ec53 2b10 	vmov	r2, r3, d0
 801528a:	f7ea ffd5 	bl	8000238 <__aeabi_dsub>
 801528e:	4606      	mov	r6, r0
 8015290:	460f      	mov	r7, r1
 8015292:	e034      	b.n	80152fe <__kernel_rem_pio2+0x266>
 8015294:	4b4b      	ldr	r3, [pc, #300]	@ (80153c4 <__kernel_rem_pio2+0x32c>)
 8015296:	2200      	movs	r2, #0
 8015298:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801529c:	f7eb f984 	bl	80005a8 <__aeabi_dmul>
 80152a0:	f7eb fc32 	bl	8000b08 <__aeabi_d2iz>
 80152a4:	f7eb f916 	bl	80004d4 <__aeabi_i2d>
 80152a8:	4b47      	ldr	r3, [pc, #284]	@ (80153c8 <__kernel_rem_pio2+0x330>)
 80152aa:	2200      	movs	r2, #0
 80152ac:	4606      	mov	r6, r0
 80152ae:	460f      	mov	r7, r1
 80152b0:	f7eb f97a 	bl	80005a8 <__aeabi_dmul>
 80152b4:	4602      	mov	r2, r0
 80152b6:	460b      	mov	r3, r1
 80152b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80152bc:	f7ea ffbc 	bl	8000238 <__aeabi_dsub>
 80152c0:	f7eb fc22 	bl	8000b08 <__aeabi_d2iz>
 80152c4:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 80152c8:	f849 0b04 	str.w	r0, [r9], #4
 80152cc:	4639      	mov	r1, r7
 80152ce:	4630      	mov	r0, r6
 80152d0:	f7ea ffb4 	bl	800023c <__adddf3>
 80152d4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80152d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80152dc:	e75f      	b.n	801519e <__kernel_rem_pio2+0x106>
 80152de:	d107      	bne.n	80152f0 <__kernel_rem_pio2+0x258>
 80152e0:	f108 33ff 	add.w	r3, r8, #4294967295
 80152e4:	aa0c      	add	r2, sp, #48	@ 0x30
 80152e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80152ea:	ea4f 59e3 	mov.w	r9, r3, asr #23
 80152ee:	e79e      	b.n	801522e <__kernel_rem_pio2+0x196>
 80152f0:	4b36      	ldr	r3, [pc, #216]	@ (80153cc <__kernel_rem_pio2+0x334>)
 80152f2:	2200      	movs	r2, #0
 80152f4:	f7eb fbde 	bl	8000ab4 <__aeabi_dcmpge>
 80152f8:	2800      	cmp	r0, #0
 80152fa:	d143      	bne.n	8015384 <__kernel_rem_pio2+0x2ec>
 80152fc:	4681      	mov	r9, r0
 80152fe:	2200      	movs	r2, #0
 8015300:	2300      	movs	r3, #0
 8015302:	4630      	mov	r0, r6
 8015304:	4639      	mov	r1, r7
 8015306:	f7eb fbb7 	bl	8000a78 <__aeabi_dcmpeq>
 801530a:	2800      	cmp	r0, #0
 801530c:	f000 80c1 	beq.w	8015492 <__kernel_rem_pio2+0x3fa>
 8015310:	f108 33ff 	add.w	r3, r8, #4294967295
 8015314:	2200      	movs	r2, #0
 8015316:	9900      	ldr	r1, [sp, #0]
 8015318:	428b      	cmp	r3, r1
 801531a:	da70      	bge.n	80153fe <__kernel_rem_pio2+0x366>
 801531c:	2a00      	cmp	r2, #0
 801531e:	f000 808b 	beq.w	8015438 <__kernel_rem_pio2+0x3a0>
 8015322:	f108 38ff 	add.w	r8, r8, #4294967295
 8015326:	ab0c      	add	r3, sp, #48	@ 0x30
 8015328:	f1ab 0b18 	sub.w	fp, fp, #24
 801532c:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 8015330:	2b00      	cmp	r3, #0
 8015332:	d0f6      	beq.n	8015322 <__kernel_rem_pio2+0x28a>
 8015334:	4658      	mov	r0, fp
 8015336:	ed9f 0b1e 	vldr	d0, [pc, #120]	@ 80153b0 <__kernel_rem_pio2+0x318>
 801533a:	f000 fc59 	bl	8015bf0 <scalbn>
 801533e:	f108 0301 	add.w	r3, r8, #1
 8015342:	00da      	lsls	r2, r3, #3
 8015344:	9205      	str	r2, [sp, #20]
 8015346:	ec55 4b10 	vmov	r4, r5, d0
 801534a:	aa70      	add	r2, sp, #448	@ 0x1c0
 801534c:	f8df b074 	ldr.w	fp, [pc, #116]	@ 80153c4 <__kernel_rem_pio2+0x32c>
 8015350:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8015354:	4646      	mov	r6, r8
 8015356:	f04f 0a00 	mov.w	sl, #0
 801535a:	2e00      	cmp	r6, #0
 801535c:	f280 80d1 	bge.w	8015502 <__kernel_rem_pio2+0x46a>
 8015360:	4644      	mov	r4, r8
 8015362:	2c00      	cmp	r4, #0
 8015364:	f2c0 80ff 	blt.w	8015566 <__kernel_rem_pio2+0x4ce>
 8015368:	4b19      	ldr	r3, [pc, #100]	@ (80153d0 <__kernel_rem_pio2+0x338>)
 801536a:	461f      	mov	r7, r3
 801536c:	ab70      	add	r3, sp, #448	@ 0x1c0
 801536e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8015372:	9306      	str	r3, [sp, #24]
 8015374:	f04f 0a00 	mov.w	sl, #0
 8015378:	f04f 0b00 	mov.w	fp, #0
 801537c:	2600      	movs	r6, #0
 801537e:	eba8 0504 	sub.w	r5, r8, r4
 8015382:	e0e4      	b.n	801554e <__kernel_rem_pio2+0x4b6>
 8015384:	f04f 0902 	mov.w	r9, #2
 8015388:	e754      	b.n	8015234 <__kernel_rem_pio2+0x19c>
 801538a:	f854 3b04 	ldr.w	r3, [r4], #4
 801538e:	bb0d      	cbnz	r5, 80153d4 <__kernel_rem_pio2+0x33c>
 8015390:	b123      	cbz	r3, 801539c <__kernel_rem_pio2+0x304>
 8015392:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8015396:	f844 3c04 	str.w	r3, [r4, #-4]
 801539a:	2301      	movs	r3, #1
 801539c:	3201      	adds	r2, #1
 801539e:	461d      	mov	r5, r3
 80153a0:	e74f      	b.n	8015242 <__kernel_rem_pio2+0x1aa>
 80153a2:	bf00      	nop
 80153a4:	f3af 8000 	nop.w
	...
 80153b4:	3ff00000 	.word	0x3ff00000
 80153b8:	08018a10 	.word	0x08018a10
 80153bc:	40200000 	.word	0x40200000
 80153c0:	3ff00000 	.word	0x3ff00000
 80153c4:	3e700000 	.word	0x3e700000
 80153c8:	41700000 	.word	0x41700000
 80153cc:	3fe00000 	.word	0x3fe00000
 80153d0:	080189d0 	.word	0x080189d0
 80153d4:	1acb      	subs	r3, r1, r3
 80153d6:	e7de      	b.n	8015396 <__kernel_rem_pio2+0x2fe>
 80153d8:	f108 32ff 	add.w	r2, r8, #4294967295
 80153dc:	ab0c      	add	r3, sp, #48	@ 0x30
 80153de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80153e2:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80153e6:	a90c      	add	r1, sp, #48	@ 0x30
 80153e8:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80153ec:	e737      	b.n	801525e <__kernel_rem_pio2+0x1c6>
 80153ee:	f108 32ff 	add.w	r2, r8, #4294967295
 80153f2:	ab0c      	add	r3, sp, #48	@ 0x30
 80153f4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80153f8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80153fc:	e7f3      	b.n	80153e6 <__kernel_rem_pio2+0x34e>
 80153fe:	a90c      	add	r1, sp, #48	@ 0x30
 8015400:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8015404:	3b01      	subs	r3, #1
 8015406:	430a      	orrs	r2, r1
 8015408:	e785      	b.n	8015316 <__kernel_rem_pio2+0x27e>
 801540a:	3401      	adds	r4, #1
 801540c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8015410:	2a00      	cmp	r2, #0
 8015412:	d0fa      	beq.n	801540a <__kernel_rem_pio2+0x372>
 8015414:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015416:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 801541a:	eb0d 0503 	add.w	r5, sp, r3
 801541e:	9b06      	ldr	r3, [sp, #24]
 8015420:	aa20      	add	r2, sp, #128	@ 0x80
 8015422:	4443      	add	r3, r8
 8015424:	f108 0701 	add.w	r7, r8, #1
 8015428:	3d98      	subs	r5, #152	@ 0x98
 801542a:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 801542e:	4444      	add	r4, r8
 8015430:	42bc      	cmp	r4, r7
 8015432:	da04      	bge.n	801543e <__kernel_rem_pio2+0x3a6>
 8015434:	46a0      	mov	r8, r4
 8015436:	e6a2      	b.n	801517e <__kernel_rem_pio2+0xe6>
 8015438:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801543a:	2401      	movs	r4, #1
 801543c:	e7e6      	b.n	801540c <__kernel_rem_pio2+0x374>
 801543e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015440:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8015444:	f7eb f846 	bl	80004d4 <__aeabi_i2d>
 8015448:	ed9f 7baf 	vldr	d7, [pc, #700]	@ 8015708 <__kernel_rem_pio2+0x670>
 801544c:	e8e6 0102 	strd	r0, r1, [r6], #8
 8015450:	ed8d 7b02 	vstr	d7, [sp, #8]
 8015454:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8015458:	46b2      	mov	sl, r6
 801545a:	f04f 0800 	mov.w	r8, #0
 801545e:	9b05      	ldr	r3, [sp, #20]
 8015460:	4598      	cmp	r8, r3
 8015462:	dd05      	ble.n	8015470 <__kernel_rem_pio2+0x3d8>
 8015464:	ed9d 7b02 	vldr	d7, [sp, #8]
 8015468:	3701      	adds	r7, #1
 801546a:	eca5 7b02 	vstmia	r5!, {d7}
 801546e:	e7df      	b.n	8015430 <__kernel_rem_pio2+0x398>
 8015470:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 8015474:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8015478:	f7eb f896 	bl	80005a8 <__aeabi_dmul>
 801547c:	4602      	mov	r2, r0
 801547e:	460b      	mov	r3, r1
 8015480:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8015484:	f7ea feda 	bl	800023c <__adddf3>
 8015488:	f108 0801 	add.w	r8, r8, #1
 801548c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8015490:	e7e5      	b.n	801545e <__kernel_rem_pio2+0x3c6>
 8015492:	f1cb 0000 	rsb	r0, fp, #0
 8015496:	ec47 6b10 	vmov	d0, r6, r7
 801549a:	f000 fba9 	bl	8015bf0 <scalbn>
 801549e:	ec55 4b10 	vmov	r4, r5, d0
 80154a2:	4b9b      	ldr	r3, [pc, #620]	@ (8015710 <__kernel_rem_pio2+0x678>)
 80154a4:	2200      	movs	r2, #0
 80154a6:	4620      	mov	r0, r4
 80154a8:	4629      	mov	r1, r5
 80154aa:	f7eb fb03 	bl	8000ab4 <__aeabi_dcmpge>
 80154ae:	b300      	cbz	r0, 80154f2 <__kernel_rem_pio2+0x45a>
 80154b0:	4b98      	ldr	r3, [pc, #608]	@ (8015714 <__kernel_rem_pio2+0x67c>)
 80154b2:	2200      	movs	r2, #0
 80154b4:	4620      	mov	r0, r4
 80154b6:	4629      	mov	r1, r5
 80154b8:	f7eb f876 	bl	80005a8 <__aeabi_dmul>
 80154bc:	f7eb fb24 	bl	8000b08 <__aeabi_d2iz>
 80154c0:	4606      	mov	r6, r0
 80154c2:	f7eb f807 	bl	80004d4 <__aeabi_i2d>
 80154c6:	4b92      	ldr	r3, [pc, #584]	@ (8015710 <__kernel_rem_pio2+0x678>)
 80154c8:	2200      	movs	r2, #0
 80154ca:	f7eb f86d 	bl	80005a8 <__aeabi_dmul>
 80154ce:	460b      	mov	r3, r1
 80154d0:	4602      	mov	r2, r0
 80154d2:	4629      	mov	r1, r5
 80154d4:	4620      	mov	r0, r4
 80154d6:	f7ea feaf 	bl	8000238 <__aeabi_dsub>
 80154da:	f7eb fb15 	bl	8000b08 <__aeabi_d2iz>
 80154de:	ab0c      	add	r3, sp, #48	@ 0x30
 80154e0:	f10b 0b18 	add.w	fp, fp, #24
 80154e4:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80154e8:	f108 0801 	add.w	r8, r8, #1
 80154ec:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 80154f0:	e720      	b.n	8015334 <__kernel_rem_pio2+0x29c>
 80154f2:	4620      	mov	r0, r4
 80154f4:	4629      	mov	r1, r5
 80154f6:	f7eb fb07 	bl	8000b08 <__aeabi_d2iz>
 80154fa:	ab0c      	add	r3, sp, #48	@ 0x30
 80154fc:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8015500:	e718      	b.n	8015334 <__kernel_rem_pio2+0x29c>
 8015502:	ab0c      	add	r3, sp, #48	@ 0x30
 8015504:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8015508:	f7ea ffe4 	bl	80004d4 <__aeabi_i2d>
 801550c:	4622      	mov	r2, r4
 801550e:	462b      	mov	r3, r5
 8015510:	f7eb f84a 	bl	80005a8 <__aeabi_dmul>
 8015514:	4652      	mov	r2, sl
 8015516:	e967 0102 	strd	r0, r1, [r7, #-8]!
 801551a:	465b      	mov	r3, fp
 801551c:	4620      	mov	r0, r4
 801551e:	4629      	mov	r1, r5
 8015520:	f7eb f842 	bl	80005a8 <__aeabi_dmul>
 8015524:	3e01      	subs	r6, #1
 8015526:	4604      	mov	r4, r0
 8015528:	460d      	mov	r5, r1
 801552a:	e716      	b.n	801535a <__kernel_rem_pio2+0x2c2>
 801552c:	9906      	ldr	r1, [sp, #24]
 801552e:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 8015532:	9106      	str	r1, [sp, #24]
 8015534:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 8015538:	f7eb f836 	bl	80005a8 <__aeabi_dmul>
 801553c:	4602      	mov	r2, r0
 801553e:	460b      	mov	r3, r1
 8015540:	4650      	mov	r0, sl
 8015542:	4659      	mov	r1, fp
 8015544:	f7ea fe7a 	bl	800023c <__adddf3>
 8015548:	3601      	adds	r6, #1
 801554a:	4682      	mov	sl, r0
 801554c:	468b      	mov	fp, r1
 801554e:	9b00      	ldr	r3, [sp, #0]
 8015550:	429e      	cmp	r6, r3
 8015552:	dc01      	bgt.n	8015558 <__kernel_rem_pio2+0x4c0>
 8015554:	42ae      	cmp	r6, r5
 8015556:	dde9      	ble.n	801552c <__kernel_rem_pio2+0x494>
 8015558:	ab48      	add	r3, sp, #288	@ 0x120
 801555a:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 801555e:	e9c5 ab00 	strd	sl, fp, [r5]
 8015562:	3c01      	subs	r4, #1
 8015564:	e6fd      	b.n	8015362 <__kernel_rem_pio2+0x2ca>
 8015566:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8015568:	2b02      	cmp	r3, #2
 801556a:	dc0b      	bgt.n	8015584 <__kernel_rem_pio2+0x4ec>
 801556c:	2b00      	cmp	r3, #0
 801556e:	dc35      	bgt.n	80155dc <__kernel_rem_pio2+0x544>
 8015570:	d059      	beq.n	8015626 <__kernel_rem_pio2+0x58e>
 8015572:	9b02      	ldr	r3, [sp, #8]
 8015574:	f003 0007 	and.w	r0, r3, #7
 8015578:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 801557c:	ecbd 8b02 	vpop	{d8}
 8015580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015584:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8015586:	2b03      	cmp	r3, #3
 8015588:	d1f3      	bne.n	8015572 <__kernel_rem_pio2+0x4da>
 801558a:	9b05      	ldr	r3, [sp, #20]
 801558c:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8015590:	eb0d 0403 	add.w	r4, sp, r3
 8015594:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8015598:	4625      	mov	r5, r4
 801559a:	46c2      	mov	sl, r8
 801559c:	f1ba 0f00 	cmp.w	sl, #0
 80155a0:	dc69      	bgt.n	8015676 <__kernel_rem_pio2+0x5de>
 80155a2:	4645      	mov	r5, r8
 80155a4:	2d01      	cmp	r5, #1
 80155a6:	f300 8087 	bgt.w	80156b8 <__kernel_rem_pio2+0x620>
 80155aa:	9c05      	ldr	r4, [sp, #20]
 80155ac:	ab48      	add	r3, sp, #288	@ 0x120
 80155ae:	441c      	add	r4, r3
 80155b0:	2000      	movs	r0, #0
 80155b2:	2100      	movs	r1, #0
 80155b4:	f1b8 0f01 	cmp.w	r8, #1
 80155b8:	f300 809c 	bgt.w	80156f4 <__kernel_rem_pio2+0x65c>
 80155bc:	e9dd 5648 	ldrd	r5, r6, [sp, #288]	@ 0x120
 80155c0:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	@ 0x128
 80155c4:	f1b9 0f00 	cmp.w	r9, #0
 80155c8:	f040 80a6 	bne.w	8015718 <__kernel_rem_pio2+0x680>
 80155cc:	9b04      	ldr	r3, [sp, #16]
 80155ce:	e9c3 5600 	strd	r5, r6, [r3]
 80155d2:	e9c3 7802 	strd	r7, r8, [r3, #8]
 80155d6:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80155da:	e7ca      	b.n	8015572 <__kernel_rem_pio2+0x4da>
 80155dc:	9d05      	ldr	r5, [sp, #20]
 80155de:	ab48      	add	r3, sp, #288	@ 0x120
 80155e0:	441d      	add	r5, r3
 80155e2:	4644      	mov	r4, r8
 80155e4:	2000      	movs	r0, #0
 80155e6:	2100      	movs	r1, #0
 80155e8:	2c00      	cmp	r4, #0
 80155ea:	da35      	bge.n	8015658 <__kernel_rem_pio2+0x5c0>
 80155ec:	f1b9 0f00 	cmp.w	r9, #0
 80155f0:	d038      	beq.n	8015664 <__kernel_rem_pio2+0x5cc>
 80155f2:	4602      	mov	r2, r0
 80155f4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80155f8:	9c04      	ldr	r4, [sp, #16]
 80155fa:	e9c4 2300 	strd	r2, r3, [r4]
 80155fe:	4602      	mov	r2, r0
 8015600:	460b      	mov	r3, r1
 8015602:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 8015606:	f7ea fe17 	bl	8000238 <__aeabi_dsub>
 801560a:	ad4a      	add	r5, sp, #296	@ 0x128
 801560c:	2401      	movs	r4, #1
 801560e:	45a0      	cmp	r8, r4
 8015610:	da2b      	bge.n	801566a <__kernel_rem_pio2+0x5d2>
 8015612:	f1b9 0f00 	cmp.w	r9, #0
 8015616:	d002      	beq.n	801561e <__kernel_rem_pio2+0x586>
 8015618:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 801561c:	4619      	mov	r1, r3
 801561e:	9b04      	ldr	r3, [sp, #16]
 8015620:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8015624:	e7a5      	b.n	8015572 <__kernel_rem_pio2+0x4da>
 8015626:	9c05      	ldr	r4, [sp, #20]
 8015628:	ab48      	add	r3, sp, #288	@ 0x120
 801562a:	441c      	add	r4, r3
 801562c:	2000      	movs	r0, #0
 801562e:	2100      	movs	r1, #0
 8015630:	f1b8 0f00 	cmp.w	r8, #0
 8015634:	da09      	bge.n	801564a <__kernel_rem_pio2+0x5b2>
 8015636:	f1b9 0f00 	cmp.w	r9, #0
 801563a:	d002      	beq.n	8015642 <__kernel_rem_pio2+0x5aa>
 801563c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8015640:	4619      	mov	r1, r3
 8015642:	9b04      	ldr	r3, [sp, #16]
 8015644:	e9c3 0100 	strd	r0, r1, [r3]
 8015648:	e793      	b.n	8015572 <__kernel_rem_pio2+0x4da>
 801564a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 801564e:	f7ea fdf5 	bl	800023c <__adddf3>
 8015652:	f108 38ff 	add.w	r8, r8, #4294967295
 8015656:	e7eb      	b.n	8015630 <__kernel_rem_pio2+0x598>
 8015658:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 801565c:	f7ea fdee 	bl	800023c <__adddf3>
 8015660:	3c01      	subs	r4, #1
 8015662:	e7c1      	b.n	80155e8 <__kernel_rem_pio2+0x550>
 8015664:	4602      	mov	r2, r0
 8015666:	460b      	mov	r3, r1
 8015668:	e7c6      	b.n	80155f8 <__kernel_rem_pio2+0x560>
 801566a:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 801566e:	f7ea fde5 	bl	800023c <__adddf3>
 8015672:	3401      	adds	r4, #1
 8015674:	e7cb      	b.n	801560e <__kernel_rem_pio2+0x576>
 8015676:	ed35 7b02 	vldmdb	r5!, {d7}
 801567a:	ed8d 7b00 	vstr	d7, [sp]
 801567e:	ed95 7b02 	vldr	d7, [r5, #8]
 8015682:	e9dd 0100 	ldrd	r0, r1, [sp]
 8015686:	ec53 2b17 	vmov	r2, r3, d7
 801568a:	ed8d 7b06 	vstr	d7, [sp, #24]
 801568e:	f7ea fdd5 	bl	800023c <__adddf3>
 8015692:	4602      	mov	r2, r0
 8015694:	460b      	mov	r3, r1
 8015696:	4606      	mov	r6, r0
 8015698:	460f      	mov	r7, r1
 801569a:	e9dd 0100 	ldrd	r0, r1, [sp]
 801569e:	f7ea fdcb 	bl	8000238 <__aeabi_dsub>
 80156a2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80156a6:	f7ea fdc9 	bl	800023c <__adddf3>
 80156aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80156ae:	e9c5 0102 	strd	r0, r1, [r5, #8]
 80156b2:	e9c5 6700 	strd	r6, r7, [r5]
 80156b6:	e771      	b.n	801559c <__kernel_rem_pio2+0x504>
 80156b8:	ed34 7b02 	vldmdb	r4!, {d7}
 80156bc:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 80156c0:	ec51 0b17 	vmov	r0, r1, d7
 80156c4:	4652      	mov	r2, sl
 80156c6:	465b      	mov	r3, fp
 80156c8:	ed8d 7b00 	vstr	d7, [sp]
 80156cc:	f7ea fdb6 	bl	800023c <__adddf3>
 80156d0:	4602      	mov	r2, r0
 80156d2:	460b      	mov	r3, r1
 80156d4:	4606      	mov	r6, r0
 80156d6:	460f      	mov	r7, r1
 80156d8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80156dc:	f7ea fdac 	bl	8000238 <__aeabi_dsub>
 80156e0:	4652      	mov	r2, sl
 80156e2:	465b      	mov	r3, fp
 80156e4:	f7ea fdaa 	bl	800023c <__adddf3>
 80156e8:	3d01      	subs	r5, #1
 80156ea:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80156ee:	e9c4 6700 	strd	r6, r7, [r4]
 80156f2:	e757      	b.n	80155a4 <__kernel_rem_pio2+0x50c>
 80156f4:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80156f8:	f7ea fda0 	bl	800023c <__adddf3>
 80156fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8015700:	e758      	b.n	80155b4 <__kernel_rem_pio2+0x51c>
 8015702:	bf00      	nop
 8015704:	f3af 8000 	nop.w
	...
 8015710:	41700000 	.word	0x41700000
 8015714:	3e700000 	.word	0x3e700000
 8015718:	9b04      	ldr	r3, [sp, #16]
 801571a:	9a04      	ldr	r2, [sp, #16]
 801571c:	601d      	str	r5, [r3, #0]
 801571e:	f106 4400 	add.w	r4, r6, #2147483648	@ 0x80000000
 8015722:	605c      	str	r4, [r3, #4]
 8015724:	609f      	str	r7, [r3, #8]
 8015726:	f108 4300 	add.w	r3, r8, #2147483648	@ 0x80000000
 801572a:	60d3      	str	r3, [r2, #12]
 801572c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8015730:	6110      	str	r0, [r2, #16]
 8015732:	6153      	str	r3, [r2, #20]
 8015734:	e71d      	b.n	8015572 <__kernel_rem_pio2+0x4da>
 8015736:	bf00      	nop

08015738 <__ieee754_acos>:
 8015738:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801573c:	ec55 4b10 	vmov	r4, r5, d0
 8015740:	49b7      	ldr	r1, [pc, #732]	@ (8015a20 <__ieee754_acos+0x2e8>)
 8015742:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8015746:	428b      	cmp	r3, r1
 8015748:	d919      	bls.n	801577e <__ieee754_acos+0x46>
 801574a:	f103 4340 	add.w	r3, r3, #3221225472	@ 0xc0000000
 801574e:	f503 1380 	add.w	r3, r3, #1048576	@ 0x100000
 8015752:	4323      	orrs	r3, r4
 8015754:	d106      	bne.n	8015764 <__ieee754_acos+0x2c>
 8015756:	2d00      	cmp	r5, #0
 8015758:	f340 8210 	ble.w	8015b7c <__ieee754_acos+0x444>
 801575c:	ed9f 0b94 	vldr	d0, [pc, #592]	@ 80159b0 <__ieee754_acos+0x278>
 8015760:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015764:	4622      	mov	r2, r4
 8015766:	462b      	mov	r3, r5
 8015768:	4620      	mov	r0, r4
 801576a:	4629      	mov	r1, r5
 801576c:	f7ea fd64 	bl	8000238 <__aeabi_dsub>
 8015770:	4602      	mov	r2, r0
 8015772:	460b      	mov	r3, r1
 8015774:	f7eb f842 	bl	80007fc <__aeabi_ddiv>
 8015778:	ec41 0b10 	vmov	d0, r0, r1
 801577c:	e7f0      	b.n	8015760 <__ieee754_acos+0x28>
 801577e:	49a9      	ldr	r1, [pc, #676]	@ (8015a24 <__ieee754_acos+0x2ec>)
 8015780:	428b      	cmp	r3, r1
 8015782:	f200 8085 	bhi.w	8015890 <__ieee754_acos+0x158>
 8015786:	4aa8      	ldr	r2, [pc, #672]	@ (8015a28 <__ieee754_acos+0x2f0>)
 8015788:	4293      	cmp	r3, r2
 801578a:	f240 81fa 	bls.w	8015b82 <__ieee754_acos+0x44a>
 801578e:	4622      	mov	r2, r4
 8015790:	462b      	mov	r3, r5
 8015792:	4620      	mov	r0, r4
 8015794:	4629      	mov	r1, r5
 8015796:	f7ea ff07 	bl	80005a8 <__aeabi_dmul>
 801579a:	a387      	add	r3, pc, #540	@ (adr r3, 80159b8 <__ieee754_acos+0x280>)
 801579c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157a0:	4606      	mov	r6, r0
 80157a2:	460f      	mov	r7, r1
 80157a4:	f7ea ff00 	bl	80005a8 <__aeabi_dmul>
 80157a8:	a385      	add	r3, pc, #532	@ (adr r3, 80159c0 <__ieee754_acos+0x288>)
 80157aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157ae:	f7ea fd45 	bl	800023c <__adddf3>
 80157b2:	4632      	mov	r2, r6
 80157b4:	463b      	mov	r3, r7
 80157b6:	f7ea fef7 	bl	80005a8 <__aeabi_dmul>
 80157ba:	a383      	add	r3, pc, #524	@ (adr r3, 80159c8 <__ieee754_acos+0x290>)
 80157bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157c0:	f7ea fd3a 	bl	8000238 <__aeabi_dsub>
 80157c4:	4632      	mov	r2, r6
 80157c6:	463b      	mov	r3, r7
 80157c8:	f7ea feee 	bl	80005a8 <__aeabi_dmul>
 80157cc:	a380      	add	r3, pc, #512	@ (adr r3, 80159d0 <__ieee754_acos+0x298>)
 80157ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157d2:	f7ea fd33 	bl	800023c <__adddf3>
 80157d6:	4632      	mov	r2, r6
 80157d8:	463b      	mov	r3, r7
 80157da:	f7ea fee5 	bl	80005a8 <__aeabi_dmul>
 80157de:	a37e      	add	r3, pc, #504	@ (adr r3, 80159d8 <__ieee754_acos+0x2a0>)
 80157e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157e4:	f7ea fd28 	bl	8000238 <__aeabi_dsub>
 80157e8:	4632      	mov	r2, r6
 80157ea:	463b      	mov	r3, r7
 80157ec:	f7ea fedc 	bl	80005a8 <__aeabi_dmul>
 80157f0:	a37b      	add	r3, pc, #492	@ (adr r3, 80159e0 <__ieee754_acos+0x2a8>)
 80157f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157f6:	f7ea fd21 	bl	800023c <__adddf3>
 80157fa:	4632      	mov	r2, r6
 80157fc:	463b      	mov	r3, r7
 80157fe:	f7ea fed3 	bl	80005a8 <__aeabi_dmul>
 8015802:	a379      	add	r3, pc, #484	@ (adr r3, 80159e8 <__ieee754_acos+0x2b0>)
 8015804:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015808:	4680      	mov	r8, r0
 801580a:	4689      	mov	r9, r1
 801580c:	4630      	mov	r0, r6
 801580e:	4639      	mov	r1, r7
 8015810:	f7ea feca 	bl	80005a8 <__aeabi_dmul>
 8015814:	a376      	add	r3, pc, #472	@ (adr r3, 80159f0 <__ieee754_acos+0x2b8>)
 8015816:	e9d3 2300 	ldrd	r2, r3, [r3]
 801581a:	f7ea fd0d 	bl	8000238 <__aeabi_dsub>
 801581e:	4632      	mov	r2, r6
 8015820:	463b      	mov	r3, r7
 8015822:	f7ea fec1 	bl	80005a8 <__aeabi_dmul>
 8015826:	a374      	add	r3, pc, #464	@ (adr r3, 80159f8 <__ieee754_acos+0x2c0>)
 8015828:	e9d3 2300 	ldrd	r2, r3, [r3]
 801582c:	f7ea fd06 	bl	800023c <__adddf3>
 8015830:	4632      	mov	r2, r6
 8015832:	463b      	mov	r3, r7
 8015834:	f7ea feb8 	bl	80005a8 <__aeabi_dmul>
 8015838:	a371      	add	r3, pc, #452	@ (adr r3, 8015a00 <__ieee754_acos+0x2c8>)
 801583a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801583e:	f7ea fcfb 	bl	8000238 <__aeabi_dsub>
 8015842:	4632      	mov	r2, r6
 8015844:	463b      	mov	r3, r7
 8015846:	f7ea feaf 	bl	80005a8 <__aeabi_dmul>
 801584a:	4b78      	ldr	r3, [pc, #480]	@ (8015a2c <__ieee754_acos+0x2f4>)
 801584c:	2200      	movs	r2, #0
 801584e:	f7ea fcf5 	bl	800023c <__adddf3>
 8015852:	4602      	mov	r2, r0
 8015854:	460b      	mov	r3, r1
 8015856:	4640      	mov	r0, r8
 8015858:	4649      	mov	r1, r9
 801585a:	f7ea ffcf 	bl	80007fc <__aeabi_ddiv>
 801585e:	4622      	mov	r2, r4
 8015860:	462b      	mov	r3, r5
 8015862:	f7ea fea1 	bl	80005a8 <__aeabi_dmul>
 8015866:	4602      	mov	r2, r0
 8015868:	460b      	mov	r3, r1
 801586a:	a167      	add	r1, pc, #412	@ (adr r1, 8015a08 <__ieee754_acos+0x2d0>)
 801586c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015870:	f7ea fce2 	bl	8000238 <__aeabi_dsub>
 8015874:	4602      	mov	r2, r0
 8015876:	460b      	mov	r3, r1
 8015878:	4620      	mov	r0, r4
 801587a:	4629      	mov	r1, r5
 801587c:	f7ea fcdc 	bl	8000238 <__aeabi_dsub>
 8015880:	4602      	mov	r2, r0
 8015882:	460b      	mov	r3, r1
 8015884:	a162      	add	r1, pc, #392	@ (adr r1, 8015a10 <__ieee754_acos+0x2d8>)
 8015886:	e9d1 0100 	ldrd	r0, r1, [r1]
 801588a:	f7ea fcd5 	bl	8000238 <__aeabi_dsub>
 801588e:	e773      	b.n	8015778 <__ieee754_acos+0x40>
 8015890:	2d00      	cmp	r5, #0
 8015892:	f280 80cf 	bge.w	8015a34 <__ieee754_acos+0x2fc>
 8015896:	4b65      	ldr	r3, [pc, #404]	@ (8015a2c <__ieee754_acos+0x2f4>)
 8015898:	2200      	movs	r2, #0
 801589a:	4620      	mov	r0, r4
 801589c:	4629      	mov	r1, r5
 801589e:	f7ea fccd 	bl	800023c <__adddf3>
 80158a2:	4b63      	ldr	r3, [pc, #396]	@ (8015a30 <__ieee754_acos+0x2f8>)
 80158a4:	2200      	movs	r2, #0
 80158a6:	f7ea fe7f 	bl	80005a8 <__aeabi_dmul>
 80158aa:	a343      	add	r3, pc, #268	@ (adr r3, 80159b8 <__ieee754_acos+0x280>)
 80158ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158b0:	4604      	mov	r4, r0
 80158b2:	460d      	mov	r5, r1
 80158b4:	f7ea fe78 	bl	80005a8 <__aeabi_dmul>
 80158b8:	a341      	add	r3, pc, #260	@ (adr r3, 80159c0 <__ieee754_acos+0x288>)
 80158ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158be:	f7ea fcbd 	bl	800023c <__adddf3>
 80158c2:	4622      	mov	r2, r4
 80158c4:	462b      	mov	r3, r5
 80158c6:	f7ea fe6f 	bl	80005a8 <__aeabi_dmul>
 80158ca:	a33f      	add	r3, pc, #252	@ (adr r3, 80159c8 <__ieee754_acos+0x290>)
 80158cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158d0:	f7ea fcb2 	bl	8000238 <__aeabi_dsub>
 80158d4:	4622      	mov	r2, r4
 80158d6:	462b      	mov	r3, r5
 80158d8:	f7ea fe66 	bl	80005a8 <__aeabi_dmul>
 80158dc:	a33c      	add	r3, pc, #240	@ (adr r3, 80159d0 <__ieee754_acos+0x298>)
 80158de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158e2:	f7ea fcab 	bl	800023c <__adddf3>
 80158e6:	4622      	mov	r2, r4
 80158e8:	462b      	mov	r3, r5
 80158ea:	f7ea fe5d 	bl	80005a8 <__aeabi_dmul>
 80158ee:	a33a      	add	r3, pc, #232	@ (adr r3, 80159d8 <__ieee754_acos+0x2a0>)
 80158f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80158f4:	f7ea fca0 	bl	8000238 <__aeabi_dsub>
 80158f8:	4622      	mov	r2, r4
 80158fa:	462b      	mov	r3, r5
 80158fc:	f7ea fe54 	bl	80005a8 <__aeabi_dmul>
 8015900:	a337      	add	r3, pc, #220	@ (adr r3, 80159e0 <__ieee754_acos+0x2a8>)
 8015902:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015906:	f7ea fc99 	bl	800023c <__adddf3>
 801590a:	4622      	mov	r2, r4
 801590c:	462b      	mov	r3, r5
 801590e:	f7ea fe4b 	bl	80005a8 <__aeabi_dmul>
 8015912:	a335      	add	r3, pc, #212	@ (adr r3, 80159e8 <__ieee754_acos+0x2b0>)
 8015914:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015918:	4606      	mov	r6, r0
 801591a:	460f      	mov	r7, r1
 801591c:	4620      	mov	r0, r4
 801591e:	4629      	mov	r1, r5
 8015920:	f7ea fe42 	bl	80005a8 <__aeabi_dmul>
 8015924:	a332      	add	r3, pc, #200	@ (adr r3, 80159f0 <__ieee754_acos+0x2b8>)
 8015926:	e9d3 2300 	ldrd	r2, r3, [r3]
 801592a:	f7ea fc85 	bl	8000238 <__aeabi_dsub>
 801592e:	4622      	mov	r2, r4
 8015930:	462b      	mov	r3, r5
 8015932:	f7ea fe39 	bl	80005a8 <__aeabi_dmul>
 8015936:	a330      	add	r3, pc, #192	@ (adr r3, 80159f8 <__ieee754_acos+0x2c0>)
 8015938:	e9d3 2300 	ldrd	r2, r3, [r3]
 801593c:	f7ea fc7e 	bl	800023c <__adddf3>
 8015940:	4622      	mov	r2, r4
 8015942:	462b      	mov	r3, r5
 8015944:	f7ea fe30 	bl	80005a8 <__aeabi_dmul>
 8015948:	a32d      	add	r3, pc, #180	@ (adr r3, 8015a00 <__ieee754_acos+0x2c8>)
 801594a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801594e:	f7ea fc73 	bl	8000238 <__aeabi_dsub>
 8015952:	4622      	mov	r2, r4
 8015954:	462b      	mov	r3, r5
 8015956:	f7ea fe27 	bl	80005a8 <__aeabi_dmul>
 801595a:	4b34      	ldr	r3, [pc, #208]	@ (8015a2c <__ieee754_acos+0x2f4>)
 801595c:	2200      	movs	r2, #0
 801595e:	f7ea fc6d 	bl	800023c <__adddf3>
 8015962:	ec45 4b10 	vmov	d0, r4, r5
 8015966:	4680      	mov	r8, r0
 8015968:	4689      	mov	r9, r1
 801596a:	f000 f9bb 	bl	8015ce4 <__ieee754_sqrt>
 801596e:	ec55 4b10 	vmov	r4, r5, d0
 8015972:	4642      	mov	r2, r8
 8015974:	464b      	mov	r3, r9
 8015976:	4630      	mov	r0, r6
 8015978:	4639      	mov	r1, r7
 801597a:	f7ea ff3f 	bl	80007fc <__aeabi_ddiv>
 801597e:	4622      	mov	r2, r4
 8015980:	462b      	mov	r3, r5
 8015982:	f7ea fe11 	bl	80005a8 <__aeabi_dmul>
 8015986:	a320      	add	r3, pc, #128	@ (adr r3, 8015a08 <__ieee754_acos+0x2d0>)
 8015988:	e9d3 2300 	ldrd	r2, r3, [r3]
 801598c:	f7ea fc54 	bl	8000238 <__aeabi_dsub>
 8015990:	4622      	mov	r2, r4
 8015992:	462b      	mov	r3, r5
 8015994:	f7ea fc52 	bl	800023c <__adddf3>
 8015998:	4602      	mov	r2, r0
 801599a:	460b      	mov	r3, r1
 801599c:	f7ea fc4e 	bl	800023c <__adddf3>
 80159a0:	4602      	mov	r2, r0
 80159a2:	460b      	mov	r3, r1
 80159a4:	a11c      	add	r1, pc, #112	@ (adr r1, 8015a18 <__ieee754_acos+0x2e0>)
 80159a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80159aa:	e76e      	b.n	801588a <__ieee754_acos+0x152>
 80159ac:	f3af 8000 	nop.w
	...
 80159b8:	0dfdf709 	.word	0x0dfdf709
 80159bc:	3f023de1 	.word	0x3f023de1
 80159c0:	7501b288 	.word	0x7501b288
 80159c4:	3f49efe0 	.word	0x3f49efe0
 80159c8:	b5688f3b 	.word	0xb5688f3b
 80159cc:	3fa48228 	.word	0x3fa48228
 80159d0:	0e884455 	.word	0x0e884455
 80159d4:	3fc9c155 	.word	0x3fc9c155
 80159d8:	03eb6f7d 	.word	0x03eb6f7d
 80159dc:	3fd4d612 	.word	0x3fd4d612
 80159e0:	55555555 	.word	0x55555555
 80159e4:	3fc55555 	.word	0x3fc55555
 80159e8:	b12e9282 	.word	0xb12e9282
 80159ec:	3fb3b8c5 	.word	0x3fb3b8c5
 80159f0:	1b8d0159 	.word	0x1b8d0159
 80159f4:	3fe6066c 	.word	0x3fe6066c
 80159f8:	9c598ac8 	.word	0x9c598ac8
 80159fc:	40002ae5 	.word	0x40002ae5
 8015a00:	1c8a2d4b 	.word	0x1c8a2d4b
 8015a04:	40033a27 	.word	0x40033a27
 8015a08:	33145c07 	.word	0x33145c07
 8015a0c:	3c91a626 	.word	0x3c91a626
 8015a10:	54442d18 	.word	0x54442d18
 8015a14:	3ff921fb 	.word	0x3ff921fb
 8015a18:	54442d18 	.word	0x54442d18
 8015a1c:	400921fb 	.word	0x400921fb
 8015a20:	3fefffff 	.word	0x3fefffff
 8015a24:	3fdfffff 	.word	0x3fdfffff
 8015a28:	3c600000 	.word	0x3c600000
 8015a2c:	3ff00000 	.word	0x3ff00000
 8015a30:	3fe00000 	.word	0x3fe00000
 8015a34:	4622      	mov	r2, r4
 8015a36:	462b      	mov	r3, r5
 8015a38:	496b      	ldr	r1, [pc, #428]	@ (8015be8 <__ieee754_acos+0x4b0>)
 8015a3a:	2000      	movs	r0, #0
 8015a3c:	f7ea fbfc 	bl	8000238 <__aeabi_dsub>
 8015a40:	4b6a      	ldr	r3, [pc, #424]	@ (8015bec <__ieee754_acos+0x4b4>)
 8015a42:	2200      	movs	r2, #0
 8015a44:	f7ea fdb0 	bl	80005a8 <__aeabi_dmul>
 8015a48:	4604      	mov	r4, r0
 8015a4a:	460d      	mov	r5, r1
 8015a4c:	ec45 4b10 	vmov	d0, r4, r5
 8015a50:	f000 f948 	bl	8015ce4 <__ieee754_sqrt>
 8015a54:	a34c      	add	r3, pc, #304	@ (adr r3, 8015b88 <__ieee754_acos+0x450>)
 8015a56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a5a:	4620      	mov	r0, r4
 8015a5c:	4629      	mov	r1, r5
 8015a5e:	ec59 8b10 	vmov	r8, r9, d0
 8015a62:	f7ea fda1 	bl	80005a8 <__aeabi_dmul>
 8015a66:	a34a      	add	r3, pc, #296	@ (adr r3, 8015b90 <__ieee754_acos+0x458>)
 8015a68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a6c:	f7ea fbe6 	bl	800023c <__adddf3>
 8015a70:	4622      	mov	r2, r4
 8015a72:	462b      	mov	r3, r5
 8015a74:	f7ea fd98 	bl	80005a8 <__aeabi_dmul>
 8015a78:	a347      	add	r3, pc, #284	@ (adr r3, 8015b98 <__ieee754_acos+0x460>)
 8015a7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a7e:	f7ea fbdb 	bl	8000238 <__aeabi_dsub>
 8015a82:	4622      	mov	r2, r4
 8015a84:	462b      	mov	r3, r5
 8015a86:	f7ea fd8f 	bl	80005a8 <__aeabi_dmul>
 8015a8a:	a345      	add	r3, pc, #276	@ (adr r3, 8015ba0 <__ieee754_acos+0x468>)
 8015a8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a90:	f7ea fbd4 	bl	800023c <__adddf3>
 8015a94:	4622      	mov	r2, r4
 8015a96:	462b      	mov	r3, r5
 8015a98:	f7ea fd86 	bl	80005a8 <__aeabi_dmul>
 8015a9c:	a342      	add	r3, pc, #264	@ (adr r3, 8015ba8 <__ieee754_acos+0x470>)
 8015a9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015aa2:	f7ea fbc9 	bl	8000238 <__aeabi_dsub>
 8015aa6:	4622      	mov	r2, r4
 8015aa8:	462b      	mov	r3, r5
 8015aaa:	f7ea fd7d 	bl	80005a8 <__aeabi_dmul>
 8015aae:	a340      	add	r3, pc, #256	@ (adr r3, 8015bb0 <__ieee754_acos+0x478>)
 8015ab0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015ab4:	f7ea fbc2 	bl	800023c <__adddf3>
 8015ab8:	4622      	mov	r2, r4
 8015aba:	462b      	mov	r3, r5
 8015abc:	f7ea fd74 	bl	80005a8 <__aeabi_dmul>
 8015ac0:	a33d      	add	r3, pc, #244	@ (adr r3, 8015bb8 <__ieee754_acos+0x480>)
 8015ac2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015ac6:	4682      	mov	sl, r0
 8015ac8:	468b      	mov	fp, r1
 8015aca:	4620      	mov	r0, r4
 8015acc:	4629      	mov	r1, r5
 8015ace:	f7ea fd6b 	bl	80005a8 <__aeabi_dmul>
 8015ad2:	a33b      	add	r3, pc, #236	@ (adr r3, 8015bc0 <__ieee754_acos+0x488>)
 8015ad4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015ad8:	f7ea fbae 	bl	8000238 <__aeabi_dsub>
 8015adc:	4622      	mov	r2, r4
 8015ade:	462b      	mov	r3, r5
 8015ae0:	f7ea fd62 	bl	80005a8 <__aeabi_dmul>
 8015ae4:	a338      	add	r3, pc, #224	@ (adr r3, 8015bc8 <__ieee754_acos+0x490>)
 8015ae6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015aea:	f7ea fba7 	bl	800023c <__adddf3>
 8015aee:	4622      	mov	r2, r4
 8015af0:	462b      	mov	r3, r5
 8015af2:	f7ea fd59 	bl	80005a8 <__aeabi_dmul>
 8015af6:	a336      	add	r3, pc, #216	@ (adr r3, 8015bd0 <__ieee754_acos+0x498>)
 8015af8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015afc:	f7ea fb9c 	bl	8000238 <__aeabi_dsub>
 8015b00:	4622      	mov	r2, r4
 8015b02:	462b      	mov	r3, r5
 8015b04:	f7ea fd50 	bl	80005a8 <__aeabi_dmul>
 8015b08:	4b37      	ldr	r3, [pc, #220]	@ (8015be8 <__ieee754_acos+0x4b0>)
 8015b0a:	2200      	movs	r2, #0
 8015b0c:	f7ea fb96 	bl	800023c <__adddf3>
 8015b10:	4602      	mov	r2, r0
 8015b12:	460b      	mov	r3, r1
 8015b14:	4650      	mov	r0, sl
 8015b16:	4659      	mov	r1, fp
 8015b18:	f7ea fe70 	bl	80007fc <__aeabi_ddiv>
 8015b1c:	4642      	mov	r2, r8
 8015b1e:	464b      	mov	r3, r9
 8015b20:	f7ea fd42 	bl	80005a8 <__aeabi_dmul>
 8015b24:	2600      	movs	r6, #0
 8015b26:	4682      	mov	sl, r0
 8015b28:	468b      	mov	fp, r1
 8015b2a:	4632      	mov	r2, r6
 8015b2c:	464b      	mov	r3, r9
 8015b2e:	4630      	mov	r0, r6
 8015b30:	4649      	mov	r1, r9
 8015b32:	f7ea fd39 	bl	80005a8 <__aeabi_dmul>
 8015b36:	4602      	mov	r2, r0
 8015b38:	460b      	mov	r3, r1
 8015b3a:	4620      	mov	r0, r4
 8015b3c:	4629      	mov	r1, r5
 8015b3e:	f7ea fb7b 	bl	8000238 <__aeabi_dsub>
 8015b42:	4632      	mov	r2, r6
 8015b44:	4604      	mov	r4, r0
 8015b46:	460d      	mov	r5, r1
 8015b48:	464b      	mov	r3, r9
 8015b4a:	4640      	mov	r0, r8
 8015b4c:	4649      	mov	r1, r9
 8015b4e:	f7ea fb75 	bl	800023c <__adddf3>
 8015b52:	4602      	mov	r2, r0
 8015b54:	460b      	mov	r3, r1
 8015b56:	4620      	mov	r0, r4
 8015b58:	4629      	mov	r1, r5
 8015b5a:	f7ea fe4f 	bl	80007fc <__aeabi_ddiv>
 8015b5e:	4602      	mov	r2, r0
 8015b60:	460b      	mov	r3, r1
 8015b62:	4650      	mov	r0, sl
 8015b64:	4659      	mov	r1, fp
 8015b66:	f7ea fb69 	bl	800023c <__adddf3>
 8015b6a:	4632      	mov	r2, r6
 8015b6c:	464b      	mov	r3, r9
 8015b6e:	f7ea fb65 	bl	800023c <__adddf3>
 8015b72:	4602      	mov	r2, r0
 8015b74:	460b      	mov	r3, r1
 8015b76:	f7ea fb61 	bl	800023c <__adddf3>
 8015b7a:	e5fd      	b.n	8015778 <__ieee754_acos+0x40>
 8015b7c:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 8015bd8 <__ieee754_acos+0x4a0>
 8015b80:	e5ee      	b.n	8015760 <__ieee754_acos+0x28>
 8015b82:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8015be0 <__ieee754_acos+0x4a8>
 8015b86:	e5eb      	b.n	8015760 <__ieee754_acos+0x28>
 8015b88:	0dfdf709 	.word	0x0dfdf709
 8015b8c:	3f023de1 	.word	0x3f023de1
 8015b90:	7501b288 	.word	0x7501b288
 8015b94:	3f49efe0 	.word	0x3f49efe0
 8015b98:	b5688f3b 	.word	0xb5688f3b
 8015b9c:	3fa48228 	.word	0x3fa48228
 8015ba0:	0e884455 	.word	0x0e884455
 8015ba4:	3fc9c155 	.word	0x3fc9c155
 8015ba8:	03eb6f7d 	.word	0x03eb6f7d
 8015bac:	3fd4d612 	.word	0x3fd4d612
 8015bb0:	55555555 	.word	0x55555555
 8015bb4:	3fc55555 	.word	0x3fc55555
 8015bb8:	b12e9282 	.word	0xb12e9282
 8015bbc:	3fb3b8c5 	.word	0x3fb3b8c5
 8015bc0:	1b8d0159 	.word	0x1b8d0159
 8015bc4:	3fe6066c 	.word	0x3fe6066c
 8015bc8:	9c598ac8 	.word	0x9c598ac8
 8015bcc:	40002ae5 	.word	0x40002ae5
 8015bd0:	1c8a2d4b 	.word	0x1c8a2d4b
 8015bd4:	40033a27 	.word	0x40033a27
 8015bd8:	54442d18 	.word	0x54442d18
 8015bdc:	400921fb 	.word	0x400921fb
 8015be0:	54442d18 	.word	0x54442d18
 8015be4:	3ff921fb 	.word	0x3ff921fb
 8015be8:	3ff00000 	.word	0x3ff00000
 8015bec:	3fe00000 	.word	0x3fe00000

08015bf0 <scalbn>:
 8015bf0:	b570      	push	{r4, r5, r6, lr}
 8015bf2:	ec55 4b10 	vmov	r4, r5, d0
 8015bf6:	f3c5 510a 	ubfx	r1, r5, #20, #11
 8015bfa:	4606      	mov	r6, r0
 8015bfc:	462b      	mov	r3, r5
 8015bfe:	b991      	cbnz	r1, 8015c26 <scalbn+0x36>
 8015c00:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8015c04:	4323      	orrs	r3, r4
 8015c06:	d03b      	beq.n	8015c80 <scalbn+0x90>
 8015c08:	4b33      	ldr	r3, [pc, #204]	@ (8015cd8 <scalbn+0xe8>)
 8015c0a:	4620      	mov	r0, r4
 8015c0c:	4629      	mov	r1, r5
 8015c0e:	2200      	movs	r2, #0
 8015c10:	f7ea fcca 	bl	80005a8 <__aeabi_dmul>
 8015c14:	4b31      	ldr	r3, [pc, #196]	@ (8015cdc <scalbn+0xec>)
 8015c16:	429e      	cmp	r6, r3
 8015c18:	4604      	mov	r4, r0
 8015c1a:	460d      	mov	r5, r1
 8015c1c:	da0f      	bge.n	8015c3e <scalbn+0x4e>
 8015c1e:	a326      	add	r3, pc, #152	@ (adr r3, 8015cb8 <scalbn+0xc8>)
 8015c20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c24:	e01e      	b.n	8015c64 <scalbn+0x74>
 8015c26:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8015c2a:	4291      	cmp	r1, r2
 8015c2c:	d10b      	bne.n	8015c46 <scalbn+0x56>
 8015c2e:	4622      	mov	r2, r4
 8015c30:	4620      	mov	r0, r4
 8015c32:	4629      	mov	r1, r5
 8015c34:	f7ea fb02 	bl	800023c <__adddf3>
 8015c38:	4604      	mov	r4, r0
 8015c3a:	460d      	mov	r5, r1
 8015c3c:	e020      	b.n	8015c80 <scalbn+0x90>
 8015c3e:	460b      	mov	r3, r1
 8015c40:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8015c44:	3936      	subs	r1, #54	@ 0x36
 8015c46:	f24c 3250 	movw	r2, #50000	@ 0xc350
 8015c4a:	4296      	cmp	r6, r2
 8015c4c:	dd0d      	ble.n	8015c6a <scalbn+0x7a>
 8015c4e:	2d00      	cmp	r5, #0
 8015c50:	a11b      	add	r1, pc, #108	@ (adr r1, 8015cc0 <scalbn+0xd0>)
 8015c52:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c56:	da02      	bge.n	8015c5e <scalbn+0x6e>
 8015c58:	a11b      	add	r1, pc, #108	@ (adr r1, 8015cc8 <scalbn+0xd8>)
 8015c5a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c5e:	a318      	add	r3, pc, #96	@ (adr r3, 8015cc0 <scalbn+0xd0>)
 8015c60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c64:	f7ea fca0 	bl	80005a8 <__aeabi_dmul>
 8015c68:	e7e6      	b.n	8015c38 <scalbn+0x48>
 8015c6a:	1872      	adds	r2, r6, r1
 8015c6c:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8015c70:	428a      	cmp	r2, r1
 8015c72:	dcec      	bgt.n	8015c4e <scalbn+0x5e>
 8015c74:	2a00      	cmp	r2, #0
 8015c76:	dd06      	ble.n	8015c86 <scalbn+0x96>
 8015c78:	f36f 531e 	bfc	r3, #20, #11
 8015c7c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015c80:	ec45 4b10 	vmov	d0, r4, r5
 8015c84:	bd70      	pop	{r4, r5, r6, pc}
 8015c86:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8015c8a:	da08      	bge.n	8015c9e <scalbn+0xae>
 8015c8c:	2d00      	cmp	r5, #0
 8015c8e:	a10a      	add	r1, pc, #40	@ (adr r1, 8015cb8 <scalbn+0xc8>)
 8015c90:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c94:	dac3      	bge.n	8015c1e <scalbn+0x2e>
 8015c96:	a10e      	add	r1, pc, #56	@ (adr r1, 8015cd0 <scalbn+0xe0>)
 8015c98:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015c9c:	e7bf      	b.n	8015c1e <scalbn+0x2e>
 8015c9e:	3236      	adds	r2, #54	@ 0x36
 8015ca0:	f36f 531e 	bfc	r3, #20, #11
 8015ca4:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015ca8:	4620      	mov	r0, r4
 8015caa:	4b0d      	ldr	r3, [pc, #52]	@ (8015ce0 <scalbn+0xf0>)
 8015cac:	4629      	mov	r1, r5
 8015cae:	2200      	movs	r2, #0
 8015cb0:	e7d8      	b.n	8015c64 <scalbn+0x74>
 8015cb2:	bf00      	nop
 8015cb4:	f3af 8000 	nop.w
 8015cb8:	c2f8f359 	.word	0xc2f8f359
 8015cbc:	01a56e1f 	.word	0x01a56e1f
 8015cc0:	8800759c 	.word	0x8800759c
 8015cc4:	7e37e43c 	.word	0x7e37e43c
 8015cc8:	8800759c 	.word	0x8800759c
 8015ccc:	fe37e43c 	.word	0xfe37e43c
 8015cd0:	c2f8f359 	.word	0xc2f8f359
 8015cd4:	81a56e1f 	.word	0x81a56e1f
 8015cd8:	43500000 	.word	0x43500000
 8015cdc:	ffff3cb0 	.word	0xffff3cb0
 8015ce0:	3c900000 	.word	0x3c900000

08015ce4 <__ieee754_sqrt>:
 8015ce4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ce8:	4a66      	ldr	r2, [pc, #408]	@ (8015e84 <__ieee754_sqrt+0x1a0>)
 8015cea:	ec55 4b10 	vmov	r4, r5, d0
 8015cee:	43aa      	bics	r2, r5
 8015cf0:	462b      	mov	r3, r5
 8015cf2:	4621      	mov	r1, r4
 8015cf4:	d110      	bne.n	8015d18 <__ieee754_sqrt+0x34>
 8015cf6:	4622      	mov	r2, r4
 8015cf8:	4620      	mov	r0, r4
 8015cfa:	4629      	mov	r1, r5
 8015cfc:	f7ea fc54 	bl	80005a8 <__aeabi_dmul>
 8015d00:	4602      	mov	r2, r0
 8015d02:	460b      	mov	r3, r1
 8015d04:	4620      	mov	r0, r4
 8015d06:	4629      	mov	r1, r5
 8015d08:	f7ea fa98 	bl	800023c <__adddf3>
 8015d0c:	4604      	mov	r4, r0
 8015d0e:	460d      	mov	r5, r1
 8015d10:	ec45 4b10 	vmov	d0, r4, r5
 8015d14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d18:	2d00      	cmp	r5, #0
 8015d1a:	dc0e      	bgt.n	8015d3a <__ieee754_sqrt+0x56>
 8015d1c:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8015d20:	4322      	orrs	r2, r4
 8015d22:	d0f5      	beq.n	8015d10 <__ieee754_sqrt+0x2c>
 8015d24:	b19d      	cbz	r5, 8015d4e <__ieee754_sqrt+0x6a>
 8015d26:	4622      	mov	r2, r4
 8015d28:	4620      	mov	r0, r4
 8015d2a:	4629      	mov	r1, r5
 8015d2c:	f7ea fa84 	bl	8000238 <__aeabi_dsub>
 8015d30:	4602      	mov	r2, r0
 8015d32:	460b      	mov	r3, r1
 8015d34:	f7ea fd62 	bl	80007fc <__aeabi_ddiv>
 8015d38:	e7e8      	b.n	8015d0c <__ieee754_sqrt+0x28>
 8015d3a:	152a      	asrs	r2, r5, #20
 8015d3c:	d115      	bne.n	8015d6a <__ieee754_sqrt+0x86>
 8015d3e:	2000      	movs	r0, #0
 8015d40:	e009      	b.n	8015d56 <__ieee754_sqrt+0x72>
 8015d42:	0acb      	lsrs	r3, r1, #11
 8015d44:	3a15      	subs	r2, #21
 8015d46:	0549      	lsls	r1, r1, #21
 8015d48:	2b00      	cmp	r3, #0
 8015d4a:	d0fa      	beq.n	8015d42 <__ieee754_sqrt+0x5e>
 8015d4c:	e7f7      	b.n	8015d3e <__ieee754_sqrt+0x5a>
 8015d4e:	462a      	mov	r2, r5
 8015d50:	e7fa      	b.n	8015d48 <__ieee754_sqrt+0x64>
 8015d52:	005b      	lsls	r3, r3, #1
 8015d54:	3001      	adds	r0, #1
 8015d56:	02dc      	lsls	r4, r3, #11
 8015d58:	d5fb      	bpl.n	8015d52 <__ieee754_sqrt+0x6e>
 8015d5a:	1e44      	subs	r4, r0, #1
 8015d5c:	1b12      	subs	r2, r2, r4
 8015d5e:	f1c0 0420 	rsb	r4, r0, #32
 8015d62:	fa21 f404 	lsr.w	r4, r1, r4
 8015d66:	4323      	orrs	r3, r4
 8015d68:	4081      	lsls	r1, r0
 8015d6a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8015d6e:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8015d72:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8015d76:	07d2      	lsls	r2, r2, #31
 8015d78:	bf5c      	itt	pl
 8015d7a:	005b      	lslpl	r3, r3, #1
 8015d7c:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8015d80:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8015d84:	bf58      	it	pl
 8015d86:	0049      	lslpl	r1, r1, #1
 8015d88:	2600      	movs	r6, #0
 8015d8a:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8015d8e:	107f      	asrs	r7, r7, #1
 8015d90:	0049      	lsls	r1, r1, #1
 8015d92:	2016      	movs	r0, #22
 8015d94:	4632      	mov	r2, r6
 8015d96:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8015d9a:	1915      	adds	r5, r2, r4
 8015d9c:	429d      	cmp	r5, r3
 8015d9e:	bfde      	ittt	le
 8015da0:	192a      	addle	r2, r5, r4
 8015da2:	1b5b      	suble	r3, r3, r5
 8015da4:	1936      	addle	r6, r6, r4
 8015da6:	0fcd      	lsrs	r5, r1, #31
 8015da8:	3801      	subs	r0, #1
 8015daa:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015dae:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8015db2:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8015db6:	d1f0      	bne.n	8015d9a <__ieee754_sqrt+0xb6>
 8015db8:	4605      	mov	r5, r0
 8015dba:	2420      	movs	r4, #32
 8015dbc:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8015dc0:	4293      	cmp	r3, r2
 8015dc2:	eb0c 0e00 	add.w	lr, ip, r0
 8015dc6:	dc02      	bgt.n	8015dce <__ieee754_sqrt+0xea>
 8015dc8:	d113      	bne.n	8015df2 <__ieee754_sqrt+0x10e>
 8015dca:	458e      	cmp	lr, r1
 8015dcc:	d811      	bhi.n	8015df2 <__ieee754_sqrt+0x10e>
 8015dce:	f1be 0f00 	cmp.w	lr, #0
 8015dd2:	eb0e 000c 	add.w	r0, lr, ip
 8015dd6:	da3f      	bge.n	8015e58 <__ieee754_sqrt+0x174>
 8015dd8:	2800      	cmp	r0, #0
 8015dda:	db3d      	blt.n	8015e58 <__ieee754_sqrt+0x174>
 8015ddc:	f102 0801 	add.w	r8, r2, #1
 8015de0:	1a9b      	subs	r3, r3, r2
 8015de2:	458e      	cmp	lr, r1
 8015de4:	bf88      	it	hi
 8015de6:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8015dea:	eba1 010e 	sub.w	r1, r1, lr
 8015dee:	4465      	add	r5, ip
 8015df0:	4642      	mov	r2, r8
 8015df2:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8015df6:	3c01      	subs	r4, #1
 8015df8:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8015dfc:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8015e00:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8015e04:	d1dc      	bne.n	8015dc0 <__ieee754_sqrt+0xdc>
 8015e06:	4319      	orrs	r1, r3
 8015e08:	d01b      	beq.n	8015e42 <__ieee754_sqrt+0x15e>
 8015e0a:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8015e88 <__ieee754_sqrt+0x1a4>
 8015e0e:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 8015e8c <__ieee754_sqrt+0x1a8>
 8015e12:	e9da 0100 	ldrd	r0, r1, [sl]
 8015e16:	e9db 2300 	ldrd	r2, r3, [fp]
 8015e1a:	f7ea fa0d 	bl	8000238 <__aeabi_dsub>
 8015e1e:	e9da 8900 	ldrd	r8, r9, [sl]
 8015e22:	4602      	mov	r2, r0
 8015e24:	460b      	mov	r3, r1
 8015e26:	4640      	mov	r0, r8
 8015e28:	4649      	mov	r1, r9
 8015e2a:	f7ea fe39 	bl	8000aa0 <__aeabi_dcmple>
 8015e2e:	b140      	cbz	r0, 8015e42 <__ieee754_sqrt+0x15e>
 8015e30:	f1b5 3fff 	cmp.w	r5, #4294967295
 8015e34:	e9da 0100 	ldrd	r0, r1, [sl]
 8015e38:	e9db 2300 	ldrd	r2, r3, [fp]
 8015e3c:	d10e      	bne.n	8015e5c <__ieee754_sqrt+0x178>
 8015e3e:	3601      	adds	r6, #1
 8015e40:	4625      	mov	r5, r4
 8015e42:	1073      	asrs	r3, r6, #1
 8015e44:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8015e48:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 8015e4c:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8015e50:	086b      	lsrs	r3, r5, #1
 8015e52:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 8015e56:	e759      	b.n	8015d0c <__ieee754_sqrt+0x28>
 8015e58:	4690      	mov	r8, r2
 8015e5a:	e7c1      	b.n	8015de0 <__ieee754_sqrt+0xfc>
 8015e5c:	f7ea f9ee 	bl	800023c <__adddf3>
 8015e60:	e9da 8900 	ldrd	r8, r9, [sl]
 8015e64:	4602      	mov	r2, r0
 8015e66:	460b      	mov	r3, r1
 8015e68:	4640      	mov	r0, r8
 8015e6a:	4649      	mov	r1, r9
 8015e6c:	f7ea fe0e 	bl	8000a8c <__aeabi_dcmplt>
 8015e70:	b120      	cbz	r0, 8015e7c <__ieee754_sqrt+0x198>
 8015e72:	1cab      	adds	r3, r5, #2
 8015e74:	bf08      	it	eq
 8015e76:	3601      	addeq	r6, #1
 8015e78:	3502      	adds	r5, #2
 8015e7a:	e7e2      	b.n	8015e42 <__ieee754_sqrt+0x15e>
 8015e7c:	1c6b      	adds	r3, r5, #1
 8015e7e:	f023 0501 	bic.w	r5, r3, #1
 8015e82:	e7de      	b.n	8015e42 <__ieee754_sqrt+0x15e>
 8015e84:	7ff00000 	.word	0x7ff00000
 8015e88:	08018a28 	.word	0x08018a28
 8015e8c:	08018a20 	.word	0x08018a20

08015e90 <_init>:
 8015e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e92:	bf00      	nop
 8015e94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015e96:	bc08      	pop	{r3}
 8015e98:	469e      	mov	lr, r3
 8015e9a:	4770      	bx	lr

08015e9c <_fini>:
 8015e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e9e:	bf00      	nop
 8015ea0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015ea2:	bc08      	pop	{r3}
 8015ea4:	469e      	mov	lr, r3
 8015ea6:	4770      	bx	lr
