
balise_freeRTOS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015ad8  08000140  08000140  00001140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003ef0  08015c18  08015c18  00016c18  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08019b08  08019b08  0001ab08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08019b10  08019b10  0001ab10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08019b14  08019b14  0001ab14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000002f4  20000008  08019b18  0001b008  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00005934  20000300  08019e0c  0001b300  2**3
                  ALLOC
  8 ._user_heap_stack 00000604  20005c34  08019e0c  0001bc34  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  0001b2fc  2**0
                  CONTENTS, READONLY
 10 .debug_info   00064389  00000000  00000000  0001b32c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000b8a2  00000000  00000000  0007f6b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_loclists 0002f01b  00000000  00000000  0008af57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_aranges 000029c0  00000000  00000000  000b9f78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 00005d75  00000000  00000000  000bc938  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  000314bb  00000000  00000000  000c26ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00061451  00000000  00000000  000f3b68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0010db83  00000000  00000000  00154fb9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  00262b3c  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00009590  00000000  00000000  00262b80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 0000006b  00000000  00000000  0026c110  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	@ (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	@ (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	@ (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000300 	.word	0x20000300
 800015c:	00000000 	.word	0x00000000
 8000160:	08015c00 	.word	0x08015c00

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	@ (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	@ (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	@ (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000304 	.word	0x20000304
 800017c:	08015c00 	.word	0x08015c00

08000180 <memchr>:
 8000180:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000184:	2a10      	cmp	r2, #16
 8000186:	db2b      	blt.n	80001e0 <memchr+0x60>
 8000188:	f010 0f07 	tst.w	r0, #7
 800018c:	d008      	beq.n	80001a0 <memchr+0x20>
 800018e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000192:	3a01      	subs	r2, #1
 8000194:	428b      	cmp	r3, r1
 8000196:	d02d      	beq.n	80001f4 <memchr+0x74>
 8000198:	f010 0f07 	tst.w	r0, #7
 800019c:	b342      	cbz	r2, 80001f0 <memchr+0x70>
 800019e:	d1f6      	bne.n	800018e <memchr+0xe>
 80001a0:	b4f0      	push	{r4, r5, r6, r7}
 80001a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001aa:	f022 0407 	bic.w	r4, r2, #7
 80001ae:	f07f 0700 	mvns.w	r7, #0
 80001b2:	2300      	movs	r3, #0
 80001b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001b8:	3c08      	subs	r4, #8
 80001ba:	ea85 0501 	eor.w	r5, r5, r1
 80001be:	ea86 0601 	eor.w	r6, r6, r1
 80001c2:	fa85 f547 	uadd8	r5, r5, r7
 80001c6:	faa3 f587 	sel	r5, r3, r7
 80001ca:	fa86 f647 	uadd8	r6, r6, r7
 80001ce:	faa5 f687 	sel	r6, r5, r7
 80001d2:	b98e      	cbnz	r6, 80001f8 <memchr+0x78>
 80001d4:	d1ee      	bne.n	80001b4 <memchr+0x34>
 80001d6:	bcf0      	pop	{r4, r5, r6, r7}
 80001d8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001dc:	f002 0207 	and.w	r2, r2, #7
 80001e0:	b132      	cbz	r2, 80001f0 <memchr+0x70>
 80001e2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e6:	3a01      	subs	r2, #1
 80001e8:	ea83 0301 	eor.w	r3, r3, r1
 80001ec:	b113      	cbz	r3, 80001f4 <memchr+0x74>
 80001ee:	d1f8      	bne.n	80001e2 <memchr+0x62>
 80001f0:	2000      	movs	r0, #0
 80001f2:	4770      	bx	lr
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr
 80001f8:	2d00      	cmp	r5, #0
 80001fa:	bf06      	itte	eq
 80001fc:	4635      	moveq	r5, r6
 80001fe:	3803      	subeq	r0, #3
 8000200:	3807      	subne	r0, #7
 8000202:	f015 0f01 	tst.w	r5, #1
 8000206:	d107      	bne.n	8000218 <memchr+0x98>
 8000208:	3001      	adds	r0, #1
 800020a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800020e:	bf02      	ittt	eq
 8000210:	3001      	addeq	r0, #1
 8000212:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000216:	3001      	addeq	r0, #1
 8000218:	bcf0      	pop	{r4, r5, r6, r7}
 800021a:	3801      	subs	r0, #1
 800021c:	4770      	bx	lr
 800021e:	bf00      	nop

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <__aeabi_drsub>:
 8000230:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000234:	e002      	b.n	800023c <__adddf3>
 8000236:	bf00      	nop

08000238 <__aeabi_dsub>:
 8000238:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800023c <__adddf3>:
 800023c:	b530      	push	{r4, r5, lr}
 800023e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000242:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000246:	ea94 0f05 	teq	r4, r5
 800024a:	bf08      	it	eq
 800024c:	ea90 0f02 	teqeq	r0, r2
 8000250:	bf1f      	itttt	ne
 8000252:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000256:	ea55 0c02 	orrsne.w	ip, r5, r2
 800025a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800025e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000262:	f000 80e2 	beq.w	800042a <__adddf3+0x1ee>
 8000266:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800026a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800026e:	bfb8      	it	lt
 8000270:	426d      	neglt	r5, r5
 8000272:	dd0c      	ble.n	800028e <__adddf3+0x52>
 8000274:	442c      	add	r4, r5
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	ea82 0000 	eor.w	r0, r2, r0
 8000282:	ea83 0101 	eor.w	r1, r3, r1
 8000286:	ea80 0202 	eor.w	r2, r0, r2
 800028a:	ea81 0303 	eor.w	r3, r1, r3
 800028e:	2d36      	cmp	r5, #54	@ 0x36
 8000290:	bf88      	it	hi
 8000292:	bd30      	pophi	{r4, r5, pc}
 8000294:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000298:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800029c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002a0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002a4:	d002      	beq.n	80002ac <__adddf3+0x70>
 80002a6:	4240      	negs	r0, r0
 80002a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002ac:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002b4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b8:	d002      	beq.n	80002c0 <__adddf3+0x84>
 80002ba:	4252      	negs	r2, r2
 80002bc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c0:	ea94 0f05 	teq	r4, r5
 80002c4:	f000 80a7 	beq.w	8000416 <__adddf3+0x1da>
 80002c8:	f1a4 0401 	sub.w	r4, r4, #1
 80002cc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d0:	db0d      	blt.n	80002ee <__adddf3+0xb2>
 80002d2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002d6:	fa22 f205 	lsr.w	r2, r2, r5
 80002da:	1880      	adds	r0, r0, r2
 80002dc:	f141 0100 	adc.w	r1, r1, #0
 80002e0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002e4:	1880      	adds	r0, r0, r2
 80002e6:	fa43 f305 	asr.w	r3, r3, r5
 80002ea:	4159      	adcs	r1, r3
 80002ec:	e00e      	b.n	800030c <__adddf3+0xd0>
 80002ee:	f1a5 0520 	sub.w	r5, r5, #32
 80002f2:	f10e 0e20 	add.w	lr, lr, #32
 80002f6:	2a01      	cmp	r2, #1
 80002f8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002fc:	bf28      	it	cs
 80002fe:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000302:	fa43 f305 	asr.w	r3, r3, r5
 8000306:	18c0      	adds	r0, r0, r3
 8000308:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800030c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000310:	d507      	bpl.n	8000322 <__adddf3+0xe6>
 8000312:	f04f 0e00 	mov.w	lr, #0
 8000316:	f1dc 0c00 	rsbs	ip, ip, #0
 800031a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800031e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000322:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000326:	d31b      	bcc.n	8000360 <__adddf3+0x124>
 8000328:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800032c:	d30c      	bcc.n	8000348 <__adddf3+0x10c>
 800032e:	0849      	lsrs	r1, r1, #1
 8000330:	ea5f 0030 	movs.w	r0, r0, rrx
 8000334:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000338:	f104 0401 	add.w	r4, r4, #1
 800033c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000340:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000344:	f080 809a 	bcs.w	800047c <__adddf3+0x240>
 8000348:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800034c:	bf08      	it	eq
 800034e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000352:	f150 0000 	adcs.w	r0, r0, #0
 8000356:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800035a:	ea41 0105 	orr.w	r1, r1, r5
 800035e:	bd30      	pop	{r4, r5, pc}
 8000360:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000364:	4140      	adcs	r0, r0
 8000366:	eb41 0101 	adc.w	r1, r1, r1
 800036a:	3c01      	subs	r4, #1
 800036c:	bf28      	it	cs
 800036e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000372:	d2e9      	bcs.n	8000348 <__adddf3+0x10c>
 8000374:	f091 0f00 	teq	r1, #0
 8000378:	bf04      	itt	eq
 800037a:	4601      	moveq	r1, r0
 800037c:	2000      	moveq	r0, #0
 800037e:	fab1 f381 	clz	r3, r1
 8000382:	bf08      	it	eq
 8000384:	3320      	addeq	r3, #32
 8000386:	f1a3 030b 	sub.w	r3, r3, #11
 800038a:	f1b3 0220 	subs.w	r2, r3, #32
 800038e:	da0c      	bge.n	80003aa <__adddf3+0x16e>
 8000390:	320c      	adds	r2, #12
 8000392:	dd08      	ble.n	80003a6 <__adddf3+0x16a>
 8000394:	f102 0c14 	add.w	ip, r2, #20
 8000398:	f1c2 020c 	rsb	r2, r2, #12
 800039c:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a0:	fa21 f102 	lsr.w	r1, r1, r2
 80003a4:	e00c      	b.n	80003c0 <__adddf3+0x184>
 80003a6:	f102 0214 	add.w	r2, r2, #20
 80003aa:	bfd8      	it	le
 80003ac:	f1c2 0c20 	rsble	ip, r2, #32
 80003b0:	fa01 f102 	lsl.w	r1, r1, r2
 80003b4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b8:	bfdc      	itt	le
 80003ba:	ea41 010c 	orrle.w	r1, r1, ip
 80003be:	4090      	lslle	r0, r2
 80003c0:	1ae4      	subs	r4, r4, r3
 80003c2:	bfa2      	ittt	ge
 80003c4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c8:	4329      	orrge	r1, r5
 80003ca:	bd30      	popge	{r4, r5, pc}
 80003cc:	ea6f 0404 	mvn.w	r4, r4
 80003d0:	3c1f      	subs	r4, #31
 80003d2:	da1c      	bge.n	800040e <__adddf3+0x1d2>
 80003d4:	340c      	adds	r4, #12
 80003d6:	dc0e      	bgt.n	80003f6 <__adddf3+0x1ba>
 80003d8:	f104 0414 	add.w	r4, r4, #20
 80003dc:	f1c4 0220 	rsb	r2, r4, #32
 80003e0:	fa20 f004 	lsr.w	r0, r0, r4
 80003e4:	fa01 f302 	lsl.w	r3, r1, r2
 80003e8:	ea40 0003 	orr.w	r0, r0, r3
 80003ec:	fa21 f304 	lsr.w	r3, r1, r4
 80003f0:	ea45 0103 	orr.w	r1, r5, r3
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	f1c4 040c 	rsb	r4, r4, #12
 80003fa:	f1c4 0220 	rsb	r2, r4, #32
 80003fe:	fa20 f002 	lsr.w	r0, r0, r2
 8000402:	fa01 f304 	lsl.w	r3, r1, r4
 8000406:	ea40 0003 	orr.w	r0, r0, r3
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	fa21 f004 	lsr.w	r0, r1, r4
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	f094 0f00 	teq	r4, #0
 800041a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800041e:	bf06      	itte	eq
 8000420:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000424:	3401      	addeq	r4, #1
 8000426:	3d01      	subne	r5, #1
 8000428:	e74e      	b.n	80002c8 <__adddf3+0x8c>
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf18      	it	ne
 8000430:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000434:	d029      	beq.n	800048a <__adddf3+0x24e>
 8000436:	ea94 0f05 	teq	r4, r5
 800043a:	bf08      	it	eq
 800043c:	ea90 0f02 	teqeq	r0, r2
 8000440:	d005      	beq.n	800044e <__adddf3+0x212>
 8000442:	ea54 0c00 	orrs.w	ip, r4, r0
 8000446:	bf04      	itt	eq
 8000448:	4619      	moveq	r1, r3
 800044a:	4610      	moveq	r0, r2
 800044c:	bd30      	pop	{r4, r5, pc}
 800044e:	ea91 0f03 	teq	r1, r3
 8000452:	bf1e      	ittt	ne
 8000454:	2100      	movne	r1, #0
 8000456:	2000      	movne	r0, #0
 8000458:	bd30      	popne	{r4, r5, pc}
 800045a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800045e:	d105      	bne.n	800046c <__adddf3+0x230>
 8000460:	0040      	lsls	r0, r0, #1
 8000462:	4149      	adcs	r1, r1
 8000464:	bf28      	it	cs
 8000466:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800046a:	bd30      	pop	{r4, r5, pc}
 800046c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000470:	bf3c      	itt	cc
 8000472:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000476:	bd30      	popcc	{r4, r5, pc}
 8000478:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800047c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000480:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000484:	f04f 0000 	mov.w	r0, #0
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf1a      	itte	ne
 8000490:	4619      	movne	r1, r3
 8000492:	4610      	movne	r0, r2
 8000494:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000498:	bf1c      	itt	ne
 800049a:	460b      	movne	r3, r1
 800049c:	4602      	movne	r2, r0
 800049e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004a2:	bf06      	itte	eq
 80004a4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a8:	ea91 0f03 	teqeq	r1, r3
 80004ac:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	bf00      	nop

080004b4 <__aeabi_ui2d>:
 80004b4:	f090 0f00 	teq	r0, #0
 80004b8:	bf04      	itt	eq
 80004ba:	2100      	moveq	r1, #0
 80004bc:	4770      	bxeq	lr
 80004be:	b530      	push	{r4, r5, lr}
 80004c0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004c4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c8:	f04f 0500 	mov.w	r5, #0
 80004cc:	f04f 0100 	mov.w	r1, #0
 80004d0:	e750      	b.n	8000374 <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_i2d>:
 80004d4:	f090 0f00 	teq	r0, #0
 80004d8:	bf04      	itt	eq
 80004da:	2100      	moveq	r1, #0
 80004dc:	4770      	bxeq	lr
 80004de:	b530      	push	{r4, r5, lr}
 80004e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004e4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004e8:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004ec:	bf48      	it	mi
 80004ee:	4240      	negmi	r0, r0
 80004f0:	f04f 0100 	mov.w	r1, #0
 80004f4:	e73e      	b.n	8000374 <__adddf3+0x138>
 80004f6:	bf00      	nop

080004f8 <__aeabi_f2d>:
 80004f8:	0042      	lsls	r2, r0, #1
 80004fa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004fe:	ea4f 0131 	mov.w	r1, r1, rrx
 8000502:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000506:	bf1f      	itttt	ne
 8000508:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800050c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000510:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000514:	4770      	bxne	lr
 8000516:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800051a:	bf08      	it	eq
 800051c:	4770      	bxeq	lr
 800051e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000522:	bf04      	itt	eq
 8000524:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000528:	4770      	bxeq	lr
 800052a:	b530      	push	{r4, r5, lr}
 800052c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000534:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000538:	e71c      	b.n	8000374 <__adddf3+0x138>
 800053a:	bf00      	nop

0800053c <__aeabi_ul2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f04f 0500 	mov.w	r5, #0
 800054a:	e00a      	b.n	8000562 <__aeabi_l2d+0x16>

0800054c <__aeabi_l2d>:
 800054c:	ea50 0201 	orrs.w	r2, r0, r1
 8000550:	bf08      	it	eq
 8000552:	4770      	bxeq	lr
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800055a:	d502      	bpl.n	8000562 <__aeabi_l2d+0x16>
 800055c:	4240      	negs	r0, r0
 800055e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000562:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000566:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800056a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800056e:	f43f aed8 	beq.w	8000322 <__adddf3+0xe6>
 8000572:	f04f 0203 	mov.w	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058a:	f1c2 0320 	rsb	r3, r2, #32
 800058e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000592:	fa20 f002 	lsr.w	r0, r0, r2
 8000596:	fa01 fe03 	lsl.w	lr, r1, r3
 800059a:	ea40 000e 	orr.w	r0, r0, lr
 800059e:	fa21 f102 	lsr.w	r1, r1, r2
 80005a2:	4414      	add	r4, r2
 80005a4:	e6bd      	b.n	8000322 <__adddf3+0xe6>
 80005a6:	bf00      	nop

080005a8 <__aeabi_dmul>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005ae:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005b6:	bf1d      	ittte	ne
 80005b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005bc:	ea94 0f0c 	teqne	r4, ip
 80005c0:	ea95 0f0c 	teqne	r5, ip
 80005c4:	f000 f8de 	bleq	8000784 <__aeabi_dmul+0x1dc>
 80005c8:	442c      	add	r4, r5
 80005ca:	ea81 0603 	eor.w	r6, r1, r3
 80005ce:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005d6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005da:	bf18      	it	ne
 80005dc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005e4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005e8:	d038      	beq.n	800065c <__aeabi_dmul+0xb4>
 80005ea:	fba0 ce02 	umull	ip, lr, r0, r2
 80005ee:	f04f 0500 	mov.w	r5, #0
 80005f2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005f6:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005fa:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005fe:	f04f 0600 	mov.w	r6, #0
 8000602:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000606:	f09c 0f00 	teq	ip, #0
 800060a:	bf18      	it	ne
 800060c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000610:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000614:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000618:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800061c:	d204      	bcs.n	8000628 <__aeabi_dmul+0x80>
 800061e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000622:	416d      	adcs	r5, r5
 8000624:	eb46 0606 	adc.w	r6, r6, r6
 8000628:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800062c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000630:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000634:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000638:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800063c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000640:	bf88      	it	hi
 8000642:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000646:	d81e      	bhi.n	8000686 <__aeabi_dmul+0xde>
 8000648:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800064c:	bf08      	it	eq
 800064e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000652:	f150 0000 	adcs.w	r0, r0, #0
 8000656:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000660:	ea46 0101 	orr.w	r1, r6, r1
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	ea81 0103 	eor.w	r1, r1, r3
 800066c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000670:	bfc2      	ittt	gt
 8000672:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000676:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067a:	bd70      	popgt	{r4, r5, r6, pc}
 800067c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000680:	f04f 0e00 	mov.w	lr, #0
 8000684:	3c01      	subs	r4, #1
 8000686:	f300 80ab 	bgt.w	80007e0 <__aeabi_dmul+0x238>
 800068a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800068e:	bfde      	ittt	le
 8000690:	2000      	movle	r0, #0
 8000692:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000696:	bd70      	pople	{r4, r5, r6, pc}
 8000698:	f1c4 0400 	rsb	r4, r4, #0
 800069c:	3c20      	subs	r4, #32
 800069e:	da35      	bge.n	800070c <__aeabi_dmul+0x164>
 80006a0:	340c      	adds	r4, #12
 80006a2:	dc1b      	bgt.n	80006dc <__aeabi_dmul+0x134>
 80006a4:	f104 0414 	add.w	r4, r4, #20
 80006a8:	f1c4 0520 	rsb	r5, r4, #32
 80006ac:	fa00 f305 	lsl.w	r3, r0, r5
 80006b0:	fa20 f004 	lsr.w	r0, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea40 0002 	orr.w	r0, r0, r2
 80006bc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006c0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c8:	fa21 f604 	lsr.w	r6, r1, r4
 80006cc:	eb42 0106 	adc.w	r1, r2, r6
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f1c4 040c 	rsb	r4, r4, #12
 80006e0:	f1c4 0520 	rsb	r5, r4, #32
 80006e4:	fa00 f304 	lsl.w	r3, r0, r4
 80006e8:	fa20 f005 	lsr.w	r0, r0, r5
 80006ec:	fa01 f204 	lsl.w	r2, r1, r4
 80006f0:	ea40 0002 	orr.w	r0, r0, r2
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006fc:	f141 0100 	adc.w	r1, r1, #0
 8000700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000704:	bf08      	it	eq
 8000706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070a:	bd70      	pop	{r4, r5, r6, pc}
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f205 	lsl.w	r2, r0, r5
 8000714:	ea4e 0e02 	orr.w	lr, lr, r2
 8000718:	fa20 f304 	lsr.w	r3, r0, r4
 800071c:	fa01 f205 	lsl.w	r2, r1, r5
 8000720:	ea43 0302 	orr.w	r3, r3, r2
 8000724:	fa21 f004 	lsr.w	r0, r1, r4
 8000728:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800072c:	fa21 f204 	lsr.w	r2, r1, r4
 8000730:	ea20 0002 	bic.w	r0, r0, r2
 8000734:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000738:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800073c:	bf08      	it	eq
 800073e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	f094 0f00 	teq	r4, #0
 8000748:	d10f      	bne.n	800076a <__aeabi_dmul+0x1c2>
 800074a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800074e:	0040      	lsls	r0, r0, #1
 8000750:	eb41 0101 	adc.w	r1, r1, r1
 8000754:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000758:	bf08      	it	eq
 800075a:	3c01      	subeq	r4, #1
 800075c:	d0f7      	beq.n	800074e <__aeabi_dmul+0x1a6>
 800075e:	ea41 0106 	orr.w	r1, r1, r6
 8000762:	f095 0f00 	teq	r5, #0
 8000766:	bf18      	it	ne
 8000768:	4770      	bxne	lr
 800076a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800076e:	0052      	lsls	r2, r2, #1
 8000770:	eb43 0303 	adc.w	r3, r3, r3
 8000774:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000778:	bf08      	it	eq
 800077a:	3d01      	subeq	r5, #1
 800077c:	d0f7      	beq.n	800076e <__aeabi_dmul+0x1c6>
 800077e:	ea43 0306 	orr.w	r3, r3, r6
 8000782:	4770      	bx	lr
 8000784:	ea94 0f0c 	teq	r4, ip
 8000788:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800078c:	bf18      	it	ne
 800078e:	ea95 0f0c 	teqne	r5, ip
 8000792:	d00c      	beq.n	80007ae <__aeabi_dmul+0x206>
 8000794:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000798:	bf18      	it	ne
 800079a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800079e:	d1d1      	bne.n	8000744 <__aeabi_dmul+0x19c>
 80007a0:	ea81 0103 	eor.w	r1, r1, r3
 80007a4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007a8:	f04f 0000 	mov.w	r0, #0
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b2:	bf06      	itte	eq
 80007b4:	4610      	moveq	r0, r2
 80007b6:	4619      	moveq	r1, r3
 80007b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007bc:	d019      	beq.n	80007f2 <__aeabi_dmul+0x24a>
 80007be:	ea94 0f0c 	teq	r4, ip
 80007c2:	d102      	bne.n	80007ca <__aeabi_dmul+0x222>
 80007c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c8:	d113      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007ca:	ea95 0f0c 	teq	r5, ip
 80007ce:	d105      	bne.n	80007dc <__aeabi_dmul+0x234>
 80007d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d4:	bf1c      	itt	ne
 80007d6:	4610      	movne	r0, r2
 80007d8:	4619      	movne	r1, r3
 80007da:	d10a      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007dc:	ea81 0103 	eor.w	r1, r1, r3
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007e4:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007e8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007ec:	f04f 0000 	mov.w	r0, #0
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007f6:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007fa:	bd70      	pop	{r4, r5, r6, pc}

080007fc <__aeabi_ddiv>:
 80007fc:	b570      	push	{r4, r5, r6, lr}
 80007fe:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000802:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000806:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080a:	bf1d      	ittte	ne
 800080c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000810:	ea94 0f0c 	teqne	r4, ip
 8000814:	ea95 0f0c 	teqne	r5, ip
 8000818:	f000 f8a7 	bleq	800096a <__aeabi_ddiv+0x16e>
 800081c:	eba4 0405 	sub.w	r4, r4, r5
 8000820:	ea81 0e03 	eor.w	lr, r1, r3
 8000824:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000828:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800082c:	f000 8088 	beq.w	8000940 <__aeabi_ddiv+0x144>
 8000830:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000834:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000838:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800083c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000840:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000844:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000848:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800084c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000850:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000854:	429d      	cmp	r5, r3
 8000856:	bf08      	it	eq
 8000858:	4296      	cmpeq	r6, r2
 800085a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800085e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000862:	d202      	bcs.n	800086a <__aeabi_ddiv+0x6e>
 8000864:	085b      	lsrs	r3, r3, #1
 8000866:	ea4f 0232 	mov.w	r2, r2, rrx
 800086a:	1ab6      	subs	r6, r6, r2
 800086c:	eb65 0503 	sbc.w	r5, r5, r3
 8000870:	085b      	lsrs	r3, r3, #1
 8000872:	ea4f 0232 	mov.w	r2, r2, rrx
 8000876:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800087a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008dc:	d018      	beq.n	8000910 <__aeabi_ddiv+0x114>
 80008de:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fa:	d1c0      	bne.n	800087e <__aeabi_ddiv+0x82>
 80008fc:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000900:	d10b      	bne.n	800091a <__aeabi_ddiv+0x11e>
 8000902:	ea41 0100 	orr.w	r1, r1, r0
 8000906:	f04f 0000 	mov.w	r0, #0
 800090a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800090e:	e7b6      	b.n	800087e <__aeabi_ddiv+0x82>
 8000910:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000914:	bf04      	itt	eq
 8000916:	4301      	orreq	r1, r0
 8000918:	2000      	moveq	r0, #0
 800091a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800091e:	bf88      	it	hi
 8000920:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000924:	f63f aeaf 	bhi.w	8000686 <__aeabi_dmul+0xde>
 8000928:	ebb5 0c03 	subs.w	ip, r5, r3
 800092c:	bf04      	itt	eq
 800092e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000936:	f150 0000 	adcs.w	r0, r0, #0
 800093a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000944:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000948:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800094c:	bfc2      	ittt	gt
 800094e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000952:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000956:	bd70      	popgt	{r4, r5, r6, pc}
 8000958:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800095c:	f04f 0e00 	mov.w	lr, #0
 8000960:	3c01      	subs	r4, #1
 8000962:	e690      	b.n	8000686 <__aeabi_dmul+0xde>
 8000964:	ea45 0e06 	orr.w	lr, r5, r6
 8000968:	e68d      	b.n	8000686 <__aeabi_dmul+0xde>
 800096a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800096e:	ea94 0f0c 	teq	r4, ip
 8000972:	bf08      	it	eq
 8000974:	ea95 0f0c 	teqeq	r5, ip
 8000978:	f43f af3b 	beq.w	80007f2 <__aeabi_dmul+0x24a>
 800097c:	ea94 0f0c 	teq	r4, ip
 8000980:	d10a      	bne.n	8000998 <__aeabi_ddiv+0x19c>
 8000982:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000986:	f47f af34 	bne.w	80007f2 <__aeabi_dmul+0x24a>
 800098a:	ea95 0f0c 	teq	r5, ip
 800098e:	f47f af25 	bne.w	80007dc <__aeabi_dmul+0x234>
 8000992:	4610      	mov	r0, r2
 8000994:	4619      	mov	r1, r3
 8000996:	e72c      	b.n	80007f2 <__aeabi_dmul+0x24a>
 8000998:	ea95 0f0c 	teq	r5, ip
 800099c:	d106      	bne.n	80009ac <__aeabi_ddiv+0x1b0>
 800099e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a2:	f43f aefd 	beq.w	80007a0 <__aeabi_dmul+0x1f8>
 80009a6:	4610      	mov	r0, r2
 80009a8:	4619      	mov	r1, r3
 80009aa:	e722      	b.n	80007f2 <__aeabi_dmul+0x24a>
 80009ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b0:	bf18      	it	ne
 80009b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009b6:	f47f aec5 	bne.w	8000744 <__aeabi_dmul+0x19c>
 80009ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009be:	f47f af0d 	bne.w	80007dc <__aeabi_dmul+0x234>
 80009c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009c6:	f47f aeeb 	bne.w	80007a0 <__aeabi_dmul+0x1f8>
 80009ca:	e712      	b.n	80007f2 <__aeabi_dmul+0x24a>

080009cc <__gedf2>:
 80009cc:	f04f 3cff 	mov.w	ip, #4294967295
 80009d0:	e006      	b.n	80009e0 <__cmpdf2+0x4>
 80009d2:	bf00      	nop

080009d4 <__ledf2>:
 80009d4:	f04f 0c01 	mov.w	ip, #1
 80009d8:	e002      	b.n	80009e0 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__cmpdf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f0:	bf18      	it	ne
 80009f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009f6:	d01b      	beq.n	8000a30 <__cmpdf2+0x54>
 80009f8:	b001      	add	sp, #4
 80009fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009fe:	bf0c      	ite	eq
 8000a00:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a04:	ea91 0f03 	teqne	r1, r3
 8000a08:	bf02      	ittt	eq
 8000a0a:	ea90 0f02 	teqeq	r0, r2
 8000a0e:	2000      	moveq	r0, #0
 8000a10:	4770      	bxeq	lr
 8000a12:	f110 0f00 	cmn.w	r0, #0
 8000a16:	ea91 0f03 	teq	r1, r3
 8000a1a:	bf58      	it	pl
 8000a1c:	4299      	cmppl	r1, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4290      	cmpeq	r0, r2
 8000a22:	bf2c      	ite	cs
 8000a24:	17d8      	asrcs	r0, r3, #31
 8000a26:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a2a:	f040 0001 	orr.w	r0, r0, #1
 8000a2e:	4770      	bx	lr
 8000a30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d102      	bne.n	8000a40 <__cmpdf2+0x64>
 8000a3a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3e:	d107      	bne.n	8000a50 <__cmpdf2+0x74>
 8000a40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a48:	d1d6      	bne.n	80009f8 <__cmpdf2+0x1c>
 8000a4a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4e:	d0d3      	beq.n	80009f8 <__cmpdf2+0x1c>
 8000a50:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a54:	4770      	bx	lr
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdrcmple>:
 8000a58:	4684      	mov	ip, r0
 8000a5a:	4610      	mov	r0, r2
 8000a5c:	4662      	mov	r2, ip
 8000a5e:	468c      	mov	ip, r1
 8000a60:	4619      	mov	r1, r3
 8000a62:	4663      	mov	r3, ip
 8000a64:	e000      	b.n	8000a68 <__aeabi_cdcmpeq>
 8000a66:	bf00      	nop

08000a68 <__aeabi_cdcmpeq>:
 8000a68:	b501      	push	{r0, lr}
 8000a6a:	f7ff ffb7 	bl	80009dc <__cmpdf2>
 8000a6e:	2800      	cmp	r0, #0
 8000a70:	bf48      	it	mi
 8000a72:	f110 0f00 	cmnmi.w	r0, #0
 8000a76:	bd01      	pop	{r0, pc}

08000a78 <__aeabi_dcmpeq>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff fff4 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a80:	bf0c      	ite	eq
 8000a82:	2001      	moveq	r0, #1
 8000a84:	2000      	movne	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmplt>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffea 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a94:	bf34      	ite	cc
 8000a96:	2001      	movcc	r0, #1
 8000a98:	2000      	movcs	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmple>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffe0 	bl	8000a68 <__aeabi_cdcmpeq>
 8000aa8:	bf94      	ite	ls
 8000aaa:	2001      	movls	r0, #1
 8000aac:	2000      	movhi	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpge>:
 8000ab4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab8:	f7ff ffce 	bl	8000a58 <__aeabi_cdrcmple>
 8000abc:	bf94      	ite	ls
 8000abe:	2001      	movls	r0, #1
 8000ac0:	2000      	movhi	r0, #0
 8000ac2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_dcmpgt>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff ffc4 	bl	8000a58 <__aeabi_cdrcmple>
 8000ad0:	bf34      	ite	cc
 8000ad2:	2001      	movcc	r0, #1
 8000ad4:	2000      	movcs	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmpun>:
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__aeabi_dcmpun+0x10>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d10a      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d102      	bne.n	8000afc <__aeabi_dcmpun+0x20>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d102      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	f04f 0001 	mov.w	r0, #1
 8000b06:	4770      	bx	lr

08000b08 <__aeabi_d2iz>:
 8000b08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b0c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b10:	d215      	bcs.n	8000b3e <__aeabi_d2iz+0x36>
 8000b12:	d511      	bpl.n	8000b38 <__aeabi_d2iz+0x30>
 8000b14:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b18:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b1c:	d912      	bls.n	8000b44 <__aeabi_d2iz+0x3c>
 8000b1e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b22:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b26:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b2a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b32:	bf18      	it	ne
 8000b34:	4240      	negne	r0, r0
 8000b36:	4770      	bx	lr
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	4770      	bx	lr
 8000b3e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b42:	d105      	bne.n	8000b50 <__aeabi_d2iz+0x48>
 8000b44:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b48:	bf08      	it	eq
 8000b4a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b4e:	4770      	bx	lr
 8000b50:	f04f 0000 	mov.w	r0, #0
 8000b54:	4770      	bx	lr
 8000b56:	bf00      	nop

08000b58 <__aeabi_d2uiz>:
 8000b58:	004a      	lsls	r2, r1, #1
 8000b5a:	d211      	bcs.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d211      	bcs.n	8000b86 <__aeabi_d2uiz+0x2e>
 8000b62:	d50d      	bpl.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d40e      	bmi.n	8000b8c <__aeabi_d2uiz+0x34>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	fa23 f002 	lsr.w	r0, r3, r2
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_d2uiz+0x3a>
 8000b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0000 	mov.w	r0, #0
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2f>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ba0:	bf24      	itt	cs
 8000ba2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ba6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000baa:	d90d      	bls.n	8000bc8 <__aeabi_d2f+0x30>
 8000bac:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bb0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bb4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bb8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bbc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc0:	bf08      	it	eq
 8000bc2:	f020 0001 	biceq.w	r0, r0, #1
 8000bc6:	4770      	bx	lr
 8000bc8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bcc:	d121      	bne.n	8000c12 <__aeabi_d2f+0x7a>
 8000bce:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bd2:	bfbc      	itt	lt
 8000bd4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	4770      	bxlt	lr
 8000bda:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bde:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000be2:	f1c2 0218 	rsb	r2, r2, #24
 8000be6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bea:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bee:	fa20 f002 	lsr.w	r0, r0, r2
 8000bf2:	bf18      	it	ne
 8000bf4:	f040 0001 	orrne.w	r0, r0, #1
 8000bf8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bfc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c00:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c04:	ea40 000c 	orr.w	r0, r0, ip
 8000c08:	fa23 f302 	lsr.w	r3, r3, r2
 8000c0c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c10:	e7cc      	b.n	8000bac <__aeabi_d2f+0x14>
 8000c12:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c16:	d107      	bne.n	8000c28 <__aeabi_d2f+0x90>
 8000c18:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c1c:	bf1e      	ittt	ne
 8000c1e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c22:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c26:	4770      	bxne	lr
 8000c28:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c2c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c30:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c34:	4770      	bx	lr
 8000c36:	bf00      	nop

08000c38 <__aeabi_uldivmod>:
 8000c38:	b953      	cbnz	r3, 8000c50 <__aeabi_uldivmod+0x18>
 8000c3a:	b94a      	cbnz	r2, 8000c50 <__aeabi_uldivmod+0x18>
 8000c3c:	2900      	cmp	r1, #0
 8000c3e:	bf08      	it	eq
 8000c40:	2800      	cmpeq	r0, #0
 8000c42:	bf1c      	itt	ne
 8000c44:	f04f 31ff 	movne.w	r1, #4294967295
 8000c48:	f04f 30ff 	movne.w	r0, #4294967295
 8000c4c:	f000 b9be 	b.w	8000fcc <__aeabi_idiv0>
 8000c50:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c54:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c58:	f000 f83c 	bl	8000cd4 <__udivmoddi4>
 8000c5c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c60:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c64:	b004      	add	sp, #16
 8000c66:	4770      	bx	lr

08000c68 <__aeabi_d2lz>:
 8000c68:	b538      	push	{r3, r4, r5, lr}
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4604      	mov	r4, r0
 8000c70:	460d      	mov	r5, r1
 8000c72:	f7ff ff0b 	bl	8000a8c <__aeabi_dcmplt>
 8000c76:	b928      	cbnz	r0, 8000c84 <__aeabi_d2lz+0x1c>
 8000c78:	4620      	mov	r0, r4
 8000c7a:	4629      	mov	r1, r5
 8000c7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c80:	f000 b80a 	b.w	8000c98 <__aeabi_d2ulz>
 8000c84:	4620      	mov	r0, r4
 8000c86:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000c8a:	f000 f805 	bl	8000c98 <__aeabi_d2ulz>
 8000c8e:	4240      	negs	r0, r0
 8000c90:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c94:	bd38      	pop	{r3, r4, r5, pc}
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2ulz>:
 8000c98:	b5d0      	push	{r4, r6, r7, lr}
 8000c9a:	4b0c      	ldr	r3, [pc, #48]	@ (8000ccc <__aeabi_d2ulz+0x34>)
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	4606      	mov	r6, r0
 8000ca0:	460f      	mov	r7, r1
 8000ca2:	f7ff fc81 	bl	80005a8 <__aeabi_dmul>
 8000ca6:	f7ff ff57 	bl	8000b58 <__aeabi_d2uiz>
 8000caa:	4604      	mov	r4, r0
 8000cac:	f7ff fc02 	bl	80004b4 <__aeabi_ui2d>
 8000cb0:	4b07      	ldr	r3, [pc, #28]	@ (8000cd0 <__aeabi_d2ulz+0x38>)
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	f7ff fc78 	bl	80005a8 <__aeabi_dmul>
 8000cb8:	4602      	mov	r2, r0
 8000cba:	460b      	mov	r3, r1
 8000cbc:	4630      	mov	r0, r6
 8000cbe:	4639      	mov	r1, r7
 8000cc0:	f7ff faba 	bl	8000238 <__aeabi_dsub>
 8000cc4:	f7ff ff48 	bl	8000b58 <__aeabi_d2uiz>
 8000cc8:	4621      	mov	r1, r4
 8000cca:	bdd0      	pop	{r4, r6, r7, pc}
 8000ccc:	3df00000 	.word	0x3df00000
 8000cd0:	41f00000 	.word	0x41f00000

08000cd4 <__udivmoddi4>:
 8000cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cd8:	9d08      	ldr	r5, [sp, #32]
 8000cda:	468e      	mov	lr, r1
 8000cdc:	4604      	mov	r4, r0
 8000cde:	4688      	mov	r8, r1
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	d14a      	bne.n	8000d7a <__udivmoddi4+0xa6>
 8000ce4:	428a      	cmp	r2, r1
 8000ce6:	4617      	mov	r7, r2
 8000ce8:	d962      	bls.n	8000db0 <__udivmoddi4+0xdc>
 8000cea:	fab2 f682 	clz	r6, r2
 8000cee:	b14e      	cbz	r6, 8000d04 <__udivmoddi4+0x30>
 8000cf0:	f1c6 0320 	rsb	r3, r6, #32
 8000cf4:	fa01 f806 	lsl.w	r8, r1, r6
 8000cf8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cfc:	40b7      	lsls	r7, r6
 8000cfe:	ea43 0808 	orr.w	r8, r3, r8
 8000d02:	40b4      	lsls	r4, r6
 8000d04:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d08:	fa1f fc87 	uxth.w	ip, r7
 8000d0c:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d10:	0c23      	lsrs	r3, r4, #16
 8000d12:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d16:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d1a:	fb01 f20c 	mul.w	r2, r1, ip
 8000d1e:	429a      	cmp	r2, r3
 8000d20:	d909      	bls.n	8000d36 <__udivmoddi4+0x62>
 8000d22:	18fb      	adds	r3, r7, r3
 8000d24:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d28:	f080 80ea 	bcs.w	8000f00 <__udivmoddi4+0x22c>
 8000d2c:	429a      	cmp	r2, r3
 8000d2e:	f240 80e7 	bls.w	8000f00 <__udivmoddi4+0x22c>
 8000d32:	3902      	subs	r1, #2
 8000d34:	443b      	add	r3, r7
 8000d36:	1a9a      	subs	r2, r3, r2
 8000d38:	b2a3      	uxth	r3, r4
 8000d3a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d3e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d42:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d46:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d4a:	459c      	cmp	ip, r3
 8000d4c:	d909      	bls.n	8000d62 <__udivmoddi4+0x8e>
 8000d4e:	18fb      	adds	r3, r7, r3
 8000d50:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d54:	f080 80d6 	bcs.w	8000f04 <__udivmoddi4+0x230>
 8000d58:	459c      	cmp	ip, r3
 8000d5a:	f240 80d3 	bls.w	8000f04 <__udivmoddi4+0x230>
 8000d5e:	443b      	add	r3, r7
 8000d60:	3802      	subs	r0, #2
 8000d62:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d66:	eba3 030c 	sub.w	r3, r3, ip
 8000d6a:	2100      	movs	r1, #0
 8000d6c:	b11d      	cbz	r5, 8000d76 <__udivmoddi4+0xa2>
 8000d6e:	40f3      	lsrs	r3, r6
 8000d70:	2200      	movs	r2, #0
 8000d72:	e9c5 3200 	strd	r3, r2, [r5]
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	428b      	cmp	r3, r1
 8000d7c:	d905      	bls.n	8000d8a <__udivmoddi4+0xb6>
 8000d7e:	b10d      	cbz	r5, 8000d84 <__udivmoddi4+0xb0>
 8000d80:	e9c5 0100 	strd	r0, r1, [r5]
 8000d84:	2100      	movs	r1, #0
 8000d86:	4608      	mov	r0, r1
 8000d88:	e7f5      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000d8a:	fab3 f183 	clz	r1, r3
 8000d8e:	2900      	cmp	r1, #0
 8000d90:	d146      	bne.n	8000e20 <__udivmoddi4+0x14c>
 8000d92:	4573      	cmp	r3, lr
 8000d94:	d302      	bcc.n	8000d9c <__udivmoddi4+0xc8>
 8000d96:	4282      	cmp	r2, r0
 8000d98:	f200 8105 	bhi.w	8000fa6 <__udivmoddi4+0x2d2>
 8000d9c:	1a84      	subs	r4, r0, r2
 8000d9e:	eb6e 0203 	sbc.w	r2, lr, r3
 8000da2:	2001      	movs	r0, #1
 8000da4:	4690      	mov	r8, r2
 8000da6:	2d00      	cmp	r5, #0
 8000da8:	d0e5      	beq.n	8000d76 <__udivmoddi4+0xa2>
 8000daa:	e9c5 4800 	strd	r4, r8, [r5]
 8000dae:	e7e2      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000db0:	2a00      	cmp	r2, #0
 8000db2:	f000 8090 	beq.w	8000ed6 <__udivmoddi4+0x202>
 8000db6:	fab2 f682 	clz	r6, r2
 8000dba:	2e00      	cmp	r6, #0
 8000dbc:	f040 80a4 	bne.w	8000f08 <__udivmoddi4+0x234>
 8000dc0:	1a8a      	subs	r2, r1, r2
 8000dc2:	0c03      	lsrs	r3, r0, #16
 8000dc4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dc8:	b280      	uxth	r0, r0
 8000dca:	b2bc      	uxth	r4, r7
 8000dcc:	2101      	movs	r1, #1
 8000dce:	fbb2 fcfe 	udiv	ip, r2, lr
 8000dd2:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dd6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dda:	fb04 f20c 	mul.w	r2, r4, ip
 8000dde:	429a      	cmp	r2, r3
 8000de0:	d907      	bls.n	8000df2 <__udivmoddi4+0x11e>
 8000de2:	18fb      	adds	r3, r7, r3
 8000de4:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000de8:	d202      	bcs.n	8000df0 <__udivmoddi4+0x11c>
 8000dea:	429a      	cmp	r2, r3
 8000dec:	f200 80e0 	bhi.w	8000fb0 <__udivmoddi4+0x2dc>
 8000df0:	46c4      	mov	ip, r8
 8000df2:	1a9b      	subs	r3, r3, r2
 8000df4:	fbb3 f2fe 	udiv	r2, r3, lr
 8000df8:	fb0e 3312 	mls	r3, lr, r2, r3
 8000dfc:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e00:	fb02 f404 	mul.w	r4, r2, r4
 8000e04:	429c      	cmp	r4, r3
 8000e06:	d907      	bls.n	8000e18 <__udivmoddi4+0x144>
 8000e08:	18fb      	adds	r3, r7, r3
 8000e0a:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e0e:	d202      	bcs.n	8000e16 <__udivmoddi4+0x142>
 8000e10:	429c      	cmp	r4, r3
 8000e12:	f200 80ca 	bhi.w	8000faa <__udivmoddi4+0x2d6>
 8000e16:	4602      	mov	r2, r0
 8000e18:	1b1b      	subs	r3, r3, r4
 8000e1a:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e1e:	e7a5      	b.n	8000d6c <__udivmoddi4+0x98>
 8000e20:	f1c1 0620 	rsb	r6, r1, #32
 8000e24:	408b      	lsls	r3, r1
 8000e26:	fa22 f706 	lsr.w	r7, r2, r6
 8000e2a:	431f      	orrs	r7, r3
 8000e2c:	fa0e f401 	lsl.w	r4, lr, r1
 8000e30:	fa20 f306 	lsr.w	r3, r0, r6
 8000e34:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e38:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e3c:	4323      	orrs	r3, r4
 8000e3e:	fa00 f801 	lsl.w	r8, r0, r1
 8000e42:	fa1f fc87 	uxth.w	ip, r7
 8000e46:	fbbe f0f9 	udiv	r0, lr, r9
 8000e4a:	0c1c      	lsrs	r4, r3, #16
 8000e4c:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e50:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e54:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e58:	45a6      	cmp	lr, r4
 8000e5a:	fa02 f201 	lsl.w	r2, r2, r1
 8000e5e:	d909      	bls.n	8000e74 <__udivmoddi4+0x1a0>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e66:	f080 809c 	bcs.w	8000fa2 <__udivmoddi4+0x2ce>
 8000e6a:	45a6      	cmp	lr, r4
 8000e6c:	f240 8099 	bls.w	8000fa2 <__udivmoddi4+0x2ce>
 8000e70:	3802      	subs	r0, #2
 8000e72:	443c      	add	r4, r7
 8000e74:	eba4 040e 	sub.w	r4, r4, lr
 8000e78:	fa1f fe83 	uxth.w	lr, r3
 8000e7c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e80:	fb09 4413 	mls	r4, r9, r3, r4
 8000e84:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e88:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e8c:	45a4      	cmp	ip, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x1ce>
 8000e90:	193c      	adds	r4, r7, r4
 8000e92:	f103 3eff 	add.w	lr, r3, #4294967295
 8000e96:	f080 8082 	bcs.w	8000f9e <__udivmoddi4+0x2ca>
 8000e9a:	45a4      	cmp	ip, r4
 8000e9c:	d97f      	bls.n	8000f9e <__udivmoddi4+0x2ca>
 8000e9e:	3b02      	subs	r3, #2
 8000ea0:	443c      	add	r4, r7
 8000ea2:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ea6:	eba4 040c 	sub.w	r4, r4, ip
 8000eaa:	fba0 ec02 	umull	lr, ip, r0, r2
 8000eae:	4564      	cmp	r4, ip
 8000eb0:	4673      	mov	r3, lr
 8000eb2:	46e1      	mov	r9, ip
 8000eb4:	d362      	bcc.n	8000f7c <__udivmoddi4+0x2a8>
 8000eb6:	d05f      	beq.n	8000f78 <__udivmoddi4+0x2a4>
 8000eb8:	b15d      	cbz	r5, 8000ed2 <__udivmoddi4+0x1fe>
 8000eba:	ebb8 0203 	subs.w	r2, r8, r3
 8000ebe:	eb64 0409 	sbc.w	r4, r4, r9
 8000ec2:	fa04 f606 	lsl.w	r6, r4, r6
 8000ec6:	fa22 f301 	lsr.w	r3, r2, r1
 8000eca:	431e      	orrs	r6, r3
 8000ecc:	40cc      	lsrs	r4, r1
 8000ece:	e9c5 6400 	strd	r6, r4, [r5]
 8000ed2:	2100      	movs	r1, #0
 8000ed4:	e74f      	b.n	8000d76 <__udivmoddi4+0xa2>
 8000ed6:	fbb1 fcf2 	udiv	ip, r1, r2
 8000eda:	0c01      	lsrs	r1, r0, #16
 8000edc:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ee0:	b280      	uxth	r0, r0
 8000ee2:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000ee6:	463b      	mov	r3, r7
 8000ee8:	4638      	mov	r0, r7
 8000eea:	463c      	mov	r4, r7
 8000eec:	46b8      	mov	r8, r7
 8000eee:	46be      	mov	lr, r7
 8000ef0:	2620      	movs	r6, #32
 8000ef2:	fbb1 f1f7 	udiv	r1, r1, r7
 8000ef6:	eba2 0208 	sub.w	r2, r2, r8
 8000efa:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000efe:	e766      	b.n	8000dce <__udivmoddi4+0xfa>
 8000f00:	4601      	mov	r1, r0
 8000f02:	e718      	b.n	8000d36 <__udivmoddi4+0x62>
 8000f04:	4610      	mov	r0, r2
 8000f06:	e72c      	b.n	8000d62 <__udivmoddi4+0x8e>
 8000f08:	f1c6 0220 	rsb	r2, r6, #32
 8000f0c:	fa2e f302 	lsr.w	r3, lr, r2
 8000f10:	40b7      	lsls	r7, r6
 8000f12:	40b1      	lsls	r1, r6
 8000f14:	fa20 f202 	lsr.w	r2, r0, r2
 8000f18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f1c:	430a      	orrs	r2, r1
 8000f1e:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f22:	b2bc      	uxth	r4, r7
 8000f24:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f28:	0c11      	lsrs	r1, r2, #16
 8000f2a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f2e:	fb08 f904 	mul.w	r9, r8, r4
 8000f32:	40b0      	lsls	r0, r6
 8000f34:	4589      	cmp	r9, r1
 8000f36:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f3a:	b280      	uxth	r0, r0
 8000f3c:	d93e      	bls.n	8000fbc <__udivmoddi4+0x2e8>
 8000f3e:	1879      	adds	r1, r7, r1
 8000f40:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f44:	d201      	bcs.n	8000f4a <__udivmoddi4+0x276>
 8000f46:	4589      	cmp	r9, r1
 8000f48:	d81f      	bhi.n	8000f8a <__udivmoddi4+0x2b6>
 8000f4a:	eba1 0109 	sub.w	r1, r1, r9
 8000f4e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f52:	fb09 f804 	mul.w	r8, r9, r4
 8000f56:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5a:	b292      	uxth	r2, r2
 8000f5c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f60:	4542      	cmp	r2, r8
 8000f62:	d229      	bcs.n	8000fb8 <__udivmoddi4+0x2e4>
 8000f64:	18ba      	adds	r2, r7, r2
 8000f66:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f6a:	d2c4      	bcs.n	8000ef6 <__udivmoddi4+0x222>
 8000f6c:	4542      	cmp	r2, r8
 8000f6e:	d2c2      	bcs.n	8000ef6 <__udivmoddi4+0x222>
 8000f70:	f1a9 0102 	sub.w	r1, r9, #2
 8000f74:	443a      	add	r2, r7
 8000f76:	e7be      	b.n	8000ef6 <__udivmoddi4+0x222>
 8000f78:	45f0      	cmp	r8, lr
 8000f7a:	d29d      	bcs.n	8000eb8 <__udivmoddi4+0x1e4>
 8000f7c:	ebbe 0302 	subs.w	r3, lr, r2
 8000f80:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f84:	3801      	subs	r0, #1
 8000f86:	46e1      	mov	r9, ip
 8000f88:	e796      	b.n	8000eb8 <__udivmoddi4+0x1e4>
 8000f8a:	eba7 0909 	sub.w	r9, r7, r9
 8000f8e:	4449      	add	r1, r9
 8000f90:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f94:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f98:	fb09 f804 	mul.w	r8, r9, r4
 8000f9c:	e7db      	b.n	8000f56 <__udivmoddi4+0x282>
 8000f9e:	4673      	mov	r3, lr
 8000fa0:	e77f      	b.n	8000ea2 <__udivmoddi4+0x1ce>
 8000fa2:	4650      	mov	r0, sl
 8000fa4:	e766      	b.n	8000e74 <__udivmoddi4+0x1a0>
 8000fa6:	4608      	mov	r0, r1
 8000fa8:	e6fd      	b.n	8000da6 <__udivmoddi4+0xd2>
 8000faa:	443b      	add	r3, r7
 8000fac:	3a02      	subs	r2, #2
 8000fae:	e733      	b.n	8000e18 <__udivmoddi4+0x144>
 8000fb0:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fb4:	443b      	add	r3, r7
 8000fb6:	e71c      	b.n	8000df2 <__udivmoddi4+0x11e>
 8000fb8:	4649      	mov	r1, r9
 8000fba:	e79c      	b.n	8000ef6 <__udivmoddi4+0x222>
 8000fbc:	eba1 0109 	sub.w	r1, r1, r9
 8000fc0:	46c4      	mov	ip, r8
 8000fc2:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fc6:	fb09 f804 	mul.w	r8, r9, r4
 8000fca:	e7c4      	b.n	8000f56 <__udivmoddi4+0x282>

08000fcc <__aeabi_idiv0>:
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop

08000fd0 <GNSS_Init>:
/*!
 * Structure initialization.
 * @param GNSS Pointer to main GNSS structure.
 * @param huart Pointer to uart handle.
 */
void GNSS_Init(GNSS_StateHandle *GNSS, UART_HandleTypeDef *huart) {
 8000fd0:	b500      	push	{lr}
 8000fd2:	b083      	sub	sp, #12
	GNSS->huart = huart;
	GNSS->year = 0;
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	f8a0 306e 	strh.w	r3, [r0, #110]	@ 0x6e
	GNSS->month = 0;
 8000fda:	f8c0 3072 	str.w	r3, [r0, #114]	@ 0x72
 8000fde:	f8c0 3076 	str.w	r3, [r0, #118]	@ 0x76
	GNSS->min = 0;
	GNSS->sec = 0;
	GNSS->fixType = 0;
	GNSS->numSV = 0;
	GNSS->satCount = 0;
	GNSS->lon = 0;
 8000fe2:	67c3      	str	r3, [r0, #124]	@ 0x7c
	GNSS->lat = 0;
 8000fe4:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
	GNSS->height = 0;
 8000fe8:	f8c0 3094 	str.w	r3, [r0, #148]	@ 0x94
	GNSS->hMSL = 0;
 8000fec:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
	GNSS->hAcc = 0;
 8000ff0:	f8c0 30a8 	str.w	r3, [r0, #168]	@ 0xa8
	GNSS->vAcc = 0;
 8000ff4:	f8c0 30b0 	str.w	r3, [r0, #176]	@ 0xb0
	GNSS->gSpeed = 0;
 8000ff8:	f8c0 30b8 	str.w	r3, [r0, #184]	@ 0xb8
	GNSS->headMot = 0;
 8000ffc:	f8c0 30c4 	str.w	r3, [r0, #196]	@ 0xc4
void GNSS_Init(GNSS_StateHandle *GNSS, UART_HandleTypeDef *huart) {
 8001000:	9101      	str	r1, [sp, #4]
	GNSS->huart = huart;
 8001002:	6001      	str	r1, [r0, #0]

	HAL_UART_Transmit_DMA(&huart,uart1outprotnmeadisable,sizeof(uart1outprotnmeadisable)/(sizeof(uint8_t)));
 8001004:	2211      	movs	r2, #17
 8001006:	4915      	ldr	r1, [pc, #84]	@ (800105c <GNSS_Init+0x8c>)
 8001008:	a801      	add	r0, sp, #4
 800100a:	f009 fcfb 	bl	800aa04 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800100e:	201e      	movs	r0, #30
 8001010:	f004 fa88 	bl	8005524 <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,uart1outprotubxenable,sizeof(uart1outprotubxenable)/(sizeof(uint8_t)));
 8001014:	4912      	ldr	r1, [pc, #72]	@ (8001060 <GNSS_Init+0x90>)
 8001016:	2211      	movs	r2, #17
 8001018:	a801      	add	r0, sp, #4
 800101a:	f009 fcf3 	bl	800aa04 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800101e:	201e      	movs	r0, #30
 8001020:	f004 fa80 	bl	8005524 <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,setGPS_GAL_GLONASS,sizeof(setGPS_GAL_BEIDOU_GLONASS)/(sizeof(uint8_t)));
 8001024:	490f      	ldr	r1, [pc, #60]	@ (8001064 <GNSS_Init+0x94>)
 8001026:	2234      	movs	r2, #52	@ 0x34
 8001028:	a801      	add	r0, sp, #4
 800102a:	f009 fceb 	bl	800aa04 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800102e:	201e      	movs	r0, #30
 8001030:	f004 fa78 	bl	8005524 <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,meas_rate_5hz,sizeof(meas_rate_10hz)/(sizeof(uint8_t)));
 8001034:	490c      	ldr	r1, [pc, #48]	@ (8001068 <GNSS_Init+0x98>)
 8001036:	2212      	movs	r2, #18
 8001038:	a801      	add	r0, sp, #4
 800103a:	f009 fce3 	bl	800aa04 <HAL_UART_Transmit_DMA>
	  HAL_Delay(30);
 800103e:	201e      	movs	r0, #30
 8001040:	f004 fa70 	bl	8005524 <HAL_Delay>
	  HAL_UART_Transmit_DMA(&huart,ubx_pvt_every_1meas,sizeof(ubx_pvt_every_1meas)/(sizeof(uint8_t)));
 8001044:	4909      	ldr	r1, [pc, #36]	@ (800106c <GNSS_Init+0x9c>)
 8001046:	2211      	movs	r2, #17
 8001048:	a801      	add	r0, sp, #4
 800104a:	f009 fcdb 	bl	800aa04 <HAL_UART_Transmit_DMA>

	HAL_Delay(100);
 800104e:	2064      	movs	r0, #100	@ 0x64
 8001050:	f004 fa68 	bl	8005524 <HAL_Delay>
}
 8001054:	b003      	add	sp, #12
 8001056:	f85d fb04 	ldr.w	pc, [sp], #4
 800105a:	bf00      	nop
 800105c:	08015ce0 	.word	0x08015ce0
 8001060:	08015cf4 	.word	0x08015cf4
 8001064:	08015c8c 	.word	0x08015c8c
 8001068:	08015ccc 	.word	0x08015ccc
 800106c:	08015cb8 	.word	0x08015cb8

08001070 <GNSS_ParsePVTData>:
/*!
 * Parse data to navigation position velocity time solution standard.
 * Look at: 32.17.15.1 u-blox 8 Receiver description.
 * @param GNSS Pointer to main GNSS structure.
 */
void GNSS_ParsePVTData(GNSS_StateHandle *GNSS) {
 8001070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001072:	4604      	mov	r4, r0
	uShort.bytes[0] = GNSS->uartWorkingBuffer[10];
 8001074:	4d70      	ldr	r5, [pc, #448]	@ (8001238 <GNSS_ParsePVTData+0x1c8>)
 8001076:	7d82      	ldrb	r2, [r0, #22]
 8001078:	8a63      	ldrh	r3, [r4, #18]
 800107a:	7c81      	ldrb	r1, [r0, #18]
 800107c:	802b      	strh	r3, [r5, #0]
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
	uShort.bytes[1] = GNSS->uartWorkingBuffer[11];
 800107e:	7cc0      	ldrb	r0, [r0, #19]
	GNSS->yearBytes[1]=GNSS->uartWorkingBuffer[11];
	GNSS->year = uShort.uShort;
 8001080:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
	GNSS->month = GNSS->uartWorkingBuffer[12];
	GNSS->day = GNSS->uartWorkingBuffer[13];
	GNSS->hour = GNSS->uartWorkingBuffer[14];
	GNSS->min = GNSS->uartWorkingBuffer[15];
	GNSS->sec = GNSS->uartWorkingBuffer[16];
	GNSS->fixType = GNSS->uartWorkingBuffer[26];
 8001084:	2300      	movs	r3, #0
 8001086:	f362 0307 	bfi	r3, r2, #0, #8
 800108a:	7de2      	ldrb	r2, [r4, #23]
 800108c:	4e6b      	ldr	r6, [pc, #428]	@ (800123c <GNSS_ParsePVTData+0x1cc>)
	}
	GNSS->hMSL = iLong.iLong;
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;

	for (int var = 0; var < 4; ++var) {
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 46];
 800108e:	4f6c      	ldr	r7, [pc, #432]	@ (8001240 <GNSS_ParsePVTData+0x1d0>)
 8001090:	f362 230f 	bfi	r3, r2, #8, #8
 8001094:	7e22      	ldrb	r2, [r4, #24]
 8001096:	f362 4317 	bfi	r3, r2, #16, #8
 800109a:	f894 2022 	ldrb.w	r2, [r4, #34]	@ 0x22
 800109e:	f362 631f 	bfi	r3, r2, #24, #8
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
 80010a2:	2200      	movs	r2, #0
 80010a4:	f361 0207 	bfi	r2, r1, #0, #8
 80010a8:	7d21      	ldrb	r1, [r4, #20]
 80010aa:	f360 220f 	bfi	r2, r0, #8, #8
 80010ae:	f361 4217 	bfi	r2, r1, #16, #8
 80010b2:	7d61      	ldrb	r1, [r4, #21]
	GNSS->numSV = GNSS->uartWorkingBuffer[29];
 80010b4:	f894 0025 	ldrb.w	r0, [r4, #37]	@ 0x25
 80010b8:	f884 0078 	strb.w	r0, [r4, #120]	@ 0x78
	GNSS->yearBytes[0]=GNSS->uartWorkingBuffer[10];
 80010bc:	f361 621f 	bfi	r2, r1, #24, #8
 80010c0:	e9c4 231c 	strd	r2, r3, [r4, #112]	@ 0x70
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 30];
 80010c4:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 80010c8:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010cc:	ee07 3a90 	vmov	s15, r3
 80010d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->lon = iLong.iLong;
 80010d4:	e9c4 331f 	strd	r3, r3, [r4, #124]	@ 0x7c
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010d8:	ee17 0a90 	vmov	r0, s15
 80010dc:	f7ff fa0c 	bl	80004f8 <__aeabi_f2d>
 80010e0:	a34f      	add	r3, pc, #316	@ (adr r3, 8001220 <GNSS_ParsePVTData+0x1b0>)
 80010e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010e6:	f7ff fa5f 	bl	80005a8 <__aeabi_dmul>
 80010ea:	f7ff fd55 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 34];
 80010ee:	f8d4 302a 	ldr.w	r3, [r4, #42]	@ 0x2a
	GNSS->fLon=(float)iLong.iLong/10000000.0;
 80010f2:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 80010f6:	ee07 3a90 	vmov	s15, r3
 80010fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->lat = iLong.iLong;
 80010fe:	e9c4 3321 	strd	r3, r3, [r4, #132]	@ 0x84
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 8001102:	ee17 0a90 	vmov	r0, s15
 8001106:	f7ff f9f7 	bl	80004f8 <__aeabi_f2d>
 800110a:	a345      	add	r3, pc, #276	@ (adr r3, 8001220 <GNSS_ParsePVTData+0x1b0>)
 800110c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001110:	f7ff fa4a 	bl	80005a8 <__aeabi_dmul>
 8001114:	f7ff fd40 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 38];
 8001118:	f8d4 302e 	ldr.w	r3, [r4, #46]	@ 0x2e
	GNSS->fLat=(float)iLong.iLong/10000000.0;
 800111c:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
	GNSS->fheight=(float)GNSS->height/1000.0;
 8001120:	ee07 3a90 	vmov	s15, r3
 8001124:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->height = iLong.iLong;
 8001128:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
	GNSS->fheight=(float)GNSS->height/1000.0;
 800112c:	ee17 0a90 	vmov	r0, s15
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 38];
 8001130:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fheight=(float)GNSS->height/1000.0;
 8001134:	f7ff f9e0 	bl	80004f8 <__aeabi_f2d>
 8001138:	a33b      	add	r3, pc, #236	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 800113a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800113e:	f7ff fa33 	bl	80005a8 <__aeabi_dmul>
 8001142:	f7ff fd29 	bl	8000b98 <__aeabi_d2f>
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 42];
 8001146:	f8d4 3032 	ldr.w	r3, [r4, #50]	@ 0x32
	GNSS->fheight=(float)GNSS->height/1000.0;
 800114a:	f8c4 0098 	str.w	r0, [r4, #152]	@ 0x98
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 800114e:	ee07 3a90 	vmov	s15, r3
 8001152:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->hMSL = iLong.iLong;
 8001156:	e9c4 3327 	strd	r3, r3, [r4, #156]	@ 0x9c
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 800115a:	ee17 0a90 	vmov	r0, s15
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 42];
 800115e:	f846 3c04 	str.w	r3, [r6, #-4]
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 8001162:	f7ff f9c9 	bl	80004f8 <__aeabi_f2d>
 8001166:	a330      	add	r3, pc, #192	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 8001168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800116c:	f7ff fa1c 	bl	80005a8 <__aeabi_dmul>
 8001170:	f7ff fd12 	bl	8000b98 <__aeabi_d2f>
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 46];
 8001174:	f8d4 3036 	ldr.w	r3, [r4, #54]	@ 0x36
	GNSS->fhMSL=(float)GNSS->hMSL/1000.0;
 8001178:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
	}
	GNSS->hAcc = uLong.uLong;
	GNSS->fhACC=(float)GNSS->hAcc/1000.0;
 800117c:	ee07 3a90 	vmov	s15, r3
 8001180:	eef8 7a67 	vcvt.f32.u32	s15, s15
	GNSS->hAcc = uLong.uLong;
 8001184:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
	GNSS->fhACC=(float)GNSS->hAcc/1000.0;
 8001188:	ee17 0a90 	vmov	r0, s15
 800118c:	f7ff f9b4 	bl	80004f8 <__aeabi_f2d>
 8001190:	a325      	add	r3, pc, #148	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 8001192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001196:	f7ff fa07 	bl	80005a8 <__aeabi_dmul>
 800119a:	f7ff fcfd 	bl	8000b98 <__aeabi_d2f>
 800119e:	f8c4 00ac 	str.w	r0, [r4, #172]	@ 0xac

	for (int var = 0; var < 4; ++var) {
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 50];
 80011a2:	f8d4 003a 	ldr.w	r0, [r4, #58]	@ 0x3a
	}
	GNSS->vAcc = uLong.uLong;
 80011a6:	f8c4 00b0 	str.w	r0, [r4, #176]	@ 0xb0
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011aa:	ee07 0a90 	vmov	s15, r0
 80011ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
		uLong.bytes[var] = GNSS->uartWorkingBuffer[var + 50];
 80011b2:	6038      	str	r0, [r7, #0]
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011b4:	ee17 0a90 	vmov	r0, s15
 80011b8:	f7ff f99e 	bl	80004f8 <__aeabi_f2d>
 80011bc:	a31a      	add	r3, pc, #104	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 80011be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c2:	f7ff f9f1 	bl	80005a8 <__aeabi_dmul>
 80011c6:	f7ff fce7 	bl	8000b98 <__aeabi_d2f>

	for (int var = 0; var < 4; ++var) {
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 66];
 80011ca:	f8d4 304a 	ldr.w	r3, [r4, #74]	@ 0x4a
	GNSS->fvACC=(float)GNSS->vAcc/1000.0;
 80011ce:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
		GNSS->gSpeedBytes[var] = GNSS->uartWorkingBuffer[var + 66];
	}
	GNSS->gSpeed = iLong.iLong;
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011d2:	ee07 3a90 	vmov	s15, r3
 80011d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	GNSS->gSpeed = iLong.iLong;
 80011da:	e9c4 332e 	strd	r3, r3, [r4, #184]	@ 0xb8
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011de:	ee17 0a90 	vmov	r0, s15
 80011e2:	f7ff f989 	bl	80004f8 <__aeabi_f2d>
 80011e6:	a310      	add	r3, pc, #64	@ (adr r3, 8001228 <GNSS_ParsePVTData+0x1b8>)
 80011e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011ec:	f7ff f9dc 	bl	80005a8 <__aeabi_dmul>
 80011f0:	f7ff fcd2 	bl	8000b98 <__aeabi_d2f>

	for (int var = 0; var < 4; ++var) {
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 70];
 80011f4:	f8d4 304e 	ldr.w	r3, [r4, #78]	@ 0x4e
	GNSS->fgSpeed=(float)GNSS->gSpeed/1000.0;
 80011f8:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
		iLong.bytes[var] = GNSS->uartWorkingBuffer[var + 70];
 80011fc:	f846 3c04 	str.w	r3, [r6, #-4]
	}
	GNSS->headMot = iLong.iLong * 1e-5;
 8001200:	4618      	mov	r0, r3
 8001202:	f7ff f967 	bl	80004d4 <__aeabi_i2d>
 8001206:	a30a      	add	r3, pc, #40	@ (adr r3, 8001230 <GNSS_ParsePVTData+0x1c0>)
 8001208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800120c:	f7ff f9cc 	bl	80005a8 <__aeabi_dmul>
 8001210:	f7ff fc7a 	bl	8000b08 <__aeabi_d2iz>
 8001214:	1f35      	subs	r5, r6, #4
 8001216:	f8c4 00c4 	str.w	r0, [r4, #196]	@ 0xc4
}
 800121a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800121c:	f3af 8000 	nop.w
 8001220:	9abcaf48 	.word	0x9abcaf48
 8001224:	3e7ad7f2 	.word	0x3e7ad7f2
 8001228:	d2f1a9fc 	.word	0xd2f1a9fc
 800122c:	3f50624d 	.word	0x3f50624d
 8001230:	88e368f1 	.word	0x88e368f1
 8001234:	3ee4f8b5 	.word	0x3ee4f8b5
 8001238:	20000324 	.word	0x20000324
 800123c:	20000320 	.word	0x20000320
 8001240:	20000320 	.word	0x20000320
 8001244:	00000000 	.word	0x00000000

08001248 <distancecalc>:
}




double distancecalc(double lat1, double lat2, double long1, double long2){
 8001248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800124c:	ed2d 8b04 	vpush	{d8-d9}
	double distance=0;
	distance=(double) 6371000*acosl(fmin(1,sinl(lat1*(M_PI/180))*sinl(lat2*(M_PI/180))+cosl(lat1*(M_PI/180))*cosl(lat2*(M_PI/180))*cosl((long2-long1)*(M_PI/180))));
 8001250:	a34a      	add	r3, pc, #296	@ (adr r3, 800137c <distancecalc+0x134>)
 8001252:	e9d3 2300 	ldrd	r2, r3, [r3]
double distancecalc(double lat1, double lat2, double long1, double long2){
 8001256:	b083      	sub	sp, #12
 8001258:	ec51 0b10 	vmov	r0, r1, d0
 800125c:	ec55 4b11 	vmov	r4, r5, d1
 8001260:	ec57 6b13 	vmov	r6, r7, d3
 8001264:	ec59 8b12 	vmov	r8, r9, d2
	distance=(double) 6371000*acosl(fmin(1,sinl(lat1*(M_PI/180))*sinl(lat2*(M_PI/180))+cosl(lat1*(M_PI/180))*cosl(lat2*(M_PI/180))*cosl((long2-long1)*(M_PI/180))));
 8001268:	f7ff f99e 	bl	80005a8 <__aeabi_dmul>
 800126c:	ec41 0b19 	vmov	d9, r0, r1
 8001270:	eeb0 0a49 	vmov.f32	s0, s18
 8001274:	eef0 0a69 	vmov.f32	s1, s19
 8001278:	f012 fc69 	bl	8013b4e <sinl>
 800127c:	a33f      	add	r3, pc, #252	@ (adr r3, 800137c <distancecalc+0x134>)
 800127e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001282:	4620      	mov	r0, r4
 8001284:	4629      	mov	r1, r5
 8001286:	ed8d 0b00 	vstr	d0, [sp]
 800128a:	f7ff f98d 	bl	80005a8 <__aeabi_dmul>
 800128e:	ec41 0b18 	vmov	d8, r0, r1
 8001292:	eeb0 0a48 	vmov.f32	s0, s16
 8001296:	eef0 0a68 	vmov.f32	s1, s17
 800129a:	f012 fc58 	bl	8013b4e <sinl>
 800129e:	eeb0 7a40 	vmov.f32	s14, s0
 80012a2:	eef0 7a60 	vmov.f32	s15, s1
 80012a6:	eeb0 0a49 	vmov.f32	s0, s18
 80012aa:	eef0 0a69 	vmov.f32	s1, s19
 80012ae:	ec5b ab17 	vmov	sl, fp, d7
 80012b2:	f012 fc4a 	bl	8013b4a <cosl>
 80012b6:	eeb0 7a40 	vmov.f32	s14, s0
 80012ba:	eef0 7a60 	vmov.f32	s15, s1
 80012be:	eeb0 0a48 	vmov.f32	s0, s16
 80012c2:	eef0 0a68 	vmov.f32	s1, s17
 80012c6:	ec55 4b17 	vmov	r4, r5, d7
 80012ca:	f012 fc3e 	bl	8013b4a <cosl>
 80012ce:	4642      	mov	r2, r8
 80012d0:	464b      	mov	r3, r9
 80012d2:	4630      	mov	r0, r6
 80012d4:	4639      	mov	r1, r7
 80012d6:	ec57 6b10 	vmov	r6, r7, d0
 80012da:	f7fe ffad 	bl	8000238 <__aeabi_dsub>
 80012de:	a327      	add	r3, pc, #156	@ (adr r3, 800137c <distancecalc+0x134>)
 80012e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012e4:	f7ff f960 	bl	80005a8 <__aeabi_dmul>
 80012e8:	ec41 0b10 	vmov	d0, r0, r1
 80012ec:	f012 fc2d 	bl	8013b4a <cosl>
 80012f0:	4620      	mov	r0, r4
 80012f2:	4629      	mov	r1, r5
 80012f4:	ec55 4b10 	vmov	r4, r5, d0
 80012f8:	4632      	mov	r2, r6
 80012fa:	463b      	mov	r3, r7
 80012fc:	f7ff f954 	bl	80005a8 <__aeabi_dmul>
 8001300:	4622      	mov	r2, r4
 8001302:	462b      	mov	r3, r5
 8001304:	f7ff f950 	bl	80005a8 <__aeabi_dmul>
 8001308:	4652      	mov	r2, sl
 800130a:	4604      	mov	r4, r0
 800130c:	460d      	mov	r5, r1
 800130e:	465b      	mov	r3, fp
 8001310:	e9dd 0100 	ldrd	r0, r1, [sp]
 8001314:	f7ff f948 	bl	80005a8 <__aeabi_dmul>
 8001318:	4602      	mov	r2, r0
 800131a:	460b      	mov	r3, r1
 800131c:	4620      	mov	r0, r4
 800131e:	4629      	mov	r1, r5
 8001320:	f7fe ff8c 	bl	800023c <__adddf3>
 8001324:	4602      	mov	r2, r0
 8001326:	460b      	mov	r3, r1
 8001328:	ec43 2b18 	vmov	d8, r2, r3
 800132c:	4b12      	ldr	r3, [pc, #72]	@ (8001378 <distancecalc+0x130>)
 800132e:	2200      	movs	r2, #0
 8001330:	f7ff fbb6 	bl	8000aa0 <__aeabi_dcmple>
 8001334:	b908      	cbnz	r0, 800133a <distancecalc+0xf2>
 8001336:	ed9f 8b0c 	vldr	d8, [pc, #48]	@ 8001368 <distancecalc+0x120>
 800133a:	eeb0 0a48 	vmov.f32	s0, s16
 800133e:	eef0 0a68 	vmov.f32	s1, s17
 8001342:	f012 fc06 	bl	8013b52 <acosl>
 8001346:	a30a      	add	r3, pc, #40	@ (adr r3, 8001370 <distancecalc+0x128>)
 8001348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800134c:	ec51 0b10 	vmov	r0, r1, d0
 8001350:	f7ff f92a 	bl	80005a8 <__aeabi_dmul>

	return distance;
}
 8001354:	ec41 0b10 	vmov	d0, r0, r1
 8001358:	b003      	add	sp, #12
 800135a:	ecbd 8b04 	vpop	{d8-d9}
 800135e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001362:	bf00      	nop
 8001364:	f3af 8000 	nop.w
 8001368:	00000000 	.word	0x00000000
 800136c:	3ff00000 	.word	0x3ff00000
 8001370:	00000000 	.word	0x00000000
 8001374:	41584dae 	.word	0x41584dae
 8001378:	3ff00000 	.word	0x3ff00000
 800137c:	a2529d39 	.word	0xa2529d39
 8001380:	3f91df46 	.word	0x3f91df46

08001384 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8001384:	b500      	push	{lr}

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001386:	482d      	ldr	r0, [pc, #180]	@ (800143c <MX_ADC1_Init+0xb8>)
 8001388:	492d      	ldr	r1, [pc, #180]	@ (8001440 <MX_ADC1_Init+0xbc>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800138a:	2201      	movs	r2, #1
{
 800138c:	b087      	sub	sp, #28
  ADC_ChannelConfTypeDef sConfig = {0};
 800138e:	2300      	movs	r3, #0
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8001390:	6102      	str	r2, [r0, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8001392:	f44f 7280 	mov.w	r2, #256	@ 0x100
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8001396:	e9c0 1300 	strd	r1, r3, [r0]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 800139a:	8302      	strh	r2, [r0, #24]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800139c:	2104      	movs	r1, #4
  hadc1.Init.ContinuousConvMode = ENABLE;
  hadc1.Init.NbrOfConversion = 3;
  hadc1.Init.DiscontinuousConvMode = DISABLE;
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;
 800139e:	f44f 62d8 	mov.w	r2, #1728	@ 0x6c0
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80013a2:	6141      	str	r1, [r0, #20]
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T2_TRGO;
 80013a4:	6282      	str	r2, [r0, #40]	@ 0x28
  hadc1.Init.NbrOfConversion = 3;
 80013a6:	2103      	movs	r1, #3
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013a8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  ADC_ChannelConfTypeDef sConfig = {0};
 80013ac:	e9cd 3300 	strd	r3, r3, [sp]
 80013b0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80013b4:	e9cd 3304 	strd	r3, r3, [sp, #16]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80013b8:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hadc1.Init.NbrOfConversion = 3;
 80013bc:	61c1      	str	r1, [r0, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80013be:	f880 3020 	strb.w	r3, [r0, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 80013c2:	62c2      	str	r2, [r0, #44]	@ 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80013c4:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80013c8:	6343      	str	r3, [r0, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 80013ca:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80013ce:	f004 f8bb 	bl	8005548 <HAL_ADC_Init>
 80013d2:	bb28      	cbnz	r0, 8001420 <MX_ADC1_Init+0x9c>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 80013d4:	4a1b      	ldr	r2, [pc, #108]	@ (8001444 <MX_ADC1_Init+0xc0>)
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80013d6:	2306      	movs	r3, #6
  sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 80013d8:	2007      	movs	r0, #7
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80013da:	217f      	movs	r1, #127	@ 0x7f
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80013dc:	e9cd 2300 	strd	r2, r3, [sp]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80013e0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80013e4:	2204      	movs	r2, #4
  sConfig.Offset = 0;
 80013e6:	2300      	movs	r3, #0
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013e8:	4814      	ldr	r0, [pc, #80]	@ (800143c <MX_ADC1_Init+0xb8>)
 80013ea:	4669      	mov	r1, sp
  sConfig.Offset = 0;
 80013ec:	e9cd 2304 	strd	r2, r3, [sp, #16]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013f0:	f004 f9ce 	bl	8005790 <HAL_ADC_ConfigChannel>
 80013f4:	b9f8      	cbnz	r0, 8001436 <MX_ADC1_Init+0xb2>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 80013f6:	4a14      	ldr	r2, [pc, #80]	@ (8001448 <MX_ADC1_Init+0xc4>)
  sConfig.Rank = ADC_REGULAR_RANK_2;
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013f8:	4810      	ldr	r0, [pc, #64]	@ (800143c <MX_ADC1_Init+0xb8>)
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80013fa:	230c      	movs	r3, #12
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80013fc:	4669      	mov	r1, sp
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80013fe:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001402:	f004 f9c5 	bl	8005790 <HAL_ADC_ConfigChannel>
 8001406:	b998      	cbnz	r0, 8001430 <MX_ADC1_Init+0xac>
    Error_Handler();
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8001408:	4a10      	ldr	r2, [pc, #64]	@ (800144c <MX_ADC1_Init+0xc8>)
  sConfig.Rank = ADC_REGULAR_RANK_3;
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800140a:	480c      	ldr	r0, [pc, #48]	@ (800143c <MX_ADC1_Init+0xb8>)
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800140c:	2312      	movs	r3, #18
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800140e:	4669      	mov	r1, sp
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8001410:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001414:	f004 f9bc 	bl	8005790 <HAL_ADC_ConfigChannel>
 8001418:	b928      	cbnz	r0, 8001426 <MX_ADC1_Init+0xa2>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800141a:	b007      	add	sp, #28
 800141c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001420:	f000 ff20 	bl	8002264 <Error_Handler>
 8001424:	e7d6      	b.n	80013d4 <MX_ADC1_Init+0x50>
    Error_Handler();
 8001426:	f000 ff1d 	bl	8002264 <Error_Handler>
}
 800142a:	b007      	add	sp, #28
 800142c:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8001430:	f000 ff18 	bl	8002264 <Error_Handler>
 8001434:	e7e8      	b.n	8001408 <MX_ADC1_Init+0x84>
    Error_Handler();
 8001436:	f000 ff15 	bl	8002264 <Error_Handler>
 800143a:	e7dc      	b.n	80013f6 <MX_ADC1_Init+0x72>
 800143c:	20000388 	.word	0x20000388
 8001440:	50040000 	.word	0x50040000
 8001444:	80000001 	.word	0x80000001
 8001448:	c7520000 	.word	0xc7520000
 800144c:	25b00200 	.word	0x25b00200

08001450 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001450:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(adcHandle->Instance==ADC1)
 8001452:	4b24      	ldr	r3, [pc, #144]	@ (80014e4 <HAL_ADC_MspInit+0x94>)
 8001454:	6802      	ldr	r2, [r0, #0]
{
 8001456:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001458:	2400      	movs	r4, #0
  if(adcHandle->Instance==ADC1)
 800145a:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800145c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8001460:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001464:	9406      	str	r4, [sp, #24]
  if(adcHandle->Instance==ADC1)
 8001466:	d001      	beq.n	800146c <HAL_ADC_MspInit+0x1c>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8001468:	b008      	add	sp, #32
 800146a:	bd70      	pop	{r4, r5, r6, pc}
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 800146c:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001470:	4605      	mov	r5, r0
 8001472:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
    hdma_adc1.Instance = DMA1_Channel1;
 8001474:	4e1c      	ldr	r6, [pc, #112]	@ (80014e8 <HAL_ADC_MspInit+0x98>)
 8001476:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800147a:	64da      	str	r2, [r3, #76]	@ 0x4c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800147c:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800147e:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 8001482:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 8001484:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001486:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8001488:	f042 0201 	orr.w	r2, r2, #1
 800148c:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800148e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001490:	f003 0301 	and.w	r3, r3, #1
 8001494:	9300      	str	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001496:	2210      	movs	r2, #16
 8001498:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800149a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800149e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80014a0:	e9cd 2302 	strd	r2, r3, [sp, #8]
  (void)tmpreg;
 80014a4:	9b00      	ldr	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014a6:	f004 fe65 	bl	8006174 <HAL_GPIO_Init>
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 80014aa:	4a10      	ldr	r2, [pc, #64]	@ (80014ec <HAL_ADC_MspInit+0x9c>)
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 80014ac:	6234      	str	r4, [r6, #32]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 80014ae:	2305      	movs	r3, #5
 80014b0:	e9c6 2300 	strd	r2, r3, [r6]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 80014b4:	2280      	movs	r2, #128	@ 0x80
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80014b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80014ba:	e9c6 2304 	strd	r2, r3, [r6, #16]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80014be:	4630      	mov	r0, r6
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80014c0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80014c4:	2320      	movs	r3, #32
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 80014c6:	e9c6 4402 	strd	r4, r4, [r6, #8]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80014ca:	e9c6 2306 	strd	r2, r3, [r6, #24]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80014ce:	f004 fca9 	bl	8005e24 <HAL_DMA_Init>
 80014d2:	b918      	cbnz	r0, 80014dc <HAL_ADC_MspInit+0x8c>
    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 80014d4:	64ee      	str	r6, [r5, #76]	@ 0x4c
 80014d6:	62b5      	str	r5, [r6, #40]	@ 0x28
}
 80014d8:	b008      	add	sp, #32
 80014da:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 80014dc:	f000 fec2 	bl	8002264 <Error_Handler>
 80014e0:	e7f8      	b.n	80014d4 <HAL_ADC_MspInit+0x84>
 80014e2:	bf00      	nop
 80014e4:	50040000 	.word	0x50040000
 80014e8:	20000328 	.word	0x20000328
 80014ec:	40020008 	.word	0x40020008

080014f0 <HAL_ADC_ConvCpltCallback>:
  /* USER CODE END ADC1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 80014f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	if(hadc->Instance==ADC1){
 80014f4:	6802      	ldr	r2, [r0, #0]
 80014f6:	4b3e      	ldr	r3, [pc, #248]	@ (80015f0 <HAL_ADC_ConvCpltCallback+0x100>)
 80014f8:	429a      	cmp	r2, r3
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 80014fa:	ed2d 8b02 	vpush	{d8}
	if(hadc->Instance==ADC1){
 80014fe:	d008      	beq.n	8001512 <HAL_ADC_ConvCpltCallback+0x22>
	}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);



}
 8001500:	ecbd 8b02 	vpop	{d8}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 8001504:	493b      	ldr	r1, [pc, #236]	@ (80015f4 <HAL_ADC_ConvCpltCallback+0x104>)
 8001506:	483c      	ldr	r0, [pc, #240]	@ (80015f8 <HAL_ADC_ConvCpltCallback+0x108>)
}
 8001508:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 800150c:	2203      	movs	r2, #3
 800150e:	f004 bbd9 	b.w	8005cc4 <HAL_ADC_Start_DMA>
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001512:	4e38      	ldr	r6, [pc, #224]	@ (80015f4 <HAL_ADC_ConvCpltCallback+0x104>)
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001514:	4f39      	ldr	r7, [pc, #228]	@ (80015fc <HAL_ADC_ConvCpltCallback+0x10c>)
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001516:	8830      	ldrh	r0, [r6, #0]
 8001518:	f7fe ffdc 	bl	80004d4 <__aeabi_i2d>
 800151c:	4602      	mov	r2, r0
 800151e:	460b      	mov	r3, r1
 8001520:	a12d      	add	r1, pc, #180	@ (adr r1, 80015d8 <HAL_ADC_ConvCpltCallback+0xe8>)
 8001522:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001526:	f7ff f969 	bl	80007fc <__aeabi_ddiv>
 800152a:	f7ff fb35 	bl	8000b98 <__aeabi_d2f>
 800152e:	4a34      	ldr	r2, [pc, #208]	@ (8001600 <HAL_ADC_ConvCpltCallback+0x110>)
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001530:	4b34      	ldr	r3, [pc, #208]	@ (8001604 <HAL_ADC_ConvCpltCallback+0x114>)
		vrefint=(float) ((4095.0*1.212)/rawdata[0]);
 8001532:	6010      	str	r0, [r2, #0]
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 8001534:	ed93 8a00 	vldr	s16, [r3]
 8001538:	f7fe ffde 	bl	80004f8 <__aeabi_f2d>
 800153c:	4604      	mov	r4, r0
 800153e:	8870      	ldrh	r0, [r6, #2]
 8001540:	460d      	mov	r5, r1
 8001542:	f7fe ffc7 	bl	80004d4 <__aeabi_i2d>
 8001546:	a326      	add	r3, pc, #152	@ (adr r3, 80015e0 <HAL_ADC_ConvCpltCallback+0xf0>)
 8001548:	e9d3 2300 	ldrd	r2, r3, [r3]
 800154c:	f7ff f82c 	bl	80005a8 <__aeabi_dmul>
 8001550:	4622      	mov	r2, r4
 8001552:	462b      	mov	r3, r5
 8001554:	f7ff f828 	bl	80005a8 <__aeabi_dmul>
 8001558:	4680      	mov	r8, r0
 800155a:	ee18 0a10 	vmov	r0, s16
 800155e:	4689      	mov	r9, r1
 8001560:	f7fe ffca 	bl	80004f8 <__aeabi_f2d>
 8001564:	4602      	mov	r2, r0
 8001566:	460b      	mov	r3, r1
 8001568:	4640      	mov	r0, r8
 800156a:	4649      	mov	r1, r9
 800156c:	f7fe fe64 	bl	8000238 <__aeabi_dsub>
 8001570:	4b25      	ldr	r3, [pc, #148]	@ (8001608 <HAL_ADC_ConvCpltCallback+0x118>)
 8001572:	edd3 7a00 	vldr	s15, [r3]
 8001576:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800157a:	4680      	mov	r8, r0
 800157c:	ee17 0a90 	vmov	r0, s15
 8001580:	4689      	mov	r9, r1
 8001582:	f7fe ffb9 	bl	80004f8 <__aeabi_f2d>
 8001586:	4602      	mov	r2, r0
 8001588:	460b      	mov	r3, r1
 800158a:	2000      	movs	r0, #0
 800158c:	491f      	ldr	r1, [pc, #124]	@ (800160c <HAL_ADC_ConvCpltCallback+0x11c>)
 800158e:	f7ff f935 	bl	80007fc <__aeabi_ddiv>
 8001592:	4602      	mov	r2, r0
 8001594:	460b      	mov	r3, r1
 8001596:	4640      	mov	r0, r8
 8001598:	4649      	mov	r1, r9
 800159a:	f7ff f805 	bl	80005a8 <__aeabi_dmul>
 800159e:	f7ff fafb 	bl	8000b98 <__aeabi_d2f>
 80015a2:	ee07 0a90 	vmov	s15, r0
 80015a6:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 80015aa:	ee77 7a87 	vadd.f32	s15, s15, s14
		vbat=(float) 2*(rawdata[2]/4095.0)*vrefint;
 80015ae:	88b0      	ldrh	r0, [r6, #4]
		temp=(float) (((100.0)/(tscal2-tscal1))*(rawdata[1]*(vrefint/3.0)-tscal1))+30.0;
 80015b0:	edc7 7a00 	vstr	s15, [r7]
		vbat=(float) 2*(rawdata[2]/4095.0)*vrefint;
 80015b4:	f7fe ff8e 	bl	80004d4 <__aeabi_i2d>
 80015b8:	a30b      	add	r3, pc, #44	@ (adr r3, 80015e8 <HAL_ADC_ConvCpltCallback+0xf8>)
 80015ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015be:	f7fe fff3 	bl	80005a8 <__aeabi_dmul>
 80015c2:	4622      	mov	r2, r4
 80015c4:	462b      	mov	r3, r5
 80015c6:	f7fe ffef 	bl	80005a8 <__aeabi_dmul>
 80015ca:	f7ff fae5 	bl	8000b98 <__aeabi_d2f>
 80015ce:	4e10      	ldr	r6, [pc, #64]	@ (8001610 <HAL_ADC_ConvCpltCallback+0x120>)
 80015d0:	6030      	str	r0, [r6, #0]
 80015d2:	e795      	b.n	8001500 <HAL_ADC_ConvCpltCallback+0x10>
 80015d4:	f3af 8000 	nop.w
 80015d8:	d70a3d70 	.word	0xd70a3d70
 80015dc:	40b36323 	.word	0x40b36323
 80015e0:	55555555 	.word	0x55555555
 80015e4:	3fd55555 	.word	0x3fd55555
 80015e8:	10010010 	.word	0x10010010
 80015ec:	3f400100 	.word	0x3f400100
 80015f0:	50040000 	.word	0x50040000
 80015f4:	20000fcc 	.word	0x20000fcc
 80015f8:	20000388 	.word	0x20000388
 80015fc:	20000fc8 	.word	0x20000fc8
 8001600:	20000fc4 	.word	0x20000fc4
 8001604:	20000008 	.word	0x20000008
 8001608:	2000000c 	.word	0x2000000c
 800160c:	40590000 	.word	0x40590000
 8001610:	20000fc0 	.word	0x20000fc0

08001614 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8001614:	b508      	push	{r3, lr}
  /* init code for USB_Device */
  MX_USB_Device_Init();
 8001616:	f00d fab5 	bl	800eb84 <MX_USB_Device_Init>
  /* USER CODE BEGIN StartDefaultTask */
  /* Infinite loop */
  for(;;)
  {
	statemachine();
 800161a:	f001 ffa9 	bl	8003570 <statemachine>
	ssd1306_UpdateScreen();
 800161e:	f001 f9cf 	bl	80029c0 <ssd1306_UpdateScreen>
    osDelay(50);
 8001622:	2032      	movs	r0, #50	@ 0x32
 8001624:	f00b fe56 	bl	800d2d4 <osDelay>
  for(;;)
 8001628:	e7f7      	b.n	800161a <StartDefaultTask+0x6>
 800162a:	bf00      	nop

0800162c <StartTask02>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void const * argument)
{
 800162c:	4c09      	ldr	r4, [pc, #36]	@ (8001654 <StartTask02+0x28>)
  {


	  if(received_flag==1){

	  		  GNSS_ParsePVTData(&GNSSData);
 800162e:	4e0a      	ldr	r6, [pc, #40]	@ (8001658 <StartTask02+0x2c>)
	  		  received_flag=0;


	  	  }
	HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 8001630:	4d0a      	ldr	r5, [pc, #40]	@ (800165c <StartTask02+0x30>)
{
 8001632:	b580      	push	{r7, lr}
	  		  received_flag=0;
 8001634:	2700      	movs	r7, #0
	  if(received_flag==1){
 8001636:	6823      	ldr	r3, [r4, #0]
 8001638:	2b01      	cmp	r3, #1
	  		  GNSS_ParsePVTData(&GNSSData);
 800163a:	4630      	mov	r0, r6
	  if(received_flag==1){
 800163c:	d102      	bne.n	8001644 <StartTask02+0x18>
	  		  GNSS_ParsePVTData(&GNSSData);
 800163e:	f7ff fd17 	bl	8001070 <GNSS_ParsePVTData>
	  		  received_flag=0;
 8001642:	6027      	str	r7, [r4, #0]
	HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 8001644:	4628      	mov	r0, r5
 8001646:	2101      	movs	r1, #1
 8001648:	f004 ff3c 	bl	80064c4 <HAL_GPIO_TogglePin>
    osDelay(100);
 800164c:	2064      	movs	r0, #100	@ 0x64
 800164e:	f00b fe41 	bl	800d2d4 <osDelay>
	  if(received_flag==1){
 8001652:	e7f0      	b.n	8001636 <StartTask02+0xa>
 8001654:	2000050c 	.word	0x2000050c
 8001658:	20000510 	.word	0x20000510
 800165c:	48000400 	.word	0x48000400

08001660 <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void const * argument)
{
 8001660:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001664:	4c42      	ldr	r4, [pc, #264]	@ (8001770 <StartTask03+0x110>)
 8001666:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 80017a0 <StartTask03+0x140>
 800166a:	f8df b138 	ldr.w	fp, [pc, #312]	@ 80017a4 <StartTask03+0x144>
 800166e:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 80017a8 <StartTask03+0x148>
 8001672:	4f40      	ldr	r7, [pc, #256]	@ (8001774 <StartTask03+0x114>)
 8001674:	4e40      	ldr	r6, [pc, #256]	@ (8001778 <StartTask03+0x118>)
							  }


								bmp581_read_precise_normal(&bmp581);
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 8001676:	4d41      	ldr	r5, [pc, #260]	@ (800177c <StartTask03+0x11c>)
{
 8001678:	b0b1      	sub	sp, #196	@ 0xc4
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 800167a:	4841      	ldr	r0, [pc, #260]	@ (8001780 <StartTask03+0x120>)
 800167c:	2102      	movs	r1, #2
 800167e:	f004 ff21 	bl	80064c4 <HAL_GPIO_TogglePin>
	  if(GNSSData.fgSpeed>=vitmax){
 8001682:	edd4 7a30 	vldr	s15, [r4, #192]	@ 0xc0
 8001686:	ed99 7a00 	vldr	s14, [r9]
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 800168a:	f8db 2000 	ldr.w	r2, [fp]
	  if(GNSSData.fgSpeed>=vitmax){
 800168e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 8001696:	f246 33fd 	movw	r3, #25597	@ 0x63fd
							  									 vitmax=GNSSData.fgSpeed;
 800169a:	bfa8      	it	ge
 800169c:	edc9 7a00 	vstrge	s15, [r9]
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 80016a0:	429a      	cmp	r2, r3
								  osThreadSuspend(NULL);
 80016a2:	f04f 0000 	mov.w	r0, #0
							  if(pagenumber+1>=MAX_WRITE_PAGE){
 80016a6:	dd04      	ble.n	80016b2 <StartTask03+0x52>
								  osThreadSuspend(NULL);
 80016a8:	f00b fe1c 	bl	800d2e4 <osThreadSuspend>
								  balisestate=2;
 80016ac:	4a35      	ldr	r2, [pc, #212]	@ (8001784 <StartTask03+0x124>)
 80016ae:	2302      	movs	r3, #2
 80016b0:	7013      	strb	r3, [r2, #0]
								bmp581_read_precise_normal(&bmp581);
 80016b2:	4835      	ldr	r0, [pc, #212]	@ (8001788 <StartTask03+0x128>)
 80016b4:	f000 f99c 	bl	80019f0 <bmp581_read_precise_normal>
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
 80016b8:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 80016bc:	f7fe ff1c 	bl	80004f8 <__aeabi_f2d>
 80016c0:	ec41 0b18 	vmov	d8, r0, r1
 80016c4:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 80016c8:	f7fe ff16 	bl	80004f8 <__aeabi_f2d>
 80016cc:	eeb0 3a48 	vmov.f32	s6, s16
 80016d0:	eef0 3a68 	vmov.f32	s7, s17
 80016d4:	ed98 ab00 	vldr	d10, [r8]
 80016d8:	ec41 0b11 	vmov	d1, r0, r1
 80016dc:	eeb0 2a4a 	vmov.f32	s4, s20
 80016e0:	eef0 2a6a 	vmov.f32	s5, s21
 80016e4:	ed97 0b00 	vldr	d0, [r7]
 80016e8:	f7ff fdae 	bl	8001248 <distancecalc>
 80016ec:	e9d6 0100 	ldrd	r0, r1, [r6]
 80016f0:	ec53 2b10 	vmov	r2, r3, d0
 80016f4:	f7fe fda2 	bl	800023c <__adddf3>
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 80016f8:	4b24      	ldr	r3, [pc, #144]	@ (800178c <StartTask03+0x12c>)
 80016fa:	ed94 9a2b 	vldr	s18, [r4, #172]	@ 0xac
 80016fe:	ed93 ab00 	vldr	d10, [r3]
 8001702:	4b23      	ldr	r3, [pc, #140]	@ (8001790 <StartTask03+0x130>)
 8001704:	edd3 8a00 	vldr	s17, [r3]
 8001708:	4b22      	ldr	r3, [pc, #136]	@ (8001794 <StartTask03+0x134>)
 800170a:	ed93 8a00 	vldr	s16, [r3]
 800170e:	f894 3078 	ldrb.w	r3, [r4, #120]	@ 0x78
 8001712:	932f      	str	r3, [sp, #188]	@ 0xbc
								distanceparcouru=distanceparcouru + distancecalc(oldlat,GNSSData.fLat,oldlong, GNSSData.fLon);
 8001714:	e9c6 0100 	strd	r0, r1, [r6]
								flashbufferlen=csvframe((uint8_t *)flashwrite,temp,vbat,GNSSData,GNSSData.numSV,GNSSData.fhACC,bmpalt);
 8001718:	22bc      	movs	r2, #188	@ 0xbc
 800171a:	491f      	ldr	r1, [pc, #124]	@ (8001798 <StartTask03+0x138>)
 800171c:	4668      	mov	r0, sp
 800171e:	f00e fdea 	bl	80102f6 <memcpy>
 8001722:	eeb0 2a4a 	vmov.f32	s4, s20
 8001726:	eef0 2a6a 	vmov.f32	s5, s21
 800172a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800172e:	eeb0 1a49 	vmov.f32	s2, s18
 8001732:	eef0 0a68 	vmov.f32	s1, s17
 8001736:	eeb0 0a48 	vmov.f32	s0, s16
 800173a:	4628      	mov	r0, r5
 800173c:	f000 fef4 	bl	8002528 <csvframe>
 8001740:	4b16      	ldr	r3, [pc, #88]	@ (800179c <StartTask03+0x13c>)
 8001742:	4682      	mov	sl, r0
 8001744:	6018      	str	r0, [r3, #0]
								  oldlat=GNSSData.fLat;
 8001746:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800174a:	f7fe fed5 	bl	80004f8 <__aeabi_f2d>
 800174e:	e9c7 0100 	strd	r0, r1, [r7]
								  oldlong=GNSSData.fLon;
 8001752:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
 8001756:	f7fe fecf 	bl	80004f8 <__aeabi_f2d>
 800175a:	e9c8 0100 	strd	r0, r1, [r8]
								  writebuffertoflash((uint8_t*)flashwrite,flashbufferlen);
 800175e:	4628      	mov	r0, r5
 8001760:	4651      	mov	r1, sl
 8001762:	f000 ffc3 	bl	80026ec <writebuffertoflash>


    osDelay(200);
 8001766:	20c8      	movs	r0, #200	@ 0xc8
 8001768:	f00b fdb4 	bl	800d2d4 <osDelay>
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 800176c:	e785      	b.n	800167a <StartTask03+0x1a>
 800176e:	bf00      	nop
 8001770:	20000510 	.word	0x20000510
 8001774:	20000608 	.word	0x20000608
 8001778:	20000610 	.word	0x20000610
 800177c:	20000ec0 	.word	0x20000ec0
 8001780:	48000400 	.word	0x48000400
 8001784:	2000106b 	.word	0x2000106b
 8001788:	200005d8 	.word	0x200005d8
 800178c:	20000408 	.word	0x20000408
 8001790:	20000fc0 	.word	0x20000fc0
 8001794:	20000fc8 	.word	0x20000fc8
 8001798:	2000051c 	.word	0x2000051c
 800179c:	20000624 	.word	0x20000624
 80017a0:	2000063c 	.word	0x2000063c
 80017a4:	200006b8 	.word	0x200006b8
 80017a8:	20000600 	.word	0x20000600

080017ac <StartTask04>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask04 */
void StartTask04(void const * argument)
{
 80017ac:	b508      	push	{r3, lr}
  for(;;)
  {

	  usbtransmit();
	  ssd1306_UpdateScreen();
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 80017ae:	4c06      	ldr	r4, [pc, #24]	@ (80017c8 <StartTask04+0x1c>)
	  usbtransmit();
 80017b0:	f003 fc48 	bl	8005044 <usbtransmit>
	  ssd1306_UpdateScreen();
 80017b4:	f001 f904 	bl	80029c0 <ssd1306_UpdateScreen>
	  HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1);
 80017b8:	4620      	mov	r0, r4
 80017ba:	2102      	movs	r1, #2
 80017bc:	f004 fe82 	bl	80064c4 <HAL_GPIO_TogglePin>
	  osDelay(100);
 80017c0:	2064      	movs	r0, #100	@ 0x64
 80017c2:	f00b fd87 	bl	800d2d4 <osDelay>
  for(;;)
 80017c6:	e7f3      	b.n	80017b0 <StartTask04+0x4>
 80017c8:	48000400 	.word	0x48000400

080017cc <StartTask05>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask05 */
void StartTask05(void const * argument)
{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	4c17      	ldr	r4, [pc, #92]	@ (800182c <StartTask05+0x60>)
 80017d0:	f8df 9068 	ldr.w	r9, [pc, #104]	@ 800183c <StartTask05+0x70>
 80017d4:	f8df 8068 	ldr.w	r8, [pc, #104]	@ 8001840 <StartTask05+0x74>
  /* Infinite loop */
  for(;;)
  {

	  if(GNSSData.fixType>=3){
		  bmp581_read_precise_normal(&bmp581);
 80017d8:	4d15      	ldr	r5, [pc, #84]	@ (8001830 <StartTask05+0x64>)
		  P0 =(double) bmppress / powf((1 - (GNSSData.fhMSL / 44330.0f)), 5.255f);
 80017da:	eddf 8a16 	vldr	s17, [pc, #88]	@ 8001834 <StartTask05+0x68>
 80017de:	ed9f 8a16 	vldr	s16, [pc, #88]	@ 8001838 <StartTask05+0x6c>
	  if(GNSSData.fixType>=3){
 80017e2:	f894 3077 	ldrb.w	r3, [r4, #119]	@ 0x77
 80017e6:	2b02      	cmp	r3, #2
		  bmp581_read_precise_normal(&bmp581);
 80017e8:	4628      	mov	r0, r5
	  if(GNSSData.fixType>=3){
 80017ea:	d919      	bls.n	8001820 <StartTask05+0x54>
		  bmp581_read_precise_normal(&bmp581);
 80017ec:	f000 f900 	bl	80019f0 <bmp581_read_precise_normal>
		  P0 =(double) bmppress / powf((1 - (GNSSData.fhMSL / 44330.0f)), 5.255f);
 80017f0:	edd4 7a29 	vldr	s15, [r4, #164]	@ 0xa4
 80017f4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80017f8:	eea7 0ae8 	vfms.f32	s0, s15, s17
 80017fc:	e9d9 6700 	ldrd	r6, r7, [r9]
 8001800:	eef0 0a48 	vmov.f32	s1, s16
 8001804:	f012 f940 	bl	8013a88 <powf>
 8001808:	ee10 0a10 	vmov	r0, s0
 800180c:	f7fe fe74 	bl	80004f8 <__aeabi_f2d>
 8001810:	4602      	mov	r2, r0
 8001812:	460b      	mov	r3, r1
 8001814:	4630      	mov	r0, r6
 8001816:	4639      	mov	r1, r7
 8001818:	f7fe fff0 	bl	80007fc <__aeabi_ddiv>
 800181c:	e9c8 0100 	strd	r0, r1, [r8]

	  }
    osDelay(20000);
 8001820:	f644 6020 	movw	r0, #20000	@ 0x4e20
 8001824:	f00b fd56 	bl	800d2d4 <osDelay>
	  if(GNSSData.fixType>=3){
 8001828:	e7db      	b.n	80017e2 <StartTask05+0x16>
 800182a:	bf00      	nop
 800182c:	20000510 	.word	0x20000510
 8001830:	200005d8 	.word	0x200005d8
 8001834:	37bd3b20 	.word	0x37bd3b20
 8001838:	40a828f6 	.word	0x40a828f6
 800183c:	20000410 	.word	0x20000410
 8001840:	20000010 	.word	0x20000010

08001844 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 8001844:	b570      	push	{r4, r5, r6, lr}
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 8001846:	4c32      	ldr	r4, [pc, #200]	@ (8001910 <MX_FREERTOS_Init+0xcc>)
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 8001848:	4e32      	ldr	r6, [pc, #200]	@ (8001914 <MX_FREERTOS_Init+0xd0>)
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 800184a:	4d33      	ldr	r5, [pc, #204]	@ (8001918 <MX_FREERTOS_Init+0xd4>)
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 800184c:	46a6      	mov	lr, r4
 800184e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
void MX_FREERTOS_Init(void) {
 8001852:	b09a      	sub	sp, #104	@ 0x68
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 8001854:	f10d 0c04 	add.w	ip, sp, #4
 8001858:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800185c:	f8de 3000 	ldr.w	r3, [lr]
 8001860:	f8cc 3000 	str.w	r3, [ip]
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001864:	2100      	movs	r1, #0
 8001866:	a801      	add	r0, sp, #4
 8001868:	f00b fd0e 	bl	800d288 <osThreadCreate>
 800186c:	4b2b      	ldr	r3, [pc, #172]	@ (800191c <MX_FREERTOS_Init+0xd8>)
  osThreadDef(GNSSPARSE, StartTask02, osPriorityAboveNormal, 0, 256);
 800186e:	f104 0e14 	add.w	lr, r4, #20
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001872:	6018      	str	r0, [r3, #0]
  osThreadDef(GNSSPARSE, StartTask02, osPriorityAboveNormal, 0, 256);
 8001874:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8001878:	f10d 0c18 	add.w	ip, sp, #24
 800187c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001880:	f8de 3000 	ldr.w	r3, [lr]
 8001884:	f8cc 3000 	str.w	r3, [ip]
  GNSSPARSEHandle = osThreadCreate(osThread(GNSSPARSE), NULL);
 8001888:	2100      	movs	r1, #0
 800188a:	a806      	add	r0, sp, #24
 800188c:	f00b fcfc 	bl	800d288 <osThreadCreate>
 8001890:	4b23      	ldr	r3, [pc, #140]	@ (8001920 <MX_FREERTOS_Init+0xdc>)
  osThreadDef(BALISE, StartTask03, osPriorityRealtime, 0, 256);
 8001892:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
  GNSSPARSEHandle = osThreadCreate(osThread(GNSSPARSE), NULL);
 8001896:	6018      	str	r0, [r3, #0]
  osThreadDef(BALISE, StartTask03, osPriorityRealtime, 0, 256);
 8001898:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800189c:	f10d 0c2c 	add.w	ip, sp, #44	@ 0x2c
 80018a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80018a4:	f8de 3000 	ldr.w	r3, [lr]
 80018a8:	f8cc 3000 	str.w	r3, [ip]
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 80018ac:	2100      	movs	r1, #0
 80018ae:	a80b      	add	r0, sp, #44	@ 0x2c
 80018b0:	f00b fcea 	bl	800d288 <osThreadCreate>
  osThreadDef(USBTRANSMIT, StartTask04, osPriorityHigh, 0, 256);
 80018b4:	f104 0e3c 	add.w	lr, r4, #60	@ 0x3c
  BALISEHandle = osThreadCreate(osThread(BALISE), NULL);
 80018b8:	6030      	str	r0, [r6, #0]
  osThreadDef(USBTRANSMIT, StartTask04, osPriorityHigh, 0, 256);
 80018ba:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80018be:	f10d 0c40 	add.w	ip, sp, #64	@ 0x40
 80018c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80018c6:	f8de 3000 	ldr.w	r3, [lr]
 80018ca:	f8cc 3000 	str.w	r3, [ip]
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 80018ce:	2100      	movs	r1, #0
 80018d0:	a810      	add	r0, sp, #64	@ 0x40
 80018d2:	f00b fcd9 	bl	800d288 <osThreadCreate>
  osThreadDef(BAROCALIB, StartTask05, osPriorityBelowNormal, 0, 256);
 80018d6:	f104 0c50 	add.w	ip, r4, #80	@ 0x50
  USBTRANSMITHandle = osThreadCreate(osThread(USBTRANSMIT), NULL);
 80018da:	6028      	str	r0, [r5, #0]
  osThreadDef(BAROCALIB, StartTask05, osPriorityBelowNormal, 0, 256);
 80018dc:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80018e0:	ac15      	add	r4, sp, #84	@ 0x54
 80018e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80018e4:	f8dc 3000 	ldr.w	r3, [ip]
 80018e8:	6023      	str	r3, [r4, #0]
  BAROCALIBHandle = osThreadCreate(osThread(BAROCALIB), NULL);
 80018ea:	2100      	movs	r1, #0
 80018ec:	a815      	add	r0, sp, #84	@ 0x54
 80018ee:	f00b fccb 	bl	800d288 <osThreadCreate>
 80018f2:	4b0c      	ldr	r3, [pc, #48]	@ (8001924 <MX_FREERTOS_Init+0xe0>)
 80018f4:	4602      	mov	r2, r0
  osThreadSuspend(BALISEHandle);
 80018f6:	6830      	ldr	r0, [r6, #0]
  BAROCALIBHandle = osThreadCreate(osThread(BAROCALIB), NULL);
 80018f8:	601a      	str	r2, [r3, #0]
  osThreadSuspend(BALISEHandle);
 80018fa:	f00b fcf3 	bl	800d2e4 <osThreadSuspend>
  osThreadSuspend(USBTRANSMITHandle);
 80018fe:	6828      	ldr	r0, [r5, #0]
 8001900:	f00b fcf0 	bl	800d2e4 <osThreadSuspend>
  osThreadSetPriority(USBTRANSMITHandle, osPriorityRealtime);
 8001904:	6828      	ldr	r0, [r5, #0]
 8001906:	2103      	movs	r1, #3
 8001908:	f00b fcda 	bl	800d2c0 <osThreadSetPriority>
}
 800190c:	b01a      	add	sp, #104	@ 0x68
 800190e:	bd70      	pop	{r4, r5, r6, pc}
 8001910:	08015c18 	.word	0x08015c18
 8001914:	200003f4 	.word	0x200003f4
 8001918:	200003f0 	.word	0x200003f0
 800191c:	200003fc 	.word	0x200003fc
 8001920:	200003f8 	.word	0x200003f8
 8001924:	200003ec 	.word	0x200003ec

08001928 <bmp581_init_precise_normal>:
uint8_t odrcheck=0;
double P0=101325.0;

//Ox18 donc 11000 pour ODR donc 5hz en mode normal avec oversampling a 128 pour la pression et 8 pour la temperature

uint8_t bmp581_init_precise_normal(BMP_t * bmp581){
 8001928:	b570      	push	{r4, r5, r6, lr}
 800192a:	b086      	sub	sp, #24

//	uint8_t OSR_tmask = 0b01111111;
//	uint8_t ODR_tmask = 0b01100001;

	uint8_t OSR_tmask = 0b01111011;
 800192c:	217b      	movs	r1, #123	@ 0x7b
	uint8_t ODR_tmask = 0b01101001;
 800192e:	2269      	movs	r2, #105	@ 0x69
	uint8_t DSP_conf_mask = 0b00101011;
	uint8_t DSP_conf_mask2 = 0b00010010;
	int check=0;

	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001930:	2501      	movs	r5, #1
 8001932:	2664      	movs	r6, #100	@ 0x64
 8001934:	ab05      	add	r3, sp, #20
	uint8_t OSR_tmask = 0b01111011;
 8001936:	f88d 1014 	strb.w	r1, [sp, #20]
	uint8_t ODR_tmask = 0b01101001;
 800193a:	f88d 2015 	strb.w	r2, [sp, #21]
	uint8_t DSP_conf_mask = 0b00101011;
 800193e:	212b      	movs	r1, #43	@ 0x2b
	uint8_t DSP_conf_mask2 = 0b00010010;
 8001940:	2212      	movs	r2, #18
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001942:	9300      	str	r3, [sp, #0]
	uint8_t DSP_conf_mask = 0b00101011;
 8001944:	f88d 1016 	strb.w	r1, [sp, #22]
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 8001948:	462b      	mov	r3, r5
	uint8_t DSP_conf_mask2 = 0b00010010;
 800194a:	f88d 2017 	strb.w	r2, [sp, #23]
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 800194e:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001952:	2236      	movs	r2, #54	@ 0x36
 8001954:	218e      	movs	r1, #142	@ 0x8e
 8001956:	4823      	ldr	r0, [pc, #140]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
 8001958:	f005 f8f8 	bl	8006b4c <HAL_I2C_Mem_Write>
			check=1;
		}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800195c:	f10d 0315 	add.w	r3, sp, #21
 8001960:	9300      	str	r3, [sp, #0]
 8001962:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001966:	462b      	mov	r3, r5
 8001968:	2237      	movs	r2, #55	@ 0x37
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_OSR_CONFIG, 1, &OSR_tmask, 1, 100)!=HAL_OK){
 800196a:	4604      	mov	r4, r0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800196c:	218e      	movs	r1, #142	@ 0x8e
 800196e:	481d      	ldr	r0, [pc, #116]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
 8001970:	f005 f8ec 	bl	8006b4c <HAL_I2C_Mem_Write>
 8001974:	4304      	orrs	r4, r0
					check=1;
				}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 8001976:	f10d 0316 	add.w	r3, sp, #22
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 800197a:	b2e4      	uxtb	r4, r4
 800197c:	3c00      	subs	r4, #0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 800197e:	9300      	str	r3, [sp, #0]
 8001980:	e9cd 5601 	strd	r5, r6, [sp, #4]
 8001984:	462b      	mov	r3, r5
 8001986:	f04f 0230 	mov.w	r2, #48	@ 0x30
 800198a:	f04f 018e 	mov.w	r1, #142	@ 0x8e
 800198e:	4815      	ldr	r0, [pc, #84]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_ODR_CONFIG, 1, &ODR_tmask, 1, 100)!=HAL_OK){
 8001990:	bf18      	it	ne
 8001992:	2401      	movne	r4, #1
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask, 1, 100)!=HAL_OK){
 8001994:	f005 f8da 	bl	8006b4c <HAL_I2C_Mem_Write>
				check=1;
			}
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 8001998:	f10d 0317 	add.w	r3, sp, #23
				check=1;
 800199c:	2800      	cmp	r0, #0
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 800199e:	9300      	str	r3, [sp, #0]
 80019a0:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80019a4:	462b      	mov	r3, r5
 80019a6:	f04f 0230 	mov.w	r2, #48	@ 0x30
 80019aa:	f04f 018e 	mov.w	r1, #142	@ 0x8e
 80019ae:	480d      	ldr	r0, [pc, #52]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
				check=1;
 80019b0:	bf18      	it	ne
 80019b2:	462c      	movne	r4, r5
	if(HAL_I2C_Mem_Write(&hi2c1, BMP581_WRITE_ADDR, BMP581_DSP_CONFIG, 1, &DSP_conf_mask2, 1, 100)!=HAL_OK){
 80019b4:	f005 f8ca 	bl	8006b4c <HAL_I2C_Mem_Write>
					check=1;
				}
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019b8:	4b0b      	ldr	r3, [pc, #44]	@ (80019e8 <bmp581_init_precise_normal+0xc0>)
 80019ba:	9300      	str	r3, [sp, #0]
					check=1;
 80019bc:	2800      	cmp	r0, #0
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019be:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80019c2:	462b      	mov	r3, r5
 80019c4:	f04f 0238 	mov.w	r2, #56	@ 0x38
 80019c8:	f04f 018f 	mov.w	r1, #143	@ 0x8f
 80019cc:	4805      	ldr	r0, [pc, #20]	@ (80019e4 <bmp581_init_precise_normal+0xbc>)
					check=1;
 80019ce:	bf18      	it	ne
 80019d0:	462c      	movne	r4, r5
	if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_OSR_EFF, 1, &odrcheck, 1, 100)!=HAL_OK){
 80019d2:	f005 f9b7 	bl	8006d44 <HAL_I2C_Mem_Read>
 80019d6:	2800      	cmp	r0, #0
				}


	return check;

}
 80019d8:	bf0c      	ite	eq
 80019da:	4620      	moveq	r0, r4
 80019dc:	4628      	movne	r0, r5
 80019de:	b006      	add	sp, #24
 80019e0:	bd70      	pop	{r4, r5, r6, pc}
 80019e2:	bf00      	nop
 80019e4:	20000478 	.word	0x20000478
 80019e8:	20000400 	.word	0x20000400
 80019ec:	00000000 	.word	0x00000000

080019f0 <bmp581_read_precise_normal>:




uint8_t bmp581_read_precise_normal(BMP_t * bmp581){
 80019f0:	b570      	push	{r4, r5, r6, lr}
 80019f2:	b086      	sub	sp, #24
//			check=1;
//		}
//		if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_PRESS_DATA_MSB, 1, &recarray[5], 1, 100)!=HAL_OK){
//			check=1;
//		}
		if(HAL_I2C_Mem_Read(&hi2c1, BMP581_READ_ADDR, BMP581_TEMP_DATA_XLSB, 1, &recarray, 6, 100)!=HAL_OK){
 80019f4:	2164      	movs	r1, #100	@ 0x64
 80019f6:	2206      	movs	r2, #6
 80019f8:	ab04      	add	r3, sp, #16
 80019fa:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80019fe:	9300      	str	r3, [sp, #0]
 8001a00:	4829      	ldr	r0, [pc, #164]	@ (8001aa8 <bmp581_read_precise_normal+0xb8>)
 8001a02:	2301      	movs	r3, #1
 8001a04:	221d      	movs	r2, #29
 8001a06:	218f      	movs	r1, #143	@ 0x8f
 8001a08:	f005 f99c 	bl	8006d44 <HAL_I2C_Mem_Read>
 8001a0c:	2800      	cmp	r0, #0
 8001a0e:	d141      	bne.n	8001a94 <bmp581_read_precise_normal+0xa4>
				}


		if(check==0){

		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a10:	f89d 3011 	ldrb.w	r3, [sp, #17]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a14:	f89d 5014 	ldrb.w	r5, [sp, #20]
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a18:	f89d 1012 	ldrb.w	r1, [sp, #18]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a1c:	f89d 2015 	ldrb.w	r2, [sp, #21]
		bmptemp=(double)intbuffertemp/65536.0;
 8001a20:	4e22      	ldr	r6, [pc, #136]	@ (8001aac <bmp581_read_precise_normal+0xbc>)
 8001a22:	4604      	mov	r4, r0
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a24:	021b      	lsls	r3, r3, #8
 8001a26:	f89d 0010 	ldrb.w	r0, [sp, #16]
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a2a:	022d      	lsls	r5, r5, #8
		intbuffertemp=(recarray[2]<<16)|(recarray[1]<<8)|(recarray[0]);
 8001a2c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a30:	ea45 4502 	orr.w	r5, r5, r2, lsl #16
 8001a34:	f89d 2013 	ldrb.w	r2, [sp, #19]
		bmptemp=(double)intbuffertemp/65536.0;
 8001a38:	4318      	orrs	r0, r3
		intbufferpres=(recarray[5]<<16)|(recarray[4]<<8)|(recarray[3]);
 8001a3a:	4315      	orrs	r5, r2
		bmptemp=(double)intbuffertemp/65536.0;
 8001a3c:	f7fe fd4a 	bl	80004d4 <__aeabi_i2d>
 8001a40:	4b1b      	ldr	r3, [pc, #108]	@ (8001ab0 <bmp581_read_precise_normal+0xc0>)
 8001a42:	2200      	movs	r2, #0
 8001a44:	f7fe fdb0 	bl	80005a8 <__aeabi_dmul>
 8001a48:	4602      	mov	r2, r0
 8001a4a:	460b      	mov	r3, r1
 8001a4c:	e9c6 2300 	strd	r2, r3, [r6]
		bmppress=(double) intbufferpres/64.0;
 8001a50:	4628      	mov	r0, r5
 8001a52:	f7fe fd3f 	bl	80004d4 <__aeabi_i2d>
 8001a56:	4b17      	ldr	r3, [pc, #92]	@ (8001ab4 <bmp581_read_precise_normal+0xc4>)
		bmpalt=(double) ((8.314*298.15)/(9.80665*0.028964))*log(P0/(bmppress));
 8001a58:	4d17      	ldr	r5, [pc, #92]	@ (8001ab8 <bmp581_read_precise_normal+0xc8>)
		bmppress=(double) intbufferpres/64.0;
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	f7fe fda4 	bl	80005a8 <__aeabi_dmul>
 8001a60:	460b      	mov	r3, r1
 8001a62:	4916      	ldr	r1, [pc, #88]	@ (8001abc <bmp581_read_precise_normal+0xcc>)
 8001a64:	4602      	mov	r2, r0
 8001a66:	e9c1 2300 	strd	r2, r3, [r1]
		bmpalt=(double) ((8.314*298.15)/(9.80665*0.028964))*log(P0/(bmppress));
 8001a6a:	e9d5 0100 	ldrd	r0, r1, [r5]
 8001a6e:	f7fe fec5 	bl	80007fc <__aeabi_ddiv>
 8001a72:	ec41 0b10 	vmov	d0, r0, r1
 8001a76:	f011 ff1f 	bl	80138b8 <log>
 8001a7a:	a309      	add	r3, pc, #36	@ (adr r3, 8001aa0 <bmp581_read_precise_normal+0xb0>)
 8001a7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a80:	ec51 0b10 	vmov	r0, r1, d0
 8001a84:	f7fe fd90 	bl	80005a8 <__aeabi_dmul>
 8001a88:	4d0d      	ldr	r5, [pc, #52]	@ (8001ac0 <bmp581_read_precise_normal+0xd0>)
 8001a8a:	e9c5 0100 	strd	r0, r1, [r5]

		}

		return check;
}
 8001a8e:	4620      	mov	r0, r4
 8001a90:	b006      	add	sp, #24
 8001a92:	bd70      	pop	{r4, r5, r6, pc}
 8001a94:	2401      	movs	r4, #1
 8001a96:	4620      	mov	r0, r4
 8001a98:	b006      	add	sp, #24
 8001a9a:	bd70      	pop	{r4, r5, r6, pc}
 8001a9c:	f3af 8000 	nop.w
 8001aa0:	a7b85a1b 	.word	0xa7b85a1b
 8001aa4:	40c10b81 	.word	0x40c10b81
 8001aa8:	20000478 	.word	0x20000478
 8001aac:	20000418 	.word	0x20000418
 8001ab0:	3ef00000 	.word	0x3ef00000
 8001ab4:	3f900000 	.word	0x3f900000
 8001ab8:	20000010 	.word	0x20000010
 8001abc:	20000410 	.word	0x20000410
 8001ac0:	20000408 	.word	0x20000408

08001ac4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001ac4:	b510      	push	{r4, lr}
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001ac6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001aca:	b082      	sub	sp, #8
 8001acc:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8001ace:	f040 0004 	orr.w	r0, r0, #4
 8001ad2:	6498      	str	r0, [r3, #72]	@ 0x48
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001ad4:	6c9c      	ldr	r4, [r3, #72]	@ 0x48
 8001ad6:	f004 0404 	and.w	r4, r4, #4
 8001ada:	9401      	str	r4, [sp, #4]
  (void)tmpreg;
 8001adc:	9c01      	ldr	r4, [sp, #4]
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001ade:	6c9c      	ldr	r4, [r3, #72]	@ 0x48
 8001ae0:	f044 0401 	orr.w	r4, r4, #1
 8001ae4:	649c      	str	r4, [r3, #72]	@ 0x48
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001ae6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ae8:	f003 0301 	and.w	r3, r3, #1
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
  __HAL_RCC_DMA1_CLK_ENABLE();

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 5, 0);
 8001aec:	2200      	movs	r2, #0
 8001aee:	2105      	movs	r1, #5
 8001af0:	9300      	str	r3, [sp, #0]
 8001af2:	200b      	movs	r0, #11
  (void)tmpreg;
 8001af4:	9b00      	ldr	r3, [sp, #0]
 8001af6:	f004 f94b 	bl	8005d90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001afa:	200b      	movs	r0, #11
 8001afc:	f004 f984 	bl	8005e08 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 6, 0);
 8001b00:	2200      	movs	r2, #0
 8001b02:	2106      	movs	r1, #6
 8001b04:	200c      	movs	r0, #12
 8001b06:	f004 f943 	bl	8005d90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 8001b0a:	200c      	movs	r0, #12
 8001b0c:	f004 f97c 	bl	8005e08 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 5, 0);
 8001b10:	2200      	movs	r2, #0
 8001b12:	2105      	movs	r1, #5
 8001b14:	200d      	movs	r0, #13
 8001b16:	f004 f93b 	bl	8005d90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b1a:	200d      	movs	r0, #13

}
 8001b1c:	b002      	add	sp, #8
 8001b1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b22:	f004 b971 	b.w	8005e08 <HAL_NVIC_EnableIRQ>
 8001b26:	bf00      	nop

08001b28 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001b28:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2a:	2400      	movs	r4, #0
{
 8001b2c:	b08a      	sub	sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001b32:	e9cd 4406 	strd	r4, r4, [sp, #24]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b36:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001b3a:	9408      	str	r4, [sp, #32]
 8001b3c:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|SPI_CS_Pin, GPIO_PIN_RESET);
 8001b3e:	4e27      	ldr	r6, [pc, #156]	@ (8001bdc <MX_GPIO_Init+0xb4>)
 8001b40:	f041 0104 	orr.w	r1, r1, #4
 8001b44:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b46:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b48:	f001 0104 	and.w	r1, r1, #4
 8001b4c:	9103      	str	r1, [sp, #12]
  (void)tmpreg;
 8001b4e:	9903      	ldr	r1, [sp, #12]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b50:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b52:	f041 0102 	orr.w	r1, r1, #2
 8001b56:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b58:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b5a:	f001 0102 	and.w	r1, r1, #2
 8001b5e:	9102      	str	r1, [sp, #8]
  (void)tmpreg;
 8001b60:	9902      	ldr	r1, [sp, #8]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001b62:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8001b64:	f041 0101 	orr.w	r1, r1, #1
 8001b68:	64d9      	str	r1, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001b6a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b6c:	f003 0301 	and.w	r3, r3, #1
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 8001b70:	4622      	mov	r2, r4
 8001b72:	9301      	str	r3, [sp, #4]
 8001b74:	2101      	movs	r1, #1
 8001b76:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8001b7a:	9b01      	ldr	r3, [sp, #4]
 8001b7c:	f004 fc9c 	bl	80064b8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, LED0_Pin|LED1_Pin|SPI_CS_Pin, GPIO_PIN_RESET);
 8001b80:	4622      	mov	r2, r4
 8001b82:	4630      	mov	r0, r6
 8001b84:	2183      	movs	r1, #131	@ 0x83
 8001b86:	f004 fc97 	bl	80064b8 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC14 PC15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001b8a:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001b8e:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b92:	a904      	add	r1, sp, #16
 8001b94:	4812      	ldr	r0, [pc, #72]	@ (8001be0 <MX_GPIO_Init+0xb8>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b96:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001b98:	e9cd 2304 	strd	r2, r3, [sp, #16]

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001b9c:	2501      	movs	r5, #1
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b9e:	f004 fae9 	bl	8006174 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba2:	a904      	add	r1, sp, #16
 8001ba4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ba8:	e9cd 5504 	strd	r5, r5, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bac:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb0:	f004 fae0 	bl	8006174 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED0_Pin LED1_Pin SPI_CS_Pin */
  GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin|SPI_CS_Pin;
 8001bb4:	2383      	movs	r3, #131	@ 0x83
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb6:	a904      	add	r1, sp, #16
 8001bb8:	4630      	mov	r0, r6
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	e9cd 3504 	strd	r3, r5, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bbe:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc2:	f004 fad7 	bl	8006174 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001bc6:	4622      	mov	r2, r4
 8001bc8:	2105      	movs	r1, #5
 8001bca:	2028      	movs	r0, #40	@ 0x28
 8001bcc:	f004 f8e0 	bl	8005d90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001bd0:	2028      	movs	r0, #40	@ 0x28
 8001bd2:	f004 f919 	bl	8005e08 <HAL_NVIC_EnableIRQ>

}
 8001bd6:	b00a      	add	sp, #40	@ 0x28
 8001bd8:	bd70      	pop	{r4, r5, r6, pc}
 8001bda:	bf00      	nop
 8001bdc:	48000400 	.word	0x48000400
 8001be0:	48000800 	.word	0x48000800

08001be4 <MX_I2C1_Init>:
I2C_HandleTypeDef hi2c1;
I2C_HandleTypeDef hi2c3;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8001be4:	b510      	push	{r4, lr}
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001be6:	4818      	ldr	r0, [pc, #96]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001be8:	4c18      	ldr	r4, [pc, #96]	@ (8001c4c <MX_I2C1_Init+0x68>)
  hi2c1.Init.Timing = 0x10B17DB5;
 8001bea:	4919      	ldr	r1, [pc, #100]	@ (8001c50 <MX_I2C1_Init+0x6c>)
 8001bec:	2300      	movs	r3, #0
 8001bee:	2201      	movs	r2, #1
 8001bf0:	e9c0 4100 	strd	r4, r1, [r0]
 8001bf4:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8001bf8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001bfc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8001c00:	6203      	str	r3, [r0, #32]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001c02:	f004 ff49 	bl	8006a98 <HAL_I2C_Init>
 8001c06:	b950      	cbnz	r0, 8001c1e <MX_I2C1_Init+0x3a>
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c08:	480f      	ldr	r0, [pc, #60]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	f005 f998 	bl	8006f40 <HAL_I2CEx_ConfigAnalogFilter>
 8001c10:	b968      	cbnz	r0, 8001c2e <MX_I2C1_Init+0x4a>
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001c12:	480d      	ldr	r0, [pc, #52]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c14:	2100      	movs	r1, #0
 8001c16:	f005 f9bd 	bl	8006f94 <HAL_I2CEx_ConfigDigitalFilter>
 8001c1a:	b980      	cbnz	r0, 8001c3e <MX_I2C1_Init+0x5a>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001c1c:	bd10      	pop	{r4, pc}
    Error_Handler();
 8001c1e:	f000 fb21 	bl	8002264 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c22:	4809      	ldr	r0, [pc, #36]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c24:	2100      	movs	r1, #0
 8001c26:	f005 f98b 	bl	8006f40 <HAL_I2CEx_ConfigAnalogFilter>
 8001c2a:	2800      	cmp	r0, #0
 8001c2c:	d0f1      	beq.n	8001c12 <MX_I2C1_Init+0x2e>
    Error_Handler();
 8001c2e:	f000 fb19 	bl	8002264 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001c32:	4805      	ldr	r0, [pc, #20]	@ (8001c48 <MX_I2C1_Init+0x64>)
 8001c34:	2100      	movs	r1, #0
 8001c36:	f005 f9ad 	bl	8006f94 <HAL_I2CEx_ConfigDigitalFilter>
 8001c3a:	2800      	cmp	r0, #0
 8001c3c:	d0ee      	beq.n	8001c1c <MX_I2C1_Init+0x38>
}
 8001c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8001c42:	f000 bb0f 	b.w	8002264 <Error_Handler>
 8001c46:	bf00      	nop
 8001c48:	20000478 	.word	0x20000478
 8001c4c:	40005400 	.word	0x40005400
 8001c50:	10b17db5 	.word	0x10b17db5

08001c54 <MX_I2C3_Init>:
/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8001c54:	b510      	push	{r4, lr}
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8001c56:	481c      	ldr	r0, [pc, #112]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c58:	4c1c      	ldr	r4, [pc, #112]	@ (8001ccc <MX_I2C3_Init+0x78>)
  hi2c3.Init.Timing = 0x00910B1C;
 8001c5a:	491d      	ldr	r1, [pc, #116]	@ (8001cd0 <MX_I2C3_Init+0x7c>)
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	2201      	movs	r2, #1
 8001c60:	e9c0 4100 	strd	r4, r1, [r0]
 8001c64:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8001c68:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001c6c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8001c70:	6203      	str	r3, [r0, #32]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c3.Init.OwnAddress2 = 0;
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c72:	f004 ff11 	bl	8006a98 <HAL_I2C_Init>
 8001c76:	b978      	cbnz	r0, 8001c98 <MX_I2C3_Init+0x44>
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c78:	4813      	ldr	r0, [pc, #76]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c7a:	2100      	movs	r1, #0
 8001c7c:	f005 f960 	bl	8006f40 <HAL_I2CEx_ConfigAnalogFilter>
 8001c80:	b990      	cbnz	r0, 8001ca8 <MX_I2C3_Init+0x54>
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c82:	4811      	ldr	r0, [pc, #68]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c84:	2100      	movs	r1, #0
 8001c86:	f005 f985 	bl	8006f94 <HAL_I2CEx_ConfigDigitalFilter>
 8001c8a:	b9a8      	cbnz	r0, 8001cb8 <MX_I2C3_Init+0x64>
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
 8001c90:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8001c94:	f005 b9aa 	b.w	8006fec <HAL_I2CEx_EnableFastModePlus>
    Error_Handler();
 8001c98:	f000 fae4 	bl	8002264 <Error_Handler>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001c9c:	480a      	ldr	r0, [pc, #40]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001c9e:	2100      	movs	r1, #0
 8001ca0:	f005 f94e 	bl	8006f40 <HAL_I2CEx_ConfigAnalogFilter>
 8001ca4:	2800      	cmp	r0, #0
 8001ca6:	d0ec      	beq.n	8001c82 <MX_I2C3_Init+0x2e>
    Error_Handler();
 8001ca8:	f000 fadc 	bl	8002264 <Error_Handler>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001cac:	4806      	ldr	r0, [pc, #24]	@ (8001cc8 <MX_I2C3_Init+0x74>)
 8001cae:	2100      	movs	r1, #0
 8001cb0:	f005 f970 	bl	8006f94 <HAL_I2CEx_ConfigDigitalFilter>
 8001cb4:	2800      	cmp	r0, #0
 8001cb6:	d0e9      	beq.n	8001c8c <MX_I2C3_Init+0x38>
    Error_Handler();
 8001cb8:	f000 fad4 	bl	8002264 <Error_Handler>
}
 8001cbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C3);
 8001cc0:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8001cc4:	f005 b992 	b.w	8006fec <HAL_I2CEx_EnableFastModePlus>
 8001cc8:	20000420 	.word	0x20000420
 8001ccc:	40005c00 	.word	0x40005c00
 8001cd0:	00910b1c 	.word	0x00910b1c

08001cd4 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cd6:	4604      	mov	r4, r0
 8001cd8:	b0a1      	sub	sp, #132	@ 0x84

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cda:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cdc:	2250      	movs	r2, #80	@ 0x50
 8001cde:	a80c      	add	r0, sp, #48	@ 0x30
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ce0:	e9cd 1106 	strd	r1, r1, [sp, #24]
 8001ce4:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001ce8:	910a      	str	r1, [sp, #40]	@ 0x28
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cea:	f00e fa84 	bl	80101f6 <memset>
  if(i2cHandle->Instance==I2C1)
 8001cee:	4a40      	ldr	r2, [pc, #256]	@ (8001df0 <HAL_I2C_MspInit+0x11c>)
 8001cf0:	6823      	ldr	r3, [r4, #0]
 8001cf2:	4293      	cmp	r3, r2
 8001cf4:	d004      	beq.n	8001d00 <HAL_I2C_MspInit+0x2c>
    __HAL_RCC_I2C1_CLK_ENABLE();
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
  else if(i2cHandle->Instance==I2C3)
 8001cf6:	4a3f      	ldr	r2, [pc, #252]	@ (8001df4 <HAL_I2C_MspInit+0x120>)
 8001cf8:	4293      	cmp	r3, r2
 8001cfa:	d030      	beq.n	8001d5e <HAL_I2C_MspInit+0x8a>
    __HAL_RCC_I2C3_CLK_ENABLE();
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8001cfc:	b021      	add	sp, #132	@ 0x84
 8001cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001d00:	2204      	movs	r2, #4
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001d02:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d06:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001d08:	920c      	str	r2, [sp, #48]	@ 0x30
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001d0a:	9314      	str	r3, [sp, #80]	@ 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d0c:	f007 f856 	bl	8008dbc <HAL_RCCEx_PeriphCLKConfig>
 8001d10:	2800      	cmp	r0, #0
 8001d12:	d167      	bne.n	8001de4 <HAL_I2C_MspInit+0x110>
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d14:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d18:	4837      	ldr	r0, [pc, #220]	@ (8001df8 <HAL_I2C_MspInit+0x124>)
 8001d1a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d1c:	f043 0302 	orr.w	r3, r3, #2
 8001d20:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d22:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d24:	f003 0302 	and.w	r3, r3, #2
 8001d28:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001d2a:	2304      	movs	r3, #4
  (void)tmpreg;
 8001d2c:	9a02      	ldr	r2, [sp, #8]
 8001d2e:	930a      	str	r3, [sp, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001d30:	2200      	movs	r2, #0
 8001d32:	2300      	movs	r3, #0
 8001d34:	f44f 7640 	mov.w	r6, #768	@ 0x300
 8001d38:	2712      	movs	r7, #18
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d3a:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001d3c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001d40:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d44:	f004 fa16 	bl	8006174 <HAL_GPIO_Init>
  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR1, Periphs);
 8001d48:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d4a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001d4e:	65a3      	str	r3, [r4, #88]	@ 0x58
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8001d50:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001d52:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001d56:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8001d58:	9b01      	ldr	r3, [sp, #4]
}
 8001d5a:	b021      	add	sp, #132	@ 0x84
 8001d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001d5e:	2208      	movs	r2, #8
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8001d60:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d64:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001d66:	920c      	str	r2, [sp, #48]	@ 0x30
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8001d68:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d6a:	f007 f827 	bl	8008dbc <HAL_RCCEx_PeriphCLKConfig>
 8001d6e:	2800      	cmp	r0, #0
 8001d70:	d13b      	bne.n	8001dea <HAL_I2C_MspInit+0x116>
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d72:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001d76:	2080      	movs	r0, #128	@ 0x80
 8001d78:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d7a:	f043 0301 	orr.w	r3, r3, #1
 8001d7e:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d80:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d82:	f003 0301 	and.w	r3, r3, #1
 8001d86:	9305      	str	r3, [sp, #20]
  (void)tmpreg;
 8001d88:	9b05      	ldr	r3, [sp, #20]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001d8a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d8c:	f043 0302 	orr.w	r3, r3, #2
 8001d90:	64e3      	str	r3, [r4, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001d92:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8001d94:	2112      	movs	r1, #18
 8001d96:	f003 0302 	and.w	r3, r3, #2
 8001d9a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8001d9e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001da0:	2504      	movs	r5, #4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da2:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001da4:	2600      	movs	r6, #0
 8001da6:	2700      	movs	r7, #0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8001dac:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dae:	950a      	str	r5, [sp, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001db0:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001db4:	f004 f9de 	bl	8006174 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001db8:	2210      	movs	r2, #16
 8001dba:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dbc:	480e      	ldr	r0, [pc, #56]	@ (8001df8 <HAL_I2C_MspInit+0x124>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dbe:	950a      	str	r5, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dc0:	a906      	add	r1, sp, #24
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001dc2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001dc6:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dca:	f004 f9d3 	bl	8006174 <HAL_GPIO_Init>
  SET_BIT(RCC->APB1ENR1, Periphs);
 8001dce:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001dd0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001dd4:	65a3      	str	r3, [r4, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8001dd6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001dd8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001ddc:	9303      	str	r3, [sp, #12]
  (void)tmpreg;
 8001dde:	9b03      	ldr	r3, [sp, #12]
}
 8001de0:	b021      	add	sp, #132	@ 0x84
 8001de2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      Error_Handler();
 8001de4:	f000 fa3e 	bl	8002264 <Error_Handler>
 8001de8:	e794      	b.n	8001d14 <HAL_I2C_MspInit+0x40>
      Error_Handler();
 8001dea:	f000 fa3b 	bl	8002264 <Error_Handler>
 8001dee:	e7c0      	b.n	8001d72 <HAL_I2C_MspInit+0x9e>
 8001df0:	40005400 	.word	0x40005400
 8001df4:	40005c00 	.word	0x40005c00
 8001df8:	48000400 	.word	0x48000400

08001dfc <MX_IPCC_Init>:
  /* USER CODE END IPCC_Init 0 */

  /* USER CODE BEGIN IPCC_Init 1 */

  /* USER CODE END IPCC_Init 1 */
  hipcc.Instance = IPCC;
 8001dfc:	4805      	ldr	r0, [pc, #20]	@ (8001e14 <MX_IPCC_Init+0x18>)
{
 8001dfe:	b508      	push	{r3, lr}
  hipcc.Instance = IPCC;
 8001e00:	4b05      	ldr	r3, [pc, #20]	@ (8001e18 <MX_IPCC_Init+0x1c>)
 8001e02:	6003      	str	r3, [r0, #0]
  if (HAL_IPCC_Init(&hipcc) != HAL_OK)
 8001e04:	f005 f8fe 	bl	8007004 <HAL_IPCC_Init>
 8001e08:	b900      	cbnz	r0, 8001e0c <MX_IPCC_Init+0x10>
  }
  /* USER CODE BEGIN IPCC_Init 2 */

  /* USER CODE END IPCC_Init 2 */

}
 8001e0a:	bd08      	pop	{r3, pc}
 8001e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8001e10:	f000 ba28 	b.w	8002264 <Error_Handler>
 8001e14:	200004cc 	.word	0x200004cc
 8001e18:	58000c00 	.word	0x58000c00

08001e1c <HAL_IPCC_MspInit>:

void HAL_IPCC_MspInit(IPCC_HandleTypeDef* ipccHandle)
{

  if(ipccHandle->Instance==IPCC)
 8001e1c:	4b12      	ldr	r3, [pc, #72]	@ (8001e68 <HAL_IPCC_MspInit+0x4c>)
 8001e1e:	6802      	ldr	r2, [r0, #0]
 8001e20:	429a      	cmp	r2, r3
 8001e22:	d000      	beq.n	8001e26 <HAL_IPCC_MspInit+0xa>
 8001e24:	4770      	bx	lr
{
 8001e26:	b500      	push	{lr}
  SET_BIT(RCC->AHB3ENR, Periphs);
 8001e28:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8001e2c:	b083      	sub	sp, #12
 8001e2e:	6d18      	ldr	r0, [r3, #80]	@ 0x50
 8001e30:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 8001e34:	6518      	str	r0, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 8001e36:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001e38:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
  /* USER CODE END IPCC_MspInit 0 */
    /* IPCC clock enable */
    __HAL_RCC_IPCC_CLK_ENABLE();

    /* IPCC interrupt Init */
    HAL_NVIC_SetPriority(IPCC_C1_RX_IRQn, 5, 0);
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	2105      	movs	r1, #5
 8001e40:	9301      	str	r3, [sp, #4]
 8001e42:	202c      	movs	r0, #44	@ 0x2c
  (void)tmpreg;
 8001e44:	9b01      	ldr	r3, [sp, #4]
 8001e46:	f003 ffa3 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(IPCC_C1_RX_IRQn);
 8001e4a:	202c      	movs	r0, #44	@ 0x2c
 8001e4c:	f003 ffdc 	bl	8005e08 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(IPCC_C1_TX_IRQn, 5, 0);
 8001e50:	2200      	movs	r2, #0
 8001e52:	2105      	movs	r1, #5
 8001e54:	202d      	movs	r0, #45	@ 0x2d
 8001e56:	f003 ff9b 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(IPCC_C1_TX_IRQn);
 8001e5a:	202d      	movs	r0, #45	@ 0x2d
  /* USER CODE BEGIN IPCC_MspInit 1 */

  /* USER CODE END IPCC_MspInit 1 */
  }
}
 8001e5c:	b003      	add	sp, #12
 8001e5e:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(IPCC_C1_TX_IRQn);
 8001e62:	f003 bfd1 	b.w	8005e08 <HAL_NVIC_EnableIRQ>
 8001e66:	bf00      	nop
 8001e68:	58000c00 	.word	0x58000c00

08001e6c <HAL_GPIO_EXTI_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)//lors d'un appuie sur un bouton, le systeme s'interrompt afin d'arriver dans cette fonction redefinie avec en parametre d'entre , le bouton sur lequel l'on a appuiyé
{
	if(GPIO_Pin==GPIO_PIN_14){
 8001e6c:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
{
 8001e70:	b510      	push	{r4, lr}
 8001e72:	4601      	mov	r1, r0
	if(GPIO_Pin==GPIO_PIN_14){
 8001e74:	d01b      	beq.n	8001eae <HAL_GPIO_EXTI_Callback+0x42>
					BTN_A_LONG++;
					BTN_A=0;
				}

	}
	if(GPIO_Pin==GPIO_PIN_15){
 8001e76:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8001e7a:	d000      	beq.n	8001e7e <HAL_GPIO_EXTI_Callback+0x12>
		}



	}
}
 8001e7c:	bd10      	pop	{r4, pc}
		if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_15)== GPIO_PIN_RESET){
 8001e7e:	4822      	ldr	r0, [pc, #136]	@ (8001f08 <HAL_GPIO_EXTI_Callback+0x9c>)
 8001e80:	f004 fb14 	bl	80064ac <HAL_GPIO_ReadPin>
 8001e84:	2800      	cmp	r0, #0
 8001e86:	d036      	beq.n	8001ef6 <HAL_GPIO_EXTI_Callback+0x8a>
			BTN_B++;
 8001e88:	4a20      	ldr	r2, [pc, #128]	@ (8001f0c <HAL_GPIO_EXTI_Callback+0xa0>)
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e8a:	4c21      	ldr	r4, [pc, #132]	@ (8001f10 <HAL_GPIO_EXTI_Callback+0xa4>)
			BTN_B++;
 8001e8c:	6813      	ldr	r3, [r2, #0]
 8001e8e:	3301      	adds	r3, #1
 8001e90:	6013      	str	r3, [r2, #0]
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e92:	f003 fb3b 	bl	800550c <HAL_GetTick>
 8001e96:	4a1f      	ldr	r2, [pc, #124]	@ (8001f14 <HAL_GPIO_EXTI_Callback+0xa8>)
 8001e98:	6813      	ldr	r3, [r2, #0]
			tbtn2=0;
 8001e9a:	2100      	movs	r1, #0
			boutonBtime=HAL_GetTick()-tbtn2;
 8001e9c:	1ac3      	subs	r3, r0, r3
 8001e9e:	6023      	str	r3, [r4, #0]
			tbtn2=0;
 8001ea0:	6011      	str	r1, [r2, #0]
		if(boutonBtime>=400){
 8001ea2:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 8001ea6:	dbe9      	blt.n	8001e7c <HAL_GPIO_EXTI_Callback+0x10>
			BTN_B_LONG++;
 8001ea8:	4a1b      	ldr	r2, [pc, #108]	@ (8001f18 <HAL_GPIO_EXTI_Callback+0xac>)
			BTN_B=0;
 8001eaa:	4918      	ldr	r1, [pc, #96]	@ (8001f0c <HAL_GPIO_EXTI_Callback+0xa0>)
 8001eac:	e015      	b.n	8001eda <HAL_GPIO_EXTI_Callback+0x6e>
		if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)== GPIO_PIN_RESET){
 8001eae:	4816      	ldr	r0, [pc, #88]	@ (8001f08 <HAL_GPIO_EXTI_Callback+0x9c>)
 8001eb0:	f004 fafc 	bl	80064ac <HAL_GPIO_ReadPin>
 8001eb4:	b1b8      	cbz	r0, 8001ee6 <HAL_GPIO_EXTI_Callback+0x7a>
					BTN_A++;
 8001eb6:	4a19      	ldr	r2, [pc, #100]	@ (8001f1c <HAL_GPIO_EXTI_Callback+0xb0>)
					boutonAtime=HAL_GetTick()-tbtn1;
 8001eb8:	4c19      	ldr	r4, [pc, #100]	@ (8001f20 <HAL_GPIO_EXTI_Callback+0xb4>)
					BTN_A++;
 8001eba:	6813      	ldr	r3, [r2, #0]
 8001ebc:	3301      	adds	r3, #1
 8001ebe:	6013      	str	r3, [r2, #0]
					boutonAtime=HAL_GetTick()-tbtn1;
 8001ec0:	f003 fb24 	bl	800550c <HAL_GetTick>
 8001ec4:	4a17      	ldr	r2, [pc, #92]	@ (8001f24 <HAL_GPIO_EXTI_Callback+0xb8>)
 8001ec6:	6813      	ldr	r3, [r2, #0]
					tbtn1=0;
 8001ec8:	2100      	movs	r1, #0
					boutonAtime=HAL_GetTick()-tbtn1;
 8001eca:	1ac3      	subs	r3, r0, r3
 8001ecc:	6023      	str	r3, [r4, #0]
					tbtn1=0;
 8001ece:	6011      	str	r1, [r2, #0]
				if(boutonAtime>=400){
 8001ed0:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 8001ed4:	dbd2      	blt.n	8001e7c <HAL_GPIO_EXTI_Callback+0x10>
					BTN_A_LONG++;
 8001ed6:	4a14      	ldr	r2, [pc, #80]	@ (8001f28 <HAL_GPIO_EXTI_Callback+0xbc>)
					BTN_A=0;
 8001ed8:	4910      	ldr	r1, [pc, #64]	@ (8001f1c <HAL_GPIO_EXTI_Callback+0xb0>)
			BTN_B_LONG++;
 8001eda:	6813      	ldr	r3, [r2, #0]
			BTN_B=0;
 8001edc:	2000      	movs	r0, #0
			BTN_B_LONG++;
 8001ede:	3301      	adds	r3, #1
 8001ee0:	6013      	str	r3, [r2, #0]
			BTN_B=0;
 8001ee2:	6008      	str	r0, [r1, #0]
}
 8001ee4:	bd10      	pop	{r4, pc}
					boutonAtime=0;
 8001ee6:	4c0e      	ldr	r4, [pc, #56]	@ (8001f20 <HAL_GPIO_EXTI_Callback+0xb4>)
 8001ee8:	6020      	str	r0, [r4, #0]
					tbtn1=HAL_GetTick();
 8001eea:	f003 fb0f 	bl	800550c <HAL_GetTick>
 8001eee:	4a0d      	ldr	r2, [pc, #52]	@ (8001f24 <HAL_GPIO_EXTI_Callback+0xb8>)
				if(boutonAtime>=400){
 8001ef0:	6823      	ldr	r3, [r4, #0]
					tbtn1=HAL_GetTick();
 8001ef2:	6010      	str	r0, [r2, #0]
 8001ef4:	e7ec      	b.n	8001ed0 <HAL_GPIO_EXTI_Callback+0x64>
			boutonBtime=0;
 8001ef6:	4c06      	ldr	r4, [pc, #24]	@ (8001f10 <HAL_GPIO_EXTI_Callback+0xa4>)
 8001ef8:	6020      	str	r0, [r4, #0]
			tbtn2=HAL_GetTick();
 8001efa:	f003 fb07 	bl	800550c <HAL_GetTick>
 8001efe:	4a05      	ldr	r2, [pc, #20]	@ (8001f14 <HAL_GPIO_EXTI_Callback+0xa8>)
		if(boutonBtime>=400){
 8001f00:	6823      	ldr	r3, [r4, #0]
			tbtn2=HAL_GetTick();
 8001f02:	6010      	str	r0, [r2, #0]
 8001f04:	e7cd      	b.n	8001ea2 <HAL_GPIO_EXTI_Callback+0x36>
 8001f06:	bf00      	nop
 8001f08:	48000800 	.word	0x48000800
 8001f0c:	20000ff4 	.word	0x20000ff4
 8001f10:	200005f0 	.word	0x200005f0
 8001f14:	200005e8 	.word	0x200005e8
 8001f18:	200005e4 	.word	0x200005e4
 8001f1c:	20000ff8 	.word	0x20000ff8
 8001f20:	200005f4 	.word	0x200005f4
 8001f24:	200005ec 	.word	0x200005ec
 8001f28:	200005e0 	.word	0x200005e0
 8001f2c:	00000000 	.word	0x00000000

08001f30 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001f30:	b510      	push	{r4, lr}
 8001f32:	b09c      	sub	sp, #112	@ 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f34:	2224      	movs	r2, #36	@ 0x24
 8001f36:	2100      	movs	r1, #0
 8001f38:	a80c      	add	r0, sp, #48	@ 0x30
 8001f3a:	f00e f95c 	bl	80101f6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f3e:	2300      	movs	r3, #0
 8001f40:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001f44:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001f48:	e9cd 3306 	strd	r3, r3, [sp, #24]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f4c:	4a24      	ldr	r2, [pc, #144]	@ (8001fe0 <SystemClock_Config+0xb0>)
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f4e:	9308      	str	r3, [sp, #32]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f50:	6813      	ldr	r3, [r2, #0]
 8001f52:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001f56:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001f5a:	6013      	str	r3, [r2, #0]
 8001f5c:	6813      	ldr	r3, [r2, #0]
 8001f5e:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001f62:	f44f 7180 	mov.w	r1, #256	@ 0x100
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f66:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001f68:	2340      	movs	r3, #64	@ 0x40
 8001f6a:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8001f6e:	ed9f 7b18 	vldr	d7, [pc, #96]	@ 8001fd0 <SystemClock_Config+0xa0>
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 8001f72:	2310      	movs	r3, #16
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001f74:	2202      	movs	r2, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001f76:	2403      	movs	r4, #3
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 8001f78:	9317      	str	r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLN = 8;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001f7a:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001f7e:	e9cd 2415 	strd	r2, r4, [sp, #84]	@ 0x54
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f82:	9801      	ldr	r0, [sp, #4]
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001f84:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001f86:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001f88:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001f8c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001f90:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8001f92:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001f96:	e9cd 2319 	strd	r2, r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLN = 8;
 8001f9a:	9118      	str	r1, [sp, #96]	@ 0x60
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001f9c:	f006 f996 	bl	80082cc <HAL_RCC_OscConfig>
 8001fa0:	b108      	cbz	r0, 8001fa6 <SystemClock_Config+0x76>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001fa2:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001fa4:	e7fe      	b.n	8001fa4 <SystemClock_Config+0x74>
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fa6:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 8001fd8 <SystemClock_Config+0xa8>
 8001faa:	4603      	mov	r3, r0
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 8001fac:	226f      	movs	r2, #111	@ 0x6f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001fae:	a802      	add	r0, sp, #8
 8001fb0:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fb2:	ed8d 7b06 	vstr	d7, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001fb6:	e9cd 4303 	strd	r4, r3, [sp, #12]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 8001fba:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001fbc:	9305      	str	r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 8001fbe:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001fc0:	f006 fcda 	bl	8008978 <HAL_RCC_ClockConfig>
 8001fc4:	b108      	cbz	r0, 8001fca <SystemClock_Config+0x9a>
 8001fc6:	b672      	cpsid	i
  while (1)
 8001fc8:	e7fe      	b.n	8001fc8 <SystemClock_Config+0x98>
}
 8001fca:	b01c      	add	sp, #112	@ 0x70
 8001fcc:	bd10      	pop	{r4, pc}
 8001fce:	bf00      	nop
 8001fd0:	00000003 	.word	0x00000003
 8001fd4:	00010000 	.word	0x00010000
 8001fd8:	00000000 	.word	0x00000000
 8001fdc:	00000080 	.word	0x00000080
 8001fe0:	58000400 	.word	0x58000400
 8001fe4:	00000000 	.word	0x00000000

08001fe8 <PeriphCommonClock_Config>:
{
 8001fe8:	b510      	push	{r4, lr}
 8001fea:	b094      	sub	sp, #80	@ 0x50
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001fec:	2238      	movs	r2, #56	@ 0x38
 8001fee:	2100      	movs	r1, #0
 8001ff0:	a806      	add	r0, sp, #24
 8001ff2:	f00e f900 	bl	80101f6 <memset>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS|RCC_PERIPHCLK_RFWAKEUP
 8001ff6:	f44f 5254 	mov.w	r2, #13568	@ 0x3500
  PeriphClkInitStruct.PLLSAI1.PLLN = 6;
 8001ffa:	2306      	movs	r3, #6
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 8001ffc:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 8002040 <PeriphCommonClock_Config+0x58>
  PeriphClkInitStruct.PLLSAI1.PLLN = 6;
 8002000:	e9cd 2300 	strd	r2, r3, [sp]
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 8002004:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 8002008:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  PeriphClkInitStruct.PLLSAI1.PLLP = RCC_PLLP_DIV2;
 800200c:	f44f 3400 	mov.w	r4, #131072	@ 0x20000
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 8002010:	e9cd 4002 	strd	r4, r0, [sp, #8]
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 8002014:	f04f 5180 	mov.w	r1, #268435456	@ 0x10000000
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002018:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 800201c:	930d      	str	r3, [sp, #52]	@ 0x34
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800201e:	4668      	mov	r0, sp
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002020:	2302      	movs	r3, #2
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 8002022:	ed8d 7b04 	vstr	d7, [sp, #16]
  PeriphClkInitStruct.RFWakeUpClockSelection = RCC_RFWKPCLKSOURCE_HSE_DIV1024;
 8002026:	e9cd 2311 	strd	r2, r3, [sp, #68]	@ 0x44
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 800202a:	910f      	str	r1, [sp, #60]	@ 0x3c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800202c:	f006 fec6 	bl	8008dbc <HAL_RCCEx_PeriphCLKConfig>
 8002030:	b108      	cbz	r0, 8002036 <PeriphCommonClock_Config+0x4e>
 8002032:	b672      	cpsid	i
  while (1)
 8002034:	e7fe      	b.n	8002034 <PeriphCommonClock_Config+0x4c>
}
 8002036:	b014      	add	sp, #80	@ 0x50
 8002038:	bd10      	pop	{r4, pc}
 800203a:	bf00      	nop
 800203c:	f3af 8000 	nop.w
 8002040:	20000000 	.word	0x20000000
 8002044:	11000000 	.word	0x11000000

08002048 <main>:
{
 8002048:	b530      	push	{r4, r5, lr}
 800204a:	b089      	sub	sp, #36	@ 0x24
  HAL_Init();
 800204c:	f003 fa3a 	bl	80054c4 <HAL_Init>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002050:	2300      	movs	r3, #0
 8002052:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002056:	e9cd 3306 	strd	r3, r3, [sp, #24]
  SET_BIT(RCC->AHB2ENR, Periphs);
 800205a:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800205e:	4865      	ldr	r0, [pc, #404]	@ (80021f4 <main+0x1ac>)
 8002060:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 8002062:	f043 0304 	orr.w	r3, r3, #4
 8002066:	64d3      	str	r3, [r2, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8002068:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 800206a:	f003 0304 	and.w	r3, r3, #4
 800206e:	9302      	str	r3, [sp, #8]
 8002070:	a903      	add	r1, sp, #12
   GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14;
 8002072:	f44f 4440 	mov.w	r4, #49152	@ 0xc000
  (void)tmpreg;
 8002076:	9b02      	ldr	r3, [sp, #8]
 8002078:	9403      	str	r4, [sp, #12]
   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207a:	f004 f87b 	bl	8006174 <HAL_GPIO_Init>
   if ((HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_RESET) &&
 800207e:	485d      	ldr	r0, [pc, #372]	@ (80021f4 <main+0x1ac>)
 8002080:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002084:	f004 fa12 	bl	80064ac <HAL_GPIO_ReadPin>
 8002088:	2800      	cmp	r0, #0
 800208a:	f000 808d 	beq.w	80021a8 <main+0x160>
   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)==GPIO_PIN_RESET){
 800208e:	4859      	ldr	r0, [pc, #356]	@ (80021f4 <main+0x1ac>)
	   modesansechec=1;
 8002090:	4d59      	ldr	r5, [pc, #356]	@ (80021f8 <main+0x1b0>)
   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_14)==GPIO_PIN_RESET){
 8002092:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002096:	f004 fa09 	bl	80064ac <HAL_GPIO_ReadPin>
 800209a:	b908      	cbnz	r0, 80020a0 <main+0x58>
	   modesansechec=1;
 800209c:	2301      	movs	r3, #1
 800209e:	602b      	str	r3, [r5, #0]
  SystemClock_Config();
 80020a0:	f7ff ff46 	bl	8001f30 <SystemClock_Config>
  PeriphCommonClock_Config();
 80020a4:	f7ff ffa0 	bl	8001fe8 <PeriphCommonClock_Config>
  MX_IPCC_Init();
 80020a8:	f7ff fea8 	bl	8001dfc <MX_IPCC_Init>
  MX_GPIO_Init();
 80020ac:	f7ff fd3c 	bl	8001b28 <MX_GPIO_Init>
  MX_DMA_Init();
 80020b0:	f7ff fd08 	bl	8001ac4 <MX_DMA_Init>
  MX_ADC1_Init();
 80020b4:	f7ff f966 	bl	8001384 <MX_ADC1_Init>
  MX_I2C1_Init();
 80020b8:	f7ff fd94 	bl	8001be4 <MX_I2C1_Init>
  MX_I2C3_Init();
 80020bc:	f7ff fdca 	bl	8001c54 <MX_I2C3_Init>
  MX_LPUART1_UART_Init();
 80020c0:	f002 fe9e 	bl	8004e00 <MX_LPUART1_UART_Init>
  MX_TIM2_Init();
 80020c4:	f002 fe14 	bl	8004cf0 <MX_TIM2_Init>
  MX_TIM17_Init();
 80020c8:	f002 fe4e 	bl	8004d68 <MX_TIM17_Init>
  MX_SPI1_Init();
 80020cc:	f000 f9b4 	bl	8002438 <MX_SPI1_Init>
  MX_RTC_Init();
 80020d0:	f000 f8cc 	bl	800226c <MX_RTC_Init>
  MX_RF_Init();
 80020d4:	f000 f8c8 	bl	8002268 <MX_RF_Init>
  	ssd1306_Init();
 80020d8:	f000 fcbe 	bl	8002a58 <ssd1306_Init>
  	HAL_Delay(10);
 80020dc:	200a      	movs	r0, #10
 80020de:	f003 fa21 	bl	8005524 <HAL_Delay>
  	ssd1306_Fill(Black);
 80020e2:	2000      	movs	r0, #0
 80020e4:	f000 fc60 	bl	80029a8 <ssd1306_Fill>
  	ssd1306_DrawBitmap(32, 32, startimg, 64, 32, White);
 80020e8:	2401      	movs	r4, #1
 80020ea:	2120      	movs	r1, #32
 80020ec:	2340      	movs	r3, #64	@ 0x40
 80020ee:	4608      	mov	r0, r1
 80020f0:	e9cd 1400 	strd	r1, r4, [sp]
 80020f4:	4a41      	ldr	r2, [pc, #260]	@ (80021fc <main+0x1b4>)
 80020f6:	f000 ff21 	bl	8002f3c <ssd1306_DrawBitmap>
  	ssd1306_UpdateScreen();
 80020fa:	f000 fc61 	bl	80029c0 <ssd1306_UpdateScreen>
  	HAL_ADC_Start_DMA(&hadc1,(uint32_t*)rawdata, 3);
 80020fe:	4940      	ldr	r1, [pc, #256]	@ (8002200 <main+0x1b8>)
 8002100:	4840      	ldr	r0, [pc, #256]	@ (8002204 <main+0x1bc>)
 8002102:	2203      	movs	r2, #3
 8002104:	f003 fdde 	bl	8005cc4 <HAL_ADC_Start_DMA>
  	HAL_TIM_Base_Start(&htim2);
 8002108:	483f      	ldr	r0, [pc, #252]	@ (8002208 <main+0x1c0>)
 800210a:	f008 fa93 	bl	800a634 <HAL_TIM_Base_Start>
  	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_0,GPIO_PIN_SET);
 800210e:	4622      	mov	r2, r4
 8002110:	4621      	mov	r1, r4
 8002112:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002116:	f004 f9cf 	bl	80064b8 <HAL_GPIO_WritePin>
  	HAL_Delay(100);
 800211a:	2064      	movs	r0, #100	@ 0x64
 800211c:	f003 fa02 	bl	8005524 <HAL_Delay>
  	GNSS_Init(&GNSSData, &hlpuart1);
 8002120:	493a      	ldr	r1, [pc, #232]	@ (800220c <main+0x1c4>)
 8002122:	483b      	ldr	r0, [pc, #236]	@ (8002210 <main+0x1c8>)
 8002124:	f7fe ff54 	bl	8000fd0 <GNSS_Init>
  	HAL_UART_Abort(&hlpuart1);
 8002128:	4838      	ldr	r0, [pc, #224]	@ (800220c <main+0x1c4>)
 800212a:	f008 fcaf 	bl	800aa8c <HAL_UART_Abort>
  	HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 800212e:	4939      	ldr	r1, [pc, #228]	@ (8002214 <main+0x1cc>)
 8002130:	4836      	ldr	r0, [pc, #216]	@ (800220c <main+0x1c4>)
 8002132:	2264      	movs	r2, #100	@ 0x64
 8002134:	f009 fb32 	bl	800b79c <HAL_UART_Receive_DMA>
  	memset(flashread,'1',256);
 8002138:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800213c:	2131      	movs	r1, #49	@ 0x31
 800213e:	4836      	ldr	r0, [pc, #216]	@ (8002218 <main+0x1d0>)
 8002140:	f00e f859 	bl	80101f6 <memset>
  	memset(flashwrite,'\0',256);
 8002144:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002148:	2100      	movs	r1, #0
 800214a:	4834      	ldr	r0, [pc, #208]	@ (800221c <main+0x1d4>)
 800214c:	f00e f853 	bl	80101f6 <memset>
  	memset((uint8_t *)bufferscreen ,'\0',50);
 8002150:	2232      	movs	r2, #50	@ 0x32
 8002152:	2100      	movs	r1, #0
 8002154:	4832      	ldr	r0, [pc, #200]	@ (8002220 <main+0x1d8>)
 8002156:	f00e f84e 	bl	80101f6 <memset>
  	SPIF_Init(&hspif1, &hspi1, GPIOB, GPIO_PIN_7);
 800215a:	2380      	movs	r3, #128	@ 0x80
 800215c:	4a31      	ldr	r2, [pc, #196]	@ (8002224 <main+0x1dc>)
 800215e:	4932      	ldr	r1, [pc, #200]	@ (8002228 <main+0x1e0>)
 8002160:	4832      	ldr	r0, [pc, #200]	@ (800222c <main+0x1e4>)
 8002162:	f00c fbdf 	bl	800e924 <SPIF_Init>
  	HAL_Delay(100);
 8002166:	2064      	movs	r0, #100	@ 0x64
 8002168:	f003 f9dc 	bl	8005524 <HAL_Delay>
  	if(modesansechec==0){
 800216c:	682b      	ldr	r3, [r5, #0]
 800216e:	2b00      	cmp	r3, #0
 8002170:	d03d      	beq.n	80021ee <main+0x1a6>
  	ssd1306_Fill(Black);
 8002172:	2000      	movs	r0, #0
 8002174:	f000 fc18 	bl	80029a8 <ssd1306_Fill>
  	bmp581->i2c=&hi2c1;
 8002178:	482d      	ldr	r0, [pc, #180]	@ (8002230 <main+0x1e8>)
 800217a:	492e      	ldr	r1, [pc, #184]	@ (8002234 <main+0x1ec>)
 800217c:	6803      	ldr	r3, [r0, #0]
  	bmp581->addr=0x47;
 800217e:	2247      	movs	r2, #71	@ 0x47
  	bmp581->i2c=&hi2c1;
 8002180:	6019      	str	r1, [r3, #0]
  	bmp581->addr=0x47;
 8002182:	711a      	strb	r2, [r3, #4]
  	if(bmp581_init_precise_normal(&bmp581)!=0){
 8002184:	f7ff fbd0 	bl	8001928 <bmp581_init_precise_normal>
 8002188:	b9f8      	cbnz	r0, 80021ca <main+0x182>
  	BTN_A=0;
 800218a:	492b      	ldr	r1, [pc, #172]	@ (8002238 <main+0x1f0>)
  	BTN_A_LONG=0;
 800218c:	4a2b      	ldr	r2, [pc, #172]	@ (800223c <main+0x1f4>)
  	state=STATE_SPEED;
 800218e:	4c2c      	ldr	r4, [pc, #176]	@ (8002240 <main+0x1f8>)
 8002190:	2300      	movs	r3, #0
  	HAL_Delay(200);
 8002192:	20c8      	movs	r0, #200	@ 0xc8
  	state=STATE_SPEED;
 8002194:	7023      	strb	r3, [r4, #0]
  	BTN_A=0;
 8002196:	600b      	str	r3, [r1, #0]
  	BTN_A_LONG=0;
 8002198:	6013      	str	r3, [r2, #0]
  	HAL_Delay(200);
 800219a:	f003 f9c3 	bl	8005524 <HAL_Delay>
  MX_FREERTOS_Init();
 800219e:	f7ff fb51 	bl	8001844 <MX_FREERTOS_Init>
  osKernelStart();
 80021a2:	f00b f86b 	bl	800d27c <osKernelStart>
  while (1)
 80021a6:	e7fe      	b.n	80021a6 <main+0x15e>
 	  (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) == GPIO_PIN_RESET))
 80021a8:	4812      	ldr	r0, [pc, #72]	@ (80021f4 <main+0x1ac>)
 80021aa:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80021ae:	f004 f97d 	bl	80064ac <HAL_GPIO_ReadPin>
   if ((HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_RESET) &&
 80021b2:	2800      	cmp	r0, #0
 80021b4:	f47f af6b 	bne.w	800208e <main+0x46>
 	  HAL_DeInit();
 80021b8:	f003 f95e 	bl	8005478 <HAL_DeInit>
 	  __set_MSP(*(__IO uint32_t*)SYS_MEM_START_ADDR);
 80021bc:	4b21      	ldr	r3, [pc, #132]	@ (8002244 <main+0x1fc>)
 80021be:	681a      	ldr	r2, [r3, #0]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 80021c0:	f382 8808 	msr	MSP, r2
 	  boot_jump();
 80021c4:	685b      	ldr	r3, [r3, #4]
 80021c6:	4798      	blx	r3
 80021c8:	e761      	b.n	800208e <main+0x46>
  		ssd1306_SetCursor(32,42);
 80021ca:	212a      	movs	r1, #42	@ 0x2a
 80021cc:	2020      	movs	r0, #32
 80021ce:	f000 feaf 	bl	8002f30 <ssd1306_SetCursor>
  		ssd1306_WriteString("bmp prbm", Font_7x10, White);
 80021d2:	4b1d      	ldr	r3, [pc, #116]	@ (8002248 <main+0x200>)
 80021d4:	481d      	ldr	r0, [pc, #116]	@ (800224c <main+0x204>)
 80021d6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80021da:	2301      	movs	r3, #1
 80021dc:	f000 fe8c 	bl	8002ef8 <ssd1306_WriteString>
  		ssd1306_UpdateScreen();
 80021e0:	f000 fbee 	bl	80029c0 <ssd1306_UpdateScreen>
  		HAL_Delay(1000);
 80021e4:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80021e8:	f003 f99c 	bl	8005524 <HAL_Delay>
 80021ec:	e7cd      	b.n	800218a <main+0x142>
  		getindex();
 80021ee:	f000 fa33 	bl	8002658 <getindex>
 80021f2:	e7be      	b.n	8002172 <main+0x12a>
 80021f4:	48000800 	.word	0x48000800
 80021f8:	20000508 	.word	0x20000508
 80021fc:	08016068 	.word	0x08016068
 8002200:	20000fcc 	.word	0x20000fcc
 8002204:	20000388 	.word	0x20000388
 8002208:	200015e0 	.word	0x200015e0
 800220c:	200016f0 	.word	0x200016f0
 8002210:	20000510 	.word	0x20000510
 8002214:	20000ffc 	.word	0x20000ffc
 8002218:	200006c0 	.word	0x200006c0
 800221c:	20000ec0 	.word	0x20000ec0
 8002220:	20000680 	.word	0x20000680
 8002224:	48000400 	.word	0x48000400
 8002228:	20001098 	.word	0x20001098
 800222c:	20000fd4 	.word	0x20000fd4
 8002230:	200005d8 	.word	0x200005d8
 8002234:	20000478 	.word	0x20000478
 8002238:	20000ff8 	.word	0x20000ff8
 800223c:	200005e0 	.word	0x200005e0
 8002240:	20001070 	.word	0x20001070
 8002244:	1fff0000 	.word	0x1fff0000
 8002248:	20000024 	.word	0x20000024
 800224c:	08015d40 	.word	0x08015d40

08002250 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM1)
 8002250:	4b03      	ldr	r3, [pc, #12]	@ (8002260 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002252:	6802      	ldr	r2, [r0, #0]
 8002254:	429a      	cmp	r2, r3
 8002256:	d000      	beq.n	800225a <HAL_TIM_PeriodElapsedCallback+0xa>
}
 8002258:	4770      	bx	lr
    HAL_IncTick();
 800225a:	f003 b94b 	b.w	80054f4 <HAL_IncTick>
 800225e:	bf00      	nop
 8002260:	40012c00 	.word	0x40012c00

08002264 <Error_Handler>:
  __ASM volatile ("cpsid i" : : : "memory");
 8002264:	b672      	cpsid	i
  while (1)
 8002266:	e7fe      	b.n	8002266 <Error_Handler+0x2>

08002268 <MX_RF_Init>:
  /* USER CODE END RF_Init 1 */
  /* USER CODE BEGIN RF_Init 2 */

  /* USER CODE END RF_Init 2 */

}
 8002268:	4770      	bx	lr
 800226a:	bf00      	nop

0800226c <MX_RTC_Init>:

RTC_HandleTypeDef hrtc;

/* RTC init function */
void MX_RTC_Init(void)
{
 800226c:	b500      	push	{lr}

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 800226e:	4822      	ldr	r0, [pc, #136]	@ (80022f8 <MX_RTC_Init+0x8c>)
 8002270:	4922      	ldr	r1, [pc, #136]	@ (80022fc <MX_RTC_Init+0x90>)
{
 8002272:	b087      	sub	sp, #28
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
  hrtc.Init.AsynchPrediv = 99;
 8002274:	2263      	movs	r2, #99	@ 0x63
  RTC_TimeTypeDef sTime = {0};
 8002276:	2300      	movs	r3, #0
  hrtc.Init.AsynchPrediv = 99;
 8002278:	6082      	str	r2, [r0, #8]
  hrtc.Init.SynchPrediv = 9999;
 800227a:	f242 720f 	movw	r2, #9999	@ 0x270f
  RTC_TimeTypeDef sTime = {0};
 800227e:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8002282:	e9cd 3303 	strd	r3, r3, [sp, #12]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8002286:	e9c0 1300 	strd	r1, r3, [r0]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 800228a:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 800228e:	e9c0 3306 	strd	r3, r3, [r0, #24]
  RTC_TimeTypeDef sTime = {0};
 8002292:	9305      	str	r3, [sp, #20]
  RTC_DateTypeDef sDate = {0};
 8002294:	9300      	str	r3, [sp, #0]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 8002296:	6143      	str	r3, [r0, #20]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8002298:	f006 ff7c 	bl	8009194 <HAL_RTC_Init>
 800229c:	b9f0      	cbnz	r0, 80022dc <MX_RTC_Init+0x70>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 800229e:	2300      	movs	r3, #0
  sTime.Minutes = 0x0;
  sTime.Seconds = 0x0;
  sTime.SubSeconds = 0x0;
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022a0:	4815      	ldr	r0, [pc, #84]	@ (80022f8 <MX_RTC_Init+0x8c>)
  sTime.Hours = 0x0;
 80022a2:	f8ad 3004 	strh.w	r3, [sp, #4]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022a6:	2201      	movs	r2, #1
 80022a8:	a901      	add	r1, sp, #4
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80022aa:	e9cd 3304 	strd	r3, r3, [sp, #16]
  sTime.Seconds = 0x0;
 80022ae:	f88d 3006 	strb.w	r3, [sp, #6]
  sTime.SubSeconds = 0x0;
 80022b2:	9302      	str	r3, [sp, #8]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80022b4:	f006 ffee 	bl	8009294 <HAL_RTC_SetTime>
 80022b8:	b9d8      	cbnz	r0, 80022f2 <MX_RTC_Init+0x86>
  {
    Error_Handler();
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80022ba:	4b11      	ldr	r3, [pc, #68]	@ (8002300 <MX_RTC_Init+0x94>)
  sDate.Month = RTC_MONTH_JANUARY;
  sDate.Date = 0x1;
  sDate.Year = 0x0;

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80022bc:	480e      	ldr	r0, [pc, #56]	@ (80022f8 <MX_RTC_Init+0x8c>)
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80022be:	9300      	str	r3, [sp, #0]
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80022c0:	2201      	movs	r2, #1
 80022c2:	4669      	mov	r1, sp
 80022c4:	f007 f8d6 	bl	8009474 <HAL_RTC_SetDate>
 80022c8:	b980      	cbnz	r0, 80022ec <MX_RTC_Init+0x80>
    Error_Handler();
  }

  /** Enable the WakeUp
  */
  if (HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 0, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 80022ca:	480b      	ldr	r0, [pc, #44]	@ (80022f8 <MX_RTC_Init+0x8c>)
 80022cc:	2204      	movs	r2, #4
 80022ce:	2100      	movs	r1, #0
 80022d0:	f007 f9b2 	bl	8009638 <HAL_RTCEx_SetWakeUpTimer_IT>
 80022d4:	b928      	cbnz	r0, 80022e2 <MX_RTC_Init+0x76>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 80022d6:	b007      	add	sp, #28
 80022d8:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80022dc:	f7ff ffc2 	bl	8002264 <Error_Handler>
 80022e0:	e7dd      	b.n	800229e <MX_RTC_Init+0x32>
    Error_Handler();
 80022e2:	f7ff ffbf 	bl	8002264 <Error_Handler>
}
 80022e6:	b007      	add	sp, #28
 80022e8:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80022ec:	f7ff ffba 	bl	8002264 <Error_Handler>
 80022f0:	e7eb      	b.n	80022ca <MX_RTC_Init+0x5e>
    Error_Handler();
 80022f2:	f7ff ffb7 	bl	8002264 <Error_Handler>
 80022f6:	e7e0      	b.n	80022ba <MX_RTC_Init+0x4e>
 80022f8:	20001074 	.word	0x20001074
 80022fc:	40002800 	.word	0x40002800
 8002300:	00010101 	.word	0x00010101

08002304 <HAL_RTC_MspInit>:

void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
{
 8002304:	b510      	push	{r4, lr}
 8002306:	4604      	mov	r4, r0
 8002308:	b096      	sub	sp, #88	@ 0x58

  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800230a:	2250      	movs	r2, #80	@ 0x50
 800230c:	2100      	movs	r1, #0
 800230e:	a802      	add	r0, sp, #8
 8002310:	f00d ff71 	bl	80101f6 <memset>
  if(rtcHandle->Instance==RTC)
 8002314:	4b18      	ldr	r3, [pc, #96]	@ (8002378 <HAL_RTC_MspInit+0x74>)
 8002316:	6822      	ldr	r2, [r4, #0]
 8002318:	429a      	cmp	r2, r3
 800231a:	d001      	beq.n	8002320 <HAL_RTC_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }
}
 800231c:	b016      	add	sp, #88	@ 0x58
 800231e:	bd10      	pop	{r4, pc}
	  HAL_PWR_EnableBkUpAccess();
 8002320:	f005 ff0c 	bl	800813c <HAL_PWR_EnableBkUpAccess>
	  HAL_PWR_EnableBkUpAccess();
 8002324:	f005 ff0a 	bl	800813c <HAL_PWR_EnableBkUpAccess>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8002328:	f44f 6200 	mov.w	r2, #2048	@ 0x800
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
 800232c:	f44f 7340 	mov.w	r3, #768	@ 0x300
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002330:	a802      	add	r0, sp, #8
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8002332:	9202      	str	r2, [sp, #8]
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
 8002334:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002336:	f006 fd41 	bl	8008dbc <HAL_RCCEx_PeriphCLKConfig>
 800233a:	b9d0      	cbnz	r0, 8002372 <HAL_RTC_MspInit+0x6e>
  * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
  * @retval None
  */
__STATIC_INLINE void LL_RCC_EnableRTC(void)
{
  SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
 800233c:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(RTC_WKUP_IRQn, 5, 0);
 8002340:	2200      	movs	r2, #0
 8002342:	f8d3 0090 	ldr.w	r0, [r3, #144]	@ 0x90
 8002346:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 800234a:	f8c3 0090 	str.w	r0, [r3, #144]	@ 0x90
  SET_BIT(RCC->APB1ENR1, Periphs);
 800234e:	6d9c      	ldr	r4, [r3, #88]	@ 0x58
 8002350:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 8002354:	659c      	str	r4, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8002356:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002358:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800235c:	2105      	movs	r1, #5
 800235e:	9301      	str	r3, [sp, #4]
 8002360:	2003      	movs	r0, #3
  (void)tmpreg;
 8002362:	9b01      	ldr	r3, [sp, #4]
 8002364:	f003 fd14 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 8002368:	2003      	movs	r0, #3
 800236a:	f003 fd4d 	bl	8005e08 <HAL_NVIC_EnableIRQ>
}
 800236e:	b016      	add	sp, #88	@ 0x58
 8002370:	bd10      	pop	{r4, pc}
      Error_Handler();
 8002372:	f7ff ff77 	bl	8002264 <Error_Handler>
 8002376:	e7e1      	b.n	800233c <HAL_RTC_MspInit+0x38>
 8002378:	40002800 	.word	0x40002800

0800237c <set_time>:
}

/* USER CODE BEGIN 1 */

void set_time (uint8_t hr, uint8_t min, uint8_t sec)
{
 800237c:	b500      	push	{lr}
 800237e:	b087      	sub	sp, #28
	RTC_TimeTypeDef sTime = {0};
 8002380:	2300      	movs	r3, #0
{
 8002382:	4686      	mov	lr, r0
 8002384:	4694      	mov	ip, r2
	sTime.Hours = hr;
	sTime.Minutes = min;
 8002386:	f88d 1005 	strb.w	r1, [sp, #5]
	sTime.Seconds = sec;
	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
	sTime.StoreOperation = RTC_STOREOPERATION_RESET;
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 800238a:	480e      	ldr	r0, [pc, #56]	@ (80023c4 <set_time+0x48>)
	sTime.Hours = hr;
 800238c:	f88d e004 	strb.w	lr, [sp, #4]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 8002390:	461a      	mov	r2, r3
 8002392:	a901      	add	r1, sp, #4
	RTC_TimeTypeDef sTime = {0};
 8002394:	f88d 3017 	strb.w	r3, [sp, #23]
 8002398:	f8cd 3007 	str.w	r3, [sp, #7]
 800239c:	f8cd 300b 	str.w	r3, [sp, #11]
 80023a0:	f8cd 300f 	str.w	r3, [sp, #15]
 80023a4:	f8cd 3013 	str.w	r3, [sp, #19]
	sTime.Seconds = sec;
 80023a8:	f88d c006 	strb.w	ip, [sp, #6]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 80023ac:	f006 ff72 	bl	8009294 <HAL_RTC_SetTime>
 80023b0:	b910      	cbnz	r0, 80023b8 <set_time+0x3c>
	{
		Error_Handler();
	}
}
 80023b2:	b007      	add	sp, #28
 80023b4:	f85d fb04 	ldr.w	pc, [sp], #4
		Error_Handler();
 80023b8:	f7ff ff54 	bl	8002264 <Error_Handler>
}
 80023bc:	b007      	add	sp, #28
 80023be:	f85d fb04 	ldr.w	pc, [sp], #4
 80023c2:	bf00      	nop
 80023c4:	20001074 	.word	0x20001074

080023c8 <get_time_date>:
	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x2345);  // backup register
}


void get_time_date()
{
 80023c8:	b510      	push	{r4, lr}
  RTC_DateTypeDef gDate;
  RTC_TimeTypeDef gTime;

  /* Get the RTC current Time */
  HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 80023ca:	4c14      	ldr	r4, [pc, #80]	@ (800241c <get_time_date+0x54>)
{
 80023cc:	b086      	sub	sp, #24
  HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 80023ce:	a901      	add	r1, sp, #4
 80023d0:	2200      	movs	r2, #0
 80023d2:	4620      	mov	r0, r4
 80023d4:	f007 f812 	bl	80093fc <HAL_RTC_GetTime>
  /* Get the RTC current Date */
  HAL_RTC_GetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 80023d8:	4669      	mov	r1, sp
 80023da:	2200      	movs	r2, #0
 80023dc:	4620      	mov	r0, r4
 80023de:	f007 f8f5 	bl	80095cc <HAL_RTC_GetDate>

  SEC=gTime.Seconds;
  HR=gTime.Hours;
 80023e2:	4c0f      	ldr	r4, [pc, #60]	@ (8002420 <get_time_date+0x58>)
  SEC=gTime.Seconds;
 80023e4:	490f      	ldr	r1, [pc, #60]	@ (8002424 <get_time_date+0x5c>)
 80023e6:	f89d 0006 	ldrb.w	r0, [sp, #6]
  MINUTE=gTime.Minutes;
 80023ea:	4a0f      	ldr	r2, [pc, #60]	@ (8002428 <get_time_date+0x60>)
  HR=gTime.Hours;
 80023ec:	f89d c004 	ldrb.w	ip, [sp, #4]
  SEC=gTime.Seconds;
 80023f0:	7008      	strb	r0, [r1, #0]
  HR=gTime.Hours;
 80023f2:	f884 c000 	strb.w	ip, [r4]
  JOURS=gDate.Date;
 80023f6:	480d      	ldr	r0, [pc, #52]	@ (800242c <get_time_date+0x64>)
  MINUTE=gTime.Minutes;
 80023f8:	f89d 4005 	ldrb.w	r4, [sp, #5]
 80023fc:	7014      	strb	r4, [r2, #0]
  MOIS=gDate.Month;
  ANNEE=gDate.Year+2000;
 80023fe:	f89d 3003 	ldrb.w	r3, [sp, #3]
  JOURS=gDate.Date;
 8002402:	f89d 4002 	ldrb.w	r4, [sp, #2]
  MOIS=gDate.Month;
 8002406:	490a      	ldr	r1, [pc, #40]	@ (8002430 <get_time_date+0x68>)
  ANNEE=gDate.Year+2000;
 8002408:	4a0a      	ldr	r2, [pc, #40]	@ (8002434 <get_time_date+0x6c>)
  JOURS=gDate.Date;
 800240a:	7004      	strb	r4, [r0, #0]
  MOIS=gDate.Month;
 800240c:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8002410:	7008      	strb	r0, [r1, #0]
  ANNEE=gDate.Year+2000;
 8002412:	f503 63fa 	add.w	r3, r3, #2000	@ 0x7d0
 8002416:	8013      	strh	r3, [r2, #0]
  /* Display time Format: hh:mm:ss */
  //sprintf((char*)time,"%02d:%02d:%02d",gTime.Hours, gTime.Minutes, gTime.Seconds);

  /* Display date Format: dd-mm-yyyy */
  //sprintf((char*)date,"%02d-%02d-%2d",gDate.Date, gDate.Month, 2000 + gDate.Year);
}
 8002418:	b006      	add	sp, #24
 800241a:	bd10      	pop	{r4, pc}
 800241c:	20001074 	.word	0x20001074
 8002420:	200005fd 	.word	0x200005fd
 8002424:	200005fe 	.word	0x200005fe
 8002428:	200005fc 	.word	0x200005fc
 800242c:	2000001b 	.word	0x2000001b
 8002430:	2000001a 	.word	0x2000001a
 8002434:	20000018 	.word	0x20000018

08002438 <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8002438:	b510      	push	{r4, lr}
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 800243a:	4811      	ldr	r0, [pc, #68]	@ (8002480 <MX_SPI1_Init+0x48>)
 800243c:	4c11      	ldr	r4, [pc, #68]	@ (8002484 <MX_SPI1_Init+0x4c>)
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800243e:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002442:	2300      	movs	r3, #0
 8002444:	e9c0 4200 	strd	r4, r2, [r0]
 8002448:	f44f 61e0 	mov.w	r1, #1792	@ 0x700
 800244c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002450:	e9c0 3102 	strd	r3, r1, [r0, #8]
 8002454:	2410      	movs	r4, #16
 8002456:	6182      	str	r2, [r0, #24]
 8002458:	2107      	movs	r1, #7
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi1.Init.CRCPolynomial = 7;
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800245a:	2208      	movs	r2, #8
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800245c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002460:	e9c0 4307 	strd	r4, r3, [r0, #28]
 8002464:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 8002468:	e9c0 130b 	strd	r1, r3, [r0, #44]	@ 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800246c:	6342      	str	r2, [r0, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800246e:	f007 fa9d 	bl	80099ac <HAL_SPI_Init>
 8002472:	b900      	cbnz	r0, 8002476 <MX_SPI1_Init+0x3e>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002474:	bd10      	pop	{r4, pc}
 8002476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 800247a:	f7ff bef3 	b.w	8002264 <Error_Handler>
 800247e:	bf00      	nop
 8002480:	20001098 	.word	0x20001098
 8002484:	40013000 	.word	0x40013000

08002488 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002488:	b530      	push	{r4, r5, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(spiHandle->Instance==SPI1)
 800248a:	4b25      	ldr	r3, [pc, #148]	@ (8002520 <HAL_SPI_MspInit+0x98>)
 800248c:	6802      	ldr	r2, [r0, #0]
{
 800248e:	b08b      	sub	sp, #44	@ 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002490:	2400      	movs	r4, #0
  if(spiHandle->Instance==SPI1)
 8002492:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002494:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8002498:	e9cd 4406 	strd	r4, r4, [sp, #24]
 800249c:	9408      	str	r4, [sp, #32]
  if(spiHandle->Instance==SPI1)
 800249e:	d001      	beq.n	80024a4 <HAL_SPI_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 80024a0:	b00b      	add	sp, #44	@ 0x2c
 80024a2:	bd30      	pop	{r4, r5, pc}
  * @retval None
  */
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 80024a4:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80024a8:	2505      	movs	r5, #5
 80024aa:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80024ac:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80024b0:	661a      	str	r2, [r3, #96]	@ 0x60
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 80024b2:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80024b4:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80024b8:	9203      	str	r2, [sp, #12]
  (void)tmpreg;
 80024ba:	9a03      	ldr	r2, [sp, #12]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80024bc:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024be:	f042 0201 	orr.w	r2, r2, #1
 80024c2:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80024c4:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024c6:	f002 0201 	and.w	r2, r2, #1
 80024ca:	9202      	str	r2, [sp, #8]
  (void)tmpreg;
 80024cc:	9a02      	ldr	r2, [sp, #8]
  SET_BIT(RCC->AHB2ENR, Periphs);
 80024ce:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80024d0:	f042 0202 	orr.w	r2, r2, #2
 80024d4:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80024d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80024d8:	9508      	str	r5, [sp, #32]
 80024da:	f003 0302 	and.w	r3, r3, #2
 80024de:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80024e0:	2242      	movs	r2, #66	@ 0x42
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024e2:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80024e4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024e6:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6;
 80024ea:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)tmpreg;
 80024ee:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024f0:	f003 fe40 	bl	8006174 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024f4:	2302      	movs	r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 80024f6:	2220      	movs	r2, #32
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024f8:	a904      	add	r1, sp, #16
 80024fa:	480a      	ldr	r0, [pc, #40]	@ (8002524 <HAL_SPI_MspInit+0x9c>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80024fc:	9508      	str	r5, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fe:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002502:	e9cd 4406 	strd	r4, r4, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002506:	f003 fe35 	bl	8006174 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(SPI1_IRQn, 7, 0);
 800250a:	4622      	mov	r2, r4
 800250c:	2107      	movs	r1, #7
 800250e:	2022      	movs	r0, #34	@ 0x22
 8002510:	f003 fc3e 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002514:	2022      	movs	r0, #34	@ 0x22
 8002516:	f003 fc77 	bl	8005e08 <HAL_NVIC_EnableIRQ>
}
 800251a:	b00b      	add	sp, #44	@ 0x2c
 800251c:	bd30      	pop	{r4, r5, pc}
 800251e:	bf00      	nop
 8002520:	40013000 	.word	0x40013000
 8002524:	48000400 	.word	0x48000400

08002528 <csvframe>:
  /* USER CODE END SPI1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 8002528:	b084      	sub	sp, #16
 800252a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	int framesize=0;
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 800252c:	ed8d 2b1a 	vstr	d2, [sp, #104]	@ 0x68
 8002530:	4e2b      	ldr	r6, [pc, #172]	@ (80025e0 <csvframe+0xb8>)
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 8002532:	9f39      	ldr	r7, [sp, #228]	@ 0xe4
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 8002534:	7836      	ldrb	r6, [r6, #0]
 8002536:	9621      	str	r6, [sp, #132]	@ 0x84
 8002538:	4e2a      	ldr	r6, [pc, #168]	@ (80025e4 <csvframe+0xbc>)
 800253a:	7836      	ldrb	r6, [r6, #0]
 800253c:	9620      	str	r6, [sp, #128]	@ 0x80
 800253e:	4e2a      	ldr	r6, [pc, #168]	@ (80025e8 <csvframe+0xc0>)
 8002540:	7836      	ldrb	r6, [r6, #0]
 8002542:	961f      	str	r6, [sp, #124]	@ 0x7c
 8002544:	4e29      	ldr	r6, [pc, #164]	@ (80025ec <csvframe+0xc4>)
 8002546:	7836      	ldrb	r6, [r6, #0]
 8002548:	961e      	str	r6, [sp, #120]	@ 0x78
 800254a:	4e29      	ldr	r6, [pc, #164]	@ (80025f0 <csvframe+0xc8>)
 800254c:	7836      	ldrb	r6, [r6, #0]
 800254e:	961d      	str	r6, [sp, #116]	@ 0x74
 8002550:	4e28      	ldr	r6, [pc, #160]	@ (80025f4 <csvframe+0xcc>)
 8002552:	8836      	ldrh	r6, [r6, #0]
 8002554:	961c      	str	r6, [sp, #112]	@ 0x70
int csvframe(uint8_t* buffer,float temp,float vbat,GNSS_StateHandle GNSSData,int otherval1,float otherval2,double baroalt){
 8002556:	ae07      	add	r6, sp, #28
 8002558:	e886 000e 	stmia.w	r6, {r1, r2, r3}
 800255c:	4604      	mov	r4, r0
 800255e:	ee11 0a10 	vmov	r0, s2
 8002562:	ee10 5a10 	vmov	r5, s0
 8002566:	ee10 6a90 	vmov	r6, s1
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 800256a:	f7fd ffc5 	bl	80004f8 <__aeabi_f2d>
 800256e:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
 8002572:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8002574:	9716      	str	r7, [sp, #88]	@ 0x58
 8002576:	f7fd ffbf 	bl	80004f8 <__aeabi_f2d>
 800257a:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
 800257e:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8002580:	f7fd ffba 	bl	80004f8 <__aeabi_f2d>
 8002584:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
 8002588:	982b      	ldr	r0, [sp, #172]	@ 0xac
 800258a:	f7fd ffb5 	bl	80004f8 <__aeabi_f2d>
 800258e:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002592:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8002594:	f7fd ffb0 	bl	80004f8 <__aeabi_f2d>
 8002598:	a30f      	add	r3, pc, #60	@ (adr r3, 80025d8 <csvframe+0xb0>)
 800259a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800259e:	f7fe f803 	bl	80005a8 <__aeabi_dmul>
 80025a2:	4602      	mov	r2, r0
 80025a4:	460b      	mov	r3, r1
 80025a6:	4630      	mov	r0, r6
 80025a8:	e9cd 230e 	strd	r2, r3, [sp, #56]	@ 0x38
 80025ac:	f7fd ffa4 	bl	80004f8 <__aeabi_f2d>
 80025b0:	4602      	mov	r2, r0
 80025b2:	460b      	mov	r3, r1
 80025b4:	4628      	mov	r0, r5
 80025b6:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80025ba:	f7fd ff9d 	bl	80004f8 <__aeabi_f2d>
 80025be:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80025c2:	4620      	mov	r0, r4
	return framesize;
}
 80025c4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 80025c8:	4a0b      	ldr	r2, [pc, #44]	@ (80025f8 <csvframe+0xd0>)
 80025ca:	f44f 7180 	mov.w	r1, #256	@ 0x100
}
 80025ce:	b004      	add	sp, #16
	framesize=snprintf((char *)buffer,256, "%0.2f,%0.3f,%0.2f,%0.7f,%0.7f,%0.2f,%d,%0.2f,%0.2lf,%d-%02d-%02dT%02d:%02d:%02d.00+02:00\n\r",temp,vbat,(GNSSData.fgSpeed)*3.6,GNSSData.fLat,GNSSData.fLon,GNSSData.fhMSL,otherval1,otherval2,baroalt,ANNEE,MOIS,JOURS,HR,MINUTE,SEC);
 80025d0:	f00d bd76 	b.w	80100c0 <sniprintf>
 80025d4:	f3af 8000 	nop.w
 80025d8:	cccccccd 	.word	0xcccccccd
 80025dc:	400ccccc 	.word	0x400ccccc
 80025e0:	200005fe 	.word	0x200005fe
 80025e4:	200005fc 	.word	0x200005fc
 80025e8:	200005fd 	.word	0x200005fd
 80025ec:	2000001b 	.word	0x2000001b
 80025f0:	2000001a 	.word	0x2000001a
 80025f4:	20000018 	.word	0x20000018
 80025f8:	08015d4c 	.word	0x08015d4c

080025fc <storeindex>:


void storeindex(void){
 80025fc:	b530      	push	{r4, r5, lr}
	int writepage=MAX_WRITE_PAGE+1;
	uint8_t writebuffer[10];
	memset((uint8_t*)writebuffer,'\0',10);
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 80025fe:	4b13      	ldr	r3, [pc, #76]	@ (800264c <storeindex+0x50>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
	writebuffer[1]=debut;
	writebuffer[2]=fin;
	writebuffer[3]=6;
	writebuffer[4]=6;
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002600:	4d13      	ldr	r5, [pc, #76]	@ (8002650 <storeindex+0x54>)
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002602:	681b      	ldr	r3, [r3, #0]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 8002604:	4a13      	ldr	r2, [pc, #76]	@ (8002654 <storeindex+0x58>)
void storeindex(void){
 8002606:	b087      	sub	sp, #28
	memset((uint8_t*)writebuffer,'\0',10);
 8002608:	2400      	movs	r4, #0
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 800260a:	f88d 300e 	strb.w	r3, [sp, #14]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800260e:	f3c3 2307 	ubfx	r3, r3, #8, #8
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 8002612:	6812      	ldr	r2, [r2, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002614:	f88d 300d 	strb.w	r3, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002618:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 800261c:	f240 6306 	movw	r3, #1542	@ 0x606
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002620:	4628      	mov	r0, r5
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 8002622:	f88d 200c 	strb.w	r2, [sp, #12]
	writebuffer[3]=6;
 8002626:	f8ad 300f 	strh.w	r3, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 800262a:	f88d 4015 	strb.w	r4, [sp, #21]
 800262e:	f8cd 4011 	str.w	r4, [sp, #17]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002632:	f00c f9c1 	bl	800e9b8 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 8002636:	2305      	movs	r3, #5
 8002638:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 800263c:	9400      	str	r4, [sp, #0]
 800263e:	aa03      	add	r2, sp, #12
 8002640:	4628      	mov	r0, r5
 8002642:	f00c fa3d 	bl	800eac0 <SPIF_WritePage>

}
 8002646:	b007      	add	sp, #28
 8002648:	bd30      	pop	{r4, r5, pc}
 800264a:	bf00      	nop
 800264c:	200006b8 	.word	0x200006b8
 8002650:	20000fd4 	.word	0x20000fd4
 8002654:	200006bc 	.word	0x200006bc

08002658 <getindex>:

void getindex(void){
 8002658:	b510      	push	{r4, lr}
	int readpage=MAX_WRITE_PAGE+1;
	SPIF_ReadPage(&hspif1, readpage, (uint8_t *)indexbuffer, 5, 0);
 800265a:	4c20      	ldr	r4, [pc, #128]	@ (80026dc <getindex+0x84>)
 800265c:	4820      	ldr	r0, [pc, #128]	@ (80026e0 <getindex+0x88>)
void getindex(void){
 800265e:	b086      	sub	sp, #24
	SPIF_ReadPage(&hspif1, readpage, (uint8_t *)indexbuffer, 5, 0);
 8002660:	2300      	movs	r3, #0
 8002662:	9300      	str	r3, [sp, #0]
 8002664:	4622      	mov	r2, r4
 8002666:	2305      	movs	r3, #5
 8002668:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 800266c:	f00c fa46 	bl	800eafc <SPIF_ReadPage>
	if((indexbuffer[3]==6)&&(indexbuffer[4]==6) ){
 8002670:	78e3      	ldrb	r3, [r4, #3]
 8002672:	2b06      	cmp	r3, #6
 8002674:	d102      	bne.n	800267c <getindex+0x24>
 8002676:	7923      	ldrb	r3, [r4, #4]
 8002678:	2b06      	cmp	r3, #6
 800267a:	d023      	beq.n	80026c4 <getindex+0x6c>
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800267c:	4b19      	ldr	r3, [pc, #100]	@ (80026e4 <getindex+0x8c>)
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 800267e:	4a1a      	ldr	r2, [pc, #104]	@ (80026e8 <getindex+0x90>)
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002680:	681b      	ldr	r3, [r3, #0]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 8002682:	6811      	ldr	r1, [r2, #0]
 8002684:	f88d 100c 	strb.w	r1, [sp, #12]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002688:	f3c3 2207 	ubfx	r2, r3, #8, #8
	memset((uint8_t*)writebuffer,'\0',10);
 800268c:	2400      	movs	r4, #0
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800268e:	f88d 200d 	strb.w	r2, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002692:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 8002696:	f240 6206 	movw	r2, #1542	@ 0x606
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800269a:	4811      	ldr	r0, [pc, #68]	@ (80026e0 <getindex+0x88>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 800269c:	f88d 300e 	strb.w	r3, [sp, #14]
	writebuffer[3]=6;
 80026a0:	f8ad 200f 	strh.w	r2, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 80026a4:	f88d 4015 	strb.w	r4, [sp, #21]
 80026a8:	f8cd 4011 	str.w	r4, [sp, #17]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 80026ac:	f00c f984 	bl	800e9b8 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 80026b0:	2305      	movs	r3, #5
 80026b2:	9400      	str	r4, [sp, #0]
 80026b4:	aa03      	add	r2, sp, #12
 80026b6:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 80026ba:	4809      	ldr	r0, [pc, #36]	@ (80026e0 <getindex+0x88>)
 80026bc:	f00c fa00 	bl	800eac0 <SPIF_WritePage>
	}
	else{
		storeindex();
	}

}
 80026c0:	b006      	add	sp, #24
 80026c2:	bd10      	pop	{r4, pc}
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026c4:	f8b4 3001 	ldrh.w	r3, [r4, #1]
		pageoffset=(int)indexbuffer[0];
 80026c8:	4907      	ldr	r1, [pc, #28]	@ (80026e8 <getindex+0x90>)
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026ca:	4a06      	ldr	r2, [pc, #24]	@ (80026e4 <getindex+0x8c>)
		pageoffset=(int)indexbuffer[0];
 80026cc:	7820      	ldrb	r0, [r4, #0]
 80026ce:	6008      	str	r0, [r1, #0]
		pagenumber=(int)((indexbuffer[1]<<8)|indexbuffer[2]);
 80026d0:	ba5b      	rev16	r3, r3
 80026d2:	b29b      	uxth	r3, r3
 80026d4:	6013      	str	r3, [r2, #0]
}
 80026d6:	b006      	add	sp, #24
 80026d8:	bd10      	pop	{r4, pc}
 80026da:	bf00      	nop
 80026dc:	200010fc 	.word	0x200010fc
 80026e0:	20000fd4 	.word	0x20000fd4
 80026e4:	200006b8 	.word	0x200006b8
 80026e8:	200006bc 	.word	0x200006bc

080026ec <writebuffertoflash>:

void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 80026ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	if((pagenumber+1)%16==0){
 80026f0:	4f38      	ldr	r7, [pc, #224]	@ (80027d4 <writebuffertoflash+0xe8>)
		if(sectoreraseen==0){
 80026f2:	f8df 80ec 	ldr.w	r8, [pc, #236]	@ 80027e0 <writebuffertoflash+0xf4>
	if((pagenumber+1)%16==0){
 80026f6:	f8d7 c000 	ldr.w	ip, [r7]
void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 80026fa:	460c      	mov	r4, r1
	if((pagenumber+1)%16==0){
 80026fc:	f10c 0201 	add.w	r2, ip, #1
		if(sectoreraseen==0){
 8002700:	f8d8 1000 	ldr.w	r1, [r8]
 8002704:	f002 030f 	and.w	r3, r2, #15
 8002708:	430b      	orrs	r3, r1
void writebuffertoflash(uint8_t * buffer,int bufferlenght){
 800270a:	b087      	sub	sp, #28
 800270c:	4606      	mov	r6, r0
		if(sectoreraseen==0){
 800270e:	d053      	beq.n	80027b8 <writebuffertoflash+0xcc>
		SPIF_EraseSector(&hspif1, (int)floor((pagenumber+1)/16));
		sectoreraseen=1;
		}

		  }
	if(bufferlenght+pageoffset<256){
 8002710:	4d31      	ldr	r5, [pc, #196]	@ (80027d8 <writebuffertoflash+0xec>)
 8002712:	682b      	ldr	r3, [r5, #0]
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 8002714:	9300      	str	r3, [sp, #0]
	if(bufferlenght+pageoffset<256){
 8002716:	191a      	adds	r2, r3, r4
 8002718:	2aff      	cmp	r2, #255	@ 0xff
 800271a:	dc2a      	bgt.n	8002772 <writebuffertoflash+0x86>
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 800271c:	4623      	mov	r3, r4
 800271e:	4632      	mov	r2, r6
 8002720:	482e      	ldr	r0, [pc, #184]	@ (80027dc <writebuffertoflash+0xf0>)
 8002722:	4661      	mov	r1, ip
 8002724:	f00c f9cc 	bl	800eac0 <SPIF_WritePage>
		pageoffset=pageoffset+bufferlenght;
 8002728:	682a      	ldr	r2, [r5, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800272a:	683b      	ldr	r3, [r7, #0]
		pageoffset=pageoffset+bufferlenght;
 800272c:	4414      	add	r4, r2
 800272e:	602c      	str	r4, [r5, #0]
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 8002730:	f3c3 2107 	ubfx	r1, r3, #8, #8
	memset((uint8_t*)writebuffer,'\0',10);
 8002734:	2500      	movs	r5, #0
	writebuffer[3]=6;
 8002736:	f240 6206 	movw	r2, #1542	@ 0x606
	uint8_t debut=(((uint16_t)pagenumber)>>8)&0xFF;
 800273a:	f88d 100d 	strb.w	r1, [sp, #13]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 800273e:	4827      	ldr	r0, [pc, #156]	@ (80027dc <writebuffertoflash+0xf0>)
	uint8_t fin=((uint16_t)pagenumber)&0xFF;
 8002740:	f88d 300e 	strb.w	r3, [sp, #14]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002744:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
	writebuffer[3]=6;
 8002748:	f8ad 200f 	strh.w	r2, [sp, #15]
	memset((uint8_t*)writebuffer,'\0',10);
 800274c:	f88d 5015 	strb.w	r5, [sp, #21]
 8002750:	f8cd 5011 	str.w	r5, [sp, #17]
	writebuffer[0]=((uint8_t)pageoffset)&0xFF;
 8002754:	f88d 400c 	strb.w	r4, [sp, #12]
	SPIF_EraseSector(&hspif1, (int)floor((writepage)/16));
 8002758:	f00c f92e 	bl	800e9b8 <SPIF_EraseSector>
	SPIF_WritePage(&hspif1,writepage, (uint8_t *)writebuffer, 5,0);
 800275c:	2305      	movs	r3, #5
 800275e:	9500      	str	r5, [sp, #0]
 8002760:	aa03      	add	r2, sp, #12
 8002762:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 8002766:	481d      	ldr	r0, [pc, #116]	@ (80027dc <writebuffertoflash+0xf0>)
 8002768:	f00c f9aa 	bl	800eac0 <SPIF_WritePage>
		sectoreraseen=0;
		pageoffset=(bufferlenght-(256-pageoffset));
	}
	storeindex();

}
 800276c:	b007      	add	sp, #28
 800276e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, 256-pageoffset,pageoffset);
 8002772:	4661      	mov	r1, ip
 8002774:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8002778:	4632      	mov	r2, r6
 800277a:	4818      	ldr	r0, [pc, #96]	@ (80027dc <writebuffertoflash+0xf0>)
 800277c:	f00c f9a0 	bl	800eac0 <SPIF_WritePage>
		SPIF_WritePage(&hspif1,pagenumber+1, (uint8_t *)buffer+(256-pageoffset), bufferlenght-(256-pageoffset),0);
 8002780:	f04f 0900 	mov.w	r9, #0
		HAL_Delay(100);
 8002784:	2064      	movs	r0, #100	@ 0x64
 8002786:	f002 fecd 	bl	8005524 <HAL_Delay>
		SPIF_WritePage(&hspif1,pagenumber+1, (uint8_t *)buffer+(256-pageoffset), bufferlenght-(256-pageoffset),0);
 800278a:	f8cd 9000 	str.w	r9, [sp]
 800278e:	682b      	ldr	r3, [r5, #0]
 8002790:	6839      	ldr	r1, [r7, #0]
 8002792:	4812      	ldr	r0, [pc, #72]	@ (80027dc <writebuffertoflash+0xf0>)
 8002794:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 8002798:	18f2      	adds	r2, r6, r3
 800279a:	3101      	adds	r1, #1
 800279c:	1ae3      	subs	r3, r4, r3
 800279e:	f00c f98f 	bl	800eac0 <SPIF_WritePage>
		pageoffset=(bufferlenght-(256-pageoffset));
 80027a2:	682b      	ldr	r3, [r5, #0]
		sectoreraseen=0;
 80027a4:	f8c8 9000 	str.w	r9, [r8]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027a8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80027ac:	1ae4      	subs	r4, r4, r3
		pagenumber=pagenumber+1;
 80027ae:	683b      	ldr	r3, [r7, #0]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027b0:	602c      	str	r4, [r5, #0]
		pagenumber=pagenumber+1;
 80027b2:	3301      	adds	r3, #1
 80027b4:	603b      	str	r3, [r7, #0]
		pageoffset=(bufferlenght-(256-pageoffset));
 80027b6:	e7bb      	b.n	8002730 <writebuffertoflash+0x44>
		SPIF_EraseSector(&hspif1, (int)floor((pagenumber+1)/16));
 80027b8:	1e11      	subs	r1, r2, #0
 80027ba:	bfb8      	it	lt
 80027bc:	f10c 0110 	addlt.w	r1, ip, #16
 80027c0:	4806      	ldr	r0, [pc, #24]	@ (80027dc <writebuffertoflash+0xf0>)
 80027c2:	1109      	asrs	r1, r1, #4
 80027c4:	f00c f8f8 	bl	800e9b8 <SPIF_EraseSector>
		sectoreraseen=1;
 80027c8:	2301      	movs	r3, #1
		SPIF_WritePage(&hspif1,pagenumber, (uint8_t *)buffer, bufferlenght,pageoffset);
 80027ca:	f8d7 c000 	ldr.w	ip, [r7]
		sectoreraseen=1;
 80027ce:	f8c8 3000 	str.w	r3, [r8]
 80027d2:	e79d      	b.n	8002710 <writebuffertoflash+0x24>
 80027d4:	200006b8 	.word	0x200006b8
 80027d8:	200006bc 	.word	0x200006bc
 80027dc:	20000fd4 	.word	0x20000fd4
 80027e0:	200006b4 	.word	0x200006b4

080027e4 <ssd1306_Line.constprop.0>:
    SSD1306.CurrentX = x;
    SSD1306.CurrentY = y;
}

/* Draw line by Bresenhem's algorithm */
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 80027e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    int32_t deltaX = abs(x2 - x1);
 80027e8:	1a16      	subs	r6, r2, r0
    int32_t deltaY = abs(y2 - y1);
 80027ea:	eba3 0b01 	sub.w	fp, r3, r1
    int32_t deltaX = abs(x2 - x1);
 80027ee:	2e00      	cmp	r6, #0
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 80027f0:	b085      	sub	sp, #20
    int32_t deltaX = abs(x2 - x1);
 80027f2:	bfb8      	it	lt
 80027f4:	4276      	neglt	r6, r6
    int32_t deltaY = abs(y2 - y1);
 80027f6:	f1bb 0f00 	cmp.w	fp, #0
 80027fa:	bfb8      	it	lt
 80027fc:	f1cb 0b00 	rsblt	fp, fp, #0
void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 8002800:	469a      	mov	sl, r3
    int32_t signX = ((x1 < x2) ? 1 : -1);
 8002802:	4282      	cmp	r2, r0
 8002804:	bf94      	ite	ls
 8002806:	f04f 33ff 	movls.w	r3, #4294967295
 800280a:	2301      	movhi	r3, #1
 800280c:	9301      	str	r3, [sp, #4]
    int32_t signY = ((y1 < y2) ? 1 : -1);
 800280e:	458a      	cmp	sl, r1
 8002810:	bf94      	ite	ls
 8002812:	f04f 33ff 	movls.w	r3, #4294967295
 8002816:	2301      	movhi	r3, #1
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002818:	0617      	lsls	r7, r2, #24
    int32_t signY = ((y1 < y2) ? 1 : -1);
 800281a:	9302      	str	r3, [sp, #8]
    int32_t error = deltaX - deltaY;
 800281c:	eba6 0e0b 	sub.w	lr, r6, fp
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002820:	d40f      	bmi.n	8002842 <ssd1306_Line.constprop.0+0x5e>
 8002822:	f1ba 0f3f 	cmp.w	sl, #63	@ 0x3f
 8002826:	d80c      	bhi.n	8002842 <ssd1306_Line.constprop.0+0x5e>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002828:	ea4f 04da 	mov.w	r4, sl, lsr #3
 800282c:	4d21      	ldr	r5, [pc, #132]	@ (80028b4 <ssd1306_Line.constprop.0+0xd0>)
 800282e:	eb02 14c4 	add.w	r4, r2, r4, lsl #7
 8002832:	f00a 0c07 	and.w	ip, sl, #7
 8002836:	5d2f      	ldrb	r7, [r5, r4]
 8002838:	2301      	movs	r3, #1
 800283a:	fa03 f30c 	lsl.w	r3, r3, ip
 800283e:	433b      	orrs	r3, r7
 8002840:	552b      	strb	r3, [r5, r4]
 8002842:	4b1c      	ldr	r3, [pc, #112]	@ (80028b4 <ssd1306_Line.constprop.0+0xd0>)
 8002844:	f8cd b00c 	str.w	fp, [sp, #12]
 8002848:	2780      	movs	r7, #128	@ 0x80
    ssd1306_DrawPixel(x2, y2, color);

    while((x1 != x2) || (y1 != y2)) {
        ssd1306_DrawPixel(x1, y1, color);
        error2 = error * 2;
        if(error2 > -deltaY) {
 800284a:	f1cb 0800 	rsb	r8, fp, #0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800284e:	08cc      	lsrs	r4, r1, #3
    while((x1 != x2) || (y1 != y2)) {
 8002850:	4282      	cmp	r2, r0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002852:	fb17 0404 	smlabb	r4, r7, r4, r0
        error2 = error * 2;
 8002856:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
    while((x1 != x2) || (y1 != y2)) {
 800285a:	d101      	bne.n	8002860 <ssd1306_Line.constprop.0+0x7c>
 800285c:	458a      	cmp	sl, r1
 800285e:	d026      	beq.n	80028ae <ssd1306_Line.constprop.0+0xca>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002860:	0605      	lsls	r5, r0, #24
 8002862:	d40c      	bmi.n	800287e <ssd1306_Line.constprop.0+0x9a>
 8002864:	293f      	cmp	r1, #63	@ 0x3f
 8002866:	d80a      	bhi.n	800287e <ssd1306_Line.constprop.0+0x9a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002868:	f813 9004 	ldrb.w	r9, [r3, r4]
 800286c:	f001 0507 	and.w	r5, r1, #7
 8002870:	f04f 0b01 	mov.w	fp, #1
 8002874:	fa0b f505 	lsl.w	r5, fp, r5
 8002878:	ea45 0509 	orr.w	r5, r5, r9
 800287c:	551d      	strb	r5, [r3, r4]
        if(error2 > -deltaY) {
 800287e:	ebb8 0f4e 	cmp.w	r8, lr, lsl #1
 8002882:	da05      	bge.n	8002890 <ssd1306_Line.constprop.0+0xac>
            error -= deltaY;
            x1 += signX;
 8002884:	9c01      	ldr	r4, [sp, #4]
 8002886:	4420      	add	r0, r4
            error -= deltaY;
 8002888:	9c03      	ldr	r4, [sp, #12]
            x1 += signX;
 800288a:	b2c0      	uxtb	r0, r0
            error -= deltaY;
 800288c:	ebae 0e04 	sub.w	lr, lr, r4
        }
        
        if(error2 < deltaX) {
 8002890:	4566      	cmp	r6, ip
 8002892:	dddc      	ble.n	800284e <ssd1306_Line.constprop.0+0x6a>
            error += deltaX;
            y1 += signY;
 8002894:	9c02      	ldr	r4, [sp, #8]
 8002896:	4421      	add	r1, r4
 8002898:	b2c9      	uxtb	r1, r1
            error += deltaX;
 800289a:	44b6      	add	lr, r6
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800289c:	08cc      	lsrs	r4, r1, #3
    while((x1 != x2) || (y1 != y2)) {
 800289e:	4282      	cmp	r2, r0
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028a0:	fb17 0404 	smlabb	r4, r7, r4, r0
        error2 = error * 2;
 80028a4:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
    while((x1 != x2) || (y1 != y2)) {
 80028a8:	d1da      	bne.n	8002860 <ssd1306_Line.constprop.0+0x7c>
 80028aa:	458a      	cmp	sl, r1
 80028ac:	d1d8      	bne.n	8002860 <ssd1306_Line.constprop.0+0x7c>
        }
    }
    return;
}
 80028ae:	b005      	add	sp, #20
 80028b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80028b4:	20001138 	.word	0x20001138

080028b8 <ssd1306_WriteChar.constprop.0.isra.0>:
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 80028b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (ch < 32 || ch > 126)
 80028bc:	f1a0 0520 	sub.w	r5, r0, #32
 80028c0:	b2ec      	uxtb	r4, r5
 80028c2:	2c5e      	cmp	r4, #94	@ 0x5e
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 80028c4:	b083      	sub	sp, #12
    if (ch < 32 || ch > 126)
 80028c6:	d866      	bhi.n	8002996 <ssd1306_WriteChar.constprop.0.isra.0+0xde>
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 80028c8:	4f35      	ldr	r7, [pc, #212]	@ (80029a0 <ssd1306_WriteChar.constprop.0.isra.0+0xe8>)
 80028ca:	883e      	ldrh	r6, [r7, #0]
 80028cc:	1874      	adds	r4, r6, r1
 80028ce:	2c80      	cmp	r4, #128	@ 0x80
 80028d0:	dc61      	bgt.n	8002996 <ssd1306_WriteChar.constprop.0.isra.0+0xde>
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 80028d2:	887f      	ldrh	r7, [r7, #2]
 80028d4:	eb07 0c02 	add.w	ip, r7, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 80028d8:	f1bc 0f40 	cmp.w	ip, #64	@ 0x40
 80028dc:	dc5b      	bgt.n	8002996 <ssd1306_WriteChar.constprop.0.isra.0+0xde>
    for(i = 0; i < Font.FontHeight; i++) {
 80028de:	2a00      	cmp	r2, #0
 80028e0:	d054      	beq.n	800298c <ssd1306_WriteChar.constprop.0.isra.0+0xd4>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 80028e2:	fb02 f505 	mul.w	r5, r2, r5
 80028e6:	2900      	cmp	r1, #0
 80028e8:	d050      	beq.n	800298c <ssd1306_WriteChar.constprop.0.isra.0+0xd4>
 80028ea:	442a      	add	r2, r5
 80028ec:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 80028f0:	3d01      	subs	r5, #1
 80028f2:	eb03 0545 	add.w	r5, r3, r5, lsl #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80028f6:	f8df 80ac 	ldr.w	r8, [pc, #172]	@ 80029a4 <ssd1306_WriteChar.constprop.0.isra.0+0xec>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 80028fa:	9001      	str	r0, [sp, #4]
 80028fc:	3b02      	subs	r3, #2
 80028fe:	eb03 0942 	add.w	r9, r3, r2, lsl #1
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002902:	fa5f fb86 	uxtb.w	fp, r6
 8002906:	b2fb      	uxtb	r3, r7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002908:	46a4      	mov	ip, r4
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 800290a:	2b3f      	cmp	r3, #63	@ 0x3f
 800290c:	f105 0502 	add.w	r5, r5, #2
        for(j = 0; j < Font.FontWidth; j++) {
 8002910:	d836      	bhi.n	8002980 <ssd1306_WriteChar.constprop.0.isra.0+0xc8>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002912:	f003 0e07 	and.w	lr, r3, #7
 8002916:	2201      	movs	r2, #1
 8002918:	fa02 fe0e 	lsl.w	lr, r2, lr
 800291c:	ea6f 0a0e 	mvn.w	sl, lr
 8002920:	08dc      	lsrs	r4, r3, #3
 8002922:	fa5f fa8a 	uxtb.w	sl, sl
        for(j = 0; j < Font.FontWidth; j++) {
 8002926:	9300      	str	r3, [sp, #0]
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002928:	882e      	ldrh	r6, [r5, #0]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800292a:	01e4      	lsls	r4, r4, #7
 800292c:	fa5f fe8e 	uxtb.w	lr, lr
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002930:	465a      	mov	r2, fp
        for(j = 0; j < Font.FontWidth; j++) {
 8002932:	2000      	movs	r0, #0
 8002934:	4653      	mov	r3, sl
 8002936:	e00d      	b.n	8002954 <ssd1306_WriteChar.constprop.0.isra.0+0x9c>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002938:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800293c:	d105      	bne.n	800294a <ssd1306_WriteChar.constprop.0.isra.0+0x92>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800293e:	f818 a007 	ldrb.w	sl, [r8, r7]
 8002942:	ea03 0a0a 	and.w	sl, r3, sl
 8002946:	f808 a007 	strb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 800294a:	3001      	adds	r0, #1
 800294c:	3201      	adds	r2, #1
 800294e:	4288      	cmp	r0, r1
 8002950:	b2d2      	uxtb	r2, r2
 8002952:	d014      	beq.n	800297e <ssd1306_WriteChar.constprop.0.isra.0+0xc6>
            if((b << j) & 0x8000)  {
 8002954:	fa06 f700 	lsl.w	r7, r6, r0
 8002958:	f417 4f00 	tst.w	r7, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800295c:	eb02 0704 	add.w	r7, r2, r4
            if((b << j) & 0x8000)  {
 8002960:	d0ea      	beq.n	8002938 <ssd1306_WriteChar.constprop.0.isra.0+0x80>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002962:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002966:	d1f0      	bne.n	800294a <ssd1306_WriteChar.constprop.0.isra.0+0x92>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002968:	f818 a007 	ldrb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 800296c:	3001      	adds	r0, #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800296e:	ea4e 0a0a 	orr.w	sl, lr, sl
        for(j = 0; j < Font.FontWidth; j++) {
 8002972:	3201      	adds	r2, #1
 8002974:	4288      	cmp	r0, r1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002976:	f808 a007 	strb.w	sl, [r8, r7]
        for(j = 0; j < Font.FontWidth; j++) {
 800297a:	b2d2      	uxtb	r2, r2
 800297c:	d1ea      	bne.n	8002954 <ssd1306_WriteChar.constprop.0.isra.0+0x9c>
 800297e:	9b00      	ldr	r3, [sp, #0]
    for(i = 0; i < Font.FontHeight; i++) {
 8002980:	3301      	adds	r3, #1
 8002982:	45a9      	cmp	r9, r5
 8002984:	b2db      	uxtb	r3, r3
 8002986:	d1c0      	bne.n	800290a <ssd1306_WriteChar.constprop.0.isra.0+0x52>
 8002988:	9801      	ldr	r0, [sp, #4]
 800298a:	4664      	mov	r4, ip
    SSD1306.CurrentX += Font.FontWidth;
 800298c:	4b04      	ldr	r3, [pc, #16]	@ (80029a0 <ssd1306_WriteChar.constprop.0.isra.0+0xe8>)
 800298e:	801c      	strh	r4, [r3, #0]
}
 8002990:	b003      	add	sp, #12
 8002992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return 0;
 8002996:	2000      	movs	r0, #0
}
 8002998:	b003      	add	sp, #12
 800299a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800299e:	bf00      	nop
 80029a0:	20001130 	.word	0x20001130
 80029a4:	20001138 	.word	0x20001138

080029a8 <ssd1306_Fill>:
    memset(SSD1306_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 80029a8:	2800      	cmp	r0, #0
 80029aa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80029ae:	4803      	ldr	r0, [pc, #12]	@ (80029bc <ssd1306_Fill+0x14>)
 80029b0:	bf14      	ite	ne
 80029b2:	21ff      	movne	r1, #255	@ 0xff
 80029b4:	2100      	moveq	r1, #0
 80029b6:	f00d bc1e 	b.w	80101f6 <memset>
 80029ba:	bf00      	nop
 80029bc:	20001138 	.word	0x20001138

080029c0 <ssd1306_UpdateScreen>:
void ssd1306_UpdateScreen(void) {
 80029c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029c4:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8002a54 <ssd1306_UpdateScreen+0x94>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80029c8:	4f21      	ldr	r7, [pc, #132]	@ (8002a50 <ssd1306_UpdateScreen+0x90>)
void ssd1306_UpdateScreen(void) {
 80029ca:	b086      	sub	sp, #24
 80029cc:	25b0      	movs	r5, #176	@ 0xb0
 80029ce:	f10d 0817 	add.w	r8, sp, #23
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 80029d2:	f04f 0a00 	mov.w	sl, #0
 80029d6:	2401      	movs	r4, #1
 80029d8:	f04f 36ff 	mov.w	r6, #4294967295
 80029dc:	4623      	mov	r3, r4
 80029de:	2200      	movs	r2, #0
 80029e0:	2178      	movs	r1, #120	@ 0x78
 80029e2:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80029e6:	f8cd 8000 	str.w	r8, [sp]
 80029ea:	4638      	mov	r0, r7
 80029ec:	f88d 5017 	strb.w	r5, [sp, #23]
 80029f0:	f004 f8ac 	bl	8006b4c <HAL_I2C_Mem_Write>
 80029f4:	2200      	movs	r2, #0
 80029f6:	2178      	movs	r1, #120	@ 0x78
 80029f8:	4623      	mov	r3, r4
 80029fa:	e9cd 4601 	strd	r4, r6, [sp, #4]
 80029fe:	f8cd 8000 	str.w	r8, [sp]
 8002a02:	4638      	mov	r0, r7
 8002a04:	f88d a017 	strb.w	sl, [sp, #23]
 8002a08:	f004 f8a0 	bl	8006b4c <HAL_I2C_Mem_Write>
        ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 8002a0c:	f04f 0c10 	mov.w	ip, #16
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a10:	2200      	movs	r2, #0
 8002a12:	4623      	mov	r3, r4
 8002a14:	2178      	movs	r1, #120	@ 0x78
 8002a16:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002a1a:	f8cd 8000 	str.w	r8, [sp]
 8002a1e:	4638      	mov	r0, r7
 8002a20:	f88d c017 	strb.w	ip, [sp, #23]
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a24:	4425      	add	r5, r4
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a26:	f004 f891 	bl	8006b4c <HAL_I2C_Mem_Write>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8002a2a:	2380      	movs	r3, #128	@ 0x80
 8002a2c:	e9cd 3601 	strd	r3, r6, [sp, #4]
 8002a30:	f8cd 9000 	str.w	r9, [sp]
 8002a34:	2240      	movs	r2, #64	@ 0x40
 8002a36:	4623      	mov	r3, r4
 8002a38:	2178      	movs	r1, #120	@ 0x78
 8002a3a:	4638      	mov	r0, r7
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a3c:	b2ed      	uxtb	r5, r5
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8002a3e:	f004 f885 	bl	8006b4c <HAL_I2C_Mem_Write>
    for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 8002a42:	2db8      	cmp	r5, #184	@ 0xb8
 8002a44:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 8002a48:	d1c5      	bne.n	80029d6 <ssd1306_UpdateScreen+0x16>
}
 8002a4a:	b006      	add	sp, #24
 8002a4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a50:	20000420 	.word	0x20000420
 8002a54:	20001138 	.word	0x20001138

08002a58 <ssd1306_Init>:
void ssd1306_Init(void) {
 8002a58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    HAL_Delay(100);
 8002a5c:	2064      	movs	r0, #100	@ 0x64
void ssd1306_Init(void) {
 8002a5e:	b086      	sub	sp, #24
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a60:	4fc2      	ldr	r7, [pc, #776]	@ (8002d6c <ssd1306_Init+0x314>)
    if (on) {
        value = 0xAF;   // Display on
        SSD1306.DisplayOn = 1;
    } else {
        value = 0xAE;   // Display off
        SSD1306.DisplayOn = 0;
 8002a62:	f8df 9310 	ldr.w	r9, [pc, #784]	@ 8002d74 <ssd1306_Init+0x31c>
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a66:	2401      	movs	r4, #1
        SSD1306.DisplayOn = 0;
 8002a68:	2500      	movs	r5, #0
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a6a:	f04f 36ff 	mov.w	r6, #4294967295
 8002a6e:	f10d 0817 	add.w	r8, sp, #23
    HAL_Delay(100);
 8002a72:	f002 fd57 	bl	8005524 <HAL_Delay>
        SSD1306.DisplayOn = 0;
 8002a76:	23ae      	movs	r3, #174	@ 0xae
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a78:	9401      	str	r4, [sp, #4]
 8002a7a:	f88d 3017 	strb.w	r3, [sp, #23]
        SSD1306.DisplayOn = 0;
 8002a7e:	f889 5005 	strb.w	r5, [r9, #5]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a82:	4623      	mov	r3, r4
 8002a84:	462a      	mov	r2, r5
 8002a86:	9602      	str	r6, [sp, #8]
 8002a88:	f8cd 8000 	str.w	r8, [sp]
 8002a8c:	2178      	movs	r1, #120	@ 0x78
 8002a8e:	4638      	mov	r0, r7
 8002a90:	f004 f85c 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 8002a94:	f04f 0a20 	mov.w	sl, #32
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002a98:	4623      	mov	r3, r4
 8002a9a:	462a      	mov	r2, r5
 8002a9c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002aa0:	f8cd 8000 	str.w	r8, [sp]
 8002aa4:	2178      	movs	r1, #120	@ 0x78
 8002aa6:	4638      	mov	r0, r7
 8002aa8:	f88d a017 	strb.w	sl, [sp, #23]
 8002aac:	f004 f84e 	bl	8006b4c <HAL_I2C_Mem_Write>
 8002ab0:	4623      	mov	r3, r4
 8002ab2:	462a      	mov	r2, r5
 8002ab4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ab8:	f8cd 8000 	str.w	r8, [sp]
 8002abc:	2178      	movs	r1, #120	@ 0x78
 8002abe:	4638      	mov	r0, r7
 8002ac0:	f88d 5017 	strb.w	r5, [sp, #23]
 8002ac4:	f004 f842 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8002ac8:	23b0      	movs	r3, #176	@ 0xb0
 8002aca:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ace:	462a      	mov	r2, r5
 8002ad0:	4623      	mov	r3, r4
 8002ad2:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ad6:	f8cd 8000 	str.w	r8, [sp]
 8002ada:	2178      	movs	r1, #120	@ 0x78
 8002adc:	4638      	mov	r0, r7
 8002ade:	f004 f835 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 8002ae2:	23c8      	movs	r3, #200	@ 0xc8
 8002ae4:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002ae8:	462a      	mov	r2, r5
 8002aea:	4623      	mov	r3, r4
 8002aec:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002af0:	f8cd 8000 	str.w	r8, [sp]
 8002af4:	2178      	movs	r1, #120	@ 0x78
 8002af6:	4638      	mov	r0, r7
 8002af8:	f004 f828 	bl	8006b4c <HAL_I2C_Mem_Write>
 8002afc:	4623      	mov	r3, r4
 8002afe:	462a      	mov	r2, r5
 8002b00:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b04:	f8cd 8000 	str.w	r8, [sp]
 8002b08:	2178      	movs	r1, #120	@ 0x78
 8002b0a:	4638      	mov	r0, r7
 8002b0c:	f88d 5017 	strb.w	r5, [sp, #23]
 8002b10:	f004 f81c 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x10); //---set high column address
 8002b14:	2310      	movs	r3, #16
 8002b16:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b1a:	462a      	mov	r2, r5
 8002b1c:	4623      	mov	r3, r4
 8002b1e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b22:	f8cd 8000 	str.w	r8, [sp]
 8002b26:	2178      	movs	r1, #120	@ 0x78
 8002b28:	4638      	mov	r0, r7
 8002b2a:	f004 f80f 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 8002b2e:	2340      	movs	r3, #64	@ 0x40
 8002b30:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b34:	462a      	mov	r2, r5
 8002b36:	4623      	mov	r3, r4
 8002b38:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b3c:	f8cd 8000 	str.w	r8, [sp]
 8002b40:	2178      	movs	r1, #120	@ 0x78
 8002b42:	4638      	mov	r0, r7
 8002b44:	f004 f802 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(kSetContrastControlRegister);
 8002b48:	2381      	movs	r3, #129	@ 0x81
 8002b4a:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b4e:	462a      	mov	r2, r5
 8002b50:	4623      	mov	r3, r4
 8002b52:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b56:	f8cd 8000 	str.w	r8, [sp]
 8002b5a:	2178      	movs	r1, #120	@ 0x78
 8002b5c:	4638      	mov	r0, r7
 8002b5e:	f003 fff5 	bl	8006b4c <HAL_I2C_Mem_Write>
 8002b62:	4623      	mov	r3, r4
 8002b64:	462a      	mov	r2, r5
 8002b66:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b6a:	f8cd 8000 	str.w	r8, [sp]
 8002b6e:	2178      	movs	r1, #120	@ 0x78
 8002b70:	4638      	mov	r0, r7
 8002b72:	f88d 6017 	strb.w	r6, [sp, #23]
 8002b76:	f003 ffe9 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 8002b7a:	23a1      	movs	r3, #161	@ 0xa1
 8002b7c:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b80:	462a      	mov	r2, r5
 8002b82:	4623      	mov	r3, r4
 8002b84:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b88:	f8cd 8000 	str.w	r8, [sp]
 8002b8c:	2178      	movs	r1, #120	@ 0x78
 8002b8e:	4638      	mov	r0, r7
 8002b90:	f003 ffdc 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA6); //--set normal color
 8002b94:	23a6      	movs	r3, #166	@ 0xa6
 8002b96:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002b9a:	462a      	mov	r2, r5
 8002b9c:	4623      	mov	r3, r4
 8002b9e:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ba2:	f8cd 8000 	str.w	r8, [sp]
 8002ba6:	2178      	movs	r1, #120	@ 0x78
 8002ba8:	4638      	mov	r0, r7
 8002baa:	f003 ffcf 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 8002bae:	23a8      	movs	r3, #168	@ 0xa8
 8002bb0:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bb4:	462a      	mov	r2, r5
 8002bb6:	4623      	mov	r3, r4
 8002bb8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bbc:	f8cd 8000 	str.w	r8, [sp]
 8002bc0:	2178      	movs	r1, #120	@ 0x78
 8002bc2:	4638      	mov	r0, r7
 8002bc4:	f003 ffc2 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x3F); //
 8002bc8:	233f      	movs	r3, #63	@ 0x3f
 8002bca:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002bce:	462a      	mov	r2, r5
 8002bd0:	4623      	mov	r3, r4
 8002bd2:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bd6:	f8cd 8000 	str.w	r8, [sp]
 8002bda:	2178      	movs	r1, #120	@ 0x78
 8002bdc:	4638      	mov	r0, r7
 8002bde:	f003 ffb5 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8002be2:	23a4      	movs	r3, #164	@ 0xa4
 8002be4:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002be8:	462a      	mov	r2, r5
 8002bea:	4623      	mov	r3, r4
 8002bec:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002bf0:	f8cd 8000 	str.w	r8, [sp]
 8002bf4:	2178      	movs	r1, #120	@ 0x78
 8002bf6:	4638      	mov	r0, r7
 8002bf8:	f003 ffa8 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 8002bfc:	23d3      	movs	r3, #211	@ 0xd3
 8002bfe:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c02:	462a      	mov	r2, r5
 8002c04:	4623      	mov	r3, r4
 8002c06:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c0a:	f8cd 8000 	str.w	r8, [sp]
 8002c0e:	2178      	movs	r1, #120	@ 0x78
 8002c10:	4638      	mov	r0, r7
 8002c12:	f003 ff9b 	bl	8006b4c <HAL_I2C_Mem_Write>
 8002c16:	4623      	mov	r3, r4
 8002c18:	462a      	mov	r2, r5
 8002c1a:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c1e:	f8cd 8000 	str.w	r8, [sp]
 8002c22:	2178      	movs	r1, #120	@ 0x78
 8002c24:	4638      	mov	r0, r7
 8002c26:	f88d 5017 	strb.w	r5, [sp, #23]
 8002c2a:	f003 ff8f 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 8002c2e:	23d5      	movs	r3, #213	@ 0xd5
 8002c30:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c34:	462a      	mov	r2, r5
 8002c36:	4623      	mov	r3, r4
 8002c38:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c3c:	f8cd 8000 	str.w	r8, [sp]
 8002c40:	2178      	movs	r1, #120	@ 0x78
 8002c42:	4638      	mov	r0, r7
 8002c44:	f003 ff82 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xF0); //--set divide ratio
 8002c48:	23f0      	movs	r3, #240	@ 0xf0
 8002c4a:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c4e:	462a      	mov	r2, r5
 8002c50:	4623      	mov	r3, r4
 8002c52:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c56:	f8cd 8000 	str.w	r8, [sp]
 8002c5a:	2178      	movs	r1, #120	@ 0x78
 8002c5c:	4638      	mov	r0, r7
 8002c5e:	f003 ff75 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xD9); //--set pre-charge period
 8002c62:	23d9      	movs	r3, #217	@ 0xd9
 8002c64:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c68:	462a      	mov	r2, r5
 8002c6a:	4623      	mov	r3, r4
 8002c6c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c70:	f8cd 8000 	str.w	r8, [sp]
 8002c74:	2178      	movs	r1, #120	@ 0x78
 8002c76:	4638      	mov	r0, r7
 8002c78:	f003 ff68 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x22); //
 8002c7c:	2322      	movs	r3, #34	@ 0x22
 8002c7e:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c82:	462a      	mov	r2, r5
 8002c84:	4623      	mov	r3, r4
 8002c86:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002c8a:	f8cd 8000 	str.w	r8, [sp]
 8002c8e:	2178      	movs	r1, #120	@ 0x78
 8002c90:	4638      	mov	r0, r7
 8002c92:	f003 ff5b 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 8002c96:	23da      	movs	r3, #218	@ 0xda
 8002c98:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002c9c:	462a      	mov	r2, r5
 8002c9e:	4623      	mov	r3, r4
 8002ca0:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002ca4:	f8cd 8000 	str.w	r8, [sp]
 8002ca8:	2178      	movs	r1, #120	@ 0x78
 8002caa:	4638      	mov	r0, r7
 8002cac:	f003 ff4e 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x12);
 8002cb0:	2312      	movs	r3, #18
 8002cb2:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cb6:	462a      	mov	r2, r5
 8002cb8:	4623      	mov	r3, r4
 8002cba:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cbe:	f8cd 8000 	str.w	r8, [sp]
 8002cc2:	2178      	movs	r1, #120	@ 0x78
 8002cc4:	4638      	mov	r0, r7
 8002cc6:	f003 ff41 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0xDB); //--set vcomh
 8002cca:	23db      	movs	r3, #219	@ 0xdb
 8002ccc:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002cd0:	462a      	mov	r2, r5
 8002cd2:	4623      	mov	r3, r4
 8002cd4:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cd8:	f8cd 8000 	str.w	r8, [sp]
 8002cdc:	2178      	movs	r1, #120	@ 0x78
 8002cde:	4638      	mov	r0, r7
 8002ce0:	f003 ff34 	bl	8006b4c <HAL_I2C_Mem_Write>
 8002ce4:	4623      	mov	r3, r4
 8002ce6:	462a      	mov	r2, r5
 8002ce8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002cec:	f8cd 8000 	str.w	r8, [sp]
 8002cf0:	2178      	movs	r1, #120	@ 0x78
 8002cf2:	4638      	mov	r0, r7
 8002cf4:	f88d a017 	strb.w	sl, [sp, #23]
 8002cf8:	f003 ff28 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 8002cfc:	238d      	movs	r3, #141	@ 0x8d
 8002cfe:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d02:	462a      	mov	r2, r5
 8002d04:	4623      	mov	r3, r4
 8002d06:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d0a:	f8cd 8000 	str.w	r8, [sp]
 8002d0e:	2178      	movs	r1, #120	@ 0x78
 8002d10:	4638      	mov	r0, r7
 8002d12:	f003 ff1b 	bl	8006b4c <HAL_I2C_Mem_Write>
    ssd1306_WriteCommand(0x14); //
 8002d16:	2314      	movs	r3, #20
 8002d18:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d1c:	462a      	mov	r2, r5
 8002d1e:	4623      	mov	r3, r4
 8002d20:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d24:	f8cd 8000 	str.w	r8, [sp]
 8002d28:	2178      	movs	r1, #120	@ 0x78
 8002d2a:	4638      	mov	r0, r7
 8002d2c:	f003 ff0e 	bl	8006b4c <HAL_I2C_Mem_Write>
        SSD1306.DisplayOn = 1;
 8002d30:	22af      	movs	r2, #175	@ 0xaf
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d32:	4623      	mov	r3, r4
 8002d34:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d38:	f8cd 8000 	str.w	r8, [sp]
 8002d3c:	f88d 2017 	strb.w	r2, [sp, #23]
 8002d40:	4638      	mov	r0, r7
 8002d42:	462a      	mov	r2, r5
        SSD1306.DisplayOn = 1;
 8002d44:	f889 4005 	strb.w	r4, [r9, #5]
    HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8002d48:	2178      	movs	r1, #120	@ 0x78
 8002d4a:	f003 feff 	bl	8006b4c <HAL_I2C_Mem_Write>
    memset(SSD1306_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 8002d4e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002d52:	4629      	mov	r1, r5
 8002d54:	4806      	ldr	r0, [pc, #24]	@ (8002d70 <ssd1306_Init+0x318>)
 8002d56:	f00d fa4e 	bl	80101f6 <memset>
    ssd1306_UpdateScreen();
 8002d5a:	f7ff fe31 	bl	80029c0 <ssd1306_UpdateScreen>
    SSD1306.CurrentX = 0;
 8002d5e:	f8c9 5000 	str.w	r5, [r9]
    SSD1306.Initialized = 1;
 8002d62:	f889 4004 	strb.w	r4, [r9, #4]
}
 8002d66:	b006      	add	sp, #24
 8002d68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002d6c:	20000420 	.word	0x20000420
 8002d70:	20001138 	.word	0x20001138
 8002d74:	20001130 	.word	0x20001130

08002d78 <ssd1306_WriteChar>:
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d7c:	b087      	sub	sp, #28
    if (ch < 32 || ch > 126)
 8002d7e:	f1a0 0520 	sub.w	r5, r0, #32
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002d82:	ac06      	add	r4, sp, #24
 8002d84:	e904 0006 	stmdb	r4, {r1, r2}
    if (ch < 32 || ch > 126)
 8002d88:	b2ea      	uxtb	r2, r5
 8002d8a:	2a5e      	cmp	r2, #94	@ 0x5e
 8002d8c:	d85c      	bhi.n	8002e48 <ssd1306_WriteChar+0xd0>
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002d8e:	4e58      	ldr	r6, [pc, #352]	@ (8002ef0 <ssd1306_WriteChar+0x178>)
 8002d90:	f89d 4010 	ldrb.w	r4, [sp, #16]
 8002d94:	8831      	ldrh	r1, [r6, #0]
 8002d96:	eb01 0e04 	add.w	lr, r1, r4
 8002d9a:	f1be 0f80 	cmp.w	lr, #128	@ 0x80
 8002d9e:	dc53      	bgt.n	8002e48 <ssd1306_WriteChar+0xd0>
 8002da0:	f89d 2011 	ldrb.w	r2, [sp, #17]
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 8002da4:	f8b6 c002 	ldrh.w	ip, [r6, #2]
 8002da8:	eb0c 0602 	add.w	r6, ip, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002dac:	2e40      	cmp	r6, #64	@ 0x40
 8002dae:	dc4b      	bgt.n	8002e48 <ssd1306_WriteChar+0xd0>
    for(i = 0; i < Font.FontHeight; i++) {
 8002db0:	2a00      	cmp	r2, #0
 8002db2:	d043      	beq.n	8002e3c <ssd1306_WriteChar+0xc4>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002db4:	fb02 f605 	mul.w	r6, r2, r5
 8002db8:	9d05      	ldr	r5, [sp, #20]
 8002dba:	2c00      	cmp	r4, #0
 8002dbc:	d03e      	beq.n	8002e3c <ssd1306_WriteChar+0xc4>
 8002dbe:	4432      	add	r2, r6
 8002dc0:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 8002dc4:	3e01      	subs	r6, #1
 8002dc6:	eb05 0646 	add.w	r6, r5, r6, lsl #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002dca:	e9cd 0e02 	strd	r0, lr, [sp, #8]
 8002dce:	3d02      	subs	r5, #2
 8002dd0:	eb05 0a42 	add.w	sl, r5, r2, lsl #1
 8002dd4:	4d47      	ldr	r5, [pc, #284]	@ (8002ef4 <ssd1306_WriteChar+0x17c>)
 8002dd6:	fa5f fc8c 	uxtb.w	ip, ip
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002dda:	fa5f fb81 	uxtb.w	fp, r1
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002dde:	f1bc 0f3f 	cmp.w	ip, #63	@ 0x3f
 8002de2:	f106 0602 	add.w	r6, r6, #2
        for(j = 0; j < Font.FontWidth; j++) {
 8002de6:	d821      	bhi.n	8002e2c <ssd1306_WriteChar+0xb4>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002de8:	2201      	movs	r2, #1
 8002dea:	f00c 0807 	and.w	r8, ip, #7
 8002dee:	fa02 f808 	lsl.w	r8, r2, r8
 8002df2:	ea4f 00dc 	mov.w	r0, ip, lsr #3
 8002df6:	ea6f 0e08 	mvn.w	lr, r8
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 8002dfa:	8837      	ldrh	r7, [r6, #0]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002dfc:	01c0      	lsls	r0, r0, #7
 8002dfe:	fa5f fe8e 	uxtb.w	lr, lr
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 8002e02:	465a      	mov	r2, fp
 8002e04:	b323      	cbz	r3, 8002e50 <ssd1306_WriteChar+0xd8>
 8002e06:	2b01      	cmp	r3, #1
        for(j = 0; j < Font.FontWidth; j++) {
 8002e08:	f04f 0100 	mov.w	r1, #0
 8002e0c:	d04e      	beq.n	8002eac <ssd1306_WriteChar+0x134>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e0e:	0617      	lsls	r7, r2, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e10:	eb02 0800 	add.w	r8, r2, r0
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e14:	d405      	bmi.n	8002e22 <ssd1306_WriteChar+0xaa>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e16:	f815 9008 	ldrb.w	r9, [r5, r8]
 8002e1a:	ea0e 0909 	and.w	r9, lr, r9
 8002e1e:	f805 9008 	strb.w	r9, [r5, r8]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e22:	3101      	adds	r1, #1
 8002e24:	3201      	adds	r2, #1
 8002e26:	428c      	cmp	r4, r1
 8002e28:	b2d2      	uxtb	r2, r2
 8002e2a:	d1f0      	bne.n	8002e0e <ssd1306_WriteChar+0x96>
    for(i = 0; i < Font.FontHeight; i++) {
 8002e2c:	f10c 0c01 	add.w	ip, ip, #1
 8002e30:	4556      	cmp	r6, sl
 8002e32:	fa5f fc8c 	uxtb.w	ip, ip
 8002e36:	d1d2      	bne.n	8002dde <ssd1306_WriteChar+0x66>
 8002e38:	e9dd 0e02 	ldrd	r0, lr, [sp, #8]
    SSD1306.CurrentX += Font.FontWidth;
 8002e3c:	4b2c      	ldr	r3, [pc, #176]	@ (8002ef0 <ssd1306_WriteChar+0x178>)
 8002e3e:	f8a3 e000 	strh.w	lr, [r3]
}
 8002e42:	b007      	add	sp, #28
 8002e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return 0;
 8002e48:	2000      	movs	r0, #0
}
 8002e4a:	b007      	add	sp, #28
 8002e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        for(j = 0; j < Font.FontWidth; j++) {
 8002e50:	4619      	mov	r1, r3
 8002e52:	9601      	str	r6, [sp, #4]
 8002e54:	e00d      	b.n	8002e72 <ssd1306_WriteChar+0xfa>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e56:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002e5a:	d105      	bne.n	8002e68 <ssd1306_WriteChar+0xf0>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002e5c:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002e60:	ea49 0908 	orr.w	r9, r9, r8
 8002e64:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e68:	3101      	adds	r1, #1
 8002e6a:	3201      	adds	r2, #1
 8002e6c:	42a1      	cmp	r1, r4
 8002e6e:	b2d2      	uxtb	r2, r2
 8002e70:	d014      	beq.n	8002e9c <ssd1306_WriteChar+0x124>
            if((b << j) & 0x8000)  {
 8002e72:	fa07 f601 	lsl.w	r6, r7, r1
 8002e76:	f416 4f00 	tst.w	r6, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e7a:	eb02 0600 	add.w	r6, r2, r0
            if((b << j) & 0x8000)  {
 8002e7e:	d0ea      	beq.n	8002e56 <ssd1306_WriteChar+0xde>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002e80:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002e84:	d1f0      	bne.n	8002e68 <ssd1306_WriteChar+0xf0>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e86:	f815 9006 	ldrb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e8a:	3101      	adds	r1, #1
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e8c:	ea0e 0909 	and.w	r9, lr, r9
        for(j = 0; j < Font.FontWidth; j++) {
 8002e90:	3201      	adds	r2, #1
 8002e92:	42a1      	cmp	r1, r4
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002e94:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002e98:	b2d2      	uxtb	r2, r2
 8002e9a:	d1ea      	bne.n	8002e72 <ssd1306_WriteChar+0xfa>
 8002e9c:	9e01      	ldr	r6, [sp, #4]
    for(i = 0; i < Font.FontHeight; i++) {
 8002e9e:	f10c 0c01 	add.w	ip, ip, #1
 8002ea2:	4556      	cmp	r6, sl
 8002ea4:	fa5f fc8c 	uxtb.w	ip, ip
 8002ea8:	d199      	bne.n	8002dde <ssd1306_WriteChar+0x66>
 8002eaa:	e7c5      	b.n	8002e38 <ssd1306_WriteChar+0xc0>
        for(j = 0; j < Font.FontWidth; j++) {
 8002eac:	9601      	str	r6, [sp, #4]
 8002eae:	e00d      	b.n	8002ecc <ssd1306_WriteChar+0x154>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002eb0:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002eb4:	d105      	bne.n	8002ec2 <ssd1306_WriteChar+0x14a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002eb6:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002eba:	ea49 0908 	orr.w	r9, r9, r8
 8002ebe:	f805 9006 	strb.w	r9, [r5, r6]
        for(j = 0; j < Font.FontWidth; j++) {
 8002ec2:	3101      	adds	r1, #1
 8002ec4:	3201      	adds	r2, #1
 8002ec6:	42a1      	cmp	r1, r4
 8002ec8:	b2d2      	uxtb	r2, r2
 8002eca:	d0e7      	beq.n	8002e9c <ssd1306_WriteChar+0x124>
            if((b << j) & 0x8000)  {
 8002ecc:	fa07 f601 	lsl.w	r6, r7, r1
 8002ed0:	f416 4f00 	tst.w	r6, #32768	@ 0x8000
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002ed4:	eb02 0600 	add.w	r6, r2, r0
            if((b << j) & 0x8000)  {
 8002ed8:	d1ea      	bne.n	8002eb0 <ssd1306_WriteChar+0x138>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002eda:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8002ede:	d1f0      	bne.n	8002ec2 <ssd1306_WriteChar+0x14a>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002ee0:	f815 9006 	ldrb.w	r9, [r5, r6]
 8002ee4:	ea0e 0909 	and.w	r9, lr, r9
 8002ee8:	f805 9006 	strb.w	r9, [r5, r6]
 8002eec:	e7e9      	b.n	8002ec2 <ssd1306_WriteChar+0x14a>
 8002eee:	bf00      	nop
 8002ef0:	20001130 	.word	0x20001130
 8002ef4:	20001138 	.word	0x20001138

08002ef8 <ssd1306_WriteString>:
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002ef8:	b570      	push	{r4, r5, r6, lr}
 8002efa:	4604      	mov	r4, r0
 8002efc:	b082      	sub	sp, #8
    while (*str) {
 8002efe:	7800      	ldrb	r0, [r0, #0]
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002f00:	466d      	mov	r5, sp
 8002f02:	e885 0006 	stmia.w	r5, {r1, r2}
    while (*str) {
 8002f06:	b178      	cbz	r0, 8002f28 <ssd1306_WriteString+0x30>
 8002f08:	461e      	mov	r6, r3
 8002f0a:	e002      	b.n	8002f12 <ssd1306_WriteString+0x1a>
 8002f0c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8002f10:	b150      	cbz	r0, 8002f28 <ssd1306_WriteString+0x30>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 8002f12:	e895 0006 	ldmia.w	r5, {r1, r2}
 8002f16:	4633      	mov	r3, r6
 8002f18:	f7ff ff2e 	bl	8002d78 <ssd1306_WriteChar>
 8002f1c:	7822      	ldrb	r2, [r4, #0]
 8002f1e:	4290      	cmp	r0, r2
 8002f20:	d0f4      	beq.n	8002f0c <ssd1306_WriteString+0x14>
}
 8002f22:	4610      	mov	r0, r2
 8002f24:	b002      	add	sp, #8
 8002f26:	bd70      	pop	{r4, r5, r6, pc}
    return *str;
 8002f28:	2200      	movs	r2, #0
}
 8002f2a:	4610      	mov	r0, r2
 8002f2c:	b002      	add	sp, #8
 8002f2e:	bd70      	pop	{r4, r5, r6, pc}

08002f30 <ssd1306_SetCursor>:
    SSD1306.CurrentX = x;
 8002f30:	4b01      	ldr	r3, [pc, #4]	@ (8002f38 <ssd1306_SetCursor+0x8>)
 8002f32:	8018      	strh	r0, [r3, #0]
    SSD1306.CurrentY = y;
 8002f34:	8059      	strh	r1, [r3, #2]
}
 8002f36:	4770      	bx	lr
 8002f38:	20001130 	.word	0x20001130

08002f3c <ssd1306_DrawBitmap>:
void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SSD1306_COLOR color) {
 8002f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f40:	4606      	mov	r6, r0
 8002f42:	b085      	sub	sp, #20
    if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f44:	0635      	lsls	r5, r6, #24
void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SSD1306_COLOR color) {
 8002f46:	f89d 4038 	ldrb.w	r4, [sp, #56]	@ 0x38
 8002f4a:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
    if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002f4e:	d46a      	bmi.n	8003026 <ssd1306_DrawBitmap+0xea>
 8002f50:	293f      	cmp	r1, #63	@ 0x3f
 8002f52:	d868      	bhi.n	8003026 <ssd1306_DrawBitmap+0xea>
    for (uint8_t j = 0; j < h; j++, y++) {
 8002f54:	2c00      	cmp	r4, #0
 8002f56:	d066      	beq.n	8003026 <ssd1306_DrawBitmap+0xea>
 8002f58:	4615      	mov	r5, r2
    int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 8002f5a:	1dda      	adds	r2, r3, #7
 8002f5c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	d060      	beq.n	8003026 <ssd1306_DrawBitmap+0xea>
 8002f64:	440c      	add	r4, r1
 8002f66:	fa5f fb84 	uxtb.w	fp, r4
 8002f6a:	2400      	movs	r4, #0
 8002f6c:	46b1      	mov	r9, r6
    uint8_t byte = 0;
 8002f6e:	46a4      	mov	ip, r4
 8002f70:	4606      	mov	r6, r0
        for (uint8_t i = 0; i < w; i++) {
 8002f72:	293f      	cmp	r1, #63	@ 0x3f
 8002f74:	d841      	bhi.n	8002ffa <ssd1306_DrawBitmap+0xbe>
 8002f76:	2e01      	cmp	r6, #1
 8002f78:	9503      	str	r5, [sp, #12]
 8002f7a:	d057      	beq.n	800302c <ssd1306_DrawBitmap+0xf0>
 8002f7c:	46b0      	mov	r8, r6
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002f7e:	2001      	movs	r0, #1
 8002f80:	f001 0207 	and.w	r2, r1, #7
 8002f84:	fa00 f202 	lsl.w	r2, r0, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002f88:	43d2      	mvns	r2, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002f8a:	9e03      	ldr	r6, [sp, #12]
 8002f8c:	b2d5      	uxtb	r5, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002f8e:	ea4f 0ed1 	mov.w	lr, r1, lsr #3
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002f92:	e9cd 5101 	strd	r5, r1, [sp, #4]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002f96:	ea4f 1ece 	mov.w	lr, lr, lsl #7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002f9a:	4648      	mov	r0, r9
 8002f9c:	2200      	movs	r2, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002f9e:	1937      	adds	r7, r6, r4
 8002fa0:	e002      	b.n	8002fa8 <ssd1306_DrawBitmap+0x6c>
        for (uint8_t i = 0; i < w; i++) {
 8002fa2:	429a      	cmp	r2, r3
 8002fa4:	b2e8      	uxtb	r0, r5
 8002fa6:	d01e      	beq.n	8002fe6 <ssd1306_DrawBitmap+0xaa>
                byte <<= 1;
 8002fa8:	b2d5      	uxtb	r5, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002faa:	08ed      	lsrs	r5, r5, #3
            if (i & 7) {
 8002fac:	f012 0f07 	tst.w	r2, #7
                byte <<= 1;
 8002fb0:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002fb4:	bf0c      	ite	eq
 8002fb6:	f817 c005 	ldrbeq.w	ip, [r7, r5]
                byte <<= 1;
 8002fba:	fa5f fc8c 	uxtbne.w	ip, ip
            if (byte & 0x80) {
 8002fbe:	f01c 0f80 	tst.w	ip, #128	@ 0x80
        for (uint8_t i = 0; i < w; i++) {
 8002fc2:	f100 0501 	add.w	r5, r0, #1
 8002fc6:	f102 0201 	add.w	r2, r2, #1
            if (byte & 0x80) {
 8002fca:	d0ea      	beq.n	8002fa2 <ssd1306_DrawBitmap+0x66>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002fcc:	0601      	lsls	r1, r0, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002fce:	eb00 060e 	add.w	r6, r0, lr
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8002fd2:	d4e6      	bmi.n	8002fa2 <ssd1306_DrawBitmap+0x66>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fd4:	4833      	ldr	r0, [pc, #204]	@ (80030a4 <ssd1306_DrawBitmap+0x168>)
 8002fd6:	9901      	ldr	r1, [sp, #4]
 8002fd8:	5d80      	ldrb	r0, [r0, r6]
 8002fda:	4008      	ands	r0, r1
 8002fdc:	4931      	ldr	r1, [pc, #196]	@ (80030a4 <ssd1306_DrawBitmap+0x168>)
        for (uint8_t i = 0; i < w; i++) {
 8002fde:	429a      	cmp	r2, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8002fe0:	5588      	strb	r0, [r1, r6]
        for (uint8_t i = 0; i < w; i++) {
 8002fe2:	b2e8      	uxtb	r0, r5
 8002fe4:	d1e0      	bne.n	8002fa8 <ssd1306_DrawBitmap+0x6c>
 8002fe6:	9902      	ldr	r1, [sp, #8]
    for (uint8_t j = 0; j < h; j++, y++) {
 8002fe8:	3101      	adds	r1, #1
 8002fea:	b2c9      	uxtb	r1, r1
 8002fec:	4559      	cmp	r1, fp
 8002fee:	4454      	add	r4, sl
 8002ff0:	d019      	beq.n	8003026 <ssd1306_DrawBitmap+0xea>
        for (uint8_t i = 0; i < w; i++) {
 8002ff2:	2940      	cmp	r1, #64	@ 0x40
 8002ff4:	d1c3      	bne.n	8002f7e <ssd1306_DrawBitmap+0x42>
 8002ff6:	9d03      	ldr	r5, [sp, #12]
 8002ff8:	4646      	mov	r6, r8
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8002ffa:	2000      	movs	r0, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8002ffc:	192f      	adds	r7, r5, r4
                byte <<= 1;
 8002ffe:	b2c2      	uxtb	r2, r0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003000:	08d2      	lsrs	r2, r2, #3
            if (i & 7) {
 8003002:	f010 0f07 	tst.w	r0, #7
                byte <<= 1;
 8003006:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
        for (uint8_t i = 0; i < w; i++) {
 800300a:	f100 0001 	add.w	r0, r0, #1
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800300e:	bf0c      	ite	eq
 8003010:	f817 c002 	ldrbeq.w	ip, [r7, r2]
                byte <<= 1;
 8003014:	fa5f fc8c 	uxtbne.w	ip, ip
        for (uint8_t i = 0; i < w; i++) {
 8003018:	4283      	cmp	r3, r0
 800301a:	d1f0      	bne.n	8002ffe <ssd1306_DrawBitmap+0xc2>
    for (uint8_t j = 0; j < h; j++, y++) {
 800301c:	3101      	adds	r1, #1
 800301e:	b2c9      	uxtb	r1, r1
 8003020:	4559      	cmp	r1, fp
 8003022:	4454      	add	r4, sl
 8003024:	d1a5      	bne.n	8002f72 <ssd1306_DrawBitmap+0x36>
}
 8003026:	b005      	add	sp, #20
 8003028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800302c:	f001 0207 	and.w	r2, r1, #7
 8003030:	fa06 f202 	lsl.w	r2, r6, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003034:	9f03      	ldr	r7, [sp, #12]
 8003036:	b2d5      	uxtb	r5, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003038:	ea4f 08d1 	mov.w	r8, r1, lsr #3
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800303c:	e9cd 5101 	strd	r5, r1, [sp, #4]
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003040:	ea4f 18c8 	mov.w	r8, r8, lsl #7
 8003044:	4648      	mov	r0, r9
 8003046:	2200      	movs	r2, #0
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003048:	eb07 0e04 	add.w	lr, r7, r4
 800304c:	e002      	b.n	8003054 <ssd1306_DrawBitmap+0x118>
        for (uint8_t i = 0; i < w; i++) {
 800304e:	4293      	cmp	r3, r2
 8003050:	b2e8      	uxtb	r0, r5
 8003052:	d01d      	beq.n	8003090 <ssd1306_DrawBitmap+0x154>
                byte <<= 1;
 8003054:	b2d5      	uxtb	r5, r2
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 8003056:	08ed      	lsrs	r5, r5, #3
            if (i & 7) {
 8003058:	0757      	lsls	r7, r2, #29
                byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 800305a:	bf0e      	itee	eq
 800305c:	f81e c005 	ldrbeq.w	ip, [lr, r5]
                byte <<= 1;
 8003060:	ea4f 0c4c 	movne.w	ip, ip, lsl #1
 8003064:	fa5f fc8c 	uxtbne.w	ip, ip
            if (byte & 0x80) {
 8003068:	f01c 0f80 	tst.w	ip, #128	@ 0x80
        for (uint8_t i = 0; i < w; i++) {
 800306c:	f100 0501 	add.w	r5, r0, #1
 8003070:	f102 0201 	add.w	r2, r2, #1
            if (byte & 0x80) {
 8003074:	d0eb      	beq.n	800304e <ssd1306_DrawBitmap+0x112>
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 8003076:	0601      	lsls	r1, r0, #24
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003078:	eb00 0708 	add.w	r7, r0, r8
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 800307c:	d4e7      	bmi.n	800304e <ssd1306_DrawBitmap+0x112>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800307e:	4809      	ldr	r0, [pc, #36]	@ (80030a4 <ssd1306_DrawBitmap+0x168>)
 8003080:	9901      	ldr	r1, [sp, #4]
 8003082:	5dc0      	ldrb	r0, [r0, r7]
 8003084:	4308      	orrs	r0, r1
 8003086:	4907      	ldr	r1, [pc, #28]	@ (80030a4 <ssd1306_DrawBitmap+0x168>)
        for (uint8_t i = 0; i < w; i++) {
 8003088:	4293      	cmp	r3, r2
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 800308a:	55c8      	strb	r0, [r1, r7]
        for (uint8_t i = 0; i < w; i++) {
 800308c:	b2e8      	uxtb	r0, r5
 800308e:	d1e1      	bne.n	8003054 <ssd1306_DrawBitmap+0x118>
 8003090:	9902      	ldr	r1, [sp, #8]
    for (uint8_t j = 0; j < h; j++, y++) {
 8003092:	3101      	adds	r1, #1
 8003094:	b2c9      	uxtb	r1, r1
 8003096:	458b      	cmp	fp, r1
 8003098:	4454      	add	r4, sl
 800309a:	d0c4      	beq.n	8003026 <ssd1306_DrawBitmap+0xea>
        for (uint8_t i = 0; i < w; i++) {
 800309c:	2940      	cmp	r1, #64	@ 0x40
 800309e:	d1c5      	bne.n	800302c <ssd1306_DrawBitmap+0xf0>
 80030a0:	9d03      	ldr	r5, [sp, #12]
 80030a2:	e7aa      	b.n	8002ffa <ssd1306_DrawBitmap+0xbe>
 80030a4:	20001138 	.word	0x20001138

080030a8 <batterygauge>:



}

void batterygauge(float vbat,int x, int y,int currentsquare){
 80030a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030ac:	b2cc      	uxtb	r4, r1
 80030ae:	b2c5      	uxtb	r5, r0
 80030b0:	1c66      	adds	r6, r4, #1
 80030b2:	1d67      	adds	r7, r4, #5
 80030b4:	f105 010f 	add.w	r1, r5, #15
 80030b8:	b2c9      	uxtb	r1, r1
 80030ba:	b2f6      	uxtb	r6, r6
 80030bc:	b2ff      	uxtb	r7, r7
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030be:	b081      	sub	sp, #4
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030c0:	463b      	mov	r3, r7
 80030c2:	4608      	mov	r0, r1
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030c4:	4691      	mov	r9, r2
	ssd1306_Line(x+15,y+1,x+15,y+5, White);
 80030c6:	460a      	mov	r2, r1
 80030c8:	4631      	mov	r1, r6
 80030ca:	f7ff fb8b 	bl	80027e4 <ssd1306_Line.constprop.0>
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030ce:	f105 0210 	add.w	r2, r5, #16
 80030d2:	463b      	mov	r3, r7
 80030d4:	b2d2      	uxtb	r2, r2
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030d6:	f105 070e 	add.w	r7, r5, #14
 80030da:	b2ff      	uxtb	r7, r7
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030dc:	4631      	mov	r1, r6
 80030de:	4610      	mov	r0, r2
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030e0:	1da6      	adds	r6, r4, #6
	ssd1306_Line(x+16,y+1,x+16,y+5, White);
 80030e2:	f7ff fb7f 	bl	80027e4 <ssd1306_Line.constprop.0>
	ssd1306_DrawRectangle(x, y, x+14, y+6, White);
 80030e6:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 80030e8:	463a      	mov	r2, r7
 80030ea:	4623      	mov	r3, r4
 80030ec:	4621      	mov	r1, r4
 80030ee:	4628      	mov	r0, r5
 80030f0:	f7ff fb78 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80030f4:	4633      	mov	r3, r6
 80030f6:	4621      	mov	r1, r4
 80030f8:	4638      	mov	r0, r7
 80030fa:	f7ff fb73 	bl	80027e4 <ssd1306_Line.constprop.0>
void batterygauge(float vbat,int x, int y,int currentsquare){
 80030fe:	ee10 8a10 	vmov	r8, s0
    ssd1306_Line(x2,y2,x1,y2,color);
 8003102:	462a      	mov	r2, r5
 8003104:	4633      	mov	r3, r6
 8003106:	4631      	mov	r1, r6
 8003108:	4638      	mov	r0, r7
 800310a:	f7ff fb6b 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 800310e:	4623      	mov	r3, r4
 8003110:	4631      	mov	r1, r6
 8003112:	4628      	mov	r0, r5
 8003114:	f7ff fb66 	bl	80027e4 <ssd1306_Line.constprop.0>
	if(vbat<=3.7){
 8003118:	4640      	mov	r0, r8
 800311a:	f7fd f9ed 	bl	80004f8 <__aeabi_f2d>
		else{

		}
	}
	if(vbat>3.7 && vbat<= 3.9){
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
 800311e:	f104 0a02 	add.w	sl, r4, #2
 8003122:	f105 0802 	add.w	r8, r5, #2
 8003126:	3404      	adds	r4, #4
 8003128:	f105 0b03 	add.w	fp, r5, #3
	if(vbat<=3.7){
 800312c:	a384      	add	r3, pc, #528	@ (adr r3, 8003340 <batterygauge+0x298>)
 800312e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003132:	4606      	mov	r6, r0
 8003134:	460f      	mov	r7, r1
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
 8003136:	fa5f f888 	uxtb.w	r8, r8
 800313a:	fa5f fa8a 	uxtb.w	sl, sl
 800313e:	b2e4      	uxtb	r4, r4
 8003140:	fa5f fb8b 	uxtb.w	fp, fp
	if(vbat<=3.7){
 8003144:	f7fd fcac 	bl	8000aa0 <__aeabi_dcmple>
 8003148:	2800      	cmp	r0, #0
 800314a:	d166      	bne.n	800321a <batterygauge+0x172>
	if(vbat>3.7 && vbat<= 3.9){
 800314c:	a37e      	add	r3, pc, #504	@ (adr r3, 8003348 <batterygauge+0x2a0>)
 800314e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003152:	4630      	mov	r0, r6
 8003154:	4639      	mov	r1, r7
 8003156:	f7fd fca3 	bl	8000aa0 <__aeabi_dcmple>
 800315a:	2800      	cmp	r0, #0
 800315c:	f040 808f 	bne.w	800327e <batterygauge+0x1d6>
				else{

				}

	}
	if(vbat>3.9 && vbat<=4.1){
 8003160:	a37b      	add	r3, pc, #492	@ (adr r3, 8003350 <batterygauge+0x2a8>)
 8003162:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003166:	4639      	mov	r1, r7
 8003168:	4630      	mov	r0, r6
 800316a:	f7fd fc99 	bl	8000aa0 <__aeabi_dcmple>
			ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
 800316e:	1d6f      	adds	r7, r5, #5
 8003170:	1dae      	adds	r6, r5, #6
 8003172:	b2ff      	uxtb	r7, r7
 8003174:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 8003176:	4653      	mov	r3, sl
 8003178:	465a      	mov	r2, fp
 800317a:	4651      	mov	r1, sl
	if(vbat>3.9 && vbat<=4.1){
 800317c:	2800      	cmp	r0, #0
 800317e:	f040 809a 	bne.w	80032b6 <batterygauge+0x20e>
    ssd1306_Line(x1,y1,x2,y1,color);
 8003182:	4640      	mov	r0, r8
 8003184:	f7ff fb2e 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003188:	4623      	mov	r3, r4
 800318a:	4651      	mov	r1, sl
 800318c:	4658      	mov	r0, fp
 800318e:	f7ff fb29 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003192:	4642      	mov	r2, r8
 8003194:	4623      	mov	r3, r4
 8003196:	4621      	mov	r1, r4
 8003198:	4658      	mov	r0, fp
 800319a:	f7ff fb23 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 800319e:	4653      	mov	r3, sl
 80031a0:	4621      	mov	r1, r4
 80031a2:	4640      	mov	r0, r8
 80031a4:	f7ff fb1e 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80031a8:	4632      	mov	r2, r6
 80031aa:	4638      	mov	r0, r7
 80031ac:	4653      	mov	r3, sl
 80031ae:	4651      	mov	r1, sl
 80031b0:	f7ff fb18 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80031b4:	4630      	mov	r0, r6
 80031b6:	4623      	mov	r3, r4
 80031b8:	4651      	mov	r1, sl
 80031ba:	f7ff fb13 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80031be:	463a      	mov	r2, r7
 80031c0:	4630      	mov	r0, r6
 80031c2:	4623      	mov	r3, r4
 80031c4:	4621      	mov	r1, r4
 80031c6:	f7ff fb0d 	bl	80027e4 <ssd1306_Line.constprop.0>
	}

	if(vbat>4.1){
		ssd1306_DrawRectangle(x+2, y+2, x+3, y+4, White);
		ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
		ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 80031ca:	f105 0609 	add.w	r6, r5, #9
    ssd1306_Line(x1,y2,x1,y1,color);
 80031ce:	4638      	mov	r0, r7
		ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 80031d0:	f105 0708 	add.w	r7, r5, #8
 80031d4:	b2ff      	uxtb	r7, r7
 80031d6:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y2,x1,y1,color);
 80031d8:	4653      	mov	r3, sl
 80031da:	4621      	mov	r1, r4
 80031dc:	f7ff fb02 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80031e0:	4632      	mov	r2, r6
 80031e2:	4653      	mov	r3, sl
 80031e4:	4651      	mov	r1, sl
 80031e6:	4638      	mov	r0, r7
 80031e8:	f7ff fafc 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80031ec:	4623      	mov	r3, r4
 80031ee:	4651      	mov	r1, sl
 80031f0:	4630      	mov	r0, r6
 80031f2:	f7ff faf7 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80031f6:	4623      	mov	r3, r4
 80031f8:	463a      	mov	r2, r7
 80031fa:	4621      	mov	r1, r4
 80031fc:	4630      	mov	r0, r6
 80031fe:	f7ff faf1 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 8003202:	4653      	mov	r3, sl
 8003204:	4621      	mov	r1, r4
 8003206:	4638      	mov	r0, r7
 8003208:	f7ff faec 	bl	80027e4 <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 800320c:	f1b9 0f01 	cmp.w	r9, #1
 8003210:	f000 8081 	beq.w	8003316 <batterygauge+0x26e>
	}




}
 8003214:	b001      	add	sp, #4
 8003216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ssd1306_Line(x1,y1,x2,y1,color);
 800321a:	465a      	mov	r2, fp
 800321c:	4653      	mov	r3, sl
 800321e:	4651      	mov	r1, sl
 8003220:	4640      	mov	r0, r8
 8003222:	f7ff fadf 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003226:	4623      	mov	r3, r4
 8003228:	4651      	mov	r1, sl
 800322a:	4658      	mov	r0, fp
 800322c:	f7ff fada 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003230:	4623      	mov	r3, r4
 8003232:	4642      	mov	r2, r8
 8003234:	4621      	mov	r1, r4
 8003236:	4658      	mov	r0, fp
 8003238:	f7ff fad4 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 800323c:	4653      	mov	r3, sl
 800323e:	4621      	mov	r1, r4
 8003240:	4640      	mov	r0, r8
 8003242:	f7ff facf 	bl	80027e4 <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 8003246:	f1b9 0f01 	cmp.w	r9, #1
 800324a:	d1e3      	bne.n	8003214 <batterygauge+0x16c>
    ssd1306_Line(x1,y1,x2,y1,color);
 800324c:	465a      	mov	r2, fp
 800324e:	4653      	mov	r3, sl
 8003250:	4651      	mov	r1, sl
 8003252:	4640      	mov	r0, r8
 8003254:	f7ff fac6 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 8003258:	4623      	mov	r3, r4
 800325a:	4651      	mov	r1, sl
 800325c:	4658      	mov	r0, fp
 800325e:	f7ff fac1 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003262:	4623      	mov	r3, r4
 8003264:	4642      	mov	r2, r8
 8003266:	4621      	mov	r1, r4
 8003268:	4658      	mov	r0, fp
 800326a:	f7ff fabb 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 800326e:	4653      	mov	r3, sl
 8003270:	4621      	mov	r1, r4
 8003272:	4610      	mov	r0, r2
}
 8003274:	b001      	add	sp, #4
 8003276:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ssd1306_Line(x1,y2,x1,y1,color);
 800327a:	f7ff bab3 	b.w	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 800327e:	465a      	mov	r2, fp
 8003280:	4653      	mov	r3, sl
 8003282:	4651      	mov	r1, sl
 8003284:	4640      	mov	r0, r8
 8003286:	f7ff faad 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 800328a:	4623      	mov	r3, r4
 800328c:	4651      	mov	r1, sl
 800328e:	4658      	mov	r0, fp
 8003290:	f7ff faa8 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003294:	4623      	mov	r3, r4
 8003296:	4642      	mov	r2, r8
 8003298:	4621      	mov	r1, r4
 800329a:	4658      	mov	r0, fp
 800329c:	f7ff faa2 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032a0:	4653      	mov	r3, sl
 80032a2:	4621      	mov	r1, r4
 80032a4:	4640      	mov	r0, r8
 80032a6:	f7ff fa9d 	bl	80027e4 <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 80032aa:	f1b9 0f01 	cmp.w	r9, #1
 80032ae:	d1b1      	bne.n	8003214 <batterygauge+0x16c>
			ssd1306_DrawRectangle(x+5, y+2, x+6, y+4, White);
 80032b0:	1d6e      	adds	r6, r5, #5
 80032b2:	3506      	adds	r5, #6
 80032b4:	e032      	b.n	800331c <batterygauge+0x274>
    ssd1306_Line(x1,y1,x2,y1,color);
 80032b6:	4640      	mov	r0, r8
 80032b8:	f7ff fa94 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80032bc:	4623      	mov	r3, r4
 80032be:	4651      	mov	r1, sl
 80032c0:	4658      	mov	r0, fp
 80032c2:	f7ff fa8f 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80032c6:	4642      	mov	r2, r8
 80032c8:	4623      	mov	r3, r4
 80032ca:	4621      	mov	r1, r4
 80032cc:	4658      	mov	r0, fp
 80032ce:	f7ff fa89 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032d2:	4653      	mov	r3, sl
 80032d4:	4621      	mov	r1, r4
 80032d6:	4640      	mov	r0, r8
 80032d8:	f7ff fa84 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y1,x2,y1,color);
 80032dc:	4632      	mov	r2, r6
 80032de:	4653      	mov	r3, sl
 80032e0:	4651      	mov	r1, sl
 80032e2:	4638      	mov	r0, r7
 80032e4:	f7ff fa7e 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 80032e8:	4623      	mov	r3, r4
 80032ea:	4651      	mov	r1, sl
 80032ec:	4630      	mov	r0, r6
 80032ee:	f7ff fa79 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 80032f2:	4623      	mov	r3, r4
 80032f4:	463a      	mov	r2, r7
 80032f6:	4621      	mov	r1, r4
 80032f8:	4630      	mov	r0, r6
 80032fa:	f7ff fa73 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x1,y2,x1,y1,color);
 80032fe:	4653      	mov	r3, sl
 8003300:	4621      	mov	r1, r4
 8003302:	4638      	mov	r0, r7
 8003304:	f7ff fa6e 	bl	80027e4 <ssd1306_Line.constprop.0>
		if(currentsquare==1){
 8003308:	f1b9 0f01 	cmp.w	r9, #1
 800330c:	d182      	bne.n	8003214 <batterygauge+0x16c>
			ssd1306_DrawRectangle(x+8, y+2, x+9, y+4, White);
 800330e:	f105 0608 	add.w	r6, r5, #8
 8003312:	3509      	adds	r5, #9
 8003314:	e002      	b.n	800331c <batterygauge+0x274>
			ssd1306_DrawRectangle(x+11, y+2, x+12, y+4, White);
 8003316:	f105 060b 	add.w	r6, r5, #11
 800331a:	350c      	adds	r5, #12
 800331c:	b2ed      	uxtb	r5, r5
 800331e:	b2f6      	uxtb	r6, r6
    ssd1306_Line(x1,y1,x2,y1,color);
 8003320:	462a      	mov	r2, r5
 8003322:	4653      	mov	r3, sl
 8003324:	4651      	mov	r1, sl
 8003326:	4630      	mov	r0, r6
 8003328:	f7ff fa5c 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y1,x2,y2,color);
 800332c:	4623      	mov	r3, r4
 800332e:	4651      	mov	r1, sl
 8003330:	4628      	mov	r0, r5
 8003332:	f7ff fa57 	bl	80027e4 <ssd1306_Line.constprop.0>
    ssd1306_Line(x2,y2,x1,y2,color);
 8003336:	4623      	mov	r3, r4
 8003338:	4632      	mov	r2, r6
 800333a:	4621      	mov	r1, r4
 800333c:	4628      	mov	r0, r5
 800333e:	e794      	b.n	800326a <batterygauge+0x1c2>
 8003340:	9999999a 	.word	0x9999999a
 8003344:	400d9999 	.word	0x400d9999
 8003348:	33333333 	.word	0x33333333
 800334c:	400f3333 	.word	0x400f3333
 8003350:	66666666 	.word	0x66666666
 8003354:	40106666 	.word	0x40106666

08003358 <percentage>:

void percentage(float percent){
 8003358:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800335c:	ee10 0a10 	vmov	r0, s0
 8003360:	b082      	sub	sp, #8
	ssd1306_FillRectangle(32, 40, floor(0.63*percent+32), 56, White);
 8003362:	f7fd f8c9 	bl	80004f8 <__aeabi_f2d>
 8003366:	a380      	add	r3, pc, #512	@ (adr r3, 8003568 <percentage+0x210>)
 8003368:	e9d3 2300 	ldrd	r2, r3, [r3]
 800336c:	4604      	mov	r4, r0
 800336e:	460d      	mov	r5, r1
 8003370:	f7fd f91a 	bl	80005a8 <__aeabi_dmul>
 8003374:	4b74      	ldr	r3, [pc, #464]	@ (8003548 <percentage+0x1f0>)
 8003376:	4e75      	ldr	r6, [pc, #468]	@ (800354c <percentage+0x1f4>)
 8003378:	2200      	movs	r2, #0
 800337a:	f7fc ff5f 	bl	800023c <__adddf3>
 800337e:	ec41 0b10 	vmov	d0, r0, r1
 8003382:	f010 fbe9 	bl	8013b58 <floor>
 8003386:	ec51 0b10 	vmov	r0, r1, d0
 800338a:	f7fd fbe5 	bl	8000b58 <__aeabi_d2uiz>
 800338e:	fa5f fc80 	uxtb.w	ip, r0
    uint8_t x_start = ((x1<=x2) ? x1 : x2);
 8003392:	4667      	mov	r7, ip
 8003394:	2f20      	cmp	r7, #32
 8003396:	bf28      	it	cs
 8003398:	2720      	movcs	r7, #32
    uint8_t x_end   = ((x1<=x2) ? x2 : x1);
 800339a:	f1bc 0f20 	cmp.w	ip, #32
 800339e:	bf38      	it	cc
 80033a0:	f04f 0c20 	movcc.w	ip, #32
    for (uint8_t y= y_start; (y<= y_end)&&(y<SSD1306_HEIGHT); y++) {
 80033a4:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80033a8:	f107 3aff 	add.w	sl, r7, #4294967295
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033ac:	f04f 0901 	mov.w	r9, #1
 80033b0:	f04f 0880 	mov.w	r8, #128	@ 0x80
 80033b4:	f00e 0007 	and.w	r0, lr, #7
 80033b8:	ea4f 01de 	mov.w	r1, lr, lsr #3
 80033bc:	fa09 f000 	lsl.w	r0, r9, r0
 80033c0:	fb18 a101 	smlabb	r1, r8, r1, sl
 80033c4:	b2c0      	uxtb	r0, r0
 80033c6:	4431      	add	r1, r6
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033c8:	463b      	mov	r3, r7
 80033ca:	e001      	b.n	80033d0 <percentage+0x78>
 80033cc:	061a      	lsls	r2, r3, #24
 80033ce:	d407      	bmi.n	80033e0 <percentage+0x88>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033d0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033d4:	3301      	adds	r3, #1
 80033d6:	b2db      	uxtb	r3, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033d8:	4302      	orrs	r2, r0
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033da:	459c      	cmp	ip, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033dc:	700a      	strb	r2, [r1, #0]
        for (uint8_t x= x_start; (x<= x_end)&&(x<SSD1306_WIDTH); x++) {
 80033de:	d2f5      	bcs.n	80033cc <percentage+0x74>
    for (uint8_t y= y_start; (y<= y_end)&&(y<SSD1306_HEIGHT); y++) {
 80033e0:	f10e 0e01 	add.w	lr, lr, #1
 80033e4:	fa5f fe8e 	uxtb.w	lr, lr
 80033e8:	f1be 0f39 	cmp.w	lr, #57	@ 0x39
 80033ec:	d1e2      	bne.n	80033b4 <percentage+0x5c>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80033ee:	f8d6 22a0 	ldr.w	r2, [r6, #672]	@ 0x2a0
 80033f2:	f8b6 32dc 	ldrh.w	r3, [r6, #732]	@ 0x2dc
 80033f6:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80033fa:	f8c6 22a0 	str.w	r2, [r6, #672]	@ 0x2a0
 80033fe:	f8d6 22a4 	ldr.w	r2, [r6, #676]	@ 0x2a4
 8003402:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003406:	f8c6 22a4 	str.w	r2, [r6, #676]	@ 0x2a4
 800340a:	f8d6 22a8 	ldr.w	r2, [r6, #680]	@ 0x2a8
 800340e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003412:	f8c6 22a8 	str.w	r2, [r6, #680]	@ 0x2a8
 8003416:	f8d6 22ac 	ldr.w	r2, [r6, #684]	@ 0x2ac
 800341a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800341e:	f8c6 22ac 	str.w	r2, [r6, #684]	@ 0x2ac
 8003422:	f8d6 22b0 	ldr.w	r2, [r6, #688]	@ 0x2b0
 8003426:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800342a:	f8c6 22b0 	str.w	r2, [r6, #688]	@ 0x2b0
 800342e:	f8d6 22b4 	ldr.w	r2, [r6, #692]	@ 0x2b4
 8003432:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003436:	f8c6 22b4 	str.w	r2, [r6, #692]	@ 0x2b4
 800343a:	f8d6 22b8 	ldr.w	r2, [r6, #696]	@ 0x2b8
 800343e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003442:	f8c6 22b8 	str.w	r2, [r6, #696]	@ 0x2b8
 8003446:	f8d6 22bc 	ldr.w	r2, [r6, #700]	@ 0x2bc
 800344a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800344e:	f8c6 22bc 	str.w	r2, [r6, #700]	@ 0x2bc
 8003452:	f8d6 22c0 	ldr.w	r2, [r6, #704]	@ 0x2c0
 8003456:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800345a:	f8c6 22c0 	str.w	r2, [r6, #704]	@ 0x2c0
 800345e:	f8d6 22c4 	ldr.w	r2, [r6, #708]	@ 0x2c4
 8003462:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003466:	f8c6 22c4 	str.w	r2, [r6, #708]	@ 0x2c4
 800346a:	f8d6 22c8 	ldr.w	r2, [r6, #712]	@ 0x2c8
 800346e:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003472:	f8c6 22c8 	str.w	r2, [r6, #712]	@ 0x2c8
 8003476:	f8d6 22cc 	ldr.w	r2, [r6, #716]	@ 0x2cc
 800347a:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800347e:	f8c6 22cc 	str.w	r2, [r6, #716]	@ 0x2cc
 8003482:	f8d6 22d0 	ldr.w	r2, [r6, #720]	@ 0x2d0
 8003486:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 800348a:	f8c6 22d0 	str.w	r2, [r6, #720]	@ 0x2d0
 800348e:	f8d6 22d4 	ldr.w	r2, [r6, #724]	@ 0x2d4
 8003492:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 8003496:	f8c6 22d4 	str.w	r2, [r6, #724]	@ 0x2d4
 800349a:	f8d6 22d8 	ldr.w	r2, [r6, #728]	@ 0x2d8
 800349e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80034a2:	f042 3201 	orr.w	r2, r2, #16843009	@ 0x1010101
 80034a6:	f043 0301 	orr.w	r3, r3, #1
 80034aa:	f8c6 22d8 	str.w	r2, [r6, #728]	@ 0x2d8
 80034ae:	f896 22de 	ldrb.w	r2, [r6, #734]	@ 0x2de
 80034b2:	f8a6 32dc 	strh.w	r3, [r6, #732]	@ 0x2dc
 80034b6:	f896 33df 	ldrb.w	r3, [r6, #991]	@ 0x3df
 80034ba:	f042 0201 	orr.w	r2, r2, #1
 80034be:	f043 0301 	orr.w	r3, r3, #1
 80034c2:	f886 22de 	strb.w	r2, [r6, #734]	@ 0x2de
 80034c6:	f896 23a0 	ldrb.w	r2, [r6, #928]	@ 0x3a0
 80034ca:	f886 33df 	strb.w	r3, [r6, #991]	@ 0x3df
 80034ce:	4b20      	ldr	r3, [pc, #128]	@ (8003550 <percentage+0x1f8>)
 80034d0:	21ff      	movs	r1, #255	@ 0xff
 80034d2:	f042 0201 	orr.w	r2, r2, #1
 80034d6:	f886 12df 	strb.w	r1, [r6, #735]	@ 0x2df
 80034da:	f886 135f 	strb.w	r1, [r6, #863]	@ 0x35f
 80034de:	f886 23a0 	strb.w	r2, [r6, #928]	@ 0x3a0
 80034e2:	f1a3 013f 	sub.w	r1, r3, #63	@ 0x3f
 80034e6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80034ea:	f042 0201 	orr.w	r2, r2, #1
    while((x1 != x2) || (y1 != y2)) {
 80034ee:	4299      	cmp	r1, r3
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80034f0:	701a      	strb	r2, [r3, #0]
    while((x1 != x2) || (y1 != y2)) {
 80034f2:	d1f8      	bne.n	80034e6 <percentage+0x18e>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80034f4:	f896 33a0 	ldrb.w	r3, [r6, #928]	@ 0x3a0
	ssd1306_DrawRectangle(32, 40, 95, 56, White);
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 80034f8:	4f16      	ldr	r7, [pc, #88]	@ (8003554 <percentage+0x1fc>)
 80034fa:	4a17      	ldr	r2, [pc, #92]	@ (8003558 <percentage+0x200>)
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80034fc:	21ff      	movs	r1, #255	@ 0xff
 80034fe:	f043 0301 	orr.w	r3, r3, #1
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 8003502:	e9cd 4500 	strd	r4, r5, [sp]
 8003506:	4638      	mov	r0, r7
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8003508:	f886 33a0 	strb.w	r3, [r6, #928]	@ 0x3a0
 800350c:	f886 1320 	strb.w	r1, [r6, #800]	@ 0x320
 8003510:	f886 12a0 	strb.w	r1, [r6, #672]	@ 0x2a0
	snprintf((char  *)bufferscreen,20,"%0.2f %%",(float) percent);
 8003514:	2114      	movs	r1, #20
 8003516:	f00c fdd3 	bl	80100c0 <sniprintf>
    SSD1306.CurrentX = x;
 800351a:	4a10      	ldr	r2, [pc, #64]	@ (800355c <percentage+0x204>)
 800351c:	4810      	ldr	r0, [pc, #64]	@ (8003560 <percentage+0x208>)
 800351e:	4b11      	ldr	r3, [pc, #68]	@ (8003564 <percentage+0x20c>)
 8003520:	6010      	str	r0, [r2, #0]
    while (*str) {
 8003522:	7838      	ldrb	r0, [r7, #0]
 8003524:	7819      	ldrb	r1, [r3, #0]
 8003526:	785d      	ldrb	r5, [r3, #1]
 8003528:	685e      	ldr	r6, [r3, #4]
 800352a:	b918      	cbnz	r0, 8003534 <percentage+0x1dc>
 800352c:	e009      	b.n	8003542 <percentage+0x1ea>
 800352e:	f817 0f01 	ldrb.w	r0, [r7, #1]!
 8003532:	b130      	cbz	r0, 8003542 <percentage+0x1ea>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 8003534:	4633      	mov	r3, r6
 8003536:	462a      	mov	r2, r5
 8003538:	f7ff f9be 	bl	80028b8 <ssd1306_WriteChar.constprop.0.isra.0>
 800353c:	783b      	ldrb	r3, [r7, #0]
 800353e:	4283      	cmp	r3, r0
 8003540:	d0f5      	beq.n	800352e <percentage+0x1d6>
	ssd1306_SetCursor(45,44);
	ssd1306_WriteString((char  *)bufferscreen,Font_6x8,White);


}
 8003542:	b002      	add	sp, #8
 8003544:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003548:	40400000 	.word	0x40400000
 800354c:	20001138 	.word	0x20001138
 8003550:	20001518 	.word	0x20001518
 8003554:	20000680 	.word	0x20000680
 8003558:	08015da8 	.word	0x08015da8
 800355c:	20001130 	.word	0x20001130
 8003560:	002c002d 	.word	0x002c002d
 8003564:	2000002c 	.word	0x2000002c
 8003568:	c28f5c29 	.word	0xc28f5c29
 800356c:	3fe428f5 	.word	0x3fe428f5

08003570 <statemachine>:

int timecounter=0;

extern TRANSMITUSBSTATE usbtransmitstate;

void statemachine(void){
 8003570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003574:	ed2d 8b04 	vpush	{d8-d9}
	switch(state){
 8003578:	4c91      	ldr	r4, [pc, #580]	@ (80037c0 <statemachine+0x250>)
 800357a:	7823      	ldrb	r3, [r4, #0]
void statemachine(void){
 800357c:	b085      	sub	sp, #20
	switch(state){
 800357e:	2b05      	cmp	r3, #5
 8003580:	d84b      	bhi.n	800361a <statemachine+0xaa>
 8003582:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003586:	004f      	.short	0x004f
 8003588:	010b00a4 	.word	0x010b00a4
 800358c:	01b7014d 	.word	0x01b7014d
 8003590:	0006      	.short	0x0006
				 				  }

				  break;

				  case STATE_ACCEL:
					  ssd1306_Fill(Black);
 8003592:	2000      	movs	r0, #0
 8003594:	f7ff fa08 	bl	80029a8 <ssd1306_Fill>
					  ssd1306_SetCursor(32,32);
					  ssd1306_WriteString("0-100",Font_6x8,White);
 8003598:	4d8a      	ldr	r5, [pc, #552]	@ (80037c4 <statemachine+0x254>)

					  switch(accelstate){
 800359a:	4e8b      	ldr	r6, [pc, #556]	@ (80037c8 <statemachine+0x258>)
					  ssd1306_SetCursor(32,32);
 800359c:	2120      	movs	r1, #32
 800359e:	4608      	mov	r0, r1
 80035a0:	f7ff fcc6 	bl	8002f30 <ssd1306_SetCursor>
					  ssd1306_WriteString("0-100",Font_6x8,White);
 80035a4:	2301      	movs	r3, #1
 80035a6:	e895 0006 	ldmia.w	r5, {r1, r2}
 80035aa:	4888      	ldr	r0, [pc, #544]	@ (80037cc <statemachine+0x25c>)
 80035ac:	f7ff fca4 	bl	8002ef8 <ssd1306_WriteString>
					  switch(accelstate){
 80035b0:	7833      	ldrb	r3, [r6, #0]
 80035b2:	2b01      	cmp	r3, #1
 80035b4:	f001 8049 	beq.w	800464a <statemachine+0x10da>
 80035b8:	2b02      	cmp	r3, #2
 80035ba:	f001 802f 	beq.w	800461c <statemachine+0x10ac>
 80035be:	b98b      	cbnz	r3, 80035e4 <statemachine+0x74>
					  case WAITFORGPS:
						  ssd1306_SetCursor(32,40);
 80035c0:	2128      	movs	r1, #40	@ 0x28
 80035c2:	2020      	movs	r0, #32
 80035c4:	f7ff fcb4 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString("GPS fix",Font_7x10,White);
 80035c8:	4a81      	ldr	r2, [pc, #516]	@ (80037d0 <statemachine+0x260>)
 80035ca:	4882      	ldr	r0, [pc, #520]	@ (80037d4 <statemachine+0x264>)
 80035cc:	2301      	movs	r3, #1
 80035ce:	ca06      	ldmia	r2, {r1, r2}
 80035d0:	f7ff fc92 	bl	8002ef8 <ssd1306_WriteString>
						  if(GNSSData.fixType>=2){
 80035d4:	4b80      	ldr	r3, [pc, #512]	@ (80037d8 <statemachine+0x268>)
 80035d6:	f893 3077 	ldrb.w	r3, [r3, #119]	@ 0x77
 80035da:	2b01      	cmp	r3, #1
 80035dc:	d902      	bls.n	80035e4 <statemachine+0x74>
						  break;
					  case WAITFORSTOP:
						  ssd1306_SetCursor(32,40);
						  ssd1306_WriteString("Please stop",Font_6x8,White);
						  if(GNSSData.fgSpeed<=1.0){
							  accelstate++;
 80035de:	7833      	ldrb	r3, [r6, #0]
 80035e0:	3301      	adds	r3, #1
 80035e2:	7033      	strb	r3, [r6, #0]


					  }


					  if(BTN_A>=1){
 80035e4:	f8df b208 	ldr.w	fp, [pc, #520]	@ 80037f0 <statemachine+0x280>
 80035e8:	f8db 2000 	ldr.w	r2, [fp]
 80035ec:	2a00      	cmp	r2, #0
 80035ee:	dd07      	ble.n	8003600 <statemachine+0x90>
					  	state--;
					  	state--;
					  	state--;
					  	state--;
					  	state--;
 80035f0:	7822      	ldrb	r2, [r4, #0]
					  	BTN_A=0;
					  	BTN_B=0;
 80035f2:	487a      	ldr	r0, [pc, #488]	@ (80037dc <statemachine+0x26c>)
					  	BTN_A=0;
 80035f4:	2100      	movs	r1, #0
					  	state--;
 80035f6:	3a05      	subs	r2, #5
 80035f8:	7022      	strb	r2, [r4, #0]
					  	BTN_A=0;
 80035fa:	f8cb 1000 	str.w	r1, [fp]
					  	BTN_B=0;
 80035fe:	6001      	str	r1, [r0, #0]
					  }

	 					if(BTN_A_LONG>=1){
 8003600:	4a77      	ldr	r2, [pc, #476]	@ (80037e0 <statemachine+0x270>)
 8003602:	6811      	ldr	r1, [r2, #0]
 8003604:	2900      	cmp	r1, #0
 8003606:	dd08      	ble.n	800361a <statemachine+0xaa>
		 								state--;
 8003608:	7820      	ldrb	r0, [r4, #0]
		 								BTN_A=0;
		 								BTN_B=0;
 800360a:	4d74      	ldr	r5, [pc, #464]	@ (80037dc <statemachine+0x26c>)
		 								BTN_A=0;
 800360c:	2100      	movs	r1, #0
		 								state--;
 800360e:	1e43      	subs	r3, r0, #1
		 								BTN_A=0;
 8003610:	f8cb 1000 	str.w	r1, [fp]
		 								state--;
 8003614:	7023      	strb	r3, [r4, #0]
		 								BTN_B=0;
 8003616:	6029      	str	r1, [r5, #0]
		 								BTN_A_LONG=0;
 8003618:	6011      	str	r1, [r2, #0]

					  break;

	}
return ;
}
 800361a:	b005      	add	sp, #20
 800361c:	ecbd 8b04 	vpop	{d8-d9}
 8003620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				 if(GNSSData.fgSpeed>=vitmax){
 8003624:	4f6f      	ldr	r7, [pc, #444]	@ (80037e4 <statemachine+0x274>)
 8003626:	4d6c      	ldr	r5, [pc, #432]	@ (80037d8 <statemachine+0x268>)
		ssd1306_Fill(Black);
 8003628:	2000      	movs	r0, #0
 800362a:	f7ff f9bd 	bl	80029a8 <ssd1306_Fill>
				 if(GNSSData.fgSpeed>=vitmax){
 800362e:	ed95 8a30 	vldr	s16, [r5, #192]	@ 0xc0
 8003632:	edd7 7a00 	vldr	s15, [r7]
 8003636:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800363a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
								 if (GNSSData.fgSpeed!=0){
 800363e:	eeb5 8a40 	vcmp.f32	s16, #0.0
									 vitmax=GNSSData.fgSpeed;
 8003642:	bfa8      	it	ge
 8003644:	ed87 8a00 	vstrge	s16, [r7]
								 if (GNSSData.fgSpeed!=0){
 8003648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800364c:	f000 815d 	beq.w	800390a <statemachine+0x39a>
									 pace=1000/(60*GNSSData.fgSpeed);
 8003650:	eddf 7a65 	vldr	s15, [pc, #404]	@ 80037e8 <statemachine+0x278>
									 sec=(pace-floor(pace))*60;
 8003654:	eec7 7a88 	vdiv.f32	s15, s15, s16
 8003658:	ee17 0a90 	vmov	r0, s15
 800365c:	f7fc ff4c 	bl	80004f8 <__aeabi_f2d>
 8003660:	ec41 0b19 	vmov	d9, r0, r1
 8003664:	eeb0 0a49 	vmov.f32	s0, s18
 8003668:	eef0 0a69 	vmov.f32	s1, s19
 800366c:	f010 fa74 	bl	8013b58 <floor>
 8003670:	ec51 0b19 	vmov	r0, r1, d9
 8003674:	ec53 2b10 	vmov	r2, r3, d0
 8003678:	f7fc fdde 	bl	8000238 <__aeabi_dsub>
 800367c:	4b5b      	ldr	r3, [pc, #364]	@ (80037ec <statemachine+0x27c>)
 800367e:	2200      	movs	r2, #0
 8003680:	f7fc ff92 	bl	80005a8 <__aeabi_dmul>
 8003684:	f7fd fa88 	bl	8000b98 <__aeabi_d2f>
 8003688:	ee08 0a10 	vmov	s16, r0
				  switch(spdstate){
 800368c:	f8df 818c 	ldr.w	r8, [pc, #396]	@ 800381c <statemachine+0x2ac>
 8003690:	f898 6000 	ldrb.w	r6, [r8]
 8003694:	2e01      	cmp	r6, #1
 8003696:	f000 8786 	beq.w	80045a6 <statemachine+0x1036>
 800369a:	2e02      	cmp	r6, #2
 800369c:	f000 8724 	beq.w	80044e8 <statemachine+0xf78>
 80036a0:	2e00      	cmp	r6, #0
 80036a2:	f000 8168 	beq.w	8003976 <statemachine+0x406>
				  					if(BTN_A>=1){
 80036a6:	4b52      	ldr	r3, [pc, #328]	@ (80037f0 <statemachine+0x280>)
 80036a8:	681a      	ldr	r2, [r3, #0]
 80036aa:	2a00      	cmp	r2, #0
 80036ac:	dd06      	ble.n	80036bc <statemachine+0x14c>
				  									 					state++;
 80036ae:	7822      	ldrb	r2, [r4, #0]
				  									 					BTN_B=0;
 80036b0:	484a      	ldr	r0, [pc, #296]	@ (80037dc <statemachine+0x26c>)
				  									 					BTN_A=0;
 80036b2:	2100      	movs	r1, #0
 80036b4:	6019      	str	r1, [r3, #0]
				  									 					state++;
 80036b6:	1c53      	adds	r3, r2, #1
 80036b8:	7023      	strb	r3, [r4, #0]
				  									 					BTN_B=0;
 80036ba:	6001      	str	r1, [r0, #0]
				  									 	 if(BTN_B_LONG>=1){
 80036bc:	4b4d      	ldr	r3, [pc, #308]	@ (80037f4 <statemachine+0x284>)
 80036be:	681a      	ldr	r2, [r3, #0]
 80036c0:	2a00      	cmp	r2, #0
 80036c2:	ddaa      	ble.n	800361a <statemachine+0xaa>
				  									 					  							  vitmax=0;
 80036c4:	2100      	movs	r1, #0
				  									 					  							BTN_B_LONG=0;
 80036c6:	2200      	movs	r2, #0
				  									 					  							  vitmax=0;
 80036c8:	6039      	str	r1, [r7, #0]
				  									 					  							BTN_B_LONG=0;
 80036ca:	601a      	str	r2, [r3, #0]
 80036cc:	e7a5      	b.n	800361a <statemachine+0xaa>
					  if(settimeen==0){
 80036ce:	4e4a      	ldr	r6, [pc, #296]	@ (80037f8 <statemachine+0x288>)
					  ssd1306_Fill(Black);
 80036d0:	2000      	movs	r0, #0
 80036d2:	f7ff f969 	bl	80029a8 <ssd1306_Fill>
					  if(settimeen==0){
 80036d6:	6833      	ldr	r3, [r6, #0]
 80036d8:	b92b      	cbnz	r3, 80036e6 <statemachine+0x176>
						  if(GNSSData.fixType>=1){
 80036da:	4d3f      	ldr	r5, [pc, #252]	@ (80037d8 <statemachine+0x268>)
 80036dc:	f895 3077 	ldrb.w	r3, [r5, #119]	@ 0x77
 80036e0:	2b00      	cmp	r3, #0
 80036e2:	f040 8139 	bne.w	8003958 <statemachine+0x3e8>
					  switch(balisestate){
 80036e6:	4f45      	ldr	r7, [pc, #276]	@ (80037fc <statemachine+0x28c>)
 80036e8:	783d      	ldrb	r5, [r7, #0]
 80036ea:	2d01      	cmp	r5, #1
 80036ec:	f000 852b 	beq.w	8004146 <statemachine+0xbd6>
 80036f0:	2d02      	cmp	r5, #2
 80036f2:	f000 84ed 	beq.w	80040d0 <statemachine+0xb60>
 80036f6:	2d00      	cmp	r5, #0
 80036f8:	d18f      	bne.n	800361a <statemachine+0xaa>
						  ssd1306_SetCursor(32,32);
 80036fa:	2120      	movs	r1, #32
 80036fc:	4608      	mov	r0, r1
 80036fe:	f7ff fc17 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString("Tracker",Font_6x8,White);
 8003702:	4b30      	ldr	r3, [pc, #192]	@ (80037c4 <statemachine+0x254>)
 8003704:	483e      	ldr	r0, [pc, #248]	@ (8003800 <statemachine+0x290>)
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8003706:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 80037d0 <statemachine+0x260>
						  ssd1306_WriteString("Tracker",Font_6x8,White);
 800370a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800370e:	2301      	movs	r3, #1
 8003710:	f7ff fbf2 	bl	8002ef8 <ssd1306_WriteString>
						  snprintf((char *)bufferscreen,50, "offset=%d",pageoffset);
 8003714:	4b3b      	ldr	r3, [pc, #236]	@ (8003804 <statemachine+0x294>)
 8003716:	4a3c      	ldr	r2, [pc, #240]	@ (8003808 <statemachine+0x298>)
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	483c      	ldr	r0, [pc, #240]	@ (800380c <statemachine+0x29c>)
 800371c:	2132      	movs	r1, #50	@ 0x32
 800371e:	f00c fccf 	bl	80100c0 <sniprintf>
						  ssd1306_SetCursor(32,42);
 8003722:	212a      	movs	r1, #42	@ 0x2a
 8003724:	2020      	movs	r0, #32
 8003726:	f7ff fc03 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800372a:	e898 0006 	ldmia.w	r8, {r1, r2}
 800372e:	2301      	movs	r3, #1
 8003730:	4836      	ldr	r0, [pc, #216]	@ (800380c <statemachine+0x29c>)
 8003732:	f7ff fbe1 	bl	8002ef8 <ssd1306_WriteString>
						  snprintf((char *)bufferscreen,50, "page=%d",pagenumber);
 8003736:	4b36      	ldr	r3, [pc, #216]	@ (8003810 <statemachine+0x2a0>)
 8003738:	4a36      	ldr	r2, [pc, #216]	@ (8003814 <statemachine+0x2a4>)
 800373a:	681b      	ldr	r3, [r3, #0]
 800373c:	4833      	ldr	r0, [pc, #204]	@ (800380c <statemachine+0x29c>)
 800373e:	2132      	movs	r1, #50	@ 0x32
 8003740:	f00c fcbe 	bl	80100c0 <sniprintf>
						  ssd1306_SetCursor(32,52);
 8003744:	2134      	movs	r1, #52	@ 0x34
 8003746:	2020      	movs	r0, #32
 8003748:	f7ff fbf2 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800374c:	e898 0006 	ldmia.w	r8, {r1, r2}
 8003750:	2301      	movs	r3, #1
 8003752:	482e      	ldr	r0, [pc, #184]	@ (800380c <statemachine+0x29c>)
 8003754:	f7ff fbd0 	bl	8002ef8 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 8003758:	4b26      	ldr	r3, [pc, #152]	@ (80037f4 <statemachine+0x284>)
 800375a:	681a      	ldr	r2, [r3, #0]
 800375c:	2a00      	cmp	r2, #0
 800375e:	f300 87b4 	bgt.w	80046ca <statemachine+0x115a>
 8003762:	f8df b08c 	ldr.w	fp, [pc, #140]	@ 80037f0 <statemachine+0x280>
						  if(BTN_A>=1){
 8003766:	f8db 2000 	ldr.w	r2, [fp]
 800376a:	2a00      	cmp	r2, #0
 800376c:	dd08      	ble.n	8003780 <statemachine+0x210>
						  				  			 	state++;
 800376e:	7821      	ldrb	r1, [r4, #0]
						  				  			 	BTN_B=0;
 8003770:	481a      	ldr	r0, [pc, #104]	@ (80037dc <statemachine+0x26c>)
						  				  			 	BTN_A=0;
 8003772:	2200      	movs	r2, #0
						  				  			 	state++;
 8003774:	1c4b      	adds	r3, r1, #1
						  				  			 	BTN_A=0;
 8003776:	f8cb 2000 	str.w	r2, [fp]
						  				  			 	state++;
 800377a:	7023      	strb	r3, [r4, #0]
						  				  			 	BTN_B=0;
 800377c:	6002      	str	r2, [r0, #0]
						  				  			 	settimeen=0;
 800377e:	6032      	str	r2, [r6, #0]
						  if(BTN_A_LONG>=1){
 8003780:	4b17      	ldr	r3, [pc, #92]	@ (80037e0 <statemachine+0x270>)
 8003782:	681a      	ldr	r2, [r3, #0]
 8003784:	2a00      	cmp	r2, #0
 8003786:	f77f af48 	ble.w	800361a <statemachine+0xaa>
									  state--;
 800378a:	7821      	ldrb	r1, [r4, #0]
									BTN_B=0;
 800378c:	4813      	ldr	r0, [pc, #76]	@ (80037dc <statemachine+0x26c>)
									BTN_A_LONG=0;
 800378e:	2200      	movs	r2, #0
 8003790:	601a      	str	r2, [r3, #0]
									  state--;
 8003792:	1e4b      	subs	r3, r1, #1
 8003794:	7023      	strb	r3, [r4, #0]
									BTN_B=0;
 8003796:	6002      	str	r2, [r0, #0]
									settimeen=0;
 8003798:	6032      	str	r2, [r6, #0]
 800379a:	e73e      	b.n	800361a <statemachine+0xaa>
			  switch(posstate){
 800379c:	4d1e      	ldr	r5, [pc, #120]	@ (8003818 <statemachine+0x2a8>)
			  ssd1306_Fill(Black);
 800379e:	2000      	movs	r0, #0
 80037a0:	f7ff f902 	bl	80029a8 <ssd1306_Fill>
			  switch(posstate){
 80037a4:	782b      	ldrb	r3, [r5, #0]
 80037a6:	2b06      	cmp	r3, #6
 80037a8:	f200 8094 	bhi.w	80038d4 <statemachine+0x364>
 80037ac:	e8df f013 	tbh	[pc, r3, lsl #1]
 80037b0:	03b1025e 	.word	0x03b1025e
 80037b4:	03110394 	.word	0x03110394
 80037b8:	03f402b9 	.word	0x03f402b9
 80037bc:	020d      	.short	0x020d
 80037be:	bf00      	nop
 80037c0:	20001070 	.word	0x20001070
 80037c4:	2000002c 	.word	0x2000002c
 80037c8:	2000106a 	.word	0x2000106a
 80037cc:	08015fbc 	.word	0x08015fbc
 80037d0:	20000024 	.word	0x20000024
 80037d4:	08015fc4 	.word	0x08015fc4
 80037d8:	20000510 	.word	0x20000510
 80037dc:	20000ff4 	.word	0x20000ff4
 80037e0:	200005e0 	.word	0x200005e0
 80037e4:	2000063c 	.word	0x2000063c
 80037e8:	41855556 	.word	0x41855556
 80037ec:	404e0000 	.word	0x404e0000
 80037f0:	20000ff8 	.word	0x20000ff8
 80037f4:	200005e4 	.word	0x200005e4
 80037f8:	200005f8 	.word	0x200005f8
 80037fc:	2000106b 	.word	0x2000106b
 8003800:	08015df4 	.word	0x08015df4
 8003804:	200006bc 	.word	0x200006bc
 8003808:	08015dfc 	.word	0x08015dfc
 800380c:	20000680 	.word	0x20000680
 8003810:	200006b8 	.word	0x200006b8
 8003814:	08015e08 	.word	0x08015e08
 8003818:	2000106e 	.word	0x2000106e
 800381c:	2000106f 	.word	0x2000106f
			  ssd1306_Fill(Black);
 8003820:	2000      	movs	r0, #0
 8003822:	f7ff f8c1 	bl	80029a8 <ssd1306_Fill>
			  ssd1306_SetCursor(32, 32);
 8003826:	2120      	movs	r1, #32
 8003828:	4608      	mov	r0, r1
 800382a:	f7ff fb81 	bl	8002f30 <ssd1306_SetCursor>
			  ssd1306_WriteString("chrono", Font_6x8, White);
 800382e:	4bb0      	ldr	r3, [pc, #704]	@ (8003af0 <statemachine+0x580>)
 8003830:	48b0      	ldr	r0, [pc, #704]	@ (8003af4 <statemachine+0x584>)
 8003832:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003836:	2301      	movs	r3, #1
 8003838:	f7ff fb5e 	bl	8002ef8 <ssd1306_WriteString>
			  ssd1306_SetCursor(32,40);
 800383c:	2128      	movs	r1, #40	@ 0x28
 800383e:	2020      	movs	r0, #32
 8003840:	f7ff fb76 	bl	8002f30 <ssd1306_SetCursor>
			  switch(chronostate){
 8003844:	49ac      	ldr	r1, [pc, #688]	@ (8003af8 <statemachine+0x588>)
 8003846:	780a      	ldrb	r2, [r1, #0]
 8003848:	2a01      	cmp	r2, #1
 800384a:	f000 8423 	beq.w	8004094 <statemachine+0xb24>
 800384e:	2a02      	cmp	r2, #2
 8003850:	f000 8400 	beq.w	8004054 <statemachine+0xae4>
 8003854:	2a00      	cmp	r2, #0
 8003856:	d15b      	bne.n	8003910 <statemachine+0x3a0>
				  min=0;
 8003858:	4ba8      	ldr	r3, [pc, #672]	@ (8003afc <statemachine+0x58c>)
				  seconde=0;
 800385a:	4ea9      	ldr	r6, [pc, #676]	@ (8003b00 <statemachine+0x590>)
				  	 if(BTN_B>=1){
 800385c:	4da9      	ldr	r5, [pc, #676]	@ (8003b04 <statemachine+0x594>)
				  min=0;
 800385e:	2000      	movs	r0, #0
 8003860:	6018      	str	r0, [r3, #0]
				  seconde=0;
 8003862:	6030      	str	r0, [r6, #0]
				  calctime=0;
 8003864:	48a8      	ldr	r0, [pc, #672]	@ (8003b08 <statemachine+0x598>)
 8003866:	6002      	str	r2, [r0, #0]
				  	 if(BTN_B>=1){
 8003868:	6828      	ldr	r0, [r5, #0]
 800386a:	2800      	cmp	r0, #0
 800386c:	dd06      	ble.n	800387c <statemachine+0x30c>
				  		BTN_B=0;
 800386e:	602a      	str	r2, [r5, #0]
				  		starttime=uwTick;
 8003870:	4aa6      	ldr	r2, [pc, #664]	@ (8003b0c <statemachine+0x59c>)
 8003872:	6810      	ldr	r0, [r2, #0]
 8003874:	4aa6      	ldr	r2, [pc, #664]	@ (8003b10 <statemachine+0x5a0>)
 8003876:	6010      	str	r0, [r2, #0]
				  		chronostate++;
 8003878:	2201      	movs	r2, #1
 800387a:	700a      	strb	r2, [r1, #0]
				  			starttime=uwTick;
 800387c:	ed9f 8aa5 	vldr	s16, [pc, #660]	@ 8003b14 <statemachine+0x5a4>
 8003880:	2000      	movs	r0, #0
 8003882:	2100      	movs	r1, #0
 8003884:	eef0 8a48 	vmov.f32	s17, s16
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003888:	4da3      	ldr	r5, [pc, #652]	@ (8003b18 <statemachine+0x5a8>)
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 800388a:	4aa4      	ldr	r2, [pc, #656]	@ (8003b1c <statemachine+0x5ac>)
 800388c:	e9cd 0100 	strd	r0, r1, [sp]
 8003890:	210f      	movs	r1, #15
			  min=floor((float) calctime/60000);
 8003892:	edc3 8a00 	vstr	s17, [r3]
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003896:	48a2      	ldr	r0, [pc, #648]	@ (8003b20 <statemachine+0x5b0>)
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003898:	ed86 8a00 	vstr	s16, [r6]
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 800389c:	f00c fc10 	bl	80100c0 <sniprintf>
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80038a0:	e895 0006 	ldmia.w	r5, {r1, r2}
 80038a4:	2301      	movs	r3, #1
 80038a6:	489e      	ldr	r0, [pc, #632]	@ (8003b20 <statemachine+0x5b0>)
 80038a8:	f7ff fb26 	bl	8002ef8 <ssd1306_WriteString>
			  ssd1306_SetCursor(32, 50);
 80038ac:	2132      	movs	r1, #50	@ 0x32
 80038ae:	2020      	movs	r0, #32
 80038b0:	f7ff fb3e 	bl	8002f30 <ssd1306_SetCursor>
			  snprintf((char *)bufferscreen,15, "%0.3fs",seconde);
 80038b4:	6830      	ldr	r0, [r6, #0]
 80038b6:	f7fc fe1f 	bl	80004f8 <__aeabi_f2d>
 80038ba:	4a9a      	ldr	r2, [pc, #616]	@ (8003b24 <statemachine+0x5b4>)
 80038bc:	e9cd 0100 	strd	r0, r1, [sp]
 80038c0:	210f      	movs	r1, #15
 80038c2:	4897      	ldr	r0, [pc, #604]	@ (8003b20 <statemachine+0x5b0>)
 80038c4:	f00c fbfc 	bl	80100c0 <sniprintf>
			  ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 80038c8:	e895 0006 	ldmia.w	r5, {r1, r2}
 80038cc:	4894      	ldr	r0, [pc, #592]	@ (8003b20 <statemachine+0x5b0>)
 80038ce:	2301      	movs	r3, #1
 80038d0:	f7ff fb12 	bl	8002ef8 <ssd1306_WriteString>
			  if(BTN_A>=1){
 80038d4:	f8df b298 	ldr.w	fp, [pc, #664]	@ 8003b70 <statemachine+0x600>
 80038d8:	f8db 2000 	ldr.w	r2, [fp]
 80038dc:	2a00      	cmp	r2, #0
 80038de:	f77f ae8f 	ble.w	8003600 <statemachine+0x90>
			 	state++;
 80038e2:	7822      	ldrb	r2, [r4, #0]
			 	BTN_B=0;
 80038e4:	4887      	ldr	r0, [pc, #540]	@ (8003b04 <statemachine+0x594>)
			 	BTN_A=0;
 80038e6:	2100      	movs	r1, #0
			 	state++;
 80038e8:	3201      	adds	r2, #1
 80038ea:	7022      	strb	r2, [r4, #0]
			 	BTN_A=0;
 80038ec:	f8cb 1000 	str.w	r1, [fp]
			 	BTN_B=0;
 80038f0:	6001      	str	r1, [r0, #0]
			  if(BTN_A_LONG>=1){
 80038f2:	e685      	b.n	8003600 <statemachine+0x90>
				  switch(usbstate){
 80038f4:	4d8c      	ldr	r5, [pc, #560]	@ (8003b28 <statemachine+0x5b8>)
 80038f6:	782b      	ldrb	r3, [r5, #0]
 80038f8:	2b03      	cmp	r3, #3
 80038fa:	f63f ae8e 	bhi.w	800361a <statemachine+0xaa>
 80038fe:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003902:	013b      	.short	0x013b
 8003904:	00a200b2 	.word	0x00a200b2
 8003908:	0074      	.short	0x0074
 800390a:	ed9f 9b75 	vldr	d9, [pc, #468]	@ 8003ae0 <statemachine+0x570>
 800390e:	e6bd      	b.n	800368c <statemachine+0x11c>
				  timehandler=calctime;
 8003910:	4b7d      	ldr	r3, [pc, #500]	@ (8003b08 <statemachine+0x598>)
			  min=floor((float) calctime/60000);
 8003912:	eddf 7a86 	vldr	s15, [pc, #536]	@ 8003b2c <statemachine+0x5bc>
 8003916:	ed93 8a00 	vldr	s16, [r3]
 800391a:	eeb8 8a48 	vcvt.f32.u32	s16, s16
 800391e:	ee68 7a27 	vmul.f32	s15, s16, s15
 8003922:	ee17 0a90 	vmov	r0, s15
 8003926:	f7fc fde7 	bl	80004f8 <__aeabi_f2d>
 800392a:	ec41 0b10 	vmov	d0, r0, r1
 800392e:	f010 f913 	bl	8013b58 <floor>
 8003932:	ec51 0b10 	vmov	r0, r1, d0
 8003936:	f7fd f92f 	bl	8000b98 <__aeabi_d2f>
			  seconde=(float) ((calctime-(min*60000))/1000);
 800393a:	ed9f 7a7d 	vldr	s14, [pc, #500]	@ 8003b30 <statemachine+0x5c0>
 800393e:	eddf 7a7d 	vldr	s15, [pc, #500]	@ 8003b34 <statemachine+0x5c4>
 8003942:	4e6f      	ldr	r6, [pc, #444]	@ (8003b00 <statemachine+0x590>)
			  min=floor((float) calctime/60000);
 8003944:	ee08 0a90 	vmov	s17, r0
			  seconde=(float) ((calctime-(min*60000))/1000);
 8003948:	eea8 8ac7 	vfms.f32	s16, s17, s14
 800394c:	ee28 8a27 	vmul.f32	s16, s16, s15
			  snprintf((char *)bufferscreen,15, "%0.0fmin",min);
 8003950:	f7fc fdd2 	bl	80004f8 <__aeabi_f2d>
 8003954:	4b69      	ldr	r3, [pc, #420]	@ (8003afc <statemachine+0x58c>)
 8003956:	e797      	b.n	8003888 <statemachine+0x318>
							HR=GNSSData.hour;
 8003958:	4b77      	ldr	r3, [pc, #476]	@ (8003b38 <statemachine+0x5c8>)
 800395a:	f895 2074 	ldrb.w	r2, [r5, #116]	@ 0x74
 800395e:	701a      	strb	r2, [r3, #0]
							settimeen=1;
 8003960:	2101      	movs	r1, #1
							MINUTE=GNSSData.min;
 8003962:	4b76      	ldr	r3, [pc, #472]	@ (8003b3c <statemachine+0x5cc>)
							settimeen=1;
 8003964:	6031      	str	r1, [r6, #0]
							MINUTE=GNSSData.min;
 8003966:	f895 1075 	ldrb.w	r1, [r5, #117]	@ 0x75
 800396a:	7019      	strb	r1, [r3, #0]
							SEC=GNSSData.sec;
 800396c:	4b74      	ldr	r3, [pc, #464]	@ (8003b40 <statemachine+0x5d0>)
 800396e:	f895 2076 	ldrb.w	r2, [r5, #118]	@ 0x76
 8003972:	701a      	strb	r2, [r3, #0]
 8003974:	e6b7      	b.n	80036e6 <statemachine+0x176>
						ssd1306_SetCursor(32, 32);
 8003976:	2120      	movs	r1, #32
 8003978:	4608      	mov	r0, r1
 800397a:	f7ff fad9 	bl	8002f30 <ssd1306_SetCursor>
						snprintf((char *)bufferscreen,15, "%0.1f",(GNSSData.fgSpeed)*3.6);
 800397e:	f8d5 00c0 	ldr.w	r0, [r5, #192]	@ 0xc0
 8003982:	f7fc fdb9 	bl	80004f8 <__aeabi_f2d>
 8003986:	a358      	add	r3, pc, #352	@ (adr r3, 8003ae8 <statemachine+0x578>)
 8003988:	e9d3 2300 	ldrd	r2, r3, [r3]
 800398c:	f7fc fe0c 	bl	80005a8 <__aeabi_dmul>
 8003990:	4a6c      	ldr	r2, [pc, #432]	@ (8003b44 <statemachine+0x5d4>)
 8003992:	e9cd 0100 	strd	r0, r1, [sp]
 8003996:	210f      	movs	r1, #15
 8003998:	4861      	ldr	r0, [pc, #388]	@ (8003b20 <statemachine+0x5b0>)
 800399a:	f00c fb91 	bl	80100c0 <sniprintf>
						ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 800399e:	4b6a      	ldr	r3, [pc, #424]	@ (8003b48 <statemachine+0x5d8>)
 80039a0:	485f      	ldr	r0, [pc, #380]	@ (8003b20 <statemachine+0x5b0>)
 80039a2:	e893 0006 	ldmia.w	r3, {r1, r2}
 80039a6:	2301      	movs	r3, #1
 80039a8:	f7ff faa6 	bl	8002ef8 <ssd1306_WriteString>
						ssd1306_SetCursor(32, 56);
 80039ac:	2138      	movs	r1, #56	@ 0x38
 80039ae:	2020      	movs	r0, #32
 80039b0:	f7ff fabe 	bl	8002f30 <ssd1306_SetCursor>
						ssd1306_WriteString("Vit(kmh)", Font_6x8, White);
 80039b4:	4b4e      	ldr	r3, [pc, #312]	@ (8003af0 <statemachine+0x580>)
 80039b6:	4865      	ldr	r0, [pc, #404]	@ (8003b4c <statemachine+0x5dc>)
 80039b8:	e893 0006 	ldmia.w	r3, {r1, r2}
 80039bc:	2301      	movs	r3, #1
 80039be:	f7ff fa9b 	bl	8002ef8 <ssd1306_WriteString>
						batterygauge(vbat,79, 57,1);
 80039c2:	4b63      	ldr	r3, [pc, #396]	@ (8003b50 <statemachine+0x5e0>)
 80039c4:	2201      	movs	r2, #1
 80039c6:	ed93 0a00 	vldr	s0, [r3]
 80039ca:	2139      	movs	r1, #57	@ 0x39
 80039cc:	204f      	movs	r0, #79	@ 0x4f
 80039ce:	f7ff fb6b 	bl	80030a8 <batterygauge>
					 if(BTN_B>=1){
 80039d2:	4b4c      	ldr	r3, [pc, #304]	@ (8003b04 <statemachine+0x594>)
 80039d4:	681a      	ldr	r2, [r3, #0]
 80039d6:	2a00      	cmp	r2, #0
 80039d8:	f77f ae65 	ble.w	80036a6 <statemachine+0x136>
							BTN_B=0;
 80039dc:	601e      	str	r6, [r3, #0]
							spdstate++;
 80039de:	f898 3000 	ldrb.w	r3, [r8]
 80039e2:	3301      	adds	r3, #1
 80039e4:	f888 3000 	strb.w	r3, [r8]
							BTN_B=0;
 80039e8:	e65d      	b.n	80036a6 <statemachine+0x136>
				 						ssd1306_Fill(Black);
 80039ea:	2000      	movs	r0, #0
 80039ec:	f7fe ffdc 	bl	80029a8 <ssd1306_Fill>
				 						ssd1306_SetCursor(32,40);
 80039f0:	2128      	movs	r1, #40	@ 0x28
 80039f2:	2020      	movs	r0, #32
 80039f4:	f7ff fa9c 	bl	8002f30 <ssd1306_SetCursor>
				 						ssd1306_WriteString("finished",Font_6x8,White);
 80039f8:	4a3d      	ldr	r2, [pc, #244]	@ (8003af0 <statemachine+0x580>)
 80039fa:	4856      	ldr	r0, [pc, #344]	@ (8003b54 <statemachine+0x5e4>)
 80039fc:	ca06      	ldmia	r2, {r1, r2}
 80039fe:	2301      	movs	r3, #1
 8003a00:	f7ff fa7a 	bl	8002ef8 <ssd1306_WriteString>
				 						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 8003a04:	2200      	movs	r2, #0
 8003a06:	4854      	ldr	r0, [pc, #336]	@ (8003b58 <statemachine+0x5e8>)
 8003a08:	2102      	movs	r1, #2
 8003a0a:	f002 fd55 	bl	80064b8 <HAL_GPIO_WritePin>
						 					if(BTN_B>=1){
 8003a0e:	4a3d      	ldr	r2, [pc, #244]	@ (8003b04 <statemachine+0x594>)
 8003a10:	6813      	ldr	r3, [r2, #0]
 8003a12:	2b00      	cmp	r3, #0
 8003a14:	f340 8649 	ble.w	80046aa <statemachine+0x113a>
						 						usbstate--;
 8003a18:	7829      	ldrb	r1, [r5, #0]
						 						BTN_A=0;
 8003a1a:	f8df b154 	ldr.w	fp, [pc, #340]	@ 8003b70 <statemachine+0x600>
						 						BTN_B=0;
 8003a1e:	2000      	movs	r0, #0
						 						usbstate--;
 8003a20:	3903      	subs	r1, #3
 8003a22:	7029      	strb	r1, [r5, #0]
						 						BTN_B=0;
 8003a24:	6010      	str	r0, [r2, #0]
						 						BTN_A=0;
 8003a26:	f8cb 0000 	str.w	r0, [fp]
						 					if(BTN_A_LONG>=1){
 8003a2a:	494c      	ldr	r1, [pc, #304]	@ (8003b5c <statemachine+0x5ec>)
 8003a2c:	6808      	ldr	r0, [r1, #0]
 8003a2e:	2800      	cmp	r0, #0
 8003a30:	f77f adf3 	ble.w	800361a <statemachine+0xaa>
						 								state--;
 8003a34:	7820      	ldrb	r0, [r4, #0]
 8003a36:	3801      	subs	r0, #1
 8003a38:	7020      	strb	r0, [r4, #0]
						 								BTN_A=0;
 8003a3a:	2000      	movs	r0, #0
 8003a3c:	f8cb 0000 	str.w	r0, [fp]
						 								BTN_B=0;
 8003a40:	6010      	str	r0, [r2, #0]
						 								BTN_A_LONG=0;
 8003a42:	6008      	str	r0, [r1, #0]
 8003a44:	e5e9      	b.n	800361a <statemachine+0xaa>
if(usbtransmiten==0){
 8003a46:	4c46      	ldr	r4, [pc, #280]	@ (8003b60 <statemachine+0x5f0>)
 8003a48:	6820      	ldr	r0, [r4, #0]
 8003a4a:	2800      	cmp	r0, #0
 8003a4c:	f000 86fc 	beq.w	8004848 <statemachine+0x12d8>
				 					if(BTN_A>=1){
 8003a50:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 8003b70 <statemachine+0x600>
 8003a54:	f8db 2000 	ldr.w	r2, [fp]
 8003a58:	2a00      	cmp	r2, #0
 8003a5a:	f77f adde 	ble.w	800361a <statemachine+0xaa>
				 					BTN_A=0;
 8003a5e:	2200      	movs	r2, #0
 8003a60:	f8cb 2000 	str.w	r2, [fp]
 8003a64:	e5d9      	b.n	800361a <statemachine+0xaa>
				 					 ssd1306_Fill(Black);
 8003a66:	2000      	movs	r0, #0
 8003a68:	f7fe ff9e 	bl	80029a8 <ssd1306_Fill>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003a6c:	4c20      	ldr	r4, [pc, #128]	@ (8003af0 <statemachine+0x580>)
				 					if(erasedisplay==1){
 8003a6e:	f8df a104 	ldr.w	sl, [pc, #260]	@ 8003b74 <statemachine+0x604>
				 									  ssd1306_SetCursor(32,32);
 8003a72:	2120      	movs	r1, #32
 8003a74:	4608      	mov	r0, r1
 8003a76:	f7ff fa5b 	bl	8002f30 <ssd1306_SetCursor>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003a7a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8003a7e:	2301      	movs	r3, #1
 8003a80:	4838      	ldr	r0, [pc, #224]	@ (8003b64 <statemachine+0x5f4>)
 8003a82:	f7ff fa39 	bl	8002ef8 <ssd1306_WriteString>
				 					 ssd1306_SetCursor(32,40);
 8003a86:	2128      	movs	r1, #40	@ 0x28
 8003a88:	2020      	movs	r0, #32
 8003a8a:	f7ff fa51 	bl	8002f30 <ssd1306_SetCursor>
				 					ssd1306_WriteString("Push A",Font_6x8,White);
 8003a8e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8003a92:	2301      	movs	r3, #1
 8003a94:	4834      	ldr	r0, [pc, #208]	@ (8003b68 <statemachine+0x5f8>)
 8003a96:	f7ff fa2f 	bl	8002ef8 <ssd1306_WriteString>
				 					ssd1306_SetCursor(32,48);
 8003a9a:	2130      	movs	r1, #48	@ 0x30
 8003a9c:	2020      	movs	r0, #32
 8003a9e:	f7ff fa47 	bl	8002f30 <ssd1306_SetCursor>
				 					ssd1306_WriteString("to erase",Font_6x8,White);
 8003aa2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8003aa6:	4831      	ldr	r0, [pc, #196]	@ (8003b6c <statemachine+0x5fc>)
 8003aa8:	2301      	movs	r3, #1
 8003aaa:	f7ff fa25 	bl	8002ef8 <ssd1306_WriteString>
				 					if(erasedisplay==1){
 8003aae:	f8da 6000 	ldr.w	r6, [sl]
 8003ab2:	2e01      	cmp	r6, #1
 8003ab4:	f000 870c 	beq.w	80048d0 <statemachine+0x1360>
				 					if(BTN_A>=1){
 8003ab8:	f8df b0b4 	ldr.w	fp, [pc, #180]	@ 8003b70 <statemachine+0x600>
 8003abc:	f8db 2000 	ldr.w	r2, [fp]
 8003ac0:	2a00      	cmp	r2, #0
 8003ac2:	f300 861f 	bgt.w	8004704 <statemachine+0x1194>
				 					if(BTN_B>=1){
 8003ac6:	480f      	ldr	r0, [pc, #60]	@ (8003b04 <statemachine+0x594>)
 8003ac8:	6802      	ldr	r2, [r0, #0]
 8003aca:	2a00      	cmp	r2, #0
 8003acc:	f77f ada5 	ble.w	800361a <statemachine+0xaa>
					 						usbstate++;
 8003ad0:	782a      	ldrb	r2, [r5, #0]
					 						  BTN_B=0;
 8003ad2:	2100      	movs	r1, #0
					 						usbstate++;
 8003ad4:	3201      	adds	r2, #1
 8003ad6:	702a      	strb	r2, [r5, #0]
					 						  BTN_B=0;
 8003ad8:	6001      	str	r1, [r0, #0]
					 						  BTN_A=0;
 8003ada:	f8cb 1000 	str.w	r1, [fp]
 8003ade:	e59c      	b.n	800361a <statemachine+0xaa>
 8003ae0:	00000000 	.word	0x00000000
 8003ae4:	4058c000 	.word	0x4058c000
 8003ae8:	cccccccd 	.word	0xcccccccd
 8003aec:	400ccccc 	.word	0x400ccccc
 8003af0:	2000002c 	.word	0x2000002c
 8003af4:	08015f54 	.word	0x08015f54
 8003af8:	2000106d 	.word	0x2000106d
 8003afc:	20000634 	.word	0x20000634
 8003b00:	20000638 	.word	0x20000638
 8003b04:	20000ff4 	.word	0x20000ff4
 8003b08:	2000062c 	.word	0x2000062c
 8003b0c:	200018a4 	.word	0x200018a4
 8003b10:	20000630 	.word	0x20000630
 8003b14:	00000000 	.word	0x00000000
 8003b18:	20000024 	.word	0x20000024
 8003b1c:	08015f5c 	.word	0x08015f5c
 8003b20:	20000680 	.word	0x20000680
 8003b24:	08015f68 	.word	0x08015f68
 8003b28:	2000106c 	.word	0x2000106c
 8003b2c:	378bcf65 	.word	0x378bcf65
 8003b30:	476a6000 	.word	0x476a6000
 8003b34:	3a83126f 	.word	0x3a83126f
 8003b38:	200005fd 	.word	0x200005fd
 8003b3c:	200005fc 	.word	0x200005fc
 8003b40:	200005fe 	.word	0x200005fe
 8003b44:	08015db4 	.word	0x08015db4
 8003b48:	2000001c 	.word	0x2000001c
 8003b4c:	08015dbc 	.word	0x08015dbc
 8003b50:	20000fc0 	.word	0x20000fc0
 8003b54:	08015fb0 	.word	0x08015fb0
 8003b58:	48000400 	.word	0x48000400
 8003b5c:	200005e0 	.word	0x200005e0
 8003b60:	20000618 	.word	0x20000618
 8003b64:	08015f70 	.word	0x08015f70
 8003b68:	08015f80 	.word	0x08015f80
 8003b6c:	08015f88 	.word	0x08015f88
 8003b70:	20000ff8 	.word	0x20000ff8
 8003b74:	2000061c 	.word	0x2000061c
				 					 ssd1306_Fill(Black);
 8003b78:	2000      	movs	r0, #0
 8003b7a:	f7fe ff15 	bl	80029a8 <ssd1306_Fill>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003b7e:	4eba      	ldr	r6, [pc, #744]	@ (8003e68 <statemachine+0x8f8>)
				 									  ssd1306_SetCursor(32,32);
 8003b80:	2120      	movs	r1, #32
 8003b82:	4608      	mov	r0, r1
 8003b84:	f7ff f9d4 	bl	8002f30 <ssd1306_SetCursor>
				 									  ssd1306_WriteString("usb",Font_6x8,White);
 8003b88:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003b8c:	2301      	movs	r3, #1
 8003b8e:	48b7      	ldr	r0, [pc, #732]	@ (8003e6c <statemachine+0x8fc>)
 8003b90:	f7ff f9b2 	bl	8002ef8 <ssd1306_WriteString>
				 					  ssd1306_SetCursor(32,40);
 8003b94:	2128      	movs	r1, #40	@ 0x28
 8003b96:	2020      	movs	r0, #32
 8003b98:	f7ff f9ca 	bl	8002f30 <ssd1306_SetCursor>
				 					  ssd1306_WriteString("do nothing",Font_6x8,White);
 8003b9c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003ba0:	2301      	movs	r3, #1
 8003ba2:	48b3      	ldr	r0, [pc, #716]	@ (8003e70 <statemachine+0x900>)
 8003ba4:	f7ff f9a8 	bl	8002ef8 <ssd1306_WriteString>
				 					  usbtransmiten=0;
 8003ba8:	4bb2      	ldr	r3, [pc, #712]	@ (8003e74 <statemachine+0x904>)
				 					  if(BTN_B>=1){
 8003baa:	4ab3      	ldr	r2, [pc, #716]	@ (8003e78 <statemachine+0x908>)
				 					  usbtransmiten=0;
 8003bac:	2100      	movs	r1, #0
 8003bae:	6019      	str	r1, [r3, #0]
				 					  if(BTN_B>=1){
 8003bb0:	6813      	ldr	r3, [r2, #0]
 8003bb2:	428b      	cmp	r3, r1
 8003bb4:	f340 856a 	ble.w	800468c <statemachine+0x111c>
				 						  usbstate++;
 8003bb8:	782b      	ldrb	r3, [r5, #0]
				 						  BTN_A=0;
 8003bba:	f8df b310 	ldr.w	fp, [pc, #784]	@ 8003ecc <statemachine+0x95c>
				 						  BTN_B=0;
 8003bbe:	6011      	str	r1, [r2, #0]
				 						  usbstate++;
 8003bc0:	3301      	adds	r3, #1
 8003bc2:	702b      	strb	r3, [r5, #0]
				 						  BTN_A=0;
 8003bc4:	f8cb 1000 	str.w	r1, [fp]
				 					 if(BTN_A>=1){
 8003bc8:	e72f      	b.n	8003a2a <statemachine+0x4ba>
			  			  ssd1306_Fill(Black);
 8003bca:	2000      	movs	r0, #0
 8003bcc:	f7fe feec 	bl	80029a8 <ssd1306_Fill>
			  			  if(settimeen==0){
 8003bd0:	4baa      	ldr	r3, [pc, #680]	@ (8003e7c <statemachine+0x90c>)
 8003bd2:	681a      	ldr	r2, [r3, #0]
 8003bd4:	2a00      	cmp	r2, #0
 8003bd6:	f000 8666 	beq.w	80048a6 <statemachine+0x1336>
 8003bda:	4ea9      	ldr	r6, [pc, #676]	@ (8003e80 <statemachine+0x910>)
 8003bdc:	f8df 82f0 	ldr.w	r8, [pc, #752]	@ 8003ed0 <statemachine+0x960>
 8003be0:	4fa8      	ldr	r7, [pc, #672]	@ (8003e84 <statemachine+0x914>)
			  			get_time_date();
 8003be2:	f7fe fbf1 	bl	80023c8 <get_time_date>
			  				  ssd1306_SetCursor(32, 32);
 8003be6:	2120      	movs	r1, #32
 8003be8:	4608      	mov	r0, r1
 8003bea:	f7ff f9a1 	bl	8002f30 <ssd1306_SetCursor>
			  				  ssd1306_WriteString("hr GMT:", Font_6x8, White);
 8003bee:	4b9e      	ldr	r3, [pc, #632]	@ (8003e68 <statemachine+0x8f8>)
 8003bf0:	48a5      	ldr	r0, [pc, #660]	@ (8003e88 <statemachine+0x918>)
 8003bf2:	e893 0006 	ldmia.w	r3, {r1, r2}
 8003bf6:	2301      	movs	r3, #1
 8003bf8:	f7ff f97e 	bl	8002ef8 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 42);
 8003bfc:	212a      	movs	r1, #42	@ 0x2a
 8003bfe:	2020      	movs	r0, #32
 8003c00:	f7ff f996 	bl	8002f30 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15, "%02d:%02d",HR,MINUTE);
 8003c04:	7833      	ldrb	r3, [r6, #0]
 8003c06:	f898 2000 	ldrb.w	r2, [r8]
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003c0a:	4ea0      	ldr	r6, [pc, #640]	@ (8003e8c <statemachine+0x91c>)
			  				snprintf((char *)bufferscreen,15, "%02d:%02d",HR,MINUTE);
 8003c0c:	9200      	str	r2, [sp, #0]
 8003c0e:	210f      	movs	r1, #15
 8003c10:	4a9f      	ldr	r2, [pc, #636]	@ (8003e90 <statemachine+0x920>)
 8003c12:	48a0      	ldr	r0, [pc, #640]	@ (8003e94 <statemachine+0x924>)
 8003c14:	f00c fa54 	bl	80100c0 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003c18:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003c1c:	2301      	movs	r3, #1
 8003c1e:	489d      	ldr	r0, [pc, #628]	@ (8003e94 <statemachine+0x924>)
 8003c20:	f7ff f96a 	bl	8002ef8 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 52);
 8003c24:	2134      	movs	r1, #52	@ 0x34
 8003c26:	2020      	movs	r0, #32
 8003c28:	f7ff f982 	bl	8002f30 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15, "%02d sec",SEC);
 8003c2c:	4a9a      	ldr	r2, [pc, #616]	@ (8003e98 <statemachine+0x928>)
 8003c2e:	783b      	ldrb	r3, [r7, #0]
 8003c30:	4898      	ldr	r0, [pc, #608]	@ (8003e94 <statemachine+0x924>)
 8003c32:	210f      	movs	r1, #15
 8003c34:	f00c fa44 	bl	80100c0 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003c38:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003c3c:	2301      	movs	r3, #1
 8003c3e:	4895      	ldr	r0, [pc, #596]	@ (8003e94 <statemachine+0x924>)
 8003c40:	f7ff f95a 	bl	8002ef8 <ssd1306_WriteString>
			  				if(BTN_B>=1){
 8003c44:	4b8c      	ldr	r3, [pc, #560]	@ (8003e78 <statemachine+0x908>)
 8003c46:	681a      	ldr	r2, [r3, #0]
 8003c48:	2a00      	cmp	r2, #0
 8003c4a:	dd04      	ble.n	8003c56 <statemachine+0x6e6>
			  					posstate--;
 8003c4c:	782a      	ldrb	r2, [r5, #0]
			  					BTN_B=0;
 8003c4e:	2100      	movs	r1, #0
			  					posstate--;
 8003c50:	3a06      	subs	r2, #6
 8003c52:	702a      	strb	r2, [r5, #0]
			  					BTN_B=0;
 8003c54:	6019      	str	r1, [r3, #0]
			  				if(BTN_B_LONG>=1){
 8003c56:	4b91      	ldr	r3, [pc, #580]	@ (8003e9c <statemachine+0x92c>)
 8003c58:	681a      	ldr	r2, [r3, #0]
 8003c5a:	2a00      	cmp	r2, #0
 8003c5c:	f77f ae3a 	ble.w	80038d4 <statemachine+0x364>
			  							  					posstate--;
 8003c60:	782a      	ldrb	r2, [r5, #0]
			  							  					BTN_B_LONG=0;
 8003c62:	2100      	movs	r1, #0
			  							  					posstate--;
 8003c64:	3a01      	subs	r2, #1
 8003c66:	702a      	strb	r2, [r5, #0]
			  							  					BTN_B_LONG=0;
 8003c68:	6019      	str	r1, [r3, #0]
					if(BTN_A>=1){
 8003c6a:	e633      	b.n	80038d4 <statemachine+0x364>
						ssd1306_SetCursor(32, 32);
 8003c6c:	2120      	movs	r1, #32
 8003c6e:	4608      	mov	r0, r1
 8003c70:	f7ff f95e 	bl	8002f30 <ssd1306_SetCursor>
						snprintf((char *)bufferscreen,15, "Latitude:");
 8003c74:	4b8a      	ldr	r3, [pc, #552]	@ (8003ea0 <statemachine+0x930>)
 8003c76:	4e87      	ldr	r6, [pc, #540]	@ (8003e94 <statemachine+0x924>)
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003c78:	4f7b      	ldr	r7, [pc, #492]	@ (8003e68 <statemachine+0x8f8>)
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLat);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003c7a:	f8df 8258 	ldr.w	r8, [pc, #600]	@ 8003ed4 <statemachine+0x964>
						snprintf((char *)bufferscreen,15, "Latitude:");
 8003c7e:	cb03      	ldmia	r3!, {r0, r1}
 8003c80:	881b      	ldrh	r3, [r3, #0]
 8003c82:	6030      	str	r0, [r6, #0]
 8003c84:	6071      	str	r1, [r6, #4]
 8003c86:	8133      	strh	r3, [r6, #8]
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003c88:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003c8c:	2301      	movs	r3, #1
 8003c8e:	4630      	mov	r0, r6
 8003c90:	f7ff f932 	bl	8002ef8 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLat);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003c94:	f8d8 0090 	ldr.w	r0, [r8, #144]	@ 0x90
 8003c98:	f7fc fc2e 	bl	80004f8 <__aeabi_f2d>
 8003c9c:	4a81      	ldr	r2, [pc, #516]	@ (8003ea4 <statemachine+0x934>)
 8003c9e:	e9cd 0100 	strd	r0, r1, [sp]
 8003ca2:	210f      	movs	r1, #15
 8003ca4:	4630      	mov	r0, r6
 8003ca6:	f00c fa0b 	bl	80100c0 <sniprintf>
						ssd1306_SetCursor(32, 40);
 8003caa:	2128      	movs	r1, #40	@ 0x28
 8003cac:	2020      	movs	r0, #32
 8003cae:	f7ff f93f 	bl	8002f30 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003cb2:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003cb6:	2301      	movs	r3, #1
 8003cb8:	4630      	mov	r0, r6
 8003cba:	f7ff f91d 	bl	8002ef8 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "Longitude:");
 8003cbe:	4b7a      	ldr	r3, [pc, #488]	@ (8003ea8 <statemachine+0x938>)
 8003cc0:	cb03      	ldmia	r3!, {r0, r1}
 8003cc2:	881a      	ldrh	r2, [r3, #0]
 8003cc4:	6030      	str	r0, [r6, #0]
 8003cc6:	789b      	ldrb	r3, [r3, #2]
 8003cc8:	6071      	str	r1, [r6, #4]
						ssd1306_SetCursor(32, 48);
 8003cca:	2020      	movs	r0, #32
 8003ccc:	2130      	movs	r1, #48	@ 0x30
						snprintf((char *)bufferscreen,15, "Longitude:");
 8003cce:	8132      	strh	r2, [r6, #8]
 8003cd0:	72b3      	strb	r3, [r6, #10]
						ssd1306_SetCursor(32, 48);
 8003cd2:	f7ff f92d 	bl	8002f30 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003cd6:	2301      	movs	r3, #1
 8003cd8:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003cdc:	4630      	mov	r0, r6
 8003cde:	f7ff f90b 	bl	8002ef8 <ssd1306_WriteString>
						snprintf((char *)bufferscreen,15, "%0.7f",GNSSData.fLon);
 8003ce2:	f8d8 008c 	ldr.w	r0, [r8, #140]	@ 0x8c
 8003ce6:	f7fc fc07 	bl	80004f8 <__aeabi_f2d>
 8003cea:	4a6e      	ldr	r2, [pc, #440]	@ (8003ea4 <statemachine+0x934>)
 8003cec:	e9cd 0100 	strd	r0, r1, [sp]
 8003cf0:	210f      	movs	r1, #15
 8003cf2:	4630      	mov	r0, r6
 8003cf4:	f00c f9e4 	bl	80100c0 <sniprintf>
						ssd1306_SetCursor(32, 56);
 8003cf8:	2138      	movs	r1, #56	@ 0x38
 8003cfa:	2020      	movs	r0, #32
 8003cfc:	f7ff f918 	bl	8002f30 <ssd1306_SetCursor>
						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003d00:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003d04:	2301      	movs	r3, #1
 8003d06:	4630      	mov	r0, r6
 8003d08:	f7ff f8f6 	bl	8002ef8 <ssd1306_WriteString>
				  if(BTN_B>=1){
 8003d0c:	4b5a      	ldr	r3, [pc, #360]	@ (8003e78 <statemachine+0x908>)
 8003d0e:	681a      	ldr	r2, [r3, #0]
 8003d10:	2a00      	cmp	r2, #0
 8003d12:	f77f addf 	ble.w	80038d4 <statemachine+0x364>
					  posstate++;
 8003d16:	782a      	ldrb	r2, [r5, #0]
					  BTN_B=0;
 8003d18:	2100      	movs	r1, #0
					  posstate++;
 8003d1a:	3201      	adds	r2, #1
 8003d1c:	702a      	strb	r2, [r5, #0]
					  BTN_B=0;
 8003d1e:	6019      	str	r1, [r3, #0]
 8003d20:	e5d8      	b.n	80038d4 <statemachine+0x364>
				  						ssd1306_SetCursor(32, 32);
 8003d22:	2120      	movs	r1, #32
 8003d24:	4608      	mov	r0, r1
 8003d26:	f7ff f903 	bl	8002f30 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "altitude:");
 8003d2a:	4b60      	ldr	r3, [pc, #384]	@ (8003eac <statemachine+0x93c>)
 8003d2c:	4e59      	ldr	r6, [pc, #356]	@ (8003e94 <statemachine+0x924>)
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003d2e:	4f4e      	ldr	r7, [pc, #312]	@ (8003e68 <statemachine+0x8f8>)
				  						snprintf((char *)bufferscreen,15, "%0.2f m",GNSSData.fhMSL);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003d30:	f8df 81a0 	ldr.w	r8, [pc, #416]	@ 8003ed4 <statemachine+0x964>
				  						snprintf((char *)bufferscreen,15, "altitude:");
 8003d34:	cb03      	ldmia	r3!, {r0, r1}
 8003d36:	881b      	ldrh	r3, [r3, #0]
 8003d38:	6030      	str	r0, [r6, #0]
 8003d3a:	6071      	str	r1, [r6, #4]
 8003d3c:	8133      	strh	r3, [r6, #8]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003d3e:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003d42:	2301      	movs	r3, #1
 8003d44:	4630      	mov	r0, r6
 8003d46:	f7ff f8d7 	bl	8002ef8 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.2f m",GNSSData.fhMSL);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003d4a:	f8d8 00a4 	ldr.w	r0, [r8, #164]	@ 0xa4
 8003d4e:	f7fc fbd3 	bl	80004f8 <__aeabi_f2d>
 8003d52:	4a57      	ldr	r2, [pc, #348]	@ (8003eb0 <statemachine+0x940>)
 8003d54:	e9cd 0100 	strd	r0, r1, [sp]
 8003d58:	210f      	movs	r1, #15
 8003d5a:	4630      	mov	r0, r6
 8003d5c:	f00c f9b0 	bl	80100c0 <sniprintf>
				  						ssd1306_SetCursor(32, 40);
 8003d60:	2128      	movs	r1, #40	@ 0x28
 8003d62:	2020      	movs	r0, #32
 8003d64:	f7ff f8e4 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003d68:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003d6c:	2301      	movs	r3, #1
 8003d6e:	4630      	mov	r0, r6
 8003d70:	f7ff f8c2 	bl	8002ef8 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "Accuracy(m)");
 8003d74:	4b4f      	ldr	r3, [pc, #316]	@ (8003eb4 <statemachine+0x944>)
 8003d76:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003d78:	6030      	str	r0, [r6, #0]
 8003d7a:	6071      	str	r1, [r6, #4]
				  						ssd1306_SetCursor(32, 48);
 8003d7c:	2020      	movs	r0, #32
 8003d7e:	2130      	movs	r1, #48	@ 0x30
				  						snprintf((char *)bufferscreen,15, "Accuracy(m)");
 8003d80:	60b2      	str	r2, [r6, #8]
				  						ssd1306_SetCursor(32, 48);
 8003d82:	f7ff f8d5 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003d86:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003d8a:	2301      	movs	r3, #1
 8003d8c:	4630      	mov	r0, r6
 8003d8e:	f7ff f8b3 	bl	8002ef8 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.1f",GNSSData.fvACC);
 8003d92:	f8d8 00b4 	ldr.w	r0, [r8, #180]	@ 0xb4
 8003d96:	f7fc fbaf 	bl	80004f8 <__aeabi_f2d>
 8003d9a:	4a47      	ldr	r2, [pc, #284]	@ (8003eb8 <statemachine+0x948>)
 8003d9c:	e9cd 0100 	strd	r0, r1, [sp]
 8003da0:	210f      	movs	r1, #15
 8003da2:	4630      	mov	r0, r6
 8003da4:	f00c f98c 	bl	80100c0 <sniprintf>
				  						ssd1306_SetCursor(32, 56);
 8003da8:	2138      	movs	r1, #56	@ 0x38
 8003daa:	2020      	movs	r0, #32
 8003dac:	f7ff f8c0 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003db0:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003db4:	2301      	movs	r3, #1
 8003db6:	4630      	mov	r0, r6
 8003db8:	f7ff f89e 	bl	8002ef8 <ssd1306_WriteString>
				  if(BTN_B>=1){
 8003dbc:	4b2e      	ldr	r3, [pc, #184]	@ (8003e78 <statemachine+0x908>)
 8003dbe:	681a      	ldr	r2, [r3, #0]
 8003dc0:	2a00      	cmp	r2, #0
 8003dc2:	f77f af48 	ble.w	8003c56 <statemachine+0x6e6>
				  					posstate++;
 8003dc6:	782a      	ldrb	r2, [r5, #0]
				  					BTN_B=0;
 8003dc8:	2100      	movs	r1, #0
				  					posstate++;
 8003dca:	3201      	adds	r2, #1
 8003dcc:	702a      	strb	r2, [r5, #0]
				  					BTN_B=0;
 8003dce:	6019      	str	r1, [r3, #0]
				  if(BTN_B_LONG>=1){
 8003dd0:	e741      	b.n	8003c56 <statemachine+0x6e6>
			  				ssd1306_Fill(Black);
 8003dd2:	2000      	movs	r0, #0
 8003dd4:	f7fe fde8 	bl	80029a8 <ssd1306_Fill>
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8003dd8:	4b38      	ldr	r3, [pc, #224]	@ (8003ebc <statemachine+0x94c>)
 8003dda:	4e2e      	ldr	r6, [pc, #184]	@ (8003e94 <statemachine+0x924>)
 8003ddc:	6818      	ldr	r0, [r3, #0]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003dde:	4f22      	ldr	r7, [pc, #136]	@ (8003e68 <statemachine+0x8f8>)
			  				snprintf((char *)bufferscreen,20, "%d sat",GNSSData.numSV);
 8003de0:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 8003ed4 <statemachine+0x964>
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8003de4:	889a      	ldrh	r2, [r3, #4]
 8003de6:	6030      	str	r0, [r6, #0]
			  				ssd1306_SetCursor(32, 32);
 8003de8:	2120      	movs	r1, #32
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8003dea:	799b      	ldrb	r3, [r3, #6]
 8003dec:	80b2      	strh	r2, [r6, #4]
			  				ssd1306_SetCursor(32, 32);
 8003dee:	4608      	mov	r0, r1
			  				snprintf((char *)bufferscreen,15, "Satnum");//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8003df0:	71b3      	strb	r3, [r6, #6]
			  				ssd1306_SetCursor(32, 32);
 8003df2:	f7ff f89d 	bl	8002f30 <ssd1306_SetCursor>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003df6:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003dfa:	2301      	movs	r3, #1
 8003dfc:	4630      	mov	r0, r6
 8003dfe:	f7ff f87b 	bl	8002ef8 <ssd1306_WriteString>
			  				snprintf((char *)bufferscreen,20, "%d sat",GNSSData.numSV);
 8003e02:	f898 3078 	ldrb.w	r3, [r8, #120]	@ 0x78
 8003e06:	4a2e      	ldr	r2, [pc, #184]	@ (8003ec0 <statemachine+0x950>)
 8003e08:	2114      	movs	r1, #20
 8003e0a:	4630      	mov	r0, r6
 8003e0c:	f00c f958 	bl	80100c0 <sniprintf>
			  				ssd1306_SetCursor(32, 40);
 8003e10:	2128      	movs	r1, #40	@ 0x28
 8003e12:	2020      	movs	r0, #32
 8003e14:	f7ff f88c 	bl	8002f30 <ssd1306_SetCursor>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003e18:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003e1c:	2301      	movs	r3, #1
 8003e1e:	4630      	mov	r0, r6
 8003e20:	f7ff f86a 	bl	8002ef8 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 48);
 8003e24:	2130      	movs	r1, #48	@ 0x30
 8003e26:	2020      	movs	r0, #32
 8003e28:	f7ff f882 	bl	8002f30 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15,  "DateJ/M/Y");
 8003e2c:	4a25      	ldr	r2, [pc, #148]	@ (8003ec4 <statemachine+0x954>)
 8003e2e:	ca03      	ldmia	r2!, {r0, r1}
 8003e30:	8812      	ldrh	r2, [r2, #0]
 8003e32:	6030      	str	r0, [r6, #0]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003e34:	2301      	movs	r3, #1
			  				snprintf((char *)bufferscreen,15,  "DateJ/M/Y");
 8003e36:	6071      	str	r1, [r6, #4]
 8003e38:	8132      	strh	r2, [r6, #8]
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003e3a:	4630      	mov	r0, r6
 8003e3c:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003e40:	f7ff f85a 	bl	8002ef8 <ssd1306_WriteString>
			  				ssd1306_SetCursor(32, 56);
 8003e44:	2138      	movs	r1, #56	@ 0x38
 8003e46:	2020      	movs	r0, #32
 8003e48:	f7ff f872 	bl	8002f30 <ssd1306_SetCursor>
			  				snprintf((char *)bufferscreen,15,  "%d/%d/%d",GNSSData.day,GNSSData.month,GNSSData.year);
 8003e4c:	f8b8 306e 	ldrh.w	r3, [r8, #110]	@ 0x6e
 8003e50:	9301      	str	r3, [sp, #4]
 8003e52:	f898 3072 	ldrb.w	r3, [r8, #114]	@ 0x72
 8003e56:	9300      	str	r3, [sp, #0]
 8003e58:	4a1b      	ldr	r2, [pc, #108]	@ (8003ec8 <statemachine+0x958>)
 8003e5a:	f898 3073 	ldrb.w	r3, [r8, #115]	@ 0x73
 8003e5e:	210f      	movs	r1, #15
 8003e60:	4630      	mov	r0, r6
 8003e62:	f00c f92d 	bl	80100c0 <sniprintf>
			  				ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003e66:	e7a3      	b.n	8003db0 <statemachine+0x840>
 8003e68:	2000002c 	.word	0x2000002c
 8003e6c:	08015f70 	.word	0x08015f70
 8003e70:	08015f74 	.word	0x08015f74
 8003e74:	20000618 	.word	0x20000618
 8003e78:	20000ff4 	.word	0x20000ff4
 8003e7c:	200005f8 	.word	0x200005f8
 8003e80:	200005fd 	.word	0x200005fd
 8003e84:	200005fe 	.word	0x200005fe
 8003e88:	08015f34 	.word	0x08015f34
 8003e8c:	20000024 	.word	0x20000024
 8003e90:	08015f3c 	.word	0x08015f3c
 8003e94:	20000680 	.word	0x20000680
 8003e98:	08015f48 	.word	0x08015f48
 8003e9c:	200005e4 	.word	0x200005e4
 8003ea0:	08015e78 	.word	0x08015e78
 8003ea4:	08015e84 	.word	0x08015e84
 8003ea8:	08015e8c 	.word	0x08015e8c
 8003eac:	08015ee4 	.word	0x08015ee4
 8003eb0:	08015ef0 	.word	0x08015ef0
 8003eb4:	08015ef8 	.word	0x08015ef8
 8003eb8:	08015db4 	.word	0x08015db4
 8003ebc:	08015ebc 	.word	0x08015ebc
 8003ec0:	08015ec4 	.word	0x08015ec4
 8003ec4:	08015ecc 	.word	0x08015ecc
 8003ec8:	08015ed8 	.word	0x08015ed8
 8003ecc:	20000ff8 	.word	0x20000ff8
 8003ed0:	200005fc 	.word	0x200005fc
 8003ed4:	20000510 	.word	0x20000510
				  ssd1306_Fill(Black);
 8003ed8:	2000      	movs	r0, #0
 8003eda:	f7fe fd65 	bl	80029a8 <ssd1306_Fill>
				  extract_view((uint8_t*) world_map,(float)45,(float) 2);
 8003ede:	ed9f 1ba4 	vldr	d1, [pc, #656]	@ 8004170 <statemachine+0xc00>
 8003ee2:	ed9f 0ba5 	vldr	d0, [pc, #660]	@ 8004178 <statemachine+0xc08>
 8003ee6:	48a8      	ldr	r0, [pc, #672]	@ (8004188 <statemachine+0xc18>)
 8003ee8:	f001 f9d6 	bl	8005298 <extract_view>
				  ssd1306_SetCursor(32, 52);
 8003eec:	2134      	movs	r1, #52	@ 0x34
 8003eee:	2020      	movs	r0, #32
 8003ef0:	f7ff f81e 	bl	8002f30 <ssd1306_SetCursor>
				  snprintf((char *)bufferscreen,20, "%d,%d",xposition12,yposition12);
 8003ef4:	4aa5      	ldr	r2, [pc, #660]	@ (800418c <statemachine+0xc1c>)
 8003ef6:	4ba6      	ldr	r3, [pc, #664]	@ (8004190 <statemachine+0xc20>)
 8003ef8:	6811      	ldr	r1, [r2, #0]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	4aa5      	ldr	r2, [pc, #660]	@ (8004194 <statemachine+0xc24>)
 8003efe:	9100      	str	r1, [sp, #0]
 8003f00:	48a5      	ldr	r0, [pc, #660]	@ (8004198 <statemachine+0xc28>)
 8003f02:	2114      	movs	r1, #20
 8003f04:	f00c f8dc 	bl	80100c0 <sniprintf>
				  ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f08:	4aa4      	ldr	r2, [pc, #656]	@ (800419c <statemachine+0xc2c>)
 8003f0a:	48a3      	ldr	r0, [pc, #652]	@ (8004198 <statemachine+0xc28>)
 8003f0c:	ca06      	ldmia	r2, {r1, r2}
 8003f0e:	2301      	movs	r3, #1
 8003f10:	e752      	b.n	8003db8 <statemachine+0x848>
				ssd1306_Fill(Black);
 8003f12:	2000      	movs	r0, #0
 8003f14:	f7fe fd48 	bl	80029a8 <ssd1306_Fill>
				snprintf((char *)bufferscreen,15, "hacc=%0.2fm",GNSSData.fhACC);//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8003f18:	4ba1      	ldr	r3, [pc, #644]	@ (80041a0 <statemachine+0xc30>)
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003f1a:	4ea2      	ldr	r6, [pc, #648]	@ (80041a4 <statemachine+0xc34>)
				snprintf((char *)bufferscreen,15, "hacc=%0.2fm",GNSSData.fhACC);//sert a	connaitre la qualitée du fix si proche de 1 voir inférieur alors le fix est tres bon
 8003f1c:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
 8003f20:	f7fc faea 	bl	80004f8 <__aeabi_f2d>
 8003f24:	4aa0      	ldr	r2, [pc, #640]	@ (80041a8 <statemachine+0xc38>)
 8003f26:	e9cd 0100 	strd	r0, r1, [sp]
 8003f2a:	210f      	movs	r1, #15
 8003f2c:	489a      	ldr	r0, [pc, #616]	@ (8004198 <statemachine+0xc28>)
 8003f2e:	f00c f8c7 	bl	80100c0 <sniprintf>
				ssd1306_SetCursor(32, 32);
 8003f32:	2120      	movs	r1, #32
 8003f34:	4608      	mov	r0, r1
 8003f36:	f7fe fffb 	bl	8002f30 <ssd1306_SetCursor>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003f3a:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003f3e:	2301      	movs	r3, #1
 8003f40:	4895      	ldr	r0, [pc, #596]	@ (8004198 <statemachine+0xc28>)
 8003f42:	f7fe ffd9 	bl	8002ef8 <ssd1306_WriteString>
				snprintf((char *)bufferscreen,20, "v=%0.2fV",vbat);
 8003f46:	4b99      	ldr	r3, [pc, #612]	@ (80041ac <statemachine+0xc3c>)
 8003f48:	6818      	ldr	r0, [r3, #0]
 8003f4a:	f7fc fad5 	bl	80004f8 <__aeabi_f2d>
 8003f4e:	4a98      	ldr	r2, [pc, #608]	@ (80041b0 <statemachine+0xc40>)
 8003f50:	e9cd 0100 	strd	r0, r1, [sp]
 8003f54:	2114      	movs	r1, #20
 8003f56:	4890      	ldr	r0, [pc, #576]	@ (8004198 <statemachine+0xc28>)
 8003f58:	f00c f8b2 	bl	80100c0 <sniprintf>
				ssd1306_SetCursor(32, 42);
 8003f5c:	212a      	movs	r1, #42	@ 0x2a
 8003f5e:	2020      	movs	r0, #32
 8003f60:	f7fe ffe6 	bl	8002f30 <ssd1306_SetCursor>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003f64:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003f68:	2301      	movs	r3, #1
 8003f6a:	488b      	ldr	r0, [pc, #556]	@ (8004198 <statemachine+0xc28>)
 8003f6c:	f7fe ffc4 	bl	8002ef8 <ssd1306_WriteString>
				ssd1306_SetCursor(32, 52);
 8003f70:	2134      	movs	r1, #52	@ 0x34
 8003f72:	2020      	movs	r0, #32
 8003f74:	f7fe ffdc 	bl	8002f30 <ssd1306_SetCursor>
				snprintf((char *)bufferscreen,15,  "T=%0.2fC",temp);
 8003f78:	4b8e      	ldr	r3, [pc, #568]	@ (80041b4 <statemachine+0xc44>)
 8003f7a:	6818      	ldr	r0, [r3, #0]
 8003f7c:	f7fc fabc 	bl	80004f8 <__aeabi_f2d>
 8003f80:	4a8d      	ldr	r2, [pc, #564]	@ (80041b8 <statemachine+0xc48>)
 8003f82:	e9cd 0100 	strd	r0, r1, [sp]
 8003f86:	210f      	movs	r1, #15
 8003f88:	4883      	ldr	r0, [pc, #524]	@ (8004198 <statemachine+0xc28>)
 8003f8a:	f00c f899 	bl	80100c0 <sniprintf>
				ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8003f8e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8003f92:	4881      	ldr	r0, [pc, #516]	@ (8004198 <statemachine+0xc28>)
 8003f94:	2301      	movs	r3, #1
 8003f96:	e70f      	b.n	8003db8 <statemachine+0x848>
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f98:	4b88      	ldr	r3, [pc, #544]	@ (80041bc <statemachine+0xc4c>)
				  						snprintf((char *)bufferscreen,15, "baroalt:");
 8003f9a:	4e7f      	ldr	r6, [pc, #508]	@ (8004198 <statemachine+0xc28>)
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003f9c:	6818      	ldr	r0, [r3, #0]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003f9e:	4f7f      	ldr	r7, [pc, #508]	@ (800419c <statemachine+0xc2c>)
				  	  	  	  	  	  	bmp581_read_precise_normal(bmp581);
 8003fa0:	f7fd fd26 	bl	80019f0 <bmp581_read_precise_normal>
				  						ssd1306_SetCursor(32, 32);
 8003fa4:	2120      	movs	r1, #32
 8003fa6:	4608      	mov	r0, r1
 8003fa8:	f7fe ffc2 	bl	8002f30 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "baroalt:");
 8003fac:	4b84      	ldr	r3, [pc, #528]	@ (80041c0 <statemachine+0xc50>)
 8003fae:	cb03      	ldmia	r3!, {r0, r1}
 8003fb0:	781b      	ldrb	r3, [r3, #0]
 8003fb2:	6030      	str	r0, [r6, #0]
 8003fb4:	6071      	str	r1, [r6, #4]
 8003fb6:	7233      	strb	r3, [r6, #8]
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003fb8:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003fbc:	2301      	movs	r3, #1
 8003fbe:	4630      	mov	r0, r6
 8003fc0:	f7fe ff9a 	bl	8002ef8 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.2lf m",bmpalt);//pas forcement utile d'afficher 7 decimales apres la virgule, 6 donne une precision au metre ce qui est le max du gps
 8003fc4:	4b7f      	ldr	r3, [pc, #508]	@ (80041c4 <statemachine+0xc54>)
 8003fc6:	4a80      	ldr	r2, [pc, #512]	@ (80041c8 <statemachine+0xc58>)
 8003fc8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003fcc:	e9cd 0100 	strd	r0, r1, [sp]
 8003fd0:	210f      	movs	r1, #15
 8003fd2:	4630      	mov	r0, r6
 8003fd4:	f00c f874 	bl	80100c0 <sniprintf>
				  						ssd1306_SetCursor(32, 40);
 8003fd8:	2128      	movs	r1, #40	@ 0x28
 8003fda:	2020      	movs	r0, #32
 8003fdc:	f7fe ffa8 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8003fe0:	e897 0006 	ldmia.w	r7, {r1, r2}
 8003fe4:	2301      	movs	r3, #1
 8003fe6:	4630      	mov	r0, r6
 8003fe8:	f7fe ff86 	bl	8002ef8 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "baropress:");
 8003fec:	4b77      	ldr	r3, [pc, #476]	@ (80041cc <statemachine+0xc5c>)
 8003fee:	cb03      	ldmia	r3!, {r0, r1}
 8003ff0:	881a      	ldrh	r2, [r3, #0]
 8003ff2:	6030      	str	r0, [r6, #0]
 8003ff4:	789b      	ldrb	r3, [r3, #2]
 8003ff6:	6071      	str	r1, [r6, #4]
				  						ssd1306_SetCursor(32, 48);
 8003ff8:	2020      	movs	r0, #32
 8003ffa:	2130      	movs	r1, #48	@ 0x30
				  						snprintf((char *)bufferscreen,15, "baropress:");
 8003ffc:	8132      	strh	r2, [r6, #8]
 8003ffe:	72b3      	strb	r3, [r6, #10]
				  						ssd1306_SetCursor(32, 48);
 8004000:	f7fe ff96 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004004:	e897 0006 	ldmia.w	r7, {r1, r2}
 8004008:	2301      	movs	r3, #1
 800400a:	4630      	mov	r0, r6
 800400c:	f7fe ff74 	bl	8002ef8 <ssd1306_WriteString>
				  						snprintf((char *)bufferscreen,15, "%0.3lfkPa",bmppress/1000.0);
 8004010:	4b6f      	ldr	r3, [pc, #444]	@ (80041d0 <statemachine+0xc60>)
 8004012:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004016:	a35a      	add	r3, pc, #360	@ (adr r3, 8004180 <statemachine+0xc10>)
 8004018:	e9d3 2300 	ldrd	r2, r3, [r3]
 800401c:	f7fc fac4 	bl	80005a8 <__aeabi_dmul>
 8004020:	4a6c      	ldr	r2, [pc, #432]	@ (80041d4 <statemachine+0xc64>)
 8004022:	e9cd 0100 	strd	r0, r1, [sp]
 8004026:	210f      	movs	r1, #15
 8004028:	4630      	mov	r0, r6
 800402a:	f00c f849 	bl	80100c0 <sniprintf>
				  						ssd1306_SetCursor(32, 56);
 800402e:	2138      	movs	r1, #56	@ 0x38
 8004030:	2020      	movs	r0, #32
 8004032:	f7fe ff7d 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 8004036:	e897 0006 	ldmia.w	r7, {r1, r2}
 800403a:	2301      	movs	r3, #1
 800403c:	4630      	mov	r0, r6
 800403e:	f7fe ff5b 	bl	8002ef8 <ssd1306_WriteString>
				  						HAL_Delay(200);
 8004042:	20c8      	movs	r0, #200	@ 0xc8
 8004044:	f001 fa6e 	bl	8005524 <HAL_Delay>
				  if(BTN_B>=1){
 8004048:	4b63      	ldr	r3, [pc, #396]	@ (80041d8 <statemachine+0xc68>)
 800404a:	681a      	ldr	r2, [r3, #0]
 800404c:	2a00      	cmp	r2, #0
 800404e:	f73f aeba 	bgt.w	8003dc6 <statemachine+0x856>
 8004052:	e600      	b.n	8003c56 <statemachine+0x6e6>
				  if(BTN_B>=1){
 8004054:	4d60      	ldr	r5, [pc, #384]	@ (80041d8 <statemachine+0xc68>)
				  timehandler=calctime;
 8004056:	4b61      	ldr	r3, [pc, #388]	@ (80041dc <statemachine+0xc6c>)
				  if(BTN_B>=1){
 8004058:	682e      	ldr	r6, [r5, #0]
				  timehandler=calctime;
 800405a:	4861      	ldr	r0, [pc, #388]	@ (80041e0 <statemachine+0xc70>)
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	6003      	str	r3, [r0, #0]
				  if(BTN_B>=1){
 8004060:	2e00      	cmp	r6, #0
 8004062:	dd07      	ble.n	8004074 <statemachine+0xb04>
				  			starttime=uwTick;
 8004064:	4a5f      	ldr	r2, [pc, #380]	@ (80041e4 <statemachine+0xc74>)
 8004066:	6816      	ldr	r6, [r2, #0]
 8004068:	4a5f      	ldr	r2, [pc, #380]	@ (80041e8 <statemachine+0xc78>)
 800406a:	6016      	str	r6, [r2, #0]
				  			chronostate--;
 800406c:	2201      	movs	r2, #1
				  			BTN_B=0;
 800406e:	2600      	movs	r6, #0
				  			chronostate--;
 8004070:	700a      	strb	r2, [r1, #0]
				  			BTN_B=0;
 8004072:	602e      	str	r6, [r5, #0]
				  if(BTN_B_LONG>=1){
 8004074:	4d5d      	ldr	r5, [pc, #372]	@ (80041ec <statemachine+0xc7c>)
 8004076:	682e      	ldr	r6, [r5, #0]
 8004078:	2e00      	cmp	r6, #0
 800407a:	dd04      	ble.n	8004086 <statemachine+0xb16>
				  				  	chronostate--;
 800407c:	3a02      	subs	r2, #2
 800407e:	700a      	strb	r2, [r1, #0]
				  				  	BTN_B_LONG=0;
 8004080:	2200      	movs	r2, #0
 8004082:	602a      	str	r2, [r5, #0]
				  				  	timehandler=0;
 8004084:	6002      	str	r2, [r0, #0]
			  min=floor((float) calctime/60000);
 8004086:	ee07 3a90 	vmov	s15, r3
 800408a:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 800408e:	eddf 7a58 	vldr	s15, [pc, #352]	@ 80041f0 <statemachine+0xc80>
 8004092:	e444      	b.n	800391e <statemachine+0x3ae>
				  calctime=uwTick-starttime+timehandler;
 8004094:	4b53      	ldr	r3, [pc, #332]	@ (80041e4 <statemachine+0xc74>)
 8004096:	4852      	ldr	r0, [pc, #328]	@ (80041e0 <statemachine+0xc70>)
 8004098:	4a53      	ldr	r2, [pc, #332]	@ (80041e8 <statemachine+0xc78>)
 800409a:	6800      	ldr	r0, [r0, #0]
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	6812      	ldr	r2, [r2, #0]
 80040a0:	4403      	add	r3, r0
 80040a2:	1a9b      	subs	r3, r3, r2
 80040a4:	484d      	ldr	r0, [pc, #308]	@ (80041dc <statemachine+0xc6c>)
				  if(BTN_B>=1){
 80040a6:	4a4c      	ldr	r2, [pc, #304]	@ (80041d8 <statemachine+0xc68>)
				  calctime=uwTick-starttime+timehandler;
 80040a8:	6003      	str	r3, [r0, #0]
				  if(BTN_B>=1){
 80040aa:	6810      	ldr	r0, [r2, #0]
			  min=floor((float) calctime/60000);
 80040ac:	ee07 3a90 	vmov	s15, r3
				  if(BTN_B>=1){
 80040b0:	2800      	cmp	r0, #0
			  min=floor((float) calctime/60000);
 80040b2:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 80040b6:	eddf 7a4e 	vldr	s15, [pc, #312]	@ 80041f0 <statemachine+0xc80>
				  if(BTN_B>=1){
 80040ba:	f77f ac30 	ble.w	800391e <statemachine+0x3ae>
			  min=floor((float) calctime/60000);
 80040be:	ee68 7a27 	vmul.f32	s15, s16, s15
				  		chronostate++;
 80040c2:	2002      	movs	r0, #2
				  		BTN_B=0;
 80040c4:	2300      	movs	r3, #0
				  		chronostate++;
 80040c6:	7008      	strb	r0, [r1, #0]
				  		BTN_B=0;
 80040c8:	6013      	str	r3, [r2, #0]
			  min=floor((float) calctime/60000);
 80040ca:	ee17 0a90 	vmov	r0, s15
 80040ce:	e42a      	b.n	8003926 <statemachine+0x3b6>
						  ssd1306_WriteString("fin de",Font_6x8,White);
 80040d0:	4d32      	ldr	r5, [pc, #200]	@ (800419c <statemachine+0xc2c>)
						  if(BTN_A>=1){
 80040d2:	f8df b130 	ldr.w	fp, [pc, #304]	@ 8004204 <statemachine+0xc94>
						  ssd1306_SetCursor(32,32);
 80040d6:	2120      	movs	r1, #32
 80040d8:	4608      	mov	r0, r1
 80040da:	f7fe ff29 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString("fin de",Font_6x8,White);
 80040de:	e895 0006 	ldmia.w	r5, {r1, r2}
 80040e2:	2301      	movs	r3, #1
 80040e4:	4843      	ldr	r0, [pc, #268]	@ (80041f4 <statemachine+0xc84>)
 80040e6:	f7fe ff07 	bl	8002ef8 <ssd1306_WriteString>
						  ssd1306_SetCursor(32,42);
 80040ea:	212a      	movs	r1, #42	@ 0x2a
 80040ec:	2020      	movs	r0, #32
 80040ee:	f7fe ff1f 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString("memoire",Font_6x8,White);
 80040f2:	e895 0006 	ldmia.w	r5, {r1, r2}
 80040f6:	2301      	movs	r3, #1
 80040f8:	483f      	ldr	r0, [pc, #252]	@ (80041f8 <statemachine+0xc88>)
 80040fa:	f7fe fefd 	bl	8002ef8 <ssd1306_WriteString>
						  ssd1306_SetCursor(32,52);
 80040fe:	2134      	movs	r1, #52	@ 0x34
 8004100:	2020      	movs	r0, #32
 8004102:	f7fe ff15 	bl	8002f30 <ssd1306_SetCursor>
						  snprintf((char *)bufferscreen,50,"%d,%d",pageoffset,pagenumber);
 8004106:	4a3d      	ldr	r2, [pc, #244]	@ (80041fc <statemachine+0xc8c>)
 8004108:	4b3d      	ldr	r3, [pc, #244]	@ (8004200 <statemachine+0xc90>)
 800410a:	6812      	ldr	r2, [r2, #0]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	4822      	ldr	r0, [pc, #136]	@ (8004198 <statemachine+0xc28>)
 8004110:	9200      	str	r2, [sp, #0]
 8004112:	2132      	movs	r1, #50	@ 0x32
 8004114:	4a1f      	ldr	r2, [pc, #124]	@ (8004194 <statemachine+0xc24>)
 8004116:	f00b ffd3 	bl	80100c0 <sniprintf>
						  ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 800411a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800411e:	481e      	ldr	r0, [pc, #120]	@ (8004198 <statemachine+0xc28>)
 8004120:	2301      	movs	r3, #1
 8004122:	f7fe fee9 	bl	8002ef8 <ssd1306_WriteString>
						  if(BTN_A>=1){
 8004126:	f8db 2000 	ldr.w	r2, [fp]
 800412a:	2a00      	cmp	r2, #0
 800412c:	f77f aa68 	ble.w	8003600 <statemachine+0x90>
						  				  			 	state++;
 8004130:	7821      	ldrb	r1, [r4, #0]
						  				  			 	BTN_B=0;
 8004132:	4829      	ldr	r0, [pc, #164]	@ (80041d8 <statemachine+0xc68>)
						  				  			 	BTN_A=0;
 8004134:	2200      	movs	r2, #0
						  				  			 	state++;
 8004136:	3101      	adds	r1, #1
						  				  			 	BTN_B=0;
 8004138:	6002      	str	r2, [r0, #0]
						  				  			 	state++;
 800413a:	7021      	strb	r1, [r4, #0]
						  				  			 	BTN_A=0;
 800413c:	f8cb 2000 	str.w	r2, [fp]
						  				  			settimeen=0;
 8004140:	6032      	str	r2, [r6, #0]
						  if(BTN_A_LONG>=1){
 8004142:	f7ff ba5d 	b.w	8003600 <statemachine+0x90>
						  ssd1306_SetCursor(32,32);
 8004146:	2120      	movs	r1, #32
						  switch(ecranstate){
 8004148:	f8df 80bc 	ldr.w	r8, [pc, #188]	@ 8004208 <statemachine+0xc98>
						  ssd1306_SetCursor(32,32);
 800414c:	4608      	mov	r0, r1
 800414e:	f7fe feef 	bl	8002f30 <ssd1306_SetCursor>
						  switch(ecranstate){
 8004152:	f898 3000 	ldrb.w	r3, [r8]
 8004156:	2b05      	cmp	r3, #5
 8004158:	f200 83f2 	bhi.w	8004940 <statemachine+0x13d0>
 800415c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004160:	0150016f 	.word	0x0150016f
 8004164:	00fa011e 	.word	0x00fa011e
 8004168:	005600cf 	.word	0x005600cf
 800416c:	f3af 8000 	nop.w
 8004170:	00000000 	.word	0x00000000
 8004174:	40000000 	.word	0x40000000
 8004178:	00000000 	.word	0x00000000
 800417c:	40468000 	.word	0x40468000
 8004180:	d2f1a9fc 	.word	0xd2f1a9fc
 8004184:	3f50624d 	.word	0x3f50624d
 8004188:	08018134 	.word	0x08018134
 800418c:	2000179c 	.word	0x2000179c
 8004190:	200017a0 	.word	0x200017a0
 8004194:	08015e70 	.word	0x08015e70
 8004198:	20000680 	.word	0x20000680
 800419c:	2000002c 	.word	0x2000002c
 80041a0:	20000510 	.word	0x20000510
 80041a4:	20000024 	.word	0x20000024
 80041a8:	08015e98 	.word	0x08015e98
 80041ac:	20000fc0 	.word	0x20000fc0
 80041b0:	08015ea4 	.word	0x08015ea4
 80041b4:	20000fc8 	.word	0x20000fc8
 80041b8:	08015eb0 	.word	0x08015eb0
 80041bc:	200005d8 	.word	0x200005d8
 80041c0:	08015f04 	.word	0x08015f04
 80041c4:	20000408 	.word	0x20000408
 80041c8:	08015f10 	.word	0x08015f10
 80041cc:	08015f1c 	.word	0x08015f1c
 80041d0:	20000410 	.word	0x20000410
 80041d4:	08015f28 	.word	0x08015f28
 80041d8:	20000ff4 	.word	0x20000ff4
 80041dc:	2000062c 	.word	0x2000062c
 80041e0:	20000628 	.word	0x20000628
 80041e4:	200018a4 	.word	0x200018a4
 80041e8:	20000630 	.word	0x20000630
 80041ec:	200005e4 	.word	0x200005e4
 80041f0:	378bcf65 	.word	0x378bcf65
 80041f4:	08015e60 	.word	0x08015e60
 80041f8:	08015e68 	.word	0x08015e68
 80041fc:	200006b8 	.word	0x200006b8
 8004200:	200006bc 	.word	0x200006bc
 8004204:	20000ff8 	.word	0x20000ff8
 8004208:	200005dc 	.word	0x200005dc
							  snprintf((char  *)bufferscreen,50,"%0.1f",vitmax*3.6);
 800420c:	4b9c      	ldr	r3, [pc, #624]	@ (8004480 <statemachine+0xf10>)
							  							ssd1306_WriteString("MaxV",Font_6x8,White);
 800420e:	4c9d      	ldr	r4, [pc, #628]	@ (8004484 <statemachine+0xf14>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",vitmax*3.6);
 8004210:	6818      	ldr	r0, [r3, #0]
 8004212:	f7fc f971 	bl	80004f8 <__aeabi_f2d>
 8004216:	a396      	add	r3, pc, #600	@ (adr r3, 8004470 <statemachine+0xf00>)
 8004218:	e9d3 2300 	ldrd	r2, r3, [r3]
 800421c:	f7fc f9c4 	bl	80005a8 <__aeabi_dmul>
 8004220:	4a99      	ldr	r2, [pc, #612]	@ (8004488 <statemachine+0xf18>)
 8004222:	e9cd 0100 	strd	r0, r1, [sp]
 8004226:	2132      	movs	r1, #50	@ 0x32
 8004228:	4898      	ldr	r0, [pc, #608]	@ (800448c <statemachine+0xf1c>)
 800422a:	f00b ff49 	bl	80100c0 <sniprintf>
							  							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800422e:	4a98      	ldr	r2, [pc, #608]	@ (8004490 <statemachine+0xf20>)
 8004230:	4896      	ldr	r0, [pc, #600]	@ (800448c <statemachine+0xf1c>)
 8004232:	ca06      	ldmia	r2, {r1, r2}
 8004234:	2301      	movs	r3, #1
 8004236:	f7fe fe5f 	bl	8002ef8 <ssd1306_WriteString>
							  							ssd1306_SetCursor(32,42);
 800423a:	212a      	movs	r1, #42	@ 0x2a
 800423c:	2020      	movs	r0, #32
 800423e:	f7fe fe77 	bl	8002f30 <ssd1306_SetCursor>
							  							ssd1306_WriteString("MaxV",Font_6x8,White);
 8004242:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004246:	2301      	movs	r3, #1
 8004248:	4892      	ldr	r0, [pc, #584]	@ (8004494 <statemachine+0xf24>)
 800424a:	f7fe fe55 	bl	8002ef8 <ssd1306_WriteString>
							  if(BTN_B>=1){
 800424e:	4b92      	ldr	r3, [pc, #584]	@ (8004498 <statemachine+0xf28>)
 8004250:	681a      	ldr	r2, [r3, #0]
 8004252:	2a00      	cmp	r2, #0
 8004254:	f340 8324 	ble.w	80048a0 <statemachine+0x1330>
							  														ecranstate--;
 8004258:	f898 2000 	ldrb.w	r2, [r8]
 800425c:	3a05      	subs	r2, #5
							  													  	BTN_A=0;
 800425e:	498f      	ldr	r1, [pc, #572]	@ (800449c <statemachine+0xf2c>)
							  														ecranstate--;
 8004260:	f888 2000 	strb.w	r2, [r8]
							  													  	BTN_B=0;
 8004264:	4d8e      	ldr	r5, [pc, #568]	@ (80044a0 <statemachine+0xf30>)
 8004266:	2200      	movs	r2, #0
 8004268:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 800426a:	600a      	str	r2, [r1, #0]
 800426c:	4e8d      	ldr	r6, [pc, #564]	@ (80044a4 <statemachine+0xf34>)
						 	batterygauge(vbat,79, 42,1);
 800426e:	ed96 0a00 	vldr	s0, [r6]
 8004272:	2201      	movs	r2, #1
 8004274:	212a      	movs	r1, #42	@ 0x2a
 8004276:	204f      	movs	r0, #79	@ 0x4f
 8004278:	f7fe ff16 	bl	80030a8 <batterygauge>
						 	ssd1306_SetCursor(32,52);
 800427c:	2134      	movs	r1, #52	@ 0x34
 800427e:	2020      	movs	r0, #32
 8004280:	f7fe fe56 	bl	8002f30 <ssd1306_SetCursor>
						 	snprintf((char  *)bufferscreen,50, "%0.2fV",vbat);
 8004284:	6830      	ldr	r0, [r6, #0]
 8004286:	f7fc f937 	bl	80004f8 <__aeabi_f2d>
 800428a:	4a87      	ldr	r2, [pc, #540]	@ (80044a8 <statemachine+0xf38>)
 800428c:	e9cd 0100 	strd	r0, r1, [sp]
 8004290:	2132      	movs	r1, #50	@ 0x32
 8004292:	487e      	ldr	r0, [pc, #504]	@ (800448c <statemachine+0xf1c>)
 8004294:	f00b ff14 	bl	80100c0 <sniprintf>
						 	ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004298:	e894 0006 	ldmia.w	r4, {r1, r2}
 800429c:	2301      	movs	r3, #1
 800429e:	487b      	ldr	r0, [pc, #492]	@ (800448c <statemachine+0xf1c>)
 80042a0:	f7fe fe2a 	bl	8002ef8 <ssd1306_WriteString>
						 	ssd1306_SetCursor(65,52);
 80042a4:	2134      	movs	r1, #52	@ 0x34
 80042a6:	2041      	movs	r0, #65	@ 0x41
 80042a8:	f7fe fe42 	bl	8002f30 <ssd1306_SetCursor>
						 	snprintf((char  *)bufferscreen,50, "sat=%d",GNSSData.numSV);
 80042ac:	4a7f      	ldr	r2, [pc, #508]	@ (80044ac <statemachine+0xf3c>)
 80042ae:	f895 3078 	ldrb.w	r3, [r5, #120]	@ 0x78
 80042b2:	4876      	ldr	r0, [pc, #472]	@ (800448c <statemachine+0xf1c>)
 80042b4:	2132      	movs	r1, #50	@ 0x32
 80042b6:	f00b ff03 	bl	80100c0 <sniprintf>
						 	ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 80042ba:	e894 0006 	ldmia.w	r4, {r1, r2}
 80042be:	2301      	movs	r3, #1
 80042c0:	4872      	ldr	r0, [pc, #456]	@ (800448c <statemachine+0xf1c>)
 80042c2:	f7fe fe19 	bl	8002ef8 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 80042c6:	4b7a      	ldr	r3, [pc, #488]	@ (80044b0 <statemachine+0xf40>)
 80042c8:	681a      	ldr	r2, [r3, #0]
 80042ca:	2a00      	cmp	r2, #0
 80042cc:	f77f a9a5 	ble.w	800361a <statemachine+0xaa>
						  						  balisestate--;
 80042d0:	783a      	ldrb	r2, [r7, #0]
						  						osThreadSuspend(BALISEHandle);
 80042d2:	4878      	ldr	r0, [pc, #480]	@ (80044b4 <statemachine+0xf44>)
						  						  BTN_A=0;
 80042d4:	4971      	ldr	r1, [pc, #452]	@ (800449c <statemachine+0xf2c>)
						  						osThreadSuspend(BALISEHandle);
 80042d6:	6800      	ldr	r0, [r0, #0]
						  						  BTN_B_LONG=0;
 80042d8:	2400      	movs	r4, #0
 80042da:	601c      	str	r4, [r3, #0]
						  						  balisestate--;
 80042dc:	1e53      	subs	r3, r2, #1
						  						  BTN_A=0;
 80042de:	600c      	str	r4, [r1, #0]
						  						  balisestate--;
 80042e0:	703b      	strb	r3, [r7, #0]
						  						osThreadSuspend(BALISEHandle);
 80042e2:	f008 ffff 	bl	800d2e4 <osThreadSuspend>
						  						storeindex();
 80042e6:	f7fe f989 	bl	80025fc <storeindex>
						  						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 80042ea:	4873      	ldr	r0, [pc, #460]	@ (80044b8 <statemachine+0xf48>)
 80042ec:	4622      	mov	r2, r4
 80042ee:	2102      	movs	r1, #2
}
 80042f0:	b005      	add	sp, #20
 80042f2:	ecbd 8b04 	vpop	{d8-d9}
 80042f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
						  						HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 80042fa:	f002 b8dd 	b.w	80064b8 <HAL_GPIO_WritePin>
							  snprintf((char  *)bufferscreen,50,"%0.1f",vbat);
 80042fe:	4e69      	ldr	r6, [pc, #420]	@ (80044a4 <statemachine+0xf34>)
							  ssd1306_WriteString("Vbat(V)",Font_6x8,White);
 8004300:	4c60      	ldr	r4, [pc, #384]	@ (8004484 <statemachine+0xf14>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",vbat);
 8004302:	6830      	ldr	r0, [r6, #0]
 8004304:	f7fc f8f8 	bl	80004f8 <__aeabi_f2d>
 8004308:	4a5f      	ldr	r2, [pc, #380]	@ (8004488 <statemachine+0xf18>)
 800430a:	e9cd 0100 	strd	r0, r1, [sp]
 800430e:	2132      	movs	r1, #50	@ 0x32
 8004310:	485e      	ldr	r0, [pc, #376]	@ (800448c <statemachine+0xf1c>)
 8004312:	f00b fed5 	bl	80100c0 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004316:	4a5e      	ldr	r2, [pc, #376]	@ (8004490 <statemachine+0xf20>)
 8004318:	485c      	ldr	r0, [pc, #368]	@ (800448c <statemachine+0xf1c>)
 800431a:	ca06      	ldmia	r2, {r1, r2}
 800431c:	2301      	movs	r3, #1
 800431e:	f7fe fdeb 	bl	8002ef8 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 8004322:	212a      	movs	r1, #42	@ 0x2a
 8004324:	2020      	movs	r0, #32
 8004326:	f7fe fe03 	bl	8002f30 <ssd1306_SetCursor>
							  ssd1306_WriteString("Vbat(V)",Font_6x8,White);
 800432a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800432e:	2301      	movs	r3, #1
 8004330:	4862      	ldr	r0, [pc, #392]	@ (80044bc <statemachine+0xf4c>)
 8004332:	f7fe fde1 	bl	8002ef8 <ssd1306_WriteString>
							  if(BTN_B>=1){
 8004336:	4b58      	ldr	r3, [pc, #352]	@ (8004498 <statemachine+0xf28>)
 8004338:	681a      	ldr	r2, [r3, #0]
 800433a:	2a00      	cmp	r2, #0
 800433c:	dd08      	ble.n	8004350 <statemachine+0xde0>
							  														  ecranstate++;
 800433e:	f898 2000 	ldrb.w	r2, [r8]
 8004342:	3201      	adds	r2, #1
 8004344:	f888 2000 	strb.w	r2, [r8]
							  													  	BTN_B=0;
 8004348:	2200      	movs	r2, #0
 800434a:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 800434c:	4b53      	ldr	r3, [pc, #332]	@ (800449c <statemachine+0xf2c>)
 800434e:	601a      	str	r2, [r3, #0]
 8004350:	4d53      	ldr	r5, [pc, #332]	@ (80044a0 <statemachine+0xf30>)
 8004352:	e78c      	b.n	800426e <statemachine+0xcfe>
							  snprintf((char  *)bufferscreen,50,"%0.1lf",bmpalt);
 8004354:	4b5a      	ldr	r3, [pc, #360]	@ (80044c0 <statemachine+0xf50>)
 8004356:	4a5b      	ldr	r2, [pc, #364]	@ (80044c4 <statemachine+0xf54>)
							  							ssd1306_WriteString("alt(m)",Font_6x8,White);
 8004358:	4c4a      	ldr	r4, [pc, #296]	@ (8004484 <statemachine+0xf14>)
							  snprintf((char  *)bufferscreen,50,"%0.1lf",bmpalt);
 800435a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800435e:	e9cd 0100 	strd	r0, r1, [sp]
 8004362:	2132      	movs	r1, #50	@ 0x32
 8004364:	4849      	ldr	r0, [pc, #292]	@ (800448c <statemachine+0xf1c>)
 8004366:	f00b feab 	bl	80100c0 <sniprintf>
							  							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800436a:	4a49      	ldr	r2, [pc, #292]	@ (8004490 <statemachine+0xf20>)
 800436c:	4847      	ldr	r0, [pc, #284]	@ (800448c <statemachine+0xf1c>)
 800436e:	ca06      	ldmia	r2, {r1, r2}
 8004370:	2301      	movs	r3, #1
 8004372:	f7fe fdc1 	bl	8002ef8 <ssd1306_WriteString>
							  							ssd1306_SetCursor(32,42);
 8004376:	212a      	movs	r1, #42	@ 0x2a
 8004378:	2020      	movs	r0, #32
 800437a:	f7fe fdd9 	bl	8002f30 <ssd1306_SetCursor>
							  							ssd1306_WriteString("alt(m)",Font_6x8,White);
 800437e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004382:	4851      	ldr	r0, [pc, #324]	@ (80044c8 <statemachine+0xf58>)
 8004384:	2301      	movs	r3, #1
 8004386:	f7fe fdb7 	bl	8002ef8 <ssd1306_WriteString>
							  if(BTN_B>=1){
 800438a:	4b43      	ldr	r3, [pc, #268]	@ (8004498 <statemachine+0xf28>)
 800438c:	681a      	ldr	r2, [r3, #0]
 800438e:	2a00      	cmp	r2, #0
 8004390:	f340 8286 	ble.w	80048a0 <statemachine+0x1330>
							  														  ecranstate++;
 8004394:	f898 2000 	ldrb.w	r2, [r8]
 8004398:	3201      	adds	r2, #1
 800439a:	e760      	b.n	800425e <statemachine+0xcee>
							  snprintf((char  *)bufferscreen,50,"%0.1f",GNSSData.fgSpeed*3.6);
 800439c:	4d40      	ldr	r5, [pc, #256]	@ (80044a0 <statemachine+0xf30>)
							  ssd1306_WriteString("Vit(kmh)",Font_6x8,White);
 800439e:	4c39      	ldr	r4, [pc, #228]	@ (8004484 <statemachine+0xf14>)
							  snprintf((char  *)bufferscreen,50,"%0.1f",GNSSData.fgSpeed*3.6);
 80043a0:	f8d5 00c0 	ldr.w	r0, [r5, #192]	@ 0xc0
 80043a4:	f7fc f8a8 	bl	80004f8 <__aeabi_f2d>
 80043a8:	a331      	add	r3, pc, #196	@ (adr r3, 8004470 <statemachine+0xf00>)
 80043aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043ae:	f7fc f8fb 	bl	80005a8 <__aeabi_dmul>
 80043b2:	4a35      	ldr	r2, [pc, #212]	@ (8004488 <statemachine+0xf18>)
 80043b4:	e9cd 0100 	strd	r0, r1, [sp]
 80043b8:	2132      	movs	r1, #50	@ 0x32
 80043ba:	4834      	ldr	r0, [pc, #208]	@ (800448c <statemachine+0xf1c>)
 80043bc:	f00b fe80 	bl	80100c0 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 80043c0:	4a33      	ldr	r2, [pc, #204]	@ (8004490 <statemachine+0xf20>)
 80043c2:	4832      	ldr	r0, [pc, #200]	@ (800448c <statemachine+0xf1c>)
 80043c4:	ca06      	ldmia	r2, {r1, r2}
 80043c6:	2301      	movs	r3, #1
 80043c8:	f7fe fd96 	bl	8002ef8 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 80043cc:	212a      	movs	r1, #42	@ 0x2a
 80043ce:	2020      	movs	r0, #32
 80043d0:	f7fe fdae 	bl	8002f30 <ssd1306_SetCursor>
							  ssd1306_WriteString("Vit(kmh)",Font_6x8,White);
 80043d4:	e894 0006 	ldmia.w	r4, {r1, r2}
 80043d8:	2301      	movs	r3, #1
 80043da:	483c      	ldr	r0, [pc, #240]	@ (80044cc <statemachine+0xf5c>)
 80043dc:	f7fe fd8c 	bl	8002ef8 <ssd1306_WriteString>
							  if(BTN_B>=1){
 80043e0:	4b2d      	ldr	r3, [pc, #180]	@ (8004498 <statemachine+0xf28>)
 80043e2:	681a      	ldr	r2, [r3, #0]
 80043e4:	2a00      	cmp	r2, #0
 80043e6:	f77f af41 	ble.w	800426c <statemachine+0xcfc>
							  														  ecranstate++;
 80043ea:	f898 2000 	ldrb.w	r2, [r8]
 80043ee:	4e2d      	ldr	r6, [pc, #180]	@ (80044a4 <statemachine+0xf34>)
 80043f0:	3201      	adds	r2, #1
 80043f2:	f888 2000 	strb.w	r2, [r8]
							  													  	BTN_B=0;
 80043f6:	2200      	movs	r2, #0
 80043f8:	601a      	str	r2, [r3, #0]
							  													  	BTN_A=0;
 80043fa:	4b28      	ldr	r3, [pc, #160]	@ (800449c <statemachine+0xf2c>)
 80043fc:	601a      	str	r2, [r3, #0]
 80043fe:	e736      	b.n	800426e <statemachine+0xcfe>
							  snprintf((char  *)bufferscreen,50,"%0.3lf",distanceparcouru/1000);
 8004400:	4933      	ldr	r1, [pc, #204]	@ (80044d0 <statemachine+0xf60>)
							  ssd1306_WriteString("Dist(km)",Font_6x8,White);
 8004402:	4c20      	ldr	r4, [pc, #128]	@ (8004484 <statemachine+0xf14>)
							  snprintf((char  *)bufferscreen,50,"%0.3lf",distanceparcouru/1000);
 8004404:	a31c      	add	r3, pc, #112	@ (adr r3, 8004478 <statemachine+0xf08>)
 8004406:	e9d3 2300 	ldrd	r2, r3, [r3]
 800440a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800440e:	f7fc f8cb 	bl	80005a8 <__aeabi_dmul>
 8004412:	4a30      	ldr	r2, [pc, #192]	@ (80044d4 <statemachine+0xf64>)
 8004414:	e9cd 0100 	strd	r0, r1, [sp]
 8004418:	2132      	movs	r1, #50	@ 0x32
 800441a:	481c      	ldr	r0, [pc, #112]	@ (800448c <statemachine+0xf1c>)
 800441c:	f00b fe50 	bl	80100c0 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 8004420:	4a1b      	ldr	r2, [pc, #108]	@ (8004490 <statemachine+0xf20>)
 8004422:	481a      	ldr	r0, [pc, #104]	@ (800448c <statemachine+0xf1c>)
 8004424:	ca06      	ldmia	r2, {r1, r2}
 8004426:	2301      	movs	r3, #1
 8004428:	f7fe fd66 	bl	8002ef8 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 800442c:	212a      	movs	r1, #42	@ 0x2a
 800442e:	2020      	movs	r0, #32
 8004430:	f7fe fd7e 	bl	8002f30 <ssd1306_SetCursor>
							  ssd1306_WriteString("Dist(km)",Font_6x8,White);
 8004434:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004438:	4827      	ldr	r0, [pc, #156]	@ (80044d8 <statemachine+0xf68>)
 800443a:	2301      	movs	r3, #1
 800443c:	e7a3      	b.n	8004386 <statemachine+0xe16>
							  snprintf((char *)bufferscreen,50,"%d",pagenumber);
 800443e:	4b27      	ldr	r3, [pc, #156]	@ (80044dc <statemachine+0xf6c>)
 8004440:	4a27      	ldr	r2, [pc, #156]	@ (80044e0 <statemachine+0xf70>)
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	4811      	ldr	r0, [pc, #68]	@ (800448c <statemachine+0xf1c>)
							  ssd1306_WriteString("PageNb",Font_6x8,White);
 8004446:	4c0f      	ldr	r4, [pc, #60]	@ (8004484 <statemachine+0xf14>)
							  snprintf((char *)bufferscreen,50,"%d",pagenumber);
 8004448:	2132      	movs	r1, #50	@ 0x32
 800444a:	f00b fe39 	bl	80100c0 <sniprintf>
							  ssd1306_WriteString((char *)bufferscreen,Font_7x10,White);
 800444e:	4a10      	ldr	r2, [pc, #64]	@ (8004490 <statemachine+0xf20>)
 8004450:	480e      	ldr	r0, [pc, #56]	@ (800448c <statemachine+0xf1c>)
 8004452:	ca06      	ldmia	r2, {r1, r2}
 8004454:	2301      	movs	r3, #1
 8004456:	f7fe fd4f 	bl	8002ef8 <ssd1306_WriteString>
							  ssd1306_SetCursor(32,42);
 800445a:	212a      	movs	r1, #42	@ 0x2a
 800445c:	2020      	movs	r0, #32
 800445e:	f7fe fd67 	bl	8002f30 <ssd1306_SetCursor>
							  ssd1306_WriteString("PageNb",Font_6x8,White);
 8004462:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004466:	481f      	ldr	r0, [pc, #124]	@ (80044e4 <statemachine+0xf74>)
 8004468:	2301      	movs	r3, #1
 800446a:	e78c      	b.n	8004386 <statemachine+0xe16>
 800446c:	f3af 8000 	nop.w
 8004470:	cccccccd 	.word	0xcccccccd
 8004474:	400ccccc 	.word	0x400ccccc
 8004478:	d2f1a9fc 	.word	0xd2f1a9fc
 800447c:	3f50624d 	.word	0x3f50624d
 8004480:	2000063c 	.word	0x2000063c
 8004484:	2000002c 	.word	0x2000002c
 8004488:	08015db4 	.word	0x08015db4
 800448c:	20000680 	.word	0x20000680
 8004490:	20000024 	.word	0x20000024
 8004494:	08015e48 	.word	0x08015e48
 8004498:	20000ff4 	.word	0x20000ff4
 800449c:	20000ff8 	.word	0x20000ff8
 80044a0:	20000510 	.word	0x20000510
 80044a4:	20000fc0 	.word	0x20000fc0
 80044a8:	08015e50 	.word	0x08015e50
 80044ac:	08015e58 	.word	0x08015e58
 80044b0:	200005e4 	.word	0x200005e4
 80044b4:	200003f4 	.word	0x200003f4
 80044b8:	48000400 	.word	0x48000400
 80044bc:	08015e40 	.word	0x08015e40
 80044c0:	20000408 	.word	0x20000408
 80044c4:	08015e30 	.word	0x08015e30
 80044c8:	08015e38 	.word	0x08015e38
 80044cc:	08015dbc 	.word	0x08015dbc
 80044d0:	20000610 	.word	0x20000610
 80044d4:	08015e1c 	.word	0x08015e1c
 80044d8:	08015e24 	.word	0x08015e24
 80044dc:	200006b8 	.word	0x200006b8
 80044e0:	08015e10 	.word	0x08015e10
 80044e4:	08015e14 	.word	0x08015e14
				  						ssd1306_SetCursor(32, 32);
 80044e8:	2120      	movs	r1, #32
 80044ea:	4608      	mov	r0, r1
 80044ec:	f7fe fd20 	bl	8002f30 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "%0.0fmin%0.0fs",floor(pace),floor(sec));
 80044f0:	eeb0 0a49 	vmov.f32	s0, s18
 80044f4:	eef0 0a69 	vmov.f32	s1, s19
 80044f8:	f00f fb2e 	bl	8013b58 <floor>
 80044fc:	ee18 0a10 	vmov	r0, s16
 8004500:	eeb0 8a40 	vmov.f32	s16, s0
 8004504:	eef0 8a60 	vmov.f32	s17, s1
 8004508:	f7fb fff6 	bl	80004f8 <__aeabi_f2d>
 800450c:	ec41 0b10 	vmov	d0, r0, r1
 8004510:	f00f fb22 	bl	8013b58 <floor>
 8004514:	4ab2      	ldr	r2, [pc, #712]	@ (80047e0 <statemachine+0x1270>)
 8004516:	48b3      	ldr	r0, [pc, #716]	@ (80047e4 <statemachine+0x1274>)
				  						ssd1306_WriteString("pace", Font_6x8, White);
 8004518:	4db3      	ldr	r5, [pc, #716]	@ (80047e8 <statemachine+0x1278>)
				  						snprintf((char *)bufferscreen,15, "%0.0fmin%0.0fs",floor(pace),floor(sec));
 800451a:	ed8d 0b02 	vstr	d0, [sp, #8]
 800451e:	210f      	movs	r1, #15
 8004520:	ed8d 8b00 	vstr	d8, [sp]
 8004524:	f00b fdcc 	bl	80100c0 <sniprintf>
				  						ssd1306_WriteString((char *)bufferscreen, Font_7x10, White);
 8004528:	4ab0      	ldr	r2, [pc, #704]	@ (80047ec <statemachine+0x127c>)
 800452a:	48ae      	ldr	r0, [pc, #696]	@ (80047e4 <statemachine+0x1274>)
 800452c:	ca06      	ldmia	r2, {r1, r2}
 800452e:	2301      	movs	r3, #1
 8004530:	f7fe fce2 	bl	8002ef8 <ssd1306_WriteString>
				  						ssd1306_SetCursor(32, 42);
 8004534:	212a      	movs	r1, #42	@ 0x2a
 8004536:	2020      	movs	r0, #32
 8004538:	f7fe fcfa 	bl	8002f30 <ssd1306_SetCursor>
				  						ssd1306_WriteString("pace", Font_6x8, White);
 800453c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004540:	2301      	movs	r3, #1
 8004542:	48ab      	ldr	r0, [pc, #684]	@ (80047f0 <statemachine+0x1280>)
 8004544:	f7fe fcd8 	bl	8002ef8 <ssd1306_WriteString>
				  						ssd1306_SetCursor(32, 56);
 8004548:	2138      	movs	r1, #56	@ 0x38
 800454a:	2020      	movs	r0, #32
 800454c:	f7fe fcf0 	bl	8002f30 <ssd1306_SetCursor>
				  						snprintf((char *)bufferscreen,15, "V=%0.1fkmh",vitmax*3.6);
 8004550:	6838      	ldr	r0, [r7, #0]
 8004552:	f7fb ffd1 	bl	80004f8 <__aeabi_f2d>
 8004556:	a3a0      	add	r3, pc, #640	@ (adr r3, 80047d8 <statemachine+0x1268>)
 8004558:	e9d3 2300 	ldrd	r2, r3, [r3]
 800455c:	f7fc f824 	bl	80005a8 <__aeabi_dmul>
 8004560:	4aa4      	ldr	r2, [pc, #656]	@ (80047f4 <statemachine+0x1284>)
 8004562:	e9cd 0100 	strd	r0, r1, [sp]
 8004566:	210f      	movs	r1, #15
 8004568:	489e      	ldr	r0, [pc, #632]	@ (80047e4 <statemachine+0x1274>)
 800456a:	f00b fda9 	bl	80100c0 <sniprintf>
				  						ssd1306_WriteString((char *)bufferscreen, Font_6x8, White);
 800456e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004572:	2301      	movs	r3, #1
 8004574:	489b      	ldr	r0, [pc, #620]	@ (80047e4 <statemachine+0x1274>)
 8004576:	f7fe fcbf 	bl	8002ef8 <ssd1306_WriteString>
				  						batterygauge(vbat,79, 43,1);
 800457a:	4b9f      	ldr	r3, [pc, #636]	@ (80047f8 <statemachine+0x1288>)
 800457c:	2201      	movs	r2, #1
 800457e:	ed93 0a00 	vldr	s0, [r3]
 8004582:	212b      	movs	r1, #43	@ 0x2b
 8004584:	204f      	movs	r0, #79	@ 0x4f
 8004586:	f7fe fd8f 	bl	80030a8 <batterygauge>
				  					 if(BTN_B>=1){
 800458a:	4b9c      	ldr	r3, [pc, #624]	@ (80047fc <statemachine+0x128c>)
 800458c:	681a      	ldr	r2, [r3, #0]
 800458e:	2a00      	cmp	r2, #0
 8004590:	f77f a889 	ble.w	80036a6 <statemachine+0x136>
				  								spdstate--;
 8004594:	f898 2000 	ldrb.w	r2, [r8]
 8004598:	3a02      	subs	r2, #2
 800459a:	f888 2000 	strb.w	r2, [r8]
				  								BTN_B=0;
 800459e:	2200      	movs	r2, #0
 80045a0:	601a      	str	r2, [r3, #0]
 80045a2:	f7ff b880 	b.w	80036a6 <statemachine+0x136>
					 ssd1306_SetCursor(32, 32);
 80045a6:	2120      	movs	r1, #32
 80045a8:	4608      	mov	r0, r1
 80045aa:	f7fe fcc1 	bl	8002f30 <ssd1306_SetCursor>
					 snprintf((char *)bufferscreen,15, "%0.1f",vitmax*3.6);
 80045ae:	6838      	ldr	r0, [r7, #0]
 80045b0:	f7fb ffa2 	bl	80004f8 <__aeabi_f2d>
 80045b4:	a388      	add	r3, pc, #544	@ (adr r3, 80047d8 <statemachine+0x1268>)
 80045b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80045ba:	f7fb fff5 	bl	80005a8 <__aeabi_dmul>
 80045be:	4a90      	ldr	r2, [pc, #576]	@ (8004800 <statemachine+0x1290>)
 80045c0:	e9cd 0100 	strd	r0, r1, [sp]
 80045c4:	210f      	movs	r1, #15
 80045c6:	4887      	ldr	r0, [pc, #540]	@ (80047e4 <statemachine+0x1274>)
 80045c8:	f00b fd7a 	bl	80100c0 <sniprintf>
					 ssd1306_WriteString((char *)bufferscreen, Font_16x24, White);
 80045cc:	4b8d      	ldr	r3, [pc, #564]	@ (8004804 <statemachine+0x1294>)
 80045ce:	4885      	ldr	r0, [pc, #532]	@ (80047e4 <statemachine+0x1274>)
 80045d0:	e893 0006 	ldmia.w	r3, {r1, r2}
 80045d4:	4633      	mov	r3, r6
 80045d6:	f7fe fc8f 	bl	8002ef8 <ssd1306_WriteString>
					 ssd1306_SetCursor(32, 56);
 80045da:	2138      	movs	r1, #56	@ 0x38
 80045dc:	2020      	movs	r0, #32
 80045de:	f7fe fca7 	bl	8002f30 <ssd1306_SetCursor>
					 ssd1306_WriteString("maxV", Font_6x8, White);
 80045e2:	4b81      	ldr	r3, [pc, #516]	@ (80047e8 <statemachine+0x1278>)
 80045e4:	4888      	ldr	r0, [pc, #544]	@ (8004808 <statemachine+0x1298>)
 80045e6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80045ea:	4633      	mov	r3, r6
 80045ec:	f7fe fc84 	bl	8002ef8 <ssd1306_WriteString>
					 batterygauge(vbat,79, 57,1);
 80045f0:	4b81      	ldr	r3, [pc, #516]	@ (80047f8 <statemachine+0x1288>)
 80045f2:	4632      	mov	r2, r6
 80045f4:	ed93 0a00 	vldr	s0, [r3]
 80045f8:	2139      	movs	r1, #57	@ 0x39
 80045fa:	204f      	movs	r0, #79	@ 0x4f
 80045fc:	f7fe fd54 	bl	80030a8 <batterygauge>
					 if(BTN_B>=1){
 8004600:	4b7e      	ldr	r3, [pc, #504]	@ (80047fc <statemachine+0x128c>)
 8004602:	681a      	ldr	r2, [r3, #0]
 8004604:	2a00      	cmp	r2, #0
 8004606:	f77f a84e 	ble.w	80036a6 <statemachine+0x136>
					 							spdstate++;
 800460a:	f898 2000 	ldrb.w	r2, [r8]
 800460e:	3201      	adds	r2, #1
 8004610:	f888 2000 	strb.w	r2, [r8]
					 							BTN_B=0;
 8004614:	2200      	movs	r2, #0
 8004616:	601a      	str	r2, [r3, #0]
 8004618:	f7ff b845 	b.w	80036a6 <statemachine+0x136>
						  ssd1306_SetCursor(32,40);
 800461c:	2128      	movs	r1, #40	@ 0x28
 800461e:	2020      	movs	r0, #32
 8004620:	f7fe fc86 	bl	8002f30 <ssd1306_SetCursor>
						  ssd1306_WriteString("Please stop",Font_6x8,White);
 8004624:	2301      	movs	r3, #1
 8004626:	e895 0006 	ldmia.w	r5, {r1, r2}
 800462a:	4878      	ldr	r0, [pc, #480]	@ (800480c <statemachine+0x129c>)
 800462c:	f7fe fc64 	bl	8002ef8 <ssd1306_WriteString>
						  if(GNSSData.fgSpeed<=1.0){
 8004630:	4b77      	ldr	r3, [pc, #476]	@ (8004810 <statemachine+0x12a0>)
 8004632:	ed93 7a30 	vldr	s14, [r3, #192]	@ 0xc0
 8004636:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800463a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800463e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004642:	f63e afcf 	bhi.w	80035e4 <statemachine+0x74>
 8004646:	f7fe bfca 	b.w	80035de <statemachine+0x6e>
						  timecounter++;
 800464a:	4a72      	ldr	r2, [pc, #456]	@ (8004814 <statemachine+0x12a4>)
 800464c:	6813      	ldr	r3, [r2, #0]
 800464e:	3301      	adds	r3, #1
						  if(timecounter>=10){
 8004650:	2b09      	cmp	r3, #9
						  timecounter++;
 8004652:	6013      	str	r3, [r2, #0]
						  if(timecounter>=10){
 8004654:	dd17      	ble.n	8004686 <statemachine+0x1116>
							  timecounter=0;
 8004656:	2300      	movs	r3, #0
 8004658:	6013      	str	r3, [r2, #0]
							  ssd1306_SetCursor(32,40);
 800465a:	2128      	movs	r1, #40	@ 0x28
 800465c:	2020      	movs	r0, #32
 800465e:	f7fe fc67 	bl	8002f30 <ssd1306_SetCursor>
							  ssd1306_WriteString("Push B",Font_7x10,White);
 8004662:	4a62      	ldr	r2, [pc, #392]	@ (80047ec <statemachine+0x127c>)
 8004664:	486c      	ldr	r0, [pc, #432]	@ (8004818 <statemachine+0x12a8>)
 8004666:	ca06      	ldmia	r2, {r1, r2}
 8004668:	2301      	movs	r3, #1
 800466a:	f7fe fc45 	bl	8002ef8 <ssd1306_WriteString>
						  if(BTN_B_LONG>=1){
 800466e:	4b6b      	ldr	r3, [pc, #428]	@ (800481c <statemachine+0x12ac>)
 8004670:	681a      	ldr	r2, [r3, #0]
 8004672:	2a00      	cmp	r2, #0
 8004674:	f77e afb6 	ble.w	80035e4 <statemachine+0x74>
							  accelstate++;
 8004678:	7832      	ldrb	r2, [r6, #0]
						  				 						BTN_B_LONG=0;
 800467a:	2100      	movs	r1, #0
							  accelstate++;
 800467c:	3201      	adds	r2, #1
 800467e:	7032      	strb	r2, [r6, #0]
						  				 						BTN_B_LONG=0;
 8004680:	6019      	str	r1, [r3, #0]
 8004682:	f7fe bfaf 	b.w	80035e4 <statemachine+0x74>
						  if(timecounter%2==0){
 8004686:	07db      	lsls	r3, r3, #31
 8004688:	d4f1      	bmi.n	800466e <statemachine+0x10fe>
 800468a:	e7e6      	b.n	800465a <statemachine+0x10ea>
				 					 if(BTN_A>=1){
 800468c:	f8df b1b0 	ldr.w	fp, [pc, #432]	@ 8004840 <statemachine+0x12d0>
 8004690:	f8db 0000 	ldr.w	r0, [fp]
 8004694:	2800      	cmp	r0, #0
 8004696:	f77f a9c8 	ble.w	8003a2a <statemachine+0x4ba>
				 						 state++;
 800469a:	7820      	ldrb	r0, [r4, #0]
				 									  			 	BTN_A=0;
 800469c:	f8cb 1000 	str.w	r1, [fp]
				 						 state++;
 80046a0:	3001      	adds	r0, #1
 80046a2:	7020      	strb	r0, [r4, #0]
				 									  			 	BTN_B=0;
 80046a4:	6011      	str	r1, [r2, #0]
				 					if(BTN_A_LONG>=1){
 80046a6:	f7ff b9c0 	b.w	8003a2a <statemachine+0x4ba>
						 					 if(BTN_A>=1){
 80046aa:	f8df b194 	ldr.w	fp, [pc, #404]	@ 8004840 <statemachine+0x12d0>
 80046ae:	f8db 1000 	ldr.w	r1, [fp]
 80046b2:	2900      	cmp	r1, #0
 80046b4:	f77f a9b9 	ble.w	8003a2a <statemachine+0x4ba>
						 						 	state++;
 80046b8:	7821      	ldrb	r1, [r4, #0]
						 							BTN_A=0;
 80046ba:	2000      	movs	r0, #0
						 						 	state++;
 80046bc:	3101      	adds	r1, #1
 80046be:	7021      	strb	r1, [r4, #0]
						 							BTN_A=0;
 80046c0:	f8cb 0000 	str.w	r0, [fp]
						 							BTN_B=0;
 80046c4:	6010      	str	r0, [r2, #0]
 80046c6:	f7ff b9b0 	b.w	8003a2a <statemachine+0x4ba>
							osThreadResume(BALISEHandle);
 80046ca:	4a55      	ldr	r2, [pc, #340]	@ (8004820 <statemachine+0x12b0>)
							BTN_A=0;
 80046cc:	f8df b170 	ldr.w	fp, [pc, #368]	@ 8004840 <statemachine+0x12d0>
							osThreadResume(BALISEHandle);
 80046d0:	6810      	ldr	r0, [r2, #0]
							balisestate++;
 80046d2:	783a      	ldrb	r2, [r7, #0]
							BTN_B_LONG=0;
 80046d4:	601d      	str	r5, [r3, #0]
							BTN_A=0;
 80046d6:	f8cb 5000 	str.w	r5, [fp]
							oldlat=GNSSData.fLat;
 80046da:	4d4d      	ldr	r5, [pc, #308]	@ (8004810 <statemachine+0x12a0>)
							balisestate++;
 80046dc:	3201      	adds	r2, #1
 80046de:	703a      	strb	r2, [r7, #0]
							osThreadResume(BALISEHandle);
 80046e0:	f008 fe06 	bl	800d2f0 <osThreadResume>
							oldlat=GNSSData.fLat;
 80046e4:	f8d5 0090 	ldr.w	r0, [r5, #144]	@ 0x90
 80046e8:	4f4e      	ldr	r7, [pc, #312]	@ (8004824 <statemachine+0x12b4>)
 80046ea:	f7fb ff05 	bl	80004f8 <__aeabi_f2d>
 80046ee:	e9c7 0100 	strd	r0, r1, [r7]
							oldlong=GNSSData.fLon;
 80046f2:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 80046f6:	4d4c      	ldr	r5, [pc, #304]	@ (8004828 <statemachine+0x12b8>)
 80046f8:	f7fb fefe 	bl	80004f8 <__aeabi_f2d>
 80046fc:	e9c5 0100 	strd	r0, r1, [r5]
 8004700:	f7ff b831 	b.w	8003766 <statemachine+0x1f6>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004704:	4f49      	ldr	r7, [pc, #292]	@ (800482c <statemachine+0x12bc>)
				 						erasetime=HAL_GetTick();
 8004706:	f000 ff01 	bl	800550c <HAL_GetTick>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800470a:	683a      	ldr	r2, [r7, #0]
				 						erasetime=HAL_GetTick();
 800470c:	4b48      	ldr	r3, [pc, #288]	@ (8004830 <statemachine+0x12c0>)
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 800470e:	320f      	adds	r2, #15
				 						erasetime=HAL_GetTick();
 8004710:	6018      	str	r0, [r3, #0]
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004712:	db38      	blt.n	8004786 <statemachine+0x1216>
 8004714:	2600      	movs	r6, #0
				 								percentage((float) 0);
 8004716:	ed9f 8a47 	vldr	s16, [pc, #284]	@ 8004834 <statemachine+0x12c4>
				 							ssd1306_WriteString("usb",Font_6x8,White);
 800471a:	f8df 9128 	ldr.w	r9, [pc, #296]	@ 8004844 <statemachine+0x12d4>
				 							SPIF_EraseSector(&hspif1,i);
 800471e:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 8004838 <statemachine+0x12c8>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004722:	4635      	mov	r5, r6
				 							ssd1306_Fill(Black);
 8004724:	2000      	movs	r0, #0
 8004726:	f7fe f93f 	bl	80029a8 <ssd1306_Fill>
				 							ssd1306_SetCursor(32,32);
 800472a:	2120      	movs	r1, #32
 800472c:	4608      	mov	r0, r1
 800472e:	f7fe fbff 	bl	8002f30 <ssd1306_SetCursor>
				 							ssd1306_WriteString("usb",Font_6x8,White);
 8004732:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004736:	2301      	movs	r3, #1
 8004738:	4648      	mov	r0, r9
 800473a:	f7fe fbdd 	bl	8002ef8 <ssd1306_WriteString>
				 							SPIF_EraseSector(&hspif1,i);
 800473e:	4629      	mov	r1, r5
 8004740:	4640      	mov	r0, r8
 8004742:	f00a f939 	bl	800e9b8 <SPIF_EraseSector>
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004746:	ee07 6a90 	vmov	s15, r6
				 								percentage((float) 0);
 800474a:	eeb0 0a48 	vmov.f32	s0, s16
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 800474e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				 							if(i>=1){
 8004752:	b395      	cbz	r5, 80047ba <statemachine+0x124a>
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004754:	683b      	ldr	r3, [r7, #0]
 8004756:	2b00      	cmp	r3, #0
 8004758:	bfb8      	it	lt
 800475a:	330f      	addlt	r3, #15
 800475c:	111b      	asrs	r3, r3, #4
 800475e:	ee07 3a10 	vmov	s14, r3
 8004762:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004766:	3501      	adds	r5, #1
				 							percentage((float) (i*100)/((int)floor((pagenumber)/16)));
 8004768:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800476c:	f7fe fdf4 	bl	8003358 <percentage>
				 							ssd1306_UpdateScreen();
 8004770:	f7fe f926 	bl	80029c0 <ssd1306_UpdateScreen>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 8004774:	683b      	ldr	r3, [r7, #0]
 8004776:	2b00      	cmp	r3, #0
 8004778:	bfb8      	it	lt
 800477a:	330f      	addlt	r3, #15
 800477c:	ebb5 1f23 	cmp.w	r5, r3, asr #4
 8004780:	f106 0664 	add.w	r6, r6, #100	@ 0x64
 8004784:	ddce      	ble.n	8004724 <statemachine+0x11b4>
				 						SPIF_EraseSector(&hspif1, (int)floor((MAX_WRITE_PAGE+1)/16));
 8004786:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
 800478a:	482b      	ldr	r0, [pc, #172]	@ (8004838 <statemachine+0x12c8>)
 800478c:	f00a f914 	bl	800e9b8 <SPIF_EraseSector>
				 						erasetime=HAL_GetTick()-erasetime;
 8004790:	f000 febc 	bl	800550c <HAL_GetTick>
 8004794:	4b26      	ldr	r3, [pc, #152]	@ (8004830 <statemachine+0x12c0>)
				 						pageoffset=0;
 8004796:	4929      	ldr	r1, [pc, #164]	@ (800483c <statemachine+0x12cc>)
				 						erasetime=HAL_GetTick()-erasetime;
 8004798:	681a      	ldr	r2, [r3, #0]
 800479a:	1a82      	subs	r2, r0, r2
				 						pageoffset=0;
 800479c:	2400      	movs	r4, #0
				 						erasetime=HAL_GetTick()-erasetime;
 800479e:	601a      	str	r2, [r3, #0]
				 						erasedisplay=1;
 80047a0:	2201      	movs	r2, #1
 80047a2:	f8ca 2000 	str.w	r2, [sl]
				 						pageoffset=0;
 80047a6:	600c      	str	r4, [r1, #0]
				 						pagenumber=0;
 80047a8:	603c      	str	r4, [r7, #0]
				 						storeindex();
 80047aa:	f7fd ff27 	bl	80025fc <storeindex>
				 						BTN_B=0;
 80047ae:	4a13      	ldr	r2, [pc, #76]	@ (80047fc <statemachine+0x128c>)
				 						BTN_A=0;
 80047b0:	f8cb 4000 	str.w	r4, [fp]
				 						BTN_B=0;
 80047b4:	6014      	str	r4, [r2, #0]
				 					if(BTN_B>=1){
 80047b6:	f7fe bf30 	b.w	800361a <statemachine+0xaa>
				 								percentage((float) 0);
 80047ba:	f7fe fdcd 	bl	8003358 <percentage>
				 							ssd1306_UpdateScreen();
 80047be:	f7fe f8ff 	bl	80029c0 <ssd1306_UpdateScreen>
				 						for(int i=0;i<=(int)floor((pagenumber)/16);i++){
 80047c2:	683b      	ldr	r3, [r7, #0]
 80047c4:	2b0f      	cmp	r3, #15
 80047c6:	f04f 0501 	mov.w	r5, #1
 80047ca:	f106 0664 	add.w	r6, r6, #100	@ 0x64
 80047ce:	dca9      	bgt.n	8004724 <statemachine+0x11b4>
 80047d0:	e7d9      	b.n	8004786 <statemachine+0x1216>
 80047d2:	bf00      	nop
 80047d4:	f3af 8000 	nop.w
 80047d8:	cccccccd 	.word	0xcccccccd
 80047dc:	400ccccc 	.word	0x400ccccc
 80047e0:	08015dd0 	.word	0x08015dd0
 80047e4:	20000680 	.word	0x20000680
 80047e8:	2000002c 	.word	0x2000002c
 80047ec:	20000024 	.word	0x20000024
 80047f0:	08015de0 	.word	0x08015de0
 80047f4:	08015de8 	.word	0x08015de8
 80047f8:	20000fc0 	.word	0x20000fc0
 80047fc:	20000ff4 	.word	0x20000ff4
 8004800:	08015db4 	.word	0x08015db4
 8004804:	2000001c 	.word	0x2000001c
 8004808:	08015dc8 	.word	0x08015dc8
 800480c:	08015fd4 	.word	0x08015fd4
 8004810:	20000510 	.word	0x20000510
 8004814:	20001538 	.word	0x20001538
 8004818:	08015fcc 	.word	0x08015fcc
 800481c:	200005e4 	.word	0x200005e4
 8004820:	200003f4 	.word	0x200003f4
 8004824:	20000608 	.word	0x20000608
 8004828:	20000600 	.word	0x20000600
 800482c:	200006b8 	.word	0x200006b8
 8004830:	20000620 	.word	0x20000620
 8004834:	00000000 	.word	0x00000000
 8004838:	20000fd4 	.word	0x20000fd4
 800483c:	200006bc 	.word	0x200006bc
 8004840:	20000ff8 	.word	0x20000ff8
 8004844:	08015f70 	.word	0x08015f70
				 					ssd1306_WriteString("push A",Font_6x8,White);
 8004848:	4d3f      	ldr	r5, [pc, #252]	@ (8004948 <statemachine+0x13d8>)
				 					if(BTN_A>=1){
 800484a:	f8df b13c 	ldr.w	fp, [pc, #316]	@ 8004988 <statemachine+0x1418>
				 					ssd1306_Fill(Black);
 800484e:	f7fe f8ab 	bl	80029a8 <ssd1306_Fill>
				 					ssd1306_SetCursor(32,40);
 8004852:	2128      	movs	r1, #40	@ 0x28
 8004854:	2020      	movs	r0, #32
 8004856:	f7fe fb6b 	bl	8002f30 <ssd1306_SetCursor>
				 					ssd1306_WriteString("push A",Font_6x8,White);
 800485a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800485e:	2301      	movs	r3, #1
 8004860:	483a      	ldr	r0, [pc, #232]	@ (800494c <statemachine+0x13dc>)
 8004862:	f7fe fb49 	bl	8002ef8 <ssd1306_WriteString>
				 					ssd1306_SetCursor(32,32);
 8004866:	2120      	movs	r1, #32
 8004868:	4608      	mov	r0, r1
 800486a:	f7fe fb61 	bl	8002f30 <ssd1306_SetCursor>
				 					ssd1306_WriteString("write",Font_6x8,White);
 800486e:	e895 0006 	ldmia.w	r5, {r1, r2}
 8004872:	4837      	ldr	r0, [pc, #220]	@ (8004950 <statemachine+0x13e0>)
 8004874:	2301      	movs	r3, #1
 8004876:	f7fe fb3f 	bl	8002ef8 <ssd1306_WriteString>
				 					if(BTN_A>=1){
 800487a:	f8db 2000 	ldr.w	r2, [fp]
 800487e:	2a00      	cmp	r2, #0
 8004880:	f77e aecb 	ble.w	800361a <statemachine+0xaa>
				 					if(usbtransmiten==0){
 8004884:	6822      	ldr	r2, [r4, #0]
 8004886:	2a00      	cmp	r2, #0
 8004888:	f47f a8e9 	bne.w	8003a5e <statemachine+0x4ee>
				 						osThreadResume(USBTRANSMITHandle);
 800488c:	4831      	ldr	r0, [pc, #196]	@ (8004954 <statemachine+0x13e4>)
				 						usbtransmitstate=STATE_UNDER16PAGES1;
 800488e:	4932      	ldr	r1, [pc, #200]	@ (8004958 <statemachine+0x13e8>)
				 						osThreadResume(USBTRANSMITHandle);
 8004890:	6800      	ldr	r0, [r0, #0]
				 						usbtransmitstate=STATE_UNDER16PAGES1;
 8004892:	700a      	strb	r2, [r1, #0]
				 						osThreadResume(USBTRANSMITHandle);
 8004894:	f008 fd2c 	bl	800d2f0 <osThreadResume>
				 					usbtransmiten=1;
 8004898:	2201      	movs	r2, #1
 800489a:	6022      	str	r2, [r4, #0]
 800489c:	f7ff b8df 	b.w	8003a5e <statemachine+0x4ee>
 80048a0:	4d2e      	ldr	r5, [pc, #184]	@ (800495c <statemachine+0x13ec>)
 80048a2:	4e2f      	ldr	r6, [pc, #188]	@ (8004960 <statemachine+0x13f0>)
 80048a4:	e4e3      	b.n	800426e <statemachine+0xcfe>
			  							HR=GNSSData.hour;
 80048a6:	4a2d      	ldr	r2, [pc, #180]	@ (800495c <statemachine+0x13ec>)
 80048a8:	4e2e      	ldr	r6, [pc, #184]	@ (8004964 <statemachine+0x13f4>)
			  							MINUTE=GNSSData.min;
 80048aa:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 800498c <statemachine+0x141c>
			  							SEC=GNSSData.sec;
 80048ae:	4f2e      	ldr	r7, [pc, #184]	@ (8004968 <statemachine+0x13f8>)
			  							HR=GNSSData.hour;
 80048b0:	f892 0074 	ldrb.w	r0, [r2, #116]	@ 0x74
 80048b4:	7030      	strb	r0, [r6, #0]
			  							settimeen=1;
 80048b6:	2101      	movs	r1, #1
 80048b8:	6019      	str	r1, [r3, #0]
			  							MINUTE=GNSSData.min;
 80048ba:	f892 1075 	ldrb.w	r1, [r2, #117]	@ 0x75
			  							SEC=GNSSData.sec;
 80048be:	f892 2076 	ldrb.w	r2, [r2, #118]	@ 0x76
			  							MINUTE=GNSSData.min;
 80048c2:	f888 1000 	strb.w	r1, [r8]
			  							SEC=GNSSData.sec;
 80048c6:	703a      	strb	r2, [r7, #0]
			  							set_time (HR, MINUTE, SEC);
 80048c8:	f7fd fd58 	bl	800237c <set_time>
 80048cc:	f7ff b989 	b.w	8003be2 <statemachine+0x672>
					 					 ssd1306_Fill(Black);
 80048d0:	2000      	movs	r0, #0
 80048d2:	f7fe f869 	bl	80029a8 <ssd1306_Fill>
					 					 ssd1306_SetCursor(32,32);
 80048d6:	2120      	movs	r1, #32
 80048d8:	4608      	mov	r0, r1
 80048da:	f7fe fb29 	bl	8002f30 <ssd1306_SetCursor>
					 					ssd1306_WriteString("usb",Font_6x8,White);
 80048de:	e894 0006 	ldmia.w	r4, {r1, r2}
 80048e2:	4633      	mov	r3, r6
 80048e4:	4821      	ldr	r0, [pc, #132]	@ (800496c <statemachine+0x13fc>)
 80048e6:	f7fe fb07 	bl	8002ef8 <ssd1306_WriteString>
					 					ssd1306_SetCursor(32,42);
 80048ea:	212a      	movs	r1, #42	@ 0x2a
 80048ec:	2020      	movs	r0, #32
 80048ee:	f7fe fb1f 	bl	8002f30 <ssd1306_SetCursor>
					 					ssd1306_WriteString("FIN",Font_7x10,White);
 80048f2:	4b1f      	ldr	r3, [pc, #124]	@ (8004970 <statemachine+0x1400>)
 80048f4:	481f      	ldr	r0, [pc, #124]	@ (8004974 <statemachine+0x1404>)
 80048f6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80048fa:	4633      	mov	r3, r6
 80048fc:	f7fe fafc 	bl	8002ef8 <ssd1306_WriteString>
					 					ssd1306_SetCursor(32,56);
 8004900:	2138      	movs	r1, #56	@ 0x38
 8004902:	2020      	movs	r0, #32
 8004904:	f7fe fb14 	bl	8002f30 <ssd1306_SetCursor>
				 						snprintf((char  *)bufferscreen,50,"t=%0.2f",(float)erasetime/1000);
 8004908:	4b1b      	ldr	r3, [pc, #108]	@ (8004978 <statemachine+0x1408>)
 800490a:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 800497c <statemachine+0x140c>
 800490e:	edd3 7a00 	vldr	s15, [r3]
 8004912:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004916:	ee67 7a87 	vmul.f32	s15, s15, s14
 800491a:	ee17 0a90 	vmov	r0, s15
 800491e:	f7fb fdeb 	bl	80004f8 <__aeabi_f2d>
 8004922:	4a17      	ldr	r2, [pc, #92]	@ (8004980 <statemachine+0x1410>)
 8004924:	e9cd 0100 	strd	r0, r1, [sp]
 8004928:	2132      	movs	r1, #50	@ 0x32
 800492a:	4816      	ldr	r0, [pc, #88]	@ (8004984 <statemachine+0x1414>)
 800492c:	f00b fbc8 	bl	80100c0 <sniprintf>
				 						ssd1306_WriteString((char *)bufferscreen,Font_6x8,White);
 8004930:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004934:	4633      	mov	r3, r6
 8004936:	4813      	ldr	r0, [pc, #76]	@ (8004984 <statemachine+0x1414>)
 8004938:	f7fe fade 	bl	8002ef8 <ssd1306_WriteString>
 800493c:	f7ff b8bc 	b.w	8003ab8 <statemachine+0x548>
 8004940:	4d06      	ldr	r5, [pc, #24]	@ (800495c <statemachine+0x13ec>)
 8004942:	4c01      	ldr	r4, [pc, #4]	@ (8004948 <statemachine+0x13d8>)
 8004944:	4e06      	ldr	r6, [pc, #24]	@ (8004960 <statemachine+0x13f0>)
 8004946:	e492      	b.n	800426e <statemachine+0xcfe>
 8004948:	2000002c 	.word	0x2000002c
 800494c:	08015fa0 	.word	0x08015fa0
 8004950:	08015fa8 	.word	0x08015fa8
 8004954:	200003f0 	.word	0x200003f0
 8004958:	20001790 	.word	0x20001790
 800495c:	20000510 	.word	0x20000510
 8004960:	20000fc0 	.word	0x20000fc0
 8004964:	200005fd 	.word	0x200005fd
 8004968:	200005fe 	.word	0x200005fe
 800496c:	08015f70 	.word	0x08015f70
 8004970:	20000024 	.word	0x20000024
 8004974:	08015f94 	.word	0x08015f94
 8004978:	20000620 	.word	0x20000620
 800497c:	3a83126f 	.word	0x3a83126f
 8004980:	08015f98 	.word	0x08015f98
 8004984:	20000680 	.word	0x20000680
 8004988:	20000ff8 	.word	0x20000ff8
 800498c:	200005fc 	.word	0x200005fc

08004990 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004990:	b500      	push	{lr}
  SET_BIT(RCC->AHB3ENR, Periphs);
 8004992:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8004996:	b083      	sub	sp, #12
 8004998:	6d18      	ldr	r0, [r3, #80]	@ 0x50
 800499a:	f440 2000 	orr.w	r0, r0, #524288	@ 0x80000
 800499e:	6518      	str	r0, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 80049a0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80049a2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80049a6:	9301      	str	r3, [sp, #4]

  __HAL_RCC_HSEM_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80049a8:	2200      	movs	r2, #0
 80049aa:	210f      	movs	r1, #15
 80049ac:	f06f 0001 	mvn.w	r0, #1
  (void)tmpreg;
 80049b0:	9b01      	ldr	r3, [sp, #4]
 80049b2:	f001 f9ed 	bl	8005d90 <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* HSEM_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(HSEM_IRQn, 5, 0);
 80049b6:	2200      	movs	r2, #0
 80049b8:	2105      	movs	r1, #5
 80049ba:	202e      	movs	r0, #46	@ 0x2e
 80049bc:	f001 f9e8 	bl	8005d90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(HSEM_IRQn);
 80049c0:	202e      	movs	r0, #46	@ 0x2e

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80049c2:	b003      	add	sp, #12
 80049c4:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_NVIC_EnableIRQ(HSEM_IRQn);
 80049c8:	f001 ba1e 	b.w	8005e08 <HAL_NVIC_EnableIRQ>

080049cc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80049cc:	b570      	push	{r4, r5, r6, lr}
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status = HAL_OK;

  /*Configure the TIM1 IRQ priority */
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 80049ce:	4601      	mov	r1, r0
{
 80049d0:	b08a      	sub	sp, #40	@ 0x28
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 80049d2:	2200      	movs	r2, #0
{
 80049d4:	4606      	mov	r6, r0
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 80049d6:	2019      	movs	r0, #25
 80049d8:	f001 f9da 	bl	8005d90 <HAL_NVIC_SetPriority>
  /* Enable the TIM1 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 80049dc:	2019      	movs	r0, #25
 80049de:	f001 fa13 	bl	8005e08 <HAL_NVIC_EnableIRQ>
  SET_BIT(RCC->APB2ENR, Periphs);
 80049e2:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000

  /* Enable TIM1 clock */
  __HAL_RCC_TIM1_CLK_ENABLE();

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80049e6:	a901      	add	r1, sp, #4
 80049e8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60

  /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM1 */
  htim1.Instance = TIM1;
 80049ea:	4c1c      	ldr	r4, [pc, #112]	@ (8004a5c <HAL_InitTick+0x90>)
 80049ec:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80049f0:	661a      	str	r2, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 80049f2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80049f4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80049f8:	a803      	add	r0, sp, #12
 80049fa:	9302      	str	r3, [sp, #8]
  (void)tmpreg;
 80049fc:	9b02      	ldr	r3, [sp, #8]
 80049fe:	f004 f9b3 	bl	8008d68 <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK2Freq();
 8004a02:	f004 f96f 	bl	8008ce4 <HAL_RCC_GetPCLK2Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004a06:	4a16      	ldr	r2, [pc, #88]	@ (8004a60 <HAL_InitTick+0x94>)
  htim1.Instance = TIM1;
 8004a08:	4916      	ldr	r1, [pc, #88]	@ (8004a64 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004a0a:	fba2 2300 	umull	r2, r3, r2, r0
 8004a0e:	0c9b      	lsrs	r3, r3, #18
 8004a10:	3b01      	subs	r3, #1
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim1.Init.Period = (1000000U / 1000U) - 1U;
  htim1.Init.Prescaler = uwPrescalerValue;
  htim1.Init.ClockDivision = 0;
 8004a12:	2200      	movs	r2, #0
  htim1.Init.Prescaler = uwPrescalerValue;
 8004a14:	e9c4 1300 	strd	r1, r3, [r4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim1);
 8004a18:	4620      	mov	r0, r4
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8004a1a:	f240 33e7 	movw	r3, #999	@ 0x3e7
  htim1.Init.ClockDivision = 0;
 8004a1e:	6122      	str	r2, [r4, #16]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004a20:	60a2      	str	r2, [r4, #8]
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8004a22:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim1);
 8004a24:	f005 fd98 	bl	800a558 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8004a28:	4605      	mov	r5, r0
 8004a2a:	b110      	cbz	r0, 8004a32 <HAL_InitTick+0x66>
    }
  }

 /* Return function status */
  return status;
}
 8004a2c:	4628      	mov	r0, r5
 8004a2e:	b00a      	add	sp, #40	@ 0x28
 8004a30:	bd70      	pop	{r4, r5, r6, pc}
    status = HAL_TIM_Base_Start_IT(&htim1);
 8004a32:	4620      	mov	r0, r4
 8004a34:	f005 fe22 	bl	800a67c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8004a38:	4605      	mov	r5, r0
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	d1f6      	bne.n	8004a2c <HAL_InitTick+0x60>
        HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8004a3e:	2019      	movs	r0, #25
 8004a40:	f001 f9e2 	bl	8005e08 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8004a44:	2e0f      	cmp	r6, #15
 8004a46:	d901      	bls.n	8004a4c <HAL_InitTick+0x80>
        status = HAL_ERROR;
 8004a48:	2501      	movs	r5, #1
 8004a4a:	e7ef      	b.n	8004a2c <HAL_InitTick+0x60>
        HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority, 0U);
 8004a4c:	462a      	mov	r2, r5
 8004a4e:	4631      	mov	r1, r6
 8004a50:	2019      	movs	r0, #25
 8004a52:	f001 f99d 	bl	8005d90 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8004a56:	4b04      	ldr	r3, [pc, #16]	@ (8004a68 <HAL_InitTick+0x9c>)
 8004a58:	601e      	str	r6, [r3, #0]
 8004a5a:	e7e7      	b.n	8004a2c <HAL_InitTick+0x60>
 8004a5c:	2000153c 	.word	0x2000153c
 8004a60:	431bde83 	.word	0x431bde83
 8004a64:	40012c00 	.word	0x40012c00
 8004a68:	2000003c 	.word	0x2000003c

08004a6c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004a6c:	b508      	push	{r3, lr}
 8004a6e:	4c07      	ldr	r4, [pc, #28]	@ (8004a8c <NMI_Handler+0x20>)
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
  {
	   ssd1306_SetCursor(32, 20);
	   	  ssd1306_WriteString("NMI", Font_7x10, White);
 8004a70:	4d07      	ldr	r5, [pc, #28]	@ (8004a90 <NMI_Handler+0x24>)
	   ssd1306_SetCursor(32, 20);
 8004a72:	2114      	movs	r1, #20
 8004a74:	2020      	movs	r0, #32
 8004a76:	f7fe fa5b 	bl	8002f30 <ssd1306_SetCursor>
	   	  ssd1306_WriteString("NMI", Font_7x10, White);
 8004a7a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004a7e:	2301      	movs	r3, #1
 8004a80:	4628      	mov	r0, r5
 8004a82:	f7fe fa39 	bl	8002ef8 <ssd1306_WriteString>
	   	  ssd1306_UpdateScreen();
 8004a86:	f7fd ff9b 	bl	80029c0 <ssd1306_UpdateScreen>
   while (1)
 8004a8a:	e7f2      	b.n	8004a72 <NMI_Handler+0x6>
 8004a8c:	20000024 	.word	0x20000024
 8004a90:	08015fe0 	.word	0x08015fe0

08004a94 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004a94:	b508      	push	{r3, lr}
 8004a96:	4c07      	ldr	r4, [pc, #28]	@ (8004ab4 <HardFault_Handler+0x20>)
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  ssd1306_WriteString("hardfault", Font_7x10, White);
 8004a98:	4d07      	ldr	r5, [pc, #28]	@ (8004ab8 <HardFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004a9a:	2114      	movs	r1, #20
 8004a9c:	2020      	movs	r0, #32
 8004a9e:	f7fe fa47 	bl	8002f30 <ssd1306_SetCursor>
	  ssd1306_WriteString("hardfault", Font_7x10, White);
 8004aa2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004aa6:	2301      	movs	r3, #1
 8004aa8:	4628      	mov	r0, r5
 8004aaa:	f7fe fa25 	bl	8002ef8 <ssd1306_WriteString>
	  ssd1306_UpdateScreen();
 8004aae:	f7fd ff87 	bl	80029c0 <ssd1306_UpdateScreen>
  while (1)
 8004ab2:	e7f2      	b.n	8004a9a <HardFault_Handler+0x6>
 8004ab4:	20000024 	.word	0x20000024
 8004ab8:	08015fe4 	.word	0x08015fe4

08004abc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004abc:	b508      	push	{r3, lr}
 8004abe:	4c07      	ldr	r4, [pc, #28]	@ (8004adc <MemManage_Handler+0x20>)
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("mem", Font_7x10, White);
 8004ac0:	4d07      	ldr	r5, [pc, #28]	@ (8004ae0 <MemManage_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004ac2:	2114      	movs	r1, #20
 8004ac4:	2020      	movs	r0, #32
 8004ac6:	f7fe fa33 	bl	8002f30 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("mem", Font_7x10, White);
 8004aca:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004ace:	2301      	movs	r3, #1
 8004ad0:	4628      	mov	r0, r5
 8004ad2:	f7fe fa11 	bl	8002ef8 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004ad6:	f7fd ff73 	bl	80029c0 <ssd1306_UpdateScreen>
  while (1)
 8004ada:	e7f2      	b.n	8004ac2 <MemManage_Handler+0x6>
 8004adc:	20000024 	.word	0x20000024
 8004ae0:	08015ff0 	.word	0x08015ff0

08004ae4 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004ae4:	b508      	push	{r3, lr}
 8004ae6:	4c07      	ldr	r4, [pc, #28]	@ (8004b04 <BusFault_Handler+0x20>)
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_BusFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("bus", Font_7x10, White);
 8004ae8:	4d07      	ldr	r5, [pc, #28]	@ (8004b08 <BusFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004aea:	2114      	movs	r1, #20
 8004aec:	2020      	movs	r0, #32
 8004aee:	f7fe fa1f 	bl	8002f30 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("bus", Font_7x10, White);
 8004af2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004af6:	2301      	movs	r3, #1
 8004af8:	4628      	mov	r0, r5
 8004afa:	f7fe f9fd 	bl	8002ef8 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004afe:	f7fd ff5f 	bl	80029c0 <ssd1306_UpdateScreen>
  while (1)
 8004b02:	e7f2      	b.n	8004aea <BusFault_Handler+0x6>
 8004b04:	20000024 	.word	0x20000024
 8004b08:	08015ff4 	.word	0x08015ff4

08004b0c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004b0c:	b508      	push	{r3, lr}
 8004b0e:	4c07      	ldr	r4, [pc, #28]	@ (8004b2c <UsageFault_Handler+0x20>)
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
	  ssd1306_SetCursor(32, 20);
	  	  ssd1306_WriteString("usage", Font_7x10, White);
 8004b10:	4d07      	ldr	r5, [pc, #28]	@ (8004b30 <UsageFault_Handler+0x24>)
	  ssd1306_SetCursor(32, 20);
 8004b12:	2114      	movs	r1, #20
 8004b14:	2020      	movs	r0, #32
 8004b16:	f7fe fa0b 	bl	8002f30 <ssd1306_SetCursor>
	  	  ssd1306_WriteString("usage", Font_7x10, White);
 8004b1a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8004b1e:	2301      	movs	r3, #1
 8004b20:	4628      	mov	r0, r5
 8004b22:	f7fe f9e9 	bl	8002ef8 <ssd1306_WriteString>
	  	  ssd1306_UpdateScreen();
 8004b26:	f7fd ff4b 	bl	80029c0 <ssd1306_UpdateScreen>
  while (1)
 8004b2a:	e7f2      	b.n	8004b12 <UsageFault_Handler+0x6>
 8004b2c:	20000024 	.word	0x20000024
 8004b30:	08015ff8 	.word	0x08015ff8

08004b34 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004b34:	4770      	bx	lr
 8004b36:	bf00      	nop

08004b38 <RTC_WKUP_IRQHandler>:
void RTC_WKUP_IRQHandler(void)
{
  /* USER CODE BEGIN RTC_WKUP_IRQn 0 */

  /* USER CODE END RTC_WKUP_IRQn 0 */
  HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 8004b38:	4801      	ldr	r0, [pc, #4]	@ (8004b40 <RTC_WKUP_IRQHandler+0x8>)
 8004b3a:	f004 bdfb 	b.w	8009734 <HAL_RTCEx_WakeUpTimerIRQHandler>
 8004b3e:	bf00      	nop
 8004b40:	20001074 	.word	0x20001074

08004b44 <DMA1_Channel1_IRQHandler>:
void DMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8004b44:	4801      	ldr	r0, [pc, #4]	@ (8004b4c <DMA1_Channel1_IRQHandler+0x8>)
 8004b46:	f001 bac5 	b.w	80060d4 <HAL_DMA_IRQHandler>
 8004b4a:	bf00      	nop
 8004b4c:	20000328 	.word	0x20000328

08004b50 <DMA1_Channel2_IRQHandler>:
void DMA1_Channel2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_rx);
 8004b50:	4801      	ldr	r0, [pc, #4]	@ (8004b58 <DMA1_Channel2_IRQHandler+0x8>)
 8004b52:	f001 babf 	b.w	80060d4 <HAL_DMA_IRQHandler>
 8004b56:	bf00      	nop
 8004b58:	20001690 	.word	0x20001690

08004b5c <DMA1_Channel3_IRQHandler>:
void DMA1_Channel3_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */

  /* USER CODE END DMA1_Channel3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_tx);
 8004b5c:	4801      	ldr	r0, [pc, #4]	@ (8004b64 <DMA1_Channel3_IRQHandler+0x8>)
 8004b5e:	f001 bab9 	b.w	80060d4 <HAL_DMA_IRQHandler>
 8004b62:	bf00      	nop
 8004b64:	20001630 	.word	0x20001630

08004b68 <USB_LP_IRQHandler>:
void USB_LP_IRQHandler(void)
{
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8004b68:	4801      	ldr	r0, [pc, #4]	@ (8004b70 <USB_LP_IRQHandler+0x8>)
 8004b6a:	f002 bbd3 	b.w	8007314 <HAL_PCD_IRQHandler>
 8004b6e:	bf00      	nop
 8004b70:	2000580c 	.word	0x2000580c

08004b74 <TIM1_UP_TIM16_IRQHandler>:
void TIM1_UP_TIM16_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8004b74:	4801      	ldr	r0, [pc, #4]	@ (8004b7c <TIM1_UP_TIM16_IRQHandler+0x8>)
 8004b76:	f005 be63 	b.w	800a840 <HAL_TIM_IRQHandler>
 8004b7a:	bf00      	nop
 8004b7c:	2000153c 	.word	0x2000153c

08004b80 <TIM1_TRG_COM_TIM17_IRQHandler>:
void TIM1_TRG_COM_TIM17_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
  HAL_TIM_IRQHandler(&htim17);
 8004b80:	4801      	ldr	r0, [pc, #4]	@ (8004b88 <TIM1_TRG_COM_TIM17_IRQHandler+0x8>)
 8004b82:	f005 be5d 	b.w	800a840 <HAL_TIM_IRQHandler>
 8004b86:	bf00      	nop
 8004b88:	20001590 	.word	0x20001590

08004b8c <SPI1_IRQHandler>:
void SPI1_IRQHandler(void)
{
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8004b8c:	4801      	ldr	r0, [pc, #4]	@ (8004b94 <SPI1_IRQHandler+0x8>)
 8004b8e:	f005 bc31 	b.w	800a3f4 <HAL_SPI_IRQHandler>
 8004b92:	bf00      	nop
 8004b94:	20001098 	.word	0x20001098

08004b98 <LPUART1_IRQHandler>:
void LPUART1_IRQHandler(void)
{
  /* USER CODE BEGIN LPUART1_IRQn 0 */

  /* USER CODE END LPUART1_IRQn 0 */
  HAL_UART_IRQHandler(&hlpuart1);
 8004b98:	4801      	ldr	r0, [pc, #4]	@ (8004ba0 <LPUART1_IRQHandler+0x8>)
 8004b9a:	f006 b8af 	b.w	800acfc <HAL_UART_IRQHandler>
 8004b9e:	bf00      	nop
 8004ba0:	200016f0 	.word	0x200016f0

08004ba4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8004ba4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 8004ba6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8004baa:	f001 fc95 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8004bae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
 8004bb2:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 8004bb6:	f001 bc8f 	b.w	80064d8 <HAL_GPIO_EXTI_IRQHandler>
 8004bba:	bf00      	nop

08004bbc <IPCC_C1_RX_IRQHandler>:
void IPCC_C1_RX_IRQHandler(void)
{
  /* USER CODE BEGIN IPCC_C1_RX_IRQn 0 */

  /* USER CODE END IPCC_C1_RX_IRQn 0 */
  HAL_IPCC_RX_IRQHandler(&hipcc);
 8004bbc:	4801      	ldr	r0, [pc, #4]	@ (8004bc4 <IPCC_C1_RX_IRQHandler+0x8>)
 8004bbe:	f002 ba7d 	b.w	80070bc <HAL_IPCC_RX_IRQHandler>
 8004bc2:	bf00      	nop
 8004bc4:	200004cc 	.word	0x200004cc

08004bc8 <IPCC_C1_TX_IRQHandler>:
void IPCC_C1_TX_IRQHandler(void)
{
  /* USER CODE BEGIN IPCC_C1_TX_IRQn 0 */

  /* USER CODE END IPCC_C1_TX_IRQn 0 */
  HAL_IPCC_TX_IRQHandler(&hipcc);
 8004bc8:	4801      	ldr	r0, [pc, #4]	@ (8004bd0 <IPCC_C1_TX_IRQHandler+0x8>)
 8004bca:	f002 ba4b 	b.w	8007064 <HAL_IPCC_TX_IRQHandler>
 8004bce:	bf00      	nop
 8004bd0:	200004cc 	.word	0x200004cc

08004bd4 <HSEM_IRQHandler>:
void HSEM_IRQHandler(void)
{
  /* USER CODE BEGIN HSEM_IRQn 0 */

  /* USER CODE END HSEM_IRQn 0 */
  HAL_HSEM_IRQHandler();
 8004bd4:	f001 bc8e 	b.w	80064f4 <HAL_HSEM_IRQHandler>

08004bd8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8004bd8:	2001      	movs	r0, #1
 8004bda:	4770      	bx	lr

08004bdc <_kill>:

int _kill(int pid, int sig)
{
 8004bdc:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8004bde:	f00b fb5d 	bl	801029c <__errno>
 8004be2:	2316      	movs	r3, #22
 8004be4:	6003      	str	r3, [r0, #0]
  return -1;
}
 8004be6:	f04f 30ff 	mov.w	r0, #4294967295
 8004bea:	bd08      	pop	{r3, pc}

08004bec <_exit>:

void _exit (int status)
{
 8004bec:	b508      	push	{r3, lr}
  errno = EINVAL;
 8004bee:	f00b fb55 	bl	801029c <__errno>
 8004bf2:	2316      	movs	r3, #22
 8004bf4:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8004bf6:	e7fe      	b.n	8004bf6 <_exit+0xa>

08004bf8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004bf8:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004bfa:	1e16      	subs	r6, r2, #0
 8004bfc:	dd07      	ble.n	8004c0e <_read+0x16>
 8004bfe:	460c      	mov	r4, r1
 8004c00:	198d      	adds	r5, r1, r6
  {
    *ptr++ = __io_getchar();
 8004c02:	f3af 8000 	nop.w
 8004c06:	f804 0b01 	strb.w	r0, [r4], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004c0a:	42a5      	cmp	r5, r4
 8004c0c:	d1f9      	bne.n	8004c02 <_read+0xa>
  }

  return len;
}
 8004c0e:	4630      	mov	r0, r6
 8004c10:	bd70      	pop	{r4, r5, r6, pc}
 8004c12:	bf00      	nop

08004c14 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004c14:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004c16:	1e16      	subs	r6, r2, #0
 8004c18:	dd07      	ble.n	8004c2a <_write+0x16>
 8004c1a:	460c      	mov	r4, r1
 8004c1c:	198d      	adds	r5, r1, r6
  {
    __io_putchar(*ptr++);
 8004c1e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8004c22:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004c26:	42a5      	cmp	r5, r4
 8004c28:	d1f9      	bne.n	8004c1e <_write+0xa>
  }
  return len;
}
 8004c2a:	4630      	mov	r0, r6
 8004c2c:	bd70      	pop	{r4, r5, r6, pc}
 8004c2e:	bf00      	nop

08004c30 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8004c30:	f04f 30ff 	mov.w	r0, #4294967295
 8004c34:	4770      	bx	lr
 8004c36:	bf00      	nop

08004c38 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8004c38:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8004c3c:	604b      	str	r3, [r1, #4]
  return 0;
}
 8004c3e:	2000      	movs	r0, #0
 8004c40:	4770      	bx	lr
 8004c42:	bf00      	nop

08004c44 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8004c44:	2001      	movs	r0, #1
 8004c46:	4770      	bx	lr

08004c48 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8004c48:	2000      	movs	r0, #0
 8004c4a:	4770      	bx	lr

08004c4c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004c4c:	490c      	ldr	r1, [pc, #48]	@ (8004c80 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004c4e:	4a0d      	ldr	r2, [pc, #52]	@ (8004c84 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 8004c50:	680b      	ldr	r3, [r1, #0]
{
 8004c52:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004c54:	4c0c      	ldr	r4, [pc, #48]	@ (8004c88 <_sbrk+0x3c>)
 8004c56:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 8004c58:	b12b      	cbz	r3, 8004c66 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004c5a:	4418      	add	r0, r3
 8004c5c:	4290      	cmp	r0, r2
 8004c5e:	d807      	bhi.n	8004c70 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8004c60:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 8004c62:	4618      	mov	r0, r3
 8004c64:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8004c66:	4b09      	ldr	r3, [pc, #36]	@ (8004c8c <_sbrk+0x40>)
 8004c68:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 8004c6a:	4418      	add	r0, r3
 8004c6c:	4290      	cmp	r0, r2
 8004c6e:	d9f7      	bls.n	8004c60 <_sbrk+0x14>
    errno = ENOMEM;
 8004c70:	f00b fb14 	bl	801029c <__errno>
 8004c74:	230c      	movs	r3, #12
 8004c76:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8004c78:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004c7c:	4618      	mov	r0, r3
 8004c7e:	bd10      	pop	{r4, pc}
 8004c80:	20001588 	.word	0x20001588
 8004c84:	20030000 	.word	0x20030000
 8004c88:	00000400 	.word	0x00000400
 8004c8c:	20005c38 	.word	0x20005c38

08004c90 <SystemInit>:
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif /* USER_VECT_TAB_ADDRESS */

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << (10UL * 2UL)) | (3UL << (11UL * 2UL))); /* set CP10 and CP11 Full Access */
 8004c90:	4914      	ldr	r1, [pc, #80]	@ (8004ce4 <SystemInit+0x54>)
 8004c92:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
#endif /* FPU */

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8004c96:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
  SCB->CPACR |= ((3UL << (10UL * 2UL)) | (3UL << (11UL * 2UL))); /* set CP10 and CP11 Full Access */
 8004c9a:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004c9e:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  RCC->CR |= RCC_CR_MSION;
 8004ca2:	6819      	ldr	r1, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00070000U;

  /* Reset PLLSAI1ON, PLLON, HSECSSON, HSEON, HSION, and MSIPLLON bits */
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004ca4:	4a10      	ldr	r2, [pc, #64]	@ (8004ce8 <SystemInit+0x58>)
  RCC->CFGR = 0x00070000U;
 8004ca6:	f44f 20e0 	mov.w	r0, #458752	@ 0x70000
  RCC->CR |= RCC_CR_MSION;
 8004caa:	f041 0101 	orr.w	r1, r1, #1
 8004cae:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00070000U;
 8004cb0:	6098      	str	r0, [r3, #8]
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004cb2:	6818      	ldr	r0, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x22041000U;
 8004cb4:	490d      	ldr	r1, [pc, #52]	@ (8004cec <SystemInit+0x5c>)
  RCC->CR &= (uint32_t)0xFAF6FEFBU;
 8004cb6:	4002      	ands	r2, r0
 8004cb8:	601a      	str	r2, [r3, #0]
  RCC->CSR &= (uint32_t)0xFFFFFFFAU;
 8004cba:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8004cbe:	f022 0205 	bic.w	r2, r2, #5
 8004cc2:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8004cc6:	f8d3 2098 	ldr.w	r2, [r3, #152]	@ 0x98
 8004cca:	f022 0201 	bic.w	r2, r2, #1
 8004cce:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  RCC->PLLCFGR = 0x22041000U;
 8004cd2:	60d9      	str	r1, [r3, #12]

#if defined(STM32WB55xx) || defined(STM32WB5Mxx)
  /* Reset PLLSAI1CFGR register */
  RCC->PLLSAI1CFGR = 0x22041000U;
 8004cd4:	6119      	str	r1, [r3, #16]
#endif /* STM32WB55xx || STM32WB5Mxx */

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8004cd6:	681a      	ldr	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8004cd8:	2100      	movs	r1, #0
  RCC->CR &= 0xFFFBFFFFU;
 8004cda:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004cde:	601a      	str	r2, [r3, #0]
  RCC->CIER = 0x00000000;
 8004ce0:	6199      	str	r1, [r3, #24]
}
 8004ce2:	4770      	bx	lr
 8004ce4:	e000ed00 	.word	0xe000ed00
 8004ce8:	faf6fefb 	.word	0xfaf6fefb
 8004cec:	22041000 	.word	0x22041000

08004cf0 <MX_TIM2_Init>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim17;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8004cf0:	b500      	push	{lr}
  TIM_MasterConfigTypeDef sMasterConfig = {0};

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004cf2:	481c      	ldr	r0, [pc, #112]	@ (8004d64 <MX_TIM2_Init+0x74>)
 8004cf4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
{
 8004cf8:	b089      	sub	sp, #36	@ 0x24
  htim2.Instance = TIM2;
 8004cfa:	6002      	str	r2, [r0, #0]
  htim2.Init.Prescaler = 6400-1;
 8004cfc:	f641 02ff 	movw	r2, #6399	@ 0x18ff
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004d00:	2300      	movs	r3, #0
  htim2.Init.Prescaler = 6400-1;
 8004d02:	6042      	str	r2, [r0, #4]
 8004d04:	f240 32e7 	movw	r2, #999	@ 0x3e7
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004d08:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8004d0c:	e9cd 3306 	strd	r3, r3, [sp, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004d10:	e9cd 3301 	strd	r3, r3, [sp, #4]
  htim2.Init.Prescaler = 6400-1;
 8004d14:	e9c0 3202 	strd	r3, r2, [r0, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004d18:	9303      	str	r3, [sp, #12]
  htim2.Init.Prescaler = 6400-1;
 8004d1a:	6103      	str	r3, [r0, #16]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim2.Init.Period = 1000-1;
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004d1c:	6183      	str	r3, [r0, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8004d1e:	f005 fc1b 	bl	800a558 <HAL_TIM_Base_Init>
 8004d22:	b998      	cbnz	r0, 8004d4c <MX_TIM2_Init+0x5c>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004d24:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8004d28:	480e      	ldr	r0, [pc, #56]	@ (8004d64 <MX_TIM2_Init+0x74>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004d2a:	9304      	str	r3, [sp, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8004d2c:	a904      	add	r1, sp, #16
 8004d2e:	f005 fccd 	bl	800a6cc <HAL_TIM_ConfigClockSource>
 8004d32:	b998      	cbnz	r0, 8004d5c <MX_TIM2_Init+0x6c>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8004d34:	2220      	movs	r2, #32
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004d36:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004d38:	480a      	ldr	r0, [pc, #40]	@ (8004d64 <MX_TIM2_Init+0x74>)
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8004d3a:	9201      	str	r2, [sp, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004d3c:	a901      	add	r1, sp, #4
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004d3e:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004d40:	f005 fe28 	bl	800a994 <HAL_TIMEx_MasterConfigSynchronization>
 8004d44:	b928      	cbnz	r0, 8004d52 <MX_TIM2_Init+0x62>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8004d46:	b009      	add	sp, #36	@ 0x24
 8004d48:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8004d4c:	f7fd fa8a 	bl	8002264 <Error_Handler>
 8004d50:	e7e8      	b.n	8004d24 <MX_TIM2_Init+0x34>
    Error_Handler();
 8004d52:	f7fd fa87 	bl	8002264 <Error_Handler>
}
 8004d56:	b009      	add	sp, #36	@ 0x24
 8004d58:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 8004d5c:	f7fd fa82 	bl	8002264 <Error_Handler>
 8004d60:	e7e8      	b.n	8004d34 <MX_TIM2_Init+0x44>
 8004d62:	bf00      	nop
 8004d64:	200015e0 	.word	0x200015e0

08004d68 <MX_TIM17_Init>:
/* TIM17 init function */
void MX_TIM17_Init(void)
{
 8004d68:	b510      	push	{r4, lr}
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 8004d6a:	480a      	ldr	r0, [pc, #40]	@ (8004d94 <MX_TIM17_Init+0x2c>)
 8004d6c:	4c0a      	ldr	r4, [pc, #40]	@ (8004d98 <MX_TIM17_Init+0x30>)
  htim17.Init.Prescaler = 64000-1;
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004d6e:	2300      	movs	r3, #0
  htim17.Init.Prescaler = 64000-1;
 8004d70:	f64f 11ff 	movw	r1, #63999	@ 0xf9ff
  htim17.Init.Period = 200-1;
 8004d74:	22c7      	movs	r2, #199	@ 0xc7
  htim17.Init.Prescaler = 64000-1;
 8004d76:	e9c0 4100 	strd	r4, r1, [r0]
  htim17.Init.Period = 200-1;
 8004d7a:	e9c0 3202 	strd	r3, r2, [r0, #8]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim17.Init.RepetitionCounter = 0;
 8004d7e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004d82:	6183      	str	r3, [r0, #24]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 8004d84:	f005 fbe8 	bl	800a558 <HAL_TIM_Base_Init>
 8004d88:	b900      	cbnz	r0, 8004d8c <MX_TIM17_Init+0x24>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 8004d8a:	bd10      	pop	{r4, pc}
 8004d8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8004d90:	f7fd ba68 	b.w	8002264 <Error_Handler>
 8004d94:	20001590 	.word	0x20001590
 8004d98:	40014800 	.word	0x40014800

08004d9c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8004d9c:	b500      	push	{lr}

  if(tim_baseHandle->Instance==TIM2)
 8004d9e:	6803      	ldr	r3, [r0, #0]
 8004da0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
{
 8004da4:	b083      	sub	sp, #12
  if(tim_baseHandle->Instance==TIM2)
 8004da6:	d005      	beq.n	8004db4 <HAL_TIM_Base_MspInit+0x18>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM17)
 8004da8:	4a14      	ldr	r2, [pc, #80]	@ (8004dfc <HAL_TIM_Base_MspInit+0x60>)
 8004daa:	4293      	cmp	r3, r2
 8004dac:	d010      	beq.n	8004dd0 <HAL_TIM_Base_MspInit+0x34>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
  /* USER CODE BEGIN TIM17_MspInit 1 */

  /* USER CODE END TIM17_MspInit 1 */
  }
}
 8004dae:	b003      	add	sp, #12
 8004db0:	f85d fb04 	ldr.w	pc, [sp], #4
  SET_BIT(RCC->APB1ENR1, Periphs);
 8004db4:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8004db8:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8004dba:	f042 0201 	orr.w	r2, r2, #1
 8004dbe:	659a      	str	r2, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 8004dc0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004dc2:	f003 0301 	and.w	r3, r3, #1
 8004dc6:	9300      	str	r3, [sp, #0]
  (void)tmpreg;
 8004dc8:	9b00      	ldr	r3, [sp, #0]
 8004dca:	b003      	add	sp, #12
 8004dcc:	f85d fb04 	ldr.w	pc, [sp], #4
  SET_BIT(RCC->APB2ENR, Periphs);
 8004dd0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 5, 0);
 8004dd4:	2200      	movs	r2, #0
 8004dd6:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004dd8:	f440 2080 	orr.w	r0, r0, #262144	@ 0x40000
 8004ddc:	6618      	str	r0, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8004dde:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004de0:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8004de4:	9301      	str	r3, [sp, #4]
 8004de6:	2105      	movs	r1, #5
 8004de8:	201a      	movs	r0, #26
  (void)tmpreg;
 8004dea:	9b01      	ldr	r3, [sp, #4]
 8004dec:	f000 ffd0 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8004df0:	201a      	movs	r0, #26
}
 8004df2:	b003      	add	sp, #12
 8004df4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8004df8:	f001 b806 	b.w	8005e08 <HAL_NVIC_EnableIRQ>
 8004dfc:	40014800 	.word	0x40014800

08004e00 <MX_LPUART1_UART_Init>:
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
  hlpuart1.Init.Parity = UART_PARITY_NONE;
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004e00:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8004e88 <MX_LPUART1_UART_Init+0x88>
{
 8004e04:	b510      	push	{r4, lr}
  hlpuart1.Instance = LPUART1;
 8004e06:	4822      	ldr	r0, [pc, #136]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e08:	4c22      	ldr	r4, [pc, #136]	@ (8004e94 <MX_LPUART1_UART_Init+0x94>)
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 8004e0a:	2300      	movs	r3, #0
  hlpuart1.Init.BaudRate = 115200;
 8004e0c:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8004e10:	220c      	movs	r2, #12
  hlpuart1.Init.BaudRate = 115200;
 8004e12:	e9c0 4100 	strd	r4, r1, [r0]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004e16:	ed80 7b08 	vstr	d7, [r0, #32]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 8004e1a:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8004e1e:	e9c0 3204 	strd	r3, r2, [r0, #16]
 8004e22:	6183      	str	r3, [r0, #24]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004e24:	6283      	str	r3, [r0, #40]	@ 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 8004e26:	6643      	str	r3, [r0, #100]	@ 0x64
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 8004e28:	f006 fb36 	bl	800b498 <HAL_UART_Init>
 8004e2c:	b970      	cbnz	r0, 8004e4c <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004e2e:	4818      	ldr	r0, [pc, #96]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e30:	2100      	movs	r1, #0
 8004e32:	f006 fcf9 	bl	800b828 <HAL_UARTEx_SetTxFifoThreshold>
 8004e36:	b988      	cbnz	r0, 8004e5c <MX_LPUART1_UART_Init+0x5c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004e38:	4815      	ldr	r0, [pc, #84]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e3a:	2100      	movs	r1, #0
 8004e3c:	f006 fd36 	bl	800b8ac <HAL_UARTEx_SetRxFifoThreshold>
 8004e40:	b9a0      	cbnz	r0, 8004e6c <MX_LPUART1_UART_Init+0x6c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8004e42:	4813      	ldr	r0, [pc, #76]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e44:	f006 fcd2 	bl	800b7ec <HAL_UARTEx_DisableFifoMode>
 8004e48:	b9b8      	cbnz	r0, 8004e7a <MX_LPUART1_UART_Init+0x7a>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 8004e4a:	bd10      	pop	{r4, pc}
    Error_Handler();
 8004e4c:	f7fd fa0a 	bl	8002264 <Error_Handler>
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004e50:	480f      	ldr	r0, [pc, #60]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e52:	2100      	movs	r1, #0
 8004e54:	f006 fce8 	bl	800b828 <HAL_UARTEx_SetTxFifoThreshold>
 8004e58:	2800      	cmp	r0, #0
 8004e5a:	d0ed      	beq.n	8004e38 <MX_LPUART1_UART_Init+0x38>
    Error_Handler();
 8004e5c:	f7fd fa02 	bl	8002264 <Error_Handler>
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004e60:	480b      	ldr	r0, [pc, #44]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e62:	2100      	movs	r1, #0
 8004e64:	f006 fd22 	bl	800b8ac <HAL_UARTEx_SetRxFifoThreshold>
 8004e68:	2800      	cmp	r0, #0
 8004e6a:	d0ea      	beq.n	8004e42 <MX_LPUART1_UART_Init+0x42>
    Error_Handler();
 8004e6c:	f7fd f9fa 	bl	8002264 <Error_Handler>
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8004e70:	4807      	ldr	r0, [pc, #28]	@ (8004e90 <MX_LPUART1_UART_Init+0x90>)
 8004e72:	f006 fcbb 	bl	800b7ec <HAL_UARTEx_DisableFifoMode>
 8004e76:	2800      	cmp	r0, #0
 8004e78:	d0e7      	beq.n	8004e4a <MX_LPUART1_UART_Init+0x4a>
}
 8004e7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 8004e7e:	f7fd b9f1 	b.w	8002264 <Error_Handler>
 8004e82:	bf00      	nop
 8004e84:	f3af 8000 	nop.w
	...
 8004e90:	200016f0 	.word	0x200016f0
 8004e94:	40008000 	.word	0x40008000

08004e98 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8004e98:	b570      	push	{r4, r5, r6, lr}
 8004e9a:	4604      	mov	r4, r0
 8004e9c:	b09c      	sub	sp, #112	@ 0x70

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004e9e:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8004ea0:	2250      	movs	r2, #80	@ 0x50
 8004ea2:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004ea4:	e9cd 1102 	strd	r1, r1, [sp, #8]
 8004ea8:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8004eac:	9106      	str	r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8004eae:	f00b f9a2 	bl	80101f6 <memset>
  if(uartHandle->Instance==LPUART1)
 8004eb2:	4b3d      	ldr	r3, [pc, #244]	@ (8004fa8 <HAL_UART_MspInit+0x110>)
 8004eb4:	6822      	ldr	r2, [r4, #0]
 8004eb6:	429a      	cmp	r2, r3
 8004eb8:	d001      	beq.n	8004ebe <HAL_UART_MspInit+0x26>
    HAL_NVIC_EnableIRQ(LPUART1_IRQn);
  /* USER CODE BEGIN LPUART1_MspInit 1 */

  /* USER CODE END LPUART1_MspInit 1 */
  }
}
 8004eba:	b01c      	add	sp, #112	@ 0x70
 8004ebc:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8004ebe:	2202      	movs	r2, #2
    PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 8004ec0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8004ec4:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8004ec6:	9208      	str	r2, [sp, #32]
    PeriphClkInitStruct.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_HSI;
 8004ec8:	930f      	str	r3, [sp, #60]	@ 0x3c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8004eca:	f003 ff77 	bl	8008dbc <HAL_RCCEx_PeriphCLKConfig>
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	d157      	bne.n	8004f82 <HAL_UART_MspInit+0xea>
  SET_BIT(RCC->APB1ENR2, Periphs);
 8004ed2:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8004ed6:	ed9f 7b30 	vldr	d7, [pc, #192]	@ 8004f98 <HAL_UART_MspInit+0x100>
 8004eda:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
    hdma_lpuart1_rx.Instance = DMA1_Channel2;
 8004edc:	4e33      	ldr	r6, [pc, #204]	@ (8004fac <HAL_UART_MspInit+0x114>)
 8004ede:	f042 0201 	orr.w	r2, r2, #1
 8004ee2:	65da      	str	r2, [r3, #92]	@ 0x5c
  tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 8004ee4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8004ee6:	f002 0201 	and.w	r2, r2, #1
 8004eea:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 8004eec:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8004eee:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8004ef0:	f042 0201 	orr.w	r2, r2, #1
 8004ef4:	64da      	str	r2, [r3, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8004ef6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8004ef8:	ed8d 7b02 	vstr	d7, [sp, #8]
 8004efc:	ed9f 7b28 	vldr	d7, [pc, #160]	@ 8004fa0 <HAL_UART_MspInit+0x108>
 8004f00:	f003 0301 	and.w	r3, r3, #1
 8004f04:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004f06:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 8004f08:	2308      	movs	r3, #8
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004f0a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 8004f0e:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 8004f10:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8004f12:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004f16:	f001 f92d 	bl	8006174 <HAL_GPIO_Init>
    hdma_lpuart1_rx.Init.Request = DMA_REQUEST_LPUART1_RX;
 8004f1a:	4925      	ldr	r1, [pc, #148]	@ (8004fb0 <HAL_UART_MspInit+0x118>)
 8004f1c:	2210      	movs	r2, #16
 8004f1e:	2300      	movs	r3, #0
 8004f20:	e9c6 1200 	strd	r1, r2, [r6]
    if (HAL_DMA_Init(&hdma_lpuart1_rx) != HAL_OK)
 8004f24:	4630      	mov	r0, r6
    hdma_lpuart1_rx.Init.Request = DMA_REQUEST_LPUART1_RX;
 8004f26:	2180      	movs	r1, #128	@ 0x80
 8004f28:	2220      	movs	r2, #32
 8004f2a:	e9c6 3302 	strd	r3, r3, [r6, #8]
 8004f2e:	e9c6 1304 	strd	r1, r3, [r6, #16]
 8004f32:	e9c6 3206 	strd	r3, r2, [r6, #24]
 8004f36:	6233      	str	r3, [r6, #32]
    if (HAL_DMA_Init(&hdma_lpuart1_rx) != HAL_OK)
 8004f38:	f000 ff74 	bl	8005e24 <HAL_DMA_Init>
 8004f3c:	bb38      	cbnz	r0, 8004f8e <HAL_UART_MspInit+0xf6>
    hdma_lpuart1_tx.Instance = DMA1_Channel3;
 8004f3e:	4d1d      	ldr	r5, [pc, #116]	@ (8004fb4 <HAL_UART_MspInit+0x11c>)
 8004f40:	491d      	ldr	r1, [pc, #116]	@ (8004fb8 <HAL_UART_MspInit+0x120>)
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_lpuart1_rx);
 8004f42:	f8c4 6080 	str.w	r6, [r4, #128]	@ 0x80
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8004f46:	2211      	movs	r2, #17
 8004f48:	2300      	movs	r3, #0
 8004f4a:	e9c5 1200 	strd	r1, r2, [r5]
    if (HAL_DMA_Init(&hdma_lpuart1_tx) != HAL_OK)
 8004f4e:	4628      	mov	r0, r5
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8004f50:	2110      	movs	r1, #16
 8004f52:	2280      	movs	r2, #128	@ 0x80
 8004f54:	e9c5 1302 	strd	r1, r3, [r5, #8]
 8004f58:	e9c5 3305 	strd	r3, r3, [r5, #20]
 8004f5c:	e9c5 3307 	strd	r3, r3, [r5, #28]
    __HAL_LINKDMA(uartHandle,hdmarx,hdma_lpuart1_rx);
 8004f60:	62b4      	str	r4, [r6, #40]	@ 0x28
    hdma_lpuart1_tx.Init.Request = DMA_REQUEST_LPUART1_TX;
 8004f62:	612a      	str	r2, [r5, #16]
    if (HAL_DMA_Init(&hdma_lpuart1_tx) != HAL_OK)
 8004f64:	f000 ff5e 	bl	8005e24 <HAL_DMA_Init>
 8004f68:	b970      	cbnz	r0, 8004f88 <HAL_UART_MspInit+0xf0>
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8004f6a:	2200      	movs	r2, #0
 8004f6c:	2106      	movs	r1, #6
    __HAL_LINKDMA(uartHandle,hdmatx,hdma_lpuart1_tx);
 8004f6e:	67e5      	str	r5, [r4, #124]	@ 0x7c
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8004f70:	2025      	movs	r0, #37	@ 0x25
    __HAL_LINKDMA(uartHandle,hdmatx,hdma_lpuart1_tx);
 8004f72:	62ac      	str	r4, [r5, #40]	@ 0x28
    HAL_NVIC_SetPriority(LPUART1_IRQn, 6, 0);
 8004f74:	f000 ff0c 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LPUART1_IRQn);
 8004f78:	2025      	movs	r0, #37	@ 0x25
 8004f7a:	f000 ff45 	bl	8005e08 <HAL_NVIC_EnableIRQ>
}
 8004f7e:	b01c      	add	sp, #112	@ 0x70
 8004f80:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
 8004f82:	f7fd f96f 	bl	8002264 <Error_Handler>
 8004f86:	e7a4      	b.n	8004ed2 <HAL_UART_MspInit+0x3a>
      Error_Handler();
 8004f88:	f7fd f96c 	bl	8002264 <Error_Handler>
 8004f8c:	e7ed      	b.n	8004f6a <HAL_UART_MspInit+0xd2>
      Error_Handler();
 8004f8e:	f7fd f969 	bl	8002264 <Error_Handler>
 8004f92:	e7d4      	b.n	8004f3e <HAL_UART_MspInit+0xa6>
 8004f94:	f3af 8000 	nop.w
 8004f98:	0000000c 	.word	0x0000000c
 8004f9c:	00000002 	.word	0x00000002
	...
 8004fa8:	40008000 	.word	0x40008000
 8004fac:	20001690 	.word	0x20001690
 8004fb0:	4002001c 	.word	0x4002001c
 8004fb4:	20001630 	.word	0x20001630
 8004fb8:	40020030 	.word	0x40020030

08004fbc <HAL_UART_RxCpltCallback>:
  }
}

/* USER CODE BEGIN 1 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
	if(huart->Instance==LPUART1){
 8004fbc:	4b18      	ldr	r3, [pc, #96]	@ (8005020 <HAL_UART_RxCpltCallback+0x64>)
 8004fbe:	6802      	ldr	r2, [r0, #0]
 8004fc0:	429a      	cmp	r2, r3
 8004fc2:	d000      	beq.n	8004fc6 <HAL_UART_RxCpltCallback+0xa>
 8004fc4:	4770      	bx	lr
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8004fc6:	b510      	push	{r4, lr}
		if(itest==0){
 8004fc8:	4c16      	ldr	r4, [pc, #88]	@ (8005024 <HAL_UART_RxCpltCallback+0x68>)
 8004fca:	6823      	ldr	r3, [r4, #0]
 8004fcc:	b1c3      	cbz	r3, 8005000 <HAL_UART_RxCpltCallback+0x44>
			timetest1=HAL_GetTick();
		}
		itest++;
 8004fce:	3301      	adds	r3, #1
		if(itest>=10){
 8004fd0:	2b09      	cmp	r3, #9
 8004fd2:	dc1b      	bgt.n	800500c <HAL_UART_RxCpltCallback+0x50>
		itest++;
 8004fd4:	6023      	str	r3, [r4, #0]




		}
		received_flag=1;
 8004fd6:	4b14      	ldr	r3, [pc, #80]	@ (8005028 <HAL_UART_RxCpltCallback+0x6c>)
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 8004fd8:	4914      	ldr	r1, [pc, #80]	@ (800502c <HAL_UART_RxCpltCallback+0x70>)
 8004fda:	4815      	ldr	r0, [pc, #84]	@ (8005030 <HAL_UART_RxCpltCallback+0x74>)
		received_flag=1;
 8004fdc:	2401      	movs	r4, #1
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 8004fde:	2264      	movs	r2, #100	@ 0x64
		received_flag=1;
 8004fe0:	601c      	str	r4, [r3, #0]
		memcpy((uint8_t*)GNSSData.uartWorkingBuffer,(uint8_t *) workingbuffer,100);
 8004fe2:	f00b f988 	bl	80102f6 <memcpy>
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 8004fe6:	4b13      	ldr	r3, [pc, #76]	@ (8005034 <HAL_UART_RxCpltCallback+0x78>)
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8004fe8:	4910      	ldr	r1, [pc, #64]	@ (800502c <HAL_UART_RxCpltCallback+0x70>)
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 8004fea:	681c      	ldr	r4, [r3, #0]
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8004fec:	4812      	ldr	r0, [pc, #72]	@ (8005038 <HAL_UART_RxCpltCallback+0x7c>)
		__HAL_DMA_DISABLE_IT(&hdma_lpuart1_rx, DMA_IT_HT);
 8004fee:	6823      	ldr	r3, [r4, #0]
 8004ff0:	f023 0304 	bic.w	r3, r3, #4
 8004ff4:	6023      	str	r3, [r4, #0]
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8004ff6:	2264      	movs	r2, #100	@ 0x64

	}

}
 8004ff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		HAL_UART_Receive_DMA(&hlpuart1, (uint8_t *)workingbuffer, 100);
 8004ffc:	f006 bbce 	b.w	800b79c <HAL_UART_Receive_DMA>
			timetest1=HAL_GetTick();
 8005000:	f000 fa84 	bl	800550c <HAL_GetTick>
 8005004:	4a0d      	ldr	r2, [pc, #52]	@ (800503c <HAL_UART_RxCpltCallback+0x80>)
		itest++;
 8005006:	6823      	ldr	r3, [r4, #0]
			timetest1=HAL_GetTick();
 8005008:	6010      	str	r0, [r2, #0]
 800500a:	e7e0      	b.n	8004fce <HAL_UART_RxCpltCallback+0x12>
			itest=0;
 800500c:	2300      	movs	r3, #0
 800500e:	6023      	str	r3, [r4, #0]
			timetest2=HAL_GetTick()-timetest1;
 8005010:	f000 fa7c 	bl	800550c <HAL_GetTick>
 8005014:	4a09      	ldr	r2, [pc, #36]	@ (800503c <HAL_UART_RxCpltCallback+0x80>)
 8005016:	4b0a      	ldr	r3, [pc, #40]	@ (8005040 <HAL_UART_RxCpltCallback+0x84>)
 8005018:	6812      	ldr	r2, [r2, #0]
 800501a:	1a80      	subs	r0, r0, r2
 800501c:	6018      	str	r0, [r3, #0]
 800501e:	e7da      	b.n	8004fd6 <HAL_UART_RxCpltCallback+0x1a>
 8005020:	40008000 	.word	0x40008000
 8005024:	20001784 	.word	0x20001784
 8005028:	2000050c 	.word	0x2000050c
 800502c:	20000ffc 	.word	0x20000ffc
 8005030:	20000518 	.word	0x20000518
 8005034:	20001690 	.word	0x20001690
 8005038:	200016f0 	.word	0x200016f0
 800503c:	2000178c 	.word	0x2000178c
 8005040:	20001788 	.word	0x20001788

08005044 <usbtransmit>:
	gpupower=atoi((uint8_t *)usbnumbuf2);


}

void usbtransmit(void){
 8005044:	b5f0      	push	{r4, r5, r6, r7, lr}

	if(pagenumber>0){
 8005046:	4c83      	ldr	r4, [pc, #524]	@ (8005254 <usbtransmit+0x210>)
 8005048:	6823      	ldr	r3, [r4, #0]
 800504a:	2b00      	cmp	r3, #0
void usbtransmit(void){
 800504c:	b083      	sub	sp, #12
		ssd1306_Fill(Black);
 800504e:	f04f 0000 	mov.w	r0, #0
	if(pagenumber>0){
 8005052:	dd3a      	ble.n	80050ca <usbtransmit+0x86>
		ssd1306_Fill(Black);
 8005054:	f7fd fca8 	bl	80029a8 <ssd1306_Fill>
		ssd1306_SetCursor(32,32);
 8005058:	2120      	movs	r1, #32
 800505a:	4608      	mov	r0, r1
 800505c:	f7fd ff68 	bl	8002f30 <ssd1306_SetCursor>
		ssd1306_WriteString("write",Font_6x8,White);
 8005060:	4b7d      	ldr	r3, [pc, #500]	@ (8005258 <usbtransmit+0x214>)
		int taillefin=0;
	switch(usbtransmitstate){
 8005062:	4d7e      	ldr	r5, [pc, #504]	@ (800525c <usbtransmit+0x218>)
		ssd1306_WriteString("write",Font_6x8,White);
 8005064:	487e      	ldr	r0, [pc, #504]	@ (8005260 <usbtransmit+0x21c>)
 8005066:	e893 0006 	ldmia.w	r3, {r1, r2}
 800506a:	2301      	movs	r3, #1
 800506c:	f7fd ff44 	bl	8002ef8 <ssd1306_WriteString>
	switch(usbtransmitstate){
 8005070:	782b      	ldrb	r3, [r5, #0]
 8005072:	2b06      	cmp	r3, #6
 8005074:	d827      	bhi.n	80050c6 <usbtransmit+0x82>
 8005076:	e8df f013 	tbh	[pc, r3, lsl #1]
 800507a:	00b7      	.short	0x00b7
 800507c:	00500007 	.word	0x00500007
 8005080:	0086005a 	.word	0x0086005a
 8005084:	005000de 	.word	0x005000de

		}

		break;
	case STATE_UNDER16PAGES2:
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
 8005088:	4e76      	ldr	r6, [pc, #472]	@ (8005264 <usbtransmit+0x220>)
 800508a:	6821      	ldr	r1, [r4, #0]
 800508c:	6833      	ldr	r3, [r6, #0]
 800508e:	4876      	ldr	r0, [pc, #472]	@ (8005268 <usbtransmit+0x224>)
 8005090:	2200      	movs	r2, #0
 8005092:	9200      	str	r2, [sp, #0]
 8005094:	4a75      	ldr	r2, [pc, #468]	@ (800526c <usbtransmit+0x228>)
 8005096:	f009 fd31 	bl	800eafc <SPIF_ReadPage>
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
 800509a:	4874      	ldr	r0, [pc, #464]	@ (800526c <usbtransmit+0x228>)
 800509c:	8831      	ldrh	r1, [r6, #0]
 800509e:	f009 fde7 	bl	800ec70 <CDC_Transmit_FS>
		HAL_Delay(100);
 80050a2:	2064      	movs	r0, #100	@ 0x64
 80050a4:	f000 fa3e 	bl	8005524 <HAL_Delay>

		break;
	case STATE_OVER16PAGES3:
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
		taillefin = snprintf((char  *)usbbuffer,64,"findetrame\n\r");
 80050a8:	4b71      	ldr	r3, [pc, #452]	@ (8005270 <usbtransmit+0x22c>)
 80050aa:	4c72      	ldr	r4, [pc, #456]	@ (8005274 <usbtransmit+0x230>)
 80050ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 80050ae:	781b      	ldrb	r3, [r3, #0]
 80050b0:	6020      	str	r0, [r4, #0]
 80050b2:	6061      	str	r1, [r4, #4]
		CDC_Transmit_FS((char  *)usbbuffer,taillefin);
 80050b4:	4620      	mov	r0, r4
 80050b6:	210c      	movs	r1, #12
		taillefin = snprintf((char  *)usbbuffer,64,"findetrame\n\r");
 80050b8:	60a2      	str	r2, [r4, #8]
 80050ba:	7323      	strb	r3, [r4, #12]
		CDC_Transmit_FS((char  *)usbbuffer,taillefin);
 80050bc:	f009 fdd8 	bl	800ec70 <CDC_Transmit_FS>
		usbtransmitstate++;
 80050c0:	782b      	ldrb	r3, [r5, #0]
 80050c2:	3301      	adds	r3, #1
 80050c4:	702b      	strb	r3, [r5, #0]


				}


}
 80050c6:	b003      	add	sp, #12
 80050c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
					ssd1306_WriteString("write",Font_7x10,White);
 80050ca:	4c6b      	ldr	r4, [pc, #428]	@ (8005278 <usbtransmit+0x234>)
					ssd1306_Fill(Black);
 80050cc:	f7fd fc6c 	bl	80029a8 <ssd1306_Fill>
					ssd1306_SetCursor(32,40);
 80050d0:	2128      	movs	r1, #40	@ 0x28
 80050d2:	2020      	movs	r0, #32
 80050d4:	f7fd ff2c 	bl	8002f30 <ssd1306_SetCursor>
					ssd1306_WriteString("write",Font_7x10,White);
 80050d8:	e894 0006 	ldmia.w	r4, {r1, r2}
 80050dc:	2301      	movs	r3, #1
 80050de:	4860      	ldr	r0, [pc, #384]	@ (8005260 <usbtransmit+0x21c>)
 80050e0:	f7fd ff0a 	bl	8002ef8 <ssd1306_WriteString>
					ssd1306_SetCursor(32,50);
 80050e4:	2132      	movs	r1, #50	@ 0x32
 80050e6:	2020      	movs	r0, #32
 80050e8:	f7fd ff22 	bl	8002f30 <ssd1306_SetCursor>
					ssd1306_WriteString("nothing",Font_7x10,White);
 80050ec:	e894 0006 	ldmia.w	r4, {r1, r2}
 80050f0:	4862      	ldr	r0, [pc, #392]	@ (800527c <usbtransmit+0x238>)
 80050f2:	2301      	movs	r3, #1
 80050f4:	f7fd ff00 	bl	8002ef8 <ssd1306_WriteString>
					osThreadSuspend(USBTRANSMITHandle);
 80050f8:	4861      	ldr	r0, [pc, #388]	@ (8005280 <usbtransmit+0x23c>)
					usbtransmiten=0;
 80050fa:	4d62      	ldr	r5, [pc, #392]	@ (8005284 <usbtransmit+0x240>)
					usbstate=USBSTATEFINISH;
 80050fc:	4c62      	ldr	r4, [pc, #392]	@ (8005288 <usbtransmit+0x244>)
					usbindexsecteur=0;
 80050fe:	4963      	ldr	r1, [pc, #396]	@ (800528c <usbtransmit+0x248>)
							usbindexpage=0;
 8005100:	4a63      	ldr	r2, [pc, #396]	@ (8005290 <usbtransmit+0x24c>)
					osThreadSuspend(USBTRANSMITHandle);
 8005102:	6800      	ldr	r0, [r0, #0]
					usbtransmiten=0;
 8005104:	2300      	movs	r3, #0
 8005106:	602b      	str	r3, [r5, #0]
					usbstate=USBSTATEFINISH;
 8005108:	2503      	movs	r5, #3
 800510a:	7025      	strb	r5, [r4, #0]
					usbindexsecteur=0;
 800510c:	600b      	str	r3, [r1, #0]
							usbindexpage=0;
 800510e:	6013      	str	r3, [r2, #0]
}
 8005110:	b003      	add	sp, #12
 8005112:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
					osThreadSuspend(USBTRANSMITHandle);
 8005116:	f008 b8e5 	b.w	800d2e4 <osThreadSuspend>
		ssd1306_SetCursor(32,48);
 800511a:	2130      	movs	r1, #48	@ 0x30
 800511c:	2020      	movs	r0, #32
 800511e:	f7fd ff07 	bl	8002f30 <ssd1306_SetCursor>
		ssd1306_WriteString("finish",Font_7x10,White);
 8005122:	4b55      	ldr	r3, [pc, #340]	@ (8005278 <usbtransmit+0x234>)
 8005124:	485b      	ldr	r0, [pc, #364]	@ (8005294 <usbtransmit+0x250>)
 8005126:	e893 0006 	ldmia.w	r3, {r1, r2}
 800512a:	2301      	movs	r3, #1
 800512c:	e7e2      	b.n	80050f4 <usbtransmit+0xb0>
			SPIF_ReadSector(&hspif1,usbindexsecteur, (uint8_t  *)flashread, 2048, 0);
 800512e:	4e57      	ldr	r6, [pc, #348]	@ (800528c <usbtransmit+0x248>)
 8005130:	4a4e      	ldr	r2, [pc, #312]	@ (800526c <usbtransmit+0x228>)
 8005132:	484d      	ldr	r0, [pc, #308]	@ (8005268 <usbtransmit+0x224>)
 8005134:	2300      	movs	r3, #0
 8005136:	9300      	str	r3, [sp, #0]
 8005138:	6831      	ldr	r1, [r6, #0]
 800513a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800513e:	f009 fcff 	bl	800eb40 <SPIF_ReadSector>
			CDC_Transmit_FS((char  * )flashread,2048);
 8005142:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8005146:	4849      	ldr	r0, [pc, #292]	@ (800526c <usbtransmit+0x228>)
 8005148:	f009 fd92 	bl	800ec70 <CDC_Transmit_FS>
			percentage((float) (usbindexsecteur*16*100)/pagenumber);
 800514c:	6833      	ldr	r3, [r6, #0]
 800514e:	ed94 7a00 	vldr	s14, [r4]
 8005152:	f44f 62c8 	mov.w	r2, #1600	@ 0x640
 8005156:	fb02 f303 	mul.w	r3, r2, r3
 800515a:	ee07 3a90 	vmov	s15, r3
 800515e:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8005162:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005166:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800516a:	f7fe f8f5 	bl	8003358 <percentage>
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 800516e:	6822      	ldr	r2, [r4, #0]
			usbindexsecteur++;
 8005170:	6833      	ldr	r3, [r6, #0]
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005172:	2a00      	cmp	r2, #0
			usbindexsecteur++;
 8005174:	f103 0301 	add.w	r3, r3, #1
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005178:	bfb8      	it	lt
 800517a:	320f      	addlt	r2, #15
 800517c:	ebb3 1f22 	cmp.w	r3, r2, asr #4
			usbindexsecteur++;
 8005180:	6033      	str	r3, [r6, #0]
			if(usbindexsecteur==((int)(floor(pagenumber/16)))){
 8005182:	d1a0      	bne.n	80050c6 <usbtransmit+0x82>
 8005184:	e79c      	b.n	80050c0 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,(usbindexsecteur*16+usbindexpage), (uint8_t  *)flashread, 256, 0);
 8005186:	4e42      	ldr	r6, [pc, #264]	@ (8005290 <usbtransmit+0x24c>)
 8005188:	4f40      	ldr	r7, [pc, #256]	@ (800528c <usbtransmit+0x248>)
 800518a:	6833      	ldr	r3, [r6, #0]
 800518c:	6839      	ldr	r1, [r7, #0]
 800518e:	4a37      	ldr	r2, [pc, #220]	@ (800526c <usbtransmit+0x228>)
 8005190:	4835      	ldr	r0, [pc, #212]	@ (8005268 <usbtransmit+0x224>)
 8005192:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 8005196:	2300      	movs	r3, #0
 8005198:	9300      	str	r3, [sp, #0]
 800519a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800519e:	f009 fcad 	bl	800eafc <SPIF_ReadPage>
		CDC_Transmit_FS((char  * )flashread,256);
 80051a2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80051a6:	4831      	ldr	r0, [pc, #196]	@ (800526c <usbtransmit+0x228>)
 80051a8:	f009 fd62 	bl	800ec70 <CDC_Transmit_FS>
		percentage((float) ((usbindexsecteur*16+usbindexpage)*100)/pagenumber);
 80051ac:	683a      	ldr	r2, [r7, #0]
 80051ae:	6833      	ldr	r3, [r6, #0]
 80051b0:	edd4 7a00 	vldr	s15, [r4]
 80051b4:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 80051b8:	2264      	movs	r2, #100	@ 0x64
 80051ba:	fb02 f303 	mul.w	r3, r2, r3
 80051be:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80051c2:	ee07 3a90 	vmov	s15, r3
 80051c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051ca:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80051ce:	f7fe f8c3 	bl	8003358 <percentage>
		usbindexpage++;
 80051d2:	6833      	ldr	r3, [r6, #0]
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 80051d4:	683a      	ldr	r2, [r7, #0]
 80051d6:	6821      	ldr	r1, [r4, #0]
		usbindexpage++;
 80051d8:	3301      	adds	r3, #1
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 80051da:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 80051de:	428a      	cmp	r2, r1
		usbindexpage++;
 80051e0:	6033      	str	r3, [r6, #0]
		if(((usbindexsecteur)*16+usbindexpage)==(pagenumber)){
 80051e2:	f47f af70 	bne.w	80050c6 <usbtransmit+0x82>
 80051e6:	e76b      	b.n	80050c0 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,usbindexpage, (uint8_t  *)flashread, 256, 0);
 80051e8:	4e29      	ldr	r6, [pc, #164]	@ (8005290 <usbtransmit+0x24c>)
 80051ea:	4a20      	ldr	r2, [pc, #128]	@ (800526c <usbtransmit+0x228>)
 80051ec:	481e      	ldr	r0, [pc, #120]	@ (8005268 <usbtransmit+0x224>)
 80051ee:	2300      	movs	r3, #0
 80051f0:	9300      	str	r3, [sp, #0]
 80051f2:	6831      	ldr	r1, [r6, #0]
 80051f4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80051f8:	f009 fc80 	bl	800eafc <SPIF_ReadPage>
		CDC_Transmit_FS((char  * )flashread,256);
 80051fc:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8005200:	481a      	ldr	r0, [pc, #104]	@ (800526c <usbtransmit+0x228>)
 8005202:	f009 fd35 	bl	800ec70 <CDC_Transmit_FS>
		percentage((float) (usbindexpage*100)/pagenumber);
 8005206:	6833      	ldr	r3, [r6, #0]
 8005208:	ed94 7a00 	vldr	s14, [r4]
 800520c:	2264      	movs	r2, #100	@ 0x64
 800520e:	fb02 f303 	mul.w	r3, r2, r3
 8005212:	ee07 3a90 	vmov	s15, r3
 8005216:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800521a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800521e:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8005222:	f7fe f899 	bl	8003358 <percentage>
		usbindexpage++;
 8005226:	6833      	ldr	r3, [r6, #0]
		if(usbindexpage==pagenumber){
 8005228:	6822      	ldr	r2, [r4, #0]
		usbindexpage++;
 800522a:	3301      	adds	r3, #1
		if(usbindexpage==pagenumber){
 800522c:	4293      	cmp	r3, r2
		usbindexpage++;
 800522e:	6033      	str	r3, [r6, #0]
		if(usbindexpage==pagenumber){
 8005230:	f47f af49 	bne.w	80050c6 <usbtransmit+0x82>
 8005234:	e744      	b.n	80050c0 <usbtransmit+0x7c>
		SPIF_ReadPage(&hspif1,pagenumber, (uint8_t   *)flashread, pageoffset, 0);
 8005236:	4e0b      	ldr	r6, [pc, #44]	@ (8005264 <usbtransmit+0x220>)
 8005238:	6821      	ldr	r1, [r4, #0]
 800523a:	6833      	ldr	r3, [r6, #0]
 800523c:	480a      	ldr	r0, [pc, #40]	@ (8005268 <usbtransmit+0x224>)
 800523e:	2200      	movs	r2, #0
 8005240:	9200      	str	r2, [sp, #0]
 8005242:	4a0a      	ldr	r2, [pc, #40]	@ (800526c <usbtransmit+0x228>)
 8005244:	f009 fc5a 	bl	800eafc <SPIF_ReadPage>
		CDC_Transmit_FS((uint8_t   * )flashread,pageoffset);
 8005248:	8831      	ldrh	r1, [r6, #0]
 800524a:	4808      	ldr	r0, [pc, #32]	@ (800526c <usbtransmit+0x228>)
 800524c:	f009 fd10 	bl	800ec70 <CDC_Transmit_FS>
 8005250:	e72a      	b.n	80050a8 <usbtransmit+0x64>
 8005252:	bf00      	nop
 8005254:	200006b8 	.word	0x200006b8
 8005258:	2000002c 	.word	0x2000002c
 800525c:	20001790 	.word	0x20001790
 8005260:	08015fa8 	.word	0x08015fa8
 8005264:	200006bc 	.word	0x200006bc
 8005268:	20000fd4 	.word	0x20000fd4
 800526c:	200006c0 	.word	0x200006c0
 8005270:	08016000 	.word	0x08016000
 8005274:	20000640 	.word	0x20000640
 8005278:	20000024 	.word	0x20000024
 800527c:	08016018 	.word	0x08016018
 8005280:	200003f0 	.word	0x200003f0
 8005284:	20000618 	.word	0x20000618
 8005288:	2000106c 	.word	0x2000106c
 800528c:	20001794 	.word	0x20001794
 8005290:	20001798 	.word	0x20001798
 8005294:	08016010 	.word	0x08016010

08005298 <extract_view>:
    		    yposition12 =(int)floor( CAL_VILLE_1_Y + (lat - CAL_VILLE_1_LAT) * SCALE_Y);
}



void extract_view(const uint8_t *world_map,float lat, float lon) {
 8005298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800529c:	ed2d 8b02 	vpush	{d8}
	    memset((uint8_t*)buffer_affichage, 0, 256);
 80052a0:	f44f 7280 	mov.w	r2, #256	@ 0x100
void extract_view(const uint8_t *world_map,float lat, float lon) {
 80052a4:	b085      	sub	sp, #20
	    memset((uint8_t*)buffer_affichage, 0, 256);
 80052a6:	2100      	movs	r1, #0
void extract_view(const uint8_t *world_map,float lat, float lon) {
 80052a8:	4606      	mov	r6, r0
	    memset((uint8_t*)buffer_affichage, 0, 256);
 80052aa:	484c      	ldr	r0, [pc, #304]	@ (80053dc <extract_view+0x144>)

	            // Écrire dans le screen_buffer
	            int screen_byte_index = (y * 64 + x) / 8;
	            int screen_bit_index = 7 - (x % 8);
	            if (map_bit)
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 80052ac:	f8df 912c 	ldr.w	r9, [pc, #300]	@ 80053dc <extract_view+0x144>
void extract_view(const uint8_t *world_map,float lat, float lon) {
 80052b0:	eeb0 8a40 	vmov.f32	s16, s0
 80052b4:	eef0 8a60 	vmov.f32	s17, s1
	    memset((uint8_t*)buffer_affichage, 0, 256);
 80052b8:	f00a ff9d 	bl	80101f6 <memset>
    		    xposition12 =(int)floor( CAL_VILLE_1_X + (lon - CAL_VILLE_1_LONG) * SCALE_X);
 80052bc:	ed9f 7a48 	vldr	s14, [pc, #288]	@ 80053e0 <extract_view+0x148>
 80052c0:	eddf 6a48 	vldr	s13, [pc, #288]	@ 80053e4 <extract_view+0x14c>
 80052c4:	ee78 7ac7 	vsub.f32	s15, s17, s14
 80052c8:	ed9f 7a47 	vldr	s14, [pc, #284]	@ 80053e8 <extract_view+0x150>
 80052cc:	eea7 7aa6 	vfma.f32	s14, s15, s13
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 80052d0:	2701      	movs	r7, #1
    		    xposition12 =(int)floor( CAL_VILLE_1_X + (lon - CAL_VILLE_1_LONG) * SCALE_X);
 80052d2:	ee17 0a10 	vmov	r0, s14
 80052d6:	f7fb f90f 	bl	80004f8 <__aeabi_f2d>
 80052da:	ec41 0b10 	vmov	d0, r0, r1
 80052de:	f00e fc3b 	bl	8013b58 <floor>
 80052e2:	ec51 0b10 	vmov	r0, r1, d0
 80052e6:	f7fb fc0f 	bl	8000b08 <__aeabi_d2iz>
    		    yposition12 =(int)floor( CAL_VILLE_1_Y + (lat - CAL_VILLE_1_LAT) * SCALE_Y);
 80052ea:	eddf 7a40 	vldr	s15, [pc, #256]	@ 80053ec <extract_view+0x154>
 80052ee:	ed9f 7a40 	vldr	s14, [pc, #256]	@ 80053f0 <extract_view+0x158>
    		    xposition12 =(int)floor( CAL_VILLE_1_X + (lon - CAL_VILLE_1_LONG) * SCALE_X);
 80052f2:	4b40      	ldr	r3, [pc, #256]	@ (80053f4 <extract_view+0x15c>)
    		    yposition12 =(int)floor( CAL_VILLE_1_Y + (lat - CAL_VILLE_1_LAT) * SCALE_Y);
 80052f4:	ee38 8a67 	vsub.f32	s16, s16, s15
 80052f8:	eddf 7a3f 	vldr	s15, [pc, #252]	@ 80053f8 <extract_view+0x160>
 80052fc:	eee8 7a07 	vfma.f32	s15, s16, s14
    		    xposition12 =(int)floor( CAL_VILLE_1_X + (lon - CAL_VILLE_1_LONG) * SCALE_X);
 8005300:	4602      	mov	r2, r0
 8005302:	601a      	str	r2, [r3, #0]
 8005304:	9202      	str	r2, [sp, #8]
    		    yposition12 =(int)floor( CAL_VILLE_1_Y + (lat - CAL_VILLE_1_LAT) * SCALE_Y);
 8005306:	ee17 0a90 	vmov	r0, s15
 800530a:	f7fb f8f5 	bl	80004f8 <__aeabi_f2d>
 800530e:	ec41 0b10 	vmov	d0, r0, r1
 8005312:	f00e fc21 	bl	8013b58 <floor>
 8005316:	ec51 0b10 	vmov	r0, r1, d0
 800531a:	f7fb fbf5 	bl	8000b08 <__aeabi_d2iz>
 800531e:	9a02      	ldr	r2, [sp, #8]
 8005320:	4b36      	ldr	r3, [pc, #216]	@ (80053fc <extract_view+0x164>)
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 8005322:	9203      	str	r2, [sp, #12]
	        int map_y = yposition12 - 16 + y;
 8005324:	f1a0 0a10 	sub.w	sl, r0, #16
 8005328:	f04f 0ec8 	mov.w	lr, #200	@ 0xc8
 800532c:	f5c2 6b00 	rsb	fp, r2, #2048	@ 0x800
    		    yposition12 =(int)floor( CAL_VILLE_1_Y + (lat - CAL_VILLE_1_LAT) * SCALE_Y);
 8005330:	6018      	str	r0, [r3, #0]
	    for (int y = 0; y < 32; y++) {
 8005332:	f1c2 0c00 	rsb	ip, r2, #0
 8005336:	fb0e fe0a 	mul.w	lr, lr, sl
 800533a:	f102 0420 	add.w	r4, r2, #32
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 800533e:	f1a2 0821 	sub.w	r8, r2, #33	@ 0x21
 8005342:	465d      	mov	r5, fp
 8005344:	e007      	b.n	8005356 <extract_view+0xbe>
	    for (int y = 0; y < 32; y++) {
 8005346:	f10c 0c40 	add.w	ip, ip, #64	@ 0x40
 800534a:	4565      	cmp	r5, ip
 800534c:	f10a 0a01 	add.w	sl, sl, #1
 8005350:	f10e 0ec8 	add.w	lr, lr, #200	@ 0xc8
 8005354:	d031      	beq.n	80053ba <extract_view+0x122>
	        if (map_y < 0 || map_y >= MAP_HEIGHT){
 8005356:	f1ba 0fc7 	cmp.w	sl, #199	@ 0xc7
 800535a:	d8f4      	bhi.n	8005346 <extract_view+0xae>
	            int map_x = xposition12 - 32 + x;
 800535c:	9b03      	ldr	r3, [sp, #12]
	            int screen_byte_index = (y * 64 + x) / 8;
 800535e:	9502      	str	r5, [sp, #8]
	            int map_x = xposition12 - 32 + x;
 8005360:	3b20      	subs	r3, #32
	            int screen_byte_index = (y * 64 + x) / 8;
 8005362:	f10c 0b20 	add.w	fp, ip, #32
	            int map_byte_index = (map_y * MAP_WIDTH + map_x) / 8;
 8005366:	eb0e 0203 	add.w	r2, lr, r3
	            uint8_t map_bit = (world_map[map_byte_index] >> map_bit_index) & 1;
 800536a:	43d9      	mvns	r1, r3
	            if (map_x < 0 || map_x >= MAP_WIDTH){
 800536c:	2bc7      	cmp	r3, #199	@ 0xc7
	            int map_byte_index = (map_y * MAP_WIDTH + map_x) / 8;
 800536e:	ea4f 02e2 	mov.w	r2, r2, asr #3
	            uint8_t map_bit = (world_map[map_byte_index] >> map_bit_index) & 1;
 8005372:	f001 0107 	and.w	r1, r1, #7
	            if (map_x < 0 || map_x >= MAP_WIDTH){
 8005376:	d814      	bhi.n	80053a2 <extract_view+0x10a>
	            uint8_t map_bit = (world_map[map_byte_index] >> map_bit_index) & 1;
 8005378:	5cb5      	ldrb	r5, [r6, r2]
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 800537a:	eba8 0203 	sub.w	r2, r8, r3
	            uint8_t map_bit = (world_map[map_byte_index] >> map_bit_index) & 1;
 800537e:	fa45 f101 	asr.w	r1, r5, r1
	            int screen_byte_index = (y * 64 + x) / 8;
 8005382:	eb0b 0003 	add.w	r0, fp, r3
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 8005386:	f002 0207 	and.w	r2, r2, #7
	            if (map_bit)
 800538a:	f011 0f01 	tst.w	r1, #1
	            int screen_byte_index = (y * 64 + x) / 8;
 800538e:	ea4f 00e0 	mov.w	r0, r0, asr #3
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 8005392:	fa07 f202 	lsl.w	r2, r7, r2
	            if (map_bit)
 8005396:	d004      	beq.n	80053a2 <extract_view+0x10a>
	                buffer_affichage[screen_byte_index] |= (1 << screen_bit_index);
 8005398:	f819 1000 	ldrb.w	r1, [r9, r0]
 800539c:	430a      	orrs	r2, r1
 800539e:	f809 2000 	strb.w	r2, [r9, r0]
	        for (int x = 0; x < 64; x++) {
 80053a2:	3301      	adds	r3, #1
 80053a4:	429c      	cmp	r4, r3
 80053a6:	d1de      	bne.n	8005366 <extract_view+0xce>
 80053a8:	9d02      	ldr	r5, [sp, #8]
	    for (int y = 0; y < 32; y++) {
 80053aa:	f10c 0c40 	add.w	ip, ip, #64	@ 0x40
 80053ae:	4565      	cmp	r5, ip
 80053b0:	f10a 0a01 	add.w	sl, sl, #1
 80053b4:	f10e 0ec8 	add.w	lr, lr, #200	@ 0xc8
 80053b8:	d1cd      	bne.n	8005356 <extract_view+0xbe>
	        }
	    }

	    ssd1306_Fill(Black);
 80053ba:	2000      	movs	r0, #0
 80053bc:	f7fd faf4 	bl	80029a8 <ssd1306_Fill>
	    ssd1306_DrawBitmap(32, 32, buffer_affichage, 64, 32, White);
 80053c0:	2120      	movs	r1, #32
 80053c2:	2301      	movs	r3, #1
 80053c4:	e9cd 1300 	strd	r1, r3, [sp]
 80053c8:	4a04      	ldr	r2, [pc, #16]	@ (80053dc <extract_view+0x144>)
 80053ca:	2340      	movs	r3, #64	@ 0x40
 80053cc:	4608      	mov	r0, r1
 80053ce:	f7fd fdb5 	bl	8002f3c <ssd1306_DrawBitmap>
	}
 80053d2:	b005      	add	sp, #20
 80053d4:	ecbd 8b02 	vpop	{d8}
 80053d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053dc:	200017a4 	.word	0x200017a4
 80053e0:	4015cc71 	.word	0x4015cc71
 80053e4:	41451ca8 	.word	0x41451ca8
 80053e8:	42d80000 	.word	0x42d80000
 80053ec:	42436e02 	.word	0x42436e02
 80053f0:	c19e9f25 	.word	0xc19e9f25
 80053f4:	200017a0 	.word	0x200017a0
 80053f8:	42480000 	.word	0x42480000
 80053fc:	2000179c 	.word	0x2000179c

08005400 <CopyDataInit>:
 8005400:	58d4      	ldr	r4, [r2, r3]
 8005402:	50c4      	str	r4, [r0, r3]
 8005404:	3304      	adds	r3, #4

08005406 <LoopCopyDataInit>:
 8005406:	18c4      	adds	r4, r0, r3
 8005408:	428c      	cmp	r4, r1
 800540a:	d3f9      	bcc.n	8005400 <CopyDataInit>
 800540c:	4770      	bx	lr

0800540e <FillZerobss>:
 800540e:	6003      	str	r3, [r0, #0]
 8005410:	3004      	adds	r0, #4

08005412 <LoopFillZerobss>:
 8005412:	4288      	cmp	r0, r1
 8005414:	d3fb      	bcc.n	800540e <FillZerobss>
 8005416:	4770      	bx	lr

08005418 <Reset_Handler>:
 8005418:	480c      	ldr	r0, [pc, #48]	@ (800544c <LoopForever+0x2>)
 800541a:	4685      	mov	sp, r0
 800541c:	f7ff fc38 	bl	8004c90 <SystemInit>
 8005420:	480b      	ldr	r0, [pc, #44]	@ (8005450 <LoopForever+0x6>)
 8005422:	490c      	ldr	r1, [pc, #48]	@ (8005454 <LoopForever+0xa>)
 8005424:	4a0c      	ldr	r2, [pc, #48]	@ (8005458 <LoopForever+0xe>)
 8005426:	2300      	movs	r3, #0
 8005428:	f7ff ffed 	bl	8005406 <LoopCopyDataInit>
 800542c:	480b      	ldr	r0, [pc, #44]	@ (800545c <LoopForever+0x12>)
 800542e:	490c      	ldr	r1, [pc, #48]	@ (8005460 <LoopForever+0x16>)
 8005430:	4a0c      	ldr	r2, [pc, #48]	@ (8005464 <LoopForever+0x1a>)
 8005432:	2300      	movs	r3, #0
 8005434:	f7ff ffe7 	bl	8005406 <LoopCopyDataInit>
 8005438:	480b      	ldr	r0, [pc, #44]	@ (8005468 <LoopForever+0x1e>)
 800543a:	490c      	ldr	r1, [pc, #48]	@ (800546c <LoopForever+0x22>)
 800543c:	2300      	movs	r3, #0
 800543e:	f7ff ffe8 	bl	8005412 <LoopFillZerobss>
 8005442:	f00a ff31 	bl	80102a8 <__libc_init_array>
 8005446:	f7fc fdff 	bl	8002048 <main>

0800544a <LoopForever>:
 800544a:	e7fe      	b.n	800544a <LoopForever>
 800544c:	20030000 	.word	0x20030000
 8005450:	20000008 	.word	0x20000008
 8005454:	200002fc 	.word	0x200002fc
 8005458:	08019b18 	.word	0x08019b18
 800545c:	20030000 	.word	0x20030000
 8005460:	20030000 	.word	0x20030000
 8005464:	08019e0c 	.word	0x08019e0c
 8005468:	20000300 	.word	0x20000300
 800546c:	20005c34 	.word	0x20005c34

08005470 <ADC1_IRQHandler>:
 8005470:	e7fe      	b.n	8005470 <ADC1_IRQHandler>
	...

08005474 <HAL_MspDeInit>:
 8005474:	4770      	bx	lr
 8005476:	bf00      	nop

08005478 <HAL_DeInit>:
 8005478:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800547c:	f04f 32ff 	mov.w	r2, #4294967295
 8005480:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8005482:	b510      	push	{r4, lr}
 8005484:	639a      	str	r2, [r3, #56]	@ 0x38
 8005486:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8005488:	63da      	str	r2, [r3, #60]	@ 0x3c
 800548a:	2400      	movs	r4, #0
 800548c:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 800548e:	639c      	str	r4, [r3, #56]	@ 0x38
 8005490:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8005492:	63dc      	str	r4, [r3, #60]	@ 0x3c
 8005494:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8005496:	641a      	str	r2, [r3, #64]	@ 0x40
 8005498:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 800549a:	641c      	str	r4, [r3, #64]	@ 0x40
 800549c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800549e:	645a      	str	r2, [r3, #68]	@ 0x44
 80054a0:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80054a2:	645c      	str	r4, [r3, #68]	@ 0x44
 80054a4:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 80054a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80054a8:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 80054aa:	629c      	str	r4, [r3, #40]	@ 0x28
 80054ac:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80054ae:	62da      	str	r2, [r3, #44]	@ 0x2c
 80054b0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80054b2:	62dc      	str	r4, [r3, #44]	@ 0x2c
 80054b4:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80054b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80054b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054ba:	631c      	str	r4, [r3, #48]	@ 0x30
 80054bc:	f7ff ffda 	bl	8005474 <HAL_MspDeInit>
 80054c0:	4620      	mov	r0, r4
 80054c2:	bd10      	pop	{r4, pc}

080054c4 <HAL_Init>:
 80054c4:	4a0a      	ldr	r2, [pc, #40]	@ (80054f0 <HAL_Init+0x2c>)
 80054c6:	6813      	ldr	r3, [r2, #0]
 80054c8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80054cc:	b510      	push	{r4, lr}
 80054ce:	2003      	movs	r0, #3
 80054d0:	6013      	str	r3, [r2, #0]
 80054d2:	f000 fc4b 	bl	8005d6c <HAL_NVIC_SetPriorityGrouping>
 80054d6:	200f      	movs	r0, #15
 80054d8:	f7ff fa78 	bl	80049cc <HAL_InitTick>
 80054dc:	b110      	cbz	r0, 80054e4 <HAL_Init+0x20>
 80054de:	2401      	movs	r4, #1
 80054e0:	4620      	mov	r0, r4
 80054e2:	bd10      	pop	{r4, pc}
 80054e4:	4604      	mov	r4, r0
 80054e6:	f7ff fa53 	bl	8004990 <HAL_MspInit>
 80054ea:	4620      	mov	r0, r4
 80054ec:	bd10      	pop	{r4, pc}
 80054ee:	bf00      	nop
 80054f0:	58004000 	.word	0x58004000

080054f4 <HAL_IncTick>:
 80054f4:	4a03      	ldr	r2, [pc, #12]	@ (8005504 <HAL_IncTick+0x10>)
 80054f6:	4b04      	ldr	r3, [pc, #16]	@ (8005508 <HAL_IncTick+0x14>)
 80054f8:	6811      	ldr	r1, [r2, #0]
 80054fa:	781b      	ldrb	r3, [r3, #0]
 80054fc:	440b      	add	r3, r1
 80054fe:	6013      	str	r3, [r2, #0]
 8005500:	4770      	bx	lr
 8005502:	bf00      	nop
 8005504:	200018a4 	.word	0x200018a4
 8005508:	20000038 	.word	0x20000038

0800550c <HAL_GetTick>:
 800550c:	4b01      	ldr	r3, [pc, #4]	@ (8005514 <HAL_GetTick+0x8>)
 800550e:	6818      	ldr	r0, [r3, #0]
 8005510:	4770      	bx	lr
 8005512:	bf00      	nop
 8005514:	200018a4 	.word	0x200018a4

08005518 <HAL_GetTickPrio>:
 8005518:	4b01      	ldr	r3, [pc, #4]	@ (8005520 <HAL_GetTickPrio+0x8>)
 800551a:	6818      	ldr	r0, [r3, #0]
 800551c:	4770      	bx	lr
 800551e:	bf00      	nop
 8005520:	2000003c 	.word	0x2000003c

08005524 <HAL_Delay>:
 8005524:	b538      	push	{r3, r4, r5, lr}
 8005526:	4604      	mov	r4, r0
 8005528:	f7ff fff0 	bl	800550c <HAL_GetTick>
 800552c:	1c63      	adds	r3, r4, #1
 800552e:	4605      	mov	r5, r0
 8005530:	d002      	beq.n	8005538 <HAL_Delay+0x14>
 8005532:	4b04      	ldr	r3, [pc, #16]	@ (8005544 <HAL_Delay+0x20>)
 8005534:	781b      	ldrb	r3, [r3, #0]
 8005536:	441c      	add	r4, r3
 8005538:	f7ff ffe8 	bl	800550c <HAL_GetTick>
 800553c:	1b40      	subs	r0, r0, r5
 800553e:	42a0      	cmp	r0, r4
 8005540:	d3fa      	bcc.n	8005538 <HAL_Delay+0x14>
 8005542:	bd38      	pop	{r3, r4, r5, pc}
 8005544:	20000038 	.word	0x20000038

08005548 <HAL_ADC_Init>:
 8005548:	b530      	push	{r4, r5, lr}
 800554a:	b083      	sub	sp, #12
 800554c:	2300      	movs	r3, #0
 800554e:	9301      	str	r3, [sp, #4]
 8005550:	2800      	cmp	r0, #0
 8005552:	f000 8087 	beq.w	8005664 <HAL_ADC_Init+0x11c>
 8005556:	6d45      	ldr	r5, [r0, #84]	@ 0x54
 8005558:	4604      	mov	r4, r0
 800555a:	2d00      	cmp	r5, #0
 800555c:	f000 8087 	beq.w	800566e <HAL_ADC_Init+0x126>
 8005560:	6822      	ldr	r2, [r4, #0]
 8005562:	6893      	ldr	r3, [r2, #8]
 8005564:	0098      	lsls	r0, r3, #2
 8005566:	d505      	bpl.n	8005574 <HAL_ADC_Init+0x2c>
 8005568:	6893      	ldr	r3, [r2, #8]
 800556a:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 800556e:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8005572:	6093      	str	r3, [r2, #8]
 8005574:	6893      	ldr	r3, [r2, #8]
 8005576:	00d9      	lsls	r1, r3, #3
 8005578:	d419      	bmi.n	80055ae <HAL_ADC_Init+0x66>
 800557a:	4b59      	ldr	r3, [pc, #356]	@ (80056e0 <HAL_ADC_Init+0x198>)
 800557c:	4859      	ldr	r0, [pc, #356]	@ (80056e4 <HAL_ADC_Init+0x19c>)
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	6891      	ldr	r1, [r2, #8]
 8005582:	099b      	lsrs	r3, r3, #6
 8005584:	fba0 0303 	umull	r0, r3, r0, r3
 8005588:	f021 4110 	bic.w	r1, r1, #2415919104	@ 0x90000000
 800558c:	099b      	lsrs	r3, r3, #6
 800558e:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005592:	3301      	adds	r3, #1
 8005594:	005b      	lsls	r3, r3, #1
 8005596:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800559a:	6091      	str	r1, [r2, #8]
 800559c:	9301      	str	r3, [sp, #4]
 800559e:	9b01      	ldr	r3, [sp, #4]
 80055a0:	b12b      	cbz	r3, 80055ae <HAL_ADC_Init+0x66>
 80055a2:	9b01      	ldr	r3, [sp, #4]
 80055a4:	3b01      	subs	r3, #1
 80055a6:	9301      	str	r3, [sp, #4]
 80055a8:	9b01      	ldr	r3, [sp, #4]
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d1f9      	bne.n	80055a2 <HAL_ADC_Init+0x5a>
 80055ae:	6893      	ldr	r3, [r2, #8]
 80055b0:	00db      	lsls	r3, r3, #3
 80055b2:	d45a      	bmi.n	800566a <HAL_ADC_Init+0x122>
 80055b4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80055b6:	f043 0310 	orr.w	r3, r3, #16
 80055ba:	6563      	str	r3, [r4, #84]	@ 0x54
 80055bc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80055be:	2001      	movs	r0, #1
 80055c0:	4303      	orrs	r3, r0
 80055c2:	65a3      	str	r3, [r4, #88]	@ 0x58
 80055c4:	6893      	ldr	r3, [r2, #8]
 80055c6:	f013 0f04 	tst.w	r3, #4
 80055ca:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80055cc:	d146      	bne.n	800565c <HAL_ADC_Init+0x114>
 80055ce:	06dd      	lsls	r5, r3, #27
 80055d0:	d444      	bmi.n	800565c <HAL_ADC_Init+0x114>
 80055d2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80055d4:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 80055d8:	f043 0302 	orr.w	r3, r3, #2
 80055dc:	6563      	str	r3, [r4, #84]	@ 0x54
 80055de:	6893      	ldr	r3, [r2, #8]
 80055e0:	07d9      	lsls	r1, r3, #31
 80055e2:	d40a      	bmi.n	80055fa <HAL_ADC_Init+0xb2>
 80055e4:	4b40      	ldr	r3, [pc, #256]	@ (80056e8 <HAL_ADC_Init+0x1a0>)
 80055e6:	689b      	ldr	r3, [r3, #8]
 80055e8:	07db      	lsls	r3, r3, #31
 80055ea:	d406      	bmi.n	80055fa <HAL_ADC_Init+0xb2>
 80055ec:	493f      	ldr	r1, [pc, #252]	@ (80056ec <HAL_ADC_Init+0x1a4>)
 80055ee:	6865      	ldr	r5, [r4, #4]
 80055f0:	688b      	ldr	r3, [r1, #8]
 80055f2:	f423 137c 	bic.w	r3, r3, #4128768	@ 0x3f0000
 80055f6:	432b      	orrs	r3, r5
 80055f8:	608b      	str	r3, [r1, #8]
 80055fa:	68e5      	ldr	r5, [r4, #12]
 80055fc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80055fe:	f894 1020 	ldrb.w	r1, [r4, #32]
 8005602:	432b      	orrs	r3, r5
 8005604:	68a5      	ldr	r5, [r4, #8]
 8005606:	432b      	orrs	r3, r5
 8005608:	7e65      	ldrb	r5, [r4, #25]
 800560a:	2901      	cmp	r1, #1
 800560c:	ea43 3345 	orr.w	r3, r3, r5, lsl #13
 8005610:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005614:	d047      	beq.n	80056a6 <HAL_ADC_Init+0x15e>
 8005616:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8005618:	b121      	cbz	r1, 8005624 <HAL_ADC_Init+0xdc>
 800561a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
 800561c:	f401 7170 	and.w	r1, r1, #960	@ 0x3c0
 8005620:	4329      	orrs	r1, r5
 8005622:	430b      	orrs	r3, r1
 8005624:	68d5      	ldr	r5, [r2, #12]
 8005626:	4932      	ldr	r1, [pc, #200]	@ (80056f0 <HAL_ADC_Init+0x1a8>)
 8005628:	4029      	ands	r1, r5
 800562a:	4319      	orrs	r1, r3
 800562c:	60d1      	str	r1, [r2, #12]
 800562e:	6891      	ldr	r1, [r2, #8]
 8005630:	6893      	ldr	r3, [r2, #8]
 8005632:	f001 0104 	and.w	r1, r1, #4
 8005636:	f003 0308 	and.w	r3, r3, #8
 800563a:	430b      	orrs	r3, r1
 800563c:	d01d      	beq.n	800567a <HAL_ADC_Init+0x132>
 800563e:	6923      	ldr	r3, [r4, #16]
 8005640:	2b01      	cmp	r3, #1
 8005642:	d035      	beq.n	80056b0 <HAL_ADC_Init+0x168>
 8005644:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005646:	f023 030f 	bic.w	r3, r3, #15
 800564a:	6313      	str	r3, [r2, #48]	@ 0x30
 800564c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800564e:	f023 0303 	bic.w	r3, r3, #3
 8005652:	f043 0301 	orr.w	r3, r3, #1
 8005656:	6563      	str	r3, [r4, #84]	@ 0x54
 8005658:	b003      	add	sp, #12
 800565a:	bd30      	pop	{r4, r5, pc}
 800565c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800565e:	f043 0310 	orr.w	r3, r3, #16
 8005662:	6563      	str	r3, [r4, #84]	@ 0x54
 8005664:	2001      	movs	r0, #1
 8005666:	b003      	add	sp, #12
 8005668:	bd30      	pop	{r4, r5, pc}
 800566a:	2000      	movs	r0, #0
 800566c:	e7aa      	b.n	80055c4 <HAL_ADC_Init+0x7c>
 800566e:	f7fb feef 	bl	8001450 <HAL_ADC_MspInit>
 8005672:	65a5      	str	r5, [r4, #88]	@ 0x58
 8005674:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005678:	e772      	b.n	8005560 <HAL_ADC_Init+0x18>
 800567a:	68d1      	ldr	r1, [r2, #12]
 800567c:	f894 3030 	ldrb.w	r3, [r4, #48]	@ 0x30
 8005680:	7e25      	ldrb	r5, [r4, #24]
 8005682:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
 8005686:	005b      	lsls	r3, r3, #1
 8005688:	f021 0102 	bic.w	r1, r1, #2
 800568c:	ea43 3385 	orr.w	r3, r3, r5, lsl #14
 8005690:	430b      	orrs	r3, r1
 8005692:	60d3      	str	r3, [r2, #12]
 8005694:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8005698:	2b01      	cmp	r3, #1
 800569a:	d011      	beq.n	80056c0 <HAL_ADC_Init+0x178>
 800569c:	6913      	ldr	r3, [r2, #16]
 800569e:	f023 0301 	bic.w	r3, r3, #1
 80056a2:	6113      	str	r3, [r2, #16]
 80056a4:	e7cb      	b.n	800563e <HAL_ADC_Init+0xf6>
 80056a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80056a8:	3901      	subs	r1, #1
 80056aa:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
 80056ae:	e7b2      	b.n	8005616 <HAL_ADC_Init+0xce>
 80056b0:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 80056b2:	69e3      	ldr	r3, [r4, #28]
 80056b4:	f021 010f 	bic.w	r1, r1, #15
 80056b8:	3b01      	subs	r3, #1
 80056ba:	430b      	orrs	r3, r1
 80056bc:	6313      	str	r3, [r2, #48]	@ 0x30
 80056be:	e7c5      	b.n	800564c <HAL_ADC_Init+0x104>
 80056c0:	6911      	ldr	r1, [r2, #16]
 80056c2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80056c4:	6c25      	ldr	r5, [r4, #64]	@ 0x40
 80056c6:	f36f 018a 	bfc	r1, #2, #9
 80056ca:	432b      	orrs	r3, r5
 80056cc:	430b      	orrs	r3, r1
 80056ce:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80056d0:	430b      	orrs	r3, r1
 80056d2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 80056d4:	430b      	orrs	r3, r1
 80056d6:	f043 0301 	orr.w	r3, r3, #1
 80056da:	6113      	str	r3, [r2, #16]
 80056dc:	e7af      	b.n	800563e <HAL_ADC_Init+0xf6>
 80056de:	bf00      	nop
 80056e0:	20000034 	.word	0x20000034
 80056e4:	053e2d63 	.word	0x053e2d63
 80056e8:	50040000 	.word	0x50040000
 80056ec:	50040300 	.word	0x50040300
 80056f0:	fff0c007 	.word	0xfff0c007

080056f4 <HAL_ADC_ConvHalfCpltCallback>:
 80056f4:	4770      	bx	lr
 80056f6:	bf00      	nop

080056f8 <ADC_DMAHalfConvCplt>:
 80056f8:	b508      	push	{r3, lr}
 80056fa:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80056fc:	f7ff fffa 	bl	80056f4 <HAL_ADC_ConvHalfCpltCallback>
 8005700:	bd08      	pop	{r3, pc}
 8005702:	bf00      	nop

08005704 <HAL_ADC_ErrorCallback>:
 8005704:	4770      	bx	lr
 8005706:	bf00      	nop

08005708 <ADC_DMAConvCplt>:
 8005708:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800570a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800570c:	f012 0f50 	tst.w	r2, #80	@ 0x50
 8005710:	b510      	push	{r4, lr}
 8005712:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005714:	d11d      	bne.n	8005752 <ADC_DMAConvCplt+0x4a>
 8005716:	6819      	ldr	r1, [r3, #0]
 8005718:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800571c:	655a      	str	r2, [r3, #84]	@ 0x54
 800571e:	680a      	ldr	r2, [r1, #0]
 8005720:	f012 0f08 	tst.w	r2, #8
 8005724:	68ca      	ldr	r2, [r1, #12]
 8005726:	d01b      	beq.n	8005760 <ADC_DMAConvCplt+0x58>
 8005728:	f412 6f40 	tst.w	r2, #3072	@ 0xc00
 800572c:	d10d      	bne.n	800574a <ADC_DMAConvCplt+0x42>
 800572e:	68ca      	ldr	r2, [r1, #12]
 8005730:	0494      	lsls	r4, r2, #18
 8005732:	d40a      	bmi.n	800574a <ADC_DMAConvCplt+0x42>
 8005734:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005736:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800573a:	655a      	str	r2, [r3, #84]	@ 0x54
 800573c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800573e:	04d1      	lsls	r1, r2, #19
 8005740:	d403      	bmi.n	800574a <ADC_DMAConvCplt+0x42>
 8005742:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005744:	f042 0201 	orr.w	r2, r2, #1
 8005748:	655a      	str	r2, [r3, #84]	@ 0x54
 800574a:	4618      	mov	r0, r3
 800574c:	f7fb fed0 	bl	80014f0 <HAL_ADC_ConvCpltCallback>
 8005750:	bd10      	pop	{r4, pc}
 8005752:	06d2      	lsls	r2, r2, #27
 8005754:	d40a      	bmi.n	800576c <ADC_DMAConvCplt+0x64>
 8005756:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800575c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800575e:	4718      	bx	r3
 8005760:	0790      	lsls	r0, r2, #30
 8005762:	d5e7      	bpl.n	8005734 <ADC_DMAConvCplt+0x2c>
 8005764:	4618      	mov	r0, r3
 8005766:	f7fb fec3 	bl	80014f0 <HAL_ADC_ConvCpltCallback>
 800576a:	e7f1      	b.n	8005750 <ADC_DMAConvCplt+0x48>
 800576c:	4618      	mov	r0, r3
 800576e:	f7ff ffc9 	bl	8005704 <HAL_ADC_ErrorCallback>
 8005772:	bd10      	pop	{r4, pc}

08005774 <ADC_DMAError>:
 8005774:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8005776:	b508      	push	{r3, lr}
 8005778:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800577a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800577e:	6543      	str	r3, [r0, #84]	@ 0x54
 8005780:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8005782:	f043 0304 	orr.w	r3, r3, #4
 8005786:	6583      	str	r3, [r0, #88]	@ 0x58
 8005788:	f7ff ffbc 	bl	8005704 <HAL_ADC_ErrorCallback>
 800578c:	bd08      	pop	{r3, pc}
 800578e:	bf00      	nop

08005790 <HAL_ADC_ConfigChannel>:
 8005790:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005792:	f890 2050 	ldrb.w	r2, [r0, #80]	@ 0x50
 8005796:	b083      	sub	sp, #12
 8005798:	4603      	mov	r3, r0
 800579a:	2a01      	cmp	r2, #1
 800579c:	f04f 0000 	mov.w	r0, #0
 80057a0:	9001      	str	r0, [sp, #4]
 80057a2:	f000 80e9 	beq.w	8005978 <HAL_ADC_ConfigChannel+0x1e8>
 80057a6:	2001      	movs	r0, #1
 80057a8:	681a      	ldr	r2, [r3, #0]
 80057aa:	f883 0050 	strb.w	r0, [r3, #80]	@ 0x50
 80057ae:	6890      	ldr	r0, [r2, #8]
 80057b0:	0745      	lsls	r5, r0, #29
 80057b2:	d509      	bpl.n	80057c8 <HAL_ADC_ConfigChannel+0x38>
 80057b4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80057b6:	f042 0220 	orr.w	r2, r2, #32
 80057ba:	655a      	str	r2, [r3, #84]	@ 0x54
 80057bc:	2001      	movs	r0, #1
 80057be:	2200      	movs	r2, #0
 80057c0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80057c4:	b003      	add	sp, #12
 80057c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80057c8:	6848      	ldr	r0, [r1, #4]
 80057ca:	ea4f 1e90 	mov.w	lr, r0, lsr #6
 80057ce:	f000 0c1f 	and.w	ip, r0, #31
 80057d2:	f00e 0e0c 	and.w	lr, lr, #12
 80057d6:	6808      	ldr	r0, [r1, #0]
 80057d8:	f102 0430 	add.w	r4, r2, #48	@ 0x30
 80057dc:	f3c0 6084 	ubfx	r0, r0, #26, #5
 80057e0:	f854 500e 	ldr.w	r5, [r4, lr]
 80057e4:	261f      	movs	r6, #31
 80057e6:	fa00 f00c 	lsl.w	r0, r0, ip
 80057ea:	fa06 fc0c 	lsl.w	ip, r6, ip
 80057ee:	ea25 0c0c 	bic.w	ip, r5, ip
 80057f2:	ea40 000c 	orr.w	r0, r0, ip
 80057f6:	f844 000e 	str.w	r0, [r4, lr]
 80057fa:	6890      	ldr	r0, [r2, #8]
 80057fc:	f010 0f04 	tst.w	r0, #4
 8005800:	6890      	ldr	r0, [r2, #8]
 8005802:	d101      	bne.n	8005808 <HAL_ADC_ConfigChannel+0x78>
 8005804:	0704      	lsls	r4, r0, #28
 8005806:	d538      	bpl.n	800587a <HAL_ADC_ConfigChannel+0xea>
 8005808:	6890      	ldr	r0, [r2, #8]
 800580a:	07c0      	lsls	r0, r0, #31
 800580c:	d433      	bmi.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 800580e:	68ce      	ldr	r6, [r1, #12]
 8005810:	680c      	ldr	r4, [r1, #0]
 8005812:	48be      	ldr	r0, [pc, #760]	@ (8005b0c <HAL_ADC_ConfigChannel+0x37c>)
 8005814:	f8d2 50b0 	ldr.w	r5, [r2, #176]	@ 0xb0
 8005818:	f006 0718 	and.w	r7, r6, #24
 800581c:	40f8      	lsrs	r0, r7
 800581e:	f3c4 0712 	ubfx	r7, r4, #0, #19
 8005822:	4020      	ands	r0, r4
 8005824:	ea25 0507 	bic.w	r5, r5, r7
 8005828:	4328      	orrs	r0, r5
 800582a:	f8c2 00b0 	str.w	r0, [r2, #176]	@ 0xb0
 800582e:	48b8      	ldr	r0, [pc, #736]	@ (8005b10 <HAL_ADC_ConfigChannel+0x380>)
 8005830:	4286      	cmp	r6, r0
 8005832:	d051      	beq.n	80058d8 <HAL_ADC_ConfigChannel+0x148>
 8005834:	49b7      	ldr	r1, [pc, #732]	@ (8005b14 <HAL_ADC_ConfigChannel+0x384>)
 8005836:	420c      	tst	r4, r1
 8005838:	d01d      	beq.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 800583a:	48b7      	ldr	r0, [pc, #732]	@ (8005b18 <HAL_ADC_ConfigChannel+0x388>)
 800583c:	49b7      	ldr	r1, [pc, #732]	@ (8005b1c <HAL_ADC_ConfigChannel+0x38c>)
 800583e:	6886      	ldr	r6, [r0, #8]
 8005840:	688d      	ldr	r5, [r1, #8]
 8005842:	07ef      	lsls	r7, r5, #31
 8005844:	d4b6      	bmi.n	80057b4 <HAL_ADC_ConfigChannel+0x24>
 8005846:	4db6      	ldr	r5, [pc, #728]	@ (8005b20 <HAL_ADC_ConfigChannel+0x390>)
 8005848:	42ac      	cmp	r4, r5
 800584a:	f006 77e0 	and.w	r7, r6, #29360128	@ 0x1c00000
 800584e:	f000 80aa 	beq.w	80059a6 <HAL_ADC_ConfigChannel+0x216>
 8005852:	4db4      	ldr	r5, [pc, #720]	@ (8005b24 <HAL_ADC_ConfigChannel+0x394>)
 8005854:	42ac      	cmp	r4, r5
 8005856:	f000 816f 	beq.w	8005b38 <HAL_ADC_ConfigChannel+0x3a8>
 800585a:	4db3      	ldr	r5, [pc, #716]	@ (8005b28 <HAL_ADC_ConfigChannel+0x398>)
 800585c:	42ac      	cmp	r4, r5
 800585e:	d10a      	bne.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 8005860:	0274      	lsls	r4, r6, #9
 8005862:	d408      	bmi.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 8005864:	428a      	cmp	r2, r1
 8005866:	d106      	bne.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 8005868:	6882      	ldr	r2, [r0, #8]
 800586a:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 800586e:	433a      	orrs	r2, r7
 8005870:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8005874:	6082      	str	r2, [r0, #8]
 8005876:	2000      	movs	r0, #0
 8005878:	e7a1      	b.n	80057be <HAL_ADC_ConfigChannel+0x2e>
 800587a:	680c      	ldr	r4, [r1, #0]
 800587c:	6888      	ldr	r0, [r1, #8]
 800587e:	0de5      	lsrs	r5, r4, #23
 8005880:	f005 0504 	and.w	r5, r5, #4
 8005884:	f102 0614 	add.w	r6, r2, #20
 8005888:	f3c4 5404 	ubfx	r4, r4, #20, #5
 800588c:	fa00 f704 	lsl.w	r7, r0, r4
 8005890:	f04f 0c07 	mov.w	ip, #7
 8005894:	5970      	ldr	r0, [r6, r5]
 8005896:	fa0c f404 	lsl.w	r4, ip, r4
 800589a:	ea20 0004 	bic.w	r0, r0, r4
 800589e:	4338      	orrs	r0, r7
 80058a0:	5170      	str	r0, [r6, r5]
 80058a2:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 80058a6:	2d04      	cmp	r5, #4
 80058a8:	68d4      	ldr	r4, [r2, #12]
 80058aa:	f000 80a0 	beq.w	80059ee <HAL_ADC_ConfigChannel+0x25e>
 80058ae:	f102 0660 	add.w	r6, r2, #96	@ 0x60
 80058b2:	f3c4 04c1 	ubfx	r4, r4, #3, #2
 80058b6:	0064      	lsls	r4, r4, #1
 80058b8:	f856 c025 	ldr.w	ip, [r6, r5, lsl #2]
 80058bc:	4f9b      	ldr	r7, [pc, #620]	@ (8005b2c <HAL_ADC_ConfigChannel+0x39c>)
 80058be:	40a0      	lsls	r0, r4
 80058c0:	680c      	ldr	r4, [r1, #0]
 80058c2:	ea0c 0707 	and.w	r7, ip, r7
 80058c6:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
 80058ca:	433c      	orrs	r4, r7
 80058cc:	4320      	orrs	r0, r4
 80058ce:	f040 4000 	orr.w	r0, r0, #2147483648	@ 0x80000000
 80058d2:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 80058d6:	e797      	b.n	8005808 <HAL_ADC_ConfigChannel+0x78>
 80058d8:	2f00      	cmp	r7, #0
 80058da:	d050      	beq.n	800597e <HAL_ADC_ConfigChannel+0x1ee>
 80058dc:	fa94 f0a4 	rbit	r0, r4
 80058e0:	2800      	cmp	r0, #0
 80058e2:	f000 80b4 	beq.w	8005a4e <HAL_ADC_ConfigChannel+0x2be>
 80058e6:	fab0 f080 	clz	r0, r0
 80058ea:	3001      	adds	r0, #1
 80058ec:	f000 001f 	and.w	r0, r0, #31
 80058f0:	2809      	cmp	r0, #9
 80058f2:	f240 80ac 	bls.w	8005a4e <HAL_ADC_ConfigChannel+0x2be>
 80058f6:	fa94 f0a4 	rbit	r0, r4
 80058fa:	2800      	cmp	r0, #0
 80058fc:	f000 8167 	beq.w	8005bce <HAL_ADC_ConfigChannel+0x43e>
 8005900:	fab0 f080 	clz	r0, r0
 8005904:	3001      	adds	r0, #1
 8005906:	0680      	lsls	r0, r0, #26
 8005908:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
 800590c:	fa94 f5a4 	rbit	r5, r4
 8005910:	2d00      	cmp	r5, #0
 8005912:	f000 8166 	beq.w	8005be2 <HAL_ADC_ConfigChannel+0x452>
 8005916:	fab5 f585 	clz	r5, r5
 800591a:	3501      	adds	r5, #1
 800591c:	f005 051f 	and.w	r5, r5, #31
 8005920:	2601      	movs	r6, #1
 8005922:	fa06 f505 	lsl.w	r5, r6, r5
 8005926:	4328      	orrs	r0, r5
 8005928:	fa94 f4a4 	rbit	r4, r4
 800592c:	2c00      	cmp	r4, #0
 800592e:	f000 8156 	beq.w	8005bde <HAL_ADC_ConfigChannel+0x44e>
 8005932:	fab4 f484 	clz	r4, r4
 8005936:	1c65      	adds	r5, r4, #1
 8005938:	f005 051f 	and.w	r5, r5, #31
 800593c:	2403      	movs	r4, #3
 800593e:	f06f 061d 	mvn.w	r6, #29
 8005942:	fb14 6405 	smlabb	r4, r4, r5, r6
 8005946:	0524      	lsls	r4, r4, #20
 8005948:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
 800594c:	4320      	orrs	r0, r4
 800594e:	0dc5      	lsrs	r5, r0, #23
 8005950:	688c      	ldr	r4, [r1, #8]
 8005952:	f005 0504 	and.w	r5, r5, #4
 8005956:	f102 0614 	add.w	r6, r2, #20
 800595a:	f3c0 5004 	ubfx	r0, r0, #20, #5
 800595e:	fa04 f700 	lsl.w	r7, r4, r0
 8005962:	f04f 0c07 	mov.w	ip, #7
 8005966:	5974      	ldr	r4, [r6, r5]
 8005968:	fa0c f000 	lsl.w	r0, ip, r0
 800596c:	ea24 0000 	bic.w	r0, r4, r0
 8005970:	4338      	orrs	r0, r7
 8005972:	5170      	str	r0, [r6, r5]
 8005974:	680c      	ldr	r4, [r1, #0]
 8005976:	e75d      	b.n	8005834 <HAL_ADC_ConfigChannel+0xa4>
 8005978:	2002      	movs	r0, #2
 800597a:	b003      	add	sp, #12
 800597c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800597e:	0ea4      	lsrs	r4, r4, #26
 8005980:	3401      	adds	r4, #1
 8005982:	f004 051f 	and.w	r5, r4, #31
 8005986:	2001      	movs	r0, #1
 8005988:	06a4      	lsls	r4, r4, #26
 800598a:	f004 44f8 	and.w	r4, r4, #2080374784	@ 0x7c000000
 800598e:	40a8      	lsls	r0, r5
 8005990:	2d09      	cmp	r5, #9
 8005992:	ea40 0004 	orr.w	r0, r0, r4
 8005996:	eb05 0445 	add.w	r4, r5, r5, lsl #1
 800599a:	d97d      	bls.n	8005a98 <HAL_ADC_ConfigChannel+0x308>
 800599c:	3c1e      	subs	r4, #30
 800599e:	0524      	lsls	r4, r4, #20
 80059a0:	f044 7400 	orr.w	r4, r4, #33554432	@ 0x2000000
 80059a4:	e7d2      	b.n	800594c <HAL_ADC_ConfigChannel+0x1bc>
 80059a6:	0236      	lsls	r6, r6, #8
 80059a8:	f53f af65 	bmi.w	8005876 <HAL_ADC_ConfigChannel+0xe6>
 80059ac:	428a      	cmp	r2, r1
 80059ae:	f47f af62 	bne.w	8005876 <HAL_ADC_ConfigChannel+0xe6>
 80059b2:	6882      	ldr	r2, [r0, #8]
 80059b4:	495e      	ldr	r1, [pc, #376]	@ (8005b30 <HAL_ADC_ConfigChannel+0x3a0>)
 80059b6:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 80059ba:	433a      	orrs	r2, r7
 80059bc:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80059c0:	6082      	str	r2, [r0, #8]
 80059c2:	680a      	ldr	r2, [r1, #0]
 80059c4:	495b      	ldr	r1, [pc, #364]	@ (8005b34 <HAL_ADC_ConfigChannel+0x3a4>)
 80059c6:	0992      	lsrs	r2, r2, #6
 80059c8:	fba1 1202 	umull	r1, r2, r1, r2
 80059cc:	0992      	lsrs	r2, r2, #6
 80059ce:	3201      	adds	r2, #1
 80059d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80059d4:	0092      	lsls	r2, r2, #2
 80059d6:	9201      	str	r2, [sp, #4]
 80059d8:	9a01      	ldr	r2, [sp, #4]
 80059da:	2a00      	cmp	r2, #0
 80059dc:	f43f af4b 	beq.w	8005876 <HAL_ADC_ConfigChannel+0xe6>
 80059e0:	9a01      	ldr	r2, [sp, #4]
 80059e2:	3a01      	subs	r2, #1
 80059e4:	9201      	str	r2, [sp, #4]
 80059e6:	9a01      	ldr	r2, [sp, #4]
 80059e8:	2a00      	cmp	r2, #0
 80059ea:	d1f9      	bne.n	80059e0 <HAL_ADC_ConfigChannel+0x250>
 80059ec:	e743      	b.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 80059ee:	6808      	ldr	r0, [r1, #0]
 80059f0:	6e14      	ldr	r4, [r2, #96]	@ 0x60
 80059f2:	6e14      	ldr	r4, [r2, #96]	@ 0x60
 80059f4:	f3c0 0512 	ubfx	r5, r0, #0, #19
 80059f8:	f3c4 6484 	ubfx	r4, r4, #26, #5
 80059fc:	2d00      	cmp	r5, #0
 80059fe:	d14d      	bne.n	8005a9c <HAL_ADC_ConfigChannel+0x30c>
 8005a00:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005a04:	4284      	cmp	r4, r0
 8005a06:	f000 80cd 	beq.w	8005ba4 <HAL_ADC_ConfigChannel+0x414>
 8005a0a:	6e54      	ldr	r4, [r2, #100]	@ 0x64
 8005a0c:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005a0e:	f102 0460 	add.w	r4, r2, #96	@ 0x60
 8005a12:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005a16:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005a1a:	4285      	cmp	r5, r0
 8005a1c:	f000 80ad 	beq.w	8005b7a <HAL_ADC_ConfigChannel+0x3ea>
 8005a20:	68a5      	ldr	r5, [r4, #8]
 8005a22:	68a5      	ldr	r5, [r4, #8]
 8005a24:	f104 0608 	add.w	r6, r4, #8
 8005a28:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005a2c:	4285      	cmp	r5, r0
 8005a2e:	f000 8091 	beq.w	8005b54 <HAL_ADC_ConfigChannel+0x3c4>
 8005a32:	68e5      	ldr	r5, [r4, #12]
 8005a34:	68e5      	ldr	r5, [r4, #12]
 8005a36:	f104 070c 	add.w	r7, r4, #12
 8005a3a:	f3c5 6484 	ubfx	r4, r5, #26, #5
 8005a3e:	42a0      	cmp	r0, r4
 8005a40:	f47f aee2 	bne.w	8005808 <HAL_ADC_ConfigChannel+0x78>
 8005a44:	6838      	ldr	r0, [r7, #0]
 8005a46:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005a4a:	6038      	str	r0, [r7, #0]
 8005a4c:	e6dc      	b.n	8005808 <HAL_ADC_ConfigChannel+0x78>
 8005a4e:	fa94 f0a4 	rbit	r0, r4
 8005a52:	2800      	cmp	r0, #0
 8005a54:	f000 80d1 	beq.w	8005bfa <HAL_ADC_ConfigChannel+0x46a>
 8005a58:	fab0 f080 	clz	r0, r0
 8005a5c:	3001      	adds	r0, #1
 8005a5e:	0680      	lsls	r0, r0, #26
 8005a60:	f000 40f8 	and.w	r0, r0, #2080374784	@ 0x7c000000
 8005a64:	fa94 f5a4 	rbit	r5, r4
 8005a68:	2d00      	cmp	r5, #0
 8005a6a:	f000 80c4 	beq.w	8005bf6 <HAL_ADC_ConfigChannel+0x466>
 8005a6e:	fab5 f585 	clz	r5, r5
 8005a72:	3501      	adds	r5, #1
 8005a74:	f005 051f 	and.w	r5, r5, #31
 8005a78:	2601      	movs	r6, #1
 8005a7a:	fa06 f505 	lsl.w	r5, r6, r5
 8005a7e:	4328      	orrs	r0, r5
 8005a80:	fa94 f4a4 	rbit	r4, r4
 8005a84:	2c00      	cmp	r4, #0
 8005a86:	f000 80b3 	beq.w	8005bf0 <HAL_ADC_ConfigChannel+0x460>
 8005a8a:	fab4 f484 	clz	r4, r4
 8005a8e:	3401      	adds	r4, #1
 8005a90:	f004 041f 	and.w	r4, r4, #31
 8005a94:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8005a98:	0524      	lsls	r4, r4, #20
 8005a9a:	e757      	b.n	800594c <HAL_ADC_ConfigChannel+0x1bc>
 8005a9c:	fa90 f5a0 	rbit	r5, r0
 8005aa0:	b11d      	cbz	r5, 8005aaa <HAL_ADC_ConfigChannel+0x31a>
 8005aa2:	fab5 f585 	clz	r5, r5
 8005aa6:	42ac      	cmp	r4, r5
 8005aa8:	d07c      	beq.n	8005ba4 <HAL_ADC_ConfigChannel+0x414>
 8005aaa:	6e54      	ldr	r4, [r2, #100]	@ 0x64
 8005aac:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005aae:	f102 0460 	add.w	r4, r2, #96	@ 0x60
 8005ab2:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005ab6:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005aba:	fa90 f7a0 	rbit	r7, r0
 8005abe:	f104 0608 	add.w	r6, r4, #8
 8005ac2:	46b6      	mov	lr, r6
 8005ac4:	2f00      	cmp	r7, #0
 8005ac6:	f000 808e 	beq.w	8005be6 <HAL_ADC_ConfigChannel+0x456>
 8005aca:	fab7 f787 	clz	r7, r7
 8005ace:	42af      	cmp	r7, r5
 8005ad0:	d055      	beq.n	8005b7e <HAL_ADC_ConfigChannel+0x3ee>
 8005ad2:	6835      	ldr	r5, [r6, #0]
 8005ad4:	6835      	ldr	r5, [r6, #0]
 8005ad6:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005ada:	fa90 fca0 	rbit	ip, r0
 8005ade:	f104 070c 	add.w	r7, r4, #12
 8005ae2:	46be      	mov	lr, r7
 8005ae4:	f1bc 0f00 	cmp.w	ip, #0
 8005ae8:	d074      	beq.n	8005bd4 <HAL_ADC_ConfigChannel+0x444>
 8005aea:	fabc fc8c 	clz	ip, ip
 8005aee:	45ac      	cmp	ip, r5
 8005af0:	d032      	beq.n	8005b58 <HAL_ADC_ConfigChannel+0x3c8>
 8005af2:	683c      	ldr	r4, [r7, #0]
 8005af4:	683c      	ldr	r4, [r7, #0]
 8005af6:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005afa:	fa90 f0a0 	rbit	r0, r0
 8005afe:	2800      	cmp	r0, #0
 8005b00:	f43f ae82 	beq.w	8005808 <HAL_ADC_ConfigChannel+0x78>
 8005b04:	fab0 f080 	clz	r0, r0
 8005b08:	e799      	b.n	8005a3e <HAL_ADC_ConfigChannel+0x2ae>
 8005b0a:	bf00      	nop
 8005b0c:	0007ffff 	.word	0x0007ffff
 8005b10:	407f0000 	.word	0x407f0000
 8005b14:	80080000 	.word	0x80080000
 8005b18:	50040300 	.word	0x50040300
 8005b1c:	50040000 	.word	0x50040000
 8005b20:	c7520000 	.word	0xc7520000
 8005b24:	cb840000 	.word	0xcb840000
 8005b28:	80000001 	.word	0x80000001
 8005b2c:	03fff000 	.word	0x03fff000
 8005b30:	20000034 	.word	0x20000034
 8005b34:	053e2d63 	.word	0x053e2d63
 8005b38:	01f5      	lsls	r5, r6, #7
 8005b3a:	f53f ae9c 	bmi.w	8005876 <HAL_ADC_ConfigChannel+0xe6>
 8005b3e:	428a      	cmp	r2, r1
 8005b40:	f47f ae99 	bne.w	8005876 <HAL_ADC_ConfigChannel+0xe6>
 8005b44:	6882      	ldr	r2, [r0, #8]
 8005b46:	f022 72e0 	bic.w	r2, r2, #29360128	@ 0x1c00000
 8005b4a:	433a      	orrs	r2, r7
 8005b4c:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8005b50:	6082      	str	r2, [r0, #8]
 8005b52:	e690      	b.n	8005876 <HAL_ADC_ConfigChannel+0xe6>
 8005b54:	f104 0e0c 	add.w	lr, r4, #12
 8005b58:	6830      	ldr	r0, [r6, #0]
 8005b5a:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005b5e:	6030      	str	r0, [r6, #0]
 8005b60:	68e0      	ldr	r0, [r4, #12]
 8005b62:	6808      	ldr	r0, [r1, #0]
 8005b64:	68e4      	ldr	r4, [r4, #12]
 8005b66:	f3c0 0512 	ubfx	r5, r0, #0, #19
 8005b6a:	4677      	mov	r7, lr
 8005b6c:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005b70:	2d00      	cmp	r5, #0
 8005b72:	d1c2      	bne.n	8005afa <HAL_ADC_ConfigChannel+0x36a>
 8005b74:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005b78:	e761      	b.n	8005a3e <HAL_ADC_ConfigChannel+0x2ae>
 8005b7a:	f104 0e08 	add.w	lr, r4, #8
 8005b7e:	f8dc 0000 	ldr.w	r0, [ip]
 8005b82:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005b86:	f8cc 0000 	str.w	r0, [ip]
 8005b8a:	68a0      	ldr	r0, [r4, #8]
 8005b8c:	6808      	ldr	r0, [r1, #0]
 8005b8e:	68a5      	ldr	r5, [r4, #8]
 8005b90:	f3c0 0712 	ubfx	r7, r0, #0, #19
 8005b94:	4676      	mov	r6, lr
 8005b96:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005b9a:	2f00      	cmp	r7, #0
 8005b9c:	d19d      	bne.n	8005ada <HAL_ADC_ConfigChannel+0x34a>
 8005b9e:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005ba2:	e743      	b.n	8005a2c <HAL_ADC_ConfigChannel+0x29c>
 8005ba4:	6e10      	ldr	r0, [r2, #96]	@ 0x60
 8005ba6:	4614      	mov	r4, r2
 8005ba8:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8005bac:	f844 0f60 	str.w	r0, [r4, #96]!
 8005bb0:	6e50      	ldr	r0, [r2, #100]	@ 0x64
 8005bb2:	6808      	ldr	r0, [r1, #0]
 8005bb4:	6e55      	ldr	r5, [r2, #100]	@ 0x64
 8005bb6:	f3c0 0612 	ubfx	r6, r0, #0, #19
 8005bba:	f102 0c64 	add.w	ip, r2, #100	@ 0x64
 8005bbe:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005bc2:	2e00      	cmp	r6, #0
 8005bc4:	f47f af79 	bne.w	8005aba <HAL_ADC_ConfigChannel+0x32a>
 8005bc8:	f3c0 6084 	ubfx	r0, r0, #26, #5
 8005bcc:	e725      	b.n	8005a1a <HAL_ADC_ConfigChannel+0x28a>
 8005bce:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 8005bd2:	e69b      	b.n	800590c <HAL_ADC_ConfigChannel+0x17c>
 8005bd4:	68e5      	ldr	r5, [r4, #12]
 8005bd6:	68e4      	ldr	r4, [r4, #12]
 8005bd8:	f3c4 6484 	ubfx	r4, r4, #26, #5
 8005bdc:	e78d      	b.n	8005afa <HAL_ADC_ConfigChannel+0x36a>
 8005bde:	4c08      	ldr	r4, [pc, #32]	@ (8005c00 <HAL_ADC_ConfigChannel+0x470>)
 8005be0:	e6b4      	b.n	800594c <HAL_ADC_ConfigChannel+0x1bc>
 8005be2:	2502      	movs	r5, #2
 8005be4:	e69f      	b.n	8005926 <HAL_ADC_ConfigChannel+0x196>
 8005be6:	68a5      	ldr	r5, [r4, #8]
 8005be8:	68a5      	ldr	r5, [r4, #8]
 8005bea:	f3c5 6584 	ubfx	r5, r5, #26, #5
 8005bee:	e774      	b.n	8005ada <HAL_ADC_ConfigChannel+0x34a>
 8005bf0:	f44f 1440 	mov.w	r4, #3145728	@ 0x300000
 8005bf4:	e6aa      	b.n	800594c <HAL_ADC_ConfigChannel+0x1bc>
 8005bf6:	2502      	movs	r5, #2
 8005bf8:	e741      	b.n	8005a7e <HAL_ADC_ConfigChannel+0x2ee>
 8005bfa:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 8005bfe:	e731      	b.n	8005a64 <HAL_ADC_ConfigChannel+0x2d4>
 8005c00:	fe500000 	.word	0xfe500000

08005c04 <ADC_Enable>:
 8005c04:	b570      	push	{r4, r5, r6, lr}
 8005c06:	b082      	sub	sp, #8
 8005c08:	2200      	movs	r2, #0
 8005c0a:	6803      	ldr	r3, [r0, #0]
 8005c0c:	9201      	str	r2, [sp, #4]
 8005c0e:	689a      	ldr	r2, [r3, #8]
 8005c10:	07d4      	lsls	r4, r2, #31
 8005c12:	d430      	bmi.n	8005c76 <ADC_Enable+0x72>
 8005c14:	6899      	ldr	r1, [r3, #8]
 8005c16:	4a26      	ldr	r2, [pc, #152]	@ (8005cb0 <ADC_Enable+0xac>)
 8005c18:	4211      	tst	r1, r2
 8005c1a:	4604      	mov	r4, r0
 8005c1c:	d120      	bne.n	8005c60 <ADC_Enable+0x5c>
 8005c1e:	689a      	ldr	r2, [r3, #8]
 8005c20:	4924      	ldr	r1, [pc, #144]	@ (8005cb4 <ADC_Enable+0xb0>)
 8005c22:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8005c26:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8005c2a:	f042 0201 	orr.w	r2, r2, #1
 8005c2e:	609a      	str	r2, [r3, #8]
 8005c30:	688b      	ldr	r3, [r1, #8]
 8005c32:	0218      	lsls	r0, r3, #8
 8005c34:	d428      	bmi.n	8005c88 <ADC_Enable+0x84>
 8005c36:	f7ff fc69 	bl	800550c <HAL_GetTick>
 8005c3a:	4e1f      	ldr	r6, [pc, #124]	@ (8005cb8 <ADC_Enable+0xb4>)
 8005c3c:	4605      	mov	r5, r0
 8005c3e:	6823      	ldr	r3, [r4, #0]
 8005c40:	681a      	ldr	r2, [r3, #0]
 8005c42:	07d2      	lsls	r2, r2, #31
 8005c44:	d417      	bmi.n	8005c76 <ADC_Enable+0x72>
 8005c46:	689a      	ldr	r2, [r3, #8]
 8005c48:	07d1      	lsls	r1, r2, #31
 8005c4a:	d417      	bmi.n	8005c7c <ADC_Enable+0x78>
 8005c4c:	689a      	ldr	r2, [r3, #8]
 8005c4e:	4032      	ands	r2, r6
 8005c50:	f042 0201 	orr.w	r2, r2, #1
 8005c54:	609a      	str	r2, [r3, #8]
 8005c56:	f7ff fc59 	bl	800550c <HAL_GetTick>
 8005c5a:	1b40      	subs	r0, r0, r5
 8005c5c:	2802      	cmp	r0, #2
 8005c5e:	d9ee      	bls.n	8005c3e <ADC_Enable+0x3a>
 8005c60:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005c62:	f043 0310 	orr.w	r3, r3, #16
 8005c66:	6563      	str	r3, [r4, #84]	@ 0x54
 8005c68:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005c6a:	2001      	movs	r0, #1
 8005c6c:	f043 0301 	orr.w	r3, r3, #1
 8005c70:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005c72:	b002      	add	sp, #8
 8005c74:	bd70      	pop	{r4, r5, r6, pc}
 8005c76:	2000      	movs	r0, #0
 8005c78:	b002      	add	sp, #8
 8005c7a:	bd70      	pop	{r4, r5, r6, pc}
 8005c7c:	f7ff fc46 	bl	800550c <HAL_GetTick>
 8005c80:	1b40      	subs	r0, r0, r5
 8005c82:	2802      	cmp	r0, #2
 8005c84:	d9db      	bls.n	8005c3e <ADC_Enable+0x3a>
 8005c86:	e7eb      	b.n	8005c60 <ADC_Enable+0x5c>
 8005c88:	4b0c      	ldr	r3, [pc, #48]	@ (8005cbc <ADC_Enable+0xb8>)
 8005c8a:	4a0d      	ldr	r2, [pc, #52]	@ (8005cc0 <ADC_Enable+0xbc>)
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	099b      	lsrs	r3, r3, #6
 8005c90:	fba2 2303 	umull	r2, r3, r2, r3
 8005c94:	099b      	lsrs	r3, r3, #6
 8005c96:	3301      	adds	r3, #1
 8005c98:	9301      	str	r3, [sp, #4]
 8005c9a:	9b01      	ldr	r3, [sp, #4]
 8005c9c:	2b00      	cmp	r3, #0
 8005c9e:	d0ca      	beq.n	8005c36 <ADC_Enable+0x32>
 8005ca0:	9b01      	ldr	r3, [sp, #4]
 8005ca2:	3b01      	subs	r3, #1
 8005ca4:	9301      	str	r3, [sp, #4]
 8005ca6:	9b01      	ldr	r3, [sp, #4]
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d1f9      	bne.n	8005ca0 <ADC_Enable+0x9c>
 8005cac:	e7c3      	b.n	8005c36 <ADC_Enable+0x32>
 8005cae:	bf00      	nop
 8005cb0:	8000003f 	.word	0x8000003f
 8005cb4:	50040300 	.word	0x50040300
 8005cb8:	7fffffc0 	.word	0x7fffffc0
 8005cbc:	20000034 	.word	0x20000034
 8005cc0:	053e2d63 	.word	0x053e2d63

08005cc4 <HAL_ADC_Start_DMA>:
 8005cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cc6:	6803      	ldr	r3, [r0, #0]
 8005cc8:	689d      	ldr	r5, [r3, #8]
 8005cca:	f015 0504 	ands.w	r5, r5, #4
 8005cce:	d141      	bne.n	8005d54 <HAL_ADC_Start_DMA+0x90>
 8005cd0:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 8005cd4:	2b01      	cmp	r3, #1
 8005cd6:	4604      	mov	r4, r0
 8005cd8:	d03c      	beq.n	8005d54 <HAL_ADC_Start_DMA+0x90>
 8005cda:	2301      	movs	r3, #1
 8005cdc:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 8005ce0:	460f      	mov	r7, r1
 8005ce2:	4616      	mov	r6, r2
 8005ce4:	f7ff ff8e 	bl	8005c04 <ADC_Enable>
 8005ce8:	2800      	cmp	r0, #0
 8005cea:	d135      	bne.n	8005d58 <HAL_ADC_Start_DMA+0x94>
 8005cec:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005cee:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8005cf0:	6821      	ldr	r1, [r4, #0]
 8005cf2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8005cf6:	f023 0301 	bic.w	r3, r3, #1
 8005cfa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005cfe:	6563      	str	r3, [r4, #84]	@ 0x54
 8005d00:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005d02:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005d06:	bf1c      	itt	ne
 8005d08:	6da3      	ldrne	r3, [r4, #88]	@ 0x58
 8005d0a:	f023 0306 	bicne.w	r3, r3, #6
 8005d0e:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005d10:	4b13      	ldr	r3, [pc, #76]	@ (8005d60 <HAL_ADC_Start_DMA+0x9c>)
 8005d12:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8005d14:	4b13      	ldr	r3, [pc, #76]	@ (8005d64 <HAL_ADC_Start_DMA+0xa0>)
 8005d16:	6303      	str	r3, [r0, #48]	@ 0x30
 8005d18:	251c      	movs	r5, #28
 8005d1a:	4b13      	ldr	r3, [pc, #76]	@ (8005d68 <HAL_ADC_Start_DMA+0xa4>)
 8005d1c:	6343      	str	r3, [r0, #52]	@ 0x34
 8005d1e:	600d      	str	r5, [r1, #0]
 8005d20:	2500      	movs	r5, #0
 8005d22:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005d26:	684d      	ldr	r5, [r1, #4]
 8005d28:	f045 0510 	orr.w	r5, r5, #16
 8005d2c:	604d      	str	r5, [r1, #4]
 8005d2e:	68cd      	ldr	r5, [r1, #12]
 8005d30:	f045 0501 	orr.w	r5, r5, #1
 8005d34:	4633      	mov	r3, r6
 8005d36:	463a      	mov	r2, r7
 8005d38:	60cd      	str	r5, [r1, #12]
 8005d3a:	3140      	adds	r1, #64	@ 0x40
 8005d3c:	f000 f904 	bl	8005f48 <HAL_DMA_Start_IT>
 8005d40:	6822      	ldr	r2, [r4, #0]
 8005d42:	6893      	ldr	r3, [r2, #8]
 8005d44:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005d48:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8005d4c:	f043 0304 	orr.w	r3, r3, #4
 8005d50:	6093      	str	r3, [r2, #8]
 8005d52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d54:	2002      	movs	r0, #2
 8005d56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d58:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
 8005d5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d5e:	bf00      	nop
 8005d60:	08005709 	.word	0x08005709
 8005d64:	080056f9 	.word	0x080056f9
 8005d68:	08005775 	.word	0x08005775

08005d6c <HAL_NVIC_SetPriorityGrouping>:
 8005d6c:	4907      	ldr	r1, [pc, #28]	@ (8005d8c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005d6e:	68ca      	ldr	r2, [r1, #12]
 8005d70:	0203      	lsls	r3, r0, #8
 8005d72:	f64f 00ff 	movw	r0, #63743	@ 0xf8ff
 8005d76:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8005d7a:	4002      	ands	r2, r0
 8005d7c:	4313      	orrs	r3, r2
 8005d7e:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8005d82:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005d86:	60cb      	str	r3, [r1, #12]
 8005d88:	4770      	bx	lr
 8005d8a:	bf00      	nop
 8005d8c:	e000ed00 	.word	0xe000ed00

08005d90 <HAL_NVIC_SetPriority>:
 8005d90:	4b1b      	ldr	r3, [pc, #108]	@ (8005e00 <HAL_NVIC_SetPriority+0x70>)
 8005d92:	68db      	ldr	r3, [r3, #12]
 8005d94:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8005d98:	b500      	push	{lr}
 8005d9a:	f1c3 0e07 	rsb	lr, r3, #7
 8005d9e:	f1be 0f04 	cmp.w	lr, #4
 8005da2:	f103 0c04 	add.w	ip, r3, #4
 8005da6:	bf28      	it	cs
 8005da8:	f04f 0e04 	movcs.w	lr, #4
 8005dac:	f1bc 0f06 	cmp.w	ip, #6
 8005db0:	d91c      	bls.n	8005dec <HAL_NVIC_SetPriority+0x5c>
 8005db2:	f1a3 0c03 	sub.w	ip, r3, #3
 8005db6:	f04f 33ff 	mov.w	r3, #4294967295
 8005dba:	fa03 f30c 	lsl.w	r3, r3, ip
 8005dbe:	ea22 0203 	bic.w	r2, r2, r3
 8005dc2:	f04f 33ff 	mov.w	r3, #4294967295
 8005dc6:	fa03 f30e 	lsl.w	r3, r3, lr
 8005dca:	ea21 0303 	bic.w	r3, r1, r3
 8005dce:	fa03 f30c 	lsl.w	r3, r3, ip
 8005dd2:	4313      	orrs	r3, r2
 8005dd4:	011b      	lsls	r3, r3, #4
 8005dd6:	2800      	cmp	r0, #0
 8005dd8:	b2db      	uxtb	r3, r3
 8005dda:	db0a      	blt.n	8005df2 <HAL_NVIC_SetPriority+0x62>
 8005ddc:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8005de0:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 8005de4:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
 8005de8:	f85d fb04 	ldr.w	pc, [sp], #4
 8005dec:	2200      	movs	r2, #0
 8005dee:	4694      	mov	ip, r2
 8005df0:	e7e7      	b.n	8005dc2 <HAL_NVIC_SetPriority+0x32>
 8005df2:	4a04      	ldr	r2, [pc, #16]	@ (8005e04 <HAL_NVIC_SetPriority+0x74>)
 8005df4:	f000 000f 	and.w	r0, r0, #15
 8005df8:	4402      	add	r2, r0
 8005dfa:	7613      	strb	r3, [r2, #24]
 8005dfc:	f85d fb04 	ldr.w	pc, [sp], #4
 8005e00:	e000ed00 	.word	0xe000ed00
 8005e04:	e000ecfc 	.word	0xe000ecfc

08005e08 <HAL_NVIC_EnableIRQ>:
 8005e08:	2800      	cmp	r0, #0
 8005e0a:	db07      	blt.n	8005e1c <HAL_NVIC_EnableIRQ+0x14>
 8005e0c:	4a04      	ldr	r2, [pc, #16]	@ (8005e20 <HAL_NVIC_EnableIRQ+0x18>)
 8005e0e:	0941      	lsrs	r1, r0, #5
 8005e10:	2301      	movs	r3, #1
 8005e12:	f000 001f 	and.w	r0, r0, #31
 8005e16:	4083      	lsls	r3, r0
 8005e18:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8005e1c:	4770      	bx	lr
 8005e1e:	bf00      	nop
 8005e20:	e000e100 	.word	0xe000e100

08005e24 <HAL_DMA_Init>:
 8005e24:	2800      	cmp	r0, #0
 8005e26:	d075      	beq.n	8005f14 <HAL_DMA_Init+0xf0>
 8005e28:	6802      	ldr	r2, [r0, #0]
 8005e2a:	493b      	ldr	r1, [pc, #236]	@ (8005f18 <HAL_DMA_Init+0xf4>)
 8005e2c:	428a      	cmp	r2, r1
 8005e2e:	b570      	push	{r4, r5, r6, lr}
 8005e30:	4603      	mov	r3, r0
 8005e32:	d95b      	bls.n	8005eec <HAL_DMA_Init+0xc8>
 8005e34:	4939      	ldr	r1, [pc, #228]	@ (8005f1c <HAL_DMA_Init+0xf8>)
 8005e36:	483a      	ldr	r0, [pc, #232]	@ (8005f20 <HAL_DMA_Init+0xfc>)
 8005e38:	4d3a      	ldr	r5, [pc, #232]	@ (8005f24 <HAL_DMA_Init+0x100>)
 8005e3a:	4411      	add	r1, r2
 8005e3c:	fba0 0101 	umull	r0, r1, r0, r1
 8005e40:	0909      	lsrs	r1, r1, #4
 8005e42:	0089      	lsls	r1, r1, #2
 8005e44:	6898      	ldr	r0, [r3, #8]
 8005e46:	468c      	mov	ip, r1
 8005e48:	e9c3 5110 	strd	r5, r1, [r3, #64]	@ 0x40
 8005e4c:	2402      	movs	r4, #2
 8005e4e:	68d9      	ldr	r1, [r3, #12]
 8005e50:	f883 4025 	strb.w	r4, [r3, #37]	@ 0x25
 8005e54:	691c      	ldr	r4, [r3, #16]
 8005e56:	4301      	orrs	r1, r0
 8005e58:	4321      	orrs	r1, r4
 8005e5a:	695c      	ldr	r4, [r3, #20]
 8005e5c:	4321      	orrs	r1, r4
 8005e5e:	699c      	ldr	r4, [r3, #24]
 8005e60:	4321      	orrs	r1, r4
 8005e62:	69dc      	ldr	r4, [r3, #28]
 8005e64:	4321      	orrs	r1, r4
 8005e66:	6814      	ldr	r4, [r2, #0]
 8005e68:	f424 4eff 	bic.w	lr, r4, #32640	@ 0x7f80
 8005e6c:	6a1c      	ldr	r4, [r3, #32]
 8005e6e:	f02e 0e70 	bic.w	lr, lr, #112	@ 0x70
 8005e72:	4321      	orrs	r1, r4
 8005e74:	ea41 010e 	orr.w	r1, r1, lr
 8005e78:	6011      	str	r1, [r2, #0]
 8005e7a:	4927      	ldr	r1, [pc, #156]	@ (8005f18 <HAL_DMA_Init+0xf4>)
 8005e7c:	4c2a      	ldr	r4, [pc, #168]	@ (8005f28 <HAL_DMA_Init+0x104>)
 8005e7e:	428a      	cmp	r2, r1
 8005e80:	bf8d      	iteet	hi
 8005e82:	492a      	ldrhi	r1, [pc, #168]	@ (8005f2c <HAL_DMA_Init+0x108>)
 8005e84:	f10c 4180 	addls.w	r1, ip, #1073741824	@ 0x40000000
 8005e88:	f501 3102 	addls.w	r1, r1, #133120	@ 0x20800
 8005e8c:	4461      	addhi	r1, ip
 8005e8e:	e9c3 1412 	strd	r1, r4, [r3, #72]	@ 0x48
 8005e92:	b2d2      	uxtb	r2, r2
 8005e94:	4c22      	ldr	r4, [pc, #136]	@ (8005f20 <HAL_DMA_Init+0xfc>)
 8005e96:	3a08      	subs	r2, #8
 8005e98:	fba4 4202 	umull	r4, r2, r4, r2
 8005e9c:	f3c2 1204 	ubfx	r2, r2, #4, #5
 8005ea0:	2401      	movs	r4, #1
 8005ea2:	fa04 f202 	lsl.w	r2, r4, r2
 8005ea6:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
 8005eaa:	651a      	str	r2, [r3, #80]	@ 0x50
 8005eac:	d027      	beq.n	8005efe <HAL_DMA_Init+0xda>
 8005eae:	685d      	ldr	r5, [r3, #4]
 8005eb0:	4e1f      	ldr	r6, [pc, #124]	@ (8005f30 <HAL_DMA_Init+0x10c>)
 8005eb2:	f005 003f 	and.w	r0, r5, #63	@ 0x3f
 8005eb6:	3d01      	subs	r5, #1
 8005eb8:	2d03      	cmp	r5, #3
 8005eba:	6008      	str	r0, [r1, #0]
 8005ebc:	f8c6 2084 	str.w	r2, [r6, #132]	@ 0x84
 8005ec0:	d823      	bhi.n	8005f0a <HAL_DMA_Init+0xe6>
 8005ec2:	4a1c      	ldr	r2, [pc, #112]	@ (8005f34 <HAL_DMA_Init+0x110>)
 8005ec4:	4d1c      	ldr	r5, [pc, #112]	@ (8005f38 <HAL_DMA_Init+0x114>)
 8005ec6:	4402      	add	r2, r0
 8005ec8:	0092      	lsls	r2, r2, #2
 8005eca:	3801      	subs	r0, #1
 8005ecc:	4084      	lsls	r4, r0
 8005ece:	2100      	movs	r1, #0
 8005ed0:	e9c3 2515 	strd	r2, r5, [r3, #84]	@ 0x54
 8005ed4:	65dc      	str	r4, [r3, #92]	@ 0x5c
 8005ed6:	6011      	str	r1, [r2, #0]
 8005ed8:	4a18      	ldr	r2, [pc, #96]	@ (8005f3c <HAL_DMA_Init+0x118>)
 8005eda:	6454      	str	r4, [r2, #68]	@ 0x44
 8005edc:	2000      	movs	r0, #0
 8005ede:	2201      	movs	r2, #1
 8005ee0:	63d8      	str	r0, [r3, #60]	@ 0x3c
 8005ee2:	f883 0024 	strb.w	r0, [r3, #36]	@ 0x24
 8005ee6:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005eea:	bd70      	pop	{r4, r5, r6, pc}
 8005eec:	4914      	ldr	r1, [pc, #80]	@ (8005f40 <HAL_DMA_Init+0x11c>)
 8005eee:	480c      	ldr	r0, [pc, #48]	@ (8005f20 <HAL_DMA_Init+0xfc>)
 8005ef0:	4d14      	ldr	r5, [pc, #80]	@ (8005f44 <HAL_DMA_Init+0x120>)
 8005ef2:	4411      	add	r1, r2
 8005ef4:	fba0 0101 	umull	r0, r1, r0, r1
 8005ef8:	0909      	lsrs	r1, r1, #4
 8005efa:	0089      	lsls	r1, r1, #2
 8005efc:	e7a2      	b.n	8005e44 <HAL_DMA_Init+0x20>
 8005efe:	4c0c      	ldr	r4, [pc, #48]	@ (8005f30 <HAL_DMA_Init+0x10c>)
 8005f00:	2000      	movs	r0, #0
 8005f02:	6058      	str	r0, [r3, #4]
 8005f04:	6008      	str	r0, [r1, #0]
 8005f06:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
 8005f0a:	2200      	movs	r2, #0
 8005f0c:	e9c3 2215 	strd	r2, r2, [r3, #84]	@ 0x54
 8005f10:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005f12:	e7e3      	b.n	8005edc <HAL_DMA_Init+0xb8>
 8005f14:	2001      	movs	r0, #1
 8005f16:	4770      	bx	lr
 8005f18:	40020407 	.word	0x40020407
 8005f1c:	bffdfbf8 	.word	0xbffdfbf8
 8005f20:	cccccccd 	.word	0xcccccccd
 8005f24:	40020400 	.word	0x40020400
 8005f28:	40020880 	.word	0x40020880
 8005f2c:	4002081c 	.word	0x4002081c
 8005f30:	40020800 	.word	0x40020800
 8005f34:	1000823f 	.word	0x1000823f
 8005f38:	40020940 	.word	0x40020940
 8005f3c:	40020900 	.word	0x40020900
 8005f40:	bffdfff8 	.word	0xbffdfff8
 8005f44:	40020000 	.word	0x40020000

08005f48 <HAL_DMA_Start_IT>:
 8005f48:	b4f0      	push	{r4, r5, r6, r7}
 8005f4a:	f890 4024 	ldrb.w	r4, [r0, #36]	@ 0x24
 8005f4e:	2c01      	cmp	r4, #1
 8005f50:	d009      	beq.n	8005f66 <HAL_DMA_Start_IT+0x1e>
 8005f52:	2401      	movs	r4, #1
 8005f54:	f880 4024 	strb.w	r4, [r0, #36]	@ 0x24
 8005f58:	f890 4025 	ldrb.w	r4, [r0, #37]	@ 0x25
 8005f5c:	2c01      	cmp	r4, #1
 8005f5e:	d005      	beq.n	8005f6c <HAL_DMA_Start_IT+0x24>
 8005f60:	2300      	movs	r3, #0
 8005f62:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8005f66:	2002      	movs	r0, #2
 8005f68:	bcf0      	pop	{r4, r5, r6, r7}
 8005f6a:	4770      	bx	lr
 8005f6c:	2402      	movs	r4, #2
 8005f6e:	f880 4025 	strb.w	r4, [r0, #37]	@ 0x25
 8005f72:	2400      	movs	r4, #0
 8005f74:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8005f76:	6804      	ldr	r4, [r0, #0]
 8005f78:	6cc6      	ldr	r6, [r0, #76]	@ 0x4c
 8005f7a:	6825      	ldr	r5, [r4, #0]
 8005f7c:	f025 0501 	bic.w	r5, r5, #1
 8005f80:	6025      	str	r5, [r4, #0]
 8005f82:	e9d0 7514 	ldrd	r7, r5, [r0, #80]	@ 0x50
 8005f86:	6077      	str	r7, [r6, #4]
 8005f88:	b115      	cbz	r5, 8005f90 <HAL_DMA_Start_IT+0x48>
 8005f8a:	e9d0 6716 	ldrd	r6, r7, [r0, #88]	@ 0x58
 8005f8e:	6077      	str	r7, [r6, #4]
 8005f90:	6c46      	ldr	r6, [r0, #68]	@ 0x44
 8005f92:	6c07      	ldr	r7, [r0, #64]	@ 0x40
 8005f94:	f006 0c1c 	and.w	ip, r6, #28
 8005f98:	2601      	movs	r6, #1
 8005f9a:	fa06 f60c 	lsl.w	r6, r6, ip
 8005f9e:	607e      	str	r6, [r7, #4]
 8005fa0:	6063      	str	r3, [r4, #4]
 8005fa2:	6883      	ldr	r3, [r0, #8]
 8005fa4:	2b10      	cmp	r3, #16
 8005fa6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8005fa8:	bf0b      	itete	eq
 8005faa:	60a2      	streq	r2, [r4, #8]
 8005fac:	60a1      	strne	r1, [r4, #8]
 8005fae:	60e1      	streq	r1, [r4, #12]
 8005fb0:	60e2      	strne	r2, [r4, #12]
 8005fb2:	b1bb      	cbz	r3, 8005fe4 <HAL_DMA_Start_IT+0x9c>
 8005fb4:	6823      	ldr	r3, [r4, #0]
 8005fb6:	f043 030e 	orr.w	r3, r3, #14
 8005fba:	6023      	str	r3, [r4, #0]
 8005fbc:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8005fbe:	681a      	ldr	r2, [r3, #0]
 8005fc0:	03d2      	lsls	r2, r2, #15
 8005fc2:	d503      	bpl.n	8005fcc <HAL_DMA_Start_IT+0x84>
 8005fc4:	681a      	ldr	r2, [r3, #0]
 8005fc6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005fca:	601a      	str	r2, [r3, #0]
 8005fcc:	b11d      	cbz	r5, 8005fd6 <HAL_DMA_Start_IT+0x8e>
 8005fce:	682b      	ldr	r3, [r5, #0]
 8005fd0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005fd4:	602b      	str	r3, [r5, #0]
 8005fd6:	6823      	ldr	r3, [r4, #0]
 8005fd8:	f043 0301 	orr.w	r3, r3, #1
 8005fdc:	2000      	movs	r0, #0
 8005fde:	6023      	str	r3, [r4, #0]
 8005fe0:	bcf0      	pop	{r4, r5, r6, r7}
 8005fe2:	4770      	bx	lr
 8005fe4:	6823      	ldr	r3, [r4, #0]
 8005fe6:	f023 0304 	bic.w	r3, r3, #4
 8005fea:	6023      	str	r3, [r4, #0]
 8005fec:	6823      	ldr	r3, [r4, #0]
 8005fee:	f043 030a 	orr.w	r3, r3, #10
 8005ff2:	6023      	str	r3, [r4, #0]
 8005ff4:	e7e2      	b.n	8005fbc <HAL_DMA_Start_IT+0x74>
 8005ff6:	bf00      	nop

08005ff8 <HAL_DMA_Abort>:
 8005ff8:	2800      	cmp	r0, #0
 8005ffa:	d033      	beq.n	8006064 <HAL_DMA_Abort+0x6c>
 8005ffc:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8006000:	2b02      	cmp	r3, #2
 8006002:	d12a      	bne.n	800605a <HAL_DMA_Abort+0x62>
 8006004:	6803      	ldr	r3, [r0, #0]
 8006006:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 8006008:	6819      	ldr	r1, [r3, #0]
 800600a:	b430      	push	{r4, r5}
 800600c:	f021 010e 	bic.w	r1, r1, #14
 8006010:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 8006012:	6019      	str	r1, [r3, #0]
 8006014:	6821      	ldr	r1, [r4, #0]
 8006016:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8006018:	f421 7180 	bic.w	r1, r1, #256	@ 0x100
 800601c:	6021      	str	r1, [r4, #0]
 800601e:	6819      	ldr	r1, [r3, #0]
 8006020:	f021 0101 	bic.w	r1, r1, #1
 8006024:	6019      	str	r1, [r3, #0]
 8006026:	f002 021c 	and.w	r2, r2, #28
 800602a:	2301      	movs	r3, #1
 800602c:	4093      	lsls	r3, r2
 800602e:	e9d0 4214 	ldrd	r4, r2, [r0, #80]	@ 0x50
 8006032:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 8006034:	606b      	str	r3, [r5, #4]
 8006036:	604c      	str	r4, [r1, #4]
 8006038:	b132      	cbz	r2, 8006048 <HAL_DMA_Abort+0x50>
 800603a:	6813      	ldr	r3, [r2, #0]
 800603c:	e9d0 1416 	ldrd	r1, r4, [r0, #88]	@ 0x58
 8006040:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006044:	6013      	str	r3, [r2, #0]
 8006046:	604c      	str	r4, [r1, #4]
 8006048:	2300      	movs	r3, #0
 800604a:	2201      	movs	r2, #1
 800604c:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 8006050:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8006054:	bc30      	pop	{r4, r5}
 8006056:	4618      	mov	r0, r3
 8006058:	4770      	bx	lr
 800605a:	2204      	movs	r2, #4
 800605c:	2300      	movs	r3, #0
 800605e:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8006060:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8006064:	2001      	movs	r0, #1
 8006066:	4770      	bx	lr

08006068 <HAL_DMA_Abort_IT>:
 8006068:	b538      	push	{r3, r4, r5, lr}
 800606a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800606e:	2b02      	cmp	r3, #2
 8006070:	d003      	beq.n	800607a <HAL_DMA_Abort_IT+0x12>
 8006072:	2304      	movs	r3, #4
 8006074:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8006076:	2001      	movs	r0, #1
 8006078:	bd38      	pop	{r3, r4, r5, pc}
 800607a:	6803      	ldr	r3, [r0, #0]
 800607c:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 800607e:	6819      	ldr	r1, [r3, #0]
 8006080:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 8006082:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8006084:	f021 010e 	bic.w	r1, r1, #14
 8006088:	6019      	str	r1, [r3, #0]
 800608a:	6819      	ldr	r1, [r3, #0]
 800608c:	f021 0101 	bic.w	r1, r1, #1
 8006090:	6019      	str	r1, [r3, #0]
 8006092:	6823      	ldr	r3, [r4, #0]
 8006094:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 8006096:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800609a:	6023      	str	r3, [r4, #0]
 800609c:	f002 021c 	and.w	r2, r2, #28
 80060a0:	2301      	movs	r3, #1
 80060a2:	4093      	lsls	r3, r2
 80060a4:	e9d0 4214 	ldrd	r4, r2, [r0, #80]	@ 0x50
 80060a8:	606b      	str	r3, [r5, #4]
 80060aa:	604c      	str	r4, [r1, #4]
 80060ac:	b132      	cbz	r2, 80060bc <HAL_DMA_Abort_IT+0x54>
 80060ae:	6813      	ldr	r3, [r2, #0]
 80060b0:	e9d0 1416 	ldrd	r1, r4, [r0, #88]	@ 0x58
 80060b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80060b8:	6013      	str	r3, [r2, #0]
 80060ba:	604c      	str	r4, [r1, #4]
 80060bc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80060be:	2101      	movs	r1, #1
 80060c0:	2200      	movs	r2, #0
 80060c2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 80060c6:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 80060ca:	b103      	cbz	r3, 80060ce <HAL_DMA_Abort_IT+0x66>
 80060cc:	4798      	blx	r3
 80060ce:	2000      	movs	r0, #0
 80060d0:	bd38      	pop	{r3, r4, r5, pc}
 80060d2:	bf00      	nop

080060d4 <HAL_DMA_IRQHandler>:
 80060d4:	b470      	push	{r4, r5, r6}
 80060d6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80060d8:	6c06      	ldr	r6, [r0, #64]	@ 0x40
 80060da:	6805      	ldr	r5, [r0, #0]
 80060dc:	6831      	ldr	r1, [r6, #0]
 80060de:	682c      	ldr	r4, [r5, #0]
 80060e0:	f003 031c 	and.w	r3, r3, #28
 80060e4:	2204      	movs	r2, #4
 80060e6:	409a      	lsls	r2, r3
 80060e8:	420a      	tst	r2, r1
 80060ea:	d00e      	beq.n	800610a <HAL_DMA_IRQHandler+0x36>
 80060ec:	f014 0f04 	tst.w	r4, #4
 80060f0:	d00b      	beq.n	800610a <HAL_DMA_IRQHandler+0x36>
 80060f2:	682b      	ldr	r3, [r5, #0]
 80060f4:	069b      	lsls	r3, r3, #26
 80060f6:	d403      	bmi.n	8006100 <HAL_DMA_IRQHandler+0x2c>
 80060f8:	682b      	ldr	r3, [r5, #0]
 80060fa:	f023 0304 	bic.w	r3, r3, #4
 80060fe:	602b      	str	r3, [r5, #0]
 8006100:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8006102:	6072      	str	r2, [r6, #4]
 8006104:	b1cb      	cbz	r3, 800613a <HAL_DMA_IRQHandler+0x66>
 8006106:	bc70      	pop	{r4, r5, r6}
 8006108:	4718      	bx	r3
 800610a:	2202      	movs	r2, #2
 800610c:	409a      	lsls	r2, r3
 800610e:	420a      	tst	r2, r1
 8006110:	d015      	beq.n	800613e <HAL_DMA_IRQHandler+0x6a>
 8006112:	f014 0f02 	tst.w	r4, #2
 8006116:	d012      	beq.n	800613e <HAL_DMA_IRQHandler+0x6a>
 8006118:	682b      	ldr	r3, [r5, #0]
 800611a:	0699      	lsls	r1, r3, #26
 800611c:	d406      	bmi.n	800612c <HAL_DMA_IRQHandler+0x58>
 800611e:	682b      	ldr	r3, [r5, #0]
 8006120:	f023 030a 	bic.w	r3, r3, #10
 8006124:	602b      	str	r3, [r5, #0]
 8006126:	2301      	movs	r3, #1
 8006128:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 800612c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800612e:	6072      	str	r2, [r6, #4]
 8006130:	2100      	movs	r1, #0
 8006132:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8006136:	2b00      	cmp	r3, #0
 8006138:	d1e5      	bne.n	8006106 <HAL_DMA_IRQHandler+0x32>
 800613a:	bc70      	pop	{r4, r5, r6}
 800613c:	4770      	bx	lr
 800613e:	2208      	movs	r2, #8
 8006140:	409a      	lsls	r2, r3
 8006142:	420a      	tst	r2, r1
 8006144:	d0f9      	beq.n	800613a <HAL_DMA_IRQHandler+0x66>
 8006146:	0722      	lsls	r2, r4, #28
 8006148:	d5f7      	bpl.n	800613a <HAL_DMA_IRQHandler+0x66>
 800614a:	682a      	ldr	r2, [r5, #0]
 800614c:	6b41      	ldr	r1, [r0, #52]	@ 0x34
 800614e:	f022 020e 	bic.w	r2, r2, #14
 8006152:	602a      	str	r2, [r5, #0]
 8006154:	2201      	movs	r2, #1
 8006156:	fa02 f303 	lsl.w	r3, r2, r3
 800615a:	2400      	movs	r4, #0
 800615c:	6073      	str	r3, [r6, #4]
 800615e:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8006160:	f880 4024 	strb.w	r4, [r0, #36]	@ 0x24
 8006164:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 8006168:	2900      	cmp	r1, #0
 800616a:	d0e6      	beq.n	800613a <HAL_DMA_IRQHandler+0x66>
 800616c:	bc70      	pop	{r4, r5, r6}
 800616e:	4708      	bx	r1

08006170 <HAL_DMA_GetError>:
 8006170:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8006172:	4770      	bx	lr

08006174 <HAL_GPIO_Init>:
 8006174:	680b      	ldr	r3, [r1, #0]
 8006176:	2b00      	cmp	r3, #0
 8006178:	f000 8181 	beq.w	800647e <HAL_GPIO_Init+0x30a>
 800617c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006180:	f1b0 4f90 	cmp.w	r0, #1207959552	@ 0x48000000
 8006184:	b083      	sub	sp, #12
 8006186:	f04f 0200 	mov.w	r2, #0
 800618a:	f04f 0b01 	mov.w	fp, #1
 800618e:	f000 80f6 	beq.w	800637e <HAL_GPIO_Init+0x20a>
 8006192:	f8df e30c 	ldr.w	lr, [pc, #780]	@ 80064a0 <HAL_GPIO_Init+0x32c>
 8006196:	9300      	str	r3, [sp, #0]
 8006198:	9b00      	ldr	r3, [sp, #0]
 800619a:	fa0b fc02 	lsl.w	ip, fp, r2
 800619e:	ea1c 0a03 	ands.w	sl, ip, r3
 80061a2:	d068      	beq.n	8006276 <HAL_GPIO_Init+0x102>
 80061a4:	684d      	ldr	r5, [r1, #4]
 80061a6:	f005 0703 	and.w	r7, r5, #3
 80061aa:	0054      	lsls	r4, r2, #1
 80061ac:	2303      	movs	r3, #3
 80061ae:	f107 38ff 	add.w	r8, r7, #4294967295
 80061b2:	fa03 f604 	lsl.w	r6, r3, r4
 80061b6:	f1b8 0f01 	cmp.w	r8, #1
 80061ba:	ea6f 0606 	mvn.w	r6, r6
 80061be:	f240 8102 	bls.w	80063c6 <HAL_GPIO_Init+0x252>
 80061c2:	2f03      	cmp	r7, #3
 80061c4:	f040 815c 	bne.w	8006480 <HAL_GPIO_Init+0x30c>
 80061c8:	fa07 f404 	lsl.w	r4, r7, r4
 80061cc:	6807      	ldr	r7, [r0, #0]
 80061ce:	403e      	ands	r6, r7
 80061d0:	4334      	orrs	r4, r6
 80061d2:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
 80061d6:	6004      	str	r4, [r0, #0]
 80061d8:	d04d      	beq.n	8006276 <HAL_GPIO_Init+0x102>
 80061da:	f022 0403 	bic.w	r4, r2, #3
 80061de:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 80061e2:	f002 0703 	and.w	r7, r2, #3
 80061e6:	230f      	movs	r3, #15
 80061e8:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
 80061ec:	00bf      	lsls	r7, r7, #2
 80061ee:	fa03 fc07 	lsl.w	ip, r3, r7
 80061f2:	4ba9      	ldr	r3, [pc, #676]	@ (8006498 <HAL_GPIO_Init+0x324>)
 80061f4:	68a6      	ldr	r6, [r4, #8]
 80061f6:	4298      	cmp	r0, r3
 80061f8:	ea26 060c 	bic.w	r6, r6, ip
 80061fc:	f000 8133 	beq.w	8006466 <HAL_GPIO_Init+0x2f2>
 8006200:	4ba6      	ldr	r3, [pc, #664]	@ (800649c <HAL_GPIO_Init+0x328>)
 8006202:	4298      	cmp	r0, r3
 8006204:	f000 8120 	beq.w	8006448 <HAL_GPIO_Init+0x2d4>
 8006208:	f8df c298 	ldr.w	ip, [pc, #664]	@ 80064a4 <HAL_GPIO_Init+0x330>
 800620c:	4560      	cmp	r0, ip
 800620e:	f000 8130 	beq.w	8006472 <HAL_GPIO_Init+0x2fe>
 8006212:	f8df c294 	ldr.w	ip, [pc, #660]	@ 80064a8 <HAL_GPIO_Init+0x334>
 8006216:	4560      	cmp	r0, ip
 8006218:	bf0c      	ite	eq
 800621a:	f04f 0c04 	moveq.w	ip, #4
 800621e:	f04f 0c07 	movne.w	ip, #7
 8006222:	fa0c f707 	lsl.w	r7, ip, r7
 8006226:	433e      	orrs	r6, r7
 8006228:	60a6      	str	r6, [r4, #8]
 800622a:	f8de 4000 	ldr.w	r4, [lr]
 800622e:	ea6f 060a 	mvn.w	r6, sl
 8006232:	02ef      	lsls	r7, r5, #11
 8006234:	bf54      	ite	pl
 8006236:	4034      	andpl	r4, r6
 8006238:	ea4a 0404 	orrmi.w	r4, sl, r4
 800623c:	f8ce 4000 	str.w	r4, [lr]
 8006240:	f8de 4004 	ldr.w	r4, [lr, #4]
 8006244:	02ab      	lsls	r3, r5, #10
 8006246:	bf54      	ite	pl
 8006248:	4034      	andpl	r4, r6
 800624a:	ea4a 0404 	orrmi.w	r4, sl, r4
 800624e:	f8ce 4004 	str.w	r4, [lr, #4]
 8006252:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
 8006256:	03ef      	lsls	r7, r5, #15
 8006258:	bf54      	ite	pl
 800625a:	4034      	andpl	r4, r6
 800625c:	ea4a 0404 	orrmi.w	r4, sl, r4
 8006260:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
 8006264:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
 8006268:	03ab      	lsls	r3, r5, #14
 800626a:	bf54      	ite	pl
 800626c:	4034      	andpl	r4, r6
 800626e:	ea4a 0404 	orrmi.w	r4, sl, r4
 8006272:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
 8006276:	9b00      	ldr	r3, [sp, #0]
 8006278:	3201      	adds	r2, #1
 800627a:	fa33 f402 	lsrs.w	r4, r3, r2
 800627e:	d18b      	bne.n	8006198 <HAL_GPIO_Init+0x24>
 8006280:	b003      	add	sp, #12
 8006282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006286:	f8d0 a008 	ldr.w	sl, [r0, #8]
 800628a:	68ce      	ldr	r6, [r1, #12]
 800628c:	ea0e 0a0a 	and.w	sl, lr, sl
 8006290:	fa06 f907 	lsl.w	r9, r6, r7
 8006294:	ea49 090a 	orr.w	r9, r9, sl
 8006298:	f8c0 9008 	str.w	r9, [r0, #8]
 800629c:	f8d0 9004 	ldr.w	r9, [r0, #4]
 80062a0:	ea29 0908 	bic.w	r9, r9, r8
 80062a4:	f3c5 1800 	ubfx	r8, r5, #4, #1
 80062a8:	fa08 f802 	lsl.w	r8, r8, r2
 80062ac:	ea48 0809 	orr.w	r8, r8, r9
 80062b0:	f8c0 8004 	str.w	r8, [r0, #4]
 80062b4:	f8d0 900c 	ldr.w	r9, [r0, #12]
 80062b8:	688e      	ldr	r6, [r1, #8]
 80062ba:	ea0e 0909 	and.w	r9, lr, r9
 80062be:	fa06 f807 	lsl.w	r8, r6, r7
 80062c2:	ea48 0809 	orr.w	r8, r8, r9
 80062c6:	2c02      	cmp	r4, #2
 80062c8:	f8c0 800c 	str.w	r8, [r0, #12]
 80062cc:	d119      	bne.n	8006302 <HAL_GPIO_Init+0x18e>
 80062ce:	ea4f 08d2 	mov.w	r8, r2, lsr #3
 80062d2:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80062d6:	f108 4690 	add.w	r6, r8, #1207959552	@ 0x48000000
 80062da:	9600      	str	r6, [sp, #0]
 80062dc:	f8d6 9020 	ldr.w	r9, [r6, #32]
 80062e0:	690e      	ldr	r6, [r1, #16]
 80062e2:	f002 0807 	and.w	r8, r2, #7
 80062e6:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80062ea:	fa06 fa08 	lsl.w	sl, r6, r8
 80062ee:	260f      	movs	r6, #15
 80062f0:	fa06 f808 	lsl.w	r8, r6, r8
 80062f4:	ea29 0908 	bic.w	r9, r9, r8
 80062f8:	9e00      	ldr	r6, [sp, #0]
 80062fa:	ea4a 0a09 	orr.w	sl, sl, r9
 80062fe:	f8c6 a020 	str.w	sl, [r6, #32]
 8006302:	40bc      	lsls	r4, r7
 8006304:	6807      	ldr	r7, [r0, #0]
 8006306:	ea07 070e 	and.w	r7, r7, lr
 800630a:	433c      	orrs	r4, r7
 800630c:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
 8006310:	6004      	str	r4, [r0, #0]
 8006312:	d030      	beq.n	8006376 <HAL_GPIO_Init+0x202>
 8006314:	f022 0403 	bic.w	r4, r2, #3
 8006318:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 800631c:	f504 3480 	add.w	r4, r4, #65536	@ 0x10000
 8006320:	f002 0703 	and.w	r7, r2, #3
 8006324:	f8d4 e008 	ldr.w	lr, [r4, #8]
 8006328:	260f      	movs	r6, #15
 800632a:	00bf      	lsls	r7, r7, #2
 800632c:	fa06 f707 	lsl.w	r7, r6, r7
 8006330:	ea2e 0707 	bic.w	r7, lr, r7
 8006334:	60a7      	str	r7, [r4, #8]
 8006336:	4c5a      	ldr	r4, [pc, #360]	@ (80064a0 <HAL_GPIO_Init+0x32c>)
 8006338:	02ee      	lsls	r6, r5, #11
 800633a:	6824      	ldr	r4, [r4, #0]
 800633c:	ea6f 070c 	mvn.w	r7, ip
 8006340:	d47f      	bmi.n	8006442 <HAL_GPIO_Init+0x2ce>
 8006342:	403c      	ands	r4, r7
 8006344:	4e56      	ldr	r6, [pc, #344]	@ (80064a0 <HAL_GPIO_Init+0x32c>)
 8006346:	6034      	str	r4, [r6, #0]
 8006348:	6874      	ldr	r4, [r6, #4]
 800634a:	02ae      	lsls	r6, r5, #10
 800634c:	f100 8088 	bmi.w	8006460 <HAL_GPIO_Init+0x2ec>
 8006350:	403c      	ands	r4, r7
 8006352:	4e53      	ldr	r6, [pc, #332]	@ (80064a0 <HAL_GPIO_Init+0x32c>)
 8006354:	6074      	str	r4, [r6, #4]
 8006356:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
 800635a:	03ee      	lsls	r6, r5, #15
 800635c:	d47d      	bmi.n	800645a <HAL_GPIO_Init+0x2e6>
 800635e:	403c      	ands	r4, r7
 8006360:	4e4f      	ldr	r6, [pc, #316]	@ (80064a0 <HAL_GPIO_Init+0x32c>)
 8006362:	03ad      	lsls	r5, r5, #14
 8006364:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
 8006368:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
 800636c:	d472      	bmi.n	8006454 <HAL_GPIO_Init+0x2e0>
 800636e:	403c      	ands	r4, r7
 8006370:	4d4b      	ldr	r5, [pc, #300]	@ (80064a0 <HAL_GPIO_Init+0x32c>)
 8006372:	f8c5 4084 	str.w	r4, [r5, #132]	@ 0x84
 8006376:	3201      	adds	r2, #1
 8006378:	fa33 f402 	lsrs.w	r4, r3, r2
 800637c:	d080      	beq.n	8006280 <HAL_GPIO_Init+0x10c>
 800637e:	fa0b f802 	lsl.w	r8, fp, r2
 8006382:	ea13 0c08 	ands.w	ip, r3, r8
 8006386:	d0f6      	beq.n	8006376 <HAL_GPIO_Init+0x202>
 8006388:	684d      	ldr	r5, [r1, #4]
 800638a:	f005 0403 	and.w	r4, r5, #3
 800638e:	0057      	lsls	r7, r2, #1
 8006390:	2603      	movs	r6, #3
 8006392:	f104 39ff 	add.w	r9, r4, #4294967295
 8006396:	fa06 fe07 	lsl.w	lr, r6, r7
 800639a:	f1b9 0f01 	cmp.w	r9, #1
 800639e:	ea6f 0e0e 	mvn.w	lr, lr
 80063a2:	f67f af70 	bls.w	8006286 <HAL_GPIO_Init+0x112>
 80063a6:	2c03      	cmp	r4, #3
 80063a8:	d0ab      	beq.n	8006302 <HAL_GPIO_Init+0x18e>
 80063aa:	f04f 4990 	mov.w	r9, #1207959552	@ 0x48000000
 80063ae:	688e      	ldr	r6, [r1, #8]
 80063b0:	f8d9 a00c 	ldr.w	sl, [r9, #12]
 80063b4:	fa06 f807 	lsl.w	r8, r6, r7
 80063b8:	ea0e 0a0a 	and.w	sl, lr, sl
 80063bc:	ea48 080a 	orr.w	r8, r8, sl
 80063c0:	f8c9 800c 	str.w	r8, [r9, #12]
 80063c4:	e79d      	b.n	8006302 <HAL_GPIO_Init+0x18e>
 80063c6:	f8d0 9008 	ldr.w	r9, [r0, #8]
 80063ca:	68cb      	ldr	r3, [r1, #12]
 80063cc:	ea09 0906 	and.w	r9, r9, r6
 80063d0:	fa03 f804 	lsl.w	r8, r3, r4
 80063d4:	ea48 0809 	orr.w	r8, r8, r9
 80063d8:	f8c0 8008 	str.w	r8, [r0, #8]
 80063dc:	f8d0 8004 	ldr.w	r8, [r0, #4]
 80063e0:	688b      	ldr	r3, [r1, #8]
 80063e2:	ea28 080c 	bic.w	r8, r8, ip
 80063e6:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 80063ea:	fa0c fc02 	lsl.w	ip, ip, r2
 80063ee:	ea4c 0c08 	orr.w	ip, ip, r8
 80063f2:	f8c0 c004 	str.w	ip, [r0, #4]
 80063f6:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80063fa:	fa03 fc04 	lsl.w	ip, r3, r4
 80063fe:	ea08 0806 	and.w	r8, r8, r6
 8006402:	ea4c 0c08 	orr.w	ip, ip, r8
 8006406:	2f02      	cmp	r7, #2
 8006408:	f8c0 c00c 	str.w	ip, [r0, #12]
 800640c:	f47f aedc 	bne.w	80061c8 <HAL_GPIO_Init+0x54>
 8006410:	690b      	ldr	r3, [r1, #16]
 8006412:	ea4f 08d2 	mov.w	r8, r2, lsr #3
 8006416:	f002 0c07 	and.w	ip, r2, #7
 800641a:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 800641e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006422:	fa03 f30c 	lsl.w	r3, r3, ip
 8006426:	f8d8 9020 	ldr.w	r9, [r8, #32]
 800642a:	9301      	str	r3, [sp, #4]
 800642c:	230f      	movs	r3, #15
 800642e:	fa03 fc0c 	lsl.w	ip, r3, ip
 8006432:	9b01      	ldr	r3, [sp, #4]
 8006434:	ea29 090c 	bic.w	r9, r9, ip
 8006438:	ea43 0c09 	orr.w	ip, r3, r9
 800643c:	f8c8 c020 	str.w	ip, [r8, #32]
 8006440:	e6c2      	b.n	80061c8 <HAL_GPIO_Init+0x54>
 8006442:	ea4c 0404 	orr.w	r4, ip, r4
 8006446:	e77d      	b.n	8006344 <HAL_GPIO_Init+0x1d0>
 8006448:	f04f 0c02 	mov.w	ip, #2
 800644c:	fa0c f707 	lsl.w	r7, ip, r7
 8006450:	433e      	orrs	r6, r7
 8006452:	e6e9      	b.n	8006228 <HAL_GPIO_Init+0xb4>
 8006454:	ea44 040c 	orr.w	r4, r4, ip
 8006458:	e78a      	b.n	8006370 <HAL_GPIO_Init+0x1fc>
 800645a:	ea4c 0404 	orr.w	r4, ip, r4
 800645e:	e77f      	b.n	8006360 <HAL_GPIO_Init+0x1ec>
 8006460:	ea44 040c 	orr.w	r4, r4, ip
 8006464:	e775      	b.n	8006352 <HAL_GPIO_Init+0x1de>
 8006466:	f04f 0c01 	mov.w	ip, #1
 800646a:	fa0c f707 	lsl.w	r7, ip, r7
 800646e:	433e      	orrs	r6, r7
 8006470:	e6da      	b.n	8006228 <HAL_GPIO_Init+0xb4>
 8006472:	f04f 0c03 	mov.w	ip, #3
 8006476:	fa0c f707 	lsl.w	r7, ip, r7
 800647a:	433e      	orrs	r6, r7
 800647c:	e6d4      	b.n	8006228 <HAL_GPIO_Init+0xb4>
 800647e:	4770      	bx	lr
 8006480:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8006484:	688b      	ldr	r3, [r1, #8]
 8006486:	ea08 0806 	and.w	r8, r8, r6
 800648a:	fa03 fc04 	lsl.w	ip, r3, r4
 800648e:	ea4c 0c08 	orr.w	ip, ip, r8
 8006492:	f8c0 c00c 	str.w	ip, [r0, #12]
 8006496:	e697      	b.n	80061c8 <HAL_GPIO_Init+0x54>
 8006498:	48000400 	.word	0x48000400
 800649c:	48000800 	.word	0x48000800
 80064a0:	58000800 	.word	0x58000800
 80064a4:	48000c00 	.word	0x48000c00
 80064a8:	48001000 	.word	0x48001000

080064ac <HAL_GPIO_ReadPin>:
 80064ac:	6903      	ldr	r3, [r0, #16]
 80064ae:	4219      	tst	r1, r3
 80064b0:	bf14      	ite	ne
 80064b2:	2001      	movne	r0, #1
 80064b4:	2000      	moveq	r0, #0
 80064b6:	4770      	bx	lr

080064b8 <HAL_GPIO_WritePin>:
 80064b8:	b10a      	cbz	r2, 80064be <HAL_GPIO_WritePin+0x6>
 80064ba:	6181      	str	r1, [r0, #24]
 80064bc:	4770      	bx	lr
 80064be:	6281      	str	r1, [r0, #40]	@ 0x28
 80064c0:	4770      	bx	lr
 80064c2:	bf00      	nop

080064c4 <HAL_GPIO_TogglePin>:
 80064c4:	6943      	ldr	r3, [r0, #20]
 80064c6:	ea01 0203 	and.w	r2, r1, r3
 80064ca:	ea21 0103 	bic.w	r1, r1, r3
 80064ce:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80064d2:	6181      	str	r1, [r0, #24]
 80064d4:	4770      	bx	lr
 80064d6:	bf00      	nop

080064d8 <HAL_GPIO_EXTI_IRQHandler>:
 80064d8:	4a04      	ldr	r2, [pc, #16]	@ (80064ec <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80064da:	68d1      	ldr	r1, [r2, #12]
 80064dc:	4201      	tst	r1, r0
 80064de:	d100      	bne.n	80064e2 <HAL_GPIO_EXTI_IRQHandler+0xa>
 80064e0:	4770      	bx	lr
 80064e2:	b508      	push	{r3, lr}
 80064e4:	60d0      	str	r0, [r2, #12]
 80064e6:	f7fb fcc1 	bl	8001e6c <HAL_GPIO_EXTI_Callback>
 80064ea:	bd08      	pop	{r3, pc}
 80064ec:	58000800 	.word	0x58000800

080064f0 <HAL_HSEM_FreeCallback>:
 80064f0:	4770      	bx	lr
 80064f2:	bf00      	nop

080064f4 <HAL_HSEM_IRQHandler>:
 80064f4:	b508      	push	{r3, lr}
 80064f6:	4b05      	ldr	r3, [pc, #20]	@ (800650c <HAL_HSEM_IRQHandler+0x18>)
 80064f8:	68d8      	ldr	r0, [r3, #12]
 80064fa:	681a      	ldr	r2, [r3, #0]
 80064fc:	ea22 0200 	bic.w	r2, r2, r0
 8006500:	601a      	str	r2, [r3, #0]
 8006502:	6058      	str	r0, [r3, #4]
 8006504:	f7ff fff4 	bl	80064f0 <HAL_HSEM_FreeCallback>
 8006508:	bd08      	pop	{r3, pc}
 800650a:	bf00      	nop
 800650c:	58001500 	.word	0x58001500

08006510 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
 8006510:	6803      	ldr	r3, [r0, #0]
 8006512:	699a      	ldr	r2, [r3, #24]
 8006514:	0412      	lsls	r2, r2, #16
 8006516:	f140 8097 	bpl.w	8006648 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
 800651a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800651e:	4604      	mov	r4, r0
 8006520:	460e      	mov	r6, r1
 8006522:	2710      	movs	r7, #16
 8006524:	699a      	ldr	r2, [r3, #24]
 8006526:	f012 0810 	ands.w	r8, r2, #16
 800652a:	d07f      	beq.n	800662c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
 800652c:	61df      	str	r7, [r3, #28]
 800652e:	4635      	mov	r5, r6
 8006530:	699a      	ldr	r2, [r3, #24]
 8006532:	f012 0820 	ands.w	r8, r2, #32
 8006536:	d17b      	bne.n	8006630 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
 8006538:	f7fe ffe8 	bl	800550c <HAL_GetTick>
 800653c:	1b40      	subs	r0, r0, r5
 800653e:	2819      	cmp	r0, #25
 8006540:	6823      	ldr	r3, [r4, #0]
 8006542:	d83d      	bhi.n	80065c0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
 8006544:	699a      	ldr	r2, [r3, #24]
 8006546:	0690      	lsls	r0, r2, #26
 8006548:	d5f6      	bpl.n	8006538 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>
 800654a:	2220      	movs	r2, #32
 800654c:	61da      	str	r2, [r3, #28]
 800654e:	f048 0804 	orr.w	r8, r8, #4
 8006552:	2501      	movs	r5, #1
 8006554:	699a      	ldr	r2, [r3, #24]
 8006556:	05d1      	lsls	r1, r2, #23
 8006558:	d552      	bpl.n	8006600 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
 800655a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800655e:	0555      	lsls	r5, r2, #21
 8006560:	61d9      	str	r1, [r3, #28]
 8006562:	f048 0801 	orr.w	r8, r8, #1
 8006566:	d504      	bpl.n	8006572 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
 8006568:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800656c:	61d9      	str	r1, [r3, #28]
 800656e:	f048 0808 	orr.w	r8, r8, #8
 8006572:	0591      	lsls	r1, r2, #22
 8006574:	d504      	bpl.n	8006580 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
 8006576:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800657a:	f048 0802 	orr.w	r8, r8, #2
 800657e:	61da      	str	r2, [r3, #28]
 8006580:	699a      	ldr	r2, [r3, #24]
 8006582:	0795      	lsls	r5, r2, #30
 8006584:	bf44      	itt	mi
 8006586:	2200      	movmi	r2, #0
 8006588:	629a      	strmi	r2, [r3, #40]	@ 0x28
 800658a:	699a      	ldr	r2, [r3, #24]
 800658c:	07d0      	lsls	r0, r2, #31
 800658e:	d403      	bmi.n	8006598 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
 8006590:	699a      	ldr	r2, [r3, #24]
 8006592:	f042 0201 	orr.w	r2, r2, #1
 8006596:	619a      	str	r2, [r3, #24]
 8006598:	685a      	ldr	r2, [r3, #4]
 800659a:	482c      	ldr	r0, [pc, #176]	@ (800664c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
 800659c:	4002      	ands	r2, r0
 800659e:	605a      	str	r2, [r3, #4]
 80065a0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80065a2:	2120      	movs	r1, #32
 80065a4:	2200      	movs	r2, #0
 80065a6:	ea43 0308 	orr.w	r3, r3, r8
 80065aa:	6463      	str	r3, [r4, #68]	@ 0x44
 80065ac:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 80065b0:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 80065b4:	2300      	movs	r3, #0
 80065b6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80065ba:	2001      	movs	r0, #1
 80065bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80065c0:	6858      	ldr	r0, [r3, #4]
 80065c2:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 80065c6:	6999      	ldr	r1, [r3, #24]
 80065c8:	0409      	lsls	r1, r1, #16
 80065ca:	b2d2      	uxtb	r2, r2
 80065cc:	d50b      	bpl.n	80065e6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 80065ce:	0441      	lsls	r1, r0, #17
 80065d0:	d409      	bmi.n	80065e6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 80065d2:	2a20      	cmp	r2, #32
 80065d4:	d007      	beq.n	80065e6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 80065d6:	685a      	ldr	r2, [r3, #4]
 80065d8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80065dc:	605a      	str	r2, [r3, #4]
 80065de:	f7fe ff95 	bl	800550c <HAL_GetTick>
 80065e2:	6823      	ldr	r3, [r4, #0]
 80065e4:	4605      	mov	r5, r0
 80065e6:	699a      	ldr	r2, [r3, #24]
 80065e8:	0690      	lsls	r0, r2, #26
 80065ea:	d4a1      	bmi.n	8006530 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
 80065ec:	f7fe ff8e 	bl	800550c <HAL_GetTick>
 80065f0:	1b40      	subs	r0, r0, r5
 80065f2:	2819      	cmp	r0, #25
 80065f4:	6823      	ldr	r3, [r4, #0]
 80065f6:	d9f6      	bls.n	80065e6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
 80065f8:	699a      	ldr	r2, [r3, #24]
 80065fa:	f04f 0820 	mov.w	r8, #32
 80065fe:	e7a6      	b.n	800654e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
 8006600:	0550      	lsls	r0, r2, #21
 8006602:	d4b1      	bmi.n	8006568 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
 8006604:	0592      	lsls	r2, r2, #22
 8006606:	d4b6      	bmi.n	8006576 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
 8006608:	2d00      	cmp	r5, #0
 800660a:	d1b9      	bne.n	8006580 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
 800660c:	f7fe ff7e 	bl	800550c <HAL_GetTick>
 8006610:	1b80      	subs	r0, r0, r6
 8006612:	2819      	cmp	r0, #25
 8006614:	6823      	ldr	r3, [r4, #0]
 8006616:	d902      	bls.n	800661e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
 8006618:	699a      	ldr	r2, [r3, #24]
 800661a:	0411      	lsls	r1, r2, #16
 800661c:	d40b      	bmi.n	8006636 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
 800661e:	699a      	ldr	r2, [r3, #24]
 8006620:	0412      	lsls	r2, r2, #16
 8006622:	f53f af7f 	bmi.w	8006524 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
 8006626:	2000      	movs	r0, #0
 8006628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800662c:	4645      	mov	r5, r8
 800662e:	e791      	b.n	8006554 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
 8006630:	f04f 0800 	mov.w	r8, #0
 8006634:	e789      	b.n	800654a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
 8006636:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006638:	2220      	movs	r2, #32
 800663a:	4313      	orrs	r3, r2
 800663c:	6463      	str	r3, [r4, #68]	@ 0x44
 800663e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
 8006642:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
 8006646:	e7b5      	b.n	80065b4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
 8006648:	2000      	movs	r0, #0
 800664a:	4770      	bx	lr
 800664c:	fe00e800 	.word	0xfe00e800

08006650 <I2C_WaitOnTXISFlagUntilTimeout>:
 8006650:	6803      	ldr	r3, [r0, #0]
 8006652:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006656:	4681      	mov	r9, r0
 8006658:	460d      	mov	r5, r1
 800665a:	4690      	mov	r8, r2
 800665c:	2610      	movs	r6, #16
 800665e:	2720      	movs	r7, #32
 8006660:	699c      	ldr	r4, [r3, #24]
 8006662:	f014 0402 	ands.w	r4, r4, #2
 8006666:	d168      	bne.n	800673a <I2C_WaitOnTXISFlagUntilTimeout+0xea>
 8006668:	699a      	ldr	r2, [r3, #24]
 800666a:	f012 0c10 	ands.w	ip, r2, #16
 800666e:	d062      	beq.n	8006736 <I2C_WaitOnTXISFlagUntilTimeout+0xe6>
 8006670:	1c6a      	adds	r2, r5, #1
 8006672:	61de      	str	r6, [r3, #28]
 8006674:	d164      	bne.n	8006740 <I2C_WaitOnTXISFlagUntilTimeout+0xf0>
 8006676:	699a      	ldr	r2, [r3, #24]
 8006678:	0691      	lsls	r1, r2, #26
 800667a:	d5fc      	bpl.n	8006676 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
 800667c:	61df      	str	r7, [r3, #28]
 800667e:	f044 0c04 	orr.w	ip, r4, #4
 8006682:	2101      	movs	r1, #1
 8006684:	699a      	ldr	r2, [r3, #24]
 8006686:	05d0      	lsls	r0, r2, #23
 8006688:	d534      	bpl.n	80066f4 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
 800668a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800668e:	0554      	lsls	r4, r2, #21
 8006690:	61d9      	str	r1, [r3, #28]
 8006692:	f04c 0c01 	orr.w	ip, ip, #1
 8006696:	d504      	bpl.n	80066a2 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
 8006698:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800669c:	61d9      	str	r1, [r3, #28]
 800669e:	f04c 0c08 	orr.w	ip, ip, #8
 80066a2:	0595      	lsls	r5, r2, #22
 80066a4:	d504      	bpl.n	80066b0 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
 80066a6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80066aa:	f04c 0c02 	orr.w	ip, ip, #2
 80066ae:	61da      	str	r2, [r3, #28]
 80066b0:	699a      	ldr	r2, [r3, #24]
 80066b2:	0790      	lsls	r0, r2, #30
 80066b4:	bf44      	itt	mi
 80066b6:	2200      	movmi	r2, #0
 80066b8:	629a      	strmi	r2, [r3, #40]	@ 0x28
 80066ba:	699a      	ldr	r2, [r3, #24]
 80066bc:	07d1      	lsls	r1, r2, #31
 80066be:	d403      	bmi.n	80066c8 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 80066c0:	699a      	ldr	r2, [r3, #24]
 80066c2:	f042 0201 	orr.w	r2, r2, #1
 80066c6:	619a      	str	r2, [r3, #24]
 80066c8:	685a      	ldr	r2, [r3, #4]
 80066ca:	483b      	ldr	r0, [pc, #236]	@ (80067b8 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
 80066cc:	4002      	ands	r2, r0
 80066ce:	605a      	str	r2, [r3, #4]
 80066d0:	f8d9 3044 	ldr.w	r3, [r9, #68]	@ 0x44
 80066d4:	2120      	movs	r1, #32
 80066d6:	2200      	movs	r2, #0
 80066d8:	ea43 030c 	orr.w	r3, r3, ip
 80066dc:	f8c9 3044 	str.w	r3, [r9, #68]	@ 0x44
 80066e0:	f889 1041 	strb.w	r1, [r9, #65]	@ 0x41
 80066e4:	f889 2042 	strb.w	r2, [r9, #66]	@ 0x42
 80066e8:	2300      	movs	r3, #0
 80066ea:	f889 3040 	strb.w	r3, [r9, #64]	@ 0x40
 80066ee:	2001      	movs	r0, #1
 80066f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80066f4:	0550      	lsls	r0, r2, #21
 80066f6:	d4cf      	bmi.n	8006698 <I2C_WaitOnTXISFlagUntilTimeout+0x48>
 80066f8:	0594      	lsls	r4, r2, #22
 80066fa:	d4d4      	bmi.n	80066a6 <I2C_WaitOnTXISFlagUntilTimeout+0x56>
 80066fc:	2900      	cmp	r1, #0
 80066fe:	d1d7      	bne.n	80066b0 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
 8006700:	1c6a      	adds	r2, r5, #1
 8006702:	d0ad      	beq.n	8006660 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
 8006704:	f7fe ff02 	bl	800550c <HAL_GetTick>
 8006708:	eba0 0308 	sub.w	r3, r0, r8
 800670c:	42ab      	cmp	r3, r5
 800670e:	f8d9 3000 	ldr.w	r3, [r9]
 8006712:	d801      	bhi.n	8006718 <I2C_WaitOnTXISFlagUntilTimeout+0xc8>
 8006714:	2d00      	cmp	r5, #0
 8006716:	d1a2      	bne.n	800665e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006718:	699a      	ldr	r2, [r3, #24]
 800671a:	f012 0202 	ands.w	r2, r2, #2
 800671e:	d19e      	bne.n	800665e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006720:	f8d9 3044 	ldr.w	r3, [r9, #68]	@ 0x44
 8006724:	2120      	movs	r1, #32
 8006726:	430b      	orrs	r3, r1
 8006728:	f8c9 3044 	str.w	r3, [r9, #68]	@ 0x44
 800672c:	f889 1041 	strb.w	r1, [r9, #65]	@ 0x41
 8006730:	f889 2042 	strb.w	r2, [r9, #66]	@ 0x42
 8006734:	e7d8      	b.n	80066e8 <I2C_WaitOnTXISFlagUntilTimeout+0x98>
 8006736:	4661      	mov	r1, ip
 8006738:	e7a4      	b.n	8006684 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
 800673a:	2000      	movs	r0, #0
 800673c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006740:	46c2      	mov	sl, r8
 8006742:	699a      	ldr	r2, [r3, #24]
 8006744:	0692      	lsls	r2, r2, #26
 8006746:	d499      	bmi.n	800667c <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
 8006748:	f7fe fee0 	bl	800550c <HAL_GetTick>
 800674c:	eba0 000a 	sub.w	r0, r0, sl
 8006750:	4285      	cmp	r5, r0
 8006752:	d300      	bcc.n	8006756 <I2C_WaitOnTXISFlagUntilTimeout+0x106>
 8006754:	bb1d      	cbnz	r5, 800679e <I2C_WaitOnTXISFlagUntilTimeout+0x14e>
 8006756:	f8d9 3000 	ldr.w	r3, [r9]
 800675a:	6858      	ldr	r0, [r3, #4]
 800675c:	f899 2042 	ldrb.w	r2, [r9, #66]	@ 0x42
 8006760:	6999      	ldr	r1, [r3, #24]
 8006762:	0409      	lsls	r1, r1, #16
 8006764:	b2d2      	uxtb	r2, r2
 8006766:	d50c      	bpl.n	8006782 <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 8006768:	0441      	lsls	r1, r0, #17
 800676a:	d40a      	bmi.n	8006782 <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 800676c:	2a20      	cmp	r2, #32
 800676e:	d008      	beq.n	8006782 <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 8006770:	685a      	ldr	r2, [r3, #4]
 8006772:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006776:	605a      	str	r2, [r3, #4]
 8006778:	f7fe fec8 	bl	800550c <HAL_GetTick>
 800677c:	f8d9 3000 	ldr.w	r3, [r9]
 8006780:	4682      	mov	sl, r0
 8006782:	699a      	ldr	r2, [r3, #24]
 8006784:	0690      	lsls	r0, r2, #26
 8006786:	d4dc      	bmi.n	8006742 <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
 8006788:	f7fe fec0 	bl	800550c <HAL_GetTick>
 800678c:	eba0 000a 	sub.w	r0, r0, sl
 8006790:	2819      	cmp	r0, #25
 8006792:	f8d9 3000 	ldr.w	r3, [r9]
 8006796:	d9f4      	bls.n	8006782 <I2C_WaitOnTXISFlagUntilTimeout+0x132>
 8006798:	699a      	ldr	r2, [r3, #24]
 800679a:	2420      	movs	r4, #32
 800679c:	e76f      	b.n	800667e <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
 800679e:	f8d9 3000 	ldr.w	r3, [r9]
 80067a2:	699a      	ldr	r2, [r3, #24]
 80067a4:	0690      	lsls	r0, r2, #26
 80067a6:	f53f af69 	bmi.w	800667c <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
 80067aa:	f7fe feaf 	bl	800550c <HAL_GetTick>
 80067ae:	eba0 000a 	sub.w	r0, r0, sl
 80067b2:	4285      	cmp	r5, r0
 80067b4:	d2f3      	bcs.n	800679e <I2C_WaitOnTXISFlagUntilTimeout+0x14e>
 80067b6:	e7ce      	b.n	8006756 <I2C_WaitOnTXISFlagUntilTimeout+0x106>
 80067b8:	fe00e800 	.word	0xfe00e800

080067bc <I2C_WaitOnFlagUntilTimeout>:
 80067bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80067c0:	4604      	mov	r4, r0
 80067c2:	6800      	ldr	r0, [r0, #0]
 80067c4:	460f      	mov	r7, r1
 80067c6:	4616      	mov	r6, r2
 80067c8:	461d      	mov	r5, r3
 80067ca:	f04f 0810 	mov.w	r8, #16
 80067ce:	f04f 0920 	mov.w	r9, #32
 80067d2:	6983      	ldr	r3, [r0, #24]
 80067d4:	ea37 0303 	bics.w	r3, r7, r3
 80067d8:	bf0c      	ite	eq
 80067da:	2301      	moveq	r3, #1
 80067dc:	2300      	movne	r3, #0
 80067de:	42b3      	cmp	r3, r6
 80067e0:	d16c      	bne.n	80068bc <I2C_WaitOnFlagUntilTimeout+0x100>
 80067e2:	6983      	ldr	r3, [r0, #24]
 80067e4:	f013 0310 	ands.w	r3, r3, #16
 80067e8:	d066      	beq.n	80068b8 <I2C_WaitOnFlagUntilTimeout+0xfc>
 80067ea:	1c6b      	adds	r3, r5, #1
 80067ec:	f8c0 801c 	str.w	r8, [r0, #28]
 80067f0:	d167      	bne.n	80068c2 <I2C_WaitOnFlagUntilTimeout+0x106>
 80067f2:	6983      	ldr	r3, [r0, #24]
 80067f4:	069a      	lsls	r2, r3, #26
 80067f6:	d5fc      	bpl.n	80067f2 <I2C_WaitOnFlagUntilTimeout+0x36>
 80067f8:	f8c0 901c 	str.w	r9, [r0, #28]
 80067fc:	2300      	movs	r3, #0
 80067fe:	f043 0304 	orr.w	r3, r3, #4
 8006802:	2101      	movs	r1, #1
 8006804:	6982      	ldr	r2, [r0, #24]
 8006806:	f412 7f80 	tst.w	r2, #256	@ 0x100
 800680a:	d031      	beq.n	8006870 <I2C_WaitOnFlagUntilTimeout+0xb4>
 800680c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006810:	61c1      	str	r1, [r0, #28]
 8006812:	0551      	lsls	r1, r2, #21
 8006814:	f043 0301 	orr.w	r3, r3, #1
 8006818:	d504      	bpl.n	8006824 <I2C_WaitOnFlagUntilTimeout+0x68>
 800681a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800681e:	61c1      	str	r1, [r0, #28]
 8006820:	f043 0308 	orr.w	r3, r3, #8
 8006824:	0591      	lsls	r1, r2, #22
 8006826:	d504      	bpl.n	8006832 <I2C_WaitOnFlagUntilTimeout+0x76>
 8006828:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800682c:	f043 0302 	orr.w	r3, r3, #2
 8006830:	61c2      	str	r2, [r0, #28]
 8006832:	6982      	ldr	r2, [r0, #24]
 8006834:	0791      	lsls	r1, r2, #30
 8006836:	bf44      	itt	mi
 8006838:	2200      	movmi	r2, #0
 800683a:	6282      	strmi	r2, [r0, #40]	@ 0x28
 800683c:	6982      	ldr	r2, [r0, #24]
 800683e:	07d2      	lsls	r2, r2, #31
 8006840:	d403      	bmi.n	800684a <I2C_WaitOnFlagUntilTimeout+0x8e>
 8006842:	6982      	ldr	r2, [r0, #24]
 8006844:	f042 0201 	orr.w	r2, r2, #1
 8006848:	6182      	str	r2, [r0, #24]
 800684a:	6842      	ldr	r2, [r0, #4]
 800684c:	4939      	ldr	r1, [pc, #228]	@ (8006934 <I2C_WaitOnFlagUntilTimeout+0x178>)
 800684e:	400a      	ands	r2, r1
 8006850:	6042      	str	r2, [r0, #4]
 8006852:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8006854:	2520      	movs	r5, #32
 8006856:	2100      	movs	r1, #0
 8006858:	4313      	orrs	r3, r2
 800685a:	6463      	str	r3, [r4, #68]	@ 0x44
 800685c:	f884 5041 	strb.w	r5, [r4, #65]	@ 0x41
 8006860:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
 8006864:	2300      	movs	r3, #0
 8006866:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800686a:	2001      	movs	r0, #1
 800686c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006870:	f412 6f80 	tst.w	r2, #1024	@ 0x400
 8006874:	d1d1      	bne.n	800681a <I2C_WaitOnFlagUntilTimeout+0x5e>
 8006876:	0592      	lsls	r2, r2, #22
 8006878:	d4d6      	bmi.n	8006828 <I2C_WaitOnFlagUntilTimeout+0x6c>
 800687a:	2900      	cmp	r1, #0
 800687c:	d1d9      	bne.n	8006832 <I2C_WaitOnFlagUntilTimeout+0x76>
 800687e:	1c6b      	adds	r3, r5, #1
 8006880:	d0a7      	beq.n	80067d2 <I2C_WaitOnFlagUntilTimeout+0x16>
 8006882:	f7fe fe43 	bl	800550c <HAL_GetTick>
 8006886:	9b08      	ldr	r3, [sp, #32]
 8006888:	1ac3      	subs	r3, r0, r3
 800688a:	42ab      	cmp	r3, r5
 800688c:	6820      	ldr	r0, [r4, #0]
 800688e:	d801      	bhi.n	8006894 <I2C_WaitOnFlagUntilTimeout+0xd8>
 8006890:	2d00      	cmp	r5, #0
 8006892:	d19c      	bne.n	80067ce <I2C_WaitOnFlagUntilTimeout+0x12>
 8006894:	6983      	ldr	r3, [r0, #24]
 8006896:	ea37 0303 	bics.w	r3, r7, r3
 800689a:	bf0c      	ite	eq
 800689c:	2301      	moveq	r3, #1
 800689e:	2300      	movne	r3, #0
 80068a0:	42b3      	cmp	r3, r6
 80068a2:	d194      	bne.n	80067ce <I2C_WaitOnFlagUntilTimeout+0x12>
 80068a4:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80068a6:	2120      	movs	r1, #32
 80068a8:	430b      	orrs	r3, r1
 80068aa:	2200      	movs	r2, #0
 80068ac:	6463      	str	r3, [r4, #68]	@ 0x44
 80068ae:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 80068b2:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 80068b6:	e7d5      	b.n	8006864 <I2C_WaitOnFlagUntilTimeout+0xa8>
 80068b8:	4619      	mov	r1, r3
 80068ba:	e7a3      	b.n	8006804 <I2C_WaitOnFlagUntilTimeout+0x48>
 80068bc:	2000      	movs	r0, #0
 80068be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80068c2:	f8dd a020 	ldr.w	sl, [sp, #32]
 80068c6:	6983      	ldr	r3, [r0, #24]
 80068c8:	069b      	lsls	r3, r3, #26
 80068ca:	d495      	bmi.n	80067f8 <I2C_WaitOnFlagUntilTimeout+0x3c>
 80068cc:	f7fe fe1e 	bl	800550c <HAL_GetTick>
 80068d0:	eba0 000a 	sub.w	r0, r0, sl
 80068d4:	4285      	cmp	r5, r0
 80068d6:	d300      	bcc.n	80068da <I2C_WaitOnFlagUntilTimeout+0x11e>
 80068d8:	bb05      	cbnz	r5, 800691c <I2C_WaitOnFlagUntilTimeout+0x160>
 80068da:	6820      	ldr	r0, [r4, #0]
 80068dc:	6841      	ldr	r1, [r0, #4]
 80068de:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
 80068e2:	6982      	ldr	r2, [r0, #24]
 80068e4:	0412      	lsls	r2, r2, #16
 80068e6:	b2db      	uxtb	r3, r3
 80068e8:	d50b      	bpl.n	8006902 <I2C_WaitOnFlagUntilTimeout+0x146>
 80068ea:	044a      	lsls	r2, r1, #17
 80068ec:	d409      	bmi.n	8006902 <I2C_WaitOnFlagUntilTimeout+0x146>
 80068ee:	2b20      	cmp	r3, #32
 80068f0:	d007      	beq.n	8006902 <I2C_WaitOnFlagUntilTimeout+0x146>
 80068f2:	6843      	ldr	r3, [r0, #4]
 80068f4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80068f8:	6043      	str	r3, [r0, #4]
 80068fa:	f7fe fe07 	bl	800550c <HAL_GetTick>
 80068fe:	4682      	mov	sl, r0
 8006900:	6820      	ldr	r0, [r4, #0]
 8006902:	6983      	ldr	r3, [r0, #24]
 8006904:	0699      	lsls	r1, r3, #26
 8006906:	d4de      	bmi.n	80068c6 <I2C_WaitOnFlagUntilTimeout+0x10a>
 8006908:	f7fe fe00 	bl	800550c <HAL_GetTick>
 800690c:	eba0 000a 	sub.w	r0, r0, sl
 8006910:	2819      	cmp	r0, #25
 8006912:	6820      	ldr	r0, [r4, #0]
 8006914:	d9f5      	bls.n	8006902 <I2C_WaitOnFlagUntilTimeout+0x146>
 8006916:	6983      	ldr	r3, [r0, #24]
 8006918:	2320      	movs	r3, #32
 800691a:	e770      	b.n	80067fe <I2C_WaitOnFlagUntilTimeout+0x42>
 800691c:	6820      	ldr	r0, [r4, #0]
 800691e:	6983      	ldr	r3, [r0, #24]
 8006920:	0699      	lsls	r1, r3, #26
 8006922:	f53f af69 	bmi.w	80067f8 <I2C_WaitOnFlagUntilTimeout+0x3c>
 8006926:	f7fe fdf1 	bl	800550c <HAL_GetTick>
 800692a:	eba0 000a 	sub.w	r0, r0, sl
 800692e:	4285      	cmp	r5, r0
 8006930:	d2f4      	bcs.n	800691c <I2C_WaitOnFlagUntilTimeout+0x160>
 8006932:	e7d2      	b.n	80068da <I2C_WaitOnFlagUntilTimeout+0x11e>
 8006934:	fe00e800 	.word	0xfe00e800

08006938 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8006938:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800693c:	6803      	ldr	r3, [r0, #0]
 800693e:	4604      	mov	r4, r0
 8006940:	6998      	ldr	r0, [r3, #24]
 8006942:	0680      	lsls	r0, r0, #26
 8006944:	d45f      	bmi.n	8006a06 <I2C_WaitOnSTOPFlagUntilTimeout+0xce>
 8006946:	460d      	mov	r5, r1
 8006948:	4616      	mov	r6, r2
 800694a:	2710      	movs	r7, #16
 800694c:	f04f 0820 	mov.w	r8, #32
 8006950:	699a      	ldr	r2, [r3, #24]
 8006952:	f012 0c10 	ands.w	ip, r2, #16
 8006956:	d059      	beq.n	8006a0c <I2C_WaitOnSTOPFlagUntilTimeout+0xd4>
 8006958:	1c6a      	adds	r2, r5, #1
 800695a:	61df      	str	r7, [r3, #28]
 800695c:	d161      	bne.n	8006a22 <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
 800695e:	699a      	ldr	r2, [r3, #24]
 8006960:	0691      	lsls	r1, r2, #26
 8006962:	d5fc      	bpl.n	800695e <I2C_WaitOnSTOPFlagUntilTimeout+0x26>
 8006964:	f8c3 801c 	str.w	r8, [r3, #28]
 8006968:	f04f 0c00 	mov.w	ip, #0
 800696c:	f04c 0c04 	orr.w	ip, ip, #4
 8006970:	2101      	movs	r1, #1
 8006972:	699a      	ldr	r2, [r3, #24]
 8006974:	05d0      	lsls	r0, r2, #23
 8006976:	d532      	bpl.n	80069de <I2C_WaitOnSTOPFlagUntilTimeout+0xa6>
 8006978:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800697c:	0555      	lsls	r5, r2, #21
 800697e:	61d9      	str	r1, [r3, #28]
 8006980:	f04c 0c01 	orr.w	ip, ip, #1
 8006984:	d504      	bpl.n	8006990 <I2C_WaitOnSTOPFlagUntilTimeout+0x58>
 8006986:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800698a:	61d9      	str	r1, [r3, #28]
 800698c:	f04c 0c08 	orr.w	ip, ip, #8
 8006990:	0591      	lsls	r1, r2, #22
 8006992:	d504      	bpl.n	800699e <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
 8006994:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006998:	f04c 0c02 	orr.w	ip, ip, #2
 800699c:	61da      	str	r2, [r3, #28]
 800699e:	699a      	ldr	r2, [r3, #24]
 80069a0:	0790      	lsls	r0, r2, #30
 80069a2:	bf44      	itt	mi
 80069a4:	2200      	movmi	r2, #0
 80069a6:	629a      	strmi	r2, [r3, #40]	@ 0x28
 80069a8:	699a      	ldr	r2, [r3, #24]
 80069aa:	07d1      	lsls	r1, r2, #31
 80069ac:	d403      	bmi.n	80069b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 80069ae:	699a      	ldr	r2, [r3, #24]
 80069b0:	f042 0201 	orr.w	r2, r2, #1
 80069b4:	619a      	str	r2, [r3, #24]
 80069b6:	685a      	ldr	r2, [r3, #4]
 80069b8:	4836      	ldr	r0, [pc, #216]	@ (8006a94 <I2C_WaitOnSTOPFlagUntilTimeout+0x15c>)
 80069ba:	4002      	ands	r2, r0
 80069bc:	605a      	str	r2, [r3, #4]
 80069be:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80069c0:	2120      	movs	r1, #32
 80069c2:	2200      	movs	r2, #0
 80069c4:	ea43 030c 	orr.w	r3, r3, ip
 80069c8:	6463      	str	r3, [r4, #68]	@ 0x44
 80069ca:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 80069ce:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 80069d2:	2300      	movs	r3, #0
 80069d4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80069d8:	2001      	movs	r0, #1
 80069da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80069de:	0550      	lsls	r0, r2, #21
 80069e0:	d4d1      	bmi.n	8006986 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
 80069e2:	0592      	lsls	r2, r2, #22
 80069e4:	d4d6      	bmi.n	8006994 <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
 80069e6:	2900      	cmp	r1, #0
 80069e8:	d1d9      	bne.n	800699e <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
 80069ea:	f7fe fd8f 	bl	800550c <HAL_GetTick>
 80069ee:	1b80      	subs	r0, r0, r6
 80069f0:	42a8      	cmp	r0, r5
 80069f2:	6823      	ldr	r3, [r4, #0]
 80069f4:	d800      	bhi.n	80069f8 <I2C_WaitOnSTOPFlagUntilTimeout+0xc0>
 80069f6:	b91d      	cbnz	r5, 8006a00 <I2C_WaitOnSTOPFlagUntilTimeout+0xc8>
 80069f8:	699a      	ldr	r2, [r3, #24]
 80069fa:	f012 0220 	ands.w	r2, r2, #32
 80069fe:	d007      	beq.n	8006a10 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
 8006a00:	699a      	ldr	r2, [r3, #24]
 8006a02:	0692      	lsls	r2, r2, #26
 8006a04:	d5a4      	bpl.n	8006950 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
 8006a06:	2000      	movs	r0, #0
 8006a08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006a0c:	4661      	mov	r1, ip
 8006a0e:	e7b0      	b.n	8006972 <I2C_WaitOnSTOPFlagUntilTimeout+0x3a>
 8006a10:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8006a12:	2120      	movs	r1, #32
 8006a14:	430b      	orrs	r3, r1
 8006a16:	6463      	str	r3, [r4, #68]	@ 0x44
 8006a18:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006a1c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006a20:	e7d7      	b.n	80069d2 <I2C_WaitOnSTOPFlagUntilTimeout+0x9a>
 8006a22:	46b1      	mov	r9, r6
 8006a24:	699a      	ldr	r2, [r3, #24]
 8006a26:	0692      	lsls	r2, r2, #26
 8006a28:	d49c      	bmi.n	8006964 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8006a2a:	f7fe fd6f 	bl	800550c <HAL_GetTick>
 8006a2e:	eba0 0009 	sub.w	r0, r0, r9
 8006a32:	4285      	cmp	r5, r0
 8006a34:	d300      	bcc.n	8006a38 <I2C_WaitOnSTOPFlagUntilTimeout+0x100>
 8006a36:	bb0d      	cbnz	r5, 8006a7c <I2C_WaitOnSTOPFlagUntilTimeout+0x144>
 8006a38:	6823      	ldr	r3, [r4, #0]
 8006a3a:	6858      	ldr	r0, [r3, #4]
 8006a3c:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 8006a40:	6999      	ldr	r1, [r3, #24]
 8006a42:	0409      	lsls	r1, r1, #16
 8006a44:	b2d2      	uxtb	r2, r2
 8006a46:	d50b      	bpl.n	8006a60 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006a48:	0441      	lsls	r1, r0, #17
 8006a4a:	d409      	bmi.n	8006a60 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006a4c:	2a20      	cmp	r2, #32
 8006a4e:	d007      	beq.n	8006a60 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006a50:	685a      	ldr	r2, [r3, #4]
 8006a52:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006a56:	605a      	str	r2, [r3, #4]
 8006a58:	f7fe fd58 	bl	800550c <HAL_GetTick>
 8006a5c:	6823      	ldr	r3, [r4, #0]
 8006a5e:	4681      	mov	r9, r0
 8006a60:	699a      	ldr	r2, [r3, #24]
 8006a62:	0690      	lsls	r0, r2, #26
 8006a64:	d4de      	bmi.n	8006a24 <I2C_WaitOnSTOPFlagUntilTimeout+0xec>
 8006a66:	f7fe fd51 	bl	800550c <HAL_GetTick>
 8006a6a:	eba0 0009 	sub.w	r0, r0, r9
 8006a6e:	2819      	cmp	r0, #25
 8006a70:	6823      	ldr	r3, [r4, #0]
 8006a72:	d9f5      	bls.n	8006a60 <I2C_WaitOnSTOPFlagUntilTimeout+0x128>
 8006a74:	699a      	ldr	r2, [r3, #24]
 8006a76:	f04f 0c20 	mov.w	ip, #32
 8006a7a:	e777      	b.n	800696c <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
 8006a7c:	6823      	ldr	r3, [r4, #0]
 8006a7e:	699a      	ldr	r2, [r3, #24]
 8006a80:	0690      	lsls	r0, r2, #26
 8006a82:	f53f af6f 	bmi.w	8006964 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8006a86:	f7fe fd41 	bl	800550c <HAL_GetTick>
 8006a8a:	eba0 0009 	sub.w	r0, r0, r9
 8006a8e:	4285      	cmp	r5, r0
 8006a90:	d2f4      	bcs.n	8006a7c <I2C_WaitOnSTOPFlagUntilTimeout+0x144>
 8006a92:	e7d1      	b.n	8006a38 <I2C_WaitOnSTOPFlagUntilTimeout+0x100>
 8006a94:	fe00e800 	.word	0xfe00e800

08006a98 <HAL_I2C_Init>:
 8006a98:	2800      	cmp	r0, #0
 8006a9a:	d054      	beq.n	8006b46 <HAL_I2C_Init+0xae>
 8006a9c:	b510      	push	{r4, lr}
 8006a9e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006aa2:	4604      	mov	r4, r0
 8006aa4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006aa8:	2b00      	cmp	r3, #0
 8006aaa:	d047      	beq.n	8006b3c <HAL_I2C_Init+0xa4>
 8006aac:	6823      	ldr	r3, [r4, #0]
 8006aae:	2224      	movs	r2, #36	@ 0x24
 8006ab0:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
 8006ab4:	6819      	ldr	r1, [r3, #0]
 8006ab6:	6862      	ldr	r2, [r4, #4]
 8006ab8:	f021 0101 	bic.w	r1, r1, #1
 8006abc:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8006ac0:	6019      	str	r1, [r3, #0]
 8006ac2:	611a      	str	r2, [r3, #16]
 8006ac4:	689a      	ldr	r2, [r3, #8]
 8006ac6:	68e1      	ldr	r1, [r4, #12]
 8006ac8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006acc:	2901      	cmp	r1, #1
 8006ace:	609a      	str	r2, [r3, #8]
 8006ad0:	68a2      	ldr	r2, [r4, #8]
 8006ad2:	d009      	beq.n	8006ae8 <HAL_I2C_Init+0x50>
 8006ad4:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8006ad8:	2902      	cmp	r1, #2
 8006ada:	609a      	str	r2, [r3, #8]
 8006adc:	d107      	bne.n	8006aee <HAL_I2C_Init+0x56>
 8006ade:	685a      	ldr	r2, [r3, #4]
 8006ae0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006ae4:	605a      	str	r2, [r3, #4]
 8006ae6:	e006      	b.n	8006af6 <HAL_I2C_Init+0x5e>
 8006ae8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006aec:	609a      	str	r2, [r3, #8]
 8006aee:	685a      	ldr	r2, [r3, #4]
 8006af0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006af4:	605a      	str	r2, [r3, #4]
 8006af6:	6859      	ldr	r1, [r3, #4]
 8006af8:	6922      	ldr	r2, [r4, #16]
 8006afa:	f041 7100 	orr.w	r1, r1, #33554432	@ 0x2000000
 8006afe:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8006b02:	6059      	str	r1, [r3, #4]
 8006b04:	6961      	ldr	r1, [r4, #20]
 8006b06:	68d8      	ldr	r0, [r3, #12]
 8006b08:	430a      	orrs	r2, r1
 8006b0a:	69a1      	ldr	r1, [r4, #24]
 8006b0c:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
 8006b10:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006b14:	69e1      	ldr	r1, [r4, #28]
 8006b16:	60d8      	str	r0, [r3, #12]
 8006b18:	6a20      	ldr	r0, [r4, #32]
 8006b1a:	60da      	str	r2, [r3, #12]
 8006b1c:	4301      	orrs	r1, r0
 8006b1e:	6019      	str	r1, [r3, #0]
 8006b20:	6819      	ldr	r1, [r3, #0]
 8006b22:	f041 0101 	orr.w	r1, r1, #1
 8006b26:	6019      	str	r1, [r3, #0]
 8006b28:	2200      	movs	r2, #0
 8006b2a:	2320      	movs	r3, #32
 8006b2c:	6462      	str	r2, [r4, #68]	@ 0x44
 8006b2e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006b32:	6322      	str	r2, [r4, #48]	@ 0x30
 8006b34:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
 8006b38:	4610      	mov	r0, r2
 8006b3a:	bd10      	pop	{r4, pc}
 8006b3c:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
 8006b40:	f7fb f8c8 	bl	8001cd4 <HAL_I2C_MspInit>
 8006b44:	e7b2      	b.n	8006aac <HAL_I2C_Init+0x14>
 8006b46:	2001      	movs	r0, #1
 8006b48:	4770      	bx	lr
 8006b4a:	bf00      	nop

08006b4c <HAL_I2C_Mem_Write>:
 8006b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006b50:	4604      	mov	r4, r0
 8006b52:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
 8006b56:	b082      	sub	sp, #8
 8006b58:	2820      	cmp	r0, #32
 8006b5a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8006b5e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8006b60:	f040 80a2 	bne.w	8006ca8 <HAL_I2C_Mem_Write+0x15c>
 8006b64:	4698      	mov	r8, r3
 8006b66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	f000 8096 	beq.w	8006c9a <HAL_I2C_Mem_Write+0x14e>
 8006b6e:	f1ba 0f00 	cmp.w	sl, #0
 8006b72:	f000 8092 	beq.w	8006c9a <HAL_I2C_Mem_Write+0x14e>
 8006b76:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006b7a:	2b01      	cmp	r3, #1
 8006b7c:	f000 8094 	beq.w	8006ca8 <HAL_I2C_Mem_Write+0x15c>
 8006b80:	2301      	movs	r3, #1
 8006b82:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006b86:	460d      	mov	r5, r1
 8006b88:	4691      	mov	r9, r2
 8006b8a:	f7fe fcbf 	bl	800550c <HAL_GetTick>
 8006b8e:	4606      	mov	r6, r0
 8006b90:	4601      	mov	r1, r0
 8006b92:	4620      	mov	r0, r4
 8006b94:	f7ff fcbc 	bl	8006510 <I2C_WaitOnFlagUntilTimeout.constprop.0>
 8006b98:	2800      	cmp	r0, #0
 8006b9a:	f040 8081 	bne.w	8006ca0 <HAL_I2C_Mem_Write+0x154>
 8006b9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006ba0:	6263      	str	r3, [r4, #36]	@ 0x24
 8006ba2:	2321      	movs	r3, #33	@ 0x21
 8006ba4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006ba8:	6822      	ldr	r2, [r4, #0]
 8006baa:	4963      	ldr	r1, [pc, #396]	@ (8006d38 <HAL_I2C_Mem_Write+0x1ec>)
 8006bac:	6360      	str	r0, [r4, #52]	@ 0x34
 8006bae:	2340      	movs	r3, #64	@ 0x40
 8006bb0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006bb4:	6460      	str	r0, [r4, #68]	@ 0x44
 8006bb6:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 8006bba:	6853      	ldr	r3, [r2, #4]
 8006bbc:	400b      	ands	r3, r1
 8006bbe:	fa5f f188 	uxtb.w	r1, r8
 8006bc2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006bc6:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8006bca:	432b      	orrs	r3, r5
 8006bcc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006bd0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8006bd4:	6053      	str	r3, [r2, #4]
 8006bd6:	4639      	mov	r1, r7
 8006bd8:	4632      	mov	r2, r6
 8006bda:	4620      	mov	r0, r4
 8006bdc:	f7ff fd38 	bl	8006650 <I2C_WaitOnTXISFlagUntilTimeout>
 8006be0:	2800      	cmp	r0, #0
 8006be2:	d165      	bne.n	8006cb0 <HAL_I2C_Mem_Write+0x164>
 8006be4:	f1b8 0f01 	cmp.w	r8, #1
 8006be8:	6823      	ldr	r3, [r4, #0]
 8006bea:	d165      	bne.n	8006cb8 <HAL_I2C_Mem_Write+0x16c>
 8006bec:	fa5f f289 	uxtb.w	r2, r9
 8006bf0:	629a      	str	r2, [r3, #40]	@ 0x28
 8006bf2:	9600      	str	r6, [sp, #0]
 8006bf4:	463b      	mov	r3, r7
 8006bf6:	2200      	movs	r2, #0
 8006bf8:	2180      	movs	r1, #128	@ 0x80
 8006bfa:	4620      	mov	r0, r4
 8006bfc:	f7ff fdde 	bl	80067bc <I2C_WaitOnFlagUntilTimeout>
 8006c00:	2800      	cmp	r0, #0
 8006c02:	d155      	bne.n	8006cb0 <HAL_I2C_Mem_Write+0x164>
 8006c04:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006c06:	6822      	ldr	r2, [r4, #0]
 8006c08:	b29b      	uxth	r3, r3
 8006c0a:	2bff      	cmp	r3, #255	@ 0xff
 8006c0c:	d970      	bls.n	8006cf0 <HAL_I2C_Mem_Write+0x1a4>
 8006c0e:	6853      	ldr	r3, [r2, #4]
 8006c10:	494a      	ldr	r1, [pc, #296]	@ (8006d3c <HAL_I2C_Mem_Write+0x1f0>)
 8006c12:	400b      	ands	r3, r1
 8006c14:	432b      	orrs	r3, r5
 8006c16:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006c1a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006c1e:	21ff      	movs	r1, #255	@ 0xff
 8006c20:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006c22:	6053      	str	r3, [r2, #4]
 8006c24:	e003      	b.n	8006c2e <HAL_I2C_Mem_Write+0xe2>
 8006c26:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006c28:	b29b      	uxth	r3, r3
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	d06e      	beq.n	8006d0c <HAL_I2C_Mem_Write+0x1c0>
 8006c2e:	4632      	mov	r2, r6
 8006c30:	4639      	mov	r1, r7
 8006c32:	4620      	mov	r0, r4
 8006c34:	f7ff fd0c 	bl	8006650 <I2C_WaitOnTXISFlagUntilTimeout>
 8006c38:	2800      	cmp	r0, #0
 8006c3a:	d131      	bne.n	8006ca0 <HAL_I2C_Mem_Write+0x154>
 8006c3c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006c3e:	6823      	ldr	r3, [r4, #0]
 8006c40:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006c44:	629a      	str	r2, [r3, #40]	@ 0x28
 8006c46:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006c48:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8006c4a:	6261      	str	r1, [r4, #36]	@ 0x24
 8006c4c:	3b01      	subs	r3, #1
 8006c4e:	b29b      	uxth	r3, r3
 8006c50:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8006c52:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006c54:	3a01      	subs	r2, #1
 8006c56:	b292      	uxth	r2, r2
 8006c58:	b29b      	uxth	r3, r3
 8006c5a:	8522      	strh	r2, [r4, #40]	@ 0x28
 8006c5c:	2b00      	cmp	r3, #0
 8006c5e:	d0e2      	beq.n	8006c26 <HAL_I2C_Mem_Write+0xda>
 8006c60:	2a00      	cmp	r2, #0
 8006c62:	d1e0      	bne.n	8006c26 <HAL_I2C_Mem_Write+0xda>
 8006c64:	2180      	movs	r1, #128	@ 0x80
 8006c66:	9600      	str	r6, [sp, #0]
 8006c68:	463b      	mov	r3, r7
 8006c6a:	4620      	mov	r0, r4
 8006c6c:	f7ff fda6 	bl	80067bc <I2C_WaitOnFlagUntilTimeout>
 8006c70:	21ff      	movs	r1, #255	@ 0xff
 8006c72:	b9a8      	cbnz	r0, 8006ca0 <HAL_I2C_Mem_Write+0x154>
 8006c74:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006c76:	f8df c0c4 	ldr.w	ip, [pc, #196]	@ 8006d3c <HAL_I2C_Mem_Write+0x1f0>
 8006c7a:	6822      	ldr	r2, [r4, #0]
 8006c7c:	b29b      	uxth	r3, r3
 8006c7e:	428b      	cmp	r3, r1
 8006c80:	4660      	mov	r0, ip
 8006c82:	d928      	bls.n	8006cd6 <HAL_I2C_Mem_Write+0x18a>
 8006c84:	6853      	ldr	r3, [r2, #4]
 8006c86:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006c88:	ea03 030c 	and.w	r3, r3, ip
 8006c8c:	432b      	orrs	r3, r5
 8006c8e:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006c92:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006c96:	6053      	str	r3, [r2, #4]
 8006c98:	e7c5      	b.n	8006c26 <HAL_I2C_Mem_Write+0xda>
 8006c9a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8006c9e:	6463      	str	r3, [r4, #68]	@ 0x44
 8006ca0:	2001      	movs	r0, #1
 8006ca2:	b002      	add	sp, #8
 8006ca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ca8:	2002      	movs	r0, #2
 8006caa:	b002      	add	sp, #8
 8006cac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006cb0:	2300      	movs	r3, #0
 8006cb2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006cb6:	e7f3      	b.n	8006ca0 <HAL_I2C_Mem_Write+0x154>
 8006cb8:	ea4f 2219 	mov.w	r2, r9, lsr #8
 8006cbc:	629a      	str	r2, [r3, #40]	@ 0x28
 8006cbe:	4639      	mov	r1, r7
 8006cc0:	4632      	mov	r2, r6
 8006cc2:	4620      	mov	r0, r4
 8006cc4:	f7ff fcc4 	bl	8006650 <I2C_WaitOnTXISFlagUntilTimeout>
 8006cc8:	2800      	cmp	r0, #0
 8006cca:	d1f1      	bne.n	8006cb0 <HAL_I2C_Mem_Write+0x164>
 8006ccc:	6823      	ldr	r3, [r4, #0]
 8006cce:	fa5f f289 	uxtb.w	r2, r9
 8006cd2:	629a      	str	r2, [r3, #40]	@ 0x28
 8006cd4:	e78d      	b.n	8006bf2 <HAL_I2C_Mem_Write+0xa6>
 8006cd6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006cd8:	6851      	ldr	r1, [r2, #4]
 8006cda:	b29b      	uxth	r3, r3
 8006cdc:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006cde:	b2db      	uxtb	r3, r3
 8006ce0:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006ce4:	4001      	ands	r1, r0
 8006ce6:	430b      	orrs	r3, r1
 8006ce8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006cec:	6053      	str	r3, [r2, #4]
 8006cee:	e79a      	b.n	8006c26 <HAL_I2C_Mem_Write+0xda>
 8006cf0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006cf2:	4812      	ldr	r0, [pc, #72]	@ (8006d3c <HAL_I2C_Mem_Write+0x1f0>)
 8006cf4:	6851      	ldr	r1, [r2, #4]
 8006cf6:	b29b      	uxth	r3, r3
 8006cf8:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006cfa:	b2db      	uxtb	r3, r3
 8006cfc:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006d00:	4001      	ands	r1, r0
 8006d02:	430b      	orrs	r3, r1
 8006d04:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006d08:	6053      	str	r3, [r2, #4]
 8006d0a:	e790      	b.n	8006c2e <HAL_I2C_Mem_Write+0xe2>
 8006d0c:	4632      	mov	r2, r6
 8006d0e:	4639      	mov	r1, r7
 8006d10:	4620      	mov	r0, r4
 8006d12:	f7ff fe11 	bl	8006938 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006d16:	2800      	cmp	r0, #0
 8006d18:	d1c2      	bne.n	8006ca0 <HAL_I2C_Mem_Write+0x154>
 8006d1a:	6823      	ldr	r3, [r4, #0]
 8006d1c:	4d08      	ldr	r5, [pc, #32]	@ (8006d40 <HAL_I2C_Mem_Write+0x1f4>)
 8006d1e:	2120      	movs	r1, #32
 8006d20:	61d9      	str	r1, [r3, #28]
 8006d22:	685a      	ldr	r2, [r3, #4]
 8006d24:	402a      	ands	r2, r5
 8006d26:	605a      	str	r2, [r3, #4]
 8006d28:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006d2c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
 8006d30:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 8006d34:	e7b5      	b.n	8006ca2 <HAL_I2C_Mem_Write+0x156>
 8006d36:	bf00      	nop
 8006d38:	fc009800 	.word	0xfc009800
 8006d3c:	fc009c00 	.word	0xfc009c00
 8006d40:	fe00e800 	.word	0xfe00e800

08006d44 <HAL_I2C_Mem_Read>:
 8006d44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006d48:	4604      	mov	r4, r0
 8006d4a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
 8006d4e:	b082      	sub	sp, #8
 8006d50:	2820      	cmp	r0, #32
 8006d52:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8006d56:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8006d58:	f040 80a3 	bne.w	8006ea2 <HAL_I2C_Mem_Read+0x15e>
 8006d5c:	4698      	mov	r8, r3
 8006d5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006d60:	2b00      	cmp	r3, #0
 8006d62:	f000 8097 	beq.w	8006e94 <HAL_I2C_Mem_Read+0x150>
 8006d66:	f1ba 0f00 	cmp.w	sl, #0
 8006d6a:	f000 8093 	beq.w	8006e94 <HAL_I2C_Mem_Read+0x150>
 8006d6e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8006d72:	2b01      	cmp	r3, #1
 8006d74:	f000 8095 	beq.w	8006ea2 <HAL_I2C_Mem_Read+0x15e>
 8006d78:	2301      	movs	r3, #1
 8006d7a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006d7e:	460d      	mov	r5, r1
 8006d80:	4691      	mov	r9, r2
 8006d82:	f7fe fbc3 	bl	800550c <HAL_GetTick>
 8006d86:	4606      	mov	r6, r0
 8006d88:	4601      	mov	r1, r0
 8006d8a:	4620      	mov	r0, r4
 8006d8c:	f7ff fbc0 	bl	8006510 <I2C_WaitOnFlagUntilTimeout.constprop.0>
 8006d90:	2800      	cmp	r0, #0
 8006d92:	f040 8082 	bne.w	8006e9a <HAL_I2C_Mem_Read+0x156>
 8006d96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006d98:	6263      	str	r3, [r4, #36]	@ 0x24
 8006d9a:	2322      	movs	r3, #34	@ 0x22
 8006d9c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 8006da0:	6822      	ldr	r2, [r4, #0]
 8006da2:	4964      	ldr	r1, [pc, #400]	@ (8006f34 <HAL_I2C_Mem_Read+0x1f0>)
 8006da4:	6360      	str	r0, [r4, #52]	@ 0x34
 8006da6:	2340      	movs	r3, #64	@ 0x40
 8006da8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006dac:	6460      	str	r0, [r4, #68]	@ 0x44
 8006dae:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 8006db2:	6853      	ldr	r3, [r2, #4]
 8006db4:	400b      	ands	r3, r1
 8006db6:	fa5f f188 	uxtb.w	r1, r8
 8006dba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006dbe:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8006dc2:	432b      	orrs	r3, r5
 8006dc4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8006dc8:	6053      	str	r3, [r2, #4]
 8006dca:	4639      	mov	r1, r7
 8006dcc:	4632      	mov	r2, r6
 8006dce:	4620      	mov	r0, r4
 8006dd0:	f7ff fc3e 	bl	8006650 <I2C_WaitOnTXISFlagUntilTimeout>
 8006dd4:	2800      	cmp	r0, #0
 8006dd6:	d168      	bne.n	8006eaa <HAL_I2C_Mem_Read+0x166>
 8006dd8:	f1b8 0f01 	cmp.w	r8, #1
 8006ddc:	6823      	ldr	r3, [r4, #0]
 8006dde:	d168      	bne.n	8006eb2 <HAL_I2C_Mem_Read+0x16e>
 8006de0:	fa5f f289 	uxtb.w	r2, r9
 8006de4:	629a      	str	r2, [r3, #40]	@ 0x28
 8006de6:	9600      	str	r6, [sp, #0]
 8006de8:	463b      	mov	r3, r7
 8006dea:	2200      	movs	r2, #0
 8006dec:	2140      	movs	r1, #64	@ 0x40
 8006dee:	4620      	mov	r0, r4
 8006df0:	f7ff fce4 	bl	80067bc <I2C_WaitOnFlagUntilTimeout>
 8006df4:	2800      	cmp	r0, #0
 8006df6:	d158      	bne.n	8006eaa <HAL_I2C_Mem_Read+0x166>
 8006df8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006dfa:	6822      	ldr	r2, [r4, #0]
 8006dfc:	b29b      	uxth	r3, r3
 8006dfe:	2bff      	cmp	r3, #255	@ 0xff
 8006e00:	d973      	bls.n	8006eea <HAL_I2C_Mem_Read+0x1a6>
 8006e02:	6853      	ldr	r3, [r2, #4]
 8006e04:	494b      	ldr	r1, [pc, #300]	@ (8006f34 <HAL_I2C_Mem_Read+0x1f0>)
 8006e06:	400b      	ands	r3, r1
 8006e08:	432b      	orrs	r3, r5
 8006e0a:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006e0e:	f443 3392 	orr.w	r3, r3, #74752	@ 0x12400
 8006e12:	21ff      	movs	r1, #255	@ 0xff
 8006e14:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006e16:	6053      	str	r3, [r2, #4]
 8006e18:	e003      	b.n	8006e22 <HAL_I2C_Mem_Read+0xde>
 8006e1a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e1c:	b29b      	uxth	r3, r3
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	d073      	beq.n	8006f0a <HAL_I2C_Mem_Read+0x1c6>
 8006e22:	9600      	str	r6, [sp, #0]
 8006e24:	463b      	mov	r3, r7
 8006e26:	2200      	movs	r2, #0
 8006e28:	2104      	movs	r1, #4
 8006e2a:	4620      	mov	r0, r4
 8006e2c:	f7ff fcc6 	bl	80067bc <I2C_WaitOnFlagUntilTimeout>
 8006e30:	2800      	cmp	r0, #0
 8006e32:	d132      	bne.n	8006e9a <HAL_I2C_Mem_Read+0x156>
 8006e34:	6822      	ldr	r2, [r4, #0]
 8006e36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006e38:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006e3a:	701a      	strb	r2, [r3, #0]
 8006e3c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e3e:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
 8006e40:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006e42:	3b01      	subs	r3, #1
 8006e44:	b29b      	uxth	r3, r3
 8006e46:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8006e48:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e4a:	3a01      	subs	r2, #1
 8006e4c:	b292      	uxth	r2, r2
 8006e4e:	3101      	adds	r1, #1
 8006e50:	b29b      	uxth	r3, r3
 8006e52:	6261      	str	r1, [r4, #36]	@ 0x24
 8006e54:	8522      	strh	r2, [r4, #40]	@ 0x28
 8006e56:	2b00      	cmp	r3, #0
 8006e58:	d0df      	beq.n	8006e1a <HAL_I2C_Mem_Read+0xd6>
 8006e5a:	2a00      	cmp	r2, #0
 8006e5c:	d1dd      	bne.n	8006e1a <HAL_I2C_Mem_Read+0xd6>
 8006e5e:	2180      	movs	r1, #128	@ 0x80
 8006e60:	9600      	str	r6, [sp, #0]
 8006e62:	463b      	mov	r3, r7
 8006e64:	4620      	mov	r0, r4
 8006e66:	f7ff fca9 	bl	80067bc <I2C_WaitOnFlagUntilTimeout>
 8006e6a:	21ff      	movs	r1, #255	@ 0xff
 8006e6c:	b9a8      	cbnz	r0, 8006e9a <HAL_I2C_Mem_Read+0x156>
 8006e6e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006e70:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 8006f3c <HAL_I2C_Mem_Read+0x1f8>
 8006e74:	6822      	ldr	r2, [r4, #0]
 8006e76:	b29b      	uxth	r3, r3
 8006e78:	428b      	cmp	r3, r1
 8006e7a:	4660      	mov	r0, ip
 8006e7c:	d928      	bls.n	8006ed0 <HAL_I2C_Mem_Read+0x18c>
 8006e7e:	6853      	ldr	r3, [r2, #4]
 8006e80:	8521      	strh	r1, [r4, #40]	@ 0x28
 8006e82:	ea03 030c 	and.w	r3, r3, ip
 8006e86:	432b      	orrs	r3, r5
 8006e88:	f043 73ff 	orr.w	r3, r3, #33423360	@ 0x1fe0000
 8006e8c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e90:	6053      	str	r3, [r2, #4]
 8006e92:	e7c2      	b.n	8006e1a <HAL_I2C_Mem_Read+0xd6>
 8006e94:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8006e98:	6463      	str	r3, [r4, #68]	@ 0x44
 8006e9a:	2001      	movs	r0, #1
 8006e9c:	b002      	add	sp, #8
 8006e9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ea2:	2002      	movs	r0, #2
 8006ea4:	b002      	add	sp, #8
 8006ea6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006eaa:	2300      	movs	r3, #0
 8006eac:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006eb0:	e7f3      	b.n	8006e9a <HAL_I2C_Mem_Read+0x156>
 8006eb2:	ea4f 2219 	mov.w	r2, r9, lsr #8
 8006eb6:	629a      	str	r2, [r3, #40]	@ 0x28
 8006eb8:	4639      	mov	r1, r7
 8006eba:	4632      	mov	r2, r6
 8006ebc:	4620      	mov	r0, r4
 8006ebe:	f7ff fbc7 	bl	8006650 <I2C_WaitOnTXISFlagUntilTimeout>
 8006ec2:	2800      	cmp	r0, #0
 8006ec4:	d1f1      	bne.n	8006eaa <HAL_I2C_Mem_Read+0x166>
 8006ec6:	6823      	ldr	r3, [r4, #0]
 8006ec8:	fa5f f289 	uxtb.w	r2, r9
 8006ecc:	629a      	str	r2, [r3, #40]	@ 0x28
 8006ece:	e78a      	b.n	8006de6 <HAL_I2C_Mem_Read+0xa2>
 8006ed0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006ed2:	6851      	ldr	r1, [r2, #4]
 8006ed4:	b29b      	uxth	r3, r3
 8006ed6:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006ed8:	b2db      	uxtb	r3, r3
 8006eda:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006ede:	4001      	ands	r1, r0
 8006ee0:	430b      	orrs	r3, r1
 8006ee2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006ee6:	6053      	str	r3, [r2, #4]
 8006ee8:	e797      	b.n	8006e1a <HAL_I2C_Mem_Read+0xd6>
 8006eea:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8006eec:	4811      	ldr	r0, [pc, #68]	@ (8006f34 <HAL_I2C_Mem_Read+0x1f0>)
 8006eee:	6851      	ldr	r1, [r2, #4]
 8006ef0:	b29b      	uxth	r3, r3
 8006ef2:	8523      	strh	r3, [r4, #40]	@ 0x28
 8006ef4:	b2db      	uxtb	r3, r3
 8006ef6:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006efa:	4001      	ands	r1, r0
 8006efc:	430b      	orrs	r3, r1
 8006efe:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006f02:	f443 5310 	orr.w	r3, r3, #9216	@ 0x2400
 8006f06:	6053      	str	r3, [r2, #4]
 8006f08:	e78b      	b.n	8006e22 <HAL_I2C_Mem_Read+0xde>
 8006f0a:	4632      	mov	r2, r6
 8006f0c:	4639      	mov	r1, r7
 8006f0e:	4620      	mov	r0, r4
 8006f10:	f7ff fd12 	bl	8006938 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006f14:	2800      	cmp	r0, #0
 8006f16:	d1c0      	bne.n	8006e9a <HAL_I2C_Mem_Read+0x156>
 8006f18:	6823      	ldr	r3, [r4, #0]
 8006f1a:	4d07      	ldr	r5, [pc, #28]	@ (8006f38 <HAL_I2C_Mem_Read+0x1f4>)
 8006f1c:	2120      	movs	r1, #32
 8006f1e:	61d9      	str	r1, [r3, #28]
 8006f20:	685a      	ldr	r2, [r3, #4]
 8006f22:	402a      	ands	r2, r5
 8006f24:	605a      	str	r2, [r3, #4]
 8006f26:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 8006f2a:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
 8006f2e:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 8006f32:	e7b3      	b.n	8006e9c <HAL_I2C_Mem_Read+0x158>
 8006f34:	fc009800 	.word	0xfc009800
 8006f38:	fe00e800 	.word	0xfe00e800
 8006f3c:	fc009c00 	.word	0xfc009c00

08006f40 <HAL_I2CEx_ConfigAnalogFilter>:
 8006f40:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
 8006f44:	2a20      	cmp	r2, #32
 8006f46:	d123      	bne.n	8006f90 <HAL_I2CEx_ConfigAnalogFilter+0x50>
 8006f48:	fa5f fc82 	uxtb.w	ip, r2
 8006f4c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8006f50:	2a01      	cmp	r2, #1
 8006f52:	4603      	mov	r3, r0
 8006f54:	d01c      	beq.n	8006f90 <HAL_I2CEx_ConfigAnalogFilter+0x50>
 8006f56:	6802      	ldr	r2, [r0, #0]
 8006f58:	2024      	movs	r0, #36	@ 0x24
 8006f5a:	b500      	push	{lr}
 8006f5c:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
 8006f60:	6810      	ldr	r0, [r2, #0]
 8006f62:	f020 0001 	bic.w	r0, r0, #1
 8006f66:	6010      	str	r0, [r2, #0]
 8006f68:	6810      	ldr	r0, [r2, #0]
 8006f6a:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8006f6e:	6010      	str	r0, [r2, #0]
 8006f70:	6810      	ldr	r0, [r2, #0]
 8006f72:	4301      	orrs	r1, r0
 8006f74:	6011      	str	r1, [r2, #0]
 8006f76:	6811      	ldr	r1, [r2, #0]
 8006f78:	f04f 0e00 	mov.w	lr, #0
 8006f7c:	f041 0101 	orr.w	r1, r1, #1
 8006f80:	6011      	str	r1, [r2, #0]
 8006f82:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
 8006f86:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
 8006f8a:	4670      	mov	r0, lr
 8006f8c:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f90:	2002      	movs	r0, #2
 8006f92:	4770      	bx	lr

08006f94 <HAL_I2CEx_ConfigDigitalFilter>:
 8006f94:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
 8006f98:	2a20      	cmp	r2, #32
 8006f9a:	d122      	bne.n	8006fe2 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
 8006f9c:	b500      	push	{lr}
 8006f9e:	fa5f fe82 	uxtb.w	lr, r2
 8006fa2:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8006fa6:	2a01      	cmp	r2, #1
 8006fa8:	4603      	mov	r3, r0
 8006faa:	d01c      	beq.n	8006fe6 <HAL_I2CEx_ConfigDigitalFilter+0x52>
 8006fac:	6802      	ldr	r2, [r0, #0]
 8006fae:	2024      	movs	r0, #36	@ 0x24
 8006fb0:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
 8006fb4:	6810      	ldr	r0, [r2, #0]
 8006fb6:	f020 0001 	bic.w	r0, r0, #1
 8006fba:	6010      	str	r0, [r2, #0]
 8006fbc:	6810      	ldr	r0, [r2, #0]
 8006fbe:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 8006fc2:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
 8006fc6:	6011      	str	r1, [r2, #0]
 8006fc8:	6811      	ldr	r1, [r2, #0]
 8006fca:	f04f 0c00 	mov.w	ip, #0
 8006fce:	f041 0101 	orr.w	r1, r1, #1
 8006fd2:	6011      	str	r1, [r2, #0]
 8006fd4:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
 8006fd8:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
 8006fdc:	4660      	mov	r0, ip
 8006fde:	f85d fb04 	ldr.w	pc, [sp], #4
 8006fe2:	2002      	movs	r0, #2
 8006fe4:	4770      	bx	lr
 8006fe6:	2002      	movs	r0, #2
 8006fe8:	f85d fb04 	ldr.w	pc, [sp], #4

08006fec <HAL_I2CEx_EnableFastModePlus>:
 8006fec:	4a02      	ldr	r2, [pc, #8]	@ (8006ff8 <HAL_I2CEx_EnableFastModePlus+0xc>)
 8006fee:	6853      	ldr	r3, [r2, #4]
 8006ff0:	4303      	orrs	r3, r0
 8006ff2:	6053      	str	r3, [r2, #4]
 8006ff4:	4770      	bx	lr
 8006ff6:	bf00      	nop
 8006ff8:	40010000 	.word	0x40010000

08006ffc <HAL_IPCC_TxCallback>:
 8006ffc:	4770      	bx	lr
 8006ffe:	bf00      	nop

08007000 <HAL_IPCC_RxCallback>:
 8007000:	4770      	bx	lr
 8007002:	bf00      	nop

08007004 <HAL_IPCC_Init>:
 8007004:	b330      	cbz	r0, 8007054 <HAL_IPCC_Init+0x50>
 8007006:	b510      	push	{r4, lr}
 8007008:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800700c:	4604      	mov	r4, r0
 800700e:	b1f3      	cbz	r3, 800704e <HAL_IPCC_Init+0x4a>
 8007010:	4b11      	ldr	r3, [pc, #68]	@ (8007058 <HAL_IPCC_Init+0x54>)
 8007012:	2000      	movs	r0, #0
 8007014:	f04f 113f 	mov.w	r1, #4128831	@ 0x3f003f
 8007018:	223f      	movs	r2, #63	@ 0x3f
 800701a:	6018      	str	r0, [r3, #0]
 800701c:	6059      	str	r1, [r3, #4]
 800701e:	609a      	str	r2, [r3, #8]
 8007020:	6819      	ldr	r1, [r3, #0]
 8007022:	4a0e      	ldr	r2, [pc, #56]	@ (800705c <HAL_IPCC_Init+0x58>)
 8007024:	f041 1101 	orr.w	r1, r1, #65537	@ 0x10001
 8007028:	6019      	str	r1, [r3, #0]
 800702a:	4b0d      	ldr	r3, [pc, #52]	@ (8007060 <HAL_IPCC_Init+0x5c>)
 800702c:	6360      	str	r0, [r4, #52]	@ 0x34
 800702e:	2101      	movs	r1, #1
 8007030:	f884 1038 	strb.w	r1, [r4, #56]	@ 0x38
 8007034:	e9c4 2201 	strd	r2, r2, [r4, #4]
 8007038:	e9c4 3307 	strd	r3, r3, [r4, #28]
 800703c:	e9c4 2203 	strd	r2, r2, [r4, #12]
 8007040:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
 8007044:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8007048:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800704c:	bd10      	pop	{r4, pc}
 800704e:	f7fa fee5 	bl	8001e1c <HAL_IPCC_MspInit>
 8007052:	e7dd      	b.n	8007010 <HAL_IPCC_Init+0xc>
 8007054:	2001      	movs	r0, #1
 8007056:	4770      	bx	lr
 8007058:	58000c00 	.word	0x58000c00
 800705c:	08007001 	.word	0x08007001
 8007060:	08006ffd 	.word	0x08006ffd

08007064 <HAL_IPCC_TX_IRQHandler>:
 8007064:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007068:	4f13      	ldr	r7, [pc, #76]	@ (80070b8 <HAL_IPCC_TX_IRQHandler+0x54>)
 800706a:	687e      	ldr	r6, [r7, #4]
 800706c:	68fb      	ldr	r3, [r7, #12]
 800706e:	ea46 4603 	orr.w	r6, r6, r3, lsl #16
 8007072:	43f6      	mvns	r6, r6
 8007074:	f416 167c 	ands.w	r6, r6, #4128768	@ 0x3f0000
 8007078:	d01c      	beq.n	80070b4 <HAL_IPCC_TX_IRQHandler+0x50>
 800707a:	4682      	mov	sl, r0
 800707c:	2500      	movs	r5, #0
 800707e:	f100 091c 	add.w	r9, r0, #28
 8007082:	f04f 0801 	mov.w	r8, #1
 8007086:	e000      	b.n	800708a <HAL_IPCC_TX_IRQHandler+0x26>
 8007088:	3501      	adds	r5, #1
 800708a:	f005 040f 	and.w	r4, r5, #15
 800708e:	3410      	adds	r4, #16
 8007090:	fa08 f404 	lsl.w	r4, r8, r4
 8007094:	4234      	tst	r4, r6
 8007096:	d0f7      	beq.n	8007088 <HAL_IPCC_TX_IRQHandler+0x24>
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	f859 b025 	ldr.w	fp, [r9, r5, lsl #2]
 800709e:	4323      	orrs	r3, r4
 80070a0:	2200      	movs	r2, #0
 80070a2:	4629      	mov	r1, r5
 80070a4:	4650      	mov	r0, sl
 80070a6:	607b      	str	r3, [r7, #4]
 80070a8:	f1bb 0f00 	cmp.w	fp, #0
 80070ac:	d000      	beq.n	80070b0 <HAL_IPCC_TX_IRQHandler+0x4c>
 80070ae:	47d8      	blx	fp
 80070b0:	43a6      	bics	r6, r4
 80070b2:	d1e9      	bne.n	8007088 <HAL_IPCC_TX_IRQHandler+0x24>
 80070b4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80070b8:	58000c00 	.word	0x58000c00

080070bc <HAL_IPCC_RX_IRQHandler>:
 80070bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80070c0:	f8df 804c 	ldr.w	r8, [pc, #76]	@ 8007110 <HAL_IPCC_RX_IRQHandler+0x54>
 80070c4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80070c8:	f8d8 601c 	ldr.w	r6, [r8, #28]
 80070cc:	ea26 0603 	bic.w	r6, r6, r3
 80070d0:	f016 063f 	ands.w	r6, r6, #63	@ 0x3f
 80070d4:	d01a      	beq.n	800710c <HAL_IPCC_RX_IRQHandler+0x50>
 80070d6:	2501      	movs	r5, #1
 80070d8:	4607      	mov	r7, r0
 80070da:	46a9      	mov	r9, r5
 80070dc:	e000      	b.n	80070e0 <HAL_IPCC_RX_IRQHandler+0x24>
 80070de:	3501      	adds	r5, #1
 80070e0:	1e69      	subs	r1, r5, #1
 80070e2:	f001 040f 	and.w	r4, r1, #15
 80070e6:	fa09 f404 	lsl.w	r4, r9, r4
 80070ea:	4234      	tst	r4, r6
 80070ec:	d0f7      	beq.n	80070de <HAL_IPCC_RX_IRQHandler+0x22>
 80070ee:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80070f2:	f857 a025 	ldr.w	sl, [r7, r5, lsl #2]
 80070f6:	4323      	orrs	r3, r4
 80070f8:	2201      	movs	r2, #1
 80070fa:	4638      	mov	r0, r7
 80070fc:	f8c8 3004 	str.w	r3, [r8, #4]
 8007100:	f1ba 0f00 	cmp.w	sl, #0
 8007104:	d000      	beq.n	8007108 <HAL_IPCC_RX_IRQHandler+0x4c>
 8007106:	47d0      	blx	sl
 8007108:	43a6      	bics	r6, r4
 800710a:	d1e8      	bne.n	80070de <HAL_IPCC_RX_IRQHandler+0x22>
 800710c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007110:	58000c00 	.word	0x58000c00

08007114 <HAL_PCD_Init>:
 8007114:	2800      	cmp	r0, #0
 8007116:	f000 80d7 	beq.w	80072c8 <HAL_PCD_Init+0x1b4>
 800711a:	b510      	push	{r4, lr}
 800711c:	f890 3291 	ldrb.w	r3, [r0, #657]	@ 0x291
 8007120:	4604      	mov	r4, r0
 8007122:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007126:	2b00      	cmp	r3, #0
 8007128:	f000 80c9 	beq.w	80072be <HAL_PCD_Init+0x1aa>
 800712c:	2303      	movs	r3, #3
 800712e:	6820      	ldr	r0, [r4, #0]
 8007130:	f884 3291 	strb.w	r3, [r4, #657]	@ 0x291
 8007134:	f004 fc06 	bl	800b944 <USB_DisableGlobalInt>
 8007138:	7922      	ldrb	r2, [r4, #4]
 800713a:	2a00      	cmp	r2, #0
 800713c:	f000 80ae 	beq.w	800729c <HAL_PCD_Init+0x188>
 8007140:	2300      	movs	r3, #0
 8007142:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8007146:	2a01      	cmp	r2, #1
 8007148:	e9c4 3308 	strd	r3, r3, [r4, #32]
 800714c:	8221      	strh	r1, [r4, #16]
 800714e:	74e3      	strb	r3, [r4, #19]
 8007150:	62a3      	str	r3, [r4, #40]	@ 0x28
 8007152:	f000 80c0 	beq.w	80072d6 <HAL_PCD_Init+0x1c2>
 8007156:	f240 1101 	movw	r1, #257	@ 0x101
 800715a:	2a02      	cmp	r2, #2
 800715c:	e9c4 3312 	strd	r3, r3, [r4, #72]	@ 0x48
 8007160:	8721      	strh	r1, [r4, #56]	@ 0x38
 8007162:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
 8007166:	6523      	str	r3, [r4, #80]	@ 0x50
 8007168:	d044      	beq.n	80071f4 <HAL_PCD_Init+0xe0>
 800716a:	f44f 7181 	mov.w	r1, #258	@ 0x102
 800716e:	2a03      	cmp	r2, #3
 8007170:	e9c4 331c 	strd	r3, r3, [r4, #112]	@ 0x70
 8007174:	f8a4 1060 	strh.w	r1, [r4, #96]	@ 0x60
 8007178:	f884 3063 	strb.w	r3, [r4, #99]	@ 0x63
 800717c:	67a3      	str	r3, [r4, #120]	@ 0x78
 800717e:	d039      	beq.n	80071f4 <HAL_PCD_Init+0xe0>
 8007180:	f240 1103 	movw	r1, #259	@ 0x103
 8007184:	2a04      	cmp	r2, #4
 8007186:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
 800718a:	f8a4 1088 	strh.w	r1, [r4, #136]	@ 0x88
 800718e:	f884 308b 	strb.w	r3, [r4, #139]	@ 0x8b
 8007192:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8007196:	d02d      	beq.n	80071f4 <HAL_PCD_Init+0xe0>
 8007198:	f44f 7182 	mov.w	r1, #260	@ 0x104
 800719c:	2a05      	cmp	r2, #5
 800719e:	e9c4 3330 	strd	r3, r3, [r4, #192]	@ 0xc0
 80071a2:	f8a4 10b0 	strh.w	r1, [r4, #176]	@ 0xb0
 80071a6:	f884 30b3 	strb.w	r3, [r4, #179]	@ 0xb3
 80071aa:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 80071ae:	d021      	beq.n	80071f4 <HAL_PCD_Init+0xe0>
 80071b0:	f240 1105 	movw	r1, #261	@ 0x105
 80071b4:	2a06      	cmp	r2, #6
 80071b6:	e9c4 333a 	strd	r3, r3, [r4, #232]	@ 0xe8
 80071ba:	f8a4 10d8 	strh.w	r1, [r4, #216]	@ 0xd8
 80071be:	f884 30db 	strb.w	r3, [r4, #219]	@ 0xdb
 80071c2:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 80071c6:	d015      	beq.n	80071f4 <HAL_PCD_Init+0xe0>
 80071c8:	f44f 7183 	mov.w	r1, #262	@ 0x106
 80071cc:	2a07      	cmp	r2, #7
 80071ce:	e9c4 3344 	strd	r3, r3, [r4, #272]	@ 0x110
 80071d2:	f8a4 1100 	strh.w	r1, [r4, #256]	@ 0x100
 80071d6:	f884 3103 	strb.w	r3, [r4, #259]	@ 0x103
 80071da:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 80071de:	d009      	beq.n	80071f4 <HAL_PCD_Init+0xe0>
 80071e0:	e9c4 334e 	strd	r3, r3, [r4, #312]	@ 0x138
 80071e4:	f240 1107 	movw	r1, #263	@ 0x107
 80071e8:	f8a4 1128 	strh.w	r1, [r4, #296]	@ 0x128
 80071ec:	f884 312b 	strb.w	r3, [r4, #299]	@ 0x12b
 80071f0:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 80071f4:	2300      	movs	r3, #0
 80071f6:	2101      	movs	r1, #1
 80071f8:	2a02      	cmp	r2, #2
 80071fa:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
 80071fe:	e9c4 3362 	strd	r3, r3, [r4, #392]	@ 0x188
 8007202:	f8a4 3150 	strh.w	r3, [r4, #336]	@ 0x150
 8007206:	f884 3153 	strb.w	r3, [r4, #339]	@ 0x153
 800720a:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
 800720e:	f8a4 1178 	strh.w	r1, [r4, #376]	@ 0x178
 8007212:	f884 317b 	strb.w	r3, [r4, #379]	@ 0x17b
 8007216:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
 800721a:	d03f      	beq.n	800729c <HAL_PCD_Init+0x188>
 800721c:	2102      	movs	r1, #2
 800721e:	2a03      	cmp	r2, #3
 8007220:	e9c4 336c 	strd	r3, r3, [r4, #432]	@ 0x1b0
 8007224:	f8a4 11a0 	strh.w	r1, [r4, #416]	@ 0x1a0
 8007228:	f884 31a3 	strb.w	r3, [r4, #419]	@ 0x1a3
 800722c:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
 8007230:	d034      	beq.n	800729c <HAL_PCD_Init+0x188>
 8007232:	2103      	movs	r1, #3
 8007234:	2a04      	cmp	r2, #4
 8007236:	e9c4 3376 	strd	r3, r3, [r4, #472]	@ 0x1d8
 800723a:	f8a4 11c8 	strh.w	r1, [r4, #456]	@ 0x1c8
 800723e:	f884 31cb 	strb.w	r3, [r4, #459]	@ 0x1cb
 8007242:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
 8007246:	d029      	beq.n	800729c <HAL_PCD_Init+0x188>
 8007248:	2104      	movs	r1, #4
 800724a:	2a05      	cmp	r2, #5
 800724c:	e9c4 3380 	strd	r3, r3, [r4, #512]	@ 0x200
 8007250:	f8a4 11f0 	strh.w	r1, [r4, #496]	@ 0x1f0
 8007254:	f884 31f3 	strb.w	r3, [r4, #499]	@ 0x1f3
 8007258:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
 800725c:	d01e      	beq.n	800729c <HAL_PCD_Init+0x188>
 800725e:	2105      	movs	r1, #5
 8007260:	2a06      	cmp	r2, #6
 8007262:	e9c4 338a 	strd	r3, r3, [r4, #552]	@ 0x228
 8007266:	f8a4 1218 	strh.w	r1, [r4, #536]	@ 0x218
 800726a:	f884 321b 	strb.w	r3, [r4, #539]	@ 0x21b
 800726e:	f8c4 3230 	str.w	r3, [r4, #560]	@ 0x230
 8007272:	d013      	beq.n	800729c <HAL_PCD_Init+0x188>
 8007274:	2106      	movs	r1, #6
 8007276:	2a07      	cmp	r2, #7
 8007278:	e9c4 3394 	strd	r3, r3, [r4, #592]	@ 0x250
 800727c:	f8a4 1240 	strh.w	r1, [r4, #576]	@ 0x240
 8007280:	f884 3243 	strb.w	r3, [r4, #579]	@ 0x243
 8007284:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
 8007288:	d008      	beq.n	800729c <HAL_PCD_Init+0x188>
 800728a:	e9c4 339e 	strd	r3, r3, [r4, #632]	@ 0x278
 800728e:	2207      	movs	r2, #7
 8007290:	f8a4 2268 	strh.w	r2, [r4, #616]	@ 0x268
 8007294:	f884 326b 	strb.w	r3, [r4, #619]	@ 0x26b
 8007298:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
 800729c:	4623      	mov	r3, r4
 800729e:	f853 0b04 	ldr.w	r0, [r3], #4
 80072a2:	e893 0006 	ldmia.w	r3, {r1, r2}
 80072a6:	f004 fb57 	bl	800b958 <USB_DevInit>
 80072aa:	7aa3      	ldrb	r3, [r4, #10]
 80072ac:	2201      	movs	r2, #1
 80072ae:	2100      	movs	r1, #0
 80072b0:	4293      	cmp	r3, r2
 80072b2:	7321      	strb	r1, [r4, #12]
 80072b4:	f884 2291 	strb.w	r2, [r4, #657]	@ 0x291
 80072b8:	d008      	beq.n	80072cc <HAL_PCD_Init+0x1b8>
 80072ba:	2000      	movs	r0, #0
 80072bc:	bd10      	pop	{r4, pc}
 80072be:	f880 2290 	strb.w	r2, [r0, #656]	@ 0x290
 80072c2:	f007 fdd7 	bl	800ee74 <HAL_PCD_MspInit>
 80072c6:	e731      	b.n	800712c <HAL_PCD_Init+0x18>
 80072c8:	2001      	movs	r0, #1
 80072ca:	4770      	bx	lr
 80072cc:	4620      	mov	r0, r4
 80072ce:	f000 ff1b 	bl	8008108 <HAL_PCDEx_ActivateLPM>
 80072d2:	2000      	movs	r0, #0
 80072d4:	bd10      	pop	{r4, pc}
 80072d6:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
 80072da:	f8a4 3150 	strh.w	r3, [r4, #336]	@ 0x150
 80072de:	f884 3153 	strb.w	r3, [r4, #339]	@ 0x153
 80072e2:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
 80072e6:	e7d9      	b.n	800729c <HAL_PCD_Init+0x188>

080072e8 <HAL_PCD_Start>:
 80072e8:	f890 3290 	ldrb.w	r3, [r0, #656]	@ 0x290
 80072ec:	2b01      	cmp	r3, #1
 80072ee:	d00f      	beq.n	8007310 <HAL_PCD_Start+0x28>
 80072f0:	b510      	push	{r4, lr}
 80072f2:	4604      	mov	r4, r0
 80072f4:	2301      	movs	r3, #1
 80072f6:	6800      	ldr	r0, [r0, #0]
 80072f8:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80072fc:	f004 fb18 	bl	800b930 <USB_EnableGlobalInt>
 8007300:	6820      	ldr	r0, [r4, #0]
 8007302:	f005 f867 	bl	800c3d4 <USB_DevConnect>
 8007306:	2300      	movs	r3, #0
 8007308:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 800730c:	4618      	mov	r0, r3
 800730e:	bd10      	pop	{r4, pc}
 8007310:	2002      	movs	r0, #2
 8007312:	4770      	bx	lr

08007314 <HAL_PCD_IRQHandler>:
 8007314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007318:	4604      	mov	r4, r0
 800731a:	b083      	sub	sp, #12
 800731c:	6800      	ldr	r0, [r0, #0]
 800731e:	f005 f865 	bl	800c3ec <USB_ReadInterrupts>
 8007322:	f410 4500 	ands.w	r5, r0, #32768	@ 0x8000
 8007326:	d12c      	bne.n	8007382 <HAL_PCD_IRQHandler+0x6e>
 8007328:	0543      	lsls	r3, r0, #21
 800732a:	f100 817b 	bmi.w	8007624 <HAL_PCD_IRQHandler+0x310>
 800732e:	0447      	lsls	r7, r0, #17
 8007330:	d41b      	bmi.n	800736a <HAL_PCD_IRQHandler+0x56>
 8007332:	f410 5100 	ands.w	r1, r0, #8192	@ 0x2000
 8007336:	f040 81d7 	bne.w	80076e8 <HAL_PCD_IRQHandler+0x3d4>
 800733a:	04c6      	lsls	r6, r0, #19
 800733c:	f100 808b 	bmi.w	8007456 <HAL_PCD_IRQHandler+0x142>
 8007340:	0505      	lsls	r5, r0, #20
 8007342:	f100 8331 	bmi.w	80079a8 <HAL_PCD_IRQHandler+0x694>
 8007346:	0601      	lsls	r1, r0, #24
 8007348:	f100 8301 	bmi.w	800794e <HAL_PCD_IRQHandler+0x63a>
 800734c:	0582      	lsls	r2, r0, #22
 800734e:	f100 841f 	bmi.w	8007b90 <HAL_PCD_IRQHandler+0x87c>
 8007352:	05c3      	lsls	r3, r0, #23
 8007354:	d512      	bpl.n	800737c <HAL_PCD_IRQHandler+0x68>
 8007356:	6822      	ldr	r2, [r4, #0]
 8007358:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 800735c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007360:	041b      	lsls	r3, r3, #16
 8007362:	0c1b      	lsrs	r3, r3, #16
 8007364:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007368:	e008      	b.n	800737c <HAL_PCD_IRQHandler+0x68>
 800736a:	6822      	ldr	r2, [r4, #0]
 800736c:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007370:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007374:	041b      	lsls	r3, r3, #16
 8007376:	0c1b      	lsrs	r3, r3, #16
 8007378:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 800737c:	b003      	add	sp, #12
 800737e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007382:	6820      	ldr	r0, [r4, #0]
 8007384:	f8b0 3044 	ldrh.w	r3, [r0, #68]	@ 0x44
 8007388:	041f      	lsls	r7, r3, #16
 800738a:	d5f7      	bpl.n	800737c <HAL_PCD_IRQHandler+0x68>
 800738c:	f8df babc 	ldr.w	fp, [pc, #2748]	@ 8007e4c <HAL_PCD_IRQHandler+0xb38>
 8007390:	e010      	b.n	80073b4 <HAL_PCD_IRQHandler+0xa0>
 8007392:	f011 0110 	ands.w	r1, r1, #16
 8007396:	f000 80c5 	beq.w	8007524 <HAL_PCD_IRQHandler+0x210>
 800739a:	8801      	ldrh	r1, [r0, #0]
 800739c:	f411 6500 	ands.w	r5, r1, #2048	@ 0x800
 80073a0:	b28b      	uxth	r3, r1
 80073a2:	f040 80e7 	bne.w	8007574 <HAL_PCD_IRQHandler+0x260>
 80073a6:	041e      	lsls	r6, r3, #16
 80073a8:	f100 815a 	bmi.w	8007660 <HAL_PCD_IRQHandler+0x34c>
 80073ac:	f8b0 3044 	ldrh.w	r3, [r0, #68]	@ 0x44
 80073b0:	041a      	lsls	r2, r3, #16
 80073b2:	d5e3      	bpl.n	800737c <HAL_PCD_IRQHandler+0x68>
 80073b4:	f8b0 5044 	ldrh.w	r5, [r0, #68]	@ 0x44
 80073b8:	b2a9      	uxth	r1, r5
 80073ba:	f015 050f 	ands.w	r5, r5, #15
 80073be:	d0e8      	beq.n	8007392 <HAL_PCD_IRQHandler+0x7e>
 80073c0:	fa0f f885 	sxth.w	r8, r5
 80073c4:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 80073c8:	0419      	lsls	r1, r3, #16
 80073ca:	b29e      	uxth	r6, r3
 80073cc:	d466      	bmi.n	800749c <HAL_PCD_IRQHandler+0x188>
 80073ce:	0631      	lsls	r1, r6, #24
 80073d0:	d5ec      	bpl.n	80073ac <HAL_PCD_IRQHandler+0x98>
 80073d2:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 80073d6:	b29b      	uxth	r3, r3
 80073d8:	ea03 030b 	and.w	r3, r3, fp
 80073dc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80073e0:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 80073e4:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 80073e8:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 80073ec:	00af      	lsls	r7, r5, #2
 80073ee:	7cd3      	ldrb	r3, [r2, #19]
 80073f0:	2b01      	cmp	r3, #1
 80073f2:	f000 8185 	beq.w	8007700 <HAL_PCD_IRQHandler+0x3ec>
 80073f6:	eb08 0888 	add.w	r8, r8, r8, lsl #2
 80073fa:	eb04 0cc8 	add.w	ip, r4, r8, lsl #3
 80073fe:	7c11      	ldrb	r1, [r2, #16]
 8007400:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
 8007404:	9300      	str	r3, [sp, #0]
 8007406:	f416 7a80 	ands.w	sl, r6, #256	@ 0x100
 800740a:	ea4f 09c8 	mov.w	r9, r8, lsl #3
 800740e:	ea4f 0ec1 	mov.w	lr, r1, lsl #3
 8007412:	fa0f f881 	sxth.w	r8, r1
 8007416:	f040 81a3 	bne.w	8007760 <HAL_PCD_IRQHandler+0x44c>
 800741a:	f8b0 5050 	ldrh.w	r5, [r0, #80]	@ 0x50
 800741e:	fa1e f585 	uxtah	r5, lr, r5
 8007422:	4405      	add	r5, r0
 8007424:	f8b5 5402 	ldrh.w	r5, [r5, #1026]	@ 0x402
 8007428:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800742c:	429d      	cmp	r5, r3
 800742e:	f080 8191 	bcs.w	8007754 <HAL_PCD_IRQHandler+0x440>
 8007432:	1b5b      	subs	r3, r3, r5
 8007434:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007438:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800743a:	442b      	add	r3, r5
 800743c:	6253      	str	r3, [r2, #36]	@ 0x24
 800743e:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
 8007442:	f109 0110 	add.w	r1, r9, #16
 8007446:	442b      	add	r3, r5
 8007448:	4421      	add	r1, r4
 800744a:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
 800744e:	f004 fd9b 	bl	800bf88 <USB_EPStartXfer>
 8007452:	6820      	ldr	r0, [r4, #0]
 8007454:	e7aa      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 8007456:	6822      	ldr	r2, [r4, #0]
 8007458:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 800745c:	f023 0304 	bic.w	r3, r3, #4
 8007460:	041b      	lsls	r3, r3, #16
 8007462:	0c1b      	lsrs	r3, r3, #16
 8007464:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007468:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 800746c:	f023 0308 	bic.w	r3, r3, #8
 8007470:	041b      	lsls	r3, r3, #16
 8007472:	0c1b      	lsrs	r3, r3, #16
 8007474:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007478:	f894 32c8 	ldrb.w	r3, [r4, #712]	@ 0x2c8
 800747c:	2b01      	cmp	r3, #1
 800747e:	f000 8395 	beq.w	8007bac <HAL_PCD_IRQHandler+0x898>
 8007482:	4620      	mov	r0, r4
 8007484:	f007 fd70 	bl	800ef68 <HAL_PCD_ResumeCallback>
 8007488:	6822      	ldr	r2, [r4, #0]
 800748a:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 800748e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007492:	041b      	lsls	r3, r3, #16
 8007494:	0c1b      	lsrs	r3, r3, #16
 8007496:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 800749a:	e76f      	b.n	800737c <HAL_PCD_IRQHandler+0x68>
 800749c:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 80074a0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80074a4:	051b      	lsls	r3, r3, #20
 80074a6:	0d1b      	lsrs	r3, r3, #20
 80074a8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80074ac:	eb05 0185 	add.w	r1, r5, r5, lsl #2
 80074b0:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 80074b4:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80074b8:	00af      	lsls	r7, r5, #2
 80074ba:	f891 315c 	ldrb.w	r3, [r1, #348]	@ 0x15c
 80074be:	2b00      	cmp	r3, #0
 80074c0:	d17b      	bne.n	80075ba <HAL_PCD_IRQHandler+0x2a6>
 80074c2:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 80074c6:	f200 4206 	addw	r2, r0, #1030	@ 0x406
 80074ca:	fa12 f383 	uxtah	r3, r2, r3
 80074ce:	f891 2150 	ldrb.w	r2, [r1, #336]	@ 0x150
 80074d2:	f833 9032 	ldrh.w	r9, [r3, r2, lsl #3]
 80074d6:	f3c9 0909 	ubfx	r9, r9, #0, #10
 80074da:	f1b9 0f00 	cmp.w	r9, #0
 80074de:	f040 81d0 	bne.w	8007882 <HAL_PCD_IRQHandler+0x56e>
 80074e2:	f04f 0900 	mov.w	r9, #0
 80074e6:	197b      	adds	r3, r7, r5
 80074e8:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80074ec:	f8d3 216c 	ldr.w	r2, [r3, #364]	@ 0x16c
 80074f0:	444a      	add	r2, r9
 80074f2:	f8c3 216c 	str.w	r2, [r3, #364]	@ 0x16c
 80074f6:	f8d3 2164 	ldr.w	r2, [r3, #356]	@ 0x164
 80074fa:	444a      	add	r2, r9
 80074fc:	f8c3 2164 	str.w	r2, [r3, #356]	@ 0x164
 8007500:	f8d3 2168 	ldr.w	r2, [r3, #360]	@ 0x168
 8007504:	b122      	cbz	r2, 8007510 <HAL_PCD_IRQHandler+0x1fc>
 8007506:	f8d3 3160 	ldr.w	r3, [r3, #352]	@ 0x160
 800750a:	454b      	cmp	r3, r9
 800750c:	f240 819b 	bls.w	8007846 <HAL_PCD_IRQHandler+0x532>
 8007510:	442f      	add	r7, r5
 8007512:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 8007516:	4620      	mov	r0, r4
 8007518:	f897 1150 	ldrb.w	r1, [r7, #336]	@ 0x150
 800751c:	f007 fcea 	bl	800eef4 <HAL_PCD_DataOutStageCallback>
 8007520:	6820      	ldr	r0, [r4, #0]
 8007522:	e754      	b.n	80073ce <HAL_PCD_IRQHandler+0xba>
 8007524:	8803      	ldrh	r3, [r0, #0]
 8007526:	b29b      	uxth	r3, r3
 8007528:	ea03 030b 	and.w	r3, r3, fp
 800752c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007530:	8003      	strh	r3, [r0, #0]
 8007532:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007536:	fa10 f283 	uxtah	r2, r0, r3
 800753a:	7c20      	ldrb	r0, [r4, #16]
 800753c:	f240 4302 	movw	r3, #1026	@ 0x402
 8007540:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 8007544:	4620      	mov	r0, r4
 8007546:	5ad3      	ldrh	r3, [r2, r3]
 8007548:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800754a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800754e:	441a      	add	r2, r3
 8007550:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007552:	6262      	str	r2, [r4, #36]	@ 0x24
 8007554:	f007 fcd8 	bl	800ef08 <HAL_PCD_DataInStageCallback>
 8007558:	7b23      	ldrb	r3, [r4, #12]
 800755a:	b363      	cbz	r3, 80075b6 <HAL_PCD_IRQHandler+0x2a2>
 800755c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800755e:	6820      	ldr	r0, [r4, #0]
 8007560:	2b00      	cmp	r3, #0
 8007562:	f47f af23 	bne.w	80073ac <HAL_PCD_IRQHandler+0x98>
 8007566:	7b22      	ldrb	r2, [r4, #12]
 8007568:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800756c:	f8a0 204c 	strh.w	r2, [r0, #76]	@ 0x4c
 8007570:	7323      	strb	r3, [r4, #12]
 8007572:	e71b      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 8007574:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007578:	f894 1150 	ldrb.w	r1, [r4, #336]	@ 0x150
 800757c:	f240 4306 	movw	r3, #1030	@ 0x406
 8007580:	fa10 f282 	uxtah	r2, r0, r2
 8007584:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8007588:	f504 7126 	add.w	r1, r4, #664	@ 0x298
 800758c:	5ad3      	ldrh	r3, [r2, r3]
 800758e:	f8b4 2156 	ldrh.w	r2, [r4, #342]	@ 0x156
 8007592:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007596:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 800759a:	f004 ff3b 	bl	800c414 <USB_ReadPMA>
 800759e:	6822      	ldr	r2, [r4, #0]
 80075a0:	8813      	ldrh	r3, [r2, #0]
 80075a2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80075a6:	051b      	lsls	r3, r3, #20
 80075a8:	0d1b      	lsrs	r3, r3, #20
 80075aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80075ae:	8013      	strh	r3, [r2, #0]
 80075b0:	4620      	mov	r0, r4
 80075b2:	f007 fc99 	bl	800eee8 <HAL_PCD_SetupStageCallback>
 80075b6:	6820      	ldr	r0, [r4, #0]
 80075b8:	e6f8      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 80075ba:	f891 3153 	ldrb.w	r3, [r1, #339]	@ 0x153
 80075be:	f891 2150 	ldrb.w	r2, [r1, #336]	@ 0x150
 80075c2:	2b02      	cmp	r3, #2
 80075c4:	f000 820b 	beq.w	80079de <HAL_PCD_IRQHandler+0x6ca>
 80075c8:	b212      	sxth	r2, r2
 80075ca:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80075ce:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80075d2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80075d6:	041b      	lsls	r3, r3, #16
 80075d8:	0c1b      	lsrs	r3, r3, #16
 80075da:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80075de:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80075e2:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80075e6:	f891 3150 	ldrb.w	r3, [r1, #336]	@ 0x150
 80075ea:	b21a      	sxth	r2, r3
 80075ec:	f830 2022 	ldrh.w	r2, [r0, r2, lsl #2]
 80075f0:	f412 4f80 	tst.w	r2, #16384	@ 0x4000
 80075f4:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80075f8:	f000 812f 	beq.w	800785a <HAL_PCD_IRQHandler+0x546>
 80075fc:	f200 4c02 	addw	ip, r0, #1026	@ 0x402
 8007600:	fa1c f282 	uxtah	r2, ip, r2
 8007604:	f832 9033 	ldrh.w	r9, [r2, r3, lsl #3]
 8007608:	f3c9 0909 	ubfx	r9, r9, #0, #10
 800760c:	f1b9 0f00 	cmp.w	r9, #0
 8007610:	f43f af67 	beq.w	80074e2 <HAL_PCD_IRQHandler+0x1ce>
 8007614:	f8b1 2158 	ldrh.w	r2, [r1, #344]	@ 0x158
 8007618:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 800761c:	464b      	mov	r3, r9
 800761e:	f004 fef9 	bl	800c414 <USB_ReadPMA>
 8007622:	e760      	b.n	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007624:	6822      	ldr	r2, [r4, #0]
 8007626:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 800762a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800762e:	041b      	lsls	r3, r3, #16
 8007630:	0c1b      	lsrs	r3, r3, #16
 8007632:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007636:	4620      	mov	r0, r4
 8007638:	f007 fc74 	bl	800ef24 <HAL_PCD_ResetCallback>
 800763c:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8007640:	2b01      	cmp	r3, #1
 8007642:	f43f ae9b 	beq.w	800737c <HAL_PCD_IRQHandler+0x68>
 8007646:	2301      	movs	r3, #1
 8007648:	6820      	ldr	r0, [r4, #0]
 800764a:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 800764e:	7325      	strb	r5, [r4, #12]
 8007650:	4629      	mov	r1, r5
 8007652:	f004 feb9 	bl	800c3c8 <USB_SetDevAddress>
 8007656:	f884 5290 	strb.w	r5, [r4, #656]	@ 0x290
 800765a:	b003      	add	sp, #12
 800765c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007660:	8802      	ldrh	r2, [r0, #0]
 8007662:	f640 738f 	movw	r3, #3983	@ 0xf8f
 8007666:	4013      	ands	r3, r2
 8007668:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800766c:	8003      	strh	r3, [r0, #0]
 800766e:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007672:	f894 1150 	ldrb.w	r1, [r4, #336]	@ 0x150
 8007676:	f240 4306 	movw	r3, #1030	@ 0x406
 800767a:	fa10 f282 	uxtah	r2, r0, r2
 800767e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8007682:	5ad3      	ldrh	r3, [r2, r3]
 8007684:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007688:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 800768c:	b193      	cbz	r3, 80076b4 <HAL_PCD_IRQHandler+0x3a0>
 800768e:	f8d4 1164 	ldr.w	r1, [r4, #356]	@ 0x164
 8007692:	b179      	cbz	r1, 80076b4 <HAL_PCD_IRQHandler+0x3a0>
 8007694:	f8b4 2156 	ldrh.w	r2, [r4, #342]	@ 0x156
 8007698:	f004 febc 	bl	800c414 <USB_ReadPMA>
 800769c:	f8d4 3164 	ldr.w	r3, [r4, #356]	@ 0x164
 80076a0:	f8d4 216c 	ldr.w	r2, [r4, #364]	@ 0x16c
 80076a4:	4413      	add	r3, r2
 80076a6:	4620      	mov	r0, r4
 80076a8:	4629      	mov	r1, r5
 80076aa:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
 80076ae:	f007 fc21 	bl	800eef4 <HAL_PCD_DataOutStageCallback>
 80076b2:	6820      	ldr	r0, [r4, #0]
 80076b4:	8803      	ldrh	r3, [r0, #0]
 80076b6:	051d      	lsls	r5, r3, #20
 80076b8:	b29a      	uxth	r2, r3
 80076ba:	f53f ae77 	bmi.w	80073ac <HAL_PCD_IRQHandler+0x98>
 80076be:	f402 5240 	and.w	r2, r2, #12288	@ 0x3000
 80076c2:	f5b2 5f40 	cmp.w	r2, #12288	@ 0x3000
 80076c6:	f43f ae71 	beq.w	80073ac <HAL_PCD_IRQHandler+0x98>
 80076ca:	8803      	ldrh	r3, [r0, #0]
 80076cc:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80076d0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80076d4:	041b      	lsls	r3, r3, #16
 80076d6:	0c1b      	lsrs	r3, r3, #16
 80076d8:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 80076dc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80076e0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80076e4:	8003      	strh	r3, [r0, #0]
 80076e6:	e661      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 80076e8:	6822      	ldr	r2, [r4, #0]
 80076ea:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80076ee:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80076f2:	041b      	lsls	r3, r3, #16
 80076f4:	0c1b      	lsrs	r3, r3, #16
 80076f6:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80076fa:	b003      	add	sp, #12
 80076fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007700:	1c6b      	adds	r3, r5, #1
 8007702:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8007706:	2100      	movs	r1, #0
 8007708:	f844 1033 	str.w	r1, [r4, r3, lsl #3]
 800770c:	7f13      	ldrb	r3, [r2, #28]
 800770e:	b1c3      	cbz	r3, 8007742 <HAL_PCD_IRQHandler+0x42e>
 8007710:	f016 0640 	ands.w	r6, r6, #64	@ 0x40
 8007714:	7c53      	ldrb	r3, [r2, #17]
 8007716:	f040 810f 	bne.w	8007938 <HAL_PCD_IRQHandler+0x624>
 800771a:	2b00      	cmp	r3, #0
 800771c:	f040 8259 	bne.w	8007bd2 <HAL_PCD_IRQHandler+0x8be>
 8007720:	7c13      	ldrb	r3, [r2, #16]
 8007722:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007726:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800772a:	f203 4306 	addw	r3, r3, #1030	@ 0x406
 800772e:	b292      	uxth	r2, r2
 8007730:	5a99      	ldrh	r1, [r3, r2]
 8007732:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8007736:	5299      	strh	r1, [r3, r2]
 8007738:	5a99      	ldrh	r1, [r3, r2]
 800773a:	b289      	uxth	r1, r1
 800773c:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8007740:	5299      	strh	r1, [r3, r2]
 8007742:	443d      	add	r5, r7
 8007744:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 8007748:	4620      	mov	r0, r4
 800774a:	7c29      	ldrb	r1, [r5, #16]
 800774c:	f007 fbdc 	bl	800ef08 <HAL_PCD_DataInStageCallback>
 8007750:	6820      	ldr	r0, [r4, #0]
 8007752:	e62b      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 8007754:	f8cc a028 	str.w	sl, [ip, #40]	@ 0x28
 8007758:	4620      	mov	r0, r4
 800775a:	f007 fbd5 	bl	800ef08 <HAL_PCD_DataInStageCallback>
 800775e:	e72a      	b.n	80075b6 <HAL_PCD_IRQHandler+0x2a2>
 8007760:	f406 4380 	and.w	r3, r6, #16384	@ 0x4000
 8007764:	f016 0640 	ands.w	r6, r6, #64	@ 0x40
 8007768:	9301      	str	r3, [sp, #4]
 800776a:	f040 8092 	bne.w	8007892 <HAL_PCD_IRQHandler+0x57e>
 800776e:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007772:	9b00      	ldr	r3, [sp, #0]
 8007774:	f200 4a06 	addw	sl, r0, #1030	@ 0x406
 8007778:	fa1a f282 	uxtah	r2, sl, r2
 800777c:	f832 9038 	ldrh.w	r9, [r2, r8, lsl #3]
 8007780:	f3c9 0909 	ubfx	r9, r9, #0, #10
 8007784:	4599      	cmp	r9, r3
 8007786:	f240 81a5 	bls.w	8007ad4 <HAL_PCD_IRQHandler+0x7c0>
 800778a:	f8cc 6028 	str.w	r6, [ip, #40]	@ 0x28
 800778e:	197b      	adds	r3, r7, r5
 8007790:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007794:	7c5b      	ldrb	r3, [r3, #17]
 8007796:	2b00      	cmp	r3, #0
 8007798:	f040 82a3 	bne.w	8007ce2 <HAL_PCD_IRQHandler+0x9ce>
 800779c:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80077a0:	f20e 4602 	addw	r6, lr, #1026	@ 0x402
 80077a4:	b292      	uxth	r2, r2
 80077a6:	4406      	add	r6, r0
 80077a8:	5ab3      	ldrh	r3, [r6, r2]
 80077aa:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80077ae:	52b3      	strh	r3, [r6, r2]
 80077b0:	5ab3      	ldrh	r3, [r6, r2]
 80077b2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80077b6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80077ba:	b29b      	uxth	r3, r3
 80077bc:	52b3      	strh	r3, [r6, r2]
 80077be:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 80077c2:	fa1a f282 	uxtah	r2, sl, r2
 80077c6:	f832 3038 	ldrh.w	r3, [r2, r8, lsl #3]
 80077ca:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80077ce:	f822 3038 	strh.w	r3, [r2, r8, lsl #3]
 80077d2:	f832 3038 	ldrh.w	r3, [r2, r8, lsl #3]
 80077d6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80077da:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80077de:	b29b      	uxth	r3, r3
 80077e0:	f822 3038 	strh.w	r3, [r2, r8, lsl #3]
 80077e4:	197b      	adds	r3, r7, r5
 80077e6:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80077ea:	7cdb      	ldrb	r3, [r3, #19]
 80077ec:	2b02      	cmp	r3, #2
 80077ee:	d10f      	bne.n	8007810 <HAL_PCD_IRQHandler+0x4fc>
 80077f0:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 80077f4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80077f8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80077fc:	041b      	lsls	r3, r3, #16
 80077fe:	0c1b      	lsrs	r3, r3, #16
 8007800:	f083 0320 	eor.w	r3, r3, #32
 8007804:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007808:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800780c:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007810:	4620      	mov	r0, r4
 8007812:	f007 fb79 	bl	800ef08 <HAL_PCD_DataInStageCallback>
 8007816:	9b01      	ldr	r3, [sp, #4]
 8007818:	2b00      	cmp	r3, #0
 800781a:	f47f aecc 	bne.w	80075b6 <HAL_PCD_IRQHandler+0x2a2>
 800781e:	197b      	adds	r3, r7, r5
 8007820:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007824:	6820      	ldr	r0, [r4, #0]
 8007826:	7c1a      	ldrb	r2, [r3, #16]
 8007828:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800782c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007830:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007834:	041b      	lsls	r3, r3, #16
 8007836:	0c1b      	lsrs	r3, r3, #16
 8007838:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800783c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007840:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007844:	e5b2      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 8007846:	2128      	movs	r1, #40	@ 0x28
 8007848:	fb01 4105 	mla	r1, r1, r5, r4
 800784c:	6820      	ldr	r0, [r4, #0]
 800784e:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8007852:	f004 fb99 	bl	800bf88 <USB_EPStartXfer>
 8007856:	6820      	ldr	r0, [r4, #0]
 8007858:	e5b9      	b.n	80073ce <HAL_PCD_IRQHandler+0xba>
 800785a:	f200 4c06 	addw	ip, r0, #1030	@ 0x406
 800785e:	fa1c f282 	uxtah	r2, ip, r2
 8007862:	f832 9033 	ldrh.w	r9, [r2, r3, lsl #3]
 8007866:	f3c9 0909 	ubfx	r9, r9, #0, #10
 800786a:	f1b9 0f00 	cmp.w	r9, #0
 800786e:	f43f ae38 	beq.w	80074e2 <HAL_PCD_IRQHandler+0x1ce>
 8007872:	f8b1 215a 	ldrh.w	r2, [r1, #346]	@ 0x15a
 8007876:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 800787a:	464b      	mov	r3, r9
 800787c:	f004 fdca 	bl	800c414 <USB_ReadPMA>
 8007880:	e631      	b.n	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007882:	f8b1 2156 	ldrh.w	r2, [r1, #342]	@ 0x156
 8007886:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 800788a:	464b      	mov	r3, r9
 800788c:	f004 fdc2 	bl	800c414 <USB_ReadPMA>
 8007890:	e629      	b.n	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007892:	f8b0 6050 	ldrh.w	r6, [r0, #80]	@ 0x50
 8007896:	9b00      	ldr	r3, [sp, #0]
 8007898:	f200 4a02 	addw	sl, r0, #1026	@ 0x402
 800789c:	fa1a f686 	uxtah	r6, sl, r6
 80078a0:	f836 9038 	ldrh.w	r9, [r6, r8, lsl #3]
 80078a4:	f3c9 0909 	ubfx	r9, r9, #0, #10
 80078a8:	4599      	cmp	r9, r3
 80078aa:	f0c0 80e2 	bcc.w	8007a72 <HAL_PCD_IRQHandler+0x75e>
 80078ae:	2600      	movs	r6, #0
 80078b0:	f8cc 6028 	str.w	r6, [ip, #40]	@ 0x28
 80078b4:	7c53      	ldrb	r3, [r2, #17]
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	f040 8225 	bne.w	8007d06 <HAL_PCD_IRQHandler+0x9f2>
 80078bc:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 80078c0:	fa1a f383 	uxtah	r3, sl, r3
 80078c4:	f20e 4206 	addw	r2, lr, #1030	@ 0x406
 80078c8:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 80078cc:	f3c6 0609 	ubfx	r6, r6, #0, #10
 80078d0:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 80078d4:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 80078d8:	b2b6      	uxth	r6, r6
 80078da:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 80078de:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 80078e2:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 80078e6:	4402      	add	r2, r0
 80078e8:	b29b      	uxth	r3, r3
 80078ea:	5ad6      	ldrh	r6, [r2, r3]
 80078ec:	f3c6 0609 	ubfx	r6, r6, #0, #10
 80078f0:	52d6      	strh	r6, [r2, r3]
 80078f2:	5ad6      	ldrh	r6, [r2, r3]
 80078f4:	b2b6      	uxth	r6, r6
 80078f6:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 80078fa:	52d6      	strh	r6, [r2, r3]
 80078fc:	197b      	adds	r3, r7, r5
 80078fe:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007902:	7cdb      	ldrb	r3, [r3, #19]
 8007904:	2b02      	cmp	r3, #2
 8007906:	d10f      	bne.n	8007928 <HAL_PCD_IRQHandler+0x614>
 8007908:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 800790c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007910:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007914:	041b      	lsls	r3, r3, #16
 8007916:	0c1b      	lsrs	r3, r3, #16
 8007918:	f083 0320 	eor.w	r3, r3, #32
 800791c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007920:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007924:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007928:	4620      	mov	r0, r4
 800792a:	f007 faed 	bl	800ef08 <HAL_PCD_DataInStageCallback>
 800792e:	9b01      	ldr	r3, [sp, #4]
 8007930:	2b00      	cmp	r3, #0
 8007932:	f47f af74 	bne.w	800781e <HAL_PCD_IRQHandler+0x50a>
 8007936:	e63e      	b.n	80075b6 <HAL_PCD_IRQHandler+0x2a2>
 8007938:	2b00      	cmp	r3, #0
 800793a:	f040 813d 	bne.w	8007bb8 <HAL_PCD_IRQHandler+0x8a4>
 800793e:	7c13      	ldrb	r3, [r2, #16]
 8007940:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007944:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007948:	f203 4302 	addw	r3, r3, #1026	@ 0x402
 800794c:	e6ef      	b.n	800772e <HAL_PCD_IRQHandler+0x41a>
 800794e:	6822      	ldr	r2, [r4, #0]
 8007950:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007954:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007958:	041b      	lsls	r3, r3, #16
 800795a:	0c1b      	lsrs	r3, r3, #16
 800795c:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007960:	f894 32c8 	ldrb.w	r3, [r4, #712]	@ 0x2c8
 8007964:	2b00      	cmp	r3, #0
 8007966:	f040 810e 	bne.w	8007b86 <HAL_PCD_IRQHandler+0x872>
 800796a:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 800796e:	b29b      	uxth	r3, r3
 8007970:	f043 0304 	orr.w	r3, r3, #4
 8007974:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007978:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 800797c:	b29b      	uxth	r3, r3
 800797e:	2101      	movs	r1, #1
 8007980:	f043 0308 	orr.w	r3, r3, #8
 8007984:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 8007988:	f884 12c8 	strb.w	r1, [r4, #712]	@ 0x2c8
 800798c:	f8b2 3054 	ldrh.w	r3, [r2, #84]	@ 0x54
 8007990:	f3c3 038d 	ubfx	r3, r3, #2, #14
 8007994:	f003 033c 	and.w	r3, r3, #60	@ 0x3c
 8007998:	4620      	mov	r0, r4
 800799a:	f8c4 32cc 	str.w	r3, [r4, #716]	@ 0x2cc
 800799e:	b003      	add	sp, #12
 80079a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80079a4:	f007 bbba 	b.w	800f11c <HAL_PCDEx_LPM_Callback>
 80079a8:	6822      	ldr	r2, [r4, #0]
 80079aa:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 80079ae:	b29b      	uxth	r3, r3
 80079b0:	f043 0308 	orr.w	r3, r3, #8
 80079b4:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 80079b8:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80079bc:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80079c0:	041b      	lsls	r3, r3, #16
 80079c2:	0c1b      	lsrs	r3, r3, #16
 80079c4:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 80079c8:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 80079cc:	b29b      	uxth	r3, r3
 80079ce:	f043 0304 	orr.w	r3, r3, #4
 80079d2:	4620      	mov	r0, r4
 80079d4:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 80079d8:	f007 fab6 	bl	800ef48 <HAL_PCD_SuspendCallback>
 80079dc:	e4ce      	b.n	800737c <HAL_PCD_IRQHandler+0x68>
 80079de:	f8b0 e050 	ldrh.w	lr, [r0, #80]	@ 0x50
 80079e2:	f8d1 3168 	ldr.w	r3, [r1, #360]	@ 0x168
 80079e6:	fa0f fc82 	sxth.w	ip, r2
 80079ea:	00d2      	lsls	r2, r2, #3
 80079ec:	fa12 f28e 	uxtah	r2, r2, lr
 80079f0:	f416 4a80 	ands.w	sl, r6, #16384	@ 0x4000
 80079f4:	4402      	add	r2, r0
 80079f6:	f000 80f9 	beq.w	8007bec <HAL_PCD_IRQHandler+0x8d8>
 80079fa:	f8b2 e402 	ldrh.w	lr, [r2, #1026]	@ 0x402
 80079fe:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8007a02:	459e      	cmp	lr, r3
 8007a04:	46f1      	mov	r9, lr
 8007a06:	f200 8165 	bhi.w	8007cd4 <HAL_PCD_IRQHandler+0x9c0>
 8007a0a:	eba3 030e 	sub.w	r3, r3, lr
 8007a0e:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007a12:	b97b      	cbnz	r3, 8007a34 <HAL_PCD_IRQHandler+0x720>
 8007a14:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 8007a18:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007a1c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8007a20:	0412      	lsls	r2, r2, #16
 8007a22:	0c12      	lsrs	r2, r2, #16
 8007a24:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 8007a28:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007a2c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8007a30:	f820 202c 	strh.w	r2, [r0, ip, lsl #2]
 8007a34:	0672      	lsls	r2, r6, #25
 8007a36:	d50d      	bpl.n	8007a54 <HAL_PCD_IRQHandler+0x740>
 8007a38:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8007a3c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a40:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a44:	041b      	lsls	r3, r3, #16
 8007a46:	0c1b      	lsrs	r3, r3, #16
 8007a48:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007a4c:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8007a50:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8007a54:	f1be 0f00 	cmp.w	lr, #0
 8007a58:	f43f ad45 	beq.w	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007a5c:	1979      	adds	r1, r7, r5
 8007a5e:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007a62:	4673      	mov	r3, lr
 8007a64:	f8b1 2158 	ldrh.w	r2, [r1, #344]	@ 0x158
 8007a68:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007a6c:	f004 fcd2 	bl	800c414 <USB_ReadPMA>
 8007a70:	e539      	b.n	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007a72:	eba3 0309 	sub.w	r3, r3, r9
 8007a76:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007a7a:	9b01      	ldr	r3, [sp, #4]
 8007a7c:	b16b      	cbz	r3, 8007a9a <HAL_PCD_IRQHandler+0x786>
 8007a7e:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007a82:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a86:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a8a:	041b      	lsls	r3, r3, #16
 8007a8c:	0c1b      	lsrs	r3, r3, #16
 8007a8e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007a92:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007a96:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007a9a:	197b      	adds	r3, r7, r5
 8007a9c:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007aa0:	f893 2034 	ldrb.w	r2, [r3, #52]	@ 0x34
 8007aa4:	2a01      	cmp	r2, #1
 8007aa6:	f000 80dc 	beq.w	8007c62 <HAL_PCD_IRQHandler+0x94e>
 8007aaa:	443d      	add	r5, r7
 8007aac:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 8007ab0:	7c2a      	ldrb	r2, [r5, #16]
 8007ab2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007ab6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007aba:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007abe:	041b      	lsls	r3, r3, #16
 8007ac0:	0c1b      	lsrs	r3, r3, #16
 8007ac2:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
 8007ac6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007aca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007ace:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007ad2:	e46b      	b.n	80073ac <HAL_PCD_IRQHandler+0x98>
 8007ad4:	eba3 0309 	sub.w	r3, r3, r9
 8007ad8:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007adc:	2b00      	cmp	r3, #0
 8007ade:	f43f ae56 	beq.w	800778e <HAL_PCD_IRQHandler+0x47a>
 8007ae2:	9b01      	ldr	r3, [sp, #4]
 8007ae4:	b96b      	cbnz	r3, 8007b02 <HAL_PCD_IRQHandler+0x7ee>
 8007ae6:	f830 3028 	ldrh.w	r3, [r0, r8, lsl #2]
 8007aea:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007aee:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007af2:	041b      	lsls	r3, r3, #16
 8007af4:	0c1b      	lsrs	r3, r3, #16
 8007af6:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8007afa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007afe:	f820 3028 	strh.w	r3, [r0, r8, lsl #2]
 8007b02:	197b      	adds	r3, r7, r5
 8007b04:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007b08:	f893 2034 	ldrb.w	r2, [r3, #52]	@ 0x34
 8007b0c:	2a01      	cmp	r2, #1
 8007b0e:	d1cc      	bne.n	8007aaa <HAL_PCD_IRQHandler+0x796>
 8007b10:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007b12:	eb02 0109 	add.w	r1, r2, r9
 8007b16:	6259      	str	r1, [r3, #36]	@ 0x24
 8007b18:	f8dc 602c 	ldr.w	r6, [ip, #44]	@ 0x2c
 8007b1c:	444e      	add	r6, r9
 8007b1e:	f8cc 602c 	str.w	r6, [ip, #44]	@ 0x2c
 8007b22:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8007b24:	6a1a      	ldr	r2, [r3, #32]
 8007b26:	4296      	cmp	r6, r2
 8007b28:	f0c0 8109 	bcc.w	8007d3e <HAL_PCD_IRQHandler+0xa2a>
 8007b2c:	1ab6      	subs	r6, r6, r2
 8007b2e:	631e      	str	r6, [r3, #48]	@ 0x30
 8007b30:	fa1f f982 	uxth.w	r9, r2
 8007b34:	197b      	adds	r3, r7, r5
 8007b36:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007b3a:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007b3e:	f1bc 0f00 	cmp.w	ip, #0
 8007b42:	f040 80f1 	bne.w	8007d28 <HAL_PCD_IRQHandler+0xa14>
 8007b46:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007b4a:	fa1a f383 	uxtah	r3, sl, r3
 8007b4e:	449e      	add	lr, r3
 8007b50:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007b54:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007b58:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007b5c:	2a00      	cmp	r2, #0
 8007b5e:	f040 8119 	bne.w	8007d94 <HAL_PCD_IRQHandler+0xa80>
 8007b62:	f833 2038 	ldrh.w	r2, [r3, r8, lsl #3]
 8007b66:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007b6a:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007b6e:	b292      	uxth	r2, r2
 8007b70:	f823 2038 	strh.w	r2, [r3, r8, lsl #3]
 8007b74:	197a      	adds	r2, r7, r5
 8007b76:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007b7a:	464b      	mov	r3, r9
 8007b7c:	8b52      	ldrh	r2, [r2, #26]
 8007b7e:	f004 fc39 	bl	800c3f4 <USB_WritePMA>
 8007b82:	6820      	ldr	r0, [r4, #0]
 8007b84:	e791      	b.n	8007aaa <HAL_PCD_IRQHandler+0x796>
 8007b86:	4620      	mov	r0, r4
 8007b88:	f007 f9de 	bl	800ef48 <HAL_PCD_SuspendCallback>
 8007b8c:	f7ff bbf6 	b.w	800737c <HAL_PCD_IRQHandler+0x68>
 8007b90:	6822      	ldr	r2, [r4, #0]
 8007b92:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8007b96:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007b9a:	041b      	lsls	r3, r3, #16
 8007b9c:	0c1b      	lsrs	r3, r3, #16
 8007b9e:	4620      	mov	r0, r4
 8007ba0:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 8007ba4:	f007 f9ba 	bl	800ef1c <HAL_PCD_SOFCallback>
 8007ba8:	f7ff bbe8 	b.w	800737c <HAL_PCD_IRQHandler+0x68>
 8007bac:	f884 12c8 	strb.w	r1, [r4, #712]	@ 0x2c8
 8007bb0:	4620      	mov	r0, r4
 8007bb2:	f007 fab3 	bl	800f11c <HAL_PCDEx_LPM_Callback>
 8007bb6:	e464      	b.n	8007482 <HAL_PCD_IRQHandler+0x16e>
 8007bb8:	2b01      	cmp	r3, #1
 8007bba:	f47f adc2 	bne.w	8007742 <HAL_PCD_IRQHandler+0x42e>
 8007bbe:	7c13      	ldrb	r3, [r2, #16]
 8007bc0:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007bc4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007bc8:	f203 4302 	addw	r3, r3, #1026	@ 0x402
 8007bcc:	b292      	uxth	r2, r2
 8007bce:	5299      	strh	r1, [r3, r2]
 8007bd0:	e5b7      	b.n	8007742 <HAL_PCD_IRQHandler+0x42e>
 8007bd2:	2b01      	cmp	r3, #1
 8007bd4:	f47f adb5 	bne.w	8007742 <HAL_PCD_IRQHandler+0x42e>
 8007bd8:	7c13      	ldrb	r3, [r2, #16]
 8007bda:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 8007bde:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8007be2:	f203 4306 	addw	r3, r3, #1030	@ 0x406
 8007be6:	b292      	uxth	r2, r2
 8007be8:	529e      	strh	r6, [r3, r2]
 8007bea:	e5aa      	b.n	8007742 <HAL_PCD_IRQHandler+0x42e>
 8007bec:	f8b2 e406 	ldrh.w	lr, [r2, #1030]	@ 0x406
 8007bf0:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8007bf4:	459e      	cmp	lr, r3
 8007bf6:	46f1      	mov	r9, lr
 8007bf8:	d870      	bhi.n	8007cdc <HAL_PCD_IRQHandler+0x9c8>
 8007bfa:	eba3 030e 	sub.w	r3, r3, lr
 8007bfe:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007c02:	b97b      	cbnz	r3, 8007c24 <HAL_PCD_IRQHandler+0x910>
 8007c04:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 8007c08:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007c0c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8007c10:	0412      	lsls	r2, r2, #16
 8007c12:	0c12      	lsrs	r2, r2, #16
 8007c14:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 8007c18:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007c1c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8007c20:	f820 202c 	strh.w	r2, [r0, ip, lsl #2]
 8007c24:	0673      	lsls	r3, r6, #25
 8007c26:	d40d      	bmi.n	8007c44 <HAL_PCD_IRQHandler+0x930>
 8007c28:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8007c2c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007c30:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c34:	041b      	lsls	r3, r3, #16
 8007c36:	0c1b      	lsrs	r3, r3, #16
 8007c38:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007c3c:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8007c40:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8007c44:	f1be 0f00 	cmp.w	lr, #0
 8007c48:	f43f ac4d 	beq.w	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007c4c:	1979      	adds	r1, r7, r5
 8007c4e:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007c52:	4673      	mov	r3, lr
 8007c54:	f8b1 215a 	ldrh.w	r2, [r1, #346]	@ 0x15a
 8007c58:	f8d1 1164 	ldr.w	r1, [r1, #356]	@ 0x164
 8007c5c:	f004 fbda 	bl	800c414 <USB_ReadPMA>
 8007c60:	e441      	b.n	80074e6 <HAL_PCD_IRQHandler+0x1d2>
 8007c62:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007c64:	eb02 0109 	add.w	r1, r2, r9
 8007c68:	6259      	str	r1, [r3, #36]	@ 0x24
 8007c6a:	f8dc 602c 	ldr.w	r6, [ip, #44]	@ 0x2c
 8007c6e:	444e      	add	r6, r9
 8007c70:	f8cc 602c 	str.w	r6, [ip, #44]	@ 0x2c
 8007c74:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8007c76:	6a1a      	ldr	r2, [r3, #32]
 8007c78:	4296      	cmp	r6, r2
 8007c7a:	d36f      	bcc.n	8007d5c <HAL_PCD_IRQHandler+0xa48>
 8007c7c:	1ab6      	subs	r6, r6, r2
 8007c7e:	631e      	str	r6, [r3, #48]	@ 0x30
 8007c80:	fa1f f982 	uxth.w	r9, r2
 8007c84:	197b      	adds	r3, r7, r5
 8007c86:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007c8a:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007c8e:	f1bc 0f00 	cmp.w	ip, #0
 8007c92:	d159      	bne.n	8007d48 <HAL_PCD_IRQHandler+0xa34>
 8007c94:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007c98:	fa1a f383 	uxtah	r3, sl, r3
 8007c9c:	449e      	add	lr, r3
 8007c9e:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007ca2:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007ca6:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007caa:	2a00      	cmp	r2, #0
 8007cac:	f040 8098 	bne.w	8007de0 <HAL_PCD_IRQHandler+0xacc>
 8007cb0:	f833 2038 	ldrh.w	r2, [r3, r8, lsl #3]
 8007cb4:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007cb8:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007cbc:	b292      	uxth	r2, r2
 8007cbe:	f823 2038 	strh.w	r2, [r3, r8, lsl #3]
 8007cc2:	197a      	adds	r2, r7, r5
 8007cc4:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007cc8:	464b      	mov	r3, r9
 8007cca:	8b12      	ldrh	r2, [r2, #24]
 8007ccc:	f004 fb92 	bl	800c3f4 <USB_WritePMA>
 8007cd0:	6820      	ldr	r0, [r4, #0]
 8007cd2:	e6ea      	b.n	8007aaa <HAL_PCD_IRQHandler+0x796>
 8007cd4:	2300      	movs	r3, #0
 8007cd6:	f8c1 3168 	str.w	r3, [r1, #360]	@ 0x168
 8007cda:	e69b      	b.n	8007a14 <HAL_PCD_IRQHandler+0x700>
 8007cdc:	f8c1 a168 	str.w	sl, [r1, #360]	@ 0x168
 8007ce0:	e790      	b.n	8007c04 <HAL_PCD_IRQHandler+0x8f0>
 8007ce2:	2b01      	cmp	r3, #1
 8007ce4:	f47f ad7e 	bne.w	80077e4 <HAL_PCD_IRQHandler+0x4d0>
 8007ce8:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007cec:	f20e 4202 	addw	r2, lr, #1026	@ 0x402
 8007cf0:	b29b      	uxth	r3, r3
 8007cf2:	4402      	add	r2, r0
 8007cf4:	2600      	movs	r6, #0
 8007cf6:	52d6      	strh	r6, [r2, r3]
 8007cf8:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007cfc:	fa1a f383 	uxtah	r3, sl, r3
 8007d00:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007d04:	e56e      	b.n	80077e4 <HAL_PCD_IRQHandler+0x4d0>
 8007d06:	2b01      	cmp	r3, #1
 8007d08:	f47f adf8 	bne.w	80078fc <HAL_PCD_IRQHandler+0x5e8>
 8007d0c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007d10:	fa1a f383 	uxtah	r3, sl, r3
 8007d14:	f20e 4206 	addw	r2, lr, #1030	@ 0x406
 8007d18:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007d1c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007d20:	4402      	add	r2, r0
 8007d22:	b29b      	uxth	r3, r3
 8007d24:	52d6      	strh	r6, [r2, r3]
 8007d26:	e5e9      	b.n	80078fc <HAL_PCD_IRQHandler+0x5e8>
 8007d28:	f1bc 0f01 	cmp.w	ip, #1
 8007d2c:	f47f af22 	bne.w	8007b74 <HAL_PCD_IRQHandler+0x860>
 8007d30:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007d34:	fa1a f383 	uxtah	r3, sl, r3
 8007d38:	f823 9038 	strh.w	r9, [r3, r8, lsl #3]
 8007d3c:	e71a      	b.n	8007b74 <HAL_PCD_IRQHandler+0x860>
 8007d3e:	b996      	cbnz	r6, 8007d66 <HAL_PCD_IRQHandler+0xa52>
 8007d40:	f883 6034 	strb.w	r6, [r3, #52]	@ 0x34
 8007d44:	464a      	mov	r2, r9
 8007d46:	e6f5      	b.n	8007b34 <HAL_PCD_IRQHandler+0x820>
 8007d48:	f1bc 0f01 	cmp.w	ip, #1
 8007d4c:	d1b9      	bne.n	8007cc2 <HAL_PCD_IRQHandler+0x9ae>
 8007d4e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007d52:	fa1a f383 	uxtah	r3, sl, r3
 8007d56:	f823 9038 	strh.w	r9, [r3, r8, lsl #3]
 8007d5a:	e7b2      	b.n	8007cc2 <HAL_PCD_IRQHandler+0x9ae>
 8007d5c:	bb4e      	cbnz	r6, 8007db2 <HAL_PCD_IRQHandler+0xa9e>
 8007d5e:	f883 6034 	strb.w	r6, [r3, #52]	@ 0x34
 8007d62:	464a      	mov	r2, r9
 8007d64:	e78e      	b.n	8007c84 <HAL_PCD_IRQHandler+0x970>
 8007d66:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007d6a:	2200      	movs	r2, #0
 8007d6c:	631a      	str	r2, [r3, #48]	@ 0x30
 8007d6e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007d72:	fa1f f986 	uxth.w	r9, r6
 8007d76:	f1bc 0f00 	cmp.w	ip, #0
 8007d7a:	d1d5      	bne.n	8007d28 <HAL_PCD_IRQHandler+0xa14>
 8007d7c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007d80:	fa1a f383 	uxtah	r3, sl, r3
 8007d84:	4632      	mov	r2, r6
 8007d86:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007d8a:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007d8e:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007d92:	449e      	add	lr, r3
 8007d94:	2a3e      	cmp	r2, #62	@ 0x3e
 8007d96:	d832      	bhi.n	8007dfe <HAL_PCD_IRQHandler+0xaea>
 8007d98:	f8be 3000 	ldrh.w	r3, [lr]
 8007d9c:	0856      	lsrs	r6, r2, #1
 8007d9e:	07d2      	lsls	r2, r2, #31
 8007da0:	bf48      	it	mi
 8007da2:	3601      	addmi	r6, #1
 8007da4:	b29b      	uxth	r3, r3
 8007da6:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8007daa:	b29b      	uxth	r3, r3
 8007dac:	f8ae 3000 	strh.w	r3, [lr]
 8007db0:	e6e0      	b.n	8007b74 <HAL_PCD_IRQHandler+0x860>
 8007db2:	f893 c011 	ldrb.w	ip, [r3, #17]
 8007db6:	2200      	movs	r2, #0
 8007db8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007dbc:	631a      	str	r2, [r3, #48]	@ 0x30
 8007dbe:	fa1f f986 	uxth.w	r9, r6
 8007dc2:	f1bc 0f00 	cmp.w	ip, #0
 8007dc6:	d1bf      	bne.n	8007d48 <HAL_PCD_IRQHandler+0xa34>
 8007dc8:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 8007dcc:	fa1a f383 	uxtah	r3, sl, r3
 8007dd0:	4632      	mov	r2, r6
 8007dd2:	f833 6038 	ldrh.w	r6, [r3, r8, lsl #3]
 8007dd6:	f3c6 0609 	ubfx	r6, r6, #0, #10
 8007dda:	f823 6038 	strh.w	r6, [r3, r8, lsl #3]
 8007dde:	449e      	add	lr, r3
 8007de0:	2a3e      	cmp	r2, #62	@ 0x3e
 8007de2:	d81f      	bhi.n	8007e24 <HAL_PCD_IRQHandler+0xb10>
 8007de4:	f8be 3000 	ldrh.w	r3, [lr]
 8007de8:	0856      	lsrs	r6, r2, #1
 8007dea:	07d2      	lsls	r2, r2, #31
 8007dec:	bf48      	it	mi
 8007dee:	3601      	addmi	r6, #1
 8007df0:	b29b      	uxth	r3, r3
 8007df2:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8007df6:	b29b      	uxth	r3, r3
 8007df8:	f8ae 3000 	strh.w	r3, [lr]
 8007dfc:	e761      	b.n	8007cc2 <HAL_PCD_IRQHandler+0x9ae>
 8007dfe:	06d3      	lsls	r3, r2, #27
 8007e00:	f8be 3000 	ldrh.w	r3, [lr]
 8007e04:	ea4f 1652 	mov.w	r6, r2, lsr #5
 8007e08:	bf08      	it	eq
 8007e0a:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007e0e:	b29b      	uxth	r3, r3
 8007e10:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8007e14:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007e18:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007e1c:	b29b      	uxth	r3, r3
 8007e1e:	f8ae 3000 	strh.w	r3, [lr]
 8007e22:	e6a7      	b.n	8007b74 <HAL_PCD_IRQHandler+0x860>
 8007e24:	06d3      	lsls	r3, r2, #27
 8007e26:	f8be 3000 	ldrh.w	r3, [lr]
 8007e2a:	ea4f 1652 	mov.w	r6, r2, lsr #5
 8007e2e:	bf08      	it	eq
 8007e30:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007e34:	b29b      	uxth	r3, r3
 8007e36:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8007e3a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007e3e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007e42:	b29b      	uxth	r3, r3
 8007e44:	f8ae 3000 	strh.w	r3, [lr]
 8007e48:	e73b      	b.n	8007cc2 <HAL_PCD_IRQHandler+0x9ae>
 8007e4a:	bf00      	nop
 8007e4c:	ffff8f0f 	.word	0xffff8f0f

08007e50 <HAL_PCD_SetAddress>:
 8007e50:	f890 2290 	ldrb.w	r2, [r0, #656]	@ 0x290
 8007e54:	2a01      	cmp	r2, #1
 8007e56:	d00d      	beq.n	8007e74 <HAL_PCD_SetAddress+0x24>
 8007e58:	b510      	push	{r4, lr}
 8007e5a:	4604      	mov	r4, r0
 8007e5c:	2201      	movs	r2, #1
 8007e5e:	6800      	ldr	r0, [r0, #0]
 8007e60:	f884 2290 	strb.w	r2, [r4, #656]	@ 0x290
 8007e64:	7321      	strb	r1, [r4, #12]
 8007e66:	f004 faaf 	bl	800c3c8 <USB_SetDevAddress>
 8007e6a:	2300      	movs	r3, #0
 8007e6c:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007e70:	4618      	mov	r0, r3
 8007e72:	bd10      	pop	{r4, pc}
 8007e74:	2002      	movs	r0, #2
 8007e76:	4770      	bx	lr

08007e78 <HAL_PCD_EP_Open>:
 8007e78:	b510      	push	{r4, lr}
 8007e7a:	f001 0e07 	and.w	lr, r1, #7
 8007e7e:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 8007e82:	0609      	lsls	r1, r1, #24
 8007e84:	4604      	mov	r4, r0
 8007e86:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8007e8a:	d423      	bmi.n	8007ed4 <HAL_PCD_EP_Open+0x5c>
 8007e8c:	f50c 71a8 	add.w	r1, ip, #336	@ 0x150
 8007e90:	4401      	add	r1, r0
 8007e92:	eb0e 008e 	add.w	r0, lr, lr, lsl #2
 8007e96:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 8007e9a:	f04f 0c00 	mov.w	ip, #0
 8007e9e:	f880 c151 	strb.w	ip, [r0, #337]	@ 0x151
 8007ea2:	2b02      	cmp	r3, #2
 8007ea4:	70cb      	strb	r3, [r1, #3]
 8007ea6:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8007eaa:	bf04      	itt	eq
 8007eac:	2300      	moveq	r3, #0
 8007eae:	710b      	strbeq	r3, [r1, #4]
 8007eb0:	f881 e000 	strb.w	lr, [r1]
 8007eb4:	610a      	str	r2, [r1, #16]
 8007eb6:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8007eba:	2b01      	cmp	r3, #1
 8007ebc:	d016      	beq.n	8007eec <HAL_PCD_EP_Open+0x74>
 8007ebe:	2301      	movs	r3, #1
 8007ec0:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007ec4:	6820      	ldr	r0, [r4, #0]
 8007ec6:	f003 fd5b 	bl	800b980 <USB_ActivateEndpoint>
 8007eca:	2300      	movs	r3, #0
 8007ecc:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	bd10      	pop	{r4, pc}
 8007ed4:	f10c 0110 	add.w	r1, ip, #16
 8007ed8:	4401      	add	r1, r0
 8007eda:	eb0e 008e 	add.w	r0, lr, lr, lsl #2
 8007ede:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 8007ee2:	f04f 0c01 	mov.w	ip, #1
 8007ee6:	f880 c011 	strb.w	ip, [r0, #17]
 8007eea:	e7da      	b.n	8007ea2 <HAL_PCD_EP_Open+0x2a>
 8007eec:	2002      	movs	r0, #2
 8007eee:	bd10      	pop	{r4, pc}

08007ef0 <HAL_PCD_EP_Close>:
 8007ef0:	f001 0307 	and.w	r3, r1, #7
 8007ef4:	f001 0207 	and.w	r2, r1, #7
 8007ef8:	b510      	push	{r4, lr}
 8007efa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8007efe:	4604      	mov	r4, r0
 8007f00:	0609      	lsls	r1, r1, #24
 8007f02:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8007f06:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8007f0a:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 8007f0e:	d416      	bmi.n	8007f3e <HAL_PCD_EP_Close+0x4e>
 8007f10:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8007f14:	18e1      	adds	r1, r4, r3
 8007f16:	f04f 0c00 	mov.w	ip, #0
 8007f1a:	f880 c151 	strb.w	ip, [r0, #337]	@ 0x151
 8007f1e:	700a      	strb	r2, [r1, #0]
 8007f20:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8007f24:	2b01      	cmp	r3, #1
 8007f26:	d015      	beq.n	8007f54 <HAL_PCD_EP_Close+0x64>
 8007f28:	2301      	movs	r3, #1
 8007f2a:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007f2e:	6820      	ldr	r0, [r4, #0]
 8007f30:	f003 ff44 	bl	800bdbc <USB_DeactivateEndpoint>
 8007f34:	2300      	movs	r3, #0
 8007f36:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8007f3a:	4618      	mov	r0, r3
 8007f3c:	bd10      	pop	{r4, pc}
 8007f3e:	3310      	adds	r3, #16
 8007f40:	18e1      	adds	r1, r4, r3
 8007f42:	f04f 0c01 	mov.w	ip, #1
 8007f46:	f880 c011 	strb.w	ip, [r0, #17]
 8007f4a:	700a      	strb	r2, [r1, #0]
 8007f4c:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8007f50:	2b01      	cmp	r3, #1
 8007f52:	d1e9      	bne.n	8007f28 <HAL_PCD_EP_Close+0x38>
 8007f54:	2002      	movs	r0, #2
 8007f56:	bd10      	pop	{r4, pc}

08007f58 <HAL_PCD_EP_Receive>:
 8007f58:	b510      	push	{r4, lr}
 8007f5a:	f001 0e07 	and.w	lr, r1, #7
 8007f5e:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 8007f62:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 8007f66:	2128      	movs	r1, #40	@ 0x28
 8007f68:	2400      	movs	r4, #0
 8007f6a:	fb01 010e 	mla	r1, r1, lr, r0
 8007f6e:	f8cc 2164 	str.w	r2, [ip, #356]	@ 0x164
 8007f72:	6800      	ldr	r0, [r0, #0]
 8007f74:	f88c e150 	strb.w	lr, [ip, #336]	@ 0x150
 8007f78:	e9cc 345a 	strd	r3, r4, [ip, #360]	@ 0x168
 8007f7c:	f88c 4151 	strb.w	r4, [ip, #337]	@ 0x151
 8007f80:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8007f84:	f004 f800 	bl	800bf88 <USB_EPStartXfer>
 8007f88:	4620      	mov	r0, r4
 8007f8a:	bd10      	pop	{r4, pc}

08007f8c <HAL_PCD_EP_GetRxCount>:
 8007f8c:	f001 0107 	and.w	r1, r1, #7
 8007f90:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007f94:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 8007f98:	f8d0 016c 	ldr.w	r0, [r0, #364]	@ 0x16c
 8007f9c:	4770      	bx	lr
 8007f9e:	bf00      	nop

08007fa0 <HAL_PCD_EP_Transmit>:
 8007fa0:	b510      	push	{r4, lr}
 8007fa2:	f001 0e07 	and.w	lr, r1, #7
 8007fa6:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 8007faa:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 8007fae:	4661      	mov	r1, ip
 8007fb0:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
 8007fb4:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
 8007fb8:	2400      	movs	r4, #0
 8007fba:	2301      	movs	r3, #1
 8007fbc:	6800      	ldr	r0, [r0, #0]
 8007fbe:	f8cc 2024 	str.w	r2, [ip, #36]	@ 0x24
 8007fc2:	3110      	adds	r1, #16
 8007fc4:	f88c 3034 	strb.w	r3, [ip, #52]	@ 0x34
 8007fc8:	f8cc 402c 	str.w	r4, [ip, #44]	@ 0x2c
 8007fcc:	f88c 3011 	strb.w	r3, [ip, #17]
 8007fd0:	f88c e010 	strb.w	lr, [ip, #16]
 8007fd4:	f003 ffd8 	bl	800bf88 <USB_EPStartXfer>
 8007fd8:	4620      	mov	r0, r4
 8007fda:	bd10      	pop	{r4, pc}

08007fdc <HAL_PCD_EP_SetStall>:
 8007fdc:	7902      	ldrb	r2, [r0, #4]
 8007fde:	f001 0307 	and.w	r3, r1, #7
 8007fe2:	429a      	cmp	r2, r3
 8007fe4:	d333      	bcc.n	800804e <HAL_PCD_EP_SetStall+0x72>
 8007fe6:	060a      	lsls	r2, r1, #24
 8007fe8:	b510      	push	{r4, lr}
 8007fea:	4604      	mov	r4, r0
 8007fec:	d41c      	bmi.n	8008028 <HAL_PCD_EP_SetStall+0x4c>
 8007fee:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8007ff2:	2028      	movs	r0, #40	@ 0x28
 8007ff4:	fb00 4101 	mla	r1, r0, r1, r4
 8007ff8:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007ffc:	f501 71a8 	add.w	r1, r1, #336	@ 0x150
 8008000:	2000      	movs	r0, #0
 8008002:	f882 0151 	strb.w	r0, [r2, #337]	@ 0x151
 8008006:	2201      	movs	r2, #1
 8008008:	708a      	strb	r2, [r1, #2]
 800800a:	700b      	strb	r3, [r1, #0]
 800800c:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008010:	4293      	cmp	r3, r2
 8008012:	d01a      	beq.n	800804a <HAL_PCD_EP_SetStall+0x6e>
 8008014:	6820      	ldr	r0, [r4, #0]
 8008016:	f884 2290 	strb.w	r2, [r4, #656]	@ 0x290
 800801a:	f004 f95f 	bl	800c2dc <USB_EPSetStall>
 800801e:	2300      	movs	r3, #0
 8008020:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 8008024:	4618      	mov	r0, r3
 8008026:	bd10      	pop	{r4, pc}
 8008028:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800802c:	2128      	movs	r1, #40	@ 0x28
 800802e:	fb01 0103 	mla	r1, r1, r3, r0
 8008032:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8008036:	3110      	adds	r1, #16
 8008038:	2001      	movs	r0, #1
 800803a:	7450      	strb	r0, [r2, #17]
 800803c:	2201      	movs	r2, #1
 800803e:	708a      	strb	r2, [r1, #2]
 8008040:	700b      	strb	r3, [r1, #0]
 8008042:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008046:	4293      	cmp	r3, r2
 8008048:	d1e4      	bne.n	8008014 <HAL_PCD_EP_SetStall+0x38>
 800804a:	2002      	movs	r0, #2
 800804c:	bd10      	pop	{r4, pc}
 800804e:	2001      	movs	r0, #1
 8008050:	4770      	bx	lr
 8008052:	bf00      	nop

08008054 <HAL_PCD_EP_ClrStall>:
 8008054:	b538      	push	{r3, r4, r5, lr}
 8008056:	7902      	ldrb	r2, [r0, #4]
 8008058:	f001 030f 	and.w	r3, r1, #15
 800805c:	429a      	cmp	r2, r3
 800805e:	d332      	bcc.n	80080c6 <HAL_PCD_EP_ClrStall+0x72>
 8008060:	f001 0307 	and.w	r3, r1, #7
 8008064:	f001 0207 	and.w	r2, r1, #7
 8008068:	4604      	mov	r4, r0
 800806a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800806e:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8008072:	0609      	lsls	r1, r1, #24
 8008074:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8008078:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 800807c:	d416      	bmi.n	80080ac <HAL_PCD_EP_ClrStall+0x58>
 800807e:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8008082:	18e1      	adds	r1, r4, r3
 8008084:	2500      	movs	r5, #0
 8008086:	f880 5151 	strb.w	r5, [r0, #337]	@ 0x151
 800808a:	2500      	movs	r5, #0
 800808c:	708d      	strb	r5, [r1, #2]
 800808e:	700a      	strb	r2, [r1, #0]
 8008090:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 8008094:	2b01      	cmp	r3, #1
 8008096:	d014      	beq.n	80080c2 <HAL_PCD_EP_ClrStall+0x6e>
 8008098:	2301      	movs	r3, #1
 800809a:	6820      	ldr	r0, [r4, #0]
 800809c:	f884 3290 	strb.w	r3, [r4, #656]	@ 0x290
 80080a0:	f004 f944 	bl	800c32c <USB_EPClearStall>
 80080a4:	f884 5290 	strb.w	r5, [r4, #656]	@ 0x290
 80080a8:	4628      	mov	r0, r5
 80080aa:	bd38      	pop	{r3, r4, r5, pc}
 80080ac:	3310      	adds	r3, #16
 80080ae:	18e1      	adds	r1, r4, r3
 80080b0:	2501      	movs	r5, #1
 80080b2:	7445      	strb	r5, [r0, #17]
 80080b4:	2500      	movs	r5, #0
 80080b6:	708d      	strb	r5, [r1, #2]
 80080b8:	700a      	strb	r2, [r1, #0]
 80080ba:	f894 3290 	ldrb.w	r3, [r4, #656]	@ 0x290
 80080be:	2b01      	cmp	r3, #1
 80080c0:	d1ea      	bne.n	8008098 <HAL_PCD_EP_ClrStall+0x44>
 80080c2:	2002      	movs	r0, #2
 80080c4:	bd38      	pop	{r3, r4, r5, pc}
 80080c6:	2001      	movs	r0, #1
 80080c8:	bd38      	pop	{r3, r4, r5, pc}
 80080ca:	bf00      	nop

080080cc <HAL_PCDEx_PMAConfig>:
 80080cc:	f011 0f80 	tst.w	r1, #128	@ 0x80
 80080d0:	d00c      	beq.n	80080ec <HAL_PCDEx_PMAConfig+0x20>
 80080d2:	f001 0107 	and.w	r1, r1, #7
 80080d6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80080da:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80080de:	3010      	adds	r0, #16
 80080e0:	b299      	uxth	r1, r3
 80080e2:	b962      	cbnz	r2, 80080fe <HAL_PCDEx_PMAConfig+0x32>
 80080e4:	80c1      	strh	r1, [r0, #6]
 80080e6:	7302      	strb	r2, [r0, #12]
 80080e8:	2000      	movs	r0, #0
 80080ea:	4770      	bx	lr
 80080ec:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80080f0:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 80080f4:	f500 70a8 	add.w	r0, r0, #336	@ 0x150
 80080f8:	b299      	uxth	r1, r3
 80080fa:	2a00      	cmp	r2, #0
 80080fc:	d0f2      	beq.n	80080e4 <HAL_PCDEx_PMAConfig+0x18>
 80080fe:	2201      	movs	r2, #1
 8008100:	6083      	str	r3, [r0, #8]
 8008102:	7302      	strb	r2, [r0, #12]
 8008104:	2000      	movs	r0, #0
 8008106:	4770      	bx	lr

08008108 <HAL_PCDEx_ActivateLPM>:
 8008108:	4602      	mov	r2, r0
 800810a:	2000      	movs	r0, #0
 800810c:	6811      	ldr	r1, [r2, #0]
 800810e:	b410      	push	{r4}
 8008110:	f882 02c8 	strb.w	r0, [r2, #712]	@ 0x2c8
 8008114:	f8b1 3054 	ldrh.w	r3, [r1, #84]	@ 0x54
 8008118:	2401      	movs	r4, #1
 800811a:	b29b      	uxth	r3, r3
 800811c:	4323      	orrs	r3, r4
 800811e:	f8c2 42d0 	str.w	r4, [r2, #720]	@ 0x2d0
 8008122:	f8a1 3054 	strh.w	r3, [r1, #84]	@ 0x54
 8008126:	f8b1 3054 	ldrh.w	r3, [r1, #84]	@ 0x54
 800812a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800812e:	b29b      	uxth	r3, r3
 8008130:	f043 0302 	orr.w	r3, r3, #2
 8008134:	f8a1 3054 	strh.w	r3, [r1, #84]	@ 0x54
 8008138:	4770      	bx	lr
 800813a:	bf00      	nop

0800813c <HAL_PWR_EnableBkUpAccess>:
 800813c:	4a02      	ldr	r2, [pc, #8]	@ (8008148 <HAL_PWR_EnableBkUpAccess+0xc>)
 800813e:	6813      	ldr	r3, [r2, #0]
 8008140:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008144:	6013      	str	r3, [r2, #0]
 8008146:	4770      	bx	lr
 8008148:	58000400 	.word	0x58000400

0800814c <HAL_PWREx_GetVoltageRange>:
 800814c:	4b02      	ldr	r3, [pc, #8]	@ (8008158 <HAL_PWREx_GetVoltageRange+0xc>)
 800814e:	6818      	ldr	r0, [r3, #0]
 8008150:	f400 60c0 	and.w	r0, r0, #1536	@ 0x600
 8008154:	4770      	bx	lr
 8008156:	bf00      	nop
 8008158:	58000400 	.word	0x58000400

0800815c <HAL_PWREx_EnableVddUSB>:
 800815c:	4a02      	ldr	r2, [pc, #8]	@ (8008168 <HAL_PWREx_EnableVddUSB+0xc>)
 800815e:	6853      	ldr	r3, [r2, #4]
 8008160:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8008164:	6053      	str	r3, [r2, #4]
 8008166:	4770      	bx	lr
 8008168:	58000400 	.word	0x58000400

0800816c <RCC_SetFlashLatencyFromMSIRange>:
 800816c:	28b0      	cmp	r0, #176	@ 0xb0
 800816e:	4b31      	ldr	r3, [pc, #196]	@ (8008234 <RCC_SetFlashLatencyFromMSIRange+0xc8>)
 8008170:	4a31      	ldr	r2, [pc, #196]	@ (8008238 <RCC_SetFlashLatencyFromMSIRange+0xcc>)
 8008172:	bf98      	it	ls
 8008174:	0900      	lsrls	r0, r0, #4
 8008176:	b570      	push	{r4, r5, r6, lr}
 8008178:	bf8c      	ite	hi
 800817a:	6adc      	ldrhi	r4, [r3, #44]	@ 0x2c
 800817c:	f853 4020 	ldrls.w	r4, [r3, r0, lsl #2]
 8008180:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008184:	b084      	sub	sp, #16
 8008186:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 800818a:	f003 030f 	and.w	r3, r3, #15
 800818e:	ae04      	add	r6, sp, #16
 8008190:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008194:	fbb4 f4f3 	udiv	r4, r4, r3
 8008198:	f7ff ffd8 	bl	800814c <HAL_PWREx_GetVoltageRange>
 800819c:	4b27      	ldr	r3, [pc, #156]	@ (800823c <RCC_SetFlashLatencyFromMSIRange+0xd0>)
 800819e:	4605      	mov	r5, r0
 80081a0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80081a2:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
 80081a6:	e906 000f 	stmdb	r6, {r0, r1, r2, r3}
 80081aa:	d029      	beq.n	8008200 <RCC_SetFlashLatencyFromMSIRange+0x94>
 80081ac:	4b24      	ldr	r3, [pc, #144]	@ (8008240 <RCC_SetFlashLatencyFromMSIRange+0xd4>)
 80081ae:	429c      	cmp	r4, r3
 80081b0:	d33a      	bcc.n	8008228 <RCC_SetFlashLatencyFromMSIRange+0xbc>
 80081b2:	f503 03b7 	add.w	r3, r3, #5996544	@ 0x5b8000
 80081b6:	f603 537f 	addw	r3, r3, #3455	@ 0xd7f
 80081ba:	429c      	cmp	r4, r3
 80081bc:	d936      	bls.n	800822c <RCC_SetFlashLatencyFromMSIRange+0xc0>
 80081be:	f503 1374 	add.w	r3, r3, #3997696	@ 0x3d0000
 80081c2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80081c6:	429c      	cmp	r4, r3
 80081c8:	d932      	bls.n	8008230 <RCC_SetFlashLatencyFromMSIRange+0xc4>
 80081ca:	2600      	movs	r6, #0
 80081cc:	4c1d      	ldr	r4, [pc, #116]	@ (8008244 <RCC_SetFlashLatencyFromMSIRange+0xd8>)
 80081ce:	6823      	ldr	r3, [r4, #0]
 80081d0:	f023 0307 	bic.w	r3, r3, #7
 80081d4:	4333      	orrs	r3, r6
 80081d6:	6023      	str	r3, [r4, #0]
 80081d8:	f7fd f998 	bl	800550c <HAL_GetTick>
 80081dc:	4605      	mov	r5, r0
 80081de:	e004      	b.n	80081ea <RCC_SetFlashLatencyFromMSIRange+0x7e>
 80081e0:	f7fd f994 	bl	800550c <HAL_GetTick>
 80081e4:	1b40      	subs	r0, r0, r5
 80081e6:	2802      	cmp	r0, #2
 80081e8:	d807      	bhi.n	80081fa <RCC_SetFlashLatencyFromMSIRange+0x8e>
 80081ea:	6823      	ldr	r3, [r4, #0]
 80081ec:	f003 0307 	and.w	r3, r3, #7
 80081f0:	429e      	cmp	r6, r3
 80081f2:	d1f5      	bne.n	80081e0 <RCC_SetFlashLatencyFromMSIRange+0x74>
 80081f4:	2000      	movs	r0, #0
 80081f6:	b004      	add	sp, #16
 80081f8:	bd70      	pop	{r4, r5, r6, pc}
 80081fa:	2003      	movs	r0, #3
 80081fc:	b004      	add	sp, #16
 80081fe:	bd70      	pop	{r4, r5, r6, pc}
 8008200:	4b11      	ldr	r3, [pc, #68]	@ (8008248 <RCC_SetFlashLatencyFromMSIRange+0xdc>)
 8008202:	429c      	cmp	r4, r3
 8008204:	d910      	bls.n	8008228 <RCC_SetFlashLatencyFromMSIRange+0xbc>
 8008206:	4b11      	ldr	r3, [pc, #68]	@ (800824c <RCC_SetFlashLatencyFromMSIRange+0xe0>)
 8008208:	429c      	cmp	r4, r3
 800820a:	d90f      	bls.n	800822c <RCC_SetFlashLatencyFromMSIRange+0xc0>
 800820c:	4b10      	ldr	r3, [pc, #64]	@ (8008250 <RCC_SetFlashLatencyFromMSIRange+0xe4>)
 800820e:	429c      	cmp	r4, r3
 8008210:	d90e      	bls.n	8008230 <RCC_SetFlashLatencyFromMSIRange+0xc4>
 8008212:	4b10      	ldr	r3, [pc, #64]	@ (8008254 <RCC_SetFlashLatencyFromMSIRange+0xe8>)
 8008214:	429c      	cmp	r4, r3
 8008216:	bf38      	it	cc
 8008218:	2303      	movcc	r3, #3
 800821a:	d2d6      	bcs.n	80081ca <RCC_SetFlashLatencyFromMSIRange+0x5e>
 800821c:	aa04      	add	r2, sp, #16
 800821e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008222:	f853 6c10 	ldr.w	r6, [r3, #-16]
 8008226:	e7d1      	b.n	80081cc <RCC_SetFlashLatencyFromMSIRange+0x60>
 8008228:	2300      	movs	r3, #0
 800822a:	e7f7      	b.n	800821c <RCC_SetFlashLatencyFromMSIRange+0xb0>
 800822c:	2301      	movs	r3, #1
 800822e:	e7f5      	b.n	800821c <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8008230:	2302      	movs	r3, #2
 8008232:	e7f3      	b.n	800821c <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8008234:	08018094 	.word	0x08018094
 8008238:	080180f4 	.word	0x080180f4
 800823c:	08015c7c 	.word	0x08015c7c
 8008240:	006acfc0 	.word	0x006acfc0
 8008244:	58004000 	.word	0x58004000
 8008248:	0121eabf 	.word	0x0121eabf
 800824c:	0234933f 	.word	0x0234933f
 8008250:	03473bbf 	.word	0x03473bbf
 8008254:	03dfd240 	.word	0x03dfd240

08008258 <HAL_RCC_GetSysClockFreq.part.0>:
 8008258:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800825c:	b410      	push	{r4}
 800825e:	68d3      	ldr	r3, [r2, #12]
 8008260:	f003 0303 	and.w	r3, r3, #3
 8008264:	2b02      	cmp	r3, #2
 8008266:	d028      	beq.n	80082ba <HAL_RCC_GetSysClockFreq.part.0+0x62>
 8008268:	2b03      	cmp	r3, #3
 800826a:	d11b      	bne.n	80082a4 <HAL_RCC_GetSysClockFreq.part.0+0x4c>
 800826c:	6812      	ldr	r2, [r2, #0]
 800826e:	4b14      	ldr	r3, [pc, #80]	@ (80082c0 <HAL_RCC_GetSysClockFreq.part.0+0x68>)
 8008270:	4c14      	ldr	r4, [pc, #80]	@ (80082c4 <HAL_RCC_GetSysClockFreq.part.0+0x6c>)
 8008272:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008276:	bf08      	it	eq
 8008278:	461c      	moveq	r4, r3
 800827a:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 800827e:	68cb      	ldr	r3, [r1, #12]
 8008280:	68ca      	ldr	r2, [r1, #12]
 8008282:	68c8      	ldr	r0, [r1, #12]
 8008284:	f3c3 2306 	ubfx	r3, r3, #8, #7
 8008288:	f3c2 1202 	ubfx	r2, r2, #4, #3
 800828c:	0f40      	lsrs	r0, r0, #29
 800828e:	fb04 f303 	mul.w	r3, r4, r3
 8008292:	3201      	adds	r2, #1
 8008294:	3001      	adds	r0, #1
 8008296:	fbb3 f3f2 	udiv	r3, r3, r2
 800829a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800829e:	fbb3 f0f0 	udiv	r0, r3, r0
 80082a2:	4770      	bx	lr
 80082a4:	6813      	ldr	r3, [r2, #0]
 80082a6:	4a08      	ldr	r2, [pc, #32]	@ (80082c8 <HAL_RCC_GetSysClockFreq.part.0+0x70>)
 80082a8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80082ac:	2bb0      	cmp	r3, #176	@ 0xb0
 80082ae:	bf28      	it	cs
 80082b0:	23b0      	movcs	r3, #176	@ 0xb0
 80082b2:	091b      	lsrs	r3, r3, #4
 80082b4:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80082b8:	e7df      	b.n	800827a <HAL_RCC_GetSysClockFreq.part.0+0x22>
 80082ba:	4c02      	ldr	r4, [pc, #8]	@ (80082c4 <HAL_RCC_GetSysClockFreq.part.0+0x6c>)
 80082bc:	e7dd      	b.n	800827a <HAL_RCC_GetSysClockFreq.part.0+0x22>
 80082be:	bf00      	nop
 80082c0:	01e84800 	.word	0x01e84800
 80082c4:	00f42400 	.word	0x00f42400
 80082c8:	08018094 	.word	0x08018094

080082cc <HAL_RCC_OscConfig>:
 80082cc:	2800      	cmp	r0, #0
 80082ce:	f000 834a 	beq.w	8008966 <HAL_RCC_OscConfig+0x69a>
 80082d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80082d4:	6803      	ldr	r3, [r0, #0]
 80082d6:	069d      	lsls	r5, r3, #26
 80082d8:	4604      	mov	r4, r0
 80082da:	d529      	bpl.n	8008330 <HAL_RCC_OscConfig+0x64>
 80082dc:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80082e0:	6893      	ldr	r3, [r2, #8]
 80082e2:	68d2      	ldr	r2, [r2, #12]
 80082e4:	f013 030c 	ands.w	r3, r3, #12
 80082e8:	f000 80f9 	beq.w	80084de <HAL_RCC_OscConfig+0x212>
 80082ec:	2b0c      	cmp	r3, #12
 80082ee:	f000 80f1 	beq.w	80084d4 <HAL_RCC_OscConfig+0x208>
 80082f2:	69e3      	ldr	r3, [r4, #28]
 80082f4:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80082f8:	2b00      	cmp	r3, #0
 80082fa:	f000 8274 	beq.w	80087e6 <HAL_RCC_OscConfig+0x51a>
 80082fe:	682b      	ldr	r3, [r5, #0]
 8008300:	f043 0301 	orr.w	r3, r3, #1
 8008304:	602b      	str	r3, [r5, #0]
 8008306:	f7fd f901 	bl	800550c <HAL_GetTick>
 800830a:	4606      	mov	r6, r0
 800830c:	682b      	ldr	r3, [r5, #0]
 800830e:	0798      	lsls	r0, r3, #30
 8008310:	f140 827a 	bpl.w	8008808 <HAL_RCC_OscConfig+0x53c>
 8008314:	682b      	ldr	r3, [r5, #0]
 8008316:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008318:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800831c:	4313      	orrs	r3, r2
 800831e:	602b      	str	r3, [r5, #0]
 8008320:	686b      	ldr	r3, [r5, #4]
 8008322:	6a22      	ldr	r2, [r4, #32]
 8008324:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008328:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800832c:	606b      	str	r3, [r5, #4]
 800832e:	6823      	ldr	r3, [r4, #0]
 8008330:	07da      	lsls	r2, r3, #31
 8008332:	d527      	bpl.n	8008384 <HAL_RCC_OscConfig+0xb8>
 8008334:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008338:	688a      	ldr	r2, [r1, #8]
 800833a:	68c9      	ldr	r1, [r1, #12]
 800833c:	f002 020c 	and.w	r2, r2, #12
 8008340:	2a08      	cmp	r2, #8
 8008342:	f000 81f0 	beq.w	8008726 <HAL_RCC_OscConfig+0x45a>
 8008346:	2a0c      	cmp	r2, #12
 8008348:	f000 81e8 	beq.w	800871c <HAL_RCC_OscConfig+0x450>
 800834c:	6863      	ldr	r3, [r4, #4]
 800834e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008352:	f000 8233 	beq.w	80087bc <HAL_RCC_OscConfig+0x4f0>
 8008356:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 800835a:	682a      	ldr	r2, [r5, #0]
 800835c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8008360:	602a      	str	r2, [r5, #0]
 8008362:	2b00      	cmp	r3, #0
 8008364:	f040 8230 	bne.w	80087c8 <HAL_RCC_OscConfig+0x4fc>
 8008368:	f7fd f8d0 	bl	800550c <HAL_GetTick>
 800836c:	4606      	mov	r6, r0
 800836e:	682b      	ldr	r3, [r5, #0]
 8008370:	039f      	lsls	r7, r3, #14
 8008372:	d506      	bpl.n	8008382 <HAL_RCC_OscConfig+0xb6>
 8008374:	f7fd f8ca 	bl	800550c <HAL_GetTick>
 8008378:	1b80      	subs	r0, r0, r6
 800837a:	2864      	cmp	r0, #100	@ 0x64
 800837c:	d9f7      	bls.n	800836e <HAL_RCC_OscConfig+0xa2>
 800837e:	2003      	movs	r0, #3
 8008380:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008382:	6823      	ldr	r3, [r4, #0]
 8008384:	079d      	lsls	r5, r3, #30
 8008386:	d52c      	bpl.n	80083e2 <HAL_RCC_OscConfig+0x116>
 8008388:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 800838c:	688a      	ldr	r2, [r1, #8]
 800838e:	68c9      	ldr	r1, [r1, #12]
 8008390:	f002 020c 	and.w	r2, r2, #12
 8008394:	2a04      	cmp	r2, #4
 8008396:	f000 811f 	beq.w	80085d8 <HAL_RCC_OscConfig+0x30c>
 800839a:	2a0c      	cmp	r2, #12
 800839c:	f000 8117 	beq.w	80085ce <HAL_RCC_OscConfig+0x302>
 80083a0:	68e3      	ldr	r3, [r4, #12]
 80083a2:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80083a6:	b183      	cbz	r3, 80083ca <HAL_RCC_OscConfig+0xfe>
 80083a8:	682b      	ldr	r3, [r5, #0]
 80083aa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80083ae:	602b      	str	r3, [r5, #0]
 80083b0:	f7fd f8ac 	bl	800550c <HAL_GetTick>
 80083b4:	4606      	mov	r6, r0
 80083b6:	682b      	ldr	r3, [r5, #0]
 80083b8:	0558      	lsls	r0, r3, #21
 80083ba:	f100 8233 	bmi.w	8008824 <HAL_RCC_OscConfig+0x558>
 80083be:	f7fd f8a5 	bl	800550c <HAL_GetTick>
 80083c2:	1b80      	subs	r0, r0, r6
 80083c4:	2802      	cmp	r0, #2
 80083c6:	d9f6      	bls.n	80083b6 <HAL_RCC_OscConfig+0xea>
 80083c8:	e7d9      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80083ca:	682b      	ldr	r3, [r5, #0]
 80083cc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80083d0:	602b      	str	r3, [r5, #0]
 80083d2:	f7fd f89b 	bl	800550c <HAL_GetTick>
 80083d6:	4606      	mov	r6, r0
 80083d8:	682b      	ldr	r3, [r5, #0]
 80083da:	0559      	lsls	r1, r3, #21
 80083dc:	f100 822b 	bmi.w	8008836 <HAL_RCC_OscConfig+0x56a>
 80083e0:	6823      	ldr	r3, [r4, #0]
 80083e2:	f013 0f18 	tst.w	r3, #24
 80083e6:	d023      	beq.n	8008430 <HAL_RCC_OscConfig+0x164>
 80083e8:	6962      	ldr	r2, [r4, #20]
 80083ea:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80083ee:	2a00      	cmp	r2, #0
 80083f0:	f000 80ff 	beq.w	80085f2 <HAL_RCC_OscConfig+0x326>
 80083f4:	f013 0f10 	tst.w	r3, #16
 80083f8:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80083fc:	f000 8234 	beq.w	8008868 <HAL_RCC_OscConfig+0x59c>
 8008400:	079a      	lsls	r2, r3, #30
 8008402:	f100 81a3 	bmi.w	800874c <HAL_RCC_OscConfig+0x480>
 8008406:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800840a:	f043 0301 	orr.w	r3, r3, #1
 800840e:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008412:	f7fd f87b 	bl	800550c <HAL_GetTick>
 8008416:	4606      	mov	r6, r0
 8008418:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800841c:	079b      	lsls	r3, r3, #30
 800841e:	f100 8195 	bmi.w	800874c <HAL_RCC_OscConfig+0x480>
 8008422:	f7fd f873 	bl	800550c <HAL_GetTick>
 8008426:	1b80      	subs	r0, r0, r6
 8008428:	2802      	cmp	r0, #2
 800842a:	d9f5      	bls.n	8008418 <HAL_RCC_OscConfig+0x14c>
 800842c:	e7a7      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 800842e:	6823      	ldr	r3, [r4, #0]
 8008430:	0758      	lsls	r0, r3, #29
 8008432:	d422      	bmi.n	800847a <HAL_RCC_OscConfig+0x1ae>
 8008434:	0658      	lsls	r0, r3, #25
 8008436:	d51b      	bpl.n	8008470 <HAL_RCC_OscConfig+0x1a4>
 8008438:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800843a:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 800843e:	2b00      	cmp	r3, #0
 8008440:	f000 80b1 	beq.w	80085a6 <HAL_RCC_OscConfig+0x2da>
 8008444:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8008448:	f043 0301 	orr.w	r3, r3, #1
 800844c:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 8008450:	f7fd f85c 	bl	800550c <HAL_GetTick>
 8008454:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8008458:	0799      	lsls	r1, r3, #30
 800845a:	4606      	mov	r6, r0
 800845c:	d408      	bmi.n	8008470 <HAL_RCC_OscConfig+0x1a4>
 800845e:	f7fd f855 	bl	800550c <HAL_GetTick>
 8008462:	1b80      	subs	r0, r0, r6
 8008464:	2802      	cmp	r0, #2
 8008466:	d88a      	bhi.n	800837e <HAL_RCC_OscConfig+0xb2>
 8008468:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 800846c:	0799      	lsls	r1, r3, #30
 800846e:	d5f6      	bpl.n	800845e <HAL_RCC_OscConfig+0x192>
 8008470:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008472:	2b00      	cmp	r3, #0
 8008474:	d177      	bne.n	8008566 <HAL_RCC_OscConfig+0x29a>
 8008476:	2000      	movs	r0, #0
 8008478:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800847a:	4dae      	ldr	r5, [pc, #696]	@ (8008734 <HAL_RCC_OscConfig+0x468>)
 800847c:	682b      	ldr	r3, [r5, #0]
 800847e:	05d9      	lsls	r1, r3, #23
 8008480:	f140 80db 	bpl.w	800863a <HAL_RCC_OscConfig+0x36e>
 8008484:	68a3      	ldr	r3, [r4, #8]
 8008486:	2b01      	cmp	r3, #1
 8008488:	f000 812f 	beq.w	80086ea <HAL_RCC_OscConfig+0x41e>
 800848c:	2b05      	cmp	r3, #5
 800848e:	f000 821a 	beq.w	80088c6 <HAL_RCC_OscConfig+0x5fa>
 8008492:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008496:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 800849a:	f022 0201 	bic.w	r2, r2, #1
 800849e:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 80084a2:	f8d5 2090 	ldr.w	r2, [r5, #144]	@ 0x90
 80084a6:	f022 0204 	bic.w	r2, r2, #4
 80084aa:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 80084ae:	2b00      	cmp	r3, #0
 80084b0:	f040 8123 	bne.w	80086fa <HAL_RCC_OscConfig+0x42e>
 80084b4:	f7fd f82a 	bl	800550c <HAL_GetTick>
 80084b8:	4606      	mov	r6, r0
 80084ba:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 80084be:	079f      	lsls	r7, r3, #30
 80084c0:	f140 8136 	bpl.w	8008730 <HAL_RCC_OscConfig+0x464>
 80084c4:	f7fd f822 	bl	800550c <HAL_GetTick>
 80084c8:	f241 3388 	movw	r3, #5000	@ 0x1388
 80084cc:	1b80      	subs	r0, r0, r6
 80084ce:	4298      	cmp	r0, r3
 80084d0:	d9f3      	bls.n	80084ba <HAL_RCC_OscConfig+0x1ee>
 80084d2:	e754      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80084d4:	f002 0203 	and.w	r2, r2, #3
 80084d8:	2a01      	cmp	r2, #1
 80084da:	f47f af0a 	bne.w	80082f2 <HAL_RCC_OscConfig+0x26>
 80084de:	69e3      	ldr	r3, [r4, #28]
 80084e0:	2b00      	cmp	r3, #0
 80084e2:	d03e      	beq.n	8008562 <HAL_RCC_OscConfig+0x296>
 80084e4:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80084e8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 80084ea:	682b      	ldr	r3, [r5, #0]
 80084ec:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80084f0:	2bb0      	cmp	r3, #176	@ 0xb0
 80084f2:	bf28      	it	cs
 80084f4:	23b0      	movcs	r3, #176	@ 0xb0
 80084f6:	4298      	cmp	r0, r3
 80084f8:	f240 81a4 	bls.w	8008844 <HAL_RCC_OscConfig+0x578>
 80084fc:	f7ff fe36 	bl	800816c <RCC_SetFlashLatencyFromMSIRange>
 8008500:	bb78      	cbnz	r0, 8008562 <HAL_RCC_OscConfig+0x296>
 8008502:	682b      	ldr	r3, [r5, #0]
 8008504:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008506:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800850a:	4313      	orrs	r3, r2
 800850c:	602b      	str	r3, [r5, #0]
 800850e:	686b      	ldr	r3, [r5, #4]
 8008510:	6a22      	ldr	r2, [r4, #32]
 8008512:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008516:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800851a:	606b      	str	r3, [r5, #4]
 800851c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008520:	6893      	ldr	r3, [r2, #8]
 8008522:	f013 030c 	ands.w	r3, r3, #12
 8008526:	f000 81c3 	beq.w	80088b0 <HAL_RCC_OscConfig+0x5e4>
 800852a:	2b04      	cmp	r3, #4
 800852c:	f000 8219 	beq.w	8008962 <HAL_RCC_OscConfig+0x696>
 8008530:	2b08      	cmp	r3, #8
 8008532:	f000 820e 	beq.w	8008952 <HAL_RCC_OscConfig+0x686>
 8008536:	f7ff fe8f 	bl	8008258 <HAL_RCC_GetSysClockFreq.part.0>
 800853a:	4603      	mov	r3, r0
 800853c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008540:	487d      	ldr	r0, [pc, #500]	@ (8008738 <HAL_RCC_OscConfig+0x46c>)
 8008542:	6892      	ldr	r2, [r2, #8]
 8008544:	497d      	ldr	r1, [pc, #500]	@ (800873c <HAL_RCC_OscConfig+0x470>)
 8008546:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800854a:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800854e:	4a7c      	ldr	r2, [pc, #496]	@ (8008740 <HAL_RCC_OscConfig+0x474>)
 8008550:	fbb3 f3f0 	udiv	r3, r3, r0
 8008554:	6810      	ldr	r0, [r2, #0]
 8008556:	600b      	str	r3, [r1, #0]
 8008558:	f7fc fa38 	bl	80049cc <HAL_InitTick>
 800855c:	2800      	cmp	r0, #0
 800855e:	f43f aee6 	beq.w	800832e <HAL_RCC_OscConfig+0x62>
 8008562:	2001      	movs	r0, #1
 8008564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008566:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 800856a:	2b02      	cmp	r3, #2
 800856c:	68aa      	ldr	r2, [r5, #8]
 800856e:	68e9      	ldr	r1, [r5, #12]
 8008570:	f002 020c 	and.w	r2, r2, #12
 8008574:	d071      	beq.n	800865a <HAL_RCC_OscConfig+0x38e>
 8008576:	2a0c      	cmp	r2, #12
 8008578:	d0f3      	beq.n	8008562 <HAL_RCC_OscConfig+0x296>
 800857a:	682b      	ldr	r3, [r5, #0]
 800857c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8008580:	602b      	str	r3, [r5, #0]
 8008582:	f7fc ffc3 	bl	800550c <HAL_GetTick>
 8008586:	4604      	mov	r4, r0
 8008588:	e005      	b.n	8008596 <HAL_RCC_OscConfig+0x2ca>
 800858a:	f7fc ffbf 	bl	800550c <HAL_GetTick>
 800858e:	1b00      	subs	r0, r0, r4
 8008590:	2802      	cmp	r0, #2
 8008592:	f63f aef4 	bhi.w	800837e <HAL_RCC_OscConfig+0xb2>
 8008596:	682b      	ldr	r3, [r5, #0]
 8008598:	019b      	lsls	r3, r3, #6
 800859a:	d4f6      	bmi.n	800858a <HAL_RCC_OscConfig+0x2be>
 800859c:	68ea      	ldr	r2, [r5, #12]
 800859e:	4b69      	ldr	r3, [pc, #420]	@ (8008744 <HAL_RCC_OscConfig+0x478>)
 80085a0:	4013      	ands	r3, r2
 80085a2:	60eb      	str	r3, [r5, #12]
 80085a4:	e767      	b.n	8008476 <HAL_RCC_OscConfig+0x1aa>
 80085a6:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80085aa:	f023 0301 	bic.w	r3, r3, #1
 80085ae:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 80085b2:	f7fc ffab 	bl	800550c <HAL_GetTick>
 80085b6:	4606      	mov	r6, r0
 80085b8:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80085bc:	079a      	lsls	r2, r3, #30
 80085be:	f57f af57 	bpl.w	8008470 <HAL_RCC_OscConfig+0x1a4>
 80085c2:	f7fc ffa3 	bl	800550c <HAL_GetTick>
 80085c6:	1b80      	subs	r0, r0, r6
 80085c8:	2802      	cmp	r0, #2
 80085ca:	d9f5      	bls.n	80085b8 <HAL_RCC_OscConfig+0x2ec>
 80085cc:	e6d7      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80085ce:	f001 0103 	and.w	r1, r1, #3
 80085d2:	2902      	cmp	r1, #2
 80085d4:	f47f aee4 	bne.w	80083a0 <HAL_RCC_OscConfig+0xd4>
 80085d8:	68e2      	ldr	r2, [r4, #12]
 80085da:	2a00      	cmp	r2, #0
 80085dc:	d0c1      	beq.n	8008562 <HAL_RCC_OscConfig+0x296>
 80085de:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 80085e2:	6920      	ldr	r0, [r4, #16]
 80085e4:	684a      	ldr	r2, [r1, #4]
 80085e6:	f022 42fe 	bic.w	r2, r2, #2130706432	@ 0x7f000000
 80085ea:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80085ee:	604a      	str	r2, [r1, #4]
 80085f0:	e6f7      	b.n	80083e2 <HAL_RCC_OscConfig+0x116>
 80085f2:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80085f6:	f023 0304 	bic.w	r3, r3, #4
 80085fa:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80085fe:	f7fc ff85 	bl	800550c <HAL_GetTick>
 8008602:	4606      	mov	r6, r0
 8008604:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008608:	071b      	lsls	r3, r3, #28
 800860a:	f100 8104 	bmi.w	8008816 <HAL_RCC_OscConfig+0x54a>
 800860e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008612:	f023 0301 	bic.w	r3, r3, #1
 8008616:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800861a:	f7fc ff77 	bl	800550c <HAL_GetTick>
 800861e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008622:	4605      	mov	r5, r0
 8008624:	f8d6 3094 	ldr.w	r3, [r6, #148]	@ 0x94
 8008628:	079f      	lsls	r7, r3, #30
 800862a:	f57f af00 	bpl.w	800842e <HAL_RCC_OscConfig+0x162>
 800862e:	f7fc ff6d 	bl	800550c <HAL_GetTick>
 8008632:	1b40      	subs	r0, r0, r5
 8008634:	2802      	cmp	r0, #2
 8008636:	d9f5      	bls.n	8008624 <HAL_RCC_OscConfig+0x358>
 8008638:	e6a1      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 800863a:	f7ff fd7f 	bl	800813c <HAL_PWR_EnableBkUpAccess>
 800863e:	f7fc ff65 	bl	800550c <HAL_GetTick>
 8008642:	4606      	mov	r6, r0
 8008644:	e005      	b.n	8008652 <HAL_RCC_OscConfig+0x386>
 8008646:	f7fc ff61 	bl	800550c <HAL_GetTick>
 800864a:	1b80      	subs	r0, r0, r6
 800864c:	2802      	cmp	r0, #2
 800864e:	f63f ae96 	bhi.w	800837e <HAL_RCC_OscConfig+0xb2>
 8008652:	682b      	ldr	r3, [r5, #0]
 8008654:	05da      	lsls	r2, r3, #23
 8008656:	d5f6      	bpl.n	8008646 <HAL_RCC_OscConfig+0x37a>
 8008658:	e714      	b.n	8008484 <HAL_RCC_OscConfig+0x1b8>
 800865a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800865c:	f001 0303 	and.w	r3, r1, #3
 8008660:	4283      	cmp	r3, r0
 8008662:	f000 813f 	beq.w	80088e4 <HAL_RCC_OscConfig+0x618>
 8008666:	2a0c      	cmp	r2, #12
 8008668:	f43f af7b 	beq.w	8008562 <HAL_RCC_OscConfig+0x296>
 800866c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008670:	682b      	ldr	r3, [r5, #0]
 8008672:	015b      	lsls	r3, r3, #5
 8008674:	f53f af75 	bmi.w	8008562 <HAL_RCC_OscConfig+0x296>
 8008678:	682b      	ldr	r3, [r5, #0]
 800867a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800867e:	602b      	str	r3, [r5, #0]
 8008680:	f7fc ff44 	bl	800550c <HAL_GetTick>
 8008684:	4606      	mov	r6, r0
 8008686:	e005      	b.n	8008694 <HAL_RCC_OscConfig+0x3c8>
 8008688:	f7fc ff40 	bl	800550c <HAL_GetTick>
 800868c:	1b80      	subs	r0, r0, r6
 800868e:	2802      	cmp	r0, #2
 8008690:	f63f ae75 	bhi.w	800837e <HAL_RCC_OscConfig+0xb2>
 8008694:	682b      	ldr	r3, [r5, #0]
 8008696:	019f      	lsls	r7, r3, #6
 8008698:	d4f6      	bmi.n	8008688 <HAL_RCC_OscConfig+0x3bc>
 800869a:	e9d4 320c 	ldrd	r3, r2, [r4, #48]	@ 0x30
 800869e:	68e9      	ldr	r1, [r5, #12]
 80086a0:	4313      	orrs	r3, r2
 80086a2:	4a29      	ldr	r2, [pc, #164]	@ (8008748 <HAL_RCC_OscConfig+0x47c>)
 80086a4:	400a      	ands	r2, r1
 80086a6:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 80086a8:	4313      	orrs	r3, r2
 80086aa:	430b      	orrs	r3, r1
 80086ac:	e9d4 0110 	ldrd	r0, r1, [r4, #64]	@ 0x40
 80086b0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80086b2:	4303      	orrs	r3, r0
 80086b4:	430b      	orrs	r3, r1
 80086b6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80086ba:	60eb      	str	r3, [r5, #12]
 80086bc:	682b      	ldr	r3, [r5, #0]
 80086be:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80086c2:	602b      	str	r3, [r5, #0]
 80086c4:	68eb      	ldr	r3, [r5, #12]
 80086c6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80086ca:	60eb      	str	r3, [r5, #12]
 80086cc:	f7fc ff1e 	bl	800550c <HAL_GetTick>
 80086d0:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 80086d4:	4604      	mov	r4, r0
 80086d6:	682b      	ldr	r3, [r5, #0]
 80086d8:	0198      	lsls	r0, r3, #6
 80086da:	f53f aecc 	bmi.w	8008476 <HAL_RCC_OscConfig+0x1aa>
 80086de:	f7fc ff15 	bl	800550c <HAL_GetTick>
 80086e2:	1b00      	subs	r0, r0, r4
 80086e4:	2802      	cmp	r0, #2
 80086e6:	d9f6      	bls.n	80086d6 <HAL_RCC_OscConfig+0x40a>
 80086e8:	e649      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80086ea:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80086ee:	f8d2 3090 	ldr.w	r3, [r2, #144]	@ 0x90
 80086f2:	f043 0301 	orr.w	r3, r3, #1
 80086f6:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80086fa:	f7fc ff07 	bl	800550c <HAL_GetTick>
 80086fe:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008702:	4605      	mov	r5, r0
 8008704:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 8008708:	079b      	lsls	r3, r3, #30
 800870a:	d411      	bmi.n	8008730 <HAL_RCC_OscConfig+0x464>
 800870c:	f7fc fefe 	bl	800550c <HAL_GetTick>
 8008710:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008714:	1b40      	subs	r0, r0, r5
 8008716:	4298      	cmp	r0, r3
 8008718:	d9f4      	bls.n	8008704 <HAL_RCC_OscConfig+0x438>
 800871a:	e630      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 800871c:	f001 0103 	and.w	r1, r1, #3
 8008720:	2903      	cmp	r1, #3
 8008722:	f47f ae13 	bne.w	800834c <HAL_RCC_OscConfig+0x80>
 8008726:	6862      	ldr	r2, [r4, #4]
 8008728:	2a00      	cmp	r2, #0
 800872a:	f47f ae2b 	bne.w	8008384 <HAL_RCC_OscConfig+0xb8>
 800872e:	e718      	b.n	8008562 <HAL_RCC_OscConfig+0x296>
 8008730:	6823      	ldr	r3, [r4, #0]
 8008732:	e67f      	b.n	8008434 <HAL_RCC_OscConfig+0x168>
 8008734:	58000400 	.word	0x58000400
 8008738:	080180f4 	.word	0x080180f4
 800873c:	20000034 	.word	0x20000034
 8008740:	2000003c 	.word	0x2000003c
 8008744:	eefefffc 	.word	0xeefefffc
 8008748:	11c1808c 	.word	0x11c1808c
 800874c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008750:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008754:	f043 0304 	orr.w	r3, r3, #4
 8008758:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800875c:	f7fc fed6 	bl	800550c <HAL_GetTick>
 8008760:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008764:	071f      	lsls	r7, r3, #28
 8008766:	4606      	mov	r6, r0
 8008768:	d409      	bmi.n	800877e <HAL_RCC_OscConfig+0x4b2>
 800876a:	f7fc fecf 	bl	800550c <HAL_GetTick>
 800876e:	1b80      	subs	r0, r0, r6
 8008770:	2803      	cmp	r0, #3
 8008772:	f63f ae04 	bhi.w	800837e <HAL_RCC_OscConfig+0xb2>
 8008776:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800877a:	071f      	lsls	r7, r3, #28
 800877c:	d5f5      	bpl.n	800876a <HAL_RCC_OscConfig+0x49e>
 800877e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008782:	69a2      	ldr	r2, [r4, #24]
 8008784:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8008788:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800878c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008790:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8008794:	f023 0301 	bic.w	r3, r3, #1
 8008798:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800879c:	f7fc feb6 	bl	800550c <HAL_GetTick>
 80087a0:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80087a4:	4605      	mov	r5, r0
 80087a6:	f8d6 3094 	ldr.w	r3, [r6, #148]	@ 0x94
 80087aa:	0798      	lsls	r0, r3, #30
 80087ac:	f57f ae3f 	bpl.w	800842e <HAL_RCC_OscConfig+0x162>
 80087b0:	f7fc feac 	bl	800550c <HAL_GetTick>
 80087b4:	1b40      	subs	r0, r0, r5
 80087b6:	2802      	cmp	r0, #2
 80087b8:	d9f5      	bls.n	80087a6 <HAL_RCC_OscConfig+0x4da>
 80087ba:	e5e0      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80087bc:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80087c0:	6813      	ldr	r3, [r2, #0]
 80087c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80087c6:	6013      	str	r3, [r2, #0]
 80087c8:	f7fc fea0 	bl	800550c <HAL_GetTick>
 80087cc:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80087d0:	4605      	mov	r5, r0
 80087d2:	6833      	ldr	r3, [r6, #0]
 80087d4:	039b      	lsls	r3, r3, #14
 80087d6:	f53f add4 	bmi.w	8008382 <HAL_RCC_OscConfig+0xb6>
 80087da:	f7fc fe97 	bl	800550c <HAL_GetTick>
 80087de:	1b40      	subs	r0, r0, r5
 80087e0:	2864      	cmp	r0, #100	@ 0x64
 80087e2:	d9f6      	bls.n	80087d2 <HAL_RCC_OscConfig+0x506>
 80087e4:	e5cb      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80087e6:	682b      	ldr	r3, [r5, #0]
 80087e8:	f023 0301 	bic.w	r3, r3, #1
 80087ec:	602b      	str	r3, [r5, #0]
 80087ee:	f7fc fe8d 	bl	800550c <HAL_GetTick>
 80087f2:	4606      	mov	r6, r0
 80087f4:	682b      	ldr	r3, [r5, #0]
 80087f6:	0799      	lsls	r1, r3, #30
 80087f8:	f57f ad99 	bpl.w	800832e <HAL_RCC_OscConfig+0x62>
 80087fc:	f7fc fe86 	bl	800550c <HAL_GetTick>
 8008800:	1b80      	subs	r0, r0, r6
 8008802:	2802      	cmp	r0, #2
 8008804:	d9f6      	bls.n	80087f4 <HAL_RCC_OscConfig+0x528>
 8008806:	e5ba      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 8008808:	f7fc fe80 	bl	800550c <HAL_GetTick>
 800880c:	1b80      	subs	r0, r0, r6
 800880e:	2802      	cmp	r0, #2
 8008810:	f67f ad7c 	bls.w	800830c <HAL_RCC_OscConfig+0x40>
 8008814:	e5b3      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 8008816:	f7fc fe79 	bl	800550c <HAL_GetTick>
 800881a:	1b80      	subs	r0, r0, r6
 800881c:	2803      	cmp	r0, #3
 800881e:	f67f aef1 	bls.w	8008604 <HAL_RCC_OscConfig+0x338>
 8008822:	e5ac      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 8008824:	686b      	ldr	r3, [r5, #4]
 8008826:	6922      	ldr	r2, [r4, #16]
 8008828:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 800882c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008830:	606b      	str	r3, [r5, #4]
 8008832:	6823      	ldr	r3, [r4, #0]
 8008834:	e5d5      	b.n	80083e2 <HAL_RCC_OscConfig+0x116>
 8008836:	f7fc fe69 	bl	800550c <HAL_GetTick>
 800883a:	1b80      	subs	r0, r0, r6
 800883c:	2802      	cmp	r0, #2
 800883e:	f67f adcb 	bls.w	80083d8 <HAL_RCC_OscConfig+0x10c>
 8008842:	e59c      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 8008844:	682b      	ldr	r3, [r5, #0]
 8008846:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800884a:	4303      	orrs	r3, r0
 800884c:	602b      	str	r3, [r5, #0]
 800884e:	686b      	ldr	r3, [r5, #4]
 8008850:	6a22      	ldr	r2, [r4, #32]
 8008852:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008856:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800885a:	606b      	str	r3, [r5, #4]
 800885c:	f7ff fc86 	bl	800816c <RCC_SetFlashLatencyFromMSIRange>
 8008860:	2800      	cmp	r0, #0
 8008862:	f43f ae5b 	beq.w	800851c <HAL_RCC_OscConfig+0x250>
 8008866:	e67c      	b.n	8008562 <HAL_RCC_OscConfig+0x296>
 8008868:	f043 0301 	orr.w	r3, r3, #1
 800886c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8008870:	f7fc fe4c 	bl	800550c <HAL_GetTick>
 8008874:	4606      	mov	r6, r0
 8008876:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800887a:	0799      	lsls	r1, r3, #30
 800887c:	d405      	bmi.n	800888a <HAL_RCC_OscConfig+0x5be>
 800887e:	f7fc fe45 	bl	800550c <HAL_GetTick>
 8008882:	1b80      	subs	r0, r0, r6
 8008884:	2802      	cmp	r0, #2
 8008886:	d9f6      	bls.n	8008876 <HAL_RCC_OscConfig+0x5aa>
 8008888:	e579      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 800888a:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800888e:	f023 0304 	bic.w	r3, r3, #4
 8008892:	f04f 47b0 	mov.w	r7, #1476395008	@ 0x58000000
 8008896:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 800889a:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800889e:	071a      	lsls	r2, r3, #28
 80088a0:	f57f adc5 	bpl.w	800842e <HAL_RCC_OscConfig+0x162>
 80088a4:	f7fc fe32 	bl	800550c <HAL_GetTick>
 80088a8:	1b80      	subs	r0, r0, r6
 80088aa:	2803      	cmp	r0, #3
 80088ac:	d9f5      	bls.n	800889a <HAL_RCC_OscConfig+0x5ce>
 80088ae:	e566      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 80088b0:	6813      	ldr	r3, [r2, #0]
 80088b2:	4a2e      	ldr	r2, [pc, #184]	@ (800896c <HAL_RCC_OscConfig+0x6a0>)
 80088b4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80088b8:	2bb0      	cmp	r3, #176	@ 0xb0
 80088ba:	bf28      	it	cs
 80088bc:	23b0      	movcs	r3, #176	@ 0xb0
 80088be:	091b      	lsrs	r3, r3, #4
 80088c0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80088c4:	e63a      	b.n	800853c <HAL_RCC_OscConfig+0x270>
 80088c6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80088ca:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 80088ce:	f042 0204 	orr.w	r2, r2, #4
 80088d2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80088d6:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 80088da:	f042 0201 	orr.w	r2, r2, #1
 80088de:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80088e2:	e70a      	b.n	80086fa <HAL_RCC_OscConfig+0x42e>
 80088e4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80088e6:	f001 0370 	and.w	r3, r1, #112	@ 0x70
 80088ea:	4283      	cmp	r3, r0
 80088ec:	f47f aebb 	bne.w	8008666 <HAL_RCC_OscConfig+0x39a>
 80088f0:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 80088f2:	f3c1 2306 	ubfx	r3, r1, #8, #7
 80088f6:	4283      	cmp	r3, r0
 80088f8:	f47f aeb5 	bne.w	8008666 <HAL_RCC_OscConfig+0x39a>
 80088fc:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80088fe:	f401 1378 	and.w	r3, r1, #4063232	@ 0x3e0000
 8008902:	4283      	cmp	r3, r0
 8008904:	f47f aeaf 	bne.w	8008666 <HAL_RCC_OscConfig+0x39a>
 8008908:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800890a:	f001 6360 	and.w	r3, r1, #234881024	@ 0xe000000
 800890e:	4283      	cmp	r3, r0
 8008910:	f47f aea9 	bne.w	8008666 <HAL_RCC_OscConfig+0x39a>
 8008914:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8008916:	f001 4160 	and.w	r1, r1, #3758096384	@ 0xe0000000
 800891a:	4299      	cmp	r1, r3
 800891c:	f47f aea3 	bne.w	8008666 <HAL_RCC_OscConfig+0x39a>
 8008920:	682b      	ldr	r3, [r5, #0]
 8008922:	0199      	lsls	r1, r3, #6
 8008924:	f53f ada7 	bmi.w	8008476 <HAL_RCC_OscConfig+0x1aa>
 8008928:	682b      	ldr	r3, [r5, #0]
 800892a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800892e:	602b      	str	r3, [r5, #0]
 8008930:	68eb      	ldr	r3, [r5, #12]
 8008932:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008936:	60eb      	str	r3, [r5, #12]
 8008938:	f7fc fde8 	bl	800550c <HAL_GetTick>
 800893c:	4604      	mov	r4, r0
 800893e:	682b      	ldr	r3, [r5, #0]
 8008940:	019a      	lsls	r2, r3, #6
 8008942:	f53f ad98 	bmi.w	8008476 <HAL_RCC_OscConfig+0x1aa>
 8008946:	f7fc fde1 	bl	800550c <HAL_GetTick>
 800894a:	1b03      	subs	r3, r0, r4
 800894c:	2b02      	cmp	r3, #2
 800894e:	d9f6      	bls.n	800893e <HAL_RCC_OscConfig+0x672>
 8008950:	e515      	b.n	800837e <HAL_RCC_OscConfig+0xb2>
 8008952:	6811      	ldr	r1, [r2, #0]
 8008954:	4a06      	ldr	r2, [pc, #24]	@ (8008970 <HAL_RCC_OscConfig+0x6a4>)
 8008956:	4b07      	ldr	r3, [pc, #28]	@ (8008974 <HAL_RCC_OscConfig+0x6a8>)
 8008958:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 800895c:	bf08      	it	eq
 800895e:	4613      	moveq	r3, r2
 8008960:	e5ec      	b.n	800853c <HAL_RCC_OscConfig+0x270>
 8008962:	4b04      	ldr	r3, [pc, #16]	@ (8008974 <HAL_RCC_OscConfig+0x6a8>)
 8008964:	e5ea      	b.n	800853c <HAL_RCC_OscConfig+0x270>
 8008966:	2001      	movs	r0, #1
 8008968:	4770      	bx	lr
 800896a:	bf00      	nop
 800896c:	08018094 	.word	0x08018094
 8008970:	01e84800 	.word	0x01e84800
 8008974:	00f42400 	.word	0x00f42400

08008978 <HAL_RCC_ClockConfig>:
 8008978:	2800      	cmp	r0, #0
 800897a:	f000 8130 	beq.w	8008bde <HAL_RCC_ClockConfig+0x266>
 800897e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008982:	4e9d      	ldr	r6, [pc, #628]	@ (8008bf8 <HAL_RCC_ClockConfig+0x280>)
 8008984:	6833      	ldr	r3, [r6, #0]
 8008986:	f003 0307 	and.w	r3, r3, #7
 800898a:	428b      	cmp	r3, r1
 800898c:	460c      	mov	r4, r1
 800898e:	4605      	mov	r5, r0
 8008990:	f0c0 80d9 	bcc.w	8008b46 <HAL_RCC_ClockConfig+0x1ce>
 8008994:	682b      	ldr	r3, [r5, #0]
 8008996:	079a      	lsls	r2, r3, #30
 8008998:	d472      	bmi.n	8008a80 <HAL_RCC_ClockConfig+0x108>
 800899a:	0698      	lsls	r0, r3, #26
 800899c:	f100 8082 	bmi.w	8008aa4 <HAL_RCC_ClockConfig+0x12c>
 80089a0:	065a      	lsls	r2, r3, #25
 80089a2:	f100 8094 	bmi.w	8008ace <HAL_RCC_ClockConfig+0x156>
 80089a6:	0758      	lsls	r0, r3, #29
 80089a8:	f100 80a7 	bmi.w	8008afa <HAL_RCC_ClockConfig+0x182>
 80089ac:	071a      	lsls	r2, r3, #28
 80089ae:	f100 80b6 	bmi.w	8008b1e <HAL_RCC_ClockConfig+0x1a6>
 80089b2:	07df      	lsls	r7, r3, #31
 80089b4:	d529      	bpl.n	8008a0a <HAL_RCC_ClockConfig+0x92>
 80089b6:	686b      	ldr	r3, [r5, #4]
 80089b8:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80089bc:	2b02      	cmp	r3, #2
 80089be:	6812      	ldr	r2, [r2, #0]
 80089c0:	f000 8106 	beq.w	8008bd0 <HAL_RCC_ClockConfig+0x258>
 80089c4:	2b03      	cmp	r3, #3
 80089c6:	f000 80fd 	beq.w	8008bc4 <HAL_RCC_ClockConfig+0x24c>
 80089ca:	2b00      	cmp	r3, #0
 80089cc:	f040 8104 	bne.w	8008bd8 <HAL_RCC_ClockConfig+0x260>
 80089d0:	0791      	lsls	r1, r2, #30
 80089d2:	f140 80fa 	bpl.w	8008bca <HAL_RCC_ClockConfig+0x252>
 80089d6:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80089da:	f241 3888 	movw	r8, #5000	@ 0x1388
 80089de:	68b2      	ldr	r2, [r6, #8]
 80089e0:	f022 0203 	bic.w	r2, r2, #3
 80089e4:	4313      	orrs	r3, r2
 80089e6:	60b3      	str	r3, [r6, #8]
 80089e8:	f7fc fd90 	bl	800550c <HAL_GetTick>
 80089ec:	4607      	mov	r7, r0
 80089ee:	e005      	b.n	80089fc <HAL_RCC_ClockConfig+0x84>
 80089f0:	f7fc fd8c 	bl	800550c <HAL_GetTick>
 80089f4:	1bc0      	subs	r0, r0, r7
 80089f6:	4540      	cmp	r0, r8
 80089f8:	f200 80b8 	bhi.w	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 80089fc:	68b3      	ldr	r3, [r6, #8]
 80089fe:	686a      	ldr	r2, [r5, #4]
 8008a00:	f003 030c 	and.w	r3, r3, #12
 8008a04:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008a08:	d1f2      	bne.n	80089f0 <HAL_RCC_ClockConfig+0x78>
 8008a0a:	4d7b      	ldr	r5, [pc, #492]	@ (8008bf8 <HAL_RCC_ClockConfig+0x280>)
 8008a0c:	682b      	ldr	r3, [r5, #0]
 8008a0e:	f003 0307 	and.w	r3, r3, #7
 8008a12:	42a3      	cmp	r3, r4
 8008a14:	d913      	bls.n	8008a3e <HAL_RCC_ClockConfig+0xc6>
 8008a16:	682b      	ldr	r3, [r5, #0]
 8008a18:	f023 0307 	bic.w	r3, r3, #7
 8008a1c:	4323      	orrs	r3, r4
 8008a1e:	602b      	str	r3, [r5, #0]
 8008a20:	f7fc fd74 	bl	800550c <HAL_GetTick>
 8008a24:	4606      	mov	r6, r0
 8008a26:	e005      	b.n	8008a34 <HAL_RCC_ClockConfig+0xbc>
 8008a28:	f7fc fd70 	bl	800550c <HAL_GetTick>
 8008a2c:	1b80      	subs	r0, r0, r6
 8008a2e:	2802      	cmp	r0, #2
 8008a30:	f200 809c 	bhi.w	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 8008a34:	682b      	ldr	r3, [r5, #0]
 8008a36:	f003 0307 	and.w	r3, r3, #7
 8008a3a:	42a3      	cmp	r3, r4
 8008a3c:	d1f4      	bne.n	8008a28 <HAL_RCC_ClockConfig+0xb0>
 8008a3e:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008a42:	6893      	ldr	r3, [r2, #8]
 8008a44:	f013 030c 	ands.w	r3, r3, #12
 8008a48:	f000 80b1 	beq.w	8008bae <HAL_RCC_ClockConfig+0x236>
 8008a4c:	2b04      	cmp	r3, #4
 8008a4e:	f000 80d0 	beq.w	8008bf2 <HAL_RCC_ClockConfig+0x27a>
 8008a52:	2b08      	cmp	r3, #8
 8008a54:	f000 80c5 	beq.w	8008be2 <HAL_RCC_ClockConfig+0x26a>
 8008a58:	f7ff fbfe 	bl	8008258 <HAL_RCC_GetSysClockFreq.part.0>
 8008a5c:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008a60:	4a66      	ldr	r2, [pc, #408]	@ (8008bfc <HAL_RCC_ClockConfig+0x284>)
 8008a62:	689b      	ldr	r3, [r3, #8]
 8008a64:	4966      	ldr	r1, [pc, #408]	@ (8008c00 <HAL_RCC_ClockConfig+0x288>)
 8008a66:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008a6a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008a6e:	fbb0 f0f3 	udiv	r0, r0, r3
 8008a72:	6010      	str	r0, [r2, #0]
 8008a74:	f7fc fd50 	bl	8005518 <HAL_GetTickPrio>
 8008a78:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008a7c:	f7fb bfa6 	b.w	80049cc <HAL_InitTick>
 8008a80:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008a84:	68aa      	ldr	r2, [r5, #8]
 8008a86:	68b3      	ldr	r3, [r6, #8]
 8008a88:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008a8c:	4313      	orrs	r3, r2
 8008a8e:	60b3      	str	r3, [r6, #8]
 8008a90:	f7fc fd3c 	bl	800550c <HAL_GetTick>
 8008a94:	4607      	mov	r7, r0
 8008a96:	68b3      	ldr	r3, [r6, #8]
 8008a98:	03db      	lsls	r3, r3, #15
 8008a9a:	d56a      	bpl.n	8008b72 <HAL_RCC_ClockConfig+0x1fa>
 8008a9c:	682b      	ldr	r3, [r5, #0]
 8008a9e:	0698      	lsls	r0, r3, #26
 8008aa0:	f57f af7e 	bpl.w	80089a0 <HAL_RCC_ClockConfig+0x28>
 8008aa4:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008aa8:	696a      	ldr	r2, [r5, #20]
 8008aaa:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008aae:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008ab2:	4313      	orrs	r3, r2
 8008ab4:	f8c6 3108 	str.w	r3, [r6, #264]	@ 0x108
 8008ab8:	f7fc fd28 	bl	800550c <HAL_GetTick>
 8008abc:	4607      	mov	r7, r0
 8008abe:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008ac2:	0399      	lsls	r1, r3, #14
 8008ac4:	d55b      	bpl.n	8008b7e <HAL_RCC_ClockConfig+0x206>
 8008ac6:	682b      	ldr	r3, [r5, #0]
 8008ac8:	065a      	lsls	r2, r3, #25
 8008aca:	f57f af6c 	bpl.w	80089a6 <HAL_RCC_ClockConfig+0x2e>
 8008ace:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008ad2:	69aa      	ldr	r2, [r5, #24]
 8008ad4:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008ad8:	f023 030f 	bic.w	r3, r3, #15
 8008adc:	ea43 1312 	orr.w	r3, r3, r2, lsr #4
 8008ae0:	f8c6 3108 	str.w	r3, [r6, #264]	@ 0x108
 8008ae4:	f7fc fd12 	bl	800550c <HAL_GetTick>
 8008ae8:	4607      	mov	r7, r0
 8008aea:	f8d6 3108 	ldr.w	r3, [r6, #264]	@ 0x108
 8008aee:	03db      	lsls	r3, r3, #15
 8008af0:	d54b      	bpl.n	8008b8a <HAL_RCC_ClockConfig+0x212>
 8008af2:	682b      	ldr	r3, [r5, #0]
 8008af4:	0758      	lsls	r0, r3, #29
 8008af6:	f57f af59 	bpl.w	80089ac <HAL_RCC_ClockConfig+0x34>
 8008afa:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008afe:	68ea      	ldr	r2, [r5, #12]
 8008b00:	68b3      	ldr	r3, [r6, #8]
 8008b02:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8008b06:	4313      	orrs	r3, r2
 8008b08:	60b3      	str	r3, [r6, #8]
 8008b0a:	f7fc fcff 	bl	800550c <HAL_GetTick>
 8008b0e:	4607      	mov	r7, r0
 8008b10:	68b3      	ldr	r3, [r6, #8]
 8008b12:	0399      	lsls	r1, r3, #14
 8008b14:	d53f      	bpl.n	8008b96 <HAL_RCC_ClockConfig+0x21e>
 8008b16:	682b      	ldr	r3, [r5, #0]
 8008b18:	071a      	lsls	r2, r3, #28
 8008b1a:	f57f af4a 	bpl.w	80089b2 <HAL_RCC_ClockConfig+0x3a>
 8008b1e:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008b22:	692a      	ldr	r2, [r5, #16]
 8008b24:	68b3      	ldr	r3, [r6, #8]
 8008b26:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
 8008b2a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008b2e:	60b3      	str	r3, [r6, #8]
 8008b30:	f7fc fcec 	bl	800550c <HAL_GetTick>
 8008b34:	4607      	mov	r7, r0
 8008b36:	68b3      	ldr	r3, [r6, #8]
 8008b38:	035b      	lsls	r3, r3, #13
 8008b3a:	d532      	bpl.n	8008ba2 <HAL_RCC_ClockConfig+0x22a>
 8008b3c:	682b      	ldr	r3, [r5, #0]
 8008b3e:	07df      	lsls	r7, r3, #31
 8008b40:	f53f af39 	bmi.w	80089b6 <HAL_RCC_ClockConfig+0x3e>
 8008b44:	e761      	b.n	8008a0a <HAL_RCC_ClockConfig+0x92>
 8008b46:	6833      	ldr	r3, [r6, #0]
 8008b48:	f023 0307 	bic.w	r3, r3, #7
 8008b4c:	430b      	orrs	r3, r1
 8008b4e:	6033      	str	r3, [r6, #0]
 8008b50:	f7fc fcdc 	bl	800550c <HAL_GetTick>
 8008b54:	4607      	mov	r7, r0
 8008b56:	6833      	ldr	r3, [r6, #0]
 8008b58:	f003 0307 	and.w	r3, r3, #7
 8008b5c:	42a3      	cmp	r3, r4
 8008b5e:	f43f af19 	beq.w	8008994 <HAL_RCC_ClockConfig+0x1c>
 8008b62:	f7fc fcd3 	bl	800550c <HAL_GetTick>
 8008b66:	1bc3      	subs	r3, r0, r7
 8008b68:	2b02      	cmp	r3, #2
 8008b6a:	d9f4      	bls.n	8008b56 <HAL_RCC_ClockConfig+0x1de>
 8008b6c:	2003      	movs	r0, #3
 8008b6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008b72:	f7fc fccb 	bl	800550c <HAL_GetTick>
 8008b76:	1bc0      	subs	r0, r0, r7
 8008b78:	2802      	cmp	r0, #2
 8008b7a:	d98c      	bls.n	8008a96 <HAL_RCC_ClockConfig+0x11e>
 8008b7c:	e7f6      	b.n	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 8008b7e:	f7fc fcc5 	bl	800550c <HAL_GetTick>
 8008b82:	1bc0      	subs	r0, r0, r7
 8008b84:	2802      	cmp	r0, #2
 8008b86:	d99a      	bls.n	8008abe <HAL_RCC_ClockConfig+0x146>
 8008b88:	e7f0      	b.n	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 8008b8a:	f7fc fcbf 	bl	800550c <HAL_GetTick>
 8008b8e:	1bc0      	subs	r0, r0, r7
 8008b90:	2802      	cmp	r0, #2
 8008b92:	d9aa      	bls.n	8008aea <HAL_RCC_ClockConfig+0x172>
 8008b94:	e7ea      	b.n	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 8008b96:	f7fc fcb9 	bl	800550c <HAL_GetTick>
 8008b9a:	1bc0      	subs	r0, r0, r7
 8008b9c:	2802      	cmp	r0, #2
 8008b9e:	d9b7      	bls.n	8008b10 <HAL_RCC_ClockConfig+0x198>
 8008ba0:	e7e4      	b.n	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 8008ba2:	f7fc fcb3 	bl	800550c <HAL_GetTick>
 8008ba6:	1bc0      	subs	r0, r0, r7
 8008ba8:	2802      	cmp	r0, #2
 8008baa:	d9c4      	bls.n	8008b36 <HAL_RCC_ClockConfig+0x1be>
 8008bac:	e7de      	b.n	8008b6c <HAL_RCC_ClockConfig+0x1f4>
 8008bae:	6813      	ldr	r3, [r2, #0]
 8008bb0:	4a14      	ldr	r2, [pc, #80]	@ (8008c04 <HAL_RCC_ClockConfig+0x28c>)
 8008bb2:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008bb6:	2bb0      	cmp	r3, #176	@ 0xb0
 8008bb8:	bf28      	it	cs
 8008bba:	23b0      	movcs	r3, #176	@ 0xb0
 8008bbc:	091b      	lsrs	r3, r3, #4
 8008bbe:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008bc2:	e74b      	b.n	8008a5c <HAL_RCC_ClockConfig+0xe4>
 8008bc4:	0190      	lsls	r0, r2, #6
 8008bc6:	f53f af06 	bmi.w	80089d6 <HAL_RCC_ClockConfig+0x5e>
 8008bca:	2001      	movs	r0, #1
 8008bcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008bd0:	0396      	lsls	r6, r2, #14
 8008bd2:	f53f af00 	bmi.w	80089d6 <HAL_RCC_ClockConfig+0x5e>
 8008bd6:	e7f8      	b.n	8008bca <HAL_RCC_ClockConfig+0x252>
 8008bd8:	0552      	lsls	r2, r2, #21
 8008bda:	d5f6      	bpl.n	8008bca <HAL_RCC_ClockConfig+0x252>
 8008bdc:	e6fb      	b.n	80089d6 <HAL_RCC_ClockConfig+0x5e>
 8008bde:	2001      	movs	r0, #1
 8008be0:	4770      	bx	lr
 8008be2:	6812      	ldr	r2, [r2, #0]
 8008be4:	4b08      	ldr	r3, [pc, #32]	@ (8008c08 <HAL_RCC_ClockConfig+0x290>)
 8008be6:	4809      	ldr	r0, [pc, #36]	@ (8008c0c <HAL_RCC_ClockConfig+0x294>)
 8008be8:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008bec:	bf08      	it	eq
 8008bee:	4618      	moveq	r0, r3
 8008bf0:	e734      	b.n	8008a5c <HAL_RCC_ClockConfig+0xe4>
 8008bf2:	4806      	ldr	r0, [pc, #24]	@ (8008c0c <HAL_RCC_ClockConfig+0x294>)
 8008bf4:	e732      	b.n	8008a5c <HAL_RCC_ClockConfig+0xe4>
 8008bf6:	bf00      	nop
 8008bf8:	58004000 	.word	0x58004000
 8008bfc:	20000034 	.word	0x20000034
 8008c00:	080180f4 	.word	0x080180f4
 8008c04:	08018094 	.word	0x08018094
 8008c08:	01e84800 	.word	0x01e84800
 8008c0c:	00f42400 	.word	0x00f42400

08008c10 <HAL_RCC_GetSysClockFreq>:
 8008c10:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008c14:	6893      	ldr	r3, [r2, #8]
 8008c16:	f013 030c 	ands.w	r3, r3, #12
 8008c1a:	d10a      	bne.n	8008c32 <HAL_RCC_GetSysClockFreq+0x22>
 8008c1c:	6813      	ldr	r3, [r2, #0]
 8008c1e:	4a0d      	ldr	r2, [pc, #52]	@ (8008c54 <HAL_RCC_GetSysClockFreq+0x44>)
 8008c20:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008c24:	2bb0      	cmp	r3, #176	@ 0xb0
 8008c26:	bf28      	it	cs
 8008c28:	23b0      	movcs	r3, #176	@ 0xb0
 8008c2a:	091b      	lsrs	r3, r3, #4
 8008c2c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008c30:	4770      	bx	lr
 8008c32:	2b04      	cmp	r3, #4
 8008c34:	d00b      	beq.n	8008c4e <HAL_RCC_GetSysClockFreq+0x3e>
 8008c36:	2b08      	cmp	r3, #8
 8008c38:	d001      	beq.n	8008c3e <HAL_RCC_GetSysClockFreq+0x2e>
 8008c3a:	f7ff bb0d 	b.w	8008258 <HAL_RCC_GetSysClockFreq.part.0>
 8008c3e:	6812      	ldr	r2, [r2, #0]
 8008c40:	4b05      	ldr	r3, [pc, #20]	@ (8008c58 <HAL_RCC_GetSysClockFreq+0x48>)
 8008c42:	4806      	ldr	r0, [pc, #24]	@ (8008c5c <HAL_RCC_GetSysClockFreq+0x4c>)
 8008c44:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008c48:	bf08      	it	eq
 8008c4a:	4618      	moveq	r0, r3
 8008c4c:	4770      	bx	lr
 8008c4e:	4803      	ldr	r0, [pc, #12]	@ (8008c5c <HAL_RCC_GetSysClockFreq+0x4c>)
 8008c50:	4770      	bx	lr
 8008c52:	bf00      	nop
 8008c54:	08018094 	.word	0x08018094
 8008c58:	01e84800 	.word	0x01e84800
 8008c5c:	00f42400 	.word	0x00f42400

08008c60 <HAL_RCC_GetPCLK1Freq>:
 8008c60:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008c64:	b508      	push	{r3, lr}
 8008c66:	6893      	ldr	r3, [r2, #8]
 8008c68:	f013 030c 	ands.w	r3, r3, #12
 8008c6c:	d11e      	bne.n	8008cac <HAL_RCC_GetPCLK1Freq+0x4c>
 8008c6e:	6813      	ldr	r3, [r2, #0]
 8008c70:	4a17      	ldr	r2, [pc, #92]	@ (8008cd0 <HAL_RCC_GetPCLK1Freq+0x70>)
 8008c72:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008c76:	2bb0      	cmp	r3, #176	@ 0xb0
 8008c78:	bf28      	it	cs
 8008c7a:	23b0      	movcs	r3, #176	@ 0xb0
 8008c7c:	091b      	lsrs	r3, r3, #4
 8008c7e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008c82:	4914      	ldr	r1, [pc, #80]	@ (8008cd4 <HAL_RCC_GetPCLK1Freq+0x74>)
 8008c84:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008c88:	6893      	ldr	r3, [r2, #8]
 8008c8a:	6892      	ldr	r2, [r2, #8]
 8008c8c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008c90:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8008c94:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008c98:	490f      	ldr	r1, [pc, #60]	@ (8008cd8 <HAL_RCC_GetPCLK1Freq+0x78>)
 8008c9a:	fbb0 f3f3 	udiv	r3, r0, r3
 8008c9e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008ca2:	f000 001f 	and.w	r0, r0, #31
 8008ca6:	fa23 f000 	lsr.w	r0, r3, r0
 8008caa:	bd08      	pop	{r3, pc}
 8008cac:	2b04      	cmp	r3, #4
 8008cae:	d004      	beq.n	8008cba <HAL_RCC_GetPCLK1Freq+0x5a>
 8008cb0:	2b08      	cmp	r3, #8
 8008cb2:	d004      	beq.n	8008cbe <HAL_RCC_GetPCLK1Freq+0x5e>
 8008cb4:	f7ff fad0 	bl	8008258 <HAL_RCC_GetSysClockFreq.part.0>
 8008cb8:	e7e3      	b.n	8008c82 <HAL_RCC_GetPCLK1Freq+0x22>
 8008cba:	4808      	ldr	r0, [pc, #32]	@ (8008cdc <HAL_RCC_GetPCLK1Freq+0x7c>)
 8008cbc:	e7e1      	b.n	8008c82 <HAL_RCC_GetPCLK1Freq+0x22>
 8008cbe:	6812      	ldr	r2, [r2, #0]
 8008cc0:	4b07      	ldr	r3, [pc, #28]	@ (8008ce0 <HAL_RCC_GetPCLK1Freq+0x80>)
 8008cc2:	4806      	ldr	r0, [pc, #24]	@ (8008cdc <HAL_RCC_GetPCLK1Freq+0x7c>)
 8008cc4:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008cc8:	bf08      	it	eq
 8008cca:	4618      	moveq	r0, r3
 8008ccc:	e7d9      	b.n	8008c82 <HAL_RCC_GetPCLK1Freq+0x22>
 8008cce:	bf00      	nop
 8008cd0:	08018094 	.word	0x08018094
 8008cd4:	080180f4 	.word	0x080180f4
 8008cd8:	080180d4 	.word	0x080180d4
 8008cdc:	00f42400 	.word	0x00f42400
 8008ce0:	01e84800 	.word	0x01e84800

08008ce4 <HAL_RCC_GetPCLK2Freq>:
 8008ce4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008ce8:	b508      	push	{r3, lr}
 8008cea:	6893      	ldr	r3, [r2, #8]
 8008cec:	f013 030c 	ands.w	r3, r3, #12
 8008cf0:	d11e      	bne.n	8008d30 <HAL_RCC_GetPCLK2Freq+0x4c>
 8008cf2:	6813      	ldr	r3, [r2, #0]
 8008cf4:	4a17      	ldr	r2, [pc, #92]	@ (8008d54 <HAL_RCC_GetPCLK2Freq+0x70>)
 8008cf6:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8008cfa:	2bb0      	cmp	r3, #176	@ 0xb0
 8008cfc:	bf28      	it	cs
 8008cfe:	23b0      	movcs	r3, #176	@ 0xb0
 8008d00:	091b      	lsrs	r3, r3, #4
 8008d02:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008d06:	4914      	ldr	r1, [pc, #80]	@ (8008d58 <HAL_RCC_GetPCLK2Freq+0x74>)
 8008d08:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008d0c:	6893      	ldr	r3, [r2, #8]
 8008d0e:	6892      	ldr	r2, [r2, #8]
 8008d10:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008d14:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8008d18:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008d1c:	490f      	ldr	r1, [pc, #60]	@ (8008d5c <HAL_RCC_GetPCLK2Freq+0x78>)
 8008d1e:	fbb0 f3f3 	udiv	r3, r0, r3
 8008d22:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008d26:	f000 001f 	and.w	r0, r0, #31
 8008d2a:	fa23 f000 	lsr.w	r0, r3, r0
 8008d2e:	bd08      	pop	{r3, pc}
 8008d30:	2b04      	cmp	r3, #4
 8008d32:	d004      	beq.n	8008d3e <HAL_RCC_GetPCLK2Freq+0x5a>
 8008d34:	2b08      	cmp	r3, #8
 8008d36:	d004      	beq.n	8008d42 <HAL_RCC_GetPCLK2Freq+0x5e>
 8008d38:	f7ff fa8e 	bl	8008258 <HAL_RCC_GetSysClockFreq.part.0>
 8008d3c:	e7e3      	b.n	8008d06 <HAL_RCC_GetPCLK2Freq+0x22>
 8008d3e:	4808      	ldr	r0, [pc, #32]	@ (8008d60 <HAL_RCC_GetPCLK2Freq+0x7c>)
 8008d40:	e7e1      	b.n	8008d06 <HAL_RCC_GetPCLK2Freq+0x22>
 8008d42:	6812      	ldr	r2, [r2, #0]
 8008d44:	4b07      	ldr	r3, [pc, #28]	@ (8008d64 <HAL_RCC_GetPCLK2Freq+0x80>)
 8008d46:	4806      	ldr	r0, [pc, #24]	@ (8008d60 <HAL_RCC_GetPCLK2Freq+0x7c>)
 8008d48:	f412 1f80 	tst.w	r2, #1048576	@ 0x100000
 8008d4c:	bf08      	it	eq
 8008d4e:	4618      	moveq	r0, r3
 8008d50:	e7d9      	b.n	8008d06 <HAL_RCC_GetPCLK2Freq+0x22>
 8008d52:	bf00      	nop
 8008d54:	08018094 	.word	0x08018094
 8008d58:	080180f4 	.word	0x080180f4
 8008d5c:	080180d4 	.word	0x080180d4
 8008d60:	00f42400 	.word	0x00f42400
 8008d64:	01e84800 	.word	0x01e84800

08008d68 <HAL_RCC_GetClockConfig>:
 8008d68:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8008d6c:	226f      	movs	r2, #111	@ 0x6f
 8008d6e:	b410      	push	{r4}
 8008d70:	6002      	str	r2, [r0, #0]
 8008d72:	689a      	ldr	r2, [r3, #8]
 8008d74:	4c10      	ldr	r4, [pc, #64]	@ (8008db8 <HAL_RCC_GetClockConfig+0x50>)
 8008d76:	f002 020c 	and.w	r2, r2, #12
 8008d7a:	6042      	str	r2, [r0, #4]
 8008d7c:	689a      	ldr	r2, [r3, #8]
 8008d7e:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008d82:	6082      	str	r2, [r0, #8]
 8008d84:	689a      	ldr	r2, [r3, #8]
 8008d86:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8008d8a:	60c2      	str	r2, [r0, #12]
 8008d8c:	689a      	ldr	r2, [r3, #8]
 8008d8e:	f402 5260 	and.w	r2, r2, #14336	@ 0x3800
 8008d92:	6102      	str	r2, [r0, #16]
 8008d94:	f8d3 2108 	ldr.w	r2, [r3, #264]	@ 0x108
 8008d98:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8008d9c:	6142      	str	r2, [r0, #20]
 8008d9e:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 8008da2:	011b      	lsls	r3, r3, #4
 8008da4:	b2db      	uxtb	r3, r3
 8008da6:	6183      	str	r3, [r0, #24]
 8008da8:	6823      	ldr	r3, [r4, #0]
 8008daa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008dae:	f003 0307 	and.w	r3, r3, #7
 8008db2:	600b      	str	r3, [r1, #0]
 8008db4:	4770      	bx	lr
 8008db6:	bf00      	nop
 8008db8:	58004000 	.word	0x58004000

08008dbc <HAL_RCCEx_PeriphCLKConfig>:
 8008dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dbe:	6803      	ldr	r3, [r0, #0]
 8008dc0:	f013 0540 	ands.w	r5, r3, #64	@ 0x40
 8008dc4:	4604      	mov	r4, r0
 8008dc6:	d046      	beq.n	8008e56 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8008dc8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8008dca:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
 8008dce:	d032      	beq.n	8008e36 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8008dd0:	f200 8146 	bhi.w	8009060 <HAL_RCCEx_PeriphCLKConfig+0x2a4>
 8008dd4:	2900      	cmp	r1, #0
 8008dd6:	f040 8149 	bne.w	800906c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8008dda:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008dde:	682b      	ldr	r3, [r5, #0]
 8008de0:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8008de4:	602b      	str	r3, [r5, #0]
 8008de6:	f7fc fb91 	bl	800550c <HAL_GetTick>
 8008dea:	4606      	mov	r6, r0
 8008dec:	682b      	ldr	r3, [r5, #0]
 8008dee:	011f      	lsls	r7, r3, #4
 8008df0:	f100 81a4 	bmi.w	800913c <HAL_RCCEx_PeriphCLKConfig+0x380>
 8008df4:	692b      	ldr	r3, [r5, #16]
 8008df6:	6862      	ldr	r2, [r4, #4]
 8008df8:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8008dfc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008e00:	612b      	str	r3, [r5, #16]
 8008e02:	692b      	ldr	r3, [r5, #16]
 8008e04:	68a2      	ldr	r2, [r4, #8]
 8008e06:	f423 1378 	bic.w	r3, r3, #4063232	@ 0x3e0000
 8008e0a:	4313      	orrs	r3, r2
 8008e0c:	612b      	str	r3, [r5, #16]
 8008e0e:	682b      	ldr	r3, [r5, #0]
 8008e10:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8008e14:	602b      	str	r3, [r5, #0]
 8008e16:	f7fc fb79 	bl	800550c <HAL_GetTick>
 8008e1a:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
 8008e1e:	4606      	mov	r6, r0
 8008e20:	682b      	ldr	r3, [r5, #0]
 8008e22:	0118      	lsls	r0, r3, #4
 8008e24:	f140 81a3 	bpl.w	800916e <HAL_RCCEx_PeriphCLKConfig+0x3b2>
 8008e28:	6961      	ldr	r1, [r4, #20]
 8008e2a:	692a      	ldr	r2, [r5, #16]
 8008e2c:	6823      	ldr	r3, [r4, #0]
 8008e2e:	430a      	orrs	r2, r1
 8008e30:	612a      	str	r2, [r5, #16]
 8008e32:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8008e34:	e005      	b.n	8008e42 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8008e36:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 8008e3a:	68c2      	ldr	r2, [r0, #12]
 8008e3c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8008e40:	60c2      	str	r2, [r0, #12]
 8008e42:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 8008e46:	2500      	movs	r5, #0
 8008e48:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 8008e4c:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8008e50:	430a      	orrs	r2, r1
 8008e52:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 8008e56:	0519      	lsls	r1, r3, #20
 8008e58:	d509      	bpl.n	8008e6e <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8008e5a:	f04f 47b0 	mov.w	r7, #1476395008	@ 0x58000000
 8008e5e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008e60:	f8d7 6090 	ldr.w	r6, [r7, #144]	@ 0x90
 8008e64:	f406 7640 	and.w	r6, r6, #768	@ 0x300
 8008e68:	42b2      	cmp	r2, r6
 8008e6a:	f040 80c0 	bne.w	8008fee <HAL_RCCEx_PeriphCLKConfig+0x232>
 8008e6e:	07d8      	lsls	r0, r3, #31
 8008e70:	d509      	bpl.n	8008e86 <HAL_RCCEx_PeriphCLKConfig+0xca>
 8008e72:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008e76:	69a0      	ldr	r0, [r4, #24]
 8008e78:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8008e7c:	f022 0203 	bic.w	r2, r2, #3
 8008e80:	4302      	orrs	r2, r0
 8008e82:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8008e86:	0799      	lsls	r1, r3, #30
 8008e88:	d509      	bpl.n	8008e9e <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8008e8a:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008e8e:	69e0      	ldr	r0, [r4, #28]
 8008e90:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8008e94:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8008e98:	4302      	orrs	r2, r0
 8008e9a:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8008e9e:	06da      	lsls	r2, r3, #27
 8008ea0:	d50c      	bpl.n	8008ebc <HAL_RCCEx_PeriphCLKConfig+0x100>
 8008ea2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8008ea4:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008ea8:	0c06      	lsrs	r6, r0, #16
 8008eaa:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8008eae:	0436      	lsls	r6, r6, #16
 8008eb0:	ea22 0206 	bic.w	r2, r2, r6
 8008eb4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008eb8:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8008ebc:	069f      	lsls	r7, r3, #26
 8008ebe:	d50c      	bpl.n	8008eda <HAL_RCCEx_PeriphCLKConfig+0x11e>
 8008ec0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8008ec2:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008ec6:	0c06      	lsrs	r6, r0, #16
 8008ec8:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8008ecc:	0436      	lsls	r6, r6, #16
 8008ece:	ea22 0206 	bic.w	r2, r2, r6
 8008ed2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008ed6:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 8008eda:	075e      	lsls	r6, r3, #29
 8008edc:	d50f      	bpl.n	8008efe <HAL_RCCEx_PeriphCLKConfig+0x142>
 8008ede:	6a22      	ldr	r2, [r4, #32]
 8008ee0:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008ee4:	0910      	lsrs	r0, r2, #4
 8008ee6:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
 8008eea:	f400 207f 	and.w	r0, r0, #1044480	@ 0xff000
 8008eee:	0112      	lsls	r2, r2, #4
 8008ef0:	f402 227f 	and.w	r2, r2, #1044480	@ 0xff000
 8008ef4:	ea21 0100 	bic.w	r1, r1, r0
 8008ef8:	430a      	orrs	r2, r1
 8008efa:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8008efe:	0718      	lsls	r0, r3, #28
 8008f00:	d50f      	bpl.n	8008f22 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8008f02:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8008f04:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008f08:	0910      	lsrs	r0, r2, #4
 8008f0a:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
 8008f0e:	f400 207f 	and.w	r0, r0, #1044480	@ 0xff000
 8008f12:	0112      	lsls	r2, r2, #4
 8008f14:	f402 227f 	and.w	r2, r2, #1044480	@ 0xff000
 8008f18:	ea21 0100 	bic.w	r1, r1, r0
 8008f1c:	430a      	orrs	r2, r1
 8008f1e:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8008f22:	05d9      	lsls	r1, r3, #23
 8008f24:	d511      	bpl.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0x18e>
 8008f26:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008f2a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008f2c:	f8d6 2088 	ldr.w	r2, [r6, #136]	@ 0x88
 8008f30:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 8008f34:	430a      	orrs	r2, r1
 8008f36:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
 8008f3a:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8008f3e:	f000 8097 	beq.w	8009070 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 8008f42:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
 8008f46:	f000 809d 	beq.w	8009084 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 8008f4a:	059f      	lsls	r7, r3, #22
 8008f4c:	d51e      	bpl.n	8008f8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 8008f4e:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8008f50:	f031 4280 	bics.w	r2, r1, #1073741824	@ 0x40000000
 8008f54:	d07a      	beq.n	800904c <HAL_RCCEx_PeriphCLKConfig+0x290>
 8008f56:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8008f5a:	d077      	beq.n	800904c <HAL_RCCEx_PeriphCLKConfig+0x290>
 8008f5c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008f60:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
 8008f64:	f8d2 6088 	ldr.w	r6, [r2, #136]	@ 0x88
 8008f68:	f026 4640 	bic.w	r6, r6, #3221225472	@ 0xc0000000
 8008f6c:	f8c2 6088 	str.w	r6, [r2, #136]	@ 0x88
 8008f70:	f8d2 6088 	ldr.w	r6, [r2, #136]	@ 0x88
 8008f74:	f026 6640 	bic.w	r6, r6, #201326592	@ 0xc000000
 8008f78:	4330      	orrs	r0, r6
 8008f7a:	f1b1 5fc0 	cmp.w	r1, #402653184	@ 0x18000000
 8008f7e:	f8c2 0088 	str.w	r0, [r2, #136]	@ 0x88
 8008f82:	d103      	bne.n	8008f8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 8008f84:	68d1      	ldr	r1, [r2, #12]
 8008f86:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 8008f8a:	60d1      	str	r1, [r2, #12]
 8008f8c:	055e      	lsls	r6, r3, #21
 8008f8e:	d510      	bpl.n	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8008f90:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8008f94:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8008f96:	f8d6 2088 	ldr.w	r2, [r6, #136]	@ 0x88
 8008f9a:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8008f9e:	430a      	orrs	r2, r1
 8008fa0:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
 8008fa4:	f8c6 2088 	str.w	r2, [r6, #136]	@ 0x88
 8008fa8:	d067      	beq.n	800907a <HAL_RCCEx_PeriphCLKConfig+0x2be>
 8008faa:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
 8008fae:	f000 8092 	beq.w	80090d6 <HAL_RCCEx_PeriphCLKConfig+0x31a>
 8008fb2:	04da      	lsls	r2, r3, #19
 8008fb4:	d509      	bpl.n	8008fca <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8008fb6:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8008fba:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8008fbc:	f8d1 2094 	ldr.w	r2, [r1, #148]	@ 0x94
 8008fc0:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8008fc4:	4302      	orrs	r2, r0
 8008fc6:	f8c1 2094 	str.w	r2, [r1, #148]	@ 0x94
 8008fca:	049b      	lsls	r3, r3, #18
 8008fcc:	d50d      	bpl.n	8008fea <HAL_RCCEx_PeriphCLKConfig+0x22e>
 8008fce:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8008fd2:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8008fd4:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8008fd6:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8008fda:	430b      	orrs	r3, r1
 8008fdc:	6253      	str	r3, [r2, #36]	@ 0x24
 8008fde:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8008fe0:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8008fe2:	f023 0303 	bic.w	r3, r3, #3
 8008fe6:	430b      	orrs	r3, r1
 8008fe8:	6253      	str	r3, [r2, #36]	@ 0x24
 8008fea:	4628      	mov	r0, r5
 8008fec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008fee:	f7ff f8a5 	bl	800813c <HAL_PWR_EnableBkUpAccess>
 8008ff2:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8008ff6:	2e00      	cmp	r6, #0
 8008ff8:	f000 8096 	beq.w	8009128 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8008ffc:	f8d7 2090 	ldr.w	r2, [r7, #144]	@ 0x90
 8009000:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8009004:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8009008:	f8d7 2090 	ldr.w	r2, [r7, #144]	@ 0x90
 800900c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8009010:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8009014:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009016:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800901a:	4313      	orrs	r3, r2
 800901c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8009020:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8009024:	07da      	lsls	r2, r3, #31
 8009026:	f140 8087 	bpl.w	8009138 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 800902a:	f7fc fa6f 	bl	800550c <HAL_GetTick>
 800902e:	4606      	mov	r6, r0
 8009030:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8009034:	079b      	lsls	r3, r3, #30
 8009036:	d47f      	bmi.n	8009138 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009038:	f7fc fa68 	bl	800550c <HAL_GetTick>
 800903c:	f241 3388 	movw	r3, #5000	@ 0x1388
 8009040:	1b80      	subs	r0, r0, r6
 8009042:	4298      	cmp	r0, r3
 8009044:	d9f4      	bls.n	8009030 <HAL_RCCEx_PeriphCLKConfig+0x274>
 8009046:	6823      	ldr	r3, [r4, #0]
 8009048:	2503      	movs	r5, #3
 800904a:	e710      	b.n	8008e6e <HAL_RCCEx_PeriphCLKConfig+0xb2>
 800904c:	f04f 40b0 	mov.w	r0, #1476395008	@ 0x58000000
 8009050:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 8009054:	f022 4240 	bic.w	r2, r2, #3221225472	@ 0xc0000000
 8009058:	430a      	orrs	r2, r1
 800905a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800905e:	e795      	b.n	8008f8c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 8009060:	f421 0280 	bic.w	r2, r1, #4194304	@ 0x400000
 8009064:	f5b2 0f00 	cmp.w	r2, #8388608	@ 0x800000
 8009068:	f43f aeeb 	beq.w	8008e42 <HAL_RCCEx_PeriphCLKConfig+0x86>
 800906c:	2501      	movs	r5, #1
 800906e:	e6f2      	b.n	8008e56 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8009070:	68f2      	ldr	r2, [r6, #12]
 8009072:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8009076:	60f2      	str	r2, [r6, #12]
 8009078:	e767      	b.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800907a:	68f2      	ldr	r2, [r6, #12]
 800907c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8009080:	60f2      	str	r2, [r6, #12]
 8009082:	e796      	b.n	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8009084:	6833      	ldr	r3, [r6, #0]
 8009086:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800908a:	6033      	str	r3, [r6, #0]
 800908c:	f7fc fa3e 	bl	800550c <HAL_GetTick>
 8009090:	4607      	mov	r7, r0
 8009092:	6833      	ldr	r3, [r6, #0]
 8009094:	011a      	lsls	r2, r3, #4
 8009096:	d462      	bmi.n	800915e <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 8009098:	6933      	ldr	r3, [r6, #16]
 800909a:	6862      	ldr	r2, [r4, #4]
 800909c:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80090a0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80090a4:	6133      	str	r3, [r6, #16]
 80090a6:	6933      	ldr	r3, [r6, #16]
 80090a8:	68e2      	ldr	r2, [r4, #12]
 80090aa:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 80090ae:	4313      	orrs	r3, r2
 80090b0:	6133      	str	r3, [r6, #16]
 80090b2:	6833      	ldr	r3, [r6, #0]
 80090b4:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80090b8:	6033      	str	r3, [r6, #0]
 80090ba:	f7fc fa27 	bl	800550c <HAL_GetTick>
 80090be:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 80090c2:	4607      	mov	r7, r0
 80090c4:	6833      	ldr	r3, [r6, #0]
 80090c6:	011b      	lsls	r3, r3, #4
 80090c8:	d55e      	bpl.n	8009188 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 80090ca:	6932      	ldr	r2, [r6, #16]
 80090cc:	6961      	ldr	r1, [r4, #20]
 80090ce:	6823      	ldr	r3, [r4, #0]
 80090d0:	430a      	orrs	r2, r1
 80090d2:	6132      	str	r2, [r6, #16]
 80090d4:	e739      	b.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0x18e>
 80090d6:	6833      	ldr	r3, [r6, #0]
 80090d8:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80090dc:	6033      	str	r3, [r6, #0]
 80090de:	f7fc fa15 	bl	800550c <HAL_GetTick>
 80090e2:	4607      	mov	r7, r0
 80090e4:	6833      	ldr	r3, [r6, #0]
 80090e6:	0118      	lsls	r0, r3, #4
 80090e8:	d431      	bmi.n	800914e <HAL_RCCEx_PeriphCLKConfig+0x392>
 80090ea:	6933      	ldr	r3, [r6, #16]
 80090ec:	6862      	ldr	r2, [r4, #4]
 80090ee:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80090f2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80090f6:	6133      	str	r3, [r6, #16]
 80090f8:	6933      	ldr	r3, [r6, #16]
 80090fa:	6922      	ldr	r2, [r4, #16]
 80090fc:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
 8009100:	4313      	orrs	r3, r2
 8009102:	6133      	str	r3, [r6, #16]
 8009104:	6833      	ldr	r3, [r6, #0]
 8009106:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800910a:	6033      	str	r3, [r6, #0]
 800910c:	f7fc f9fe 	bl	800550c <HAL_GetTick>
 8009110:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
 8009114:	4607      	mov	r7, r0
 8009116:	6833      	ldr	r3, [r6, #0]
 8009118:	0119      	lsls	r1, r3, #4
 800911a:	d52f      	bpl.n	800917c <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 800911c:	6932      	ldr	r2, [r6, #16]
 800911e:	6961      	ldr	r1, [r4, #20]
 8009120:	6823      	ldr	r3, [r4, #0]
 8009122:	430a      	orrs	r2, r1
 8009124:	6132      	str	r2, [r6, #16]
 8009126:	e744      	b.n	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8009128:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800912a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800912e:	4313      	orrs	r3, r2
 8009130:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8009134:	6823      	ldr	r3, [r4, #0]
 8009136:	e69a      	b.n	8008e6e <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8009138:	6823      	ldr	r3, [r4, #0]
 800913a:	e698      	b.n	8008e6e <HAL_RCCEx_PeriphCLKConfig+0xb2>
 800913c:	f7fc f9e6 	bl	800550c <HAL_GetTick>
 8009140:	1b80      	subs	r0, r0, r6
 8009142:	2802      	cmp	r0, #2
 8009144:	f67f ae52 	bls.w	8008dec <HAL_RCCEx_PeriphCLKConfig+0x30>
 8009148:	6823      	ldr	r3, [r4, #0]
 800914a:	2503      	movs	r5, #3
 800914c:	e683      	b.n	8008e56 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800914e:	f7fc f9dd 	bl	800550c <HAL_GetTick>
 8009152:	1bc0      	subs	r0, r0, r7
 8009154:	2802      	cmp	r0, #2
 8009156:	d9c5      	bls.n	80090e4 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8009158:	6823      	ldr	r3, [r4, #0]
 800915a:	2503      	movs	r5, #3
 800915c:	e729      	b.n	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800915e:	f7fc f9d5 	bl	800550c <HAL_GetTick>
 8009162:	1bc0      	subs	r0, r0, r7
 8009164:	2802      	cmp	r0, #2
 8009166:	d994      	bls.n	8009092 <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 8009168:	6823      	ldr	r3, [r4, #0]
 800916a:	2503      	movs	r5, #3
 800916c:	e6ed      	b.n	8008f4a <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800916e:	f7fc f9cd 	bl	800550c <HAL_GetTick>
 8009172:	1b80      	subs	r0, r0, r6
 8009174:	2802      	cmp	r0, #2
 8009176:	f67f ae53 	bls.w	8008e20 <HAL_RCCEx_PeriphCLKConfig+0x64>
 800917a:	e7e5      	b.n	8009148 <HAL_RCCEx_PeriphCLKConfig+0x38c>
 800917c:	f7fc f9c6 	bl	800550c <HAL_GetTick>
 8009180:	1bc0      	subs	r0, r0, r7
 8009182:	2802      	cmp	r0, #2
 8009184:	d9c7      	bls.n	8009116 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8009186:	e7e7      	b.n	8009158 <HAL_RCCEx_PeriphCLKConfig+0x39c>
 8009188:	f7fc f9c0 	bl	800550c <HAL_GetTick>
 800918c:	1bc0      	subs	r0, r0, r7
 800918e:	2802      	cmp	r0, #2
 8009190:	d998      	bls.n	80090c4 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8009192:	e7e9      	b.n	8009168 <HAL_RCCEx_PeriphCLKConfig+0x3ac>

08009194 <HAL_RTC_Init>:
 8009194:	2800      	cmp	r0, #0
 8009196:	d063      	beq.n	8009260 <HAL_RTC_Init+0xcc>
 8009198:	b538      	push	{r3, r4, r5, lr}
 800919a:	f890 3021 	ldrb.w	r3, [r0, #33]	@ 0x21
 800919e:	4604      	mov	r4, r0
 80091a0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80091a4:	b15b      	cbz	r3, 80091be <HAL_RTC_Init+0x2a>
 80091a6:	2202      	movs	r2, #2
 80091a8:	6823      	ldr	r3, [r4, #0]
 80091aa:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 80091ae:	68da      	ldr	r2, [r3, #12]
 80091b0:	06d2      	lsls	r2, r2, #27
 80091b2:	d509      	bpl.n	80091c8 <HAL_RTC_Init+0x34>
 80091b4:	2301      	movs	r3, #1
 80091b6:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 80091ba:	2000      	movs	r0, #0
 80091bc:	bd38      	pop	{r3, r4, r5, pc}
 80091be:	f880 2020 	strb.w	r2, [r0, #32]
 80091c2:	f7f9 f89f 	bl	8002304 <HAL_RTC_MspInit>
 80091c6:	e7ee      	b.n	80091a6 <HAL_RTC_Init+0x12>
 80091c8:	2253      	movs	r2, #83	@ 0x53
 80091ca:	21ca      	movs	r1, #202	@ 0xca
 80091cc:	6259      	str	r1, [r3, #36]	@ 0x24
 80091ce:	625a      	str	r2, [r3, #36]	@ 0x24
 80091d0:	68da      	ldr	r2, [r3, #12]
 80091d2:	0655      	lsls	r5, r2, #25
 80091d4:	d528      	bpl.n	8009228 <HAL_RTC_Init+0x94>
 80091d6:	6899      	ldr	r1, [r3, #8]
 80091d8:	6862      	ldr	r2, [r4, #4]
 80091da:	6925      	ldr	r5, [r4, #16]
 80091dc:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 80091e0:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 80091e4:	6099      	str	r1, [r3, #8]
 80091e6:	69a1      	ldr	r1, [r4, #24]
 80091e8:	6898      	ldr	r0, [r3, #8]
 80091ea:	432a      	orrs	r2, r5
 80091ec:	430a      	orrs	r2, r1
 80091ee:	4302      	orrs	r2, r0
 80091f0:	68e1      	ldr	r1, [r4, #12]
 80091f2:	609a      	str	r2, [r3, #8]
 80091f4:	6119      	str	r1, [r3, #16]
 80091f6:	691a      	ldr	r2, [r3, #16]
 80091f8:	68a1      	ldr	r1, [r4, #8]
 80091fa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80091fe:	611a      	str	r2, [r3, #16]
 8009200:	68da      	ldr	r2, [r3, #12]
 8009202:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8009206:	60da      	str	r2, [r3, #12]
 8009208:	689a      	ldr	r2, [r3, #8]
 800920a:	0691      	lsls	r1, r2, #26
 800920c:	d52a      	bpl.n	8009264 <HAL_RTC_Init+0xd0>
 800920e:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8009210:	69e2      	ldr	r2, [r4, #28]
 8009212:	6960      	ldr	r0, [r4, #20]
 8009214:	f021 0103 	bic.w	r1, r1, #3
 8009218:	64d9      	str	r1, [r3, #76]	@ 0x4c
 800921a:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 800921c:	4302      	orrs	r2, r0
 800921e:	430a      	orrs	r2, r1
 8009220:	21ff      	movs	r1, #255	@ 0xff
 8009222:	64da      	str	r2, [r3, #76]	@ 0x4c
 8009224:	6259      	str	r1, [r3, #36]	@ 0x24
 8009226:	e7c5      	b.n	80091b4 <HAL_RTC_Init+0x20>
 8009228:	68da      	ldr	r2, [r3, #12]
 800922a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800922e:	60da      	str	r2, [r3, #12]
 8009230:	f7fc f96c 	bl	800550c <HAL_GetTick>
 8009234:	4605      	mov	r5, r0
 8009236:	e005      	b.n	8009244 <HAL_RTC_Init+0xb0>
 8009238:	f7fc f968 	bl	800550c <HAL_GetTick>
 800923c:	1b40      	subs	r0, r0, r5
 800923e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8009242:	d804      	bhi.n	800924e <HAL_RTC_Init+0xba>
 8009244:	6823      	ldr	r3, [r4, #0]
 8009246:	68da      	ldr	r2, [r3, #12]
 8009248:	0650      	lsls	r0, r2, #25
 800924a:	d4c4      	bmi.n	80091d6 <HAL_RTC_Init+0x42>
 800924c:	e7f4      	b.n	8009238 <HAL_RTC_Init+0xa4>
 800924e:	6823      	ldr	r3, [r4, #0]
 8009250:	2204      	movs	r2, #4
 8009252:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8009256:	22ff      	movs	r2, #255	@ 0xff
 8009258:	68d9      	ldr	r1, [r3, #12]
 800925a:	625a      	str	r2, [r3, #36]	@ 0x24
 800925c:	2001      	movs	r0, #1
 800925e:	bd38      	pop	{r3, r4, r5, pc}
 8009260:	2001      	movs	r0, #1
 8009262:	4770      	bx	lr
 8009264:	4a0a      	ldr	r2, [pc, #40]	@ (8009290 <HAL_RTC_Init+0xfc>)
 8009266:	60da      	str	r2, [r3, #12]
 8009268:	f7fc f950 	bl	800550c <HAL_GetTick>
 800926c:	4605      	mov	r5, r0
 800926e:	6823      	ldr	r3, [r4, #0]
 8009270:	68da      	ldr	r2, [r3, #12]
 8009272:	0692      	lsls	r2, r2, #26
 8009274:	d4cb      	bmi.n	800920e <HAL_RTC_Init+0x7a>
 8009276:	f7fc f949 	bl	800550c <HAL_GetTick>
 800927a:	1b40      	subs	r0, r0, r5
 800927c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8009280:	d9f5      	bls.n	800926e <HAL_RTC_Init+0xda>
 8009282:	6823      	ldr	r3, [r4, #0]
 8009284:	2104      	movs	r1, #4
 8009286:	22ff      	movs	r2, #255	@ 0xff
 8009288:	f884 1021 	strb.w	r1, [r4, #33]	@ 0x21
 800928c:	625a      	str	r2, [r3, #36]	@ 0x24
 800928e:	e7e5      	b.n	800925c <HAL_RTC_Init+0xc8>
 8009290:	0001ff5f 	.word	0x0001ff5f

08009294 <HAL_RTC_SetTime>:
 8009294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009296:	f890 3020 	ldrb.w	r3, [r0, #32]
 800929a:	2b01      	cmp	r3, #1
 800929c:	f000 80a4 	beq.w	80093e8 <HAL_RTC_SetTime+0x154>
 80092a0:	460d      	mov	r5, r1
 80092a2:	2101      	movs	r1, #1
 80092a4:	2302      	movs	r3, #2
 80092a6:	f880 1020 	strb.w	r1, [r0, #32]
 80092aa:	6801      	ldr	r1, [r0, #0]
 80092ac:	f880 3021 	strb.w	r3, [r0, #33]	@ 0x21
 80092b0:	688b      	ldr	r3, [r1, #8]
 80092b2:	4606      	mov	r6, r0
 80092b4:	2a00      	cmp	r2, #0
 80092b6:	d137      	bne.n	8009328 <HAL_RTC_SetTime+0x94>
 80092b8:	f013 0c40 	ands.w	ip, r3, #64	@ 0x40
 80092bc:	bf18      	it	ne
 80092be:	f895 c003 	ldrbne.w	ip, [r5, #3]
 80092c2:	782b      	ldrb	r3, [r5, #0]
 80092c4:	bf0c      	ite	eq
 80092c6:	f885 c003 	strbeq.w	ip, [r5, #3]
 80092ca:	ea4f 5c8c 	movne.w	ip, ip, lsl #22
 80092ce:	2b09      	cmp	r3, #9
 80092d0:	d909      	bls.n	80092e6 <HAL_RTC_SetTime+0x52>
 80092d2:	2000      	movs	r0, #0
 80092d4:	3b0a      	subs	r3, #10
 80092d6:	b2db      	uxtb	r3, r3
 80092d8:	2b09      	cmp	r3, #9
 80092da:	f100 0001 	add.w	r0, r0, #1
 80092de:	d8f9      	bhi.n	80092d4 <HAL_RTC_SetTime+0x40>
 80092e0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 80092e4:	b2db      	uxtb	r3, r3
 80092e6:	041c      	lsls	r4, r3, #16
 80092e8:	786b      	ldrb	r3, [r5, #1]
 80092ea:	2b09      	cmp	r3, #9
 80092ec:	d909      	bls.n	8009302 <HAL_RTC_SetTime+0x6e>
 80092ee:	2000      	movs	r0, #0
 80092f0:	3b0a      	subs	r3, #10
 80092f2:	b2db      	uxtb	r3, r3
 80092f4:	2b09      	cmp	r3, #9
 80092f6:	f100 0001 	add.w	r0, r0, #1
 80092fa:	d8f9      	bhi.n	80092f0 <HAL_RTC_SetTime+0x5c>
 80092fc:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 8009300:	b2db      	uxtb	r3, r3
 8009302:	78a8      	ldrb	r0, [r5, #2]
 8009304:	2809      	cmp	r0, #9
 8009306:	ea4f 2303 	mov.w	r3, r3, lsl #8
 800930a:	d908      	bls.n	800931e <HAL_RTC_SetTime+0x8a>
 800930c:	380a      	subs	r0, #10
 800930e:	b2c0      	uxtb	r0, r0
 8009310:	2809      	cmp	r0, #9
 8009312:	f102 0201 	add.w	r2, r2, #1
 8009316:	d8f9      	bhi.n	800930c <HAL_RTC_SetTime+0x78>
 8009318:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800931c:	b2c0      	uxtb	r0, r0
 800931e:	ea44 040c 	orr.w	r4, r4, ip
 8009322:	431c      	orrs	r4, r3
 8009324:	4304      	orrs	r4, r0
 8009326:	e00f      	b.n	8009348 <HAL_RTC_SetTime+0xb4>
 8009328:	786c      	ldrb	r4, [r5, #1]
 800932a:	782a      	ldrb	r2, [r5, #0]
 800932c:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8009330:	ea4f 2404 	mov.w	r4, r4, lsl #8
 8009334:	bf14      	ite	ne
 8009336:	78eb      	ldrbne	r3, [r5, #3]
 8009338:	70eb      	strbeq	r3, [r5, #3]
 800933a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800933e:	78aa      	ldrb	r2, [r5, #2]
 8009340:	bf18      	it	ne
 8009342:	059b      	lslne	r3, r3, #22
 8009344:	4314      	orrs	r4, r2
 8009346:	431c      	orrs	r4, r3
 8009348:	23ca      	movs	r3, #202	@ 0xca
 800934a:	624b      	str	r3, [r1, #36]	@ 0x24
 800934c:	2353      	movs	r3, #83	@ 0x53
 800934e:	624b      	str	r3, [r1, #36]	@ 0x24
 8009350:	68cb      	ldr	r3, [r1, #12]
 8009352:	065f      	lsls	r7, r3, #25
 8009354:	d51f      	bpl.n	8009396 <HAL_RTC_SetTime+0x102>
 8009356:	f004 347f 	and.w	r4, r4, #2139062143	@ 0x7f7f7f7f
 800935a:	f024 44fe 	bic.w	r4, r4, #2130706432	@ 0x7f000000
 800935e:	600c      	str	r4, [r1, #0]
 8009360:	688a      	ldr	r2, [r1, #8]
 8009362:	68eb      	ldr	r3, [r5, #12]
 8009364:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8009368:	608a      	str	r2, [r1, #8]
 800936a:	692a      	ldr	r2, [r5, #16]
 800936c:	4313      	orrs	r3, r2
 800936e:	688a      	ldr	r2, [r1, #8]
 8009370:	4313      	orrs	r3, r2
 8009372:	608b      	str	r3, [r1, #8]
 8009374:	68cb      	ldr	r3, [r1, #12]
 8009376:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800937a:	60cb      	str	r3, [r1, #12]
 800937c:	688b      	ldr	r3, [r1, #8]
 800937e:	069a      	lsls	r2, r3, #26
 8009380:	d521      	bpl.n	80093c6 <HAL_RTC_SetTime+0x132>
 8009382:	2301      	movs	r3, #1
 8009384:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 8009388:	2000      	movs	r0, #0
 800938a:	22ff      	movs	r2, #255	@ 0xff
 800938c:	2300      	movs	r3, #0
 800938e:	624a      	str	r2, [r1, #36]	@ 0x24
 8009390:	f886 3020 	strb.w	r3, [r6, #32]
 8009394:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009396:	68cb      	ldr	r3, [r1, #12]
 8009398:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800939c:	60cb      	str	r3, [r1, #12]
 800939e:	f7fc f8b5 	bl	800550c <HAL_GetTick>
 80093a2:	4607      	mov	r7, r0
 80093a4:	6831      	ldr	r1, [r6, #0]
 80093a6:	68cb      	ldr	r3, [r1, #12]
 80093a8:	0658      	lsls	r0, r3, #25
 80093aa:	d4d4      	bmi.n	8009356 <HAL_RTC_SetTime+0xc2>
 80093ac:	f7fc f8ae 	bl	800550c <HAL_GetTick>
 80093b0:	1bc0      	subs	r0, r0, r7
 80093b2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80093b6:	d9f5      	bls.n	80093a4 <HAL_RTC_SetTime+0x110>
 80093b8:	2304      	movs	r3, #4
 80093ba:	6831      	ldr	r1, [r6, #0]
 80093bc:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 80093c0:	68cb      	ldr	r3, [r1, #12]
 80093c2:	2001      	movs	r0, #1
 80093c4:	e7e1      	b.n	800938a <HAL_RTC_SetTime+0xf6>
 80093c6:	4b0c      	ldr	r3, [pc, #48]	@ (80093f8 <HAL_RTC_SetTime+0x164>)
 80093c8:	60cb      	str	r3, [r1, #12]
 80093ca:	f7fc f89f 	bl	800550c <HAL_GetTick>
 80093ce:	4604      	mov	r4, r0
 80093d0:	e005      	b.n	80093de <HAL_RTC_SetTime+0x14a>
 80093d2:	f7fc f89b 	bl	800550c <HAL_GetTick>
 80093d6:	1b00      	subs	r0, r0, r4
 80093d8:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80093dc:	d806      	bhi.n	80093ec <HAL_RTC_SetTime+0x158>
 80093de:	6831      	ldr	r1, [r6, #0]
 80093e0:	68cb      	ldr	r3, [r1, #12]
 80093e2:	069b      	lsls	r3, r3, #26
 80093e4:	d5f5      	bpl.n	80093d2 <HAL_RTC_SetTime+0x13e>
 80093e6:	e7cc      	b.n	8009382 <HAL_RTC_SetTime+0xee>
 80093e8:	2002      	movs	r0, #2
 80093ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80093ec:	2304      	movs	r3, #4
 80093ee:	6831      	ldr	r1, [r6, #0]
 80093f0:	f886 3021 	strb.w	r3, [r6, #33]	@ 0x21
 80093f4:	2001      	movs	r0, #1
 80093f6:	e7c8      	b.n	800938a <HAL_RTC_SetTime+0xf6>
 80093f8:	0001ff5f 	.word	0x0001ff5f

080093fc <HAL_RTC_GetTime>:
 80093fc:	6803      	ldr	r3, [r0, #0]
 80093fe:	b530      	push	{r4, r5, lr}
 8009400:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
 8009402:	6918      	ldr	r0, [r3, #16]
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	f3c0 000e 	ubfx	r0, r0, #0, #15
 800940a:	e9c1 4001 	strd	r4, r0, [r1, #4]
 800940e:	f3c3 4405 	ubfx	r4, r3, #16, #6
 8009412:	2000      	movs	r0, #0
 8009414:	f3c3 2e06 	ubfx	lr, r3, #8, #7
 8009418:	f364 0007 	bfi	r0, r4, #0, #8
 800941c:	f003 0c7f 	and.w	ip, r3, #127	@ 0x7f
 8009420:	f36e 200f 	bfi	r0, lr, #8, #8
 8009424:	f3c3 4506 	ubfx	r5, r3, #16, #7
 8009428:	f36c 4017 	bfi	r0, ip, #16, #8
 800942c:	f3c3 5380 	ubfx	r3, r3, #22, #1
 8009430:	f363 601f 	bfi	r0, r3, #24, #8
 8009434:	6008      	str	r0, [r1, #0]
 8009436:	b9da      	cbnz	r2, 8009470 <HAL_RTC_GetTime+0x74>
 8009438:	ea4f 131e 	mov.w	r3, lr, lsr #4
 800943c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009440:	f00e 0e0f 	and.w	lr, lr, #15
 8009444:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8009448:	0924      	lsrs	r4, r4, #4
 800944a:	ea4f 131c 	mov.w	r3, ip, lsr #4
 800944e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8009452:	f005 050f 	and.w	r5, r5, #15
 8009456:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800945a:	f00c 0c0f 	and.w	ip, ip, #15
 800945e:	eb05 0544 	add.w	r5, r5, r4, lsl #1
 8009462:	eb0c 0c43 	add.w	ip, ip, r3, lsl #1
 8009466:	700d      	strb	r5, [r1, #0]
 8009468:	f881 e001 	strb.w	lr, [r1, #1]
 800946c:	f881 c002 	strb.w	ip, [r1, #2]
 8009470:	2000      	movs	r0, #0
 8009472:	bd30      	pop	{r4, r5, pc}

08009474 <HAL_RTC_SetDate>:
 8009474:	f890 3020 	ldrb.w	r3, [r0, #32]
 8009478:	2b01      	cmp	r3, #1
 800947a:	f000 809c 	beq.w	80095b6 <HAL_RTC_SetDate+0x142>
 800947e:	b570      	push	{r4, r5, r6, lr}
 8009480:	4605      	mov	r5, r0
 8009482:	2302      	movs	r3, #2
 8009484:	2001      	movs	r0, #1
 8009486:	f885 0020 	strb.w	r0, [r5, #32]
 800948a:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 800948e:	f891 e000 	ldrb.w	lr, [r1]
 8009492:	78cb      	ldrb	r3, [r1, #3]
 8009494:	7848      	ldrb	r0, [r1, #1]
 8009496:	f891 c002 	ldrb.w	ip, [r1, #2]
 800949a:	ea4f 3e4e 	mov.w	lr, lr, lsl #13
 800949e:	b31a      	cbz	r2, 80094e8 <HAL_RTC_SetDate+0x74>
 80094a0:	ea4e 4403 	orr.w	r4, lr, r3, lsl #16
 80094a4:	ea44 040c 	orr.w	r4, r4, ip
 80094a8:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
 80094ac:	682a      	ldr	r2, [r5, #0]
 80094ae:	2353      	movs	r3, #83	@ 0x53
 80094b0:	21ca      	movs	r1, #202	@ 0xca
 80094b2:	6251      	str	r1, [r2, #36]	@ 0x24
 80094b4:	6253      	str	r3, [r2, #36]	@ 0x24
 80094b6:	68d3      	ldr	r3, [r2, #12]
 80094b8:	065e      	lsls	r6, r3, #25
 80094ba:	d550      	bpl.n	800955e <HAL_RTC_SetDate+0xea>
 80094bc:	f024 447f 	bic.w	r4, r4, #4278190080	@ 0xff000000
 80094c0:	f024 04c0 	bic.w	r4, r4, #192	@ 0xc0
 80094c4:	6054      	str	r4, [r2, #4]
 80094c6:	68d3      	ldr	r3, [r2, #12]
 80094c8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80094cc:	60d3      	str	r3, [r2, #12]
 80094ce:	6893      	ldr	r3, [r2, #8]
 80094d0:	0699      	lsls	r1, r3, #26
 80094d2:	d55f      	bpl.n	8009594 <HAL_RTC_SetDate+0x120>
 80094d4:	2301      	movs	r3, #1
 80094d6:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80094da:	2000      	movs	r0, #0
 80094dc:	21ff      	movs	r1, #255	@ 0xff
 80094de:	2300      	movs	r3, #0
 80094e0:	6251      	str	r1, [r2, #36]	@ 0x24
 80094e2:	f885 3020 	strb.w	r3, [r5, #32]
 80094e6:	bd70      	pop	{r4, r5, r6, pc}
 80094e8:	06c4      	lsls	r4, r0, #27
 80094ea:	d550      	bpl.n	800958e <HAL_RTC_SetDate+0x11a>
 80094ec:	f020 0010 	bic.w	r0, r0, #16
 80094f0:	300a      	adds	r0, #10
 80094f2:	b2c0      	uxtb	r0, r0
 80094f4:	2b09      	cmp	r3, #9
 80094f6:	7048      	strb	r0, [r1, #1]
 80094f8:	bf98      	it	ls
 80094fa:	041c      	lslls	r4, r3, #16
 80094fc:	d90d      	bls.n	800951a <HAL_RTC_SetDate+0xa6>
 80094fe:	2100      	movs	r1, #0
 8009500:	3b0a      	subs	r3, #10
 8009502:	b2db      	uxtb	r3, r3
 8009504:	2b09      	cmp	r3, #9
 8009506:	f101 0101 	add.w	r1, r1, #1
 800950a:	d8f9      	bhi.n	8009500 <HAL_RTC_SetDate+0x8c>
 800950c:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8009510:	b2db      	uxtb	r3, r3
 8009512:	2809      	cmp	r0, #9
 8009514:	ea4f 4403 	mov.w	r4, r3, lsl #16
 8009518:	d909      	bls.n	800952e <HAL_RTC_SetDate+0xba>
 800951a:	2300      	movs	r3, #0
 800951c:	380a      	subs	r0, #10
 800951e:	b2c0      	uxtb	r0, r0
 8009520:	2809      	cmp	r0, #9
 8009522:	f103 0301 	add.w	r3, r3, #1
 8009526:	d8f9      	bhi.n	800951c <HAL_RTC_SetDate+0xa8>
 8009528:	ea40 1303 	orr.w	r3, r0, r3, lsl #4
 800952c:	b2d8      	uxtb	r0, r3
 800952e:	f1bc 0f09 	cmp.w	ip, #9
 8009532:	ea4f 2000 	mov.w	r0, r0, lsl #8
 8009536:	d90c      	bls.n	8009552 <HAL_RTC_SetDate+0xde>
 8009538:	f1ac 0c0a 	sub.w	ip, ip, #10
 800953c:	fa5f fc8c 	uxtb.w	ip, ip
 8009540:	f1bc 0f09 	cmp.w	ip, #9
 8009544:	f102 0201 	add.w	r2, r2, #1
 8009548:	d8f6      	bhi.n	8009538 <HAL_RTC_SetDate+0xc4>
 800954a:	ea4c 1202 	orr.w	r2, ip, r2, lsl #4
 800954e:	fa5f fc82 	uxtb.w	ip, r2
 8009552:	ea44 040e 	orr.w	r4, r4, lr
 8009556:	4304      	orrs	r4, r0
 8009558:	ea44 040c 	orr.w	r4, r4, ip
 800955c:	e7a6      	b.n	80094ac <HAL_RTC_SetDate+0x38>
 800955e:	68d3      	ldr	r3, [r2, #12]
 8009560:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009564:	60d3      	str	r3, [r2, #12]
 8009566:	f7fb ffd1 	bl	800550c <HAL_GetTick>
 800956a:	4606      	mov	r6, r0
 800956c:	682a      	ldr	r2, [r5, #0]
 800956e:	68d3      	ldr	r3, [r2, #12]
 8009570:	0658      	lsls	r0, r3, #25
 8009572:	d4a3      	bmi.n	80094bc <HAL_RTC_SetDate+0x48>
 8009574:	f7fb ffca 	bl	800550c <HAL_GetTick>
 8009578:	1b80      	subs	r0, r0, r6
 800957a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800957e:	d9f5      	bls.n	800956c <HAL_RTC_SetDate+0xf8>
 8009580:	2304      	movs	r3, #4
 8009582:	682a      	ldr	r2, [r5, #0]
 8009584:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 8009588:	68d3      	ldr	r3, [r2, #12]
 800958a:	2001      	movs	r0, #1
 800958c:	e7a6      	b.n	80094dc <HAL_RTC_SetDate+0x68>
 800958e:	2b09      	cmp	r3, #9
 8009590:	d8b5      	bhi.n	80094fe <HAL_RTC_SetDate+0x8a>
 8009592:	e7be      	b.n	8009512 <HAL_RTC_SetDate+0x9e>
 8009594:	4b0c      	ldr	r3, [pc, #48]	@ (80095c8 <HAL_RTC_SetDate+0x154>)
 8009596:	60d3      	str	r3, [r2, #12]
 8009598:	f7fb ffb8 	bl	800550c <HAL_GetTick>
 800959c:	4604      	mov	r4, r0
 800959e:	e005      	b.n	80095ac <HAL_RTC_SetDate+0x138>
 80095a0:	f7fb ffb4 	bl	800550c <HAL_GetTick>
 80095a4:	1b00      	subs	r0, r0, r4
 80095a6:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80095aa:	d806      	bhi.n	80095ba <HAL_RTC_SetDate+0x146>
 80095ac:	682a      	ldr	r2, [r5, #0]
 80095ae:	68d3      	ldr	r3, [r2, #12]
 80095b0:	069b      	lsls	r3, r3, #26
 80095b2:	d5f5      	bpl.n	80095a0 <HAL_RTC_SetDate+0x12c>
 80095b4:	e78e      	b.n	80094d4 <HAL_RTC_SetDate+0x60>
 80095b6:	2002      	movs	r0, #2
 80095b8:	4770      	bx	lr
 80095ba:	2304      	movs	r3, #4
 80095bc:	682a      	ldr	r2, [r5, #0]
 80095be:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 80095c2:	2001      	movs	r0, #1
 80095c4:	e78a      	b.n	80094dc <HAL_RTC_SetDate+0x68>
 80095c6:	bf00      	nop
 80095c8:	0001ff5f 	.word	0x0001ff5f

080095cc <HAL_RTC_GetDate>:
 80095cc:	6803      	ldr	r3, [r0, #0]
 80095ce:	685b      	ldr	r3, [r3, #4]
 80095d0:	b510      	push	{r4, lr}
 80095d2:	2000      	movs	r0, #0
 80095d4:	f3c3 3e42 	ubfx	lr, r3, #13, #3
 80095d8:	f36e 0007 	bfi	r0, lr, #0, #8
 80095dc:	f3c3 2e04 	ubfx	lr, r3, #8, #5
 80095e0:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 80095e4:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80095e8:	f36e 200f 	bfi	r0, lr, #8, #8
 80095ec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80095f0:	f363 4017 	bfi	r0, r3, #16, #8
 80095f4:	f36c 601f 	bfi	r0, ip, #24, #8
 80095f8:	6008      	str	r0, [r1, #0]
 80095fa:	b9d2      	cbnz	r2, 8009632 <HAL_RTC_GetDate+0x66>
 80095fc:	091a      	lsrs	r2, r3, #4
 80095fe:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8009602:	f003 030f 	and.w	r3, r3, #15
 8009606:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800960a:	ea4f 1e1e 	mov.w	lr, lr, lsr #4
 800960e:	708b      	strb	r3, [r1, #2]
 8009610:	ea4f 131c 	mov.w	r3, ip, lsr #4
 8009614:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8009618:	f004 040f 	and.w	r4, r4, #15
 800961c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009620:	f00c 0c0f 	and.w	ip, ip, #15
 8009624:	eb04 044e 	add.w	r4, r4, lr, lsl #1
 8009628:	eb0c 0c43 	add.w	ip, ip, r3, lsl #1
 800962c:	704c      	strb	r4, [r1, #1]
 800962e:	f881 c003 	strb.w	ip, [r1, #3]
 8009632:	2000      	movs	r0, #0
 8009634:	bd10      	pop	{r4, pc}
 8009636:	bf00      	nop

08009638 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8009638:	b430      	push	{r4, r5}
 800963a:	4c3a      	ldr	r4, [pc, #232]	@ (8009724 <HAL_RTCEx_SetWakeUpTimer_IT+0xec>)
 800963c:	4b3a      	ldr	r3, [pc, #232]	@ (8009728 <HAL_RTCEx_SetWakeUpTimer_IT+0xf0>)
 800963e:	6825      	ldr	r5, [r4, #0]
 8009640:	fba3 3505 	umull	r3, r5, r3, r5
 8009644:	0aed      	lsrs	r5, r5, #11
 8009646:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800964a:	fb03 f505 	mul.w	r5, r3, r5
 800964e:	f890 3020 	ldrb.w	r3, [r0, #32]
 8009652:	b082      	sub	sp, #8
 8009654:	2b01      	cmp	r3, #1
 8009656:	9501      	str	r5, [sp, #4]
 8009658:	d05f      	beq.n	800971a <HAL_RTCEx_SetWakeUpTimer_IT+0xe2>
 800965a:	2301      	movs	r3, #1
 800965c:	f880 3020 	strb.w	r3, [r0, #32]
 8009660:	6804      	ldr	r4, [r0, #0]
 8009662:	2302      	movs	r3, #2
 8009664:	f880 3021 	strb.w	r3, [r0, #33]	@ 0x21
 8009668:	23ca      	movs	r3, #202	@ 0xca
 800966a:	6263      	str	r3, [r4, #36]	@ 0x24
 800966c:	2353      	movs	r3, #83	@ 0x53
 800966e:	6263      	str	r3, [r4, #36]	@ 0x24
 8009670:	68a3      	ldr	r3, [r4, #8]
 8009672:	055b      	lsls	r3, r3, #21
 8009674:	4684      	mov	ip, r0
 8009676:	d422      	bmi.n	80096be <HAL_RTCEx_SetWakeUpTimer_IT+0x86>
 8009678:	68a3      	ldr	r3, [r4, #8]
 800967a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800967e:	60a3      	str	r3, [r4, #8]
 8009680:	68e3      	ldr	r3, [r4, #12]
 8009682:	b2db      	uxtb	r3, r3
 8009684:	f463 6390 	orn	r3, r3, #1152	@ 0x480
 8009688:	60e3      	str	r3, [r4, #12]
 800968a:	9501      	str	r5, [sp, #4]
 800968c:	e002      	b.n	8009694 <HAL_RTCEx_SetWakeUpTimer_IT+0x5c>
 800968e:	68e3      	ldr	r3, [r4, #12]
 8009690:	075b      	lsls	r3, r3, #29
 8009692:	d41b      	bmi.n	80096cc <HAL_RTCEx_SetWakeUpTimer_IT+0x94>
 8009694:	9b01      	ldr	r3, [sp, #4]
 8009696:	3b01      	subs	r3, #1
 8009698:	9301      	str	r3, [sp, #4]
 800969a:	9b01      	ldr	r3, [sp, #4]
 800969c:	2b00      	cmp	r3, #0
 800969e:	d1f6      	bne.n	800968e <HAL_RTCEx_SetWakeUpTimer_IT+0x56>
 80096a0:	22ff      	movs	r2, #255	@ 0xff
 80096a2:	2303      	movs	r3, #3
 80096a4:	6262      	str	r2, [r4, #36]	@ 0x24
 80096a6:	2003      	movs	r0, #3
 80096a8:	f88c 3021 	strb.w	r3, [ip, #33]	@ 0x21
 80096ac:	2300      	movs	r3, #0
 80096ae:	f88c 3020 	strb.w	r3, [ip, #32]
 80096b2:	b002      	add	sp, #8
 80096b4:	bc30      	pop	{r4, r5}
 80096b6:	4770      	bx	lr
 80096b8:	68e3      	ldr	r3, [r4, #12]
 80096ba:	0758      	lsls	r0, r3, #29
 80096bc:	d5dc      	bpl.n	8009678 <HAL_RTCEx_SetWakeUpTimer_IT+0x40>
 80096be:	9b01      	ldr	r3, [sp, #4]
 80096c0:	3b01      	subs	r3, #1
 80096c2:	9301      	str	r3, [sp, #4]
 80096c4:	9b01      	ldr	r3, [sp, #4]
 80096c6:	2b00      	cmp	r3, #0
 80096c8:	d1f6      	bne.n	80096b8 <HAL_RTCEx_SetWakeUpTimer_IT+0x80>
 80096ca:	e7e9      	b.n	80096a0 <HAL_RTCEx_SetWakeUpTimer_IT+0x68>
 80096cc:	68a3      	ldr	r3, [r4, #8]
 80096ce:	f023 0307 	bic.w	r3, r3, #7
 80096d2:	60a3      	str	r3, [r4, #8]
 80096d4:	68a3      	ldr	r3, [r4, #8]
 80096d6:	431a      	orrs	r2, r3
 80096d8:	4b14      	ldr	r3, [pc, #80]	@ (800972c <HAL_RTCEx_SetWakeUpTimer_IT+0xf4>)
 80096da:	60a2      	str	r2, [r4, #8]
 80096dc:	6161      	str	r1, [r4, #20]
 80096de:	f8d3 2080 	ldr.w	r2, [r3, #128]	@ 0x80
 80096e2:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 80096e6:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80096ea:	681a      	ldr	r2, [r3, #0]
 80096ec:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 80096f0:	601a      	str	r2, [r3, #0]
 80096f2:	68a3      	ldr	r3, [r4, #8]
 80096f4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80096f8:	60a3      	str	r3, [r4, #8]
 80096fa:	68a3      	ldr	r3, [r4, #8]
 80096fc:	2100      	movs	r1, #0
 80096fe:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8009702:	60a3      	str	r3, [r4, #8]
 8009704:	22ff      	movs	r2, #255	@ 0xff
 8009706:	2301      	movs	r3, #1
 8009708:	4608      	mov	r0, r1
 800970a:	6262      	str	r2, [r4, #36]	@ 0x24
 800970c:	f88c 3021 	strb.w	r3, [ip, #33]	@ 0x21
 8009710:	f88c 1020 	strb.w	r1, [ip, #32]
 8009714:	b002      	add	sp, #8
 8009716:	bc30      	pop	{r4, r5}
 8009718:	4770      	bx	lr
 800971a:	2002      	movs	r0, #2
 800971c:	b002      	add	sp, #8
 800971e:	bc30      	pop	{r4, r5}
 8009720:	4770      	bx	lr
 8009722:	bf00      	nop
 8009724:	20000034 	.word	0x20000034
 8009728:	10624dd3 	.word	0x10624dd3
 800972c:	58000800 	.word	0x58000800

08009730 <HAL_RTCEx_WakeUpTimerEventCallback>:
 8009730:	4770      	bx	lr
 8009732:	bf00      	nop

08009734 <HAL_RTCEx_WakeUpTimerIRQHandler>:
 8009734:	4a0c      	ldr	r2, [pc, #48]	@ (8009768 <HAL_RTCEx_WakeUpTimerIRQHandler+0x34>)
 8009736:	6803      	ldr	r3, [r0, #0]
 8009738:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 800973c:	b510      	push	{r4, lr}
 800973e:	60d1      	str	r1, [r2, #12]
 8009740:	68da      	ldr	r2, [r3, #12]
 8009742:	0552      	lsls	r2, r2, #21
 8009744:	4604      	mov	r4, r0
 8009746:	d403      	bmi.n	8009750 <HAL_RTCEx_WakeUpTimerIRQHandler+0x1c>
 8009748:	2301      	movs	r3, #1
 800974a:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800974e:	bd10      	pop	{r4, pc}
 8009750:	68da      	ldr	r2, [r3, #12]
 8009752:	b2d2      	uxtb	r2, r2
 8009754:	f462 6290 	orn	r2, r2, #1152	@ 0x480
 8009758:	60da      	str	r2, [r3, #12]
 800975a:	f7ff ffe9 	bl	8009730 <HAL_RTCEx_WakeUpTimerEventCallback>
 800975e:	2301      	movs	r3, #1
 8009760:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8009764:	bd10      	pop	{r4, pc}
 8009766:	bf00      	nop
 8009768:	58000800 	.word	0x58000800

0800976c <SPI_WaitFifoStateUntilTimeout.constprop.0>:
 800976c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009770:	b082      	sub	sp, #8
 8009772:	2300      	movs	r3, #0
 8009774:	460e      	mov	r6, r1
 8009776:	4615      	mov	r5, r2
 8009778:	f88d 3003 	strb.w	r3, [sp, #3]
 800977c:	4607      	mov	r7, r0
 800977e:	f7fb fec5 	bl	800550c <HAL_GetTick>
 8009782:	4435      	add	r5, r6
 8009784:	1a2d      	subs	r5, r5, r0
 8009786:	f7fb fec1 	bl	800550c <HAL_GetTick>
 800978a:	4b32      	ldr	r3, [pc, #200]	@ (8009854 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xe8>)
 800978c:	683c      	ldr	r4, [r7, #0]
 800978e:	681b      	ldr	r3, [r3, #0]
 8009790:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009794:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8009798:	0d1b      	lsrs	r3, r3, #20
 800979a:	fb05 f303 	mul.w	r3, r5, r3
 800979e:	3601      	adds	r6, #1
 80097a0:	9301      	str	r3, [sp, #4]
 80097a2:	d111      	bne.n	80097c8 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x5c>
 80097a4:	68a3      	ldr	r3, [r4, #8]
 80097a6:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 80097aa:	d009      	beq.n	80097c0 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
 80097ac:	7b23      	ldrb	r3, [r4, #12]
 80097ae:	b2db      	uxtb	r3, r3
 80097b0:	f88d 3003 	strb.w	r3, [sp, #3]
 80097b4:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80097b8:	68a3      	ldr	r3, [r4, #8]
 80097ba:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 80097be:	d1f5      	bne.n	80097ac <SPI_WaitFifoStateUntilTimeout.constprop.0+0x40>
 80097c0:	2000      	movs	r0, #0
 80097c2:	b002      	add	sp, #8
 80097c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80097c8:	4680      	mov	r8, r0
 80097ca:	4623      	mov	r3, r4
 80097cc:	689b      	ldr	r3, [r3, #8]
 80097ce:	f413 6fc0 	tst.w	r3, #1536	@ 0x600
 80097d2:	d0f5      	beq.n	80097c0 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
 80097d4:	7b23      	ldrb	r3, [r4, #12]
 80097d6:	b2db      	uxtb	r3, r3
 80097d8:	f88d 3003 	strb.w	r3, [sp, #3]
 80097dc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80097e0:	f7fb fe94 	bl	800550c <HAL_GetTick>
 80097e4:	eba0 0008 	sub.w	r0, r0, r8
 80097e8:	42a8      	cmp	r0, r5
 80097ea:	d209      	bcs.n	8009800 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x94>
 80097ec:	9a01      	ldr	r2, [sp, #4]
 80097ee:	9b01      	ldr	r3, [sp, #4]
 80097f0:	2a00      	cmp	r2, #0
 80097f2:	f103 33ff 	add.w	r3, r3, #4294967295
 80097f6:	9301      	str	r3, [sp, #4]
 80097f8:	bf08      	it	eq
 80097fa:	2500      	moveq	r5, #0
 80097fc:	683b      	ldr	r3, [r7, #0]
 80097fe:	e7e5      	b.n	80097cc <SPI_WaitFifoStateUntilTimeout.constprop.0+0x60>
 8009800:	e9d7 3100 	ldrd	r3, r1, [r7]
 8009804:	685a      	ldr	r2, [r3, #4]
 8009806:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 800980a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800980e:	605a      	str	r2, [r3, #4]
 8009810:	d013      	beq.n	800983a <SPI_WaitFifoStateUntilTimeout.constprop.0+0xce>
 8009812:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8009814:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8009818:	d107      	bne.n	800982a <SPI_WaitFifoStateUntilTimeout.constprop.0+0xbe>
 800981a:	681a      	ldr	r2, [r3, #0]
 800981c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009820:	601a      	str	r2, [r3, #0]
 8009822:	681a      	ldr	r2, [r3, #0]
 8009824:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009828:	601a      	str	r2, [r3, #0]
 800982a:	2201      	movs	r2, #1
 800982c:	2300      	movs	r3, #0
 800982e:	f887 205d 	strb.w	r2, [r7, #93]	@ 0x5d
 8009832:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
 8009836:	2003      	movs	r0, #3
 8009838:	e7c3      	b.n	80097c2 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x56>
 800983a:	68ba      	ldr	r2, [r7, #8]
 800983c:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8009840:	d002      	beq.n	8009848 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xdc>
 8009842:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8009846:	d1e4      	bne.n	8009812 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa6>
 8009848:	681a      	ldr	r2, [r3, #0]
 800984a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800984e:	601a      	str	r2, [r3, #0]
 8009850:	e7df      	b.n	8009812 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xa6>
 8009852:	bf00      	nop
 8009854:	20000034 	.word	0x20000034

08009858 <SPI_EndRxTxTransaction>:
 8009858:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800985c:	b084      	sub	sp, #16
 800985e:	2300      	movs	r3, #0
 8009860:	460e      	mov	r6, r1
 8009862:	4617      	mov	r7, r2
 8009864:	f88d 3007 	strb.w	r3, [sp, #7]
 8009868:	4605      	mov	r5, r0
 800986a:	f7fb fe4f 	bl	800550c <HAL_GetTick>
 800986e:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 80099a8 <SPI_EndRxTxTransaction+0x150>
 8009872:	eb06 0807 	add.w	r8, r6, r7
 8009876:	eba8 0400 	sub.w	r4, r8, r0
 800987a:	f7fb fe47 	bl	800550c <HAL_GetTick>
 800987e:	f8d9 3000 	ldr.w	r3, [r9]
 8009882:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009886:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800988a:	0d1b      	lsrs	r3, r3, #20
 800988c:	fb04 f303 	mul.w	r3, r4, r3
 8009890:	9302      	str	r3, [sp, #8]
 8009892:	1c73      	adds	r3, r6, #1
 8009894:	d126      	bne.n	80098e4 <SPI_EndRxTxTransaction+0x8c>
 8009896:	682c      	ldr	r4, [r5, #0]
 8009898:	68a3      	ldr	r3, [r4, #8]
 800989a:	f413 5fc0 	tst.w	r3, #6144	@ 0x1800
 800989e:	d1fb      	bne.n	8009898 <SPI_EndRxTxTransaction+0x40>
 80098a0:	f7fb fe34 	bl	800550c <HAL_GetTick>
 80098a4:	eba8 0800 	sub.w	r8, r8, r0
 80098a8:	f7fb fe30 	bl	800550c <HAL_GetTick>
 80098ac:	f8d9 3000 	ldr.w	r3, [r9]
 80098b0:	682a      	ldr	r2, [r5, #0]
 80098b2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80098b6:	fb08 f303 	mul.w	r3, r8, r3
 80098ba:	9303      	str	r3, [sp, #12]
 80098bc:	6893      	ldr	r3, [r2, #8]
 80098be:	0619      	lsls	r1, r3, #24
 80098c0:	d4fc      	bmi.n	80098bc <SPI_EndRxTxTransaction+0x64>
 80098c2:	463a      	mov	r2, r7
 80098c4:	4631      	mov	r1, r6
 80098c6:	4628      	mov	r0, r5
 80098c8:	f7ff ff50 	bl	800976c <SPI_WaitFifoStateUntilTimeout.constprop.0>
 80098cc:	b910      	cbnz	r0, 80098d4 <SPI_EndRxTxTransaction+0x7c>
 80098ce:	b004      	add	sp, #16
 80098d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80098d4:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 80098d6:	f043 0320 	orr.w	r3, r3, #32
 80098da:	662b      	str	r3, [r5, #96]	@ 0x60
 80098dc:	2003      	movs	r0, #3
 80098de:	b004      	add	sp, #16
 80098e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80098e4:	4682      	mov	sl, r0
 80098e6:	682b      	ldr	r3, [r5, #0]
 80098e8:	689b      	ldr	r3, [r3, #8]
 80098ea:	f413 5fc0 	tst.w	r3, #6144	@ 0x1800
 80098ee:	d00e      	beq.n	800990e <SPI_EndRxTxTransaction+0xb6>
 80098f0:	f7fb fe0c 	bl	800550c <HAL_GetTick>
 80098f4:	eba0 030a 	sub.w	r3, r0, sl
 80098f8:	42a3      	cmp	r3, r4
 80098fa:	d220      	bcs.n	800993e <SPI_EndRxTxTransaction+0xe6>
 80098fc:	9a02      	ldr	r2, [sp, #8]
 80098fe:	9b02      	ldr	r3, [sp, #8]
 8009900:	2a00      	cmp	r2, #0
 8009902:	f103 33ff 	add.w	r3, r3, #4294967295
 8009906:	bf08      	it	eq
 8009908:	2400      	moveq	r4, #0
 800990a:	9302      	str	r3, [sp, #8]
 800990c:	e7eb      	b.n	80098e6 <SPI_EndRxTxTransaction+0x8e>
 800990e:	f7fb fdfd 	bl	800550c <HAL_GetTick>
 8009912:	eba8 0400 	sub.w	r4, r8, r0
 8009916:	f7fb fdf9 	bl	800550c <HAL_GetTick>
 800991a:	f8d9 3000 	ldr.w	r3, [r9]
 800991e:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8009922:	fb04 f303 	mul.w	r3, r4, r3
 8009926:	4680      	mov	r8, r0
 8009928:	9303      	str	r3, [sp, #12]
 800992a:	682b      	ldr	r3, [r5, #0]
 800992c:	689b      	ldr	r3, [r3, #8]
 800992e:	061b      	lsls	r3, r3, #24
 8009930:	d5c7      	bpl.n	80098c2 <SPI_EndRxTxTransaction+0x6a>
 8009932:	f7fb fdeb 	bl	800550c <HAL_GetTick>
 8009936:	eba0 0308 	sub.w	r3, r0, r8
 800993a:	42a3      	cmp	r3, r4
 800993c:	d31f      	bcc.n	800997e <SPI_EndRxTxTransaction+0x126>
 800993e:	e9d5 3100 	ldrd	r3, r1, [r5]
 8009942:	685a      	ldr	r2, [r3, #4]
 8009944:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8009948:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800994c:	605a      	str	r2, [r3, #4]
 800994e:	d01f      	beq.n	8009990 <SPI_EndRxTxTransaction+0x138>
 8009950:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 8009952:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8009956:	d107      	bne.n	8009968 <SPI_EndRxTxTransaction+0x110>
 8009958:	681a      	ldr	r2, [r3, #0]
 800995a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800995e:	601a      	str	r2, [r3, #0]
 8009960:	681a      	ldr	r2, [r3, #0]
 8009962:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009966:	601a      	str	r2, [r3, #0]
 8009968:	2301      	movs	r3, #1
 800996a:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
 800996e:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
 8009970:	2200      	movs	r2, #0
 8009972:	f043 0320 	orr.w	r3, r3, #32
 8009976:	f885 205c 	strb.w	r2, [r5, #92]	@ 0x5c
 800997a:	662b      	str	r3, [r5, #96]	@ 0x60
 800997c:	e7ae      	b.n	80098dc <SPI_EndRxTxTransaction+0x84>
 800997e:	9a03      	ldr	r2, [sp, #12]
 8009980:	9b03      	ldr	r3, [sp, #12]
 8009982:	2a00      	cmp	r2, #0
 8009984:	f103 33ff 	add.w	r3, r3, #4294967295
 8009988:	bf08      	it	eq
 800998a:	2400      	moveq	r4, #0
 800998c:	9303      	str	r3, [sp, #12]
 800998e:	e7cc      	b.n	800992a <SPI_EndRxTxTransaction+0xd2>
 8009990:	68aa      	ldr	r2, [r5, #8]
 8009992:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8009996:	d002      	beq.n	800999e <SPI_EndRxTxTransaction+0x146>
 8009998:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800999c:	d1d8      	bne.n	8009950 <SPI_EndRxTxTransaction+0xf8>
 800999e:	681a      	ldr	r2, [r3, #0]
 80099a0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80099a4:	601a      	str	r2, [r3, #0]
 80099a6:	e7d3      	b.n	8009950 <SPI_EndRxTxTransaction+0xf8>
 80099a8:	20000034 	.word	0x20000034

080099ac <HAL_SPI_Init>:
 80099ac:	2800      	cmp	r0, #0
 80099ae:	d074      	beq.n	8009a9a <HAL_SPI_Init+0xee>
 80099b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099b4:	4604      	mov	r4, r0
 80099b6:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80099b8:	2800      	cmp	r0, #0
 80099ba:	d053      	beq.n	8009a64 <HAL_SPI_Init+0xb8>
 80099bc:	2300      	movs	r3, #0
 80099be:	e9c4 3304 	strd	r3, r3, [r4, #16]
 80099c2:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 80099c6:	2200      	movs	r2, #0
 80099c8:	62a2      	str	r2, [r4, #40]	@ 0x28
 80099ca:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80099ce:	2b00      	cmp	r3, #0
 80099d0:	d057      	beq.n	8009a82 <HAL_SPI_Init+0xd6>
 80099d2:	6821      	ldr	r1, [r4, #0]
 80099d4:	68e7      	ldr	r7, [r4, #12]
 80099d6:	2302      	movs	r3, #2
 80099d8:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80099dc:	680b      	ldr	r3, [r1, #0]
 80099de:	f5b7 6fe0 	cmp.w	r7, #1792	@ 0x700
 80099e2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80099e6:	600b      	str	r3, [r1, #0]
 80099e8:	d842      	bhi.n	8009a70 <HAL_SPI_Init+0xc4>
 80099ea:	d151      	bne.n	8009a90 <HAL_SPI_Init+0xe4>
 80099ec:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 80099ee:	f44f 5c80 	mov.w	ip, #4096	@ 0x1000
 80099f2:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
 80099f6:	6862      	ldr	r2, [r4, #4]
 80099f8:	68a3      	ldr	r3, [r4, #8]
 80099fa:	69a6      	ldr	r6, [r4, #24]
 80099fc:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8009a00:	f402 7282 	and.w	r2, r2, #260	@ 0x104
 8009a04:	431a      	orrs	r2, r3
 8009a06:	6923      	ldr	r3, [r4, #16]
 8009a08:	f003 0302 	and.w	r3, r3, #2
 8009a0c:	4313      	orrs	r3, r2
 8009a0e:	6962      	ldr	r2, [r4, #20]
 8009a10:	f002 0201 	and.w	r2, r2, #1
 8009a14:	431a      	orrs	r2, r3
 8009a16:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8009a18:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
 8009a1c:	f003 0308 	and.w	r3, r3, #8
 8009a20:	ea43 0e07 	orr.w	lr, r3, r7
 8009a24:	69e3      	ldr	r3, [r4, #28]
 8009a26:	f003 0838 	and.w	r8, r3, #56	@ 0x38
 8009a2a:	6a23      	ldr	r3, [r4, #32]
 8009a2c:	f003 0780 	and.w	r7, r3, #128	@ 0x80
 8009a30:	f406 7300 	and.w	r3, r6, #512	@ 0x200
 8009a34:	4313      	orrs	r3, r2
 8009a36:	ea43 0308 	orr.w	r3, r3, r8
 8009a3a:	433b      	orrs	r3, r7
 8009a3c:	0c36      	lsrs	r6, r6, #16
 8009a3e:	432b      	orrs	r3, r5
 8009a40:	f006 0604 	and.w	r6, r6, #4
 8009a44:	600b      	str	r3, [r1, #0]
 8009a46:	f000 0010 	and.w	r0, r0, #16
 8009a4a:	ea4e 0306 	orr.w	r3, lr, r6
 8009a4e:	4303      	orrs	r3, r0
 8009a50:	ea43 030c 	orr.w	r3, r3, ip
 8009a54:	604b      	str	r3, [r1, #4]
 8009a56:	2000      	movs	r0, #0
 8009a58:	2301      	movs	r3, #1
 8009a5a:	6620      	str	r0, [r4, #96]	@ 0x60
 8009a5c:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009a60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a64:	6863      	ldr	r3, [r4, #4]
 8009a66:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009a6a:	d0aa      	beq.n	80099c2 <HAL_SPI_Init+0x16>
 8009a6c:	61e0      	str	r0, [r4, #28]
 8009a6e:	e7a8      	b.n	80099c2 <HAL_SPI_Init+0x16>
 8009a70:	f5b7 6f70 	cmp.w	r7, #3840	@ 0xf00
 8009a74:	d113      	bne.n	8009a9e <HAL_SPI_Init+0xf2>
 8009a76:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8009a78:	f04f 0c00 	mov.w	ip, #0
 8009a7c:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
 8009a80:	e7b9      	b.n	80099f6 <HAL_SPI_Init+0x4a>
 8009a82:	4620      	mov	r0, r4
 8009a84:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8009a88:	f7f8 fcfe 	bl	8002488 <HAL_SPI_MspInit>
 8009a8c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8009a8e:	e7a0      	b.n	80099d2 <HAL_SPI_Init+0x26>
 8009a90:	f44f 5c80 	mov.w	ip, #4096	@ 0x1000
 8009a94:	2500      	movs	r5, #0
 8009a96:	62a5      	str	r5, [r4, #40]	@ 0x28
 8009a98:	e7ad      	b.n	80099f6 <HAL_SPI_Init+0x4a>
 8009a9a:	2001      	movs	r0, #1
 8009a9c:	4770      	bx	lr
 8009a9e:	f04f 0c00 	mov.w	ip, #0
 8009aa2:	e7f7      	b.n	8009a94 <HAL_SPI_Init+0xe8>

08009aa4 <HAL_SPI_Transmit>:
 8009aa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009aa8:	4604      	mov	r4, r0
 8009aaa:	b082      	sub	sp, #8
 8009aac:	461d      	mov	r5, r3
 8009aae:	460f      	mov	r7, r1
 8009ab0:	4690      	mov	r8, r2
 8009ab2:	f7fb fd2b 	bl	800550c <HAL_GetTick>
 8009ab6:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009aba:	2b01      	cmp	r3, #1
 8009abc:	d17e      	bne.n	8009bbc <HAL_SPI_Transmit+0x118>
 8009abe:	4606      	mov	r6, r0
 8009ac0:	b2d8      	uxtb	r0, r3
 8009ac2:	2f00      	cmp	r7, #0
 8009ac4:	d077      	beq.n	8009bb6 <HAL_SPI_Transmit+0x112>
 8009ac6:	f1b8 0f00 	cmp.w	r8, #0
 8009aca:	d074      	beq.n	8009bb6 <HAL_SPI_Transmit+0x112>
 8009acc:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009ad0:	2b01      	cmp	r3, #1
 8009ad2:	d073      	beq.n	8009bbc <HAL_SPI_Transmit+0x118>
 8009ad4:	68a1      	ldr	r1, [r4, #8]
 8009ad6:	6823      	ldr	r3, [r4, #0]
 8009ad8:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 8009adc:	2200      	movs	r2, #0
 8009ade:	2003      	movs	r0, #3
 8009ae0:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8009ae4:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 8009ae8:	e9c4 2213 	strd	r2, r2, [r4, #76]	@ 0x4c
 8009aec:	6622      	str	r2, [r4, #96]	@ 0x60
 8009aee:	6422      	str	r2, [r4, #64]	@ 0x40
 8009af0:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 8009af4:	f8a4 803e 	strh.w	r8, [r4, #62]	@ 0x3e
 8009af8:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009afa:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8009afe:	f8a4 803c 	strh.w	r8, [r4, #60]	@ 0x3c
 8009b02:	461a      	mov	r2, r3
 8009b04:	d107      	bne.n	8009b16 <HAL_SPI_Transmit+0x72>
 8009b06:	6819      	ldr	r1, [r3, #0]
 8009b08:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 8009b0c:	6019      	str	r1, [r3, #0]
 8009b0e:	6819      	ldr	r1, [r3, #0]
 8009b10:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8009b14:	6019      	str	r1, [r3, #0]
 8009b16:	6819      	ldr	r1, [r3, #0]
 8009b18:	0649      	lsls	r1, r1, #25
 8009b1a:	d403      	bmi.n	8009b24 <HAL_SPI_Transmit+0x80>
 8009b1c:	6819      	ldr	r1, [r3, #0]
 8009b1e:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8009b22:	6019      	str	r1, [r3, #0]
 8009b24:	68e1      	ldr	r1, [r4, #12]
 8009b26:	6860      	ldr	r0, [r4, #4]
 8009b28:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009b2c:	d84a      	bhi.n	8009bc4 <HAL_SPI_Transmit+0x120>
 8009b2e:	2800      	cmp	r0, #0
 8009b30:	f000 80c3 	beq.w	8009cba <HAL_SPI_Transmit+0x216>
 8009b34:	f1b8 0f01 	cmp.w	r8, #1
 8009b38:	f000 80bf 	beq.w	8009cba <HAL_SPI_Transmit+0x216>
 8009b3c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009b3e:	b29b      	uxth	r3, r3
 8009b40:	b1f3      	cbz	r3, 8009b80 <HAL_SPI_Transmit+0xdc>
 8009b42:	1c68      	adds	r0, r5, #1
 8009b44:	d012      	beq.n	8009b6c <HAL_SPI_Transmit+0xc8>
 8009b46:	e091      	b.n	8009c6c <HAL_SPI_Transmit+0x1c8>
 8009b48:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009b4a:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8009b4c:	b29b      	uxth	r3, r3
 8009b4e:	2b01      	cmp	r3, #1
 8009b50:	4601      	mov	r1, r0
 8009b52:	f240 809f 	bls.w	8009c94 <HAL_SPI_Transmit+0x1f0>
 8009b56:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009b5a:	60d3      	str	r3, [r2, #12]
 8009b5c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009b5e:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009b60:	3b02      	subs	r3, #2
 8009b62:	b29b      	uxth	r3, r3
 8009b64:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009b66:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009b68:	b289      	uxth	r1, r1
 8009b6a:	b149      	cbz	r1, 8009b80 <HAL_SPI_Transmit+0xdc>
 8009b6c:	6822      	ldr	r2, [r4, #0]
 8009b6e:	6893      	ldr	r3, [r2, #8]
 8009b70:	0799      	lsls	r1, r3, #30
 8009b72:	d4e9      	bmi.n	8009b48 <HAL_SPI_Transmit+0xa4>
 8009b74:	f7fb fcca 	bl	800550c <HAL_GetTick>
 8009b78:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009b7a:	b289      	uxth	r1, r1
 8009b7c:	2900      	cmp	r1, #0
 8009b7e:	d1f5      	bne.n	8009b6c <HAL_SPI_Transmit+0xc8>
 8009b80:	4632      	mov	r2, r6
 8009b82:	4629      	mov	r1, r5
 8009b84:	4620      	mov	r0, r4
 8009b86:	f7ff fe67 	bl	8009858 <SPI_EndRxTxTransaction>
 8009b8a:	b108      	cbz	r0, 8009b90 <HAL_SPI_Transmit+0xec>
 8009b8c:	2320      	movs	r3, #32
 8009b8e:	6623      	str	r3, [r4, #96]	@ 0x60
 8009b90:	68a3      	ldr	r3, [r4, #8]
 8009b92:	b933      	cbnz	r3, 8009ba2 <HAL_SPI_Transmit+0xfe>
 8009b94:	6822      	ldr	r2, [r4, #0]
 8009b96:	9301      	str	r3, [sp, #4]
 8009b98:	68d3      	ldr	r3, [r2, #12]
 8009b9a:	9301      	str	r3, [sp, #4]
 8009b9c:	6893      	ldr	r3, [r2, #8]
 8009b9e:	9301      	str	r3, [sp, #4]
 8009ba0:	9b01      	ldr	r3, [sp, #4]
 8009ba2:	2301      	movs	r3, #1
 8009ba4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009ba8:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8009baa:	2300      	movs	r3, #0
 8009bac:	1ac0      	subs	r0, r0, r3
 8009bae:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009bb2:	bf18      	it	ne
 8009bb4:	2001      	movne	r0, #1
 8009bb6:	b002      	add	sp, #8
 8009bb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009bbc:	2002      	movs	r0, #2
 8009bbe:	b002      	add	sp, #8
 8009bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009bc4:	2800      	cmp	r0, #0
 8009bc6:	d06f      	beq.n	8009ca8 <HAL_SPI_Transmit+0x204>
 8009bc8:	f1b8 0f01 	cmp.w	r8, #1
 8009bcc:	d06c      	beq.n	8009ca8 <HAL_SPI_Transmit+0x204>
 8009bce:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009bd0:	b289      	uxth	r1, r1
 8009bd2:	2900      	cmp	r1, #0
 8009bd4:	d0d4      	beq.n	8009b80 <HAL_SPI_Transmit+0xdc>
 8009bd6:	1c69      	adds	r1, r5, #1
 8009bd8:	d12c      	bne.n	8009c34 <HAL_SPI_Transmit+0x190>
 8009bda:	689a      	ldr	r2, [r3, #8]
 8009bdc:	0797      	lsls	r7, r2, #30
 8009bde:	d513      	bpl.n	8009c08 <HAL_SPI_Transmit+0x164>
 8009be0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009be2:	f832 1b02 	ldrh.w	r1, [r2], #2
 8009be6:	60d9      	str	r1, [r3, #12]
 8009be8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	@ 0x3e
 8009bec:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009bee:	f10c 3cff 	add.w	ip, ip, #4294967295
 8009bf2:	fa1f fc8c 	uxth.w	ip, ip
 8009bf6:	f8a4 c03e 	strh.w	ip, [r4, #62]	@ 0x3e
 8009bfa:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009bfc:	b292      	uxth	r2, r2
 8009bfe:	2a00      	cmp	r2, #0
 8009c00:	d0be      	beq.n	8009b80 <HAL_SPI_Transmit+0xdc>
 8009c02:	689a      	ldr	r2, [r3, #8]
 8009c04:	0797      	lsls	r7, r2, #30
 8009c06:	d4eb      	bmi.n	8009be0 <HAL_SPI_Transmit+0x13c>
 8009c08:	f7fb fc80 	bl	800550c <HAL_GetTick>
 8009c0c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c0e:	b29b      	uxth	r3, r3
 8009c10:	2b00      	cmp	r3, #0
 8009c12:	d0b5      	beq.n	8009b80 <HAL_SPI_Transmit+0xdc>
 8009c14:	6823      	ldr	r3, [r4, #0]
 8009c16:	e7e0      	b.n	8009bda <HAL_SPI_Transmit+0x136>
 8009c18:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009c1a:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009c1e:	60d3      	str	r3, [r2, #12]
 8009c20:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c22:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009c24:	3b01      	subs	r3, #1
 8009c26:	b29b      	uxth	r3, r3
 8009c28:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009c2a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c2c:	b29b      	uxth	r3, r3
 8009c2e:	2b00      	cmp	r3, #0
 8009c30:	d0a6      	beq.n	8009b80 <HAL_SPI_Transmit+0xdc>
 8009c32:	6822      	ldr	r2, [r4, #0]
 8009c34:	6893      	ldr	r3, [r2, #8]
 8009c36:	0798      	lsls	r0, r3, #30
 8009c38:	d4ee      	bmi.n	8009c18 <HAL_SPI_Transmit+0x174>
 8009c3a:	f7fb fc67 	bl	800550c <HAL_GetTick>
 8009c3e:	1b80      	subs	r0, r0, r6
 8009c40:	42a8      	cmp	r0, r5
 8009c42:	d3f2      	bcc.n	8009c2a <HAL_SPI_Transmit+0x186>
 8009c44:	2301      	movs	r3, #1
 8009c46:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009c4a:	2300      	movs	r3, #0
 8009c4c:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009c50:	2003      	movs	r0, #3
 8009c52:	e7b0      	b.n	8009bb6 <HAL_SPI_Transmit+0x112>
 8009c54:	f831 2b02 	ldrh.w	r2, [r1], #2
 8009c58:	60da      	str	r2, [r3, #12]
 8009c5a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c5c:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009c5e:	3b02      	subs	r3, #2
 8009c60:	b29b      	uxth	r3, r3
 8009c62:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009c64:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c66:	b29b      	uxth	r3, r3
 8009c68:	2b00      	cmp	r3, #0
 8009c6a:	d089      	beq.n	8009b80 <HAL_SPI_Transmit+0xdc>
 8009c6c:	6823      	ldr	r3, [r4, #0]
 8009c6e:	689a      	ldr	r2, [r3, #8]
 8009c70:	0792      	lsls	r2, r2, #30
 8009c72:	d539      	bpl.n	8009ce8 <HAL_SPI_Transmit+0x244>
 8009c74:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009c76:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8009c78:	b292      	uxth	r2, r2
 8009c7a:	2a01      	cmp	r2, #1
 8009c7c:	4601      	mov	r1, r0
 8009c7e:	d8e9      	bhi.n	8009c54 <HAL_SPI_Transmit+0x1b0>
 8009c80:	7802      	ldrb	r2, [r0, #0]
 8009c82:	731a      	strb	r2, [r3, #12]
 8009c84:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c86:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009c88:	3b01      	subs	r3, #1
 8009c8a:	3201      	adds	r2, #1
 8009c8c:	b29b      	uxth	r3, r3
 8009c8e:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009c90:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009c92:	e7e7      	b.n	8009c64 <HAL_SPI_Transmit+0x1c0>
 8009c94:	7803      	ldrb	r3, [r0, #0]
 8009c96:	7313      	strb	r3, [r2, #12]
 8009c98:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009c9a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009c9c:	3b01      	subs	r3, #1
 8009c9e:	3201      	adds	r2, #1
 8009ca0:	b29b      	uxth	r3, r3
 8009ca2:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009ca4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009ca6:	e75e      	b.n	8009b66 <HAL_SPI_Transmit+0xc2>
 8009ca8:	f837 1b02 	ldrh.w	r1, [r7], #2
 8009cac:	60d9      	str	r1, [r3, #12]
 8009cae:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009cb0:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009cb2:	3901      	subs	r1, #1
 8009cb4:	b289      	uxth	r1, r1
 8009cb6:	87e1      	strh	r1, [r4, #62]	@ 0x3e
 8009cb8:	e789      	b.n	8009bce <HAL_SPI_Transmit+0x12a>
 8009cba:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009cbc:	b292      	uxth	r2, r2
 8009cbe:	2a01      	cmp	r2, #1
 8009cc0:	d908      	bls.n	8009cd4 <HAL_SPI_Transmit+0x230>
 8009cc2:	f837 2b02 	ldrh.w	r2, [r7], #2
 8009cc6:	60da      	str	r2, [r3, #12]
 8009cc8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009cca:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009ccc:	3b02      	subs	r3, #2
 8009cce:	b29b      	uxth	r3, r3
 8009cd0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009cd2:	e733      	b.n	8009b3c <HAL_SPI_Transmit+0x98>
 8009cd4:	783a      	ldrb	r2, [r7, #0]
 8009cd6:	731a      	strb	r2, [r3, #12]
 8009cd8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009cda:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009cdc:	3b01      	subs	r3, #1
 8009cde:	3201      	adds	r2, #1
 8009ce0:	b29b      	uxth	r3, r3
 8009ce2:	63a2      	str	r2, [r4, #56]	@ 0x38
 8009ce4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009ce6:	e729      	b.n	8009b3c <HAL_SPI_Transmit+0x98>
 8009ce8:	f7fb fc10 	bl	800550c <HAL_GetTick>
 8009cec:	1b80      	subs	r0, r0, r6
 8009cee:	42a8      	cmp	r0, r5
 8009cf0:	d3b8      	bcc.n	8009c64 <HAL_SPI_Transmit+0x1c0>
 8009cf2:	e7a7      	b.n	8009c44 <HAL_SPI_Transmit+0x1a0>

08009cf4 <HAL_SPI_TransmitReceive>:
 8009cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009cf8:	4604      	mov	r4, r0
 8009cfa:	4690      	mov	r8, r2
 8009cfc:	461e      	mov	r6, r3
 8009cfe:	460f      	mov	r7, r1
 8009d00:	f7fb fc04 	bl	800550c <HAL_GetTick>
 8009d04:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009d08:	6862      	ldr	r2, [r4, #4]
 8009d0a:	2b01      	cmp	r3, #1
 8009d0c:	4605      	mov	r5, r0
 8009d0e:	d00b      	beq.n	8009d28 <HAL_SPI_TransmitReceive+0x34>
 8009d10:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8009d14:	f040 808c 	bne.w	8009e30 <HAL_SPI_TransmitReceive+0x13c>
 8009d18:	b2d9      	uxtb	r1, r3
 8009d1a:	68a3      	ldr	r3, [r4, #8]
 8009d1c:	2b00      	cmp	r3, #0
 8009d1e:	f040 8087 	bne.w	8009e30 <HAL_SPI_TransmitReceive+0x13c>
 8009d22:	2904      	cmp	r1, #4
 8009d24:	f040 8084 	bne.w	8009e30 <HAL_SPI_TransmitReceive+0x13c>
 8009d28:	2f00      	cmp	r7, #0
 8009d2a:	f000 8169 	beq.w	800a000 <HAL_SPI_TransmitReceive+0x30c>
 8009d2e:	f1b8 0f00 	cmp.w	r8, #0
 8009d32:	f000 8165 	beq.w	800a000 <HAL_SPI_TransmitReceive+0x30c>
 8009d36:	2e00      	cmp	r6, #0
 8009d38:	f000 8162 	beq.w	800a000 <HAL_SPI_TransmitReceive+0x30c>
 8009d3c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009d40:	2b01      	cmp	r3, #1
 8009d42:	d075      	beq.n	8009e30 <HAL_SPI_TransmitReceive+0x13c>
 8009d44:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8009d48:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
 8009d4c:	2101      	movs	r1, #1
 8009d4e:	2b04      	cmp	r3, #4
 8009d50:	f884 105c 	strb.w	r1, [r4, #92]	@ 0x5c
 8009d54:	68e1      	ldr	r1, [r4, #12]
 8009d56:	f8a4 6044 	strh.w	r6, [r4, #68]	@ 0x44
 8009d5a:	bf1c      	itt	ne
 8009d5c:	2305      	movne	r3, #5
 8009d5e:	f884 305d 	strbne.w	r3, [r4, #93]	@ 0x5d
 8009d62:	2300      	movs	r3, #0
 8009d64:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009d68:	6623      	str	r3, [r4, #96]	@ 0x60
 8009d6a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8009d6c:	f8a4 6046 	strh.w	r6, [r4, #70]	@ 0x46
 8009d70:	6523      	str	r3, [r4, #80]	@ 0x50
 8009d72:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009d74:	6823      	ldr	r3, [r4, #0]
 8009d76:	87a6      	strh	r6, [r4, #60]	@ 0x3c
 8009d78:	87e6      	strh	r6, [r4, #62]	@ 0x3e
 8009d7a:	d95c      	bls.n	8009e36 <HAL_SPI_TransmitReceive+0x142>
 8009d7c:	6859      	ldr	r1, [r3, #4]
 8009d7e:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 8009d82:	6059      	str	r1, [r3, #4]
 8009d84:	6819      	ldr	r1, [r3, #0]
 8009d86:	0648      	lsls	r0, r1, #25
 8009d88:	d403      	bmi.n	8009d92 <HAL_SPI_TransmitReceive+0x9e>
 8009d8a:	6819      	ldr	r1, [r3, #0]
 8009d8c:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8009d90:	6019      	str	r1, [r3, #0]
 8009d92:	2a00      	cmp	r2, #0
 8009d94:	f000 8100 	beq.w	8009f98 <HAL_SPI_TransmitReceive+0x2a4>
 8009d98:	2e01      	cmp	r6, #1
 8009d9a:	f000 80fd 	beq.w	8009f98 <HAL_SPI_TransmitReceive+0x2a4>
 8009d9e:	9b06      	ldr	r3, [sp, #24]
 8009da0:	3301      	adds	r3, #1
 8009da2:	f04f 0601 	mov.w	r6, #1
 8009da6:	d028      	beq.n	8009dfa <HAL_SPI_TransmitReceive+0x106>
 8009da8:	e09a      	b.n	8009ee0 <HAL_SPI_TransmitReceive+0x1ec>
 8009daa:	6822      	ldr	r2, [r4, #0]
 8009dac:	6893      	ldr	r3, [r2, #8]
 8009dae:	0799      	lsls	r1, r3, #30
 8009db0:	d50d      	bpl.n	8009dce <HAL_SPI_TransmitReceive+0xda>
 8009db2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009db4:	b29b      	uxth	r3, r3
 8009db6:	b153      	cbz	r3, 8009dce <HAL_SPI_TransmitReceive+0xda>
 8009db8:	b146      	cbz	r6, 8009dcc <HAL_SPI_TransmitReceive+0xd8>
 8009dba:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009dbc:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009dc0:	60d3      	str	r3, [r2, #12]
 8009dc2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009dc4:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009dc6:	3b01      	subs	r3, #1
 8009dc8:	b29b      	uxth	r3, r3
 8009dca:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009dcc:	2600      	movs	r6, #0
 8009dce:	6893      	ldr	r3, [r2, #8]
 8009dd0:	f013 0301 	ands.w	r3, r3, #1
 8009dd4:	d00f      	beq.n	8009df6 <HAL_SPI_TransmitReceive+0x102>
 8009dd6:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 8009dda:	b289      	uxth	r1, r1
 8009ddc:	b159      	cbz	r1, 8009df6 <HAL_SPI_TransmitReceive+0x102>
 8009dde:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8009de0:	68d2      	ldr	r2, [r2, #12]
 8009de2:	f821 2b02 	strh.w	r2, [r1], #2
 8009de6:	461e      	mov	r6, r3
 8009de8:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 8009dec:	6421      	str	r1, [r4, #64]	@ 0x40
 8009dee:	3b01      	subs	r3, #1
 8009df0:	b29b      	uxth	r3, r3
 8009df2:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 8009df6:	f7fb fb89 	bl	800550c <HAL_GetTick>
 8009dfa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009dfc:	b29b      	uxth	r3, r3
 8009dfe:	2b00      	cmp	r3, #0
 8009e00:	d1d3      	bne.n	8009daa <HAL_SPI_TransmitReceive+0xb6>
 8009e02:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 8009e06:	b29b      	uxth	r3, r3
 8009e08:	2b00      	cmp	r3, #0
 8009e0a:	d1ce      	bne.n	8009daa <HAL_SPI_TransmitReceive+0xb6>
 8009e0c:	9906      	ldr	r1, [sp, #24]
 8009e0e:	462a      	mov	r2, r5
 8009e10:	4620      	mov	r0, r4
 8009e12:	f7ff fd21 	bl	8009858 <SPI_EndRxTxTransaction>
 8009e16:	2800      	cmp	r0, #0
 8009e18:	f040 80ed 	bne.w	8009ff6 <HAL_SPI_TransmitReceive+0x302>
 8009e1c:	2301      	movs	r3, #1
 8009e1e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009e22:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8009e24:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 8009e28:	1e18      	subs	r0, r3, #0
 8009e2a:	bf18      	it	ne
 8009e2c:	2001      	movne	r0, #1
 8009e2e:	e000      	b.n	8009e32 <HAL_SPI_TransmitReceive+0x13e>
 8009e30:	2002      	movs	r0, #2
 8009e32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e36:	2e01      	cmp	r6, #1
 8009e38:	f000 8118 	beq.w	800a06c <HAL_SPI_TransmitReceive+0x378>
 8009e3c:	6859      	ldr	r1, [r3, #4]
 8009e3e:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 8009e42:	6059      	str	r1, [r3, #4]
 8009e44:	6819      	ldr	r1, [r3, #0]
 8009e46:	0649      	lsls	r1, r1, #25
 8009e48:	bf5e      	ittt	pl
 8009e4a:	6819      	ldrpl	r1, [r3, #0]
 8009e4c:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
 8009e50:	6019      	strpl	r1, [r3, #0]
 8009e52:	b962      	cbnz	r2, 8009e6e <HAL_SPI_TransmitReceive+0x17a>
 8009e54:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8009e56:	b292      	uxth	r2, r2
 8009e58:	2a01      	cmp	r2, #1
 8009e5a:	f240 80d3 	bls.w	800a004 <HAL_SPI_TransmitReceive+0x310>
 8009e5e:	f837 2b02 	ldrh.w	r2, [r7], #2
 8009e62:	60da      	str	r2, [r3, #12]
 8009e64:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e66:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009e68:	3b02      	subs	r3, #2
 8009e6a:	b29b      	uxth	r3, r3
 8009e6c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009e6e:	9b06      	ldr	r3, [sp, #24]
 8009e70:	3301      	adds	r3, #1
 8009e72:	f04f 0601 	mov.w	r6, #1
 8009e76:	d17d      	bne.n	8009f74 <HAL_SPI_TransmitReceive+0x280>
 8009e78:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e7a:	b29b      	uxth	r3, r3
 8009e7c:	b923      	cbnz	r3, 8009e88 <HAL_SPI_TransmitReceive+0x194>
 8009e7e:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 8009e82:	b29b      	uxth	r3, r3
 8009e84:	2b00      	cmp	r3, #0
 8009e86:	d0c1      	beq.n	8009e0c <HAL_SPI_TransmitReceive+0x118>
 8009e88:	6822      	ldr	r2, [r4, #0]
 8009e8a:	6893      	ldr	r3, [r2, #8]
 8009e8c:	079f      	lsls	r7, r3, #30
 8009e8e:	d506      	bpl.n	8009e9e <HAL_SPI_TransmitReceive+0x1aa>
 8009e90:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009e92:	b29b      	uxth	r3, r3
 8009e94:	b11b      	cbz	r3, 8009e9e <HAL_SPI_TransmitReceive+0x1aa>
 8009e96:	2e00      	cmp	r6, #0
 8009e98:	f040 8093 	bne.w	8009fc2 <HAL_SPI_TransmitReceive+0x2ce>
 8009e9c:	2600      	movs	r6, #0
 8009e9e:	6893      	ldr	r3, [r2, #8]
 8009ea0:	f013 0301 	ands.w	r3, r3, #1
 8009ea4:	d019      	beq.n	8009eda <HAL_SPI_TransmitReceive+0x1e6>
 8009ea6:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 8009eaa:	b289      	uxth	r1, r1
 8009eac:	b1a9      	cbz	r1, 8009eda <HAL_SPI_TransmitReceive+0x1e6>
 8009eae:	f8b4 0046 	ldrh.w	r0, [r4, #70]	@ 0x46
 8009eb2:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8009eb4:	b280      	uxth	r0, r0
 8009eb6:	2801      	cmp	r0, #1
 8009eb8:	d977      	bls.n	8009faa <HAL_SPI_TransmitReceive+0x2b6>
 8009eba:	68d0      	ldr	r0, [r2, #12]
 8009ebc:	f821 0b02 	strh.w	r0, [r1], #2
 8009ec0:	6421      	str	r1, [r4, #64]	@ 0x40
 8009ec2:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 8009ec6:	3902      	subs	r1, #2
 8009ec8:	b289      	uxth	r1, r1
 8009eca:	f8a4 1046 	strh.w	r1, [r4, #70]	@ 0x46
 8009ece:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 8009ed2:	b289      	uxth	r1, r1
 8009ed4:	2901      	cmp	r1, #1
 8009ed6:	d935      	bls.n	8009f44 <HAL_SPI_TransmitReceive+0x250>
 8009ed8:	461e      	mov	r6, r3
 8009eda:	f7fb fb17 	bl	800550c <HAL_GetTick>
 8009ede:	e7cb      	b.n	8009e78 <HAL_SPI_TransmitReceive+0x184>
 8009ee0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009ee2:	b29b      	uxth	r3, r3
 8009ee4:	b923      	cbnz	r3, 8009ef0 <HAL_SPI_TransmitReceive+0x1fc>
 8009ee6:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 8009eea:	b29b      	uxth	r3, r3
 8009eec:	2b00      	cmp	r3, #0
 8009eee:	d08d      	beq.n	8009e0c <HAL_SPI_TransmitReceive+0x118>
 8009ef0:	6822      	ldr	r2, [r4, #0]
 8009ef2:	6893      	ldr	r3, [r2, #8]
 8009ef4:	0798      	lsls	r0, r3, #30
 8009ef6:	d50d      	bpl.n	8009f14 <HAL_SPI_TransmitReceive+0x220>
 8009ef8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009efa:	b29b      	uxth	r3, r3
 8009efc:	b153      	cbz	r3, 8009f14 <HAL_SPI_TransmitReceive+0x220>
 8009efe:	b146      	cbz	r6, 8009f12 <HAL_SPI_TransmitReceive+0x21e>
 8009f00:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8009f02:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009f06:	60d3      	str	r3, [r2, #12]
 8009f08:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f0a:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009f0c:	3b01      	subs	r3, #1
 8009f0e:	b29b      	uxth	r3, r3
 8009f10:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009f12:	2600      	movs	r6, #0
 8009f14:	6893      	ldr	r3, [r2, #8]
 8009f16:	f013 0301 	ands.w	r3, r3, #1
 8009f1a:	d004      	beq.n	8009f26 <HAL_SPI_TransmitReceive+0x232>
 8009f1c:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 8009f20:	b289      	uxth	r1, r1
 8009f22:	2900      	cmp	r1, #0
 8009f24:	d178      	bne.n	800a018 <HAL_SPI_TransmitReceive+0x324>
 8009f26:	f7fb faf1 	bl	800550c <HAL_GetTick>
 8009f2a:	9b06      	ldr	r3, [sp, #24]
 8009f2c:	1b40      	subs	r0, r0, r5
 8009f2e:	4298      	cmp	r0, r3
 8009f30:	d3d6      	bcc.n	8009ee0 <HAL_SPI_TransmitReceive+0x1ec>
 8009f32:	2301      	movs	r3, #1
 8009f34:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8009f38:	2300      	movs	r3, #0
 8009f3a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8009f3e:	2003      	movs	r0, #3
 8009f40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f44:	6851      	ldr	r1, [r2, #4]
 8009f46:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 8009f4a:	6051      	str	r1, [r2, #4]
 8009f4c:	e7c4      	b.n	8009ed8 <HAL_SPI_TransmitReceive+0x1e4>
 8009f4e:	2e00      	cmp	r6, #0
 8009f50:	f040 80a6 	bne.w	800a0a0 <HAL_SPI_TransmitReceive+0x3ac>
 8009f54:	2600      	movs	r6, #0
 8009f56:	6893      	ldr	r3, [r2, #8]
 8009f58:	f013 0301 	ands.w	r3, r3, #1
 8009f5c:	d004      	beq.n	8009f68 <HAL_SPI_TransmitReceive+0x274>
 8009f5e:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 8009f62:	b289      	uxth	r1, r1
 8009f64:	2900      	cmp	r1, #0
 8009f66:	d164      	bne.n	800a032 <HAL_SPI_TransmitReceive+0x33e>
 8009f68:	f7fb fad0 	bl	800550c <HAL_GetTick>
 8009f6c:	9b06      	ldr	r3, [sp, #24]
 8009f6e:	1b40      	subs	r0, r0, r5
 8009f70:	4298      	cmp	r0, r3
 8009f72:	d2de      	bcs.n	8009f32 <HAL_SPI_TransmitReceive+0x23e>
 8009f74:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f76:	b29b      	uxth	r3, r3
 8009f78:	b92b      	cbnz	r3, 8009f86 <HAL_SPI_TransmitReceive+0x292>
 8009f7a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 8009f7e:	b29b      	uxth	r3, r3
 8009f80:	2b00      	cmp	r3, #0
 8009f82:	f43f af43 	beq.w	8009e0c <HAL_SPI_TransmitReceive+0x118>
 8009f86:	6822      	ldr	r2, [r4, #0]
 8009f88:	6893      	ldr	r3, [r2, #8]
 8009f8a:	079b      	lsls	r3, r3, #30
 8009f8c:	d5e3      	bpl.n	8009f56 <HAL_SPI_TransmitReceive+0x262>
 8009f8e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009f90:	b29b      	uxth	r3, r3
 8009f92:	2b00      	cmp	r3, #0
 8009f94:	d0df      	beq.n	8009f56 <HAL_SPI_TransmitReceive+0x262>
 8009f96:	e7da      	b.n	8009f4e <HAL_SPI_TransmitReceive+0x25a>
 8009f98:	f837 2b02 	ldrh.w	r2, [r7], #2
 8009f9c:	60da      	str	r2, [r3, #12]
 8009f9e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009fa0:	63a7      	str	r7, [r4, #56]	@ 0x38
 8009fa2:	3b01      	subs	r3, #1
 8009fa4:	b29b      	uxth	r3, r3
 8009fa6:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009fa8:	e6f9      	b.n	8009d9e <HAL_SPI_TransmitReceive+0xaa>
 8009faa:	7b12      	ldrb	r2, [r2, #12]
 8009fac:	700a      	strb	r2, [r1, #0]
 8009fae:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 8009fb2:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8009fb4:	3a01      	subs	r2, #1
 8009fb6:	3101      	adds	r1, #1
 8009fb8:	b292      	uxth	r2, r2
 8009fba:	6421      	str	r1, [r4, #64]	@ 0x40
 8009fbc:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8009fc0:	e78a      	b.n	8009ed8 <HAL_SPI_TransmitReceive+0x1e4>
 8009fc2:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009fc4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009fc6:	b289      	uxth	r1, r1
 8009fc8:	2901      	cmp	r1, #1
 8009fca:	d908      	bls.n	8009fde <HAL_SPI_TransmitReceive+0x2ea>
 8009fcc:	f833 1b02 	ldrh.w	r1, [r3], #2
 8009fd0:	60d1      	str	r1, [r2, #12]
 8009fd2:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 8009fd4:	63a3      	str	r3, [r4, #56]	@ 0x38
 8009fd6:	1e8b      	subs	r3, r1, #2
 8009fd8:	b29b      	uxth	r3, r3
 8009fda:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009fdc:	e75e      	b.n	8009e9c <HAL_SPI_TransmitReceive+0x1a8>
 8009fde:	781b      	ldrb	r3, [r3, #0]
 8009fe0:	7313      	strb	r3, [r2, #12]
 8009fe2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8009fe4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009fe6:	3b01      	subs	r3, #1
 8009fe8:	1c51      	adds	r1, r2, #1
 8009fea:	b29b      	uxth	r3, r3
 8009fec:	6822      	ldr	r2, [r4, #0]
 8009fee:	63a1      	str	r1, [r4, #56]	@ 0x38
 8009ff0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8009ff2:	2600      	movs	r6, #0
 8009ff4:	e753      	b.n	8009e9e <HAL_SPI_TransmitReceive+0x1aa>
 8009ff6:	2220      	movs	r2, #32
 8009ff8:	2300      	movs	r3, #0
 8009ffa:	6622      	str	r2, [r4, #96]	@ 0x60
 8009ffc:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a000:	2001      	movs	r0, #1
 800a002:	e716      	b.n	8009e32 <HAL_SPI_TransmitReceive+0x13e>
 800a004:	783a      	ldrb	r2, [r7, #0]
 800a006:	731a      	strb	r2, [r3, #12]
 800a008:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a00a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a00c:	3b01      	subs	r3, #1
 800a00e:	3201      	adds	r2, #1
 800a010:	b29b      	uxth	r3, r3
 800a012:	63a2      	str	r2, [r4, #56]	@ 0x38
 800a014:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a016:	e72a      	b.n	8009e6e <HAL_SPI_TransmitReceive+0x17a>
 800a018:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a01a:	68d2      	ldr	r2, [r2, #12]
 800a01c:	f821 2b02 	strh.w	r2, [r1], #2
 800a020:	461e      	mov	r6, r3
 800a022:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a026:	6421      	str	r1, [r4, #64]	@ 0x40
 800a028:	3b01      	subs	r3, #1
 800a02a:	b29b      	uxth	r3, r3
 800a02c:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a030:	e779      	b.n	8009f26 <HAL_SPI_TransmitReceive+0x232>
 800a032:	f8b4 0046 	ldrh.w	r0, [r4, #70]	@ 0x46
 800a036:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a038:	b280      	uxth	r0, r0
 800a03a:	2801      	cmp	r0, #1
 800a03c:	d923      	bls.n	800a086 <HAL_SPI_TransmitReceive+0x392>
 800a03e:	68d0      	ldr	r0, [r2, #12]
 800a040:	f821 0b02 	strh.w	r0, [r1], #2
 800a044:	6421      	str	r1, [r4, #64]	@ 0x40
 800a046:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a04a:	3902      	subs	r1, #2
 800a04c:	b289      	uxth	r1, r1
 800a04e:	f8a4 1046 	strh.w	r1, [r4, #70]	@ 0x46
 800a052:	f8b4 1046 	ldrh.w	r1, [r4, #70]	@ 0x46
 800a056:	b289      	uxth	r1, r1
 800a058:	2901      	cmp	r1, #1
 800a05a:	d901      	bls.n	800a060 <HAL_SPI_TransmitReceive+0x36c>
 800a05c:	461e      	mov	r6, r3
 800a05e:	e783      	b.n	8009f68 <HAL_SPI_TransmitReceive+0x274>
 800a060:	6851      	ldr	r1, [r2, #4]
 800a062:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800a066:	6051      	str	r1, [r2, #4]
 800a068:	461e      	mov	r6, r3
 800a06a:	e77d      	b.n	8009f68 <HAL_SPI_TransmitReceive+0x274>
 800a06c:	685a      	ldr	r2, [r3, #4]
 800a06e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800a072:	605a      	str	r2, [r3, #4]
 800a074:	681a      	ldr	r2, [r3, #0]
 800a076:	0656      	lsls	r6, r2, #25
 800a078:	f53f aeec 	bmi.w	8009e54 <HAL_SPI_TransmitReceive+0x160>
 800a07c:	681a      	ldr	r2, [r3, #0]
 800a07e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800a082:	601a      	str	r2, [r3, #0]
 800a084:	e6e6      	b.n	8009e54 <HAL_SPI_TransmitReceive+0x160>
 800a086:	7b12      	ldrb	r2, [r2, #12]
 800a088:	700a      	strb	r2, [r1, #0]
 800a08a:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a08e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a090:	3a01      	subs	r2, #1
 800a092:	3101      	adds	r1, #1
 800a094:	b292      	uxth	r2, r2
 800a096:	6421      	str	r1, [r4, #64]	@ 0x40
 800a098:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a09c:	461e      	mov	r6, r3
 800a09e:	e763      	b.n	8009f68 <HAL_SPI_TransmitReceive+0x274>
 800a0a0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0a2:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800a0a4:	b29b      	uxth	r3, r3
 800a0a6:	2b01      	cmp	r3, #1
 800a0a8:	d909      	bls.n	800a0be <HAL_SPI_TransmitReceive+0x3ca>
 800a0aa:	460b      	mov	r3, r1
 800a0ac:	f833 1b02 	ldrh.w	r1, [r3], #2
 800a0b0:	60d1      	str	r1, [r2, #12]
 800a0b2:	8fe1      	ldrh	r1, [r4, #62]	@ 0x3e
 800a0b4:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a0b6:	1e8b      	subs	r3, r1, #2
 800a0b8:	b29b      	uxth	r3, r3
 800a0ba:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a0bc:	e74a      	b.n	8009f54 <HAL_SPI_TransmitReceive+0x260>
 800a0be:	780b      	ldrb	r3, [r1, #0]
 800a0c0:	7313      	strb	r3, [r2, #12]
 800a0c2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800a0c4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800a0c6:	3b01      	subs	r3, #1
 800a0c8:	1c51      	adds	r1, r2, #1
 800a0ca:	b29b      	uxth	r3, r3
 800a0cc:	6822      	ldr	r2, [r4, #0]
 800a0ce:	63a1      	str	r1, [r4, #56]	@ 0x38
 800a0d0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a0d2:	e73f      	b.n	8009f54 <HAL_SPI_TransmitReceive+0x260>

0800a0d4 <HAL_SPI_Receive>:
 800a0d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0d8:	f890 605d 	ldrb.w	r6, [r0, #93]	@ 0x5d
 800a0dc:	2e01      	cmp	r6, #1
 800a0de:	b084      	sub	sp, #16
 800a0e0:	f040 8095 	bne.w	800a20e <HAL_SPI_Receive+0x13a>
 800a0e4:	461d      	mov	r5, r3
 800a0e6:	4688      	mov	r8, r1
 800a0e8:	b2f3      	uxtb	r3, r6
 800a0ea:	2900      	cmp	r1, #0
 800a0ec:	f000 808b 	beq.w	800a206 <HAL_SPI_Receive+0x132>
 800a0f0:	4617      	mov	r7, r2
 800a0f2:	2a00      	cmp	r2, #0
 800a0f4:	f000 8087 	beq.w	800a206 <HAL_SPI_Receive+0x132>
 800a0f8:	6843      	ldr	r3, [r0, #4]
 800a0fa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a0fe:	4604      	mov	r4, r0
 800a100:	d103      	bne.n	800a10a <HAL_SPI_Receive+0x36>
 800a102:	6883      	ldr	r3, [r0, #8]
 800a104:	2b00      	cmp	r3, #0
 800a106:	f000 8127 	beq.w	800a358 <HAL_SPI_Receive+0x284>
 800a10a:	f7fb f9ff 	bl	800550c <HAL_GetTick>
 800a10e:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800a112:	2b01      	cmp	r3, #1
 800a114:	4606      	mov	r6, r0
 800a116:	d07a      	beq.n	800a20e <HAL_SPI_Receive+0x13a>
 800a118:	2001      	movs	r0, #1
 800a11a:	68e2      	ldr	r2, [r4, #12]
 800a11c:	6821      	ldr	r1, [r4, #0]
 800a11e:	f884 005c 	strb.w	r0, [r4, #92]	@ 0x5c
 800a122:	2300      	movs	r3, #0
 800a124:	2004      	movs	r0, #4
 800a126:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 800a12a:	f5b2 6fe0 	cmp.w	r2, #1792	@ 0x700
 800a12e:	6623      	str	r3, [r4, #96]	@ 0x60
 800a130:	f8a4 7046 	strh.w	r7, [r4, #70]	@ 0x46
 800a134:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800a136:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
 800a13a:	63a3      	str	r3, [r4, #56]	@ 0x38
 800a13c:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 800a13e:	6848      	ldr	r0, [r1, #4]
 800a140:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
 800a144:	f8a4 7044 	strh.w	r7, [r4, #68]	@ 0x44
 800a148:	460b      	mov	r3, r1
 800a14a:	d965      	bls.n	800a218 <HAL_SPI_Receive+0x144>
 800a14c:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 800a150:	6048      	str	r0, [r1, #4]
 800a152:	68a0      	ldr	r0, [r4, #8]
 800a154:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800a158:	f000 80cc 	beq.w	800a2f4 <HAL_SPI_Receive+0x220>
 800a15c:	6808      	ldr	r0, [r1, #0]
 800a15e:	0640      	lsls	r0, r0, #25
 800a160:	d465      	bmi.n	800a22e <HAL_SPI_Receive+0x15a>
 800a162:	6808      	ldr	r0, [r1, #0]
 800a164:	f040 0040 	orr.w	r0, r0, #64	@ 0x40
 800a168:	6008      	str	r0, [r1, #0]
 800a16a:	f5b2 6fe0 	cmp.w	r2, #1792	@ 0x700
 800a16e:	d85e      	bhi.n	800a22e <HAL_SPI_Receive+0x15a>
 800a170:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a174:	b292      	uxth	r2, r2
 800a176:	b1ea      	cbz	r2, 800a1b4 <HAL_SPI_Receive+0xe0>
 800a178:	1c69      	adds	r1, r5, #1
 800a17a:	d011      	beq.n	800a1a0 <HAL_SPI_Receive+0xcc>
 800a17c:	e0aa      	b.n	800a2d4 <HAL_SPI_Receive+0x200>
 800a17e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a180:	7b1b      	ldrb	r3, [r3, #12]
 800a182:	7013      	strb	r3, [r2, #0]
 800a184:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a188:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800a18a:	3a01      	subs	r2, #1
 800a18c:	b292      	uxth	r2, r2
 800a18e:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a192:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a196:	3101      	adds	r1, #1
 800a198:	b29b      	uxth	r3, r3
 800a19a:	6421      	str	r1, [r4, #64]	@ 0x40
 800a19c:	b153      	cbz	r3, 800a1b4 <HAL_SPI_Receive+0xe0>
 800a19e:	6823      	ldr	r3, [r4, #0]
 800a1a0:	689a      	ldr	r2, [r3, #8]
 800a1a2:	07d2      	lsls	r2, r2, #31
 800a1a4:	d4eb      	bmi.n	800a17e <HAL_SPI_Receive+0xaa>
 800a1a6:	f7fb f9b1 	bl	800550c <HAL_GetTick>
 800a1aa:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a1ae:	b29b      	uxth	r3, r3
 800a1b0:	2b00      	cmp	r3, #0
 800a1b2:	d1f4      	bne.n	800a19e <HAL_SPI_Receive+0xca>
 800a1b4:	6863      	ldr	r3, [r4, #4]
 800a1b6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a1ba:	f000 80a8 	beq.w	800a30e <HAL_SPI_Receive+0x23a>
 800a1be:	f7fb f9a5 	bl	800550c <HAL_GetTick>
 800a1c2:	19af      	adds	r7, r5, r6
 800a1c4:	1a3f      	subs	r7, r7, r0
 800a1c6:	f7fb f9a1 	bl	800550c <HAL_GetTick>
 800a1ca:	4b88      	ldr	r3, [pc, #544]	@ (800a3ec <HAL_SPI_Receive+0x318>)
 800a1cc:	681b      	ldr	r3, [r3, #0]
 800a1ce:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a1d2:	fb07 f303 	mul.w	r3, r7, r3
 800a1d6:	1c69      	adds	r1, r5, #1
 800a1d8:	4680      	mov	r8, r0
 800a1da:	9303      	str	r3, [sp, #12]
 800a1dc:	f040 80c6 	bne.w	800a36c <HAL_SPI_Receive+0x298>
 800a1e0:	6823      	ldr	r3, [r4, #0]
 800a1e2:	689a      	ldr	r2, [r3, #8]
 800a1e4:	0612      	lsls	r2, r2, #24
 800a1e6:	d4fc      	bmi.n	800a1e2 <HAL_SPI_Receive+0x10e>
 800a1e8:	6863      	ldr	r3, [r4, #4]
 800a1ea:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a1ee:	f000 809c 	beq.w	800a32a <HAL_SPI_Receive+0x256>
 800a1f2:	2301      	movs	r3, #1
 800a1f4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a1f8:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a1fa:	2200      	movs	r2, #0
 800a1fc:	1a9b      	subs	r3, r3, r2
 800a1fe:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 800a202:	bf18      	it	ne
 800a204:	2301      	movne	r3, #1
 800a206:	4618      	mov	r0, r3
 800a208:	b004      	add	sp, #16
 800a20a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a20e:	2302      	movs	r3, #2
 800a210:	4618      	mov	r0, r3
 800a212:	b004      	add	sp, #16
 800a214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a218:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 800a21c:	6048      	str	r0, [r1, #4]
 800a21e:	68a0      	ldr	r0, [r4, #8]
 800a220:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800a224:	d066      	beq.n	800a2f4 <HAL_SPI_Receive+0x220>
 800a226:	6808      	ldr	r0, [r1, #0]
 800a228:	0647      	lsls	r7, r0, #25
 800a22a:	d59a      	bpl.n	800a162 <HAL_SPI_Receive+0x8e>
 800a22c:	e7a0      	b.n	800a170 <HAL_SPI_Receive+0x9c>
 800a22e:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a232:	b292      	uxth	r2, r2
 800a234:	2a00      	cmp	r2, #0
 800a236:	d0bd      	beq.n	800a1b4 <HAL_SPI_Receive+0xe0>
 800a238:	1c6f      	adds	r7, r5, #1
 800a23a:	d12f      	bne.n	800a29c <HAL_SPI_Receive+0x1c8>
 800a23c:	688b      	ldr	r3, [r1, #8]
 800a23e:	07d8      	lsls	r0, r3, #31
 800a240:	d512      	bpl.n	800a268 <HAL_SPI_Receive+0x194>
 800a242:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a244:	68ca      	ldr	r2, [r1, #12]
 800a246:	f823 2b02 	strh.w	r2, [r3], #2
 800a24a:	f8b4 2046 	ldrh.w	r2, [r4, #70]	@ 0x46
 800a24e:	6423      	str	r3, [r4, #64]	@ 0x40
 800a250:	3a01      	subs	r2, #1
 800a252:	b292      	uxth	r2, r2
 800a254:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 800a258:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a25c:	b29b      	uxth	r3, r3
 800a25e:	2b00      	cmp	r3, #0
 800a260:	d0a8      	beq.n	800a1b4 <HAL_SPI_Receive+0xe0>
 800a262:	688b      	ldr	r3, [r1, #8]
 800a264:	07d8      	lsls	r0, r3, #31
 800a266:	d4ec      	bmi.n	800a242 <HAL_SPI_Receive+0x16e>
 800a268:	f7fb f950 	bl	800550c <HAL_GetTick>
 800a26c:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a270:	b29b      	uxth	r3, r3
 800a272:	2b00      	cmp	r3, #0
 800a274:	d09e      	beq.n	800a1b4 <HAL_SPI_Receive+0xe0>
 800a276:	6821      	ldr	r1, [r4, #0]
 800a278:	e7e0      	b.n	800a23c <HAL_SPI_Receive+0x168>
 800a27a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a27c:	68db      	ldr	r3, [r3, #12]
 800a27e:	f822 3b02 	strh.w	r3, [r2], #2
 800a282:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a286:	6422      	str	r2, [r4, #64]	@ 0x40
 800a288:	3b01      	subs	r3, #1
 800a28a:	b29b      	uxth	r3, r3
 800a28c:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a290:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a294:	b29b      	uxth	r3, r3
 800a296:	2b00      	cmp	r3, #0
 800a298:	d08c      	beq.n	800a1b4 <HAL_SPI_Receive+0xe0>
 800a29a:	6823      	ldr	r3, [r4, #0]
 800a29c:	689a      	ldr	r2, [r3, #8]
 800a29e:	07d0      	lsls	r0, r2, #31
 800a2a0:	d4eb      	bmi.n	800a27a <HAL_SPI_Receive+0x1a6>
 800a2a2:	f7fb f933 	bl	800550c <HAL_GetTick>
 800a2a6:	1b83      	subs	r3, r0, r6
 800a2a8:	42ab      	cmp	r3, r5
 800a2aa:	d3f1      	bcc.n	800a290 <HAL_SPI_Receive+0x1bc>
 800a2ac:	e01a      	b.n	800a2e4 <HAL_SPI_Receive+0x210>
 800a2ae:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a2b0:	7b1b      	ldrb	r3, [r3, #12]
 800a2b2:	7013      	strb	r3, [r2, #0]
 800a2b4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a2b8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a2ba:	3b01      	subs	r3, #1
 800a2bc:	3201      	adds	r2, #1
 800a2be:	b29b      	uxth	r3, r3
 800a2c0:	6422      	str	r2, [r4, #64]	@ 0x40
 800a2c2:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800a2c6:	f8b4 3046 	ldrh.w	r3, [r4, #70]	@ 0x46
 800a2ca:	b29b      	uxth	r3, r3
 800a2cc:	2b00      	cmp	r3, #0
 800a2ce:	f43f af71 	beq.w	800a1b4 <HAL_SPI_Receive+0xe0>
 800a2d2:	6823      	ldr	r3, [r4, #0]
 800a2d4:	689a      	ldr	r2, [r3, #8]
 800a2d6:	07d7      	lsls	r7, r2, #31
 800a2d8:	d4e9      	bmi.n	800a2ae <HAL_SPI_Receive+0x1da>
 800a2da:	f7fb f917 	bl	800550c <HAL_GetTick>
 800a2de:	1b83      	subs	r3, r0, r6
 800a2e0:	42ab      	cmp	r3, r5
 800a2e2:	d3f0      	bcc.n	800a2c6 <HAL_SPI_Receive+0x1f2>
 800a2e4:	2301      	movs	r3, #1
 800a2e6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a2ea:	2300      	movs	r3, #0
 800a2ec:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800a2f0:	2303      	movs	r3, #3
 800a2f2:	e788      	b.n	800a206 <HAL_SPI_Receive+0x132>
 800a2f4:	6808      	ldr	r0, [r1, #0]
 800a2f6:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800a2fa:	6008      	str	r0, [r1, #0]
 800a2fc:	6808      	ldr	r0, [r1, #0]
 800a2fe:	f420 4080 	bic.w	r0, r0, #16384	@ 0x4000
 800a302:	6008      	str	r0, [r1, #0]
 800a304:	6808      	ldr	r0, [r1, #0]
 800a306:	0640      	lsls	r0, r0, #25
 800a308:	f53f af2f 	bmi.w	800a16a <HAL_SPI_Receive+0x96>
 800a30c:	e729      	b.n	800a162 <HAL_SPI_Receive+0x8e>
 800a30e:	68a3      	ldr	r3, [r4, #8]
 800a310:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a314:	d003      	beq.n	800a31e <HAL_SPI_Receive+0x24a>
 800a316:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a31a:	f47f af50 	bne.w	800a1be <HAL_SPI_Receive+0xea>
 800a31e:	6822      	ldr	r2, [r4, #0]
 800a320:	6813      	ldr	r3, [r2, #0]
 800a322:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a326:	6013      	str	r3, [r2, #0]
 800a328:	e749      	b.n	800a1be <HAL_SPI_Receive+0xea>
 800a32a:	68a3      	ldr	r3, [r4, #8]
 800a32c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a330:	d003      	beq.n	800a33a <HAL_SPI_Receive+0x266>
 800a332:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a336:	f47f af5c 	bne.w	800a1f2 <HAL_SPI_Receive+0x11e>
 800a33a:	4632      	mov	r2, r6
 800a33c:	4629      	mov	r1, r5
 800a33e:	4620      	mov	r0, r4
 800a340:	f7ff fa14 	bl	800976c <SPI_WaitFifoStateUntilTimeout.constprop.0>
 800a344:	2800      	cmp	r0, #0
 800a346:	f43f af54 	beq.w	800a1f2 <HAL_SPI_Receive+0x11e>
 800a34a:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a34c:	f043 0320 	orr.w	r3, r3, #32
 800a350:	6623      	str	r3, [r4, #96]	@ 0x60
 800a352:	2320      	movs	r3, #32
 800a354:	6623      	str	r3, [r4, #96]	@ 0x60
 800a356:	e74c      	b.n	800a1f2 <HAL_SPI_Receive+0x11e>
 800a358:	9500      	str	r5, [sp, #0]
 800a35a:	2504      	movs	r5, #4
 800a35c:	4613      	mov	r3, r2
 800a35e:	f880 505d 	strb.w	r5, [r0, #93]	@ 0x5d
 800a362:	460a      	mov	r2, r1
 800a364:	f7ff fcc6 	bl	8009cf4 <HAL_SPI_TransmitReceive>
 800a368:	4603      	mov	r3, r0
 800a36a:	e74c      	b.n	800a206 <HAL_SPI_Receive+0x132>
 800a36c:	6823      	ldr	r3, [r4, #0]
 800a36e:	689b      	ldr	r3, [r3, #8]
 800a370:	061b      	lsls	r3, r3, #24
 800a372:	f57f af39 	bpl.w	800a1e8 <HAL_SPI_Receive+0x114>
 800a376:	f7fb f8c9 	bl	800550c <HAL_GetTick>
 800a37a:	eba0 0308 	sub.w	r3, r0, r8
 800a37e:	42bb      	cmp	r3, r7
 800a380:	d20b      	bcs.n	800a39a <HAL_SPI_Receive+0x2c6>
 800a382:	9a03      	ldr	r2, [sp, #12]
 800a384:	9b03      	ldr	r3, [sp, #12]
 800a386:	3b01      	subs	r3, #1
 800a388:	9303      	str	r3, [sp, #12]
 800a38a:	6823      	ldr	r3, [r4, #0]
 800a38c:	689b      	ldr	r3, [r3, #8]
 800a38e:	2a00      	cmp	r2, #0
 800a390:	bf08      	it	eq
 800a392:	2700      	moveq	r7, #0
 800a394:	061b      	lsls	r3, r3, #24
 800a396:	d4ee      	bmi.n	800a376 <HAL_SPI_Receive+0x2a2>
 800a398:	e726      	b.n	800a1e8 <HAL_SPI_Receive+0x114>
 800a39a:	e9d4 3100 	ldrd	r3, r1, [r4]
 800a39e:	685a      	ldr	r2, [r3, #4]
 800a3a0:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 800a3a4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800a3a8:	605a      	str	r2, [r3, #4]
 800a3aa:	d013      	beq.n	800a3d4 <HAL_SPI_Receive+0x300>
 800a3ac:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a3ae:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800a3b2:	d107      	bne.n	800a3c4 <HAL_SPI_Receive+0x2f0>
 800a3b4:	681a      	ldr	r2, [r3, #0]
 800a3b6:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800a3ba:	601a      	str	r2, [r3, #0]
 800a3bc:	681a      	ldr	r2, [r3, #0]
 800a3be:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800a3c2:	601a      	str	r2, [r3, #0]
 800a3c4:	2301      	movs	r3, #1
 800a3c6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 800a3ca:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a3cc:	f043 0320 	orr.w	r3, r3, #32
 800a3d0:	6623      	str	r3, [r4, #96]	@ 0x60
 800a3d2:	e7be      	b.n	800a352 <HAL_SPI_Receive+0x27e>
 800a3d4:	68a2      	ldr	r2, [r4, #8]
 800a3d6:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800a3da:	d002      	beq.n	800a3e2 <HAL_SPI_Receive+0x30e>
 800a3dc:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800a3e0:	d1e4      	bne.n	800a3ac <HAL_SPI_Receive+0x2d8>
 800a3e2:	681a      	ldr	r2, [r3, #0]
 800a3e4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a3e8:	601a      	str	r2, [r3, #0]
 800a3ea:	e7df      	b.n	800a3ac <HAL_SPI_Receive+0x2d8>
 800a3ec:	20000034 	.word	0x20000034

0800a3f0 <HAL_SPI_ErrorCallback>:
 800a3f0:	4770      	bx	lr
 800a3f2:	bf00      	nop

0800a3f4 <HAL_SPI_IRQHandler>:
 800a3f4:	b530      	push	{r4, r5, lr}
 800a3f6:	6802      	ldr	r2, [r0, #0]
 800a3f8:	6851      	ldr	r1, [r2, #4]
 800a3fa:	6893      	ldr	r3, [r2, #8]
 800a3fc:	f013 0f40 	tst.w	r3, #64	@ 0x40
 800a400:	b085      	sub	sp, #20
 800a402:	4604      	mov	r4, r0
 800a404:	f3c3 1580 	ubfx	r5, r3, #6, #1
 800a408:	d116      	bne.n	800a438 <HAL_SPI_IRQHandler+0x44>
 800a40a:	f013 0f01 	tst.w	r3, #1
 800a40e:	d153      	bne.n	800a4b8 <HAL_SPI_IRQHandler+0xc4>
 800a410:	0798      	lsls	r0, r3, #30
 800a412:	d56a      	bpl.n	800a4ea <HAL_SPI_IRQHandler+0xf6>
 800a414:	0608      	lsls	r0, r1, #24
 800a416:	d47c      	bmi.n	800a512 <HAL_SPI_IRQHandler+0x11e>
 800a418:	0698      	lsls	r0, r3, #26
 800a41a:	d413      	bmi.n	800a444 <HAL_SPI_IRQHandler+0x50>
 800a41c:	05db      	lsls	r3, r3, #23
 800a41e:	d568      	bpl.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a420:	068d      	lsls	r5, r1, #26
 800a422:	d566      	bpl.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a424:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a426:	2000      	movs	r0, #0
 800a428:	f043 0308 	orr.w	r3, r3, #8
 800a42c:	6623      	str	r3, [r4, #96]	@ 0x60
 800a42e:	9003      	str	r0, [sp, #12]
 800a430:	6893      	ldr	r3, [r2, #8]
 800a432:	9303      	str	r3, [sp, #12]
 800a434:	9b03      	ldr	r3, [sp, #12]
 800a436:	e018      	b.n	800a46a <HAL_SPI_IRQHandler+0x76>
 800a438:	0798      	lsls	r0, r3, #30
 800a43a:	d542      	bpl.n	800a4c2 <HAL_SPI_IRQHandler+0xce>
 800a43c:	0608      	lsls	r0, r1, #24
 800a43e:	d468      	bmi.n	800a512 <HAL_SPI_IRQHandler+0x11e>
 800a440:	0698      	lsls	r0, r3, #26
 800a442:	d540      	bpl.n	800a4c6 <HAL_SPI_IRQHandler+0xd2>
 800a444:	0688      	lsls	r0, r1, #26
 800a446:	d554      	bpl.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a448:	2d00      	cmp	r5, #0
 800a44a:	d156      	bne.n	800a4fa <HAL_SPI_IRQHandler+0x106>
 800a44c:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a44e:	f040 0001 	orr.w	r0, r0, #1
 800a452:	6620      	str	r0, [r4, #96]	@ 0x60
 800a454:	2000      	movs	r0, #0
 800a456:	9002      	str	r0, [sp, #8]
 800a458:	6890      	ldr	r0, [r2, #8]
 800a45a:	9002      	str	r0, [sp, #8]
 800a45c:	6810      	ldr	r0, [r2, #0]
 800a45e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800a462:	6010      	str	r0, [r2, #0]
 800a464:	9802      	ldr	r0, [sp, #8]
 800a466:	05db      	lsls	r3, r3, #23
 800a468:	d4dc      	bmi.n	800a424 <HAL_SPI_IRQHandler+0x30>
 800a46a:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	d040      	beq.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a470:	6853      	ldr	r3, [r2, #4]
 800a472:	2001      	movs	r0, #1
 800a474:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800a478:	078d      	lsls	r5, r1, #30
 800a47a:	6053      	str	r3, [r2, #4]
 800a47c:	f884 005d 	strb.w	r0, [r4, #93]	@ 0x5d
 800a480:	d059      	beq.n	800a536 <HAL_SPI_IRQHandler+0x142>
 800a482:	6853      	ldr	r3, [r2, #4]
 800a484:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a486:	f023 0303 	bic.w	r3, r3, #3
 800a48a:	6053      	str	r3, [r2, #4]
 800a48c:	b140      	cbz	r0, 800a4a0 <HAL_SPI_IRQHandler+0xac>
 800a48e:	4b2c      	ldr	r3, [pc, #176]	@ (800a540 <HAL_SPI_IRQHandler+0x14c>)
 800a490:	6383      	str	r3, [r0, #56]	@ 0x38
 800a492:	f7fb fde9 	bl	8006068 <HAL_DMA_Abort_IT>
 800a496:	b118      	cbz	r0, 800a4a0 <HAL_SPI_IRQHandler+0xac>
 800a498:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a49a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a49e:	6623      	str	r3, [r4, #96]	@ 0x60
 800a4a0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800a4a2:	b330      	cbz	r0, 800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a4a4:	4b26      	ldr	r3, [pc, #152]	@ (800a540 <HAL_SPI_IRQHandler+0x14c>)
 800a4a6:	6383      	str	r3, [r0, #56]	@ 0x38
 800a4a8:	f7fb fdde 	bl	8006068 <HAL_DMA_Abort_IT>
 800a4ac:	b308      	cbz	r0, 800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a4ae:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800a4b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a4b4:	6623      	str	r3, [r4, #96]	@ 0x60
 800a4b6:	e01c      	b.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a4b8:	f011 0f40 	tst.w	r1, #64	@ 0x40
 800a4bc:	d0a8      	beq.n	800a410 <HAL_SPI_IRQHandler+0x1c>
 800a4be:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a4c0:	e029      	b.n	800a516 <HAL_SPI_IRQHandler+0x122>
 800a4c2:	069d      	lsls	r5, r3, #26
 800a4c4:	d417      	bmi.n	800a4f6 <HAL_SPI_IRQHandler+0x102>
 800a4c6:	0688      	lsls	r0, r1, #26
 800a4c8:	d513      	bpl.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a4ca:	f894 005d 	ldrb.w	r0, [r4, #93]	@ 0x5d
 800a4ce:	2803      	cmp	r0, #3
 800a4d0:	d017      	beq.n	800a502 <HAL_SPI_IRQHandler+0x10e>
 800a4d2:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a4d4:	f040 0004 	orr.w	r0, r0, #4
 800a4d8:	6620      	str	r0, [r4, #96]	@ 0x60
 800a4da:	2000      	movs	r0, #0
 800a4dc:	9000      	str	r0, [sp, #0]
 800a4de:	68d0      	ldr	r0, [r2, #12]
 800a4e0:	9000      	str	r0, [sp, #0]
 800a4e2:	6890      	ldr	r0, [r2, #8]
 800a4e4:	9000      	str	r0, [sp, #0]
 800a4e6:	9800      	ldr	r0, [sp, #0]
 800a4e8:	e7bd      	b.n	800a466 <HAL_SPI_IRQHandler+0x72>
 800a4ea:	0698      	lsls	r0, r3, #26
 800a4ec:	d596      	bpl.n	800a41c <HAL_SPI_IRQHandler+0x28>
 800a4ee:	0688      	lsls	r0, r1, #26
 800a4f0:	d4ac      	bmi.n	800a44c <HAL_SPI_IRQHandler+0x58>
 800a4f2:	b005      	add	sp, #20
 800a4f4:	bd30      	pop	{r4, r5, pc}
 800a4f6:	068d      	lsls	r5, r1, #26
 800a4f8:	d5fb      	bpl.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a4fa:	f894 005d 	ldrb.w	r0, [r4, #93]	@ 0x5d
 800a4fe:	2803      	cmp	r0, #3
 800a500:	d10d      	bne.n	800a51e <HAL_SPI_IRQHandler+0x12a>
 800a502:	2300      	movs	r3, #0
 800a504:	9301      	str	r3, [sp, #4]
 800a506:	68d3      	ldr	r3, [r2, #12]
 800a508:	9301      	str	r3, [sp, #4]
 800a50a:	6893      	ldr	r3, [r2, #8]
 800a50c:	9301      	str	r3, [sp, #4]
 800a50e:	9b01      	ldr	r3, [sp, #4]
 800a510:	e7ef      	b.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a512:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a514:	4620      	mov	r0, r4
 800a516:	b005      	add	sp, #20
 800a518:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a51c:	4718      	bx	r3
 800a51e:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 800a520:	f040 0004 	orr.w	r0, r0, #4
 800a524:	6620      	str	r0, [r4, #96]	@ 0x60
 800a526:	2000      	movs	r0, #0
 800a528:	9000      	str	r0, [sp, #0]
 800a52a:	68d0      	ldr	r0, [r2, #12]
 800a52c:	9000      	str	r0, [sp, #0]
 800a52e:	6890      	ldr	r0, [r2, #8]
 800a530:	9000      	str	r0, [sp, #0]
 800a532:	9800      	ldr	r0, [sp, #0]
 800a534:	e78a      	b.n	800a44c <HAL_SPI_IRQHandler+0x58>
 800a536:	4620      	mov	r0, r4
 800a538:	f7ff ff5a 	bl	800a3f0 <HAL_SPI_ErrorCallback>
 800a53c:	e7d9      	b.n	800a4f2 <HAL_SPI_IRQHandler+0xfe>
 800a53e:	bf00      	nop
 800a540:	0800a545 	.word	0x0800a545

0800a544 <SPI_DMAAbortOnError>:
 800a544:	b508      	push	{r3, lr}
 800a546:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a548:	2300      	movs	r3, #0
 800a54a:	f8a0 3046 	strh.w	r3, [r0, #70]	@ 0x46
 800a54e:	87c3      	strh	r3, [r0, #62]	@ 0x3e
 800a550:	f7ff ff4e 	bl	800a3f0 <HAL_SPI_ErrorCallback>
 800a554:	bd08      	pop	{r3, pc}
 800a556:	bf00      	nop

0800a558 <HAL_TIM_Base_Init>:
 800a558:	2800      	cmp	r0, #0
 800a55a:	d066      	beq.n	800a62a <HAL_TIM_Base_Init+0xd2>
 800a55c:	b570      	push	{r4, r5, r6, lr}
 800a55e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a562:	4604      	mov	r4, r0
 800a564:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a568:	2b00      	cmp	r3, #0
 800a56a:	d04b      	beq.n	800a604 <HAL_TIM_Base_Init+0xac>
 800a56c:	6822      	ldr	r2, [r4, #0]
 800a56e:	4e30      	ldr	r6, [pc, #192]	@ (800a630 <HAL_TIM_Base_Init+0xd8>)
 800a570:	69a1      	ldr	r1, [r4, #24]
 800a572:	68e5      	ldr	r5, [r4, #12]
 800a574:	6860      	ldr	r0, [r4, #4]
 800a576:	2302      	movs	r3, #2
 800a578:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a57c:	42b2      	cmp	r2, r6
 800a57e:	6813      	ldr	r3, [r2, #0]
 800a580:	d010      	beq.n	800a5a4 <HAL_TIM_Base_Init+0x4c>
 800a582:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 800a586:	d042      	beq.n	800a60e <HAL_TIM_Base_Init+0xb6>
 800a588:	f506 56c0 	add.w	r6, r6, #6144	@ 0x1800
 800a58c:	42b2      	cmp	r2, r6
 800a58e:	d00d      	beq.n	800a5ac <HAL_TIM_Base_Init+0x54>
 800a590:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 800a594:	42b2      	cmp	r2, r6
 800a596:	d009      	beq.n	800a5ac <HAL_TIM_Base_Init+0x54>
 800a598:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a59c:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a59e:	4319      	orrs	r1, r3
 800a5a0:	6290      	str	r0, [r2, #40]	@ 0x28
 800a5a2:	e00e      	b.n	800a5c2 <HAL_TIM_Base_Init+0x6a>
 800a5a4:	68a6      	ldr	r6, [r4, #8]
 800a5a6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a5aa:	4333      	orrs	r3, r6
 800a5ac:	6926      	ldr	r6, [r4, #16]
 800a5ae:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a5b0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a5b4:	4333      	orrs	r3, r6
 800a5b6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a5ba:	6290      	str	r0, [r2, #40]	@ 0x28
 800a5bc:	4319      	orrs	r1, r3
 800a5be:	6963      	ldr	r3, [r4, #20]
 800a5c0:	6313      	str	r3, [r2, #48]	@ 0x30
 800a5c2:	6810      	ldr	r0, [r2, #0]
 800a5c4:	2301      	movs	r3, #1
 800a5c6:	f040 0004 	orr.w	r0, r0, #4
 800a5ca:	6010      	str	r0, [r2, #0]
 800a5cc:	6153      	str	r3, [r2, #20]
 800a5ce:	6011      	str	r1, [r2, #0]
 800a5d0:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
 800a5d4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a5d8:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800a5dc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800a5e0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800a5e4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800a5e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800a5ec:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800a5f0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800a5f4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 800a5f8:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
 800a5fc:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a600:	2000      	movs	r0, #0
 800a602:	bd70      	pop	{r4, r5, r6, pc}
 800a604:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
 800a608:	f7fa fbc8 	bl	8004d9c <HAL_TIM_Base_MspInit>
 800a60c:	e7ae      	b.n	800a56c <HAL_TIM_Base_Init+0x14>
 800a60e:	68a6      	ldr	r6, [r4, #8]
 800a610:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a614:	4333      	orrs	r3, r6
 800a616:	6926      	ldr	r6, [r4, #16]
 800a618:	62d5      	str	r5, [r2, #44]	@ 0x2c
 800a61a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a61e:	4333      	orrs	r3, r6
 800a620:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a624:	4319      	orrs	r1, r3
 800a626:	6290      	str	r0, [r2, #40]	@ 0x28
 800a628:	e7cb      	b.n	800a5c2 <HAL_TIM_Base_Init+0x6a>
 800a62a:	2001      	movs	r0, #1
 800a62c:	4770      	bx	lr
 800a62e:	bf00      	nop
 800a630:	40012c00 	.word	0x40012c00

0800a634 <HAL_TIM_Base_Start>:
 800a634:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a638:	2b01      	cmp	r3, #1
 800a63a:	d10f      	bne.n	800a65c <HAL_TIM_Base_Start+0x28>
 800a63c:	6803      	ldr	r3, [r0, #0]
 800a63e:	4a0d      	ldr	r2, [pc, #52]	@ (800a674 <HAL_TIM_Base_Start+0x40>)
 800a640:	2102      	movs	r1, #2
 800a642:	4293      	cmp	r3, r2
 800a644:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800a648:	d00a      	beq.n	800a660 <HAL_TIM_Base_Start+0x2c>
 800a64a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a64e:	d007      	beq.n	800a660 <HAL_TIM_Base_Start+0x2c>
 800a650:	681a      	ldr	r2, [r3, #0]
 800a652:	f042 0201 	orr.w	r2, r2, #1
 800a656:	601a      	str	r2, [r3, #0]
 800a658:	2000      	movs	r0, #0
 800a65a:	4770      	bx	lr
 800a65c:	2001      	movs	r0, #1
 800a65e:	4770      	bx	lr
 800a660:	6899      	ldr	r1, [r3, #8]
 800a662:	4a05      	ldr	r2, [pc, #20]	@ (800a678 <HAL_TIM_Base_Start+0x44>)
 800a664:	400a      	ands	r2, r1
 800a666:	2a06      	cmp	r2, #6
 800a668:	d0f6      	beq.n	800a658 <HAL_TIM_Base_Start+0x24>
 800a66a:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800a66e:	d1ef      	bne.n	800a650 <HAL_TIM_Base_Start+0x1c>
 800a670:	e7f2      	b.n	800a658 <HAL_TIM_Base_Start+0x24>
 800a672:	bf00      	nop
 800a674:	40012c00 	.word	0x40012c00
 800a678:	00010007 	.word	0x00010007

0800a67c <HAL_TIM_Base_Start_IT>:
 800a67c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a680:	2b01      	cmp	r3, #1
 800a682:	d113      	bne.n	800a6ac <HAL_TIM_Base_Start_IT+0x30>
 800a684:	6803      	ldr	r3, [r0, #0]
 800a686:	490f      	ldr	r1, [pc, #60]	@ (800a6c4 <HAL_TIM_Base_Start_IT+0x48>)
 800a688:	2202      	movs	r2, #2
 800a68a:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800a68e:	68da      	ldr	r2, [r3, #12]
 800a690:	428b      	cmp	r3, r1
 800a692:	f042 0201 	orr.w	r2, r2, #1
 800a696:	60da      	str	r2, [r3, #12]
 800a698:	d00a      	beq.n	800a6b0 <HAL_TIM_Base_Start_IT+0x34>
 800a69a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a69e:	d007      	beq.n	800a6b0 <HAL_TIM_Base_Start_IT+0x34>
 800a6a0:	681a      	ldr	r2, [r3, #0]
 800a6a2:	f042 0201 	orr.w	r2, r2, #1
 800a6a6:	601a      	str	r2, [r3, #0]
 800a6a8:	2000      	movs	r0, #0
 800a6aa:	4770      	bx	lr
 800a6ac:	2001      	movs	r0, #1
 800a6ae:	4770      	bx	lr
 800a6b0:	6899      	ldr	r1, [r3, #8]
 800a6b2:	4a05      	ldr	r2, [pc, #20]	@ (800a6c8 <HAL_TIM_Base_Start_IT+0x4c>)
 800a6b4:	400a      	ands	r2, r1
 800a6b6:	2a06      	cmp	r2, #6
 800a6b8:	d0f6      	beq.n	800a6a8 <HAL_TIM_Base_Start_IT+0x2c>
 800a6ba:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 800a6be:	d1ef      	bne.n	800a6a0 <HAL_TIM_Base_Start_IT+0x24>
 800a6c0:	e7f2      	b.n	800a6a8 <HAL_TIM_Base_Start_IT+0x2c>
 800a6c2:	bf00      	nop
 800a6c4:	40012c00 	.word	0x40012c00
 800a6c8:	00010007 	.word	0x00010007

0800a6cc <HAL_TIM_ConfigClockSource>:
 800a6cc:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 800a6d0:	2a01      	cmp	r2, #1
 800a6d2:	d070      	beq.n	800a7b6 <HAL_TIM_ConfigClockSource+0xea>
 800a6d4:	4603      	mov	r3, r0
 800a6d6:	b430      	push	{r4, r5}
 800a6d8:	6802      	ldr	r2, [r0, #0]
 800a6da:	2402      	movs	r4, #2
 800a6dc:	2001      	movs	r0, #1
 800a6de:	f883 403d 	strb.w	r4, [r3, #61]	@ 0x3d
 800a6e2:	f883 003c 	strb.w	r0, [r3, #60]	@ 0x3c
 800a6e6:	6895      	ldr	r5, [r2, #8]
 800a6e8:	4c50      	ldr	r4, [pc, #320]	@ (800a82c <HAL_TIM_ConfigClockSource+0x160>)
 800a6ea:	402c      	ands	r4, r5
 800a6ec:	6094      	str	r4, [r2, #8]
 800a6ee:	680c      	ldr	r4, [r1, #0]
 800a6f0:	2c60      	cmp	r4, #96	@ 0x60
 800a6f2:	d07c      	beq.n	800a7ee <HAL_TIM_ConfigClockSource+0x122>
 800a6f4:	d813      	bhi.n	800a71e <HAL_TIM_ConfigClockSource+0x52>
 800a6f6:	2c40      	cmp	r4, #64	@ 0x40
 800a6f8:	d05f      	beq.n	800a7ba <HAL_TIM_ConfigClockSource+0xee>
 800a6fa:	d830      	bhi.n	800a75e <HAL_TIM_ConfigClockSource+0x92>
 800a6fc:	2c20      	cmp	r4, #32
 800a6fe:	d004      	beq.n	800a70a <HAL_TIM_ConfigClockSource+0x3e>
 800a700:	f200 8090 	bhi.w	800a824 <HAL_TIM_ConfigClockSource+0x158>
 800a704:	f034 0110 	bics.w	r1, r4, #16
 800a708:	d121      	bne.n	800a74e <HAL_TIM_ConfigClockSource+0x82>
 800a70a:	6891      	ldr	r1, [r2, #8]
 800a70c:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a710:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a714:	4321      	orrs	r1, r4
 800a716:	f041 0107 	orr.w	r1, r1, #7
 800a71a:	6091      	str	r1, [r2, #8]
 800a71c:	e016      	b.n	800a74c <HAL_TIM_ConfigClockSource+0x80>
 800a71e:	f5b4 5f80 	cmp.w	r4, #4096	@ 0x1000
 800a722:	d013      	beq.n	800a74c <HAL_TIM_ConfigClockSource+0x80>
 800a724:	f5b4 5f00 	cmp.w	r4, #8192	@ 0x2000
 800a728:	d035      	beq.n	800a796 <HAL_TIM_ConfigClockSource+0xca>
 800a72a:	2c70      	cmp	r4, #112	@ 0x70
 800a72c:	d10f      	bne.n	800a74e <HAL_TIM_ConfigClockSource+0x82>
 800a72e:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 800a732:	6894      	ldr	r4, [r2, #8]
 800a734:	4328      	orrs	r0, r5
 800a736:	68cd      	ldr	r5, [r1, #12]
 800a738:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800a73c:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 800a740:	4308      	orrs	r0, r1
 800a742:	6090      	str	r0, [r2, #8]
 800a744:	6891      	ldr	r1, [r2, #8]
 800a746:	f041 0177 	orr.w	r1, r1, #119	@ 0x77
 800a74a:	6091      	str	r1, [r2, #8]
 800a74c:	2000      	movs	r0, #0
 800a74e:	2101      	movs	r1, #1
 800a750:	2200      	movs	r2, #0
 800a752:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
 800a756:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800a75a:	bc30      	pop	{r4, r5}
 800a75c:	4770      	bx	lr
 800a75e:	2c50      	cmp	r4, #80	@ 0x50
 800a760:	d1f5      	bne.n	800a74e <HAL_TIM_ConfigClockSource+0x82>
 800a762:	6848      	ldr	r0, [r1, #4]
 800a764:	68cc      	ldr	r4, [r1, #12]
 800a766:	6a11      	ldr	r1, [r2, #32]
 800a768:	f021 010a 	bic.w	r1, r1, #10
 800a76c:	4308      	orrs	r0, r1
 800a76e:	6a11      	ldr	r1, [r2, #32]
 800a770:	f021 0101 	bic.w	r1, r1, #1
 800a774:	6211      	str	r1, [r2, #32]
 800a776:	6991      	ldr	r1, [r2, #24]
 800a778:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 800a77c:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800a780:	6191      	str	r1, [r2, #24]
 800a782:	6210      	str	r0, [r2, #32]
 800a784:	6891      	ldr	r1, [r2, #8]
 800a786:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a78a:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a78e:	f041 0157 	orr.w	r1, r1, #87	@ 0x57
 800a792:	6091      	str	r1, [r2, #8]
 800a794:	e7da      	b.n	800a74c <HAL_TIM_ConfigClockSource+0x80>
 800a796:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 800a79a:	6894      	ldr	r4, [r2, #8]
 800a79c:	4328      	orrs	r0, r5
 800a79e:	68cd      	ldr	r5, [r1, #12]
 800a7a0:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800a7a4:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 800a7a8:	4308      	orrs	r0, r1
 800a7aa:	6090      	str	r0, [r2, #8]
 800a7ac:	6891      	ldr	r1, [r2, #8]
 800a7ae:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800a7b2:	6091      	str	r1, [r2, #8]
 800a7b4:	e7ca      	b.n	800a74c <HAL_TIM_ConfigClockSource+0x80>
 800a7b6:	2002      	movs	r0, #2
 800a7b8:	4770      	bx	lr
 800a7ba:	6848      	ldr	r0, [r1, #4]
 800a7bc:	68cc      	ldr	r4, [r1, #12]
 800a7be:	6a11      	ldr	r1, [r2, #32]
 800a7c0:	f021 010a 	bic.w	r1, r1, #10
 800a7c4:	4308      	orrs	r0, r1
 800a7c6:	6a11      	ldr	r1, [r2, #32]
 800a7c8:	f021 0101 	bic.w	r1, r1, #1
 800a7cc:	6211      	str	r1, [r2, #32]
 800a7ce:	6991      	ldr	r1, [r2, #24]
 800a7d0:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 800a7d4:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800a7d8:	6191      	str	r1, [r2, #24]
 800a7da:	6210      	str	r0, [r2, #32]
 800a7dc:	6891      	ldr	r1, [r2, #8]
 800a7de:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a7e2:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a7e6:	f041 0147 	orr.w	r1, r1, #71	@ 0x47
 800a7ea:	6091      	str	r1, [r2, #8]
 800a7ec:	e7ae      	b.n	800a74c <HAL_TIM_ConfigClockSource+0x80>
 800a7ee:	6848      	ldr	r0, [r1, #4]
 800a7f0:	68cc      	ldr	r4, [r1, #12]
 800a7f2:	6a11      	ldr	r1, [r2, #32]
 800a7f4:	f021 01a0 	bic.w	r1, r1, #160	@ 0xa0
 800a7f8:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
 800a7fc:	6a10      	ldr	r0, [r2, #32]
 800a7fe:	f020 0010 	bic.w	r0, r0, #16
 800a802:	6210      	str	r0, [r2, #32]
 800a804:	6990      	ldr	r0, [r2, #24]
 800a806:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 800a80a:	ea40 3004 	orr.w	r0, r0, r4, lsl #12
 800a80e:	6190      	str	r0, [r2, #24]
 800a810:	6211      	str	r1, [r2, #32]
 800a812:	6891      	ldr	r1, [r2, #8]
 800a814:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800a818:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800a81c:	f041 0167 	orr.w	r1, r1, #103	@ 0x67
 800a820:	6091      	str	r1, [r2, #8]
 800a822:	e793      	b.n	800a74c <HAL_TIM_ConfigClockSource+0x80>
 800a824:	2c30      	cmp	r4, #48	@ 0x30
 800a826:	f43f af70 	beq.w	800a70a <HAL_TIM_ConfigClockSource+0x3e>
 800a82a:	e790      	b.n	800a74e <HAL_TIM_ConfigClockSource+0x82>
 800a82c:	ffce0088 	.word	0xffce0088

0800a830 <HAL_TIM_OC_DelayElapsedCallback>:
 800a830:	4770      	bx	lr
 800a832:	bf00      	nop

0800a834 <HAL_TIM_IC_CaptureCallback>:
 800a834:	4770      	bx	lr
 800a836:	bf00      	nop

0800a838 <HAL_TIM_PWM_PulseFinishedCallback>:
 800a838:	4770      	bx	lr
 800a83a:	bf00      	nop

0800a83c <HAL_TIM_TriggerCallback>:
 800a83c:	4770      	bx	lr
 800a83e:	bf00      	nop

0800a840 <HAL_TIM_IRQHandler>:
 800a840:	6803      	ldr	r3, [r0, #0]
 800a842:	b570      	push	{r4, r5, r6, lr}
 800a844:	68de      	ldr	r6, [r3, #12]
 800a846:	691d      	ldr	r5, [r3, #16]
 800a848:	07aa      	lsls	r2, r5, #30
 800a84a:	4604      	mov	r4, r0
 800a84c:	d501      	bpl.n	800a852 <HAL_TIM_IRQHandler+0x12>
 800a84e:	07b1      	lsls	r1, r6, #30
 800a850:	d452      	bmi.n	800a8f8 <HAL_TIM_IRQHandler+0xb8>
 800a852:	076b      	lsls	r3, r5, #29
 800a854:	d501      	bpl.n	800a85a <HAL_TIM_IRQHandler+0x1a>
 800a856:	0770      	lsls	r0, r6, #29
 800a858:	d43b      	bmi.n	800a8d2 <HAL_TIM_IRQHandler+0x92>
 800a85a:	0729      	lsls	r1, r5, #28
 800a85c:	d501      	bpl.n	800a862 <HAL_TIM_IRQHandler+0x22>
 800a85e:	0732      	lsls	r2, r6, #28
 800a860:	d425      	bmi.n	800a8ae <HAL_TIM_IRQHandler+0x6e>
 800a862:	06e8      	lsls	r0, r5, #27
 800a864:	d501      	bpl.n	800a86a <HAL_TIM_IRQHandler+0x2a>
 800a866:	06f1      	lsls	r1, r6, #27
 800a868:	d411      	bmi.n	800a88e <HAL_TIM_IRQHandler+0x4e>
 800a86a:	07ea      	lsls	r2, r5, #31
 800a86c:	d501      	bpl.n	800a872 <HAL_TIM_IRQHandler+0x32>
 800a86e:	07f3      	lsls	r3, r6, #31
 800a870:	d464      	bmi.n	800a93c <HAL_TIM_IRQHandler+0xfc>
 800a872:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
 800a876:	d04c      	beq.n	800a912 <HAL_TIM_IRQHandler+0xd2>
 800a878:	0630      	lsls	r0, r6, #24
 800a87a:	d467      	bmi.n	800a94c <HAL_TIM_IRQHandler+0x10c>
 800a87c:	0668      	lsls	r0, r5, #25
 800a87e:	d501      	bpl.n	800a884 <HAL_TIM_IRQHandler+0x44>
 800a880:	0671      	lsls	r1, r6, #25
 800a882:	d46d      	bmi.n	800a960 <HAL_TIM_IRQHandler+0x120>
 800a884:	06aa      	lsls	r2, r5, #26
 800a886:	d501      	bpl.n	800a88c <HAL_TIM_IRQHandler+0x4c>
 800a888:	06b3      	lsls	r3, r6, #26
 800a88a:	d44e      	bmi.n	800a92a <HAL_TIM_IRQHandler+0xea>
 800a88c:	bd70      	pop	{r4, r5, r6, pc}
 800a88e:	6823      	ldr	r3, [r4, #0]
 800a890:	f06f 0210 	mvn.w	r2, #16
 800a894:	611a      	str	r2, [r3, #16]
 800a896:	2208      	movs	r2, #8
 800a898:	7722      	strb	r2, [r4, #28]
 800a89a:	69db      	ldr	r3, [r3, #28]
 800a89c:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800a8a0:	4620      	mov	r0, r4
 800a8a2:	d071      	beq.n	800a988 <HAL_TIM_IRQHandler+0x148>
 800a8a4:	f7ff ffc6 	bl	800a834 <HAL_TIM_IC_CaptureCallback>
 800a8a8:	2300      	movs	r3, #0
 800a8aa:	7723      	strb	r3, [r4, #28]
 800a8ac:	e7dd      	b.n	800a86a <HAL_TIM_IRQHandler+0x2a>
 800a8ae:	6823      	ldr	r3, [r4, #0]
 800a8b0:	f06f 0208 	mvn.w	r2, #8
 800a8b4:	611a      	str	r2, [r3, #16]
 800a8b6:	2204      	movs	r2, #4
 800a8b8:	7722      	strb	r2, [r4, #28]
 800a8ba:	69db      	ldr	r3, [r3, #28]
 800a8bc:	079b      	lsls	r3, r3, #30
 800a8be:	4620      	mov	r0, r4
 800a8c0:	d15f      	bne.n	800a982 <HAL_TIM_IRQHandler+0x142>
 800a8c2:	f7ff ffb5 	bl	800a830 <HAL_TIM_OC_DelayElapsedCallback>
 800a8c6:	4620      	mov	r0, r4
 800a8c8:	f7ff ffb6 	bl	800a838 <HAL_TIM_PWM_PulseFinishedCallback>
 800a8cc:	2300      	movs	r3, #0
 800a8ce:	7723      	strb	r3, [r4, #28]
 800a8d0:	e7c7      	b.n	800a862 <HAL_TIM_IRQHandler+0x22>
 800a8d2:	6823      	ldr	r3, [r4, #0]
 800a8d4:	f06f 0204 	mvn.w	r2, #4
 800a8d8:	611a      	str	r2, [r3, #16]
 800a8da:	2202      	movs	r2, #2
 800a8dc:	7722      	strb	r2, [r4, #28]
 800a8de:	699b      	ldr	r3, [r3, #24]
 800a8e0:	f413 7f40 	tst.w	r3, #768	@ 0x300
 800a8e4:	4620      	mov	r0, r4
 800a8e6:	d149      	bne.n	800a97c <HAL_TIM_IRQHandler+0x13c>
 800a8e8:	f7ff ffa2 	bl	800a830 <HAL_TIM_OC_DelayElapsedCallback>
 800a8ec:	4620      	mov	r0, r4
 800a8ee:	f7ff ffa3 	bl	800a838 <HAL_TIM_PWM_PulseFinishedCallback>
 800a8f2:	2300      	movs	r3, #0
 800a8f4:	7723      	strb	r3, [r4, #28]
 800a8f6:	e7b0      	b.n	800a85a <HAL_TIM_IRQHandler+0x1a>
 800a8f8:	f06f 0202 	mvn.w	r2, #2
 800a8fc:	611a      	str	r2, [r3, #16]
 800a8fe:	2201      	movs	r2, #1
 800a900:	7702      	strb	r2, [r0, #28]
 800a902:	699b      	ldr	r3, [r3, #24]
 800a904:	079a      	lsls	r2, r3, #30
 800a906:	d033      	beq.n	800a970 <HAL_TIM_IRQHandler+0x130>
 800a908:	f7ff ff94 	bl	800a834 <HAL_TIM_IC_CaptureCallback>
 800a90c:	2300      	movs	r3, #0
 800a90e:	7723      	strb	r3, [r4, #28]
 800a910:	e79f      	b.n	800a852 <HAL_TIM_IRQHandler+0x12>
 800a912:	05ea      	lsls	r2, r5, #23
 800a914:	d5b2      	bpl.n	800a87c <HAL_TIM_IRQHandler+0x3c>
 800a916:	0633      	lsls	r3, r6, #24
 800a918:	d5b0      	bpl.n	800a87c <HAL_TIM_IRQHandler+0x3c>
 800a91a:	6823      	ldr	r3, [r4, #0]
 800a91c:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800a920:	611a      	str	r2, [r3, #16]
 800a922:	4620      	mov	r0, r4
 800a924:	f000 f86c 	bl	800aa00 <HAL_TIMEx_Break2Callback>
 800a928:	e7a8      	b.n	800a87c <HAL_TIM_IRQHandler+0x3c>
 800a92a:	6823      	ldr	r3, [r4, #0]
 800a92c:	f06f 0220 	mvn.w	r2, #32
 800a930:	4620      	mov	r0, r4
 800a932:	611a      	str	r2, [r3, #16]
 800a934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a938:	f000 b85e 	b.w	800a9f8 <HAL_TIMEx_CommutCallback>
 800a93c:	6823      	ldr	r3, [r4, #0]
 800a93e:	f06f 0201 	mvn.w	r2, #1
 800a942:	611a      	str	r2, [r3, #16]
 800a944:	4620      	mov	r0, r4
 800a946:	f7f7 fc83 	bl	8002250 <HAL_TIM_PeriodElapsedCallback>
 800a94a:	e792      	b.n	800a872 <HAL_TIM_IRQHandler+0x32>
 800a94c:	6823      	ldr	r3, [r4, #0]
 800a94e:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800a952:	611a      	str	r2, [r3, #16]
 800a954:	4620      	mov	r0, r4
 800a956:	f000 f851 	bl	800a9fc <HAL_TIMEx_BreakCallback>
 800a95a:	05e9      	lsls	r1, r5, #23
 800a95c:	d58e      	bpl.n	800a87c <HAL_TIM_IRQHandler+0x3c>
 800a95e:	e7dc      	b.n	800a91a <HAL_TIM_IRQHandler+0xda>
 800a960:	6823      	ldr	r3, [r4, #0]
 800a962:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800a966:	611a      	str	r2, [r3, #16]
 800a968:	4620      	mov	r0, r4
 800a96a:	f7ff ff67 	bl	800a83c <HAL_TIM_TriggerCallback>
 800a96e:	e789      	b.n	800a884 <HAL_TIM_IRQHandler+0x44>
 800a970:	f7ff ff5e 	bl	800a830 <HAL_TIM_OC_DelayElapsedCallback>
 800a974:	4620      	mov	r0, r4
 800a976:	f7ff ff5f 	bl	800a838 <HAL_TIM_PWM_PulseFinishedCallback>
 800a97a:	e7c7      	b.n	800a90c <HAL_TIM_IRQHandler+0xcc>
 800a97c:	f7ff ff5a 	bl	800a834 <HAL_TIM_IC_CaptureCallback>
 800a980:	e7b7      	b.n	800a8f2 <HAL_TIM_IRQHandler+0xb2>
 800a982:	f7ff ff57 	bl	800a834 <HAL_TIM_IC_CaptureCallback>
 800a986:	e7a1      	b.n	800a8cc <HAL_TIM_IRQHandler+0x8c>
 800a988:	f7ff ff52 	bl	800a830 <HAL_TIM_OC_DelayElapsedCallback>
 800a98c:	4620      	mov	r0, r4
 800a98e:	f7ff ff53 	bl	800a838 <HAL_TIM_PWM_PulseFinishedCallback>
 800a992:	e789      	b.n	800a8a8 <HAL_TIM_IRQHandler+0x68>

0800a994 <HAL_TIMEx_MasterConfigSynchronization>:
 800a994:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 800a998:	2a01      	cmp	r2, #1
 800a99a:	d028      	beq.n	800a9ee <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 800a99c:	b470      	push	{r4, r5, r6}
 800a99e:	4603      	mov	r3, r0
 800a9a0:	4e14      	ldr	r6, [pc, #80]	@ (800a9f4 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 800a9a2:	6800      	ldr	r0, [r0, #0]
 800a9a4:	2202      	movs	r2, #2
 800a9a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800a9aa:	42b0      	cmp	r0, r6
 800a9ac:	6842      	ldr	r2, [r0, #4]
 800a9ae:	680d      	ldr	r5, [r1, #0]
 800a9b0:	6884      	ldr	r4, [r0, #8]
 800a9b2:	d00e      	beq.n	800a9d2 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 800a9b4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800a9b8:	432a      	orrs	r2, r5
 800a9ba:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800a9be:	6042      	str	r2, [r0, #4]
 800a9c0:	d00f      	beq.n	800a9e2 <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 800a9c2:	2000      	movs	r0, #0
 800a9c4:	2201      	movs	r2, #1
 800a9c6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800a9ca:	f883 003c 	strb.w	r0, [r3, #60]	@ 0x3c
 800a9ce:	bc70      	pop	{r4, r5, r6}
 800a9d0:	4770      	bx	lr
 800a9d2:	684e      	ldr	r6, [r1, #4]
 800a9d4:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800a9d8:	4332      	orrs	r2, r6
 800a9da:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800a9de:	4315      	orrs	r5, r2
 800a9e0:	6045      	str	r5, [r0, #4]
 800a9e2:	688a      	ldr	r2, [r1, #8]
 800a9e4:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
 800a9e8:	4314      	orrs	r4, r2
 800a9ea:	6084      	str	r4, [r0, #8]
 800a9ec:	e7e9      	b.n	800a9c2 <HAL_TIMEx_MasterConfigSynchronization+0x2e>
 800a9ee:	2002      	movs	r0, #2
 800a9f0:	4770      	bx	lr
 800a9f2:	bf00      	nop
 800a9f4:	40012c00 	.word	0x40012c00

0800a9f8 <HAL_TIMEx_CommutCallback>:
 800a9f8:	4770      	bx	lr
 800a9fa:	bf00      	nop

0800a9fc <HAL_TIMEx_BreakCallback>:
 800a9fc:	4770      	bx	lr
 800a9fe:	bf00      	nop

0800aa00 <HAL_TIMEx_Break2Callback>:
 800aa00:	4770      	bx	lr
 800aa02:	bf00      	nop

0800aa04 <HAL_UART_Transmit_DMA>:
 800aa04:	b570      	push	{r4, r5, r6, lr}
 800aa06:	f8d0 6088 	ldr.w	r6, [r0, #136]	@ 0x88
 800aa0a:	2e20      	cmp	r6, #32
 800aa0c:	d124      	bne.n	800aa58 <HAL_UART_Transmit_DMA+0x54>
 800aa0e:	4604      	mov	r4, r0
 800aa10:	b301      	cbz	r1, 800aa54 <HAL_UART_Transmit_DMA+0x50>
 800aa12:	4613      	mov	r3, r2
 800aa14:	b1f2      	cbz	r2, 800aa54 <HAL_UART_Transmit_DMA+0x50>
 800aa16:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
 800aa1a:	2200      	movs	r2, #0
 800aa1c:	6501      	str	r1, [r0, #80]	@ 0x50
 800aa1e:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 800aa22:	f8a0 3054 	strh.w	r3, [r0, #84]	@ 0x54
 800aa26:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 800aa28:	2521      	movs	r5, #33	@ 0x21
 800aa2a:	f8c4 5088 	str.w	r5, [r4, #136]	@ 0x88
 800aa2e:	6825      	ldr	r5, [r4, #0]
 800aa30:	b1a8      	cbz	r0, 800aa5e <HAL_UART_Transmit_DMA+0x5a>
 800aa32:	6382      	str	r2, [r0, #56]	@ 0x38
 800aa34:	f105 0228 	add.w	r2, r5, #40	@ 0x28
 800aa38:	4d11      	ldr	r5, [pc, #68]	@ (800aa80 <HAL_UART_Transmit_DMA+0x7c>)
 800aa3a:	62c5      	str	r5, [r0, #44]	@ 0x2c
 800aa3c:	4d11      	ldr	r5, [pc, #68]	@ (800aa84 <HAL_UART_Transmit_DMA+0x80>)
 800aa3e:	6305      	str	r5, [r0, #48]	@ 0x30
 800aa40:	4d11      	ldr	r5, [pc, #68]	@ (800aa88 <HAL_UART_Transmit_DMA+0x84>)
 800aa42:	6345      	str	r5, [r0, #52]	@ 0x34
 800aa44:	f7fb fa80 	bl	8005f48 <HAL_DMA_Start_IT>
 800aa48:	b140      	cbz	r0, 800aa5c <HAL_UART_Transmit_DMA+0x58>
 800aa4a:	2310      	movs	r3, #16
 800aa4c:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800aa50:	f8c4 6088 	str.w	r6, [r4, #136]	@ 0x88
 800aa54:	2001      	movs	r0, #1
 800aa56:	bd70      	pop	{r4, r5, r6, pc}
 800aa58:	2002      	movs	r0, #2
 800aa5a:	bd70      	pop	{r4, r5, r6, pc}
 800aa5c:	6825      	ldr	r5, [r4, #0]
 800aa5e:	2340      	movs	r3, #64	@ 0x40
 800aa60:	622b      	str	r3, [r5, #32]
 800aa62:	f105 0308 	add.w	r3, r5, #8
 800aa66:	e853 3f00 	ldrex	r3, [r3]
 800aa6a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800aa6e:	f105 0108 	add.w	r1, r5, #8
 800aa72:	e841 3200 	strex	r2, r3, [r1]
 800aa76:	2a00      	cmp	r2, #0
 800aa78:	d1f3      	bne.n	800aa62 <HAL_UART_Transmit_DMA+0x5e>
 800aa7a:	2000      	movs	r0, #0
 800aa7c:	bd70      	pop	{r4, r5, r6, pc}
 800aa7e:	bf00      	nop
 800aa80:	0800abb9 	.word	0x0800abb9
 800aa84:	0800ac01 	.word	0x0800ac01
 800aa88:	0800ac15 	.word	0x0800ac15

0800aa8c <HAL_UART_Abort>:
 800aa8c:	6803      	ldr	r3, [r0, #0]
 800aa8e:	b510      	push	{r4, lr}
 800aa90:	4604      	mov	r4, r0
 800aa92:	e853 2f00 	ldrex	r2, [r3]
 800aa96:	f422 72f0 	bic.w	r2, r2, #480	@ 0x1e0
 800aa9a:	e843 2100 	strex	r1, r2, [r3]
 800aa9e:	2900      	cmp	r1, #0
 800aaa0:	d1f7      	bne.n	800aa92 <HAL_UART_Abort+0x6>
 800aaa2:	4843      	ldr	r0, [pc, #268]	@ (800abb0 <HAL_UART_Abort+0x124>)
 800aaa4:	f103 0208 	add.w	r2, r3, #8
 800aaa8:	e852 2f00 	ldrex	r2, [r2]
 800aaac:	4002      	ands	r2, r0
 800aaae:	f103 0c08 	add.w	ip, r3, #8
 800aab2:	e84c 2100 	strex	r1, r2, [ip]
 800aab6:	2900      	cmp	r1, #0
 800aab8:	d1f4      	bne.n	800aaa4 <HAL_UART_Abort+0x18>
 800aaba:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800aabc:	2a01      	cmp	r2, #1
 800aabe:	d052      	beq.n	800ab66 <HAL_UART_Abort+0xda>
 800aac0:	6899      	ldr	r1, [r3, #8]
 800aac2:	0608      	lsls	r0, r1, #24
 800aac4:	461a      	mov	r2, r3
 800aac6:	d420      	bmi.n	800ab0a <HAL_UART_Abort+0x7e>
 800aac8:	6899      	ldr	r1, [r3, #8]
 800aaca:	0649      	lsls	r1, r1, #25
 800aacc:	d435      	bmi.n	800ab3a <HAL_UART_Abort+0xae>
 800aace:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 800aad0:	2300      	movs	r3, #0
 800aad2:	200f      	movs	r0, #15
 800aad4:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
 800aad8:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
 800aadc:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800aae0:	6210      	str	r0, [r2, #32]
 800aae2:	d103      	bne.n	800aaec <HAL_UART_Abort+0x60>
 800aae4:	6993      	ldr	r3, [r2, #24]
 800aae6:	f043 0310 	orr.w	r3, r3, #16
 800aaea:	6193      	str	r3, [r2, #24]
 800aaec:	6991      	ldr	r1, [r2, #24]
 800aaee:	2300      	movs	r3, #0
 800aaf0:	2020      	movs	r0, #32
 800aaf2:	f041 0108 	orr.w	r1, r1, #8
 800aaf6:	6191      	str	r1, [r2, #24]
 800aaf8:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 800aafc:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800ab00:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800ab02:	4618      	mov	r0, r3
 800ab04:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800ab08:	bd10      	pop	{r4, pc}
 800ab0a:	f103 0208 	add.w	r2, r3, #8
 800ab0e:	e852 2f00 	ldrex	r2, [r2]
 800ab12:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800ab16:	f103 0008 	add.w	r0, r3, #8
 800ab1a:	e840 2100 	strex	r1, r2, [r0]
 800ab1e:	2900      	cmp	r1, #0
 800ab20:	d1f3      	bne.n	800ab0a <HAL_UART_Abort+0x7e>
 800ab22:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800ab24:	b128      	cbz	r0, 800ab32 <HAL_UART_Abort+0xa6>
 800ab26:	2300      	movs	r3, #0
 800ab28:	6383      	str	r3, [r0, #56]	@ 0x38
 800ab2a:	f7fb fa65 	bl	8005ff8 <HAL_DMA_Abort>
 800ab2e:	bb68      	cbnz	r0, 800ab8c <HAL_UART_Abort+0x100>
 800ab30:	6823      	ldr	r3, [r4, #0]
 800ab32:	6899      	ldr	r1, [r3, #8]
 800ab34:	0649      	lsls	r1, r1, #25
 800ab36:	461a      	mov	r2, r3
 800ab38:	d5c9      	bpl.n	800aace <HAL_UART_Abort+0x42>
 800ab3a:	f103 0208 	add.w	r2, r3, #8
 800ab3e:	e852 2f00 	ldrex	r2, [r2]
 800ab42:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800ab46:	f103 0008 	add.w	r0, r3, #8
 800ab4a:	e840 2100 	strex	r1, r2, [r0]
 800ab4e:	2900      	cmp	r1, #0
 800ab50:	d1f3      	bne.n	800ab3a <HAL_UART_Abort+0xae>
 800ab52:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800ab56:	b1b8      	cbz	r0, 800ab88 <HAL_UART_Abort+0xfc>
 800ab58:	2300      	movs	r3, #0
 800ab5a:	6383      	str	r3, [r0, #56]	@ 0x38
 800ab5c:	f7fb fa4c 	bl	8005ff8 <HAL_DMA_Abort>
 800ab60:	b9f0      	cbnz	r0, 800aba0 <HAL_UART_Abort+0x114>
 800ab62:	6822      	ldr	r2, [r4, #0]
 800ab64:	e7b3      	b.n	800aace <HAL_UART_Abort+0x42>
 800ab66:	e853 2f00 	ldrex	r2, [r3]
 800ab6a:	f022 0210 	bic.w	r2, r2, #16
 800ab6e:	e843 2100 	strex	r1, r2, [r3]
 800ab72:	2900      	cmp	r1, #0
 800ab74:	d0a4      	beq.n	800aac0 <HAL_UART_Abort+0x34>
 800ab76:	e853 2f00 	ldrex	r2, [r3]
 800ab7a:	f022 0210 	bic.w	r2, r2, #16
 800ab7e:	e843 2100 	strex	r1, r2, [r3]
 800ab82:	2900      	cmp	r1, #0
 800ab84:	d1ef      	bne.n	800ab66 <HAL_UART_Abort+0xda>
 800ab86:	e79b      	b.n	800aac0 <HAL_UART_Abort+0x34>
 800ab88:	461a      	mov	r2, r3
 800ab8a:	e7a0      	b.n	800aace <HAL_UART_Abort+0x42>
 800ab8c:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800ab8e:	f7fb faef 	bl	8006170 <HAL_DMA_GetError>
 800ab92:	2820      	cmp	r0, #32
 800ab94:	d1cc      	bne.n	800ab30 <HAL_UART_Abort+0xa4>
 800ab96:	2310      	movs	r3, #16
 800ab98:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 800ab9c:	2003      	movs	r0, #3
 800ab9e:	bd10      	pop	{r4, pc}
 800aba0:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800aba4:	f7fb fae4 	bl	8006170 <HAL_DMA_GetError>
 800aba8:	2820      	cmp	r0, #32
 800abaa:	d1da      	bne.n	800ab62 <HAL_UART_Abort+0xd6>
 800abac:	e7f3      	b.n	800ab96 <HAL_UART_Abort+0x10a>
 800abae:	bf00      	nop
 800abb0:	ef7ffffe 	.word	0xef7ffffe

0800abb4 <HAL_UART_TxCpltCallback>:
 800abb4:	4770      	bx	lr
 800abb6:	bf00      	nop

0800abb8 <UART_DMATransmitCplt>:
 800abb8:	b508      	push	{r3, lr}
 800abba:	6803      	ldr	r3, [r0, #0]
 800abbc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800abbe:	681b      	ldr	r3, [r3, #0]
 800abc0:	f013 0320 	ands.w	r3, r3, #32
 800abc4:	d117      	bne.n	800abf6 <UART_DMATransmitCplt+0x3e>
 800abc6:	6802      	ldr	r2, [r0, #0]
 800abc8:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
 800abcc:	f102 0308 	add.w	r3, r2, #8
 800abd0:	e853 3f00 	ldrex	r3, [r3]
 800abd4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800abd8:	f102 0008 	add.w	r0, r2, #8
 800abdc:	e840 3100 	strex	r1, r3, [r0]
 800abe0:	2900      	cmp	r1, #0
 800abe2:	d1f3      	bne.n	800abcc <UART_DMATransmitCplt+0x14>
 800abe4:	e852 3f00 	ldrex	r3, [r2]
 800abe8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800abec:	e842 3100 	strex	r1, r3, [r2]
 800abf0:	2900      	cmp	r1, #0
 800abf2:	d1f7      	bne.n	800abe4 <UART_DMATransmitCplt+0x2c>
 800abf4:	bd08      	pop	{r3, pc}
 800abf6:	f7ff ffdd 	bl	800abb4 <HAL_UART_TxCpltCallback>
 800abfa:	bd08      	pop	{r3, pc}

0800abfc <HAL_UART_TxHalfCpltCallback>:
 800abfc:	4770      	bx	lr
 800abfe:	bf00      	nop

0800ac00 <UART_DMATxHalfCplt>:
 800ac00:	b508      	push	{r3, lr}
 800ac02:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ac04:	f7ff fffa 	bl	800abfc <HAL_UART_TxHalfCpltCallback>
 800ac08:	bd08      	pop	{r3, pc}
 800ac0a:	bf00      	nop

0800ac0c <HAL_UART_RxHalfCpltCallback>:
 800ac0c:	4770      	bx	lr
 800ac0e:	bf00      	nop

0800ac10 <HAL_UART_ErrorCallback>:
 800ac10:	4770      	bx	lr
 800ac12:	bf00      	nop

0800ac14 <UART_DMAError>:
 800ac14:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800ac16:	6803      	ldr	r3, [r0, #0]
 800ac18:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 800ac1c:	b510      	push	{r4, lr}
 800ac1e:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
 800ac22:	689a      	ldr	r2, [r3, #8]
 800ac24:	0612      	lsls	r2, r2, #24
 800ac26:	d501      	bpl.n	800ac2c <UART_DMAError+0x18>
 800ac28:	2921      	cmp	r1, #33	@ 0x21
 800ac2a:	d00d      	beq.n	800ac48 <UART_DMAError+0x34>
 800ac2c:	689a      	ldr	r2, [r3, #8]
 800ac2e:	0652      	lsls	r2, r2, #25
 800ac30:	d501      	bpl.n	800ac36 <UART_DMAError+0x22>
 800ac32:	2c22      	cmp	r4, #34	@ 0x22
 800ac34:	d023      	beq.n	800ac7e <UART_DMAError+0x6a>
 800ac36:	f8d0 3090 	ldr.w	r3, [r0, #144]	@ 0x90
 800ac3a:	f043 0310 	orr.w	r3, r3, #16
 800ac3e:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 800ac42:	f7ff ffe5 	bl	800ac10 <HAL_UART_ErrorCallback>
 800ac46:	bd10      	pop	{r4, pc}
 800ac48:	2200      	movs	r2, #0
 800ac4a:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
 800ac4e:	e853 2f00 	ldrex	r2, [r3]
 800ac52:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 800ac56:	e843 2100 	strex	r1, r2, [r3]
 800ac5a:	2900      	cmp	r1, #0
 800ac5c:	d1f7      	bne.n	800ac4e <UART_DMAError+0x3a>
 800ac5e:	f103 0208 	add.w	r2, r3, #8
 800ac62:	e852 2f00 	ldrex	r2, [r2]
 800ac66:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800ac6a:	f103 0c08 	add.w	ip, r3, #8
 800ac6e:	e84c 2100 	strex	r1, r2, [ip]
 800ac72:	2900      	cmp	r1, #0
 800ac74:	d1f3      	bne.n	800ac5e <UART_DMAError+0x4a>
 800ac76:	2220      	movs	r2, #32
 800ac78:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800ac7c:	e7d6      	b.n	800ac2c <UART_DMAError+0x18>
 800ac7e:	2200      	movs	r2, #0
 800ac80:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800ac84:	e853 2f00 	ldrex	r2, [r3]
 800ac88:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800ac8c:	e843 2100 	strex	r1, r2, [r3]
 800ac90:	2900      	cmp	r1, #0
 800ac92:	d1f7      	bne.n	800ac84 <UART_DMAError+0x70>
 800ac94:	4c13      	ldr	r4, [pc, #76]	@ (800ace4 <UART_DMAError+0xd0>)
 800ac96:	f103 0208 	add.w	r2, r3, #8
 800ac9a:	e852 2f00 	ldrex	r2, [r2]
 800ac9e:	4022      	ands	r2, r4
 800aca0:	f103 0c08 	add.w	ip, r3, #8
 800aca4:	e84c 2100 	strex	r1, r2, [ip]
 800aca8:	2900      	cmp	r1, #0
 800acaa:	d1f4      	bne.n	800ac96 <UART_DMAError+0x82>
 800acac:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800acae:	2a01      	cmp	r2, #1
 800acb0:	d006      	beq.n	800acc0 <UART_DMAError+0xac>
 800acb2:	2300      	movs	r3, #0
 800acb4:	2220      	movs	r2, #32
 800acb6:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800acba:	6743      	str	r3, [r0, #116]	@ 0x74
 800acbc:	66c3      	str	r3, [r0, #108]	@ 0x6c
 800acbe:	e7ba      	b.n	800ac36 <UART_DMAError+0x22>
 800acc0:	e853 2f00 	ldrex	r2, [r3]
 800acc4:	f022 0210 	bic.w	r2, r2, #16
 800acc8:	e843 2100 	strex	r1, r2, [r3]
 800accc:	2900      	cmp	r1, #0
 800acce:	d0f0      	beq.n	800acb2 <UART_DMAError+0x9e>
 800acd0:	e853 2f00 	ldrex	r2, [r3]
 800acd4:	f022 0210 	bic.w	r2, r2, #16
 800acd8:	e843 2100 	strex	r1, r2, [r3]
 800acdc:	2900      	cmp	r1, #0
 800acde:	d1ef      	bne.n	800acc0 <UART_DMAError+0xac>
 800ace0:	e7e7      	b.n	800acb2 <UART_DMAError+0x9e>
 800ace2:	bf00      	nop
 800ace4:	effffffe 	.word	0xeffffffe

0800ace8 <UART_DMAAbortOnError>:
 800ace8:	b508      	push	{r3, lr}
 800acea:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800acec:	2300      	movs	r3, #0
 800acee:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
 800acf2:	f7ff ff8d 	bl	800ac10 <HAL_UART_ErrorCallback>
 800acf6:	bd08      	pop	{r3, pc}

0800acf8 <HAL_UARTEx_RxEventCallback>:
 800acf8:	4770      	bx	lr
 800acfa:	bf00      	nop

0800acfc <HAL_UART_IRQHandler>:
 800acfc:	6803      	ldr	r3, [r0, #0]
 800acfe:	69da      	ldr	r2, [r3, #28]
 800ad00:	f640 0c0f 	movw	ip, #2063	@ 0x80f
 800ad04:	ea12 0f0c 	tst.w	r2, ip
 800ad08:	b570      	push	{r4, r5, r6, lr}
 800ad0a:	681d      	ldr	r5, [r3, #0]
 800ad0c:	6899      	ldr	r1, [r3, #8]
 800ad0e:	4604      	mov	r4, r0
 800ad10:	d145      	bne.n	800ad9e <HAL_UART_IRQHandler+0xa2>
 800ad12:	0696      	lsls	r6, r2, #26
 800ad14:	d507      	bpl.n	800ad26 <HAL_UART_IRQHandler+0x2a>
 800ad16:	f005 0c20 	and.w	ip, r5, #32
 800ad1a:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
 800ad1e:	ea5c 0c06 	orrs.w	ip, ip, r6
 800ad22:	f040 80f7 	bne.w	800af14 <HAL_UART_IRQHandler+0x218>
 800ad26:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
 800ad28:	2801      	cmp	r0, #1
 800ad2a:	f000 80cb 	beq.w	800aec4 <HAL_UART_IRQHandler+0x1c8>
 800ad2e:	02d0      	lsls	r0, r2, #11
 800ad30:	d41d      	bmi.n	800ad6e <HAL_UART_IRQHandler+0x72>
 800ad32:	0610      	lsls	r0, r2, #24
 800ad34:	d506      	bpl.n	800ad44 <HAL_UART_IRQHandler+0x48>
 800ad36:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
 800ad3a:	f005 0080 	and.w	r0, r5, #128	@ 0x80
 800ad3e:	4308      	orrs	r0, r1
 800ad40:	f040 80ef 	bne.w	800af22 <HAL_UART_IRQHandler+0x226>
 800ad44:	0651      	lsls	r1, r2, #25
 800ad46:	d51c      	bpl.n	800ad82 <HAL_UART_IRQHandler+0x86>
 800ad48:	066e      	lsls	r6, r5, #25
 800ad4a:	d51a      	bpl.n	800ad82 <HAL_UART_IRQHandler+0x86>
 800ad4c:	e853 2f00 	ldrex	r2, [r3]
 800ad50:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800ad54:	e843 2100 	strex	r1, r2, [r3]
 800ad58:	2900      	cmp	r1, #0
 800ad5a:	d1f7      	bne.n	800ad4c <HAL_UART_IRQHandler+0x50>
 800ad5c:	2220      	movs	r2, #32
 800ad5e:	2300      	movs	r3, #0
 800ad60:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800ad64:	67a3      	str	r3, [r4, #120]	@ 0x78
 800ad66:	4620      	mov	r0, r4
 800ad68:	f7ff ff24 	bl	800abb4 <HAL_UART_TxCpltCallback>
 800ad6c:	bd70      	pop	{r4, r5, r6, pc}
 800ad6e:	024e      	lsls	r6, r1, #9
 800ad70:	d5df      	bpl.n	800ad32 <HAL_UART_IRQHandler+0x36>
 800ad72:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800ad76:	4620      	mov	r0, r4
 800ad78:	621a      	str	r2, [r3, #32]
 800ad7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad7e:	f000 bd2f 	b.w	800b7e0 <HAL_UARTEx_WakeupCallback>
 800ad82:	0210      	lsls	r0, r2, #8
 800ad84:	d502      	bpl.n	800ad8c <HAL_UART_IRQHandler+0x90>
 800ad86:	0069      	lsls	r1, r5, #1
 800ad88:	f100 8109 	bmi.w	800af9e <HAL_UART_IRQHandler+0x2a2>
 800ad8c:	01d3      	lsls	r3, r2, #7
 800ad8e:	d5ed      	bpl.n	800ad6c <HAL_UART_IRQHandler+0x70>
 800ad90:	2d00      	cmp	r5, #0
 800ad92:	daeb      	bge.n	800ad6c <HAL_UART_IRQHandler+0x70>
 800ad94:	4620      	mov	r0, r4
 800ad96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad9a:	f000 bd23 	b.w	800b7e4 <HAL_UARTEx_RxFifoFullCallback>
 800ad9e:	48b8      	ldr	r0, [pc, #736]	@ (800b080 <HAL_UART_IRQHandler+0x384>)
 800ada0:	4008      	ands	r0, r1
 800ada2:	f040 80f1 	bne.w	800af88 <HAL_UART_IRQHandler+0x28c>
 800ada6:	4eb7      	ldr	r6, [pc, #732]	@ (800b084 <HAL_UART_IRQHandler+0x388>)
 800ada8:	4235      	tst	r5, r6
 800adaa:	d0bc      	beq.n	800ad26 <HAL_UART_IRQHandler+0x2a>
 800adac:	07d6      	lsls	r6, r2, #31
 800adae:	d51a      	bpl.n	800ade6 <HAL_UART_IRQHandler+0xea>
 800adb0:	05ee      	lsls	r6, r5, #23
 800adb2:	f140 80cf 	bpl.w	800af54 <HAL_UART_IRQHandler+0x258>
 800adb6:	2601      	movs	r6, #1
 800adb8:	621e      	str	r6, [r3, #32]
 800adba:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800adbe:	f046 0601 	orr.w	r6, r6, #1
 800adc2:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800adc6:	0796      	lsls	r6, r2, #30
 800adc8:	f140 80c7 	bpl.w	800af5a <HAL_UART_IRQHandler+0x25e>
 800adcc:	07ce      	lsls	r6, r1, #31
 800adce:	d50a      	bpl.n	800ade6 <HAL_UART_IRQHandler+0xea>
 800add0:	2602      	movs	r6, #2
 800add2:	621e      	str	r6, [r3, #32]
 800add4:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800add8:	f046 0604 	orr.w	r6, r6, #4
 800addc:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800ade0:	0756      	lsls	r6, r2, #29
 800ade2:	f100 80c0 	bmi.w	800af66 <HAL_UART_IRQHandler+0x26a>
 800ade6:	0716      	lsls	r6, r2, #28
 800ade8:	d50b      	bpl.n	800ae02 <HAL_UART_IRQHandler+0x106>
 800adea:	f005 0620 	and.w	r6, r5, #32
 800adee:	4306      	orrs	r6, r0
 800adf0:	d007      	beq.n	800ae02 <HAL_UART_IRQHandler+0x106>
 800adf2:	2008      	movs	r0, #8
 800adf4:	6218      	str	r0, [r3, #32]
 800adf6:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800adfa:	f040 0008 	orr.w	r0, r0, #8
 800adfe:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
 800ae02:	0510      	lsls	r0, r2, #20
 800ae04:	d50a      	bpl.n	800ae1c <HAL_UART_IRQHandler+0x120>
 800ae06:	016e      	lsls	r6, r5, #5
 800ae08:	d508      	bpl.n	800ae1c <HAL_UART_IRQHandler+0x120>
 800ae0a:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 800ae0e:	6218      	str	r0, [r3, #32]
 800ae10:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800ae14:	f040 0020 	orr.w	r0, r0, #32
 800ae18:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
 800ae1c:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
 800ae20:	2800      	cmp	r0, #0
 800ae22:	d0a3      	beq.n	800ad6c <HAL_UART_IRQHandler+0x70>
 800ae24:	0690      	lsls	r0, r2, #26
 800ae26:	d506      	bpl.n	800ae36 <HAL_UART_IRQHandler+0x13a>
 800ae28:	f005 0520 	and.w	r5, r5, #32
 800ae2c:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
 800ae30:	430d      	orrs	r5, r1
 800ae32:	f040 80a1 	bne.w	800af78 <HAL_UART_IRQHandler+0x27c>
 800ae36:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
 800ae3a:	689a      	ldr	r2, [r3, #8]
 800ae3c:	f001 0128 	and.w	r1, r1, #40	@ 0x28
 800ae40:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800ae44:	ea52 0501 	orrs.w	r5, r2, r1
 800ae48:	f000 80df 	beq.w	800b00a <HAL_UART_IRQHandler+0x30e>
 800ae4c:	e853 2f00 	ldrex	r2, [r3]
 800ae50:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800ae54:	e843 2100 	strex	r1, r2, [r3]
 800ae58:	2900      	cmp	r1, #0
 800ae5a:	d1f7      	bne.n	800ae4c <HAL_UART_IRQHandler+0x150>
 800ae5c:	488a      	ldr	r0, [pc, #552]	@ (800b088 <HAL_UART_IRQHandler+0x38c>)
 800ae5e:	f103 0208 	add.w	r2, r3, #8
 800ae62:	e852 2f00 	ldrex	r2, [r2]
 800ae66:	4002      	ands	r2, r0
 800ae68:	f103 0508 	add.w	r5, r3, #8
 800ae6c:	e845 2100 	strex	r1, r2, [r5]
 800ae70:	2900      	cmp	r1, #0
 800ae72:	d1f4      	bne.n	800ae5e <HAL_UART_IRQHandler+0x162>
 800ae74:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800ae76:	2a01      	cmp	r2, #1
 800ae78:	d05b      	beq.n	800af32 <HAL_UART_IRQHandler+0x236>
 800ae7a:	2200      	movs	r2, #0
 800ae7c:	2120      	movs	r1, #32
 800ae7e:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800ae82:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800ae84:	6899      	ldr	r1, [r3, #8]
 800ae86:	6762      	str	r2, [r4, #116]	@ 0x74
 800ae88:	064a      	lsls	r2, r1, #25
 800ae8a:	f140 8084 	bpl.w	800af96 <HAL_UART_IRQHandler+0x29a>
 800ae8e:	f103 0208 	add.w	r2, r3, #8
 800ae92:	e852 2f00 	ldrex	r2, [r2]
 800ae96:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800ae9a:	f103 0008 	add.w	r0, r3, #8
 800ae9e:	e840 2100 	strex	r1, r2, [r0]
 800aea2:	2900      	cmp	r1, #0
 800aea4:	d1f3      	bne.n	800ae8e <HAL_UART_IRQHandler+0x192>
 800aea6:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800aeaa:	2800      	cmp	r0, #0
 800aeac:	d073      	beq.n	800af96 <HAL_UART_IRQHandler+0x29a>
 800aeae:	4b77      	ldr	r3, [pc, #476]	@ (800b08c <HAL_UART_IRQHandler+0x390>)
 800aeb0:	6383      	str	r3, [r0, #56]	@ 0x38
 800aeb2:	f7fb f8d9 	bl	8006068 <HAL_DMA_Abort_IT>
 800aeb6:	2800      	cmp	r0, #0
 800aeb8:	f43f af58 	beq.w	800ad6c <HAL_UART_IRQHandler+0x70>
 800aebc:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800aec0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800aec2:	e02b      	b.n	800af1c <HAL_UART_IRQHandler+0x220>
 800aec4:	06d6      	lsls	r6, r2, #27
 800aec6:	f57f af32 	bpl.w	800ad2e <HAL_UART_IRQHandler+0x32>
 800aeca:	06e8      	lsls	r0, r5, #27
 800aecc:	f57f af2f 	bpl.w	800ad2e <HAL_UART_IRQHandler+0x32>
 800aed0:	2210      	movs	r2, #16
 800aed2:	621a      	str	r2, [r3, #32]
 800aed4:	6899      	ldr	r1, [r3, #8]
 800aed6:	f8b4 205c 	ldrh.w	r2, [r4, #92]	@ 0x5c
 800aeda:	0649      	lsls	r1, r1, #25
 800aedc:	f140 809b 	bpl.w	800b016 <HAL_UART_IRQHandler+0x31a>
 800aee0:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
 800aee4:	6805      	ldr	r5, [r0, #0]
 800aee6:	6869      	ldr	r1, [r5, #4]
 800aee8:	b289      	uxth	r1, r1
 800aeea:	2900      	cmp	r1, #0
 800aeec:	f000 80d0 	beq.w	800b090 <HAL_UART_IRQHandler+0x394>
 800aef0:	4291      	cmp	r1, r2
 800aef2:	f080 80cd 	bcs.w	800b090 <HAL_UART_IRQHandler+0x394>
 800aef6:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
 800aefa:	6829      	ldr	r1, [r5, #0]
 800aefc:	068e      	lsls	r6, r1, #26
 800aefe:	d553      	bpl.n	800afa8 <HAL_UART_IRQHandler+0x2ac>
 800af00:	2302      	movs	r3, #2
 800af02:	6723      	str	r3, [r4, #112]	@ 0x70
 800af04:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
 800af08:	1a51      	subs	r1, r2, r1
 800af0a:	4620      	mov	r0, r4
 800af0c:	b289      	uxth	r1, r1
 800af0e:	f7ff fef3 	bl	800acf8 <HAL_UARTEx_RxEventCallback>
 800af12:	bd70      	pop	{r4, r5, r6, pc}
 800af14:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 800af16:	2b00      	cmp	r3, #0
 800af18:	f43f af28 	beq.w	800ad6c <HAL_UART_IRQHandler+0x70>
 800af1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af20:	4718      	bx	r3
 800af22:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800af24:	2b00      	cmp	r3, #0
 800af26:	f43f af21 	beq.w	800ad6c <HAL_UART_IRQHandler+0x70>
 800af2a:	4620      	mov	r0, r4
 800af2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af30:	4718      	bx	r3
 800af32:	e853 2f00 	ldrex	r2, [r3]
 800af36:	f022 0210 	bic.w	r2, r2, #16
 800af3a:	e843 2100 	strex	r1, r2, [r3]
 800af3e:	2900      	cmp	r1, #0
 800af40:	d09b      	beq.n	800ae7a <HAL_UART_IRQHandler+0x17e>
 800af42:	e853 2f00 	ldrex	r2, [r3]
 800af46:	f022 0210 	bic.w	r2, r2, #16
 800af4a:	e843 2100 	strex	r1, r2, [r3]
 800af4e:	2900      	cmp	r1, #0
 800af50:	d1ef      	bne.n	800af32 <HAL_UART_IRQHandler+0x236>
 800af52:	e792      	b.n	800ae7a <HAL_UART_IRQHandler+0x17e>
 800af54:	0796      	lsls	r6, r2, #30
 800af56:	f53f af46 	bmi.w	800ade6 <HAL_UART_IRQHandler+0xea>
 800af5a:	0756      	lsls	r6, r2, #29
 800af5c:	f57f af43 	bpl.w	800ade6 <HAL_UART_IRQHandler+0xea>
 800af60:	07ce      	lsls	r6, r1, #31
 800af62:	f57f af40 	bpl.w	800ade6 <HAL_UART_IRQHandler+0xea>
 800af66:	2604      	movs	r6, #4
 800af68:	621e      	str	r6, [r3, #32]
 800af6a:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
 800af6e:	f046 0602 	orr.w	r6, r6, #2
 800af72:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
 800af76:	e736      	b.n	800ade6 <HAL_UART_IRQHandler+0xea>
 800af78:	6f62      	ldr	r2, [r4, #116]	@ 0x74
 800af7a:	2a00      	cmp	r2, #0
 800af7c:	f43f af5b 	beq.w	800ae36 <HAL_UART_IRQHandler+0x13a>
 800af80:	4620      	mov	r0, r4
 800af82:	4790      	blx	r2
 800af84:	6823      	ldr	r3, [r4, #0]
 800af86:	e756      	b.n	800ae36 <HAL_UART_IRQHandler+0x13a>
 800af88:	07d6      	lsls	r6, r2, #31
 800af8a:	f57f af1c 	bpl.w	800adc6 <HAL_UART_IRQHandler+0xca>
 800af8e:	05ee      	lsls	r6, r5, #23
 800af90:	f57f af19 	bpl.w	800adc6 <HAL_UART_IRQHandler+0xca>
 800af94:	e70f      	b.n	800adb6 <HAL_UART_IRQHandler+0xba>
 800af96:	4620      	mov	r0, r4
 800af98:	f7ff fe3a 	bl	800ac10 <HAL_UART_ErrorCallback>
 800af9c:	bd70      	pop	{r4, r5, r6, pc}
 800af9e:	4620      	mov	r0, r4
 800afa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800afa4:	f000 bc20 	b.w	800b7e8 <HAL_UARTEx_TxFifoEmptyCallback>
 800afa8:	e853 2f00 	ldrex	r2, [r3]
 800afac:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800afb0:	e843 2100 	strex	r1, r2, [r3]
 800afb4:	2900      	cmp	r1, #0
 800afb6:	d1f7      	bne.n	800afa8 <HAL_UART_IRQHandler+0x2ac>
 800afb8:	f103 0208 	add.w	r2, r3, #8
 800afbc:	e852 2f00 	ldrex	r2, [r2]
 800afc0:	f022 0201 	bic.w	r2, r2, #1
 800afc4:	f103 0508 	add.w	r5, r3, #8
 800afc8:	e845 2100 	strex	r1, r2, [r5]
 800afcc:	2900      	cmp	r1, #0
 800afce:	d1f3      	bne.n	800afb8 <HAL_UART_IRQHandler+0x2bc>
 800afd0:	f103 0208 	add.w	r2, r3, #8
 800afd4:	e852 2f00 	ldrex	r2, [r2]
 800afd8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800afdc:	f103 0508 	add.w	r5, r3, #8
 800afe0:	e845 2100 	strex	r1, r2, [r5]
 800afe4:	2900      	cmp	r1, #0
 800afe6:	d1f3      	bne.n	800afd0 <HAL_UART_IRQHandler+0x2d4>
 800afe8:	2220      	movs	r2, #32
 800afea:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800afee:	66e1      	str	r1, [r4, #108]	@ 0x6c
 800aff0:	e853 2f00 	ldrex	r2, [r3]
 800aff4:	f022 0210 	bic.w	r2, r2, #16
 800aff8:	e843 2100 	strex	r1, r2, [r3]
 800affc:	2900      	cmp	r1, #0
 800affe:	d1f7      	bne.n	800aff0 <HAL_UART_IRQHandler+0x2f4>
 800b000:	f7fa fffa 	bl	8005ff8 <HAL_DMA_Abort>
 800b004:	f8b4 205c 	ldrh.w	r2, [r4, #92]	@ 0x5c
 800b008:	e77a      	b.n	800af00 <HAL_UART_IRQHandler+0x204>
 800b00a:	4620      	mov	r0, r4
 800b00c:	f7ff fe00 	bl	800ac10 <HAL_UART_ErrorCallback>
 800b010:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
 800b014:	bd70      	pop	{r4, r5, r6, pc}
 800b016:	f8b4 005e 	ldrh.w	r0, [r4, #94]	@ 0x5e
 800b01a:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
 800b01e:	b289      	uxth	r1, r1
 800b020:	b280      	uxth	r0, r0
 800b022:	2900      	cmp	r1, #0
 800b024:	f43f aea2 	beq.w	800ad6c <HAL_UART_IRQHandler+0x70>
 800b028:	1a12      	subs	r2, r2, r0
 800b02a:	b291      	uxth	r1, r2
 800b02c:	2900      	cmp	r1, #0
 800b02e:	f43f ae9d 	beq.w	800ad6c <HAL_UART_IRQHandler+0x70>
 800b032:	e853 2f00 	ldrex	r2, [r3]
 800b036:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b03a:	e843 2000 	strex	r0, r2, [r3]
 800b03e:	2800      	cmp	r0, #0
 800b040:	d1f7      	bne.n	800b032 <HAL_UART_IRQHandler+0x336>
 800b042:	4d11      	ldr	r5, [pc, #68]	@ (800b088 <HAL_UART_IRQHandler+0x38c>)
 800b044:	f103 0208 	add.w	r2, r3, #8
 800b048:	e852 2f00 	ldrex	r2, [r2]
 800b04c:	402a      	ands	r2, r5
 800b04e:	f103 0608 	add.w	r6, r3, #8
 800b052:	e846 2000 	strex	r0, r2, [r6]
 800b056:	2800      	cmp	r0, #0
 800b058:	d1f4      	bne.n	800b044 <HAL_UART_IRQHandler+0x348>
 800b05a:	2220      	movs	r2, #32
 800b05c:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b060:	6760      	str	r0, [r4, #116]	@ 0x74
 800b062:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800b064:	e853 2f00 	ldrex	r2, [r3]
 800b068:	f022 0210 	bic.w	r2, r2, #16
 800b06c:	e843 2000 	strex	r0, r2, [r3]
 800b070:	2800      	cmp	r0, #0
 800b072:	d1f7      	bne.n	800b064 <HAL_UART_IRQHandler+0x368>
 800b074:	2302      	movs	r3, #2
 800b076:	6723      	str	r3, [r4, #112]	@ 0x70
 800b078:	4620      	mov	r0, r4
 800b07a:	f7ff fe3d 	bl	800acf8 <HAL_UARTEx_RxEventCallback>
 800b07e:	bd70      	pop	{r4, r5, r6, pc}
 800b080:	10000001 	.word	0x10000001
 800b084:	04000120 	.word	0x04000120
 800b088:	effffffe 	.word	0xeffffffe
 800b08c:	0800ace9 	.word	0x0800ace9
 800b090:	4291      	cmp	r1, r2
 800b092:	f47f ae6b 	bne.w	800ad6c <HAL_UART_IRQHandler+0x70>
 800b096:	682b      	ldr	r3, [r5, #0]
 800b098:	069d      	lsls	r5, r3, #26
 800b09a:	d4eb      	bmi.n	800b074 <HAL_UART_IRQHandler+0x378>
 800b09c:	bd70      	pop	{r4, r5, r6, pc}
 800b09e:	bf00      	nop

0800b0a0 <UART_DMARxHalfCplt>:
 800b0a0:	b508      	push	{r3, lr}
 800b0a2:	4603      	mov	r3, r0
 800b0a4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b0a6:	2201      	movs	r2, #1
 800b0a8:	6702      	str	r2, [r0, #112]	@ 0x70
 800b0aa:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b0ac:	2a01      	cmp	r2, #1
 800b0ae:	d112      	bne.n	800b0d6 <UART_DMARxHalfCplt+0x36>
 800b0b0:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800b0b4:	681b      	ldr	r3, [r3, #0]
 800b0b6:	084a      	lsrs	r2, r1, #1
 800b0b8:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800b0bc:	685b      	ldr	r3, [r3, #4]
 800b0be:	b29b      	uxth	r3, r3
 800b0c0:	4299      	cmp	r1, r3
 800b0c2:	bf28      	it	cs
 800b0c4:	f8a0 305e 	strhcs.w	r3, [r0, #94]	@ 0x5e
 800b0c8:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
 800b0cc:	1ac9      	subs	r1, r1, r3
 800b0ce:	b289      	uxth	r1, r1
 800b0d0:	f7ff fe12 	bl	800acf8 <HAL_UARTEx_RxEventCallback>
 800b0d4:	bd08      	pop	{r3, pc}
 800b0d6:	f7ff fd99 	bl	800ac0c <HAL_UART_RxHalfCpltCallback>
 800b0da:	bd08      	pop	{r3, pc}

0800b0dc <UART_DMAReceiveCplt>:
 800b0dc:	b510      	push	{r4, lr}
 800b0de:	6804      	ldr	r4, [r0, #0]
 800b0e0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b0e2:	6822      	ldr	r2, [r4, #0]
 800b0e4:	f012 0220 	ands.w	r2, r2, #32
 800b0e8:	d128      	bne.n	800b13c <UART_DMAReceiveCplt+0x60>
 800b0ea:	6803      	ldr	r3, [r0, #0]
 800b0ec:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
 800b0f0:	e853 2f00 	ldrex	r2, [r3]
 800b0f4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b0f8:	e843 2100 	strex	r1, r2, [r3]
 800b0fc:	2900      	cmp	r1, #0
 800b0fe:	d1f7      	bne.n	800b0f0 <UART_DMAReceiveCplt+0x14>
 800b100:	f103 0208 	add.w	r2, r3, #8
 800b104:	e852 2f00 	ldrex	r2, [r2]
 800b108:	f022 0201 	bic.w	r2, r2, #1
 800b10c:	f103 0c08 	add.w	ip, r3, #8
 800b110:	e84c 2100 	strex	r1, r2, [ip]
 800b114:	2900      	cmp	r1, #0
 800b116:	d1f3      	bne.n	800b100 <UART_DMAReceiveCplt+0x24>
 800b118:	f103 0208 	add.w	r2, r3, #8
 800b11c:	e852 2f00 	ldrex	r2, [r2]
 800b120:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b124:	f103 0c08 	add.w	ip, r3, #8
 800b128:	e84c 2100 	strex	r1, r2, [ip]
 800b12c:	2900      	cmp	r1, #0
 800b12e:	d1f3      	bne.n	800b118 <UART_DMAReceiveCplt+0x3c>
 800b130:	2220      	movs	r2, #32
 800b132:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800b136:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b138:	2a01      	cmp	r2, #1
 800b13a:	d015      	beq.n	800b168 <UART_DMAReceiveCplt+0x8c>
 800b13c:	2300      	movs	r3, #0
 800b13e:	6703      	str	r3, [r0, #112]	@ 0x70
 800b140:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
 800b142:	2a01      	cmp	r2, #1
 800b144:	d121      	bne.n	800b18a <UART_DMAReceiveCplt+0xae>
 800b146:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
 800b14a:	6863      	ldr	r3, [r4, #4]
 800b14c:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800b150:	b29b      	uxth	r3, r3
 800b152:	4299      	cmp	r1, r3
 800b154:	bf88      	it	hi
 800b156:	f8a0 305e 	strhhi.w	r3, [r0, #94]	@ 0x5e
 800b15a:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
 800b15e:	1ac9      	subs	r1, r1, r3
 800b160:	b289      	uxth	r1, r1
 800b162:	f7ff fdc9 	bl	800acf8 <HAL_UARTEx_RxEventCallback>
 800b166:	bd10      	pop	{r4, pc}
 800b168:	e853 2f00 	ldrex	r2, [r3]
 800b16c:	f022 0210 	bic.w	r2, r2, #16
 800b170:	e843 2100 	strex	r1, r2, [r3]
 800b174:	2900      	cmp	r1, #0
 800b176:	d0e1      	beq.n	800b13c <UART_DMAReceiveCplt+0x60>
 800b178:	e853 2f00 	ldrex	r2, [r3]
 800b17c:	f022 0210 	bic.w	r2, r2, #16
 800b180:	e843 2100 	strex	r1, r2, [r3]
 800b184:	2900      	cmp	r1, #0
 800b186:	d1ef      	bne.n	800b168 <UART_DMAReceiveCplt+0x8c>
 800b188:	e7d8      	b.n	800b13c <UART_DMAReceiveCplt+0x60>
 800b18a:	f7f9 ff17 	bl	8004fbc <HAL_UART_RxCpltCallback>
 800b18e:	bd10      	pop	{r4, pc}

0800b190 <UART_AdvFeatureConfig>:
 800b190:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b192:	071a      	lsls	r2, r3, #28
 800b194:	b410      	push	{r4}
 800b196:	d506      	bpl.n	800b1a6 <UART_AdvFeatureConfig+0x16>
 800b198:	6801      	ldr	r1, [r0, #0]
 800b19a:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 800b19c:	684a      	ldr	r2, [r1, #4]
 800b19e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800b1a2:	4322      	orrs	r2, r4
 800b1a4:	604a      	str	r2, [r1, #4]
 800b1a6:	07dc      	lsls	r4, r3, #31
 800b1a8:	d506      	bpl.n	800b1b8 <UART_AdvFeatureConfig+0x28>
 800b1aa:	6801      	ldr	r1, [r0, #0]
 800b1ac:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800b1ae:	684a      	ldr	r2, [r1, #4]
 800b1b0:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 800b1b4:	4322      	orrs	r2, r4
 800b1b6:	604a      	str	r2, [r1, #4]
 800b1b8:	0799      	lsls	r1, r3, #30
 800b1ba:	d506      	bpl.n	800b1ca <UART_AdvFeatureConfig+0x3a>
 800b1bc:	6801      	ldr	r1, [r0, #0]
 800b1be:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 800b1c0:	684a      	ldr	r2, [r1, #4]
 800b1c2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800b1c6:	4322      	orrs	r2, r4
 800b1c8:	604a      	str	r2, [r1, #4]
 800b1ca:	075a      	lsls	r2, r3, #29
 800b1cc:	d506      	bpl.n	800b1dc <UART_AdvFeatureConfig+0x4c>
 800b1ce:	6801      	ldr	r1, [r0, #0]
 800b1d0:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 800b1d2:	684a      	ldr	r2, [r1, #4]
 800b1d4:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800b1d8:	4322      	orrs	r2, r4
 800b1da:	604a      	str	r2, [r1, #4]
 800b1dc:	06dc      	lsls	r4, r3, #27
 800b1de:	d506      	bpl.n	800b1ee <UART_AdvFeatureConfig+0x5e>
 800b1e0:	6801      	ldr	r1, [r0, #0]
 800b1e2:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800b1e4:	688a      	ldr	r2, [r1, #8]
 800b1e6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800b1ea:	4322      	orrs	r2, r4
 800b1ec:	608a      	str	r2, [r1, #8]
 800b1ee:	0699      	lsls	r1, r3, #26
 800b1f0:	d506      	bpl.n	800b200 <UART_AdvFeatureConfig+0x70>
 800b1f2:	6801      	ldr	r1, [r0, #0]
 800b1f4:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 800b1f6:	688a      	ldr	r2, [r1, #8]
 800b1f8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800b1fc:	4322      	orrs	r2, r4
 800b1fe:	608a      	str	r2, [r1, #8]
 800b200:	065a      	lsls	r2, r3, #25
 800b202:	d509      	bpl.n	800b218 <UART_AdvFeatureConfig+0x88>
 800b204:	6801      	ldr	r1, [r0, #0]
 800b206:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 800b208:	684a      	ldr	r2, [r1, #4]
 800b20a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 800b20e:	4322      	orrs	r2, r4
 800b210:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
 800b214:	604a      	str	r2, [r1, #4]
 800b216:	d00b      	beq.n	800b230 <UART_AdvFeatureConfig+0xa0>
 800b218:	061b      	lsls	r3, r3, #24
 800b21a:	d506      	bpl.n	800b22a <UART_AdvFeatureConfig+0x9a>
 800b21c:	6802      	ldr	r2, [r0, #0]
 800b21e:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 800b220:	6853      	ldr	r3, [r2, #4]
 800b222:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 800b226:	430b      	orrs	r3, r1
 800b228:	6053      	str	r3, [r2, #4]
 800b22a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b22e:	4770      	bx	lr
 800b230:	684a      	ldr	r2, [r1, #4]
 800b232:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 800b234:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 800b238:	4322      	orrs	r2, r4
 800b23a:	604a      	str	r2, [r1, #4]
 800b23c:	e7ec      	b.n	800b218 <UART_AdvFeatureConfig+0x88>
 800b23e:	bf00      	nop

0800b240 <UART_CheckIdleState>:
 800b240:	b538      	push	{r3, r4, r5, lr}
 800b242:	2300      	movs	r3, #0
 800b244:	4604      	mov	r4, r0
 800b246:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 800b24a:	f7fa f95f 	bl	800550c <HAL_GetTick>
 800b24e:	6822      	ldr	r2, [r4, #0]
 800b250:	6813      	ldr	r3, [r2, #0]
 800b252:	071b      	lsls	r3, r3, #28
 800b254:	4605      	mov	r5, r0
 800b256:	d40f      	bmi.n	800b278 <UART_CheckIdleState+0x38>
 800b258:	6813      	ldr	r3, [r2, #0]
 800b25a:	0759      	lsls	r1, r3, #29
 800b25c:	d431      	bmi.n	800b2c2 <UART_CheckIdleState+0x82>
 800b25e:	2300      	movs	r3, #0
 800b260:	2220      	movs	r2, #32
 800b262:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
 800b266:	4618      	mov	r0, r3
 800b268:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
 800b26c:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800b26e:	6723      	str	r3, [r4, #112]	@ 0x70
 800b270:	2300      	movs	r3, #0
 800b272:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800b276:	bd38      	pop	{r3, r4, r5, pc}
 800b278:	69d3      	ldr	r3, [r2, #28]
 800b27a:	0298      	lsls	r0, r3, #10
 800b27c:	d4ec      	bmi.n	800b258 <UART_CheckIdleState+0x18>
 800b27e:	e00c      	b.n	800b29a <UART_CheckIdleState+0x5a>
 800b280:	6819      	ldr	r1, [r3, #0]
 800b282:	0749      	lsls	r1, r1, #29
 800b284:	461a      	mov	r2, r3
 800b286:	d505      	bpl.n	800b294 <UART_CheckIdleState+0x54>
 800b288:	69d9      	ldr	r1, [r3, #28]
 800b28a:	0708      	lsls	r0, r1, #28
 800b28c:	d44a      	bmi.n	800b324 <UART_CheckIdleState+0xe4>
 800b28e:	69d9      	ldr	r1, [r3, #28]
 800b290:	0509      	lsls	r1, r1, #20
 800b292:	d475      	bmi.n	800b380 <UART_CheckIdleState+0x140>
 800b294:	69db      	ldr	r3, [r3, #28]
 800b296:	0298      	lsls	r0, r3, #10
 800b298:	d4de      	bmi.n	800b258 <UART_CheckIdleState+0x18>
 800b29a:	f7fa f937 	bl	800550c <HAL_GetTick>
 800b29e:	1b43      	subs	r3, r0, r5
 800b2a0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800b2a4:	6823      	ldr	r3, [r4, #0]
 800b2a6:	d3eb      	bcc.n	800b280 <UART_CheckIdleState+0x40>
 800b2a8:	e853 2f00 	ldrex	r2, [r3]
 800b2ac:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800b2b0:	e843 2100 	strex	r1, r2, [r3]
 800b2b4:	2900      	cmp	r1, #0
 800b2b6:	d1f7      	bne.n	800b2a8 <UART_CheckIdleState+0x68>
 800b2b8:	2320      	movs	r3, #32
 800b2ba:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800b2be:	2003      	movs	r0, #3
 800b2c0:	e7d6      	b.n	800b270 <UART_CheckIdleState+0x30>
 800b2c2:	69d3      	ldr	r3, [r2, #28]
 800b2c4:	025b      	lsls	r3, r3, #9
 800b2c6:	d4ca      	bmi.n	800b25e <UART_CheckIdleState+0x1e>
 800b2c8:	e00d      	b.n	800b2e6 <UART_CheckIdleState+0xa6>
 800b2ca:	681a      	ldr	r2, [r3, #0]
 800b2cc:	0750      	lsls	r0, r2, #29
 800b2ce:	d507      	bpl.n	800b2e0 <UART_CheckIdleState+0xa0>
 800b2d0:	69da      	ldr	r2, [r3, #28]
 800b2d2:	0711      	lsls	r1, r2, #28
 800b2d4:	f100 8082 	bmi.w	800b3dc <UART_CheckIdleState+0x19c>
 800b2d8:	69da      	ldr	r2, [r3, #28]
 800b2da:	0512      	lsls	r2, r2, #20
 800b2dc:	f100 80ac 	bmi.w	800b438 <UART_CheckIdleState+0x1f8>
 800b2e0:	69db      	ldr	r3, [r3, #28]
 800b2e2:	025b      	lsls	r3, r3, #9
 800b2e4:	d4bb      	bmi.n	800b25e <UART_CheckIdleState+0x1e>
 800b2e6:	f7fa f911 	bl	800550c <HAL_GetTick>
 800b2ea:	1b43      	subs	r3, r0, r5
 800b2ec:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800b2f0:	6823      	ldr	r3, [r4, #0]
 800b2f2:	d3ea      	bcc.n	800b2ca <UART_CheckIdleState+0x8a>
 800b2f4:	e853 2f00 	ldrex	r2, [r3]
 800b2f8:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b2fc:	e843 2100 	strex	r1, r2, [r3]
 800b300:	2900      	cmp	r1, #0
 800b302:	d1f7      	bne.n	800b2f4 <UART_CheckIdleState+0xb4>
 800b304:	f103 0208 	add.w	r2, r3, #8
 800b308:	e852 2f00 	ldrex	r2, [r2]
 800b30c:	f022 0201 	bic.w	r2, r2, #1
 800b310:	f103 0008 	add.w	r0, r3, #8
 800b314:	e840 2100 	strex	r1, r2, [r0]
 800b318:	2900      	cmp	r1, #0
 800b31a:	d1f3      	bne.n	800b304 <UART_CheckIdleState+0xc4>
 800b31c:	2320      	movs	r3, #32
 800b31e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800b322:	e7cc      	b.n	800b2be <UART_CheckIdleState+0x7e>
 800b324:	2208      	movs	r2, #8
 800b326:	621a      	str	r2, [r3, #32]
 800b328:	e853 2f00 	ldrex	r2, [r3]
 800b32c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b330:	e843 2100 	strex	r1, r2, [r3]
 800b334:	2900      	cmp	r1, #0
 800b336:	d1f7      	bne.n	800b328 <UART_CheckIdleState+0xe8>
 800b338:	4856      	ldr	r0, [pc, #344]	@ (800b494 <UART_CheckIdleState+0x254>)
 800b33a:	f103 0208 	add.w	r2, r3, #8
 800b33e:	e852 2f00 	ldrex	r2, [r2]
 800b342:	4002      	ands	r2, r0
 800b344:	f103 0508 	add.w	r5, r3, #8
 800b348:	e845 2100 	strex	r1, r2, [r5]
 800b34c:	2900      	cmp	r1, #0
 800b34e:	d1f4      	bne.n	800b33a <UART_CheckIdleState+0xfa>
 800b350:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b352:	2a01      	cmp	r2, #1
 800b354:	d00b      	beq.n	800b36e <UART_CheckIdleState+0x12e>
 800b356:	2200      	movs	r2, #0
 800b358:	2020      	movs	r0, #32
 800b35a:	2108      	movs	r1, #8
 800b35c:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800b360:	6762      	str	r2, [r4, #116]	@ 0x74
 800b362:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b364:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b368:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b36c:	e79c      	b.n	800b2a8 <UART_CheckIdleState+0x68>
 800b36e:	e853 2f00 	ldrex	r2, [r3]
 800b372:	f022 0210 	bic.w	r2, r2, #16
 800b376:	e843 2100 	strex	r1, r2, [r3]
 800b37a:	2900      	cmp	r1, #0
 800b37c:	d1f7      	bne.n	800b36e <UART_CheckIdleState+0x12e>
 800b37e:	e7ea      	b.n	800b356 <UART_CheckIdleState+0x116>
 800b380:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800b384:	621a      	str	r2, [r3, #32]
 800b386:	e853 2f00 	ldrex	r2, [r3]
 800b38a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b38e:	e843 2100 	strex	r1, r2, [r3]
 800b392:	2900      	cmp	r1, #0
 800b394:	d1f7      	bne.n	800b386 <UART_CheckIdleState+0x146>
 800b396:	483f      	ldr	r0, [pc, #252]	@ (800b494 <UART_CheckIdleState+0x254>)
 800b398:	f103 0208 	add.w	r2, r3, #8
 800b39c:	e852 2f00 	ldrex	r2, [r2]
 800b3a0:	4002      	ands	r2, r0
 800b3a2:	f103 0508 	add.w	r5, r3, #8
 800b3a6:	e845 2100 	strex	r1, r2, [r5]
 800b3aa:	2900      	cmp	r1, #0
 800b3ac:	d1f4      	bne.n	800b398 <UART_CheckIdleState+0x158>
 800b3ae:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b3b0:	2a01      	cmp	r2, #1
 800b3b2:	d00a      	beq.n	800b3ca <UART_CheckIdleState+0x18a>
 800b3b4:	2200      	movs	r2, #0
 800b3b6:	2120      	movs	r1, #32
 800b3b8:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b3bc:	6762      	str	r2, [r4, #116]	@ 0x74
 800b3be:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b3c0:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b3c4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b3c8:	e76e      	b.n	800b2a8 <UART_CheckIdleState+0x68>
 800b3ca:	e853 2f00 	ldrex	r2, [r3]
 800b3ce:	f022 0210 	bic.w	r2, r2, #16
 800b3d2:	e843 2100 	strex	r1, r2, [r3]
 800b3d6:	2900      	cmp	r1, #0
 800b3d8:	d1f7      	bne.n	800b3ca <UART_CheckIdleState+0x18a>
 800b3da:	e7eb      	b.n	800b3b4 <UART_CheckIdleState+0x174>
 800b3dc:	2208      	movs	r2, #8
 800b3de:	621a      	str	r2, [r3, #32]
 800b3e0:	e853 2f00 	ldrex	r2, [r3]
 800b3e4:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b3e8:	e843 2100 	strex	r1, r2, [r3]
 800b3ec:	2900      	cmp	r1, #0
 800b3ee:	d1f7      	bne.n	800b3e0 <UART_CheckIdleState+0x1a0>
 800b3f0:	4828      	ldr	r0, [pc, #160]	@ (800b494 <UART_CheckIdleState+0x254>)
 800b3f2:	f103 0208 	add.w	r2, r3, #8
 800b3f6:	e852 2f00 	ldrex	r2, [r2]
 800b3fa:	4002      	ands	r2, r0
 800b3fc:	f103 0508 	add.w	r5, r3, #8
 800b400:	e845 2100 	strex	r1, r2, [r5]
 800b404:	2900      	cmp	r1, #0
 800b406:	d1f4      	bne.n	800b3f2 <UART_CheckIdleState+0x1b2>
 800b408:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b40a:	2a01      	cmp	r2, #1
 800b40c:	d00b      	beq.n	800b426 <UART_CheckIdleState+0x1e6>
 800b40e:	2200      	movs	r2, #0
 800b410:	2020      	movs	r0, #32
 800b412:	2108      	movs	r1, #8
 800b414:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
 800b418:	6762      	str	r2, [r4, #116]	@ 0x74
 800b41a:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b41c:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b420:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b424:	e766      	b.n	800b2f4 <UART_CheckIdleState+0xb4>
 800b426:	e853 2f00 	ldrex	r2, [r3]
 800b42a:	f022 0210 	bic.w	r2, r2, #16
 800b42e:	e843 2100 	strex	r1, r2, [r3]
 800b432:	2900      	cmp	r1, #0
 800b434:	d1f7      	bne.n	800b426 <UART_CheckIdleState+0x1e6>
 800b436:	e7ea      	b.n	800b40e <UART_CheckIdleState+0x1ce>
 800b438:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800b43c:	621a      	str	r2, [r3, #32]
 800b43e:	e853 2f00 	ldrex	r2, [r3]
 800b442:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 800b446:	e843 2100 	strex	r1, r2, [r3]
 800b44a:	2900      	cmp	r1, #0
 800b44c:	d1f7      	bne.n	800b43e <UART_CheckIdleState+0x1fe>
 800b44e:	4811      	ldr	r0, [pc, #68]	@ (800b494 <UART_CheckIdleState+0x254>)
 800b450:	f103 0208 	add.w	r2, r3, #8
 800b454:	e852 2f00 	ldrex	r2, [r2]
 800b458:	4002      	ands	r2, r0
 800b45a:	f103 0508 	add.w	r5, r3, #8
 800b45e:	e845 2100 	strex	r1, r2, [r5]
 800b462:	2900      	cmp	r1, #0
 800b464:	d1f4      	bne.n	800b450 <UART_CheckIdleState+0x210>
 800b466:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
 800b468:	2a01      	cmp	r2, #1
 800b46a:	d00a      	beq.n	800b482 <UART_CheckIdleState+0x242>
 800b46c:	2200      	movs	r2, #0
 800b46e:	2120      	movs	r1, #32
 800b470:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 800b474:	6762      	str	r2, [r4, #116]	@ 0x74
 800b476:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800b478:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
 800b47c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 800b480:	e738      	b.n	800b2f4 <UART_CheckIdleState+0xb4>
 800b482:	e853 2f00 	ldrex	r2, [r3]
 800b486:	f022 0210 	bic.w	r2, r2, #16
 800b48a:	e843 2100 	strex	r1, r2, [r3]
 800b48e:	2900      	cmp	r1, #0
 800b490:	d1f7      	bne.n	800b482 <UART_CheckIdleState+0x242>
 800b492:	e7eb      	b.n	800b46c <UART_CheckIdleState+0x22c>
 800b494:	effffffe 	.word	0xeffffffe

0800b498 <HAL_UART_Init>:
 800b498:	2800      	cmp	r0, #0
 800b49a:	f000 80fd 	beq.w	800b698 <HAL_UART_Init+0x200>
 800b49e:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 800b4a2:	b570      	push	{r4, r5, r6, lr}
 800b4a4:	4604      	mov	r4, r0
 800b4a6:	2b00      	cmp	r3, #0
 800b4a8:	f000 8081 	beq.w	800b5ae <HAL_UART_Init+0x116>
 800b4ac:	6825      	ldr	r5, [r4, #0]
 800b4ae:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800b4b0:	2324      	movs	r3, #36	@ 0x24
 800b4b2:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800b4b6:	682b      	ldr	r3, [r5, #0]
 800b4b8:	f023 0301 	bic.w	r3, r3, #1
 800b4bc:	602b      	str	r3, [r5, #0]
 800b4be:	2a00      	cmp	r2, #0
 800b4c0:	d171      	bne.n	800b5a6 <HAL_UART_Init+0x10e>
 800b4c2:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 800b4c6:	68a3      	ldr	r3, [r4, #8]
 800b4c8:	6829      	ldr	r1, [r5, #0]
 800b4ca:	4303      	orrs	r3, r0
 800b4cc:	4313      	orrs	r3, r2
 800b4ce:	69e0      	ldr	r0, [r4, #28]
 800b4d0:	4a84      	ldr	r2, [pc, #528]	@ (800b6e4 <HAL_UART_Init+0x24c>)
 800b4d2:	4303      	orrs	r3, r0
 800b4d4:	400a      	ands	r2, r1
 800b4d6:	4313      	orrs	r3, r2
 800b4d8:	602b      	str	r3, [r5, #0]
 800b4da:	686b      	ldr	r3, [r5, #4]
 800b4dc:	68e2      	ldr	r2, [r4, #12]
 800b4de:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b4e0:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800b4e4:	4313      	orrs	r3, r2
 800b4e6:	4a80      	ldr	r2, [pc, #512]	@ (800b6e8 <HAL_UART_Init+0x250>)
 800b4e8:	606b      	str	r3, [r5, #4]
 800b4ea:	4295      	cmp	r5, r2
 800b4ec:	68aa      	ldr	r2, [r5, #8]
 800b4ee:	69a3      	ldr	r3, [r4, #24]
 800b4f0:	f022 426e 	bic.w	r2, r2, #3992977408	@ 0xee000000
 800b4f4:	f422 6230 	bic.w	r2, r2, #2816	@ 0xb00
 800b4f8:	f000 8082 	beq.w	800b600 <HAL_UART_Init+0x168>
 800b4fc:	6a26      	ldr	r6, [r4, #32]
 800b4fe:	4333      	orrs	r3, r6
 800b500:	4313      	orrs	r3, r2
 800b502:	60ab      	str	r3, [r5, #8]
 800b504:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b506:	f023 030f 	bic.w	r3, r3, #15
 800b50a:	430b      	orrs	r3, r1
 800b50c:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800b50e:	4b77      	ldr	r3, [pc, #476]	@ (800b6ec <HAL_UART_Init+0x254>)
 800b510:	429d      	cmp	r5, r3
 800b512:	d007      	beq.n	800b524 <HAL_UART_Init+0x8c>
 800b514:	2300      	movs	r3, #0
 800b516:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
 800b51a:	e9c4 331d 	strd	r3, r3, [r4, #116]	@ 0x74
 800b51e:	66a2      	str	r2, [r4, #104]	@ 0x68
 800b520:	2001      	movs	r0, #1
 800b522:	bd70      	pop	{r4, r5, r6, pc}
 800b524:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800b528:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b52c:	f003 0303 	and.w	r3, r3, #3
 800b530:	2b02      	cmp	r3, #2
 800b532:	d041      	beq.n	800b5b8 <HAL_UART_Init+0x120>
 800b534:	2b03      	cmp	r3, #3
 800b536:	f000 80b7 	beq.w	800b6a8 <HAL_UART_Init+0x210>
 800b53a:	2b01      	cmp	r3, #1
 800b53c:	f000 80ae 	beq.w	800b69c <HAL_UART_Init+0x204>
 800b540:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b544:	f000 80c3 	beq.w	800b6ce <HAL_UART_Init+0x236>
 800b548:	f7fd fbcc 	bl	8008ce4 <HAL_RCC_GetPCLK2Freq>
 800b54c:	2800      	cmp	r0, #0
 800b54e:	f000 809c 	beq.w	800b68a <HAL_UART_Init+0x1f2>
 800b552:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b554:	6863      	ldr	r3, [r4, #4]
 800b556:	4a66      	ldr	r2, [pc, #408]	@ (800b6f0 <HAL_UART_Init+0x258>)
 800b558:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 800b55c:	fbb0 f0f1 	udiv	r0, r0, r1
 800b560:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 800b564:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 800b568:	fbb0 f0f3 	udiv	r0, r0, r3
 800b56c:	f1a0 0310 	sub.w	r3, r0, #16
 800b570:	4293      	cmp	r3, r2
 800b572:	d8cf      	bhi.n	800b514 <HAL_UART_Init+0x7c>
 800b574:	6822      	ldr	r2, [r4, #0]
 800b576:	2300      	movs	r3, #0
 800b578:	60d0      	str	r0, [r2, #12]
 800b57a:	e9c4 331d 	strd	r3, r3, [r4, #116]	@ 0x74
 800b57e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800b582:	66a1      	str	r1, [r4, #104]	@ 0x68
 800b584:	6853      	ldr	r3, [r2, #4]
 800b586:	f423 4390 	bic.w	r3, r3, #18432	@ 0x4800
 800b58a:	6053      	str	r3, [r2, #4]
 800b58c:	6893      	ldr	r3, [r2, #8]
 800b58e:	f023 032a 	bic.w	r3, r3, #42	@ 0x2a
 800b592:	6093      	str	r3, [r2, #8]
 800b594:	6813      	ldr	r3, [r2, #0]
 800b596:	f043 0301 	orr.w	r3, r3, #1
 800b59a:	4620      	mov	r0, r4
 800b59c:	6013      	str	r3, [r2, #0]
 800b59e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b5a2:	f7ff be4d 	b.w	800b240 <UART_CheckIdleState>
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	f7ff fdf2 	bl	800b190 <UART_AdvFeatureConfig>
 800b5ac:	e789      	b.n	800b4c2 <HAL_UART_Init+0x2a>
 800b5ae:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
 800b5b2:	f7f9 fc71 	bl	8004e98 <HAL_UART_MspInit>
 800b5b6:	e779      	b.n	800b4ac <HAL_UART_Init+0x14>
 800b5b8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b5bc:	484d      	ldr	r0, [pc, #308]	@ (800b6f4 <HAL_UART_Init+0x25c>)
 800b5be:	d1c9      	bne.n	800b554 <HAL_UART_Init+0xbc>
 800b5c0:	6865      	ldr	r5, [r4, #4]
 800b5c2:	4b4b      	ldr	r3, [pc, #300]	@ (800b6f0 <HAL_UART_Init+0x258>)
 800b5c4:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
 800b5c8:	fbb0 f2f2 	udiv	r2, r0, r2
 800b5cc:	086b      	lsrs	r3, r5, #1
 800b5ce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b5d2:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 800b5d6:	fbb3 f3f5 	udiv	r3, r3, r5
 800b5da:	f1a3 0110 	sub.w	r1, r3, #16
 800b5de:	4291      	cmp	r1, r2
 800b5e0:	d898      	bhi.n	800b514 <HAL_UART_Init+0x7c>
 800b5e2:	f023 010f 	bic.w	r1, r3, #15
 800b5e6:	b289      	uxth	r1, r1
 800b5e8:	6822      	ldr	r2, [r4, #0]
 800b5ea:	f3c3 0342 	ubfx	r3, r3, #1, #3
 800b5ee:	430b      	orrs	r3, r1
 800b5f0:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 800b5f4:	2100      	movs	r1, #0
 800b5f6:	60d3      	str	r3, [r2, #12]
 800b5f8:	e9c4 111d 	strd	r1, r1, [r4, #116]	@ 0x74
 800b5fc:	66a0      	str	r0, [r4, #104]	@ 0x68
 800b5fe:	e7c1      	b.n	800b584 <HAL_UART_Init+0xec>
 800b600:	431a      	orrs	r2, r3
 800b602:	60aa      	str	r2, [r5, #8]
 800b604:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 800b606:	f023 030f 	bic.w	r3, r3, #15
 800b60a:	430b      	orrs	r3, r1
 800b60c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800b610:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800b612:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 800b616:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800b61a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b61e:	d05e      	beq.n	800b6de <HAL_UART_Init+0x246>
 800b620:	d848      	bhi.n	800b6b4 <HAL_UART_Init+0x21c>
 800b622:	2b00      	cmp	r3, #0
 800b624:	d056      	beq.n	800b6d4 <HAL_UART_Init+0x23c>
 800b626:	f7fd faf3 	bl	8008c10 <HAL_RCC_GetSysClockFreq>
 800b62a:	b370      	cbz	r0, 800b68a <HAL_UART_Init+0x1f2>
 800b62c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b62e:	4b30      	ldr	r3, [pc, #192]	@ (800b6f0 <HAL_UART_Init+0x258>)
 800b630:	6865      	ldr	r5, [r4, #4]
 800b632:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
 800b636:	fbb0 f3f2 	udiv	r3, r0, r2
 800b63a:	eb05 0145 	add.w	r1, r5, r5, lsl #1
 800b63e:	428b      	cmp	r3, r1
 800b640:	f4ff af68 	bcc.w	800b514 <HAL_UART_Init+0x7c>
 800b644:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
 800b648:	f63f af64 	bhi.w	800b514 <HAL_UART_Init+0x7c>
 800b64c:	2600      	movs	r6, #0
 800b64e:	4633      	mov	r3, r6
 800b650:	4631      	mov	r1, r6
 800b652:	f7f5 faf1 	bl	8000c38 <__aeabi_uldivmod>
 800b656:	0209      	lsls	r1, r1, #8
 800b658:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
 800b65c:	086b      	lsrs	r3, r5, #1
 800b65e:	0200      	lsls	r0, r0, #8
 800b660:	18c0      	adds	r0, r0, r3
 800b662:	462a      	mov	r2, r5
 800b664:	f141 0100 	adc.w	r1, r1, #0
 800b668:	4633      	mov	r3, r6
 800b66a:	f7f5 fae5 	bl	8000c38 <__aeabi_uldivmod>
 800b66e:	4b22      	ldr	r3, [pc, #136]	@ (800b6f8 <HAL_UART_Init+0x260>)
 800b670:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
 800b674:	429a      	cmp	r2, r3
 800b676:	f63f af4d 	bhi.w	800b514 <HAL_UART_Init+0x7c>
 800b67a:	6822      	ldr	r2, [r4, #0]
 800b67c:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
 800b680:	60d0      	str	r0, [r2, #12]
 800b682:	e9c4 661d 	strd	r6, r6, [r4, #116]	@ 0x74
 800b686:	66a3      	str	r3, [r4, #104]	@ 0x68
 800b688:	e77c      	b.n	800b584 <HAL_UART_Init+0xec>
 800b68a:	f04f 1301 	mov.w	r3, #65537	@ 0x10001
 800b68e:	e9c4 001d 	strd	r0, r0, [r4, #116]	@ 0x74
 800b692:	6822      	ldr	r2, [r4, #0]
 800b694:	66a3      	str	r3, [r4, #104]	@ 0x68
 800b696:	e775      	b.n	800b584 <HAL_UART_Init+0xec>
 800b698:	2001      	movs	r0, #1
 800b69a:	4770      	bx	lr
 800b69c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b6a0:	d00f      	beq.n	800b6c2 <HAL_UART_Init+0x22a>
 800b6a2:	f7fd fab5 	bl	8008c10 <HAL_RCC_GetSysClockFreq>
 800b6a6:	e751      	b.n	800b54c <HAL_UART_Init+0xb4>
 800b6a8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800b6ac:	d088      	beq.n	800b5c0 <HAL_UART_Init+0x128>
 800b6ae:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800b6b2:	e74f      	b.n	800b554 <HAL_UART_Init+0xbc>
 800b6b4:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800b6b8:	f47f af2c 	bne.w	800b514 <HAL_UART_Init+0x7c>
 800b6bc:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800b6c0:	e7b5      	b.n	800b62e <HAL_UART_Init+0x196>
 800b6c2:	f7fd faa5 	bl	8008c10 <HAL_RCC_GetSysClockFreq>
 800b6c6:	2800      	cmp	r0, #0
 800b6c8:	d0df      	beq.n	800b68a <HAL_UART_Init+0x1f2>
 800b6ca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b6cc:	e778      	b.n	800b5c0 <HAL_UART_Init+0x128>
 800b6ce:	f7fd fb09 	bl	8008ce4 <HAL_RCC_GetPCLK2Freq>
 800b6d2:	e7f8      	b.n	800b6c6 <HAL_UART_Init+0x22e>
 800b6d4:	f7fd fac4 	bl	8008c60 <HAL_RCC_GetPCLK1Freq>
 800b6d8:	2800      	cmp	r0, #0
 800b6da:	d0d6      	beq.n	800b68a <HAL_UART_Init+0x1f2>
 800b6dc:	e7a6      	b.n	800b62c <HAL_UART_Init+0x194>
 800b6de:	4805      	ldr	r0, [pc, #20]	@ (800b6f4 <HAL_UART_Init+0x25c>)
 800b6e0:	e7a5      	b.n	800b62e <HAL_UART_Init+0x196>
 800b6e2:	bf00      	nop
 800b6e4:	cfff69f3 	.word	0xcfff69f3
 800b6e8:	40008000 	.word	0x40008000
 800b6ec:	40013800 	.word	0x40013800
 800b6f0:	080194bc 	.word	0x080194bc
 800b6f4:	00f42400 	.word	0x00f42400
 800b6f8:	000ffcff 	.word	0x000ffcff

0800b6fc <UART_Start_Receive_DMA>:
 800b6fc:	b538      	push	{r3, r4, r5, lr}
 800b6fe:	4605      	mov	r5, r0
 800b700:	4613      	mov	r3, r2
 800b702:	2022      	movs	r0, #34	@ 0x22
 800b704:	2200      	movs	r2, #0
 800b706:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 800b70a:	f8c5 008c 	str.w	r0, [r5, #140]	@ 0x8c
 800b70e:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 800b712:	682c      	ldr	r4, [r5, #0]
 800b714:	65a9      	str	r1, [r5, #88]	@ 0x58
 800b716:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 800b71a:	b168      	cbz	r0, 800b738 <UART_Start_Receive_DMA+0x3c>
 800b71c:	6382      	str	r2, [r0, #56]	@ 0x38
 800b71e:	460a      	mov	r2, r1
 800b720:	f104 0124 	add.w	r1, r4, #36	@ 0x24
 800b724:	4c1a      	ldr	r4, [pc, #104]	@ (800b790 <UART_Start_Receive_DMA+0x94>)
 800b726:	62c4      	str	r4, [r0, #44]	@ 0x2c
 800b728:	4c1a      	ldr	r4, [pc, #104]	@ (800b794 <UART_Start_Receive_DMA+0x98>)
 800b72a:	6304      	str	r4, [r0, #48]	@ 0x30
 800b72c:	4c1a      	ldr	r4, [pc, #104]	@ (800b798 <UART_Start_Receive_DMA+0x9c>)
 800b72e:	6344      	str	r4, [r0, #52]	@ 0x34
 800b730:	f7fa fc0a 	bl	8005f48 <HAL_DMA_Start_IT>
 800b734:	bb18      	cbnz	r0, 800b77e <UART_Start_Receive_DMA+0x82>
 800b736:	682c      	ldr	r4, [r5, #0]
 800b738:	692b      	ldr	r3, [r5, #16]
 800b73a:	b13b      	cbz	r3, 800b74c <UART_Start_Receive_DMA+0x50>
 800b73c:	e854 3f00 	ldrex	r3, [r4]
 800b740:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b744:	e844 3200 	strex	r2, r3, [r4]
 800b748:	2a00      	cmp	r2, #0
 800b74a:	d1f7      	bne.n	800b73c <UART_Start_Receive_DMA+0x40>
 800b74c:	f104 0308 	add.w	r3, r4, #8
 800b750:	e853 3f00 	ldrex	r3, [r3]
 800b754:	f043 0301 	orr.w	r3, r3, #1
 800b758:	f104 0108 	add.w	r1, r4, #8
 800b75c:	e841 3200 	strex	r2, r3, [r1]
 800b760:	2a00      	cmp	r2, #0
 800b762:	d1f3      	bne.n	800b74c <UART_Start_Receive_DMA+0x50>
 800b764:	f104 0308 	add.w	r3, r4, #8
 800b768:	e853 3f00 	ldrex	r3, [r3]
 800b76c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b770:	f104 0208 	add.w	r2, r4, #8
 800b774:	e842 3000 	strex	r0, r3, [r2]
 800b778:	2800      	cmp	r0, #0
 800b77a:	d1f3      	bne.n	800b764 <UART_Start_Receive_DMA+0x68>
 800b77c:	bd38      	pop	{r3, r4, r5, pc}
 800b77e:	2210      	movs	r2, #16
 800b780:	2320      	movs	r3, #32
 800b782:	f8c5 2090 	str.w	r2, [r5, #144]	@ 0x90
 800b786:	2001      	movs	r0, #1
 800b788:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
 800b78c:	bd38      	pop	{r3, r4, r5, pc}
 800b78e:	bf00      	nop
 800b790:	0800b0dd 	.word	0x0800b0dd
 800b794:	0800b0a1 	.word	0x0800b0a1
 800b798:	0800ac15 	.word	0x0800ac15

0800b79c <HAL_UART_Receive_DMA>:
 800b79c:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 800b7a0:	2b20      	cmp	r3, #32
 800b7a2:	d118      	bne.n	800b7d6 <HAL_UART_Receive_DMA+0x3a>
 800b7a4:	b101      	cbz	r1, 800b7a8 <HAL_UART_Receive_DMA+0xc>
 800b7a6:	b90a      	cbnz	r2, 800b7ac <HAL_UART_Receive_DMA+0x10>
 800b7a8:	2001      	movs	r0, #1
 800b7aa:	4770      	bx	lr
 800b7ac:	b430      	push	{r4, r5}
 800b7ae:	4b0b      	ldr	r3, [pc, #44]	@ (800b7dc <HAL_UART_Receive_DMA+0x40>)
 800b7b0:	6804      	ldr	r4, [r0, #0]
 800b7b2:	2500      	movs	r5, #0
 800b7b4:	429c      	cmp	r4, r3
 800b7b6:	66c5      	str	r5, [r0, #108]	@ 0x6c
 800b7b8:	d00a      	beq.n	800b7d0 <HAL_UART_Receive_DMA+0x34>
 800b7ba:	6863      	ldr	r3, [r4, #4]
 800b7bc:	021b      	lsls	r3, r3, #8
 800b7be:	d507      	bpl.n	800b7d0 <HAL_UART_Receive_DMA+0x34>
 800b7c0:	e854 3f00 	ldrex	r3, [r4]
 800b7c4:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800b7c8:	e844 3500 	strex	r5, r3, [r4]
 800b7cc:	2d00      	cmp	r5, #0
 800b7ce:	d1f7      	bne.n	800b7c0 <HAL_UART_Receive_DMA+0x24>
 800b7d0:	bc30      	pop	{r4, r5}
 800b7d2:	f7ff bf93 	b.w	800b6fc <UART_Start_Receive_DMA>
 800b7d6:	2002      	movs	r0, #2
 800b7d8:	4770      	bx	lr
 800b7da:	bf00      	nop
 800b7dc:	40008000 	.word	0x40008000

0800b7e0 <HAL_UARTEx_WakeupCallback>:
 800b7e0:	4770      	bx	lr
 800b7e2:	bf00      	nop

0800b7e4 <HAL_UARTEx_RxFifoFullCallback>:
 800b7e4:	4770      	bx	lr
 800b7e6:	bf00      	nop

0800b7e8 <HAL_UARTEx_TxFifoEmptyCallback>:
 800b7e8:	4770      	bx	lr
 800b7ea:	bf00      	nop

0800b7ec <HAL_UARTEx_DisableFifoMode>:
 800b7ec:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800b7f0:	2b01      	cmp	r3, #1
 800b7f2:	d017      	beq.n	800b824 <HAL_UARTEx_DisableFifoMode+0x38>
 800b7f4:	6802      	ldr	r2, [r0, #0]
 800b7f6:	2324      	movs	r3, #36	@ 0x24
 800b7f8:	b410      	push	{r4}
 800b7fa:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
 800b7fe:	6811      	ldr	r1, [r2, #0]
 800b800:	6814      	ldr	r4, [r2, #0]
 800b802:	2300      	movs	r3, #0
 800b804:	f024 0401 	bic.w	r4, r4, #1
 800b808:	f021 5100 	bic.w	r1, r1, #536870912	@ 0x20000000
 800b80c:	6014      	str	r4, [r2, #0]
 800b80e:	6643      	str	r3, [r0, #100]	@ 0x64
 800b810:	6011      	str	r1, [r2, #0]
 800b812:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
 800b816:	2220      	movs	r2, #32
 800b818:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800b81c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b820:	4618      	mov	r0, r3
 800b822:	4770      	bx	lr
 800b824:	2002      	movs	r0, #2
 800b826:	4770      	bx	lr

0800b828 <HAL_UARTEx_SetTxFifoThreshold>:
 800b828:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
 800b82c:	2a01      	cmp	r2, #1
 800b82e:	d037      	beq.n	800b8a0 <HAL_UARTEx_SetTxFifoThreshold+0x78>
 800b830:	4603      	mov	r3, r0
 800b832:	6802      	ldr	r2, [r0, #0]
 800b834:	2024      	movs	r0, #36	@ 0x24
 800b836:	b530      	push	{r4, r5, lr}
 800b838:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
 800b83c:	6814      	ldr	r4, [r2, #0]
 800b83e:	6810      	ldr	r0, [r2, #0]
 800b840:	f020 0001 	bic.w	r0, r0, #1
 800b844:	6010      	str	r0, [r2, #0]
 800b846:	6890      	ldr	r0, [r2, #8]
 800b848:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
 800b84c:	4301      	orrs	r1, r0
 800b84e:	6e58      	ldr	r0, [r3, #100]	@ 0x64
 800b850:	6091      	str	r1, [r2, #8]
 800b852:	b310      	cbz	r0, 800b89a <HAL_UARTEx_SetTxFifoThreshold+0x72>
 800b854:	6891      	ldr	r1, [r2, #8]
 800b856:	6890      	ldr	r0, [r2, #8]
 800b858:	4d12      	ldr	r5, [pc, #72]	@ (800b8a4 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
 800b85a:	f3c1 6c42 	ubfx	ip, r1, #25, #3
 800b85e:	ea4f 7e50 	mov.w	lr, r0, lsr #29
 800b862:	4911      	ldr	r1, [pc, #68]	@ (800b8a8 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
 800b864:	f811 000e 	ldrb.w	r0, [r1, lr]
 800b868:	f811 100c 	ldrb.w	r1, [r1, ip]
 800b86c:	f815 e00e 	ldrb.w	lr, [r5, lr]
 800b870:	f815 500c 	ldrb.w	r5, [r5, ip]
 800b874:	00c0      	lsls	r0, r0, #3
 800b876:	00c9      	lsls	r1, r1, #3
 800b878:	fbb0 f0fe 	udiv	r0, r0, lr
 800b87c:	fbb1 f1f5 	udiv	r1, r1, r5
 800b880:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
 800b884:	2100      	movs	r1, #0
 800b886:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
 800b88a:	2520      	movs	r5, #32
 800b88c:	6014      	str	r4, [r2, #0]
 800b88e:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
 800b892:	4608      	mov	r0, r1
 800b894:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
 800b898:	bd30      	pop	{r4, r5, pc}
 800b89a:	2101      	movs	r1, #1
 800b89c:	4608      	mov	r0, r1
 800b89e:	e7ef      	b.n	800b880 <HAL_UARTEx_SetTxFifoThreshold+0x58>
 800b8a0:	2002      	movs	r0, #2
 800b8a2:	4770      	bx	lr
 800b8a4:	080194d4 	.word	0x080194d4
 800b8a8:	080194dc 	.word	0x080194dc

0800b8ac <HAL_UARTEx_SetRxFifoThreshold>:
 800b8ac:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
 800b8b0:	2a01      	cmp	r2, #1
 800b8b2:	d037      	beq.n	800b924 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 800b8b4:	4603      	mov	r3, r0
 800b8b6:	6802      	ldr	r2, [r0, #0]
 800b8b8:	2024      	movs	r0, #36	@ 0x24
 800b8ba:	b530      	push	{r4, r5, lr}
 800b8bc:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
 800b8c0:	6814      	ldr	r4, [r2, #0]
 800b8c2:	6810      	ldr	r0, [r2, #0]
 800b8c4:	f020 0001 	bic.w	r0, r0, #1
 800b8c8:	6010      	str	r0, [r2, #0]
 800b8ca:	6890      	ldr	r0, [r2, #8]
 800b8cc:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
 800b8d0:	4301      	orrs	r1, r0
 800b8d2:	6e58      	ldr	r0, [r3, #100]	@ 0x64
 800b8d4:	6091      	str	r1, [r2, #8]
 800b8d6:	b310      	cbz	r0, 800b91e <HAL_UARTEx_SetRxFifoThreshold+0x72>
 800b8d8:	6891      	ldr	r1, [r2, #8]
 800b8da:	6890      	ldr	r0, [r2, #8]
 800b8dc:	4d12      	ldr	r5, [pc, #72]	@ (800b928 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
 800b8de:	f3c1 6c42 	ubfx	ip, r1, #25, #3
 800b8e2:	ea4f 7e50 	mov.w	lr, r0, lsr #29
 800b8e6:	4911      	ldr	r1, [pc, #68]	@ (800b92c <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 800b8e8:	f811 000e 	ldrb.w	r0, [r1, lr]
 800b8ec:	f811 100c 	ldrb.w	r1, [r1, ip]
 800b8f0:	f815 e00e 	ldrb.w	lr, [r5, lr]
 800b8f4:	f815 500c 	ldrb.w	r5, [r5, ip]
 800b8f8:	00c0      	lsls	r0, r0, #3
 800b8fa:	00c9      	lsls	r1, r1, #3
 800b8fc:	fbb0 f0fe 	udiv	r0, r0, lr
 800b900:	fbb1 f1f5 	udiv	r1, r1, r5
 800b904:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
 800b908:	2100      	movs	r1, #0
 800b90a:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
 800b90e:	2520      	movs	r5, #32
 800b910:	6014      	str	r4, [r2, #0]
 800b912:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
 800b916:	4608      	mov	r0, r1
 800b918:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
 800b91c:	bd30      	pop	{r4, r5, pc}
 800b91e:	2101      	movs	r1, #1
 800b920:	4608      	mov	r0, r1
 800b922:	e7ef      	b.n	800b904 <HAL_UARTEx_SetRxFifoThreshold+0x58>
 800b924:	2002      	movs	r0, #2
 800b926:	4770      	bx	lr
 800b928:	080194d4 	.word	0x080194d4
 800b92c:	080194dc 	.word	0x080194dc

0800b930 <USB_EnableGlobalInt>:
 800b930:	4603      	mov	r3, r0
 800b932:	f64b 7280 	movw	r2, #49024	@ 0xbf80
 800b936:	2000      	movs	r0, #0
 800b938:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 800b93c:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800b940:	4770      	bx	lr
 800b942:	bf00      	nop

0800b944 <USB_DisableGlobalInt>:
 800b944:	f8b0 1040 	ldrh.w	r1, [r0, #64]	@ 0x40
 800b948:	4603      	mov	r3, r0
 800b94a:	f244 027f 	movw	r2, #16511	@ 0x407f
 800b94e:	400a      	ands	r2, r1
 800b950:	2000      	movs	r0, #0
 800b952:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800b956:	4770      	bx	lr

0800b958 <USB_DevInit>:
 800b958:	4603      	mov	r3, r0
 800b95a:	b082      	sub	sp, #8
 800b95c:	f04f 0c01 	mov.w	ip, #1
 800b960:	2000      	movs	r0, #0
 800b962:	f8a3 c040 	strh.w	ip, [r3, #64]	@ 0x40
 800b966:	f10d 0c08 	add.w	ip, sp, #8
 800b96a:	f8a3 0040 	strh.w	r0, [r3, #64]	@ 0x40
 800b96e:	e90c 0006 	stmdb	ip, {r1, r2}
 800b972:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 800b976:	f8a3 0050 	strh.w	r0, [r3, #80]	@ 0x50
 800b97a:	b002      	add	sp, #8
 800b97c:	4770      	bx	lr
 800b97e:	bf00      	nop

0800b980 <USB_ActivateEndpoint>:
 800b980:	b570      	push	{r4, r5, r6, lr}
 800b982:	780c      	ldrb	r4, [r1, #0]
 800b984:	f891 e003 	ldrb.w	lr, [r1, #3]
 800b988:	fa0f fc84 	sxth.w	ip, r4
 800b98c:	4603      	mov	r3, r0
 800b98e:	f830 202c 	ldrh.w	r2, [r0, ip, lsl #2]
 800b992:	f422 42ec 	bic.w	r2, r2, #30208	@ 0x7600
 800b996:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800b99a:	0412      	lsls	r2, r2, #16
 800b99c:	0c12      	lsrs	r2, r2, #16
 800b99e:	f1be 0f03 	cmp.w	lr, #3
 800b9a2:	f200 81f1 	bhi.w	800bd88 <USB_ActivateEndpoint+0x408>
 800b9a6:	e8df f01e 	tbh	[pc, lr, lsl #1]
 800b9aa:	00f2      	.short	0x00f2
 800b9ac:	00ab00f5 	.word	0x00ab00f5
 800b9b0:	0004      	.short	0x0004
 800b9b2:	f442 62c0 	orr.w	r2, r2, #1536	@ 0x600
 800b9b6:	f248 0080 	movw	r0, #32896	@ 0x8080
 800b9ba:	4302      	orrs	r2, r0
 800b9bc:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800b9c0:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800b9c4:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800b9c8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800b9cc:	0412      	lsls	r2, r2, #16
 800b9ce:	0c12      	lsrs	r2, r2, #16
 800b9d0:	4322      	orrs	r2, r4
 800b9d2:	4310      	orrs	r0, r2
 800b9d4:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800b9d8:	7b0a      	ldrb	r2, [r1, #12]
 800b9da:	2a00      	cmp	r2, #0
 800b9dc:	f000 80a2 	beq.w	800bb24 <USB_ActivateEndpoint+0x1a4>
 800b9e0:	2000      	movs	r0, #0
 800b9e2:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800b9e6:	f422 42e2 	bic.w	r2, r2, #28928	@ 0x7100
 800b9ea:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800b9ee:	0412      	lsls	r2, r2, #16
 800b9f0:	0c12      	lsrs	r2, r2, #16
 800b9f2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800b9f6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800b9fa:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800b9fe:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800ba02:	890a      	ldrh	r2, [r1, #8]
 800ba04:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800ba08:	fa14 f585 	uxtah	r5, r4, r5
 800ba0c:	0852      	lsrs	r2, r2, #1
 800ba0e:	0052      	lsls	r2, r2, #1
 800ba10:	f8a5 2400 	strh.w	r2, [r5, #1024]	@ 0x400
 800ba14:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800ba18:	894a      	ldrh	r2, [r1, #10]
 800ba1a:	fa14 f585 	uxtah	r5, r4, r5
 800ba1e:	0852      	lsrs	r2, r2, #1
 800ba20:	0052      	lsls	r2, r2, #1
 800ba22:	f8a5 2404 	strh.w	r2, [r5, #1028]	@ 0x404
 800ba26:	784a      	ldrb	r2, [r1, #1]
 800ba28:	2a00      	cmp	r2, #0
 800ba2a:	f040 8107 	bne.w	800bc3c <USB_ActivateEndpoint+0x2bc>
 800ba2e:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800ba32:	0455      	lsls	r5, r2, #17
 800ba34:	d50d      	bpl.n	800ba52 <USB_ActivateEndpoint+0xd2>
 800ba36:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800ba3a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800ba3e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ba42:	0412      	lsls	r2, r2, #16
 800ba44:	0c12      	lsrs	r2, r2, #16
 800ba46:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800ba4a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800ba4e:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800ba52:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800ba56:	0652      	lsls	r2, r2, #25
 800ba58:	d50d      	bpl.n	800ba76 <USB_ActivateEndpoint+0xf6>
 800ba5a:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800ba5e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800ba62:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ba66:	0412      	lsls	r2, r2, #16
 800ba68:	0c12      	lsrs	r2, r2, #16
 800ba6a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800ba6e:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800ba72:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800ba76:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800ba7a:	690d      	ldr	r5, [r1, #16]
 800ba7c:	fa14 f282 	uxtah	r2, r4, r2
 800ba80:	f204 4406 	addw	r4, r4, #1030	@ 0x406
 800ba84:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800ba88:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800ba8c:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800ba90:	2d00      	cmp	r5, #0
 800ba92:	f000 8119 	beq.w	800bcc8 <USB_ActivateEndpoint+0x348>
 800ba96:	2d3e      	cmp	r5, #62	@ 0x3e
 800ba98:	f200 8157 	bhi.w	800bd4a <USB_ActivateEndpoint+0x3ca>
 800ba9c:	0869      	lsrs	r1, r5, #1
 800ba9e:	07ee      	lsls	r6, r5, #31
 800baa0:	bf48      	it	mi
 800baa2:	3101      	addmi	r1, #1
 800baa4:	028d      	lsls	r5, r1, #10
 800baa6:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800baaa:	b2ad      	uxth	r5, r5
 800baac:	b289      	uxth	r1, r1
 800baae:	4329      	orrs	r1, r5
 800bab0:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bab4:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800bab8:	b292      	uxth	r2, r2
 800baba:	5b11      	ldrh	r1, [r2, r4]
 800babc:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bac0:	5311      	strh	r1, [r2, r4]
 800bac2:	5b11      	ldrh	r1, [r2, r4]
 800bac4:	b289      	uxth	r1, r1
 800bac6:	430d      	orrs	r5, r1
 800bac8:	5315      	strh	r5, [r2, r4]
 800baca:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bace:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bad2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bad6:	0412      	lsls	r2, r2, #16
 800bad8:	0c12      	lsrs	r2, r2, #16
 800bada:	f248 0180 	movw	r1, #32896	@ 0x8080
 800bade:	f482 5240 	eor.w	r2, r2, #12288	@ 0x3000
 800bae2:	430a      	orrs	r2, r1
 800bae4:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bae8:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800baec:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800baf0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800baf4:	0412      	lsls	r2, r2, #16
 800baf6:	0c12      	lsrs	r2, r2, #16
 800baf8:	4311      	orrs	r1, r2
 800bafa:	f823 102c 	strh.w	r1, [r3, ip, lsl #2]
 800bafe:	bd70      	pop	{r4, r5, r6, pc}
 800bb00:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bb04:	4302      	orrs	r2, r0
 800bb06:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bb0a:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bb0e:	4daa      	ldr	r5, [pc, #680]	@ (800bdb8 <USB_ActivateEndpoint+0x438>)
 800bb10:	b292      	uxth	r2, r2
 800bb12:	402a      	ands	r2, r5
 800bb14:	4322      	orrs	r2, r4
 800bb16:	4310      	orrs	r0, r2
 800bb18:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800bb1c:	7b0a      	ldrb	r2, [r1, #12]
 800bb1e:	2a00      	cmp	r2, #0
 800bb20:	f040 80f4 	bne.w	800bd0c <USB_ActivateEndpoint+0x38c>
 800bb24:	2000      	movs	r0, #0
 800bb26:	88ca      	ldrh	r2, [r1, #6]
 800bb28:	784e      	ldrb	r6, [r1, #1]
 800bb2a:	0852      	lsrs	r2, r2, #1
 800bb2c:	0052      	lsls	r2, r2, #1
 800bb2e:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800bb32:	b3de      	cbz	r6, 800bbac <USB_ActivateEndpoint+0x22c>
 800bb34:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bb38:	fa15 f181 	uxtah	r1, r5, r1
 800bb3c:	f8a1 2400 	strh.w	r2, [r1, #1024]	@ 0x400
 800bb40:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bb44:	0652      	lsls	r2, r2, #25
 800bb46:	d50d      	bpl.n	800bb64 <USB_ActivateEndpoint+0x1e4>
 800bb48:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bb4c:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bb50:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bb54:	0412      	lsls	r2, r2, #16
 800bb56:	0c12      	lsrs	r2, r2, #16
 800bb58:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bb5c:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bb60:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bb64:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bb68:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bb6c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bb70:	0412      	lsls	r2, r2, #16
 800bb72:	f1be 0f01 	cmp.w	lr, #1
 800bb76:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800bb7a:	d010      	beq.n	800bb9e <USB_ActivateEndpoint+0x21e>
 800bb7c:	f082 0220 	eor.w	r2, r2, #32
 800bb80:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bb84:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bb88:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bb8c:	bd70      	pop	{r4, r5, r6, pc}
 800bb8e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800bb92:	e710      	b.n	800b9b6 <USB_ActivateEndpoint+0x36>
 800bb94:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800bb98:	e70d      	b.n	800b9b6 <USB_ActivateEndpoint+0x36>
 800bb9a:	f482 5200 	eor.w	r2, r2, #8192	@ 0x2000
 800bb9e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bba2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bba6:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bbaa:	bd70      	pop	{r4, r5, r6, pc}
 800bbac:	690e      	ldr	r6, [r1, #16]
 800bbae:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bbb2:	fa15 f181 	uxtah	r1, r5, r1
 800bbb6:	f8a1 2404 	strh.w	r2, [r1, #1028]	@ 0x404
 800bbba:	f8b3 2050 	ldrh.w	r2, [r3, #80]	@ 0x50
 800bbbe:	fa15 f282 	uxtah	r2, r5, r2
 800bbc2:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bbc6:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800bbca:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bbce:	2e00      	cmp	r6, #0
 800bbd0:	f000 8092 	beq.w	800bcf8 <USB_ActivateEndpoint+0x378>
 800bbd4:	2e3e      	cmp	r6, #62	@ 0x3e
 800bbd6:	f200 80a5 	bhi.w	800bd24 <USB_ActivateEndpoint+0x3a4>
 800bbda:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bbde:	0875      	lsrs	r5, r6, #1
 800bbe0:	07f6      	lsls	r6, r6, #31
 800bbe2:	bf48      	it	mi
 800bbe4:	3501      	addmi	r5, #1
 800bbe6:	b289      	uxth	r1, r1
 800bbe8:	ea41 2185 	orr.w	r1, r1, r5, lsl #10
 800bbec:	b289      	uxth	r1, r1
 800bbee:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bbf2:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bbf6:	0456      	lsls	r6, r2, #17
 800bbf8:	d50d      	bpl.n	800bc16 <USB_ActivateEndpoint+0x296>
 800bbfa:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bbfe:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bc02:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc06:	0412      	lsls	r2, r2, #16
 800bc08:	0c12      	lsrs	r2, r2, #16
 800bc0a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bc0e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bc12:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc16:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc1a:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bc1e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc22:	0412      	lsls	r2, r2, #16
 800bc24:	0c12      	lsrs	r2, r2, #16
 800bc26:	2c00      	cmp	r4, #0
 800bc28:	d1b7      	bne.n	800bb9a <USB_ActivateEndpoint+0x21a>
 800bc2a:	f482 5240 	eor.w	r2, r2, #12288	@ 0x3000
 800bc2e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bc32:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bc36:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc3a:	bd70      	pop	{r4, r5, r6, pc}
 800bc3c:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc40:	0451      	lsls	r1, r2, #17
 800bc42:	d50d      	bpl.n	800bc60 <USB_ActivateEndpoint+0x2e0>
 800bc44:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc48:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bc4c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc50:	0412      	lsls	r2, r2, #16
 800bc52:	0c12      	lsrs	r2, r2, #16
 800bc54:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bc58:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bc5c:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc60:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc64:	0652      	lsls	r2, r2, #25
 800bc66:	d50d      	bpl.n	800bc84 <USB_ActivateEndpoint+0x304>
 800bc68:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc6c:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bc70:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bc74:	0412      	lsls	r2, r2, #16
 800bc76:	0c12      	lsrs	r2, r2, #16
 800bc78:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bc7c:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bc80:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bc84:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bc88:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bc8c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bc90:	0412      	lsls	r2, r2, #16
 800bc92:	0c12      	lsrs	r2, r2, #16
 800bc94:	f1be 0f01 	cmp.w	lr, #1
 800bc98:	bf18      	it	ne
 800bc9a:	f082 0220 	eorne.w	r2, r2, #32
 800bc9e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bca2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bca6:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bcaa:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bcae:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bcb2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bcb6:	0412      	lsls	r2, r2, #16
 800bcb8:	0c12      	lsrs	r2, r2, #16
 800bcba:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bcbe:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bcc2:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bcc6:	bd70      	pop	{r4, r5, r6, pc}
 800bcc8:	f8b2 1402 	ldrh.w	r1, [r2, #1026]	@ 0x402
 800bccc:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bcd0:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bcd4:	b289      	uxth	r1, r1
 800bcd6:	f8a2 1402 	strh.w	r1, [r2, #1026]	@ 0x402
 800bcda:	f8b3 1050 	ldrh.w	r1, [r3, #80]	@ 0x50
 800bcde:	b289      	uxth	r1, r1
 800bce0:	5b0a      	ldrh	r2, [r1, r4]
 800bce2:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bce6:	530a      	strh	r2, [r1, r4]
 800bce8:	5b0a      	ldrh	r2, [r1, r4]
 800bcea:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800bcee:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 800bcf2:	b292      	uxth	r2, r2
 800bcf4:	530a      	strh	r2, [r1, r4]
 800bcf6:	e6e8      	b.n	800baca <USB_ActivateEndpoint+0x14a>
 800bcf8:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bcfc:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bd00:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bd04:	b289      	uxth	r1, r1
 800bd06:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bd0a:	e772      	b.n	800bbf2 <USB_ActivateEndpoint+0x272>
 800bd0c:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd10:	b292      	uxth	r2, r2
 800bd12:	402a      	ands	r2, r5
 800bd14:	f442 4201 	orr.w	r2, r2, #33024	@ 0x8100
 800bd18:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bd1c:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bd20:	2000      	movs	r0, #0
 800bd22:	e66c      	b.n	800b9fe <USB_ActivateEndpoint+0x7e>
 800bd24:	06f1      	lsls	r1, r6, #27
 800bd26:	f8b2 1406 	ldrh.w	r1, [r2, #1030]	@ 0x406
 800bd2a:	ea4f 1556 	mov.w	r5, r6, lsr #5
 800bd2e:	bf08      	it	eq
 800bd30:	f105 35ff 	addeq.w	r5, r5, #4294967295
 800bd34:	b289      	uxth	r1, r1
 800bd36:	ea41 2185 	orr.w	r1, r1, r5, lsl #10
 800bd3a:	ea6f 4141 	mvn.w	r1, r1, lsl #17
 800bd3e:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800bd42:	b289      	uxth	r1, r1
 800bd44:	f8a2 1406 	strh.w	r1, [r2, #1030]	@ 0x406
 800bd48:	e753      	b.n	800bbf2 <USB_ActivateEndpoint+0x272>
 800bd4a:	0969      	lsrs	r1, r5, #5
 800bd4c:	06ed      	lsls	r5, r5, #27
 800bd4e:	bf08      	it	eq
 800bd50:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800bd54:	f8b2 5402 	ldrh.w	r5, [r2, #1026]	@ 0x402
 800bd58:	0289      	lsls	r1, r1, #10
 800bd5a:	b289      	uxth	r1, r1
 800bd5c:	b2ad      	uxth	r5, r5
 800bd5e:	430d      	orrs	r5, r1
 800bd60:	f445 4500 	orr.w	r5, r5, #32768	@ 0x8000
 800bd64:	f8a2 5402 	strh.w	r5, [r2, #1026]	@ 0x402
 800bd68:	f8b3 5050 	ldrh.w	r5, [r3, #80]	@ 0x50
 800bd6c:	b2ad      	uxth	r5, r5
 800bd6e:	5b2a      	ldrh	r2, [r5, r4]
 800bd70:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800bd74:	532a      	strh	r2, [r5, r4]
 800bd76:	5b2a      	ldrh	r2, [r5, r4]
 800bd78:	430a      	orrs	r2, r1
 800bd7a:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800bd7e:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 800bd82:	b292      	uxth	r2, r2
 800bd84:	532a      	strh	r2, [r5, r4]
 800bd86:	e6a0      	b.n	800baca <USB_ActivateEndpoint+0x14a>
 800bd88:	f248 0080 	movw	r0, #32896	@ 0x8080
 800bd8c:	4302      	orrs	r2, r0
 800bd8e:	f823 202c 	strh.w	r2, [r3, ip, lsl #2]
 800bd92:	f833 202c 	ldrh.w	r2, [r3, ip, lsl #2]
 800bd96:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bd9a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bd9e:	0412      	lsls	r2, r2, #16
 800bda0:	0c12      	lsrs	r2, r2, #16
 800bda2:	4322      	orrs	r2, r4
 800bda4:	4310      	orrs	r0, r2
 800bda6:	f823 002c 	strh.w	r0, [r3, ip, lsl #2]
 800bdaa:	7b0a      	ldrb	r2, [r1, #12]
 800bdac:	2001      	movs	r0, #1
 800bdae:	2a00      	cmp	r2, #0
 800bdb0:	f47f ae17 	bne.w	800b9e2 <USB_ActivateEndpoint+0x62>
 800bdb4:	e6b7      	b.n	800bb26 <USB_ActivateEndpoint+0x1a6>
 800bdb6:	bf00      	nop
 800bdb8:	ffff8f8f 	.word	0xffff8f8f

0800bdbc <USB_DeactivateEndpoint>:
 800bdbc:	b410      	push	{r4}
 800bdbe:	7b0c      	ldrb	r4, [r1, #12]
 800bdc0:	784a      	ldrb	r2, [r1, #1]
 800bdc2:	780b      	ldrb	r3, [r1, #0]
 800bdc4:	b9cc      	cbnz	r4, 800bdfa <USB_DeactivateEndpoint+0x3e>
 800bdc6:	2a00      	cmp	r2, #0
 800bdc8:	f000 80b5 	beq.w	800bf36 <USB_DeactivateEndpoint+0x17a>
 800bdcc:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bdd0:	0654      	lsls	r4, r2, #25
 800bdd2:	f100 80c9 	bmi.w	800bf68 <USB_DeactivateEndpoint+0x1ac>
 800bdd6:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bdda:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bdde:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bde2:	0412      	lsls	r2, r2, #16
 800bde4:	0c12      	lsrs	r2, r2, #16
 800bde6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bdea:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bdee:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bdf2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bdf6:	2000      	movs	r0, #0
 800bdf8:	4770      	bx	lr
 800bdfa:	2a00      	cmp	r2, #0
 800bdfc:	d14d      	bne.n	800be9a <USB_DeactivateEndpoint+0xde>
 800bdfe:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be02:	0452      	lsls	r2, r2, #17
 800be04:	d50d      	bpl.n	800be22 <USB_DeactivateEndpoint+0x66>
 800be06:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be0a:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800be0e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be12:	0412      	lsls	r2, r2, #16
 800be14:	0c12      	lsrs	r2, r2, #16
 800be16:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800be1a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800be1e:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800be22:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be26:	0654      	lsls	r4, r2, #25
 800be28:	d50d      	bpl.n	800be46 <USB_DeactivateEndpoint+0x8a>
 800be2a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be2e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800be32:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be36:	0412      	lsls	r2, r2, #16
 800be38:	0c12      	lsrs	r2, r2, #16
 800be3a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800be3e:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800be42:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800be46:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800be4e:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800be52:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be56:	0412      	lsls	r2, r2, #16
 800be58:	0c12      	lsrs	r2, r2, #16
 800be5a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800be5e:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800be62:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800be66:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be6a:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800be6e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800be72:	0412      	lsls	r2, r2, #16
 800be74:	f248 0180 	movw	r1, #32896	@ 0x8080
 800be78:	0c12      	lsrs	r2, r2, #16
 800be7a:	430a      	orrs	r2, r1
 800be7c:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800be80:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be84:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800be88:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800be8c:	0412      	lsls	r2, r2, #16
 800be8e:	0c12      	lsrs	r2, r2, #16
 800be90:	4311      	orrs	r1, r2
 800be92:	f820 1023 	strh.w	r1, [r0, r3, lsl #2]
 800be96:	2000      	movs	r0, #0
 800be98:	4770      	bx	lr
 800be9a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800be9e:	0451      	lsls	r1, r2, #17
 800bea0:	d50d      	bpl.n	800bebe <USB_DeactivateEndpoint+0x102>
 800bea2:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bea6:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800beaa:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800beae:	0412      	lsls	r2, r2, #16
 800beb0:	0c12      	lsrs	r2, r2, #16
 800beb2:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800beb6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800beba:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bebe:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bec2:	0652      	lsls	r2, r2, #25
 800bec4:	d50d      	bpl.n	800bee2 <USB_DeactivateEndpoint+0x126>
 800bec6:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800beca:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bece:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bed2:	0412      	lsls	r2, r2, #16
 800bed4:	0c12      	lsrs	r2, r2, #16
 800bed6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800beda:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bede:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bee2:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bee6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800beea:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800beee:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bef2:	0412      	lsls	r2, r2, #16
 800bef4:	0c12      	lsrs	r2, r2, #16
 800bef6:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800befa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800befe:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bf02:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bf06:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bf0a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800bf0e:	0412      	lsls	r2, r2, #16
 800bf10:	f248 0180 	movw	r1, #32896	@ 0x8080
 800bf14:	0c12      	lsrs	r2, r2, #16
 800bf16:	430a      	orrs	r2, r1
 800bf18:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bf1c:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bf20:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bf24:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bf28:	0412      	lsls	r2, r2, #16
 800bf2a:	0c12      	lsrs	r2, r2, #16
 800bf2c:	4311      	orrs	r1, r2
 800bf2e:	f820 1023 	strh.w	r1, [r0, r3, lsl #2]
 800bf32:	2000      	movs	r0, #0
 800bf34:	4770      	bx	lr
 800bf36:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bf3a:	0451      	lsls	r1, r2, #17
 800bf3c:	d50d      	bpl.n	800bf5a <USB_DeactivateEndpoint+0x19e>
 800bf3e:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bf42:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bf46:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bf4a:	0412      	lsls	r2, r2, #16
 800bf4c:	0c12      	lsrs	r2, r2, #16
 800bf4e:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800bf52:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf56:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bf5a:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bf5e:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800bf62:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bf66:	e73c      	b.n	800bde2 <USB_DeactivateEndpoint+0x26>
 800bf68:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800bf6c:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 800bf70:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800bf74:	0412      	lsls	r2, r2, #16
 800bf76:	0c12      	lsrs	r2, r2, #16
 800bf78:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bf7c:	f042 02c0 	orr.w	r2, r2, #192	@ 0xc0
 800bf80:	f820 2023 	strh.w	r2, [r0, r3, lsl #2]
 800bf84:	e727      	b.n	800bdd6 <USB_DeactivateEndpoint+0x1a>
 800bf86:	bf00      	nop

0800bf88 <USB_EPStartXfer>:
 800bf88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf8c:	784b      	ldrb	r3, [r1, #1]
 800bf8e:	7b0c      	ldrb	r4, [r1, #12]
 800bf90:	2b01      	cmp	r3, #1
 800bf92:	b083      	sub	sp, #12
 800bf94:	d036      	beq.n	800c004 <USB_EPStartXfer+0x7c>
 800bf96:	b1f4      	cbz	r4, 800bfd6 <USB_EPStartXfer+0x4e>
 800bf98:	78cb      	ldrb	r3, [r1, #3]
 800bf9a:	2b02      	cmp	r3, #2
 800bf9c:	f000 80a8 	beq.w	800c0f0 <USB_EPStartXfer+0x168>
 800bfa0:	2b01      	cmp	r3, #1
 800bfa2:	f040 80a1 	bne.w	800c0e8 <USB_EPStartXfer+0x160>
 800bfa6:	2300      	movs	r3, #0
 800bfa8:	780a      	ldrb	r2, [r1, #0]
 800bfaa:	618b      	str	r3, [r1, #24]
 800bfac:	b212      	sxth	r2, r2
 800bfae:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800bfb2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800bfb6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800bfba:	041b      	lsls	r3, r3, #16
 800bfbc:	0c1b      	lsrs	r3, r3, #16
 800bfbe:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 800bfc2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800bfc6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800bfca:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800bfce:	2000      	movs	r0, #0
 800bfd0:	b003      	add	sp, #12
 800bfd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfd6:	698a      	ldr	r2, [r1, #24]
 800bfd8:	780c      	ldrb	r4, [r1, #0]
 800bfda:	2a00      	cmp	r2, #0
 800bfdc:	d16e      	bne.n	800c0bc <USB_EPStartXfer+0x134>
 800bfde:	78cb      	ldrb	r3, [r1, #3]
 800bfe0:	2b00      	cmp	r3, #0
 800bfe2:	f000 80a6 	beq.w	800c132 <USB_EPStartXfer+0x1aa>
 800bfe6:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800bfea:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800bfee:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800bff2:	041b      	lsls	r3, r3, #16
 800bff4:	0c1b      	lsrs	r3, r3, #16
 800bff6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800bffa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800bffe:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c002:	e7d0      	b.n	800bfa6 <USB_EPStartXfer+0x1e>
 800c004:	690d      	ldr	r5, [r1, #16]
 800c006:	698a      	ldr	r2, [r1, #24]
 800c008:	694b      	ldr	r3, [r1, #20]
 800c00a:	42aa      	cmp	r2, r5
 800c00c:	bf28      	it	cs
 800c00e:	462a      	movcs	r2, r5
 800c010:	f500 6c80 	add.w	ip, r0, #1024	@ 0x400
 800c014:	bb54      	cbnz	r4, 800c06c <USB_EPStartXfer+0xe4>
 800c016:	b295      	uxth	r5, r2
 800c018:	88ce      	ldrh	r6, [r1, #6]
 800c01a:	3501      	adds	r5, #1
 800c01c:	086d      	lsrs	r5, r5, #1
 800c01e:	4466      	add	r6, ip
 800c020:	d007      	beq.n	800c032 <USB_EPStartXfer+0xaa>
 800c022:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 800c026:	1af6      	subs	r6, r6, r3
 800c028:	881c      	ldrh	r4, [r3, #0]
 800c02a:	539c      	strh	r4, [r3, r6]
 800c02c:	3302      	adds	r3, #2
 800c02e:	42ab      	cmp	r3, r5
 800c030:	d1fa      	bne.n	800c028 <USB_EPStartXfer+0xa0>
 800c032:	f8b0 3050 	ldrh.w	r3, [r0, #80]	@ 0x50
 800c036:	780c      	ldrb	r4, [r1, #0]
 800c038:	f200 4502 	addw	r5, r0, #1026	@ 0x402
 800c03c:	fa15 f383 	uxtah	r3, r5, r3
 800c040:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c044:	b292      	uxth	r2, r2
 800c046:	801a      	strh	r2, [r3, #0]
 800c048:	780a      	ldrb	r2, [r1, #0]
 800c04a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c04e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c052:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c056:	041b      	lsls	r3, r3, #16
 800c058:	0c1b      	lsrs	r3, r3, #16
 800c05a:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
 800c05e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c062:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c066:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c06a:	e7b0      	b.n	800bfce <USB_EPStartXfer+0x46>
 800c06c:	78ce      	ldrb	r6, [r1, #3]
 800c06e:	6a0c      	ldr	r4, [r1, #32]
 800c070:	f891 e000 	ldrb.w	lr, [r1]
 800c074:	2e02      	cmp	r6, #2
 800c076:	d06b      	beq.n	800c150 <USB_EPStartXfer+0x1c8>
 800c078:	1aa4      	subs	r4, r4, r2
 800c07a:	f830 502e 	ldrh.w	r5, [r0, lr, lsl #2]
 800c07e:	620c      	str	r4, [r1, #32]
 800c080:	b294      	uxth	r4, r2
 800c082:	3401      	adds	r4, #1
 800c084:	f015 0f40 	tst.w	r5, #64	@ 0x40
 800c088:	b292      	uxth	r2, r2
 800c08a:	f8b0 5050 	ldrh.w	r5, [r0, #80]	@ 0x50
 800c08e:	ea4f 0454 	mov.w	r4, r4, lsr #1
 800c092:	f000 80ae 	beq.w	800c1f2 <USB_EPStartXfer+0x26a>
 800c096:	f200 4606 	addw	r6, r0, #1030	@ 0x406
 800c09a:	fa16 f585 	uxtah	r5, r6, r5
 800c09e:	f825 203e 	strh.w	r2, [r5, lr, lsl #3]
 800c0a2:	894d      	ldrh	r5, [r1, #10]
 800c0a4:	4465      	add	r5, ip
 800c0a6:	2c00      	cmp	r4, #0
 800c0a8:	d0ce      	beq.n	800c048 <USB_EPStartXfer+0xc0>
 800c0aa:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800c0ae:	1aed      	subs	r5, r5, r3
 800c0b0:	881a      	ldrh	r2, [r3, #0]
 800c0b2:	535a      	strh	r2, [r3, r5]
 800c0b4:	3302      	adds	r3, #2
 800c0b6:	429c      	cmp	r4, r3
 800c0b8:	d1fa      	bne.n	800c0b0 <USB_EPStartXfer+0x128>
 800c0ba:	e7c5      	b.n	800c048 <USB_EPStartXfer+0xc0>
 800c0bc:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c0c0:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800c0c4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c0c8:	041b      	lsls	r3, r3, #16
 800c0ca:	0c1b      	lsrs	r3, r3, #16
 800c0cc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c0d0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c0d4:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c0d8:	690b      	ldr	r3, [r1, #16]
 800c0da:	429a      	cmp	r2, r3
 800c0dc:	f67f af63 	bls.w	800bfa6 <USB_EPStartXfer+0x1e>
 800c0e0:	1ad3      	subs	r3, r2, r3
 800c0e2:	618b      	str	r3, [r1, #24]
 800c0e4:	780a      	ldrb	r2, [r1, #0]
 800c0e6:	e761      	b.n	800bfac <USB_EPStartXfer+0x24>
 800c0e8:	2001      	movs	r0, #1
 800c0ea:	b003      	add	sp, #12
 800c0ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c0f0:	69cb      	ldr	r3, [r1, #28]
 800c0f2:	780a      	ldrb	r2, [r1, #0]
 800c0f4:	2b00      	cmp	r3, #0
 800c0f6:	f43f af59 	beq.w	800bfac <USB_EPStartXfer+0x24>
 800c0fa:	b214      	sxth	r4, r2
 800c0fc:	f244 0340 	movw	r3, #16448	@ 0x4040
 800c100:	f830 5024 	ldrh.w	r5, [r0, r4, lsl #2]
 800c104:	ea03 0605 	and.w	r6, r3, r5
 800c108:	43ab      	bics	r3, r5
 800c10a:	d002      	beq.n	800c112 <USB_EPStartXfer+0x18a>
 800c10c:	2e00      	cmp	r6, #0
 800c10e:	f47f af4d 	bne.w	800bfac <USB_EPStartXfer+0x24>
 800c112:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c116:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c11a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c11e:	041b      	lsls	r3, r3, #16
 800c120:	0c1b      	lsrs	r3, r3, #16
 800c122:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c126:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c12a:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c12e:	780a      	ldrb	r2, [r1, #0]
 800c130:	e73c      	b.n	800bfac <USB_EPStartXfer+0x24>
 800c132:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 800c136:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c13a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c13e:	041b      	lsls	r3, r3, #16
 800c140:	0c1b      	lsrs	r3, r3, #16
 800c142:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 800c146:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c14a:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 800c14e:	e72a      	b.n	800bfa6 <USB_EPStartXfer+0x1e>
 800c150:	42a5      	cmp	r5, r4
 800c152:	f200 4b02 	addw	fp, r0, #1026	@ 0x402
 800c156:	d260      	bcs.n	800c21a <USB_EPStartXfer+0x292>
 800c158:	f830 602e 	ldrh.w	r6, [r0, lr, lsl #2]
 800c15c:	f426 46e0 	bic.w	r6, r6, #28672	@ 0x7000
 800c160:	f026 0670 	bic.w	r6, r6, #112	@ 0x70
 800c164:	0436      	lsls	r6, r6, #16
 800c166:	0c36      	lsrs	r6, r6, #16
 800c168:	f446 4601 	orr.w	r6, r6, #33024	@ 0x8100
 800c16c:	f046 0680 	orr.w	r6, r6, #128	@ 0x80
 800c170:	f820 602e 	strh.w	r6, [r0, lr, lsl #2]
 800c174:	f830 602e 	ldrh.w	r6, [r0, lr, lsl #2]
 800c178:	b297      	uxth	r7, r2
 800c17a:	1aa4      	subs	r4, r4, r2
 800c17c:	3701      	adds	r7, #1
 800c17e:	f016 0f40 	tst.w	r6, #64	@ 0x40
 800c182:	620c      	str	r4, [r1, #32]
 800c184:	f8b0 6050 	ldrh.w	r6, [r0, #80]	@ 0x50
 800c188:	ea4f 0757 	mov.w	r7, r7, lsr #1
 800c18c:	fa1f f882 	uxth.w	r8, r2
 800c190:	f200 4906 	addw	r9, r0, #1030	@ 0x406
 800c194:	d066      	beq.n	800c264 <USB_EPStartXfer+0x2dc>
 800c196:	fa19 f686 	uxtah	r6, r9, r6
 800c19a:	f826 803e 	strh.w	r8, [r6, lr, lsl #3]
 800c19e:	894e      	ldrh	r6, [r1, #10]
 800c1a0:	4466      	add	r6, ip
 800c1a2:	b167      	cbz	r7, 800c1be <USB_EPStartXfer+0x236>
 800c1a4:	eba6 0903 	sub.w	r9, r6, r3
 800c1a8:	eb03 0a47 	add.w	sl, r3, r7, lsl #1
 800c1ac:	461e      	mov	r6, r3
 800c1ae:	9501      	str	r5, [sp, #4]
 800c1b0:	8835      	ldrh	r5, [r6, #0]
 800c1b2:	f826 5009 	strh.w	r5, [r6, r9]
 800c1b6:	3602      	adds	r6, #2
 800c1b8:	4556      	cmp	r6, sl
 800c1ba:	d1f9      	bne.n	800c1b0 <USB_EPStartXfer+0x228>
 800c1bc:	9d01      	ldr	r5, [sp, #4]
 800c1be:	4413      	add	r3, r2
 800c1c0:	42a5      	cmp	r5, r4
 800c1c2:	614b      	str	r3, [r1, #20]
 800c1c4:	d27c      	bcs.n	800c2c0 <USB_EPStartXfer+0x338>
 800c1c6:	1aa2      	subs	r2, r4, r2
 800c1c8:	620a      	str	r2, [r1, #32]
 800c1ca:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c1ce:	fa1b f282 	uxtah	r2, fp, r2
 800c1d2:	f822 803e 	strh.w	r8, [r2, lr, lsl #3]
 800c1d6:	890a      	ldrh	r2, [r1, #8]
 800c1d8:	4462      	add	r2, ip
 800c1da:	2f00      	cmp	r7, #0
 800c1dc:	f43f af34 	beq.w	800c048 <USB_EPStartXfer+0xc0>
 800c1e0:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 800c1e4:	1ad4      	subs	r4, r2, r3
 800c1e6:	881a      	ldrh	r2, [r3, #0]
 800c1e8:	531a      	strh	r2, [r3, r4]
 800c1ea:	3302      	adds	r3, #2
 800c1ec:	42bb      	cmp	r3, r7
 800c1ee:	d1fa      	bne.n	800c1e6 <USB_EPStartXfer+0x25e>
 800c1f0:	e72a      	b.n	800c048 <USB_EPStartXfer+0xc0>
 800c1f2:	f200 4602 	addw	r6, r0, #1026	@ 0x402
 800c1f6:	fa16 f585 	uxtah	r5, r6, r5
 800c1fa:	f825 203e 	strh.w	r2, [r5, lr, lsl #3]
 800c1fe:	890d      	ldrh	r5, [r1, #8]
 800c200:	4465      	add	r5, ip
 800c202:	2c00      	cmp	r4, #0
 800c204:	f43f af20 	beq.w	800c048 <USB_EPStartXfer+0xc0>
 800c208:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800c20c:	1aed      	subs	r5, r5, r3
 800c20e:	881a      	ldrh	r2, [r3, #0]
 800c210:	535a      	strh	r2, [r3, r5]
 800c212:	3302      	adds	r3, #2
 800c214:	429c      	cmp	r4, r3
 800c216:	d1fa      	bne.n	800c20e <USB_EPStartXfer+0x286>
 800c218:	e716      	b.n	800c048 <USB_EPStartXfer+0xc0>
 800c21a:	f830 202e 	ldrh.w	r2, [r0, lr, lsl #2]
 800c21e:	f422 42e2 	bic.w	r2, r2, #28928	@ 0x7100
 800c222:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c226:	0412      	lsls	r2, r2, #16
 800c228:	0c12      	lsrs	r2, r2, #16
 800c22a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c22e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c232:	f820 202e 	strh.w	r2, [r0, lr, lsl #2]
 800c236:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c23a:	fa1b f282 	uxtah	r2, fp, r2
 800c23e:	b2a5      	uxth	r5, r4
 800c240:	f822 503e 	strh.w	r5, [r2, lr, lsl #3]
 800c244:	462c      	mov	r4, r5
 800c246:	3401      	adds	r4, #1
 800c248:	890d      	ldrh	r5, [r1, #8]
 800c24a:	0862      	lsrs	r2, r4, #1
 800c24c:	4465      	add	r5, ip
 800c24e:	f43f aefb 	beq.w	800c048 <USB_EPStartXfer+0xc0>
 800c252:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800c256:	1aed      	subs	r5, r5, r3
 800c258:	881c      	ldrh	r4, [r3, #0]
 800c25a:	535c      	strh	r4, [r3, r5]
 800c25c:	3302      	adds	r3, #2
 800c25e:	429a      	cmp	r2, r3
 800c260:	d1fa      	bne.n	800c258 <USB_EPStartXfer+0x2d0>
 800c262:	e6f1      	b.n	800c048 <USB_EPStartXfer+0xc0>
 800c264:	fa1b f686 	uxtah	r6, fp, r6
 800c268:	f826 803e 	strh.w	r8, [r6, lr, lsl #3]
 800c26c:	890e      	ldrh	r6, [r1, #8]
 800c26e:	4466      	add	r6, ip
 800c270:	b167      	cbz	r7, 800c28c <USB_EPStartXfer+0x304>
 800c272:	eba6 0a03 	sub.w	sl, r6, r3
 800c276:	eb03 0b47 	add.w	fp, r3, r7, lsl #1
 800c27a:	461e      	mov	r6, r3
 800c27c:	9501      	str	r5, [sp, #4]
 800c27e:	8835      	ldrh	r5, [r6, #0]
 800c280:	f826 500a 	strh.w	r5, [r6, sl]
 800c284:	3602      	adds	r6, #2
 800c286:	455e      	cmp	r6, fp
 800c288:	d1f9      	bne.n	800c27e <USB_EPStartXfer+0x2f6>
 800c28a:	9d01      	ldr	r5, [sp, #4]
 800c28c:	4413      	add	r3, r2
 800c28e:	42a5      	cmp	r5, r4
 800c290:	614b      	str	r3, [r1, #20]
 800c292:	d21c      	bcs.n	800c2ce <USB_EPStartXfer+0x346>
 800c294:	1aa4      	subs	r4, r4, r2
 800c296:	f8b0 2050 	ldrh.w	r2, [r0, #80]	@ 0x50
 800c29a:	620c      	str	r4, [r1, #32]
 800c29c:	fa19 f282 	uxtah	r2, r9, r2
 800c2a0:	f822 803e 	strh.w	r8, [r2, lr, lsl #3]
 800c2a4:	894a      	ldrh	r2, [r1, #10]
 800c2a6:	4462      	add	r2, ip
 800c2a8:	2f00      	cmp	r7, #0
 800c2aa:	f43f aecd 	beq.w	800c048 <USB_EPStartXfer+0xc0>
 800c2ae:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 800c2b2:	1ad4      	subs	r4, r2, r3
 800c2b4:	881a      	ldrh	r2, [r3, #0]
 800c2b6:	531a      	strh	r2, [r3, r4]
 800c2b8:	3302      	adds	r3, #2
 800c2ba:	42bb      	cmp	r3, r7
 800c2bc:	d1fa      	bne.n	800c2b4 <USB_EPStartXfer+0x32c>
 800c2be:	e6c3      	b.n	800c048 <USB_EPStartXfer+0xc0>
 800c2c0:	b2a7      	uxth	r7, r4
 800c2c2:	3701      	adds	r7, #1
 800c2c4:	fa1f f884 	uxth.w	r8, r4
 800c2c8:	087f      	lsrs	r7, r7, #1
 800c2ca:	2200      	movs	r2, #0
 800c2cc:	e77c      	b.n	800c1c8 <USB_EPStartXfer+0x240>
 800c2ce:	b2a7      	uxth	r7, r4
 800c2d0:	3701      	adds	r7, #1
 800c2d2:	fa1f f884 	uxth.w	r8, r4
 800c2d6:	087f      	lsrs	r7, r7, #1
 800c2d8:	2400      	movs	r4, #0
 800c2da:	e7dc      	b.n	800c296 <USB_EPStartXfer+0x30e>

0800c2dc <USB_EPSetStall>:
 800c2dc:	784b      	ldrb	r3, [r1, #1]
 800c2de:	780a      	ldrb	r2, [r1, #0]
 800c2e0:	b18b      	cbz	r3, 800c306 <USB_EPSetStall+0x2a>
 800c2e2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c2e6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c2ea:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c2ee:	041b      	lsls	r3, r3, #16
 800c2f0:	0c1b      	lsrs	r3, r3, #16
 800c2f2:	f083 0310 	eor.w	r3, r3, #16
 800c2f6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c2fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c2fe:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c302:	2000      	movs	r0, #0
 800c304:	4770      	bx	lr
 800c306:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c30a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c30e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c312:	041b      	lsls	r3, r3, #16
 800c314:	0c1b      	lsrs	r3, r3, #16
 800c316:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800c31a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c31e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c322:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c326:	2000      	movs	r0, #0
 800c328:	4770      	bx	lr
 800c32a:	bf00      	nop

0800c32c <USB_EPClearStall>:
 800c32c:	784b      	ldrb	r3, [r1, #1]
 800c32e:	780a      	ldrb	r2, [r1, #0]
 800c330:	b333      	cbz	r3, 800c380 <USB_EPClearStall+0x54>
 800c332:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c336:	065b      	lsls	r3, r3, #25
 800c338:	d50d      	bpl.n	800c356 <USB_EPClearStall+0x2a>
 800c33a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c33e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c342:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c346:	041b      	lsls	r3, r3, #16
 800c348:	0c1b      	lsrs	r3, r3, #16
 800c34a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c34e:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c352:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c356:	78cb      	ldrb	r3, [r1, #3]
 800c358:	2b01      	cmp	r3, #1
 800c35a:	d00f      	beq.n	800c37c <USB_EPClearStall+0x50>
 800c35c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c360:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c364:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c368:	041b      	lsls	r3, r3, #16
 800c36a:	0c1b      	lsrs	r3, r3, #16
 800c36c:	f083 0320 	eor.w	r3, r3, #32
 800c370:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c374:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c378:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c37c:	2000      	movs	r0, #0
 800c37e:	4770      	bx	lr
 800c380:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c384:	045b      	lsls	r3, r3, #17
 800c386:	d50d      	bpl.n	800c3a4 <USB_EPClearStall+0x78>
 800c388:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c38c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800c390:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c394:	041b      	lsls	r3, r3, #16
 800c396:	0c1b      	lsrs	r3, r3, #16
 800c398:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800c39c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c3a0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c3a4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800c3a8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c3ac:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c3b0:	041b      	lsls	r3, r3, #16
 800c3b2:	0c1b      	lsrs	r3, r3, #16
 800c3b4:	f483 5340 	eor.w	r3, r3, #12288	@ 0x3000
 800c3b8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c3bc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c3c0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800c3c4:	2000      	movs	r0, #0
 800c3c6:	4770      	bx	lr

0800c3c8 <USB_SetDevAddress>:
 800c3c8:	b911      	cbnz	r1, 800c3d0 <USB_SetDevAddress+0x8>
 800c3ca:	2380      	movs	r3, #128	@ 0x80
 800c3cc:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
 800c3d0:	2000      	movs	r0, #0
 800c3d2:	4770      	bx	lr

0800c3d4 <USB_DevConnect>:
 800c3d4:	4602      	mov	r2, r0
 800c3d6:	2000      	movs	r0, #0
 800c3d8:	f8b2 3058 	ldrh.w	r3, [r2, #88]	@ 0x58
 800c3dc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800c3e0:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800c3e4:	b29b      	uxth	r3, r3
 800c3e6:	f8a2 3058 	strh.w	r3, [r2, #88]	@ 0x58
 800c3ea:	4770      	bx	lr

0800c3ec <USB_ReadInterrupts>:
 800c3ec:	f8b0 0044 	ldrh.w	r0, [r0, #68]	@ 0x44
 800c3f0:	b280      	uxth	r0, r0
 800c3f2:	4770      	bx	lr

0800c3f4 <USB_WritePMA>:
 800c3f4:	3301      	adds	r3, #1
 800c3f6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c3fa:	085b      	lsrs	r3, r3, #1
 800c3fc:	4410      	add	r0, r2
 800c3fe:	d008      	beq.n	800c412 <USB_WritePMA+0x1e>
 800c400:	460a      	mov	r2, r1
 800c402:	1a80      	subs	r0, r0, r2
 800c404:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800c408:	8813      	ldrh	r3, [r2, #0]
 800c40a:	5213      	strh	r3, [r2, r0]
 800c40c:	3202      	adds	r2, #2
 800c40e:	428a      	cmp	r2, r1
 800c410:	d1fa      	bne.n	800c408 <USB_WritePMA+0x14>
 800c412:	4770      	bx	lr

0800c414 <USB_ReadPMA>:
 800c414:	b570      	push	{r4, r5, r6, lr}
 800c416:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800c41a:	085e      	lsrs	r6, r3, #1
 800c41c:	eb00 0502 	add.w	r5, r0, r2
 800c420:	d01c      	beq.n	800c45c <USB_ReadPMA+0x48>
 800c422:	f06f 0401 	mvn.w	r4, #1
 800c426:	1a64      	subs	r4, r4, r1
 800c428:	1c8a      	adds	r2, r1, #2
 800c42a:	442c      	add	r4, r5
 800c42c:	46b6      	mov	lr, r6
 800c42e:	f834 c002 	ldrh.w	ip, [r4, r2]
 800c432:	3202      	adds	r2, #2
 800c434:	fa1f fc8c 	uxth.w	ip, ip
 800c438:	ea4f 201c 	mov.w	r0, ip, lsr #8
 800c43c:	f1be 0e01 	subs.w	lr, lr, #1
 800c440:	f802 cc04 	strb.w	ip, [r2, #-4]
 800c444:	f802 0c03 	strb.w	r0, [r2, #-3]
 800c448:	d1f1      	bne.n	800c42e <USB_ReadPMA+0x1a>
 800c44a:	eb05 0246 	add.w	r2, r5, r6, lsl #1
 800c44e:	07db      	lsls	r3, r3, #31
 800c450:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 800c454:	bf44      	itt	mi
 800c456:	8813      	ldrhmi	r3, [r2, #0]
 800c458:	700b      	strbmi	r3, [r1, #0]
 800c45a:	bd70      	pop	{r4, r5, r6, pc}
 800c45c:	462a      	mov	r2, r5
 800c45e:	07db      	lsls	r3, r3, #31
 800c460:	bf44      	itt	mi
 800c462:	8813      	ldrhmi	r3, [r2, #0]
 800c464:	700b      	strbmi	r3, [r1, #0]
 800c466:	bd70      	pop	{r4, r5, r6, pc}

0800c468 <USBD_CDC_EP0_RxReady>:
 800c468:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c46c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800c470:	b510      	push	{r4, lr}
 800c472:	f8d0 42c0 	ldr.w	r4, [r0, #704]	@ 0x2c0
 800c476:	b184      	cbz	r4, 800c49a <USBD_CDC_EP0_RxReady+0x32>
 800c478:	f8d0 32c4 	ldr.w	r3, [r0, #708]	@ 0x2c4
 800c47c:	b15b      	cbz	r3, 800c496 <USBD_CDC_EP0_RxReady+0x2e>
 800c47e:	f894 0200 	ldrb.w	r0, [r4, #512]	@ 0x200
 800c482:	28ff      	cmp	r0, #255	@ 0xff
 800c484:	d007      	beq.n	800c496 <USBD_CDC_EP0_RxReady+0x2e>
 800c486:	689b      	ldr	r3, [r3, #8]
 800c488:	f894 2201 	ldrb.w	r2, [r4, #513]	@ 0x201
 800c48c:	4621      	mov	r1, r4
 800c48e:	4798      	blx	r3
 800c490:	23ff      	movs	r3, #255	@ 0xff
 800c492:	f884 3200 	strb.w	r3, [r4, #512]	@ 0x200
 800c496:	2000      	movs	r0, #0
 800c498:	bd10      	pop	{r4, pc}
 800c49a:	2003      	movs	r0, #3
 800c49c:	bd10      	pop	{r4, pc}
 800c49e:	bf00      	nop

0800c4a0 <USBD_CDC_GetDeviceQualifierDescriptor>:
 800c4a0:	230a      	movs	r3, #10
 800c4a2:	8003      	strh	r3, [r0, #0]
 800c4a4:	4800      	ldr	r0, [pc, #0]	@ (800c4a8 <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 800c4a6:	4770      	bx	lr
 800c4a8:	200000bc 	.word	0x200000bc

0800c4ac <USBD_CDC_GetFSCfgDesc>:
 800c4ac:	b570      	push	{r4, r5, r6, lr}
 800c4ae:	2182      	movs	r1, #130	@ 0x82
 800c4b0:	4606      	mov	r6, r0
 800c4b2:	480f      	ldr	r0, [pc, #60]	@ (800c4f0 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c4b4:	f000 fb92 	bl	800cbdc <USBD_GetEpDesc>
 800c4b8:	2101      	movs	r1, #1
 800c4ba:	4605      	mov	r5, r0
 800c4bc:	480c      	ldr	r0, [pc, #48]	@ (800c4f0 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c4be:	f000 fb8d 	bl	800cbdc <USBD_GetEpDesc>
 800c4c2:	2181      	movs	r1, #129	@ 0x81
 800c4c4:	4604      	mov	r4, r0
 800c4c6:	480a      	ldr	r0, [pc, #40]	@ (800c4f0 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c4c8:	f000 fb88 	bl	800cbdc <USBD_GetEpDesc>
 800c4cc:	b10d      	cbz	r5, 800c4d2 <USBD_CDC_GetFSCfgDesc+0x26>
 800c4ce:	2210      	movs	r2, #16
 800c4d0:	71aa      	strb	r2, [r5, #6]
 800c4d2:	b11c      	cbz	r4, 800c4dc <USBD_CDC_GetFSCfgDesc+0x30>
 800c4d4:	2200      	movs	r2, #0
 800c4d6:	2140      	movs	r1, #64	@ 0x40
 800c4d8:	7121      	strb	r1, [r4, #4]
 800c4da:	7162      	strb	r2, [r4, #5]
 800c4dc:	b118      	cbz	r0, 800c4e6 <USBD_CDC_GetFSCfgDesc+0x3a>
 800c4de:	2200      	movs	r2, #0
 800c4e0:	2140      	movs	r1, #64	@ 0x40
 800c4e2:	7101      	strb	r1, [r0, #4]
 800c4e4:	7142      	strb	r2, [r0, #5]
 800c4e6:	2343      	movs	r3, #67	@ 0x43
 800c4e8:	4801      	ldr	r0, [pc, #4]	@ (800c4f0 <USBD_CDC_GetFSCfgDesc+0x44>)
 800c4ea:	8033      	strh	r3, [r6, #0]
 800c4ec:	bd70      	pop	{r4, r5, r6, pc}
 800c4ee:	bf00      	nop
 800c4f0:	20000040 	.word	0x20000040

0800c4f4 <USBD_CDC_GetHSCfgDesc>:
 800c4f4:	b570      	push	{r4, r5, r6, lr}
 800c4f6:	2182      	movs	r1, #130	@ 0x82
 800c4f8:	4606      	mov	r6, r0
 800c4fa:	480f      	ldr	r0, [pc, #60]	@ (800c538 <USBD_CDC_GetHSCfgDesc+0x44>)
 800c4fc:	f000 fb6e 	bl	800cbdc <USBD_GetEpDesc>
 800c500:	2101      	movs	r1, #1
 800c502:	4605      	mov	r5, r0
 800c504:	480c      	ldr	r0, [pc, #48]	@ (800c538 <USBD_CDC_GetHSCfgDesc+0x44>)
 800c506:	f000 fb69 	bl	800cbdc <USBD_GetEpDesc>
 800c50a:	2181      	movs	r1, #129	@ 0x81
 800c50c:	4604      	mov	r4, r0
 800c50e:	480a      	ldr	r0, [pc, #40]	@ (800c538 <USBD_CDC_GetHSCfgDesc+0x44>)
 800c510:	f000 fb64 	bl	800cbdc <USBD_GetEpDesc>
 800c514:	b10d      	cbz	r5, 800c51a <USBD_CDC_GetHSCfgDesc+0x26>
 800c516:	2210      	movs	r2, #16
 800c518:	71aa      	strb	r2, [r5, #6]
 800c51a:	b11c      	cbz	r4, 800c524 <USBD_CDC_GetHSCfgDesc+0x30>
 800c51c:	2100      	movs	r1, #0
 800c51e:	2202      	movs	r2, #2
 800c520:	7121      	strb	r1, [r4, #4]
 800c522:	7162      	strb	r2, [r4, #5]
 800c524:	b118      	cbz	r0, 800c52e <USBD_CDC_GetHSCfgDesc+0x3a>
 800c526:	2100      	movs	r1, #0
 800c528:	2202      	movs	r2, #2
 800c52a:	7101      	strb	r1, [r0, #4]
 800c52c:	7142      	strb	r2, [r0, #5]
 800c52e:	2343      	movs	r3, #67	@ 0x43
 800c530:	4801      	ldr	r0, [pc, #4]	@ (800c538 <USBD_CDC_GetHSCfgDesc+0x44>)
 800c532:	8033      	strh	r3, [r6, #0]
 800c534:	bd70      	pop	{r4, r5, r6, pc}
 800c536:	bf00      	nop
 800c538:	20000040 	.word	0x20000040

0800c53c <USBD_CDC_DataOut>:
 800c53c:	b538      	push	{r3, r4, r5, lr}
 800c53e:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c542:	33b0      	adds	r3, #176	@ 0xb0
 800c544:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
 800c548:	b195      	cbz	r5, 800c570 <USBD_CDC_DataOut+0x34>
 800c54a:	4604      	mov	r4, r0
 800c54c:	f002 fde2 	bl	800f114 <USBD_LL_GetRxDataSize>
 800c550:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c554:	f8c5 020c 	str.w	r0, [r5, #524]	@ 0x20c
 800c558:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800c55c:	f8d5 0204 	ldr.w	r0, [r5, #516]	@ 0x204
 800c560:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
 800c564:	f505 7103 	add.w	r1, r5, #524	@ 0x20c
 800c568:	68db      	ldr	r3, [r3, #12]
 800c56a:	4798      	blx	r3
 800c56c:	2000      	movs	r0, #0
 800c56e:	bd38      	pop	{r3, r4, r5, pc}
 800c570:	2003      	movs	r0, #3
 800c572:	bd38      	pop	{r3, r4, r5, pc}

0800c574 <USBD_CDC_DataIn>:
 800c574:	b570      	push	{r4, r5, r6, lr}
 800c576:	f8d0 42d4 	ldr.w	r4, [r0, #724]	@ 0x2d4
 800c57a:	f8d0 62c8 	ldr.w	r6, [r0, #712]	@ 0x2c8
 800c57e:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 800c582:	f8d4 52c0 	ldr.w	r5, [r4, #704]	@ 0x2c0
 800c586:	b335      	cbz	r5, 800c5d6 <USBD_CDC_DataIn+0x62>
 800c588:	f001 0c0f 	and.w	ip, r1, #15
 800c58c:	eb0c 0e8c 	add.w	lr, ip, ip, lsl #2
 800c590:	eb00 0c8e 	add.w	ip, r0, lr, lsl #2
 800c594:	460a      	mov	r2, r1
 800c596:	f8dc 3018 	ldr.w	r3, [ip, #24]
 800c59a:	b96b      	cbnz	r3, 800c5b8 <USBD_CDC_DataIn+0x44>
 800c59c:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
 800c5a0:	691b      	ldr	r3, [r3, #16]
 800c5a2:	2100      	movs	r1, #0
 800c5a4:	f8c5 1214 	str.w	r1, [r5, #532]	@ 0x214
 800c5a8:	b123      	cbz	r3, 800c5b4 <USBD_CDC_DataIn+0x40>
 800c5aa:	f8d5 0208 	ldr.w	r0, [r5, #520]	@ 0x208
 800c5ae:	f505 7104 	add.w	r1, r5, #528	@ 0x210
 800c5b2:	4798      	blx	r3
 800c5b4:	2000      	movs	r0, #0
 800c5b6:	bd70      	pop	{r4, r5, r6, pc}
 800c5b8:	eb06 06ce 	add.w	r6, r6, lr, lsl #3
 800c5bc:	6a36      	ldr	r6, [r6, #32]
 800c5be:	fbb3 fef6 	udiv	lr, r3, r6
 800c5c2:	fb06 331e 	mls	r3, r6, lr, r3
 800c5c6:	2b00      	cmp	r3, #0
 800c5c8:	d1e8      	bne.n	800c59c <USBD_CDC_DataIn+0x28>
 800c5ca:	f8cc 3018 	str.w	r3, [ip, #24]
 800c5ce:	461a      	mov	r2, r3
 800c5d0:	f002 fd88 	bl	800f0e4 <USBD_LL_Transmit>
 800c5d4:	e7ee      	b.n	800c5b4 <USBD_CDC_DataIn+0x40>
 800c5d6:	2003      	movs	r0, #3
 800c5d8:	bd70      	pop	{r4, r5, r6, pc}
 800c5da:	bf00      	nop

0800c5dc <USBD_CDC_Setup>:
 800c5dc:	b570      	push	{r4, r5, r6, lr}
 800c5de:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c5e2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c5e6:	b082      	sub	sp, #8
 800c5e8:	f8d3 62c0 	ldr.w	r6, [r3, #704]	@ 0x2c0
 800c5ec:	2200      	movs	r2, #0
 800c5ee:	f88d 2005 	strb.w	r2, [sp, #5]
 800c5f2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c5f6:	b166      	cbz	r6, 800c612 <USBD_CDC_Setup+0x36>
 800c5f8:	f891 c000 	ldrb.w	ip, [r1]
 800c5fc:	f01c 0260 	ands.w	r2, ip, #96	@ 0x60
 800c600:	4604      	mov	r4, r0
 800c602:	460d      	mov	r5, r1
 800c604:	d01e      	beq.n	800c644 <USBD_CDC_Setup+0x68>
 800c606:	2a20      	cmp	r2, #32
 800c608:	d006      	beq.n	800c618 <USBD_CDC_Setup+0x3c>
 800c60a:	4629      	mov	r1, r5
 800c60c:	4620      	mov	r0, r4
 800c60e:	f000 fdb9 	bl	800d184 <USBD_CtlError>
 800c612:	2003      	movs	r0, #3
 800c614:	b002      	add	sp, #8
 800c616:	bd70      	pop	{r4, r5, r6, pc}
 800c618:	88ca      	ldrh	r2, [r1, #6]
 800c61a:	f891 e001 	ldrb.w	lr, [r1, #1]
 800c61e:	b37a      	cbz	r2, 800c680 <USBD_CDC_Setup+0xa4>
 800c620:	f01c 0f80 	tst.w	ip, #128	@ 0x80
 800c624:	d04c      	beq.n	800c6c0 <USBD_CDC_Setup+0xe4>
 800c626:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c62a:	4631      	mov	r1, r6
 800c62c:	689b      	ldr	r3, [r3, #8]
 800c62e:	4670      	mov	r0, lr
 800c630:	4798      	blx	r3
 800c632:	88ea      	ldrh	r2, [r5, #6]
 800c634:	2a07      	cmp	r2, #7
 800c636:	4631      	mov	r1, r6
 800c638:	bf28      	it	cs
 800c63a:	2207      	movcs	r2, #7
 800c63c:	4620      	mov	r0, r4
 800c63e:	f000 fdd9 	bl	800d1f4 <USBD_CtlSendData>
 800c642:	e022      	b.n	800c68a <USBD_CDC_Setup+0xae>
 800c644:	784b      	ldrb	r3, [r1, #1]
 800c646:	2b0b      	cmp	r3, #11
 800c648:	d8df      	bhi.n	800c60a <USBD_CDC_Setup+0x2e>
 800c64a:	a201      	add	r2, pc, #4	@ (adr r2, 800c650 <USBD_CDC_Setup+0x74>)
 800c64c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c650:	0800c699 	.word	0x0800c699
 800c654:	0800c68b 	.word	0x0800c68b
 800c658:	0800c60b 	.word	0x0800c60b
 800c65c:	0800c60b 	.word	0x0800c60b
 800c660:	0800c60b 	.word	0x0800c60b
 800c664:	0800c60b 	.word	0x0800c60b
 800c668:	0800c60b 	.word	0x0800c60b
 800c66c:	0800c60b 	.word	0x0800c60b
 800c670:	0800c60b 	.word	0x0800c60b
 800c674:	0800c60b 	.word	0x0800c60b
 800c678:	0800c6ad 	.word	0x0800c6ad
 800c67c:	0800c68f 	.word	0x0800c68f
 800c680:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c684:	4670      	mov	r0, lr
 800c686:	689b      	ldr	r3, [r3, #8]
 800c688:	4798      	blx	r3
 800c68a:	2000      	movs	r0, #0
 800c68c:	e7c2      	b.n	800c614 <USBD_CDC_Setup+0x38>
 800c68e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c692:	2b03      	cmp	r3, #3
 800c694:	d0f9      	beq.n	800c68a <USBD_CDC_Setup+0xae>
 800c696:	e7b8      	b.n	800c60a <USBD_CDC_Setup+0x2e>
 800c698:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c69c:	2b03      	cmp	r3, #3
 800c69e:	d1b4      	bne.n	800c60a <USBD_CDC_Setup+0x2e>
 800c6a0:	2202      	movs	r2, #2
 800c6a2:	f10d 0106 	add.w	r1, sp, #6
 800c6a6:	f000 fda5 	bl	800d1f4 <USBD_CtlSendData>
 800c6aa:	e7ee      	b.n	800c68a <USBD_CDC_Setup+0xae>
 800c6ac:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800c6b0:	2b03      	cmp	r3, #3
 800c6b2:	d1aa      	bne.n	800c60a <USBD_CDC_Setup+0x2e>
 800c6b4:	2201      	movs	r2, #1
 800c6b6:	f10d 0105 	add.w	r1, sp, #5
 800c6ba:	f000 fd9b 	bl	800d1f4 <USBD_CtlSendData>
 800c6be:	e7e4      	b.n	800c68a <USBD_CDC_Setup+0xae>
 800c6c0:	2a40      	cmp	r2, #64	@ 0x40
 800c6c2:	bf28      	it	cs
 800c6c4:	2240      	movcs	r2, #64	@ 0x40
 800c6c6:	f886 e200 	strb.w	lr, [r6, #512]	@ 0x200
 800c6ca:	f886 2201 	strb.w	r2, [r6, #513]	@ 0x201
 800c6ce:	4631      	mov	r1, r6
 800c6d0:	f000 fda6 	bl	800d220 <USBD_CtlPrepareRx>
 800c6d4:	e7d9      	b.n	800c68a <USBD_CDC_Setup+0xae>
 800c6d6:	bf00      	nop

0800c6d8 <USBD_CDC_DeInit>:
 800c6d8:	b538      	push	{r3, r4, r5, lr}
 800c6da:	4604      	mov	r4, r0
 800c6dc:	2500      	movs	r5, #0
 800c6de:	2181      	movs	r1, #129	@ 0x81
 800c6e0:	f002 fcbc 	bl	800f05c <USBD_LL_CloseEP>
 800c6e4:	2101      	movs	r1, #1
 800c6e6:	8725      	strh	r5, [r4, #56]	@ 0x38
 800c6e8:	4620      	mov	r0, r4
 800c6ea:	f002 fcb7 	bl	800f05c <USBD_LL_CloseEP>
 800c6ee:	2182      	movs	r1, #130	@ 0x82
 800c6f0:	f8a4 5178 	strh.w	r5, [r4, #376]	@ 0x178
 800c6f4:	4620      	mov	r0, r4
 800c6f6:	f002 fcb1 	bl	800f05c <USBD_LL_CloseEP>
 800c6fa:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c6fe:	64e5      	str	r5, [r4, #76]	@ 0x4c
 800c700:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800c704:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
 800c708:	b18a      	cbz	r2, 800c72e <USBD_CDC_DeInit+0x56>
 800c70a:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c70e:	685b      	ldr	r3, [r3, #4]
 800c710:	4798      	blx	r3
 800c712:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c716:	33b0      	adds	r3, #176	@ 0xb0
 800c718:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800c71c:	f002 fd2c 	bl	800f178 <USBD_static_free>
 800c720:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c724:	33b0      	adds	r3, #176	@ 0xb0
 800c726:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c72a:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
 800c72e:	2000      	movs	r0, #0
 800c730:	bd38      	pop	{r3, r4, r5, pc}
 800c732:	bf00      	nop

0800c734 <USBD_CDC_Init>:
 800c734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c736:	4604      	mov	r4, r0
 800c738:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 800c73c:	f002 fd18 	bl	800f170 <USBD_static_malloc>
 800c740:	4605      	mov	r5, r0
 800c742:	2800      	cmp	r0, #0
 800c744:	d05a      	beq.n	800c7fc <USBD_CDC_Init+0xc8>
 800c746:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 800c74a:	2100      	movs	r1, #0
 800c74c:	f003 fd53 	bl	80101f6 <memset>
 800c750:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c754:	33b0      	adds	r3, #176	@ 0xb0
 800c756:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c75a:	7c23      	ldrb	r3, [r4, #16]
 800c75c:	f8c4 52bc 	str.w	r5, [r4, #700]	@ 0x2bc
 800c760:	b3b3      	cbz	r3, 800c7d0 <USBD_CDC_Init+0x9c>
 800c762:	2340      	movs	r3, #64	@ 0x40
 800c764:	2202      	movs	r2, #2
 800c766:	2181      	movs	r1, #129	@ 0x81
 800c768:	4620      	mov	r0, r4
 800c76a:	f002 fc69 	bl	800f040 <USBD_LL_OpenEP>
 800c76e:	2101      	movs	r1, #1
 800c770:	2340      	movs	r3, #64	@ 0x40
 800c772:	8721      	strh	r1, [r4, #56]	@ 0x38
 800c774:	2202      	movs	r2, #2
 800c776:	4620      	mov	r0, r4
 800c778:	f002 fc62 	bl	800f040 <USBD_LL_OpenEP>
 800c77c:	2701      	movs	r7, #1
 800c77e:	2310      	movs	r3, #16
 800c780:	2203      	movs	r2, #3
 800c782:	f8a4 304e 	strh.w	r3, [r4, #78]	@ 0x4e
 800c786:	2182      	movs	r1, #130	@ 0x82
 800c788:	2308      	movs	r3, #8
 800c78a:	f8a4 7178 	strh.w	r7, [r4, #376]	@ 0x178
 800c78e:	4620      	mov	r0, r4
 800c790:	f002 fc56 	bl	800f040 <USBD_LL_OpenEP>
 800c794:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c798:	f8a4 704c 	strh.w	r7, [r4, #76]	@ 0x4c
 800c79c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800c7a0:	2600      	movs	r6, #0
 800c7a2:	f8d3 32c4 	ldr.w	r3, [r3, #708]	@ 0x2c4
 800c7a6:	f8c5 6204 	str.w	r6, [r5, #516]	@ 0x204
 800c7aa:	681b      	ldr	r3, [r3, #0]
 800c7ac:	4798      	blx	r3
 800c7ae:	f8d5 2204 	ldr.w	r2, [r5, #516]	@ 0x204
 800c7b2:	f8c5 6214 	str.w	r6, [r5, #532]	@ 0x214
 800c7b6:	f8c5 6218 	str.w	r6, [r5, #536]	@ 0x218
 800c7ba:	b322      	cbz	r2, 800c806 <USBD_CDC_Init+0xd2>
 800c7bc:	7c23      	ldrb	r3, [r4, #16]
 800c7be:	b9bb      	cbnz	r3, 800c7f0 <USBD_CDC_Init+0xbc>
 800c7c0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800c7c4:	4639      	mov	r1, r7
 800c7c6:	4620      	mov	r0, r4
 800c7c8:	f002 fc98 	bl	800f0fc <USBD_LL_PrepareReceive>
 800c7cc:	2000      	movs	r0, #0
 800c7ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c7d0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800c7d4:	2202      	movs	r2, #2
 800c7d6:	2181      	movs	r1, #129	@ 0x81
 800c7d8:	4620      	mov	r0, r4
 800c7da:	f002 fc31 	bl	800f040 <USBD_LL_OpenEP>
 800c7de:	2101      	movs	r1, #1
 800c7e0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800c7e4:	8721      	strh	r1, [r4, #56]	@ 0x38
 800c7e6:	2202      	movs	r2, #2
 800c7e8:	4620      	mov	r0, r4
 800c7ea:	f002 fc29 	bl	800f040 <USBD_LL_OpenEP>
 800c7ee:	e7c5      	b.n	800c77c <USBD_CDC_Init+0x48>
 800c7f0:	2340      	movs	r3, #64	@ 0x40
 800c7f2:	4639      	mov	r1, r7
 800c7f4:	4620      	mov	r0, r4
 800c7f6:	f002 fc81 	bl	800f0fc <USBD_LL_PrepareReceive>
 800c7fa:	e7e7      	b.n	800c7cc <USBD_CDC_Init+0x98>
 800c7fc:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800c800:	33b0      	adds	r3, #176	@ 0xb0
 800c802:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
 800c806:	2002      	movs	r0, #2
 800c808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c80a:	bf00      	nop

0800c80c <USBD_CDC_GetOtherSpeedCfgDesc>:
 800c80c:	b570      	push	{r4, r5, r6, lr}
 800c80e:	2182      	movs	r1, #130	@ 0x82
 800c810:	4606      	mov	r6, r0
 800c812:	480f      	ldr	r0, [pc, #60]	@ (800c850 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800c814:	f000 f9e2 	bl	800cbdc <USBD_GetEpDesc>
 800c818:	2101      	movs	r1, #1
 800c81a:	4605      	mov	r5, r0
 800c81c:	480c      	ldr	r0, [pc, #48]	@ (800c850 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800c81e:	f000 f9dd 	bl	800cbdc <USBD_GetEpDesc>
 800c822:	2181      	movs	r1, #129	@ 0x81
 800c824:	4604      	mov	r4, r0
 800c826:	480a      	ldr	r0, [pc, #40]	@ (800c850 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800c828:	f000 f9d8 	bl	800cbdc <USBD_GetEpDesc>
 800c82c:	b10d      	cbz	r5, 800c832 <USBD_CDC_GetOtherSpeedCfgDesc+0x26>
 800c82e:	2210      	movs	r2, #16
 800c830:	71aa      	strb	r2, [r5, #6]
 800c832:	b11c      	cbz	r4, 800c83c <USBD_CDC_GetOtherSpeedCfgDesc+0x30>
 800c834:	2200      	movs	r2, #0
 800c836:	2140      	movs	r1, #64	@ 0x40
 800c838:	7121      	strb	r1, [r4, #4]
 800c83a:	7162      	strb	r2, [r4, #5]
 800c83c:	b118      	cbz	r0, 800c846 <USBD_CDC_GetOtherSpeedCfgDesc+0x3a>
 800c83e:	2200      	movs	r2, #0
 800c840:	2140      	movs	r1, #64	@ 0x40
 800c842:	7101      	strb	r1, [r0, #4]
 800c844:	7142      	strb	r2, [r0, #5]
 800c846:	2343      	movs	r3, #67	@ 0x43
 800c848:	4801      	ldr	r0, [pc, #4]	@ (800c850 <USBD_CDC_GetOtherSpeedCfgDesc+0x44>)
 800c84a:	8033      	strh	r3, [r6, #0]
 800c84c:	bd70      	pop	{r4, r5, r6, pc}
 800c84e:	bf00      	nop
 800c850:	20000040 	.word	0x20000040

0800c854 <USBD_CDC_RegisterInterface>:
 800c854:	4603      	mov	r3, r0
 800c856:	b139      	cbz	r1, 800c868 <USBD_CDC_RegisterInterface+0x14>
 800c858:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800c85c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800c860:	2000      	movs	r0, #0
 800c862:	f8c3 12c4 	str.w	r1, [r3, #708]	@ 0x2c4
 800c866:	4770      	bx	lr
 800c868:	2003      	movs	r0, #3
 800c86a:	4770      	bx	lr

0800c86c <USBD_CDC_SetTxBuffer>:
 800c86c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c870:	33b0      	adds	r3, #176	@ 0xb0
 800c872:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800c876:	b12b      	cbz	r3, 800c884 <USBD_CDC_SetTxBuffer+0x18>
 800c878:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
 800c87c:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 800c880:	2000      	movs	r0, #0
 800c882:	4770      	bx	lr
 800c884:	2003      	movs	r0, #3
 800c886:	4770      	bx	lr

0800c888 <USBD_CDC_SetRxBuffer>:
 800c888:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c88c:	33b0      	adds	r3, #176	@ 0xb0
 800c88e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800c892:	b11b      	cbz	r3, 800c89c <USBD_CDC_SetRxBuffer+0x14>
 800c894:	f8c3 1204 	str.w	r1, [r3, #516]	@ 0x204
 800c898:	2000      	movs	r0, #0
 800c89a:	4770      	bx	lr
 800c89c:	2003      	movs	r0, #3
 800c89e:	4770      	bx	lr

0800c8a0 <USBD_CDC_TransmitPacket>:
 800c8a0:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800c8a4:	33b0      	adds	r3, #176	@ 0xb0
 800c8a6:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800c8aa:	b192      	cbz	r2, 800c8d2 <USBD_CDC_TransmitPacket+0x32>
 800c8ac:	b510      	push	{r4, lr}
 800c8ae:	f8d2 4214 	ldr.w	r4, [r2, #532]	@ 0x214
 800c8b2:	b10c      	cbz	r4, 800c8b8 <USBD_CDC_TransmitPacket+0x18>
 800c8b4:	2001      	movs	r0, #1
 800c8b6:	bd10      	pop	{r4, pc}
 800c8b8:	2301      	movs	r3, #1
 800c8ba:	f8c2 3214 	str.w	r3, [r2, #532]	@ 0x214
 800c8be:	f8d2 3210 	ldr.w	r3, [r2, #528]	@ 0x210
 800c8c2:	f8d2 2208 	ldr.w	r2, [r2, #520]	@ 0x208
 800c8c6:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800c8c8:	2181      	movs	r1, #129	@ 0x81
 800c8ca:	f002 fc0b 	bl	800f0e4 <USBD_LL_Transmit>
 800c8ce:	4620      	mov	r0, r4
 800c8d0:	bd10      	pop	{r4, pc}
 800c8d2:	2003      	movs	r0, #3
 800c8d4:	4770      	bx	lr
 800c8d6:	bf00      	nop

0800c8d8 <USBD_CDC_ReceivePacket>:
 800c8d8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800c8dc:	32b0      	adds	r2, #176	@ 0xb0
 800c8de:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800c8e2:	b18a      	cbz	r2, 800c908 <USBD_CDC_ReceivePacket+0x30>
 800c8e4:	b508      	push	{r3, lr}
 800c8e6:	7c03      	ldrb	r3, [r0, #16]
 800c8e8:	f8d2 2204 	ldr.w	r2, [r2, #516]	@ 0x204
 800c8ec:	b12b      	cbz	r3, 800c8fa <USBD_CDC_ReceivePacket+0x22>
 800c8ee:	2340      	movs	r3, #64	@ 0x40
 800c8f0:	2101      	movs	r1, #1
 800c8f2:	f002 fc03 	bl	800f0fc <USBD_LL_PrepareReceive>
 800c8f6:	2000      	movs	r0, #0
 800c8f8:	bd08      	pop	{r3, pc}
 800c8fa:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800c8fe:	2101      	movs	r1, #1
 800c900:	f002 fbfc 	bl	800f0fc <USBD_LL_PrepareReceive>
 800c904:	2000      	movs	r0, #0
 800c906:	bd08      	pop	{r3, pc}
 800c908:	2003      	movs	r0, #3
 800c90a:	4770      	bx	lr

0800c90c <USBD_Init>:
 800c90c:	b178      	cbz	r0, 800c92e <USBD_Init+0x22>
 800c90e:	2300      	movs	r3, #0
 800c910:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
 800c914:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
 800c918:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0
 800c91c:	b109      	cbz	r1, 800c922 <USBD_Init+0x16>
 800c91e:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
 800c922:	2301      	movs	r3, #1
 800c924:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800c928:	7002      	strb	r2, [r0, #0]
 800c92a:	f002 bb37 	b.w	800ef9c <USBD_LL_Init>
 800c92e:	2003      	movs	r0, #3
 800c930:	4770      	bx	lr
 800c932:	bf00      	nop

0800c934 <USBD_RegisterClass>:
 800c934:	b510      	push	{r4, lr}
 800c936:	b082      	sub	sp, #8
 800c938:	2300      	movs	r3, #0
 800c93a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c93e:	b189      	cbz	r1, 800c964 <USBD_RegisterClass+0x30>
 800c940:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800c942:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
 800c946:	4604      	mov	r4, r0
 800c948:	b123      	cbz	r3, 800c954 <USBD_RegisterClass+0x20>
 800c94a:	f10d 0006 	add.w	r0, sp, #6
 800c94e:	4798      	blx	r3
 800c950:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
 800c954:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800c958:	2000      	movs	r0, #0
 800c95a:	3301      	adds	r3, #1
 800c95c:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
 800c960:	b002      	add	sp, #8
 800c962:	bd10      	pop	{r4, pc}
 800c964:	2003      	movs	r0, #3
 800c966:	b002      	add	sp, #8
 800c968:	bd10      	pop	{r4, pc}
 800c96a:	bf00      	nop

0800c96c <USBD_Start>:
 800c96c:	f002 bb5c 	b.w	800f028 <USBD_LL_Start>

0800c970 <USBD_SetClassConfig>:
 800c970:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800c974:	b10b      	cbz	r3, 800c97a <USBD_SetClassConfig+0xa>
 800c976:	681b      	ldr	r3, [r3, #0]
 800c978:	4718      	bx	r3
 800c97a:	4618      	mov	r0, r3
 800c97c:	4770      	bx	lr
 800c97e:	bf00      	nop

0800c980 <USBD_ClrClassConfig>:
 800c980:	b508      	push	{r3, lr}
 800c982:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800c986:	685b      	ldr	r3, [r3, #4]
 800c988:	4798      	blx	r3
 800c98a:	2800      	cmp	r0, #0
 800c98c:	bf18      	it	ne
 800c98e:	2003      	movne	r0, #3
 800c990:	bd08      	pop	{r3, pc}
 800c992:	bf00      	nop

0800c994 <USBD_LL_SetupStage>:
 800c994:	b538      	push	{r3, r4, r5, lr}
 800c996:	4604      	mov	r4, r0
 800c998:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 800c99c:	4628      	mov	r0, r5
 800c99e:	f000 fbe5 	bl	800d16c <USBD_ParseSetupRequest>
 800c9a2:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
 800c9a6:	f8b4 22b0 	ldrh.w	r2, [r4, #688]	@ 0x2b0
 800c9aa:	f8c4 2298 	str.w	r2, [r4, #664]	@ 0x298
 800c9ae:	2301      	movs	r3, #1
 800c9b0:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
 800c9b4:	f001 031f 	and.w	r3, r1, #31
 800c9b8:	2b01      	cmp	r3, #1
 800c9ba:	d00e      	beq.n	800c9da <USBD_LL_SetupStage+0x46>
 800c9bc:	2b02      	cmp	r3, #2
 800c9be:	d006      	beq.n	800c9ce <USBD_LL_SetupStage+0x3a>
 800c9c0:	b98b      	cbnz	r3, 800c9e6 <USBD_LL_SetupStage+0x52>
 800c9c2:	4629      	mov	r1, r5
 800c9c4:	4620      	mov	r0, r4
 800c9c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9ca:	f000 b91d 	b.w	800cc08 <USBD_StdDevReq>
 800c9ce:	4629      	mov	r1, r5
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9d6:	f000 bb19 	b.w	800d00c <USBD_StdEPReq>
 800c9da:	4629      	mov	r1, r5
 800c9dc:	4620      	mov	r0, r4
 800c9de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9e2:	f000 bad3 	b.w	800cf8c <USBD_StdItfReq>
 800c9e6:	4620      	mov	r0, r4
 800c9e8:	f001 0180 	and.w	r1, r1, #128	@ 0x80
 800c9ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9f0:	f002 bb40 	b.w	800f074 <USBD_LL_StallEP>

0800c9f4 <USBD_LL_DataOutStage>:
 800c9f4:	b510      	push	{r4, lr}
 800c9f6:	4604      	mov	r4, r0
 800c9f8:	b931      	cbnz	r1, 800ca08 <USBD_LL_DataOutStage+0x14>
 800c9fa:	4694      	mov	ip, r2
 800c9fc:	f8d0 2294 	ldr.w	r2, [r0, #660]	@ 0x294
 800ca00:	2a03      	cmp	r2, #3
 800ca02:	d010      	beq.n	800ca26 <USBD_LL_DataOutStage+0x32>
 800ca04:	2000      	movs	r0, #0
 800ca06:	bd10      	pop	{r4, pc}
 800ca08:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ca0c:	2b03      	cmp	r3, #3
 800ca0e:	d1f9      	bne.n	800ca04 <USBD_LL_DataOutStage+0x10>
 800ca10:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ca14:	699b      	ldr	r3, [r3, #24]
 800ca16:	2b00      	cmp	r3, #0
 800ca18:	d0f4      	beq.n	800ca04 <USBD_LL_DataOutStage+0x10>
 800ca1a:	2200      	movs	r2, #0
 800ca1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca20:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
 800ca24:	4718      	bx	r3
 800ca26:	460b      	mov	r3, r1
 800ca28:	e9d0 1257 	ldrd	r1, r2, [r0, #348]	@ 0x15c
 800ca2c:	4291      	cmp	r1, r2
 800ca2e:	d808      	bhi.n	800ca42 <USBD_LL_DataOutStage+0x4e>
 800ca30:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ca34:	2a03      	cmp	r2, #3
 800ca36:	d00e      	beq.n	800ca56 <USBD_LL_DataOutStage+0x62>
 800ca38:	4620      	mov	r0, r4
 800ca3a:	f000 fc07 	bl	800d24c <USBD_CtlSendStatus>
 800ca3e:	2000      	movs	r0, #0
 800ca40:	bd10      	pop	{r4, pc}
 800ca42:	1a89      	subs	r1, r1, r2
 800ca44:	428a      	cmp	r2, r1
 800ca46:	bf28      	it	cs
 800ca48:	460a      	movcs	r2, r1
 800ca4a:	f8c0 115c 	str.w	r1, [r0, #348]	@ 0x15c
 800ca4e:	4661      	mov	r1, ip
 800ca50:	f000 fbf4 	bl	800d23c <USBD_CtlContinueRx>
 800ca54:	e7d6      	b.n	800ca04 <USBD_LL_DataOutStage+0x10>
 800ca56:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800ca5a:	6912      	ldr	r2, [r2, #16]
 800ca5c:	2a00      	cmp	r2, #0
 800ca5e:	d0eb      	beq.n	800ca38 <USBD_LL_DataOutStage+0x44>
 800ca60:	f8c0 32d4 	str.w	r3, [r0, #724]	@ 0x2d4
 800ca64:	4790      	blx	r2
 800ca66:	e7e7      	b.n	800ca38 <USBD_LL_DataOutStage+0x44>

0800ca68 <USBD_LL_DataInStage>:
 800ca68:	b570      	push	{r4, r5, r6, lr}
 800ca6a:	4604      	mov	r4, r0
 800ca6c:	b961      	cbnz	r1, 800ca88 <USBD_LL_DataInStage+0x20>
 800ca6e:	4613      	mov	r3, r2
 800ca70:	f8d0 2294 	ldr.w	r2, [r0, #660]	@ 0x294
 800ca74:	2a02      	cmp	r2, #2
 800ca76:	d016      	beq.n	800caa6 <USBD_LL_DataInStage+0x3e>
 800ca78:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800ca7c:	b113      	cbz	r3, 800ca84 <USBD_LL_DataInStage+0x1c>
 800ca7e:	2300      	movs	r3, #0
 800ca80:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
 800ca84:	2000      	movs	r0, #0
 800ca86:	bd70      	pop	{r4, r5, r6, pc}
 800ca88:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ca8c:	2b03      	cmp	r3, #3
 800ca8e:	d1f9      	bne.n	800ca84 <USBD_LL_DataInStage+0x1c>
 800ca90:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ca94:	695b      	ldr	r3, [r3, #20]
 800ca96:	2b00      	cmp	r3, #0
 800ca98:	d0f4      	beq.n	800ca84 <USBD_LL_DataInStage+0x1c>
 800ca9a:	2200      	movs	r2, #0
 800ca9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800caa0:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
 800caa4:	4718      	bx	r3
 800caa6:	e9d0 2607 	ldrd	r2, r6, [r0, #28]
 800caaa:	42b2      	cmp	r2, r6
 800caac:	460d      	mov	r5, r1
 800caae:	d810      	bhi.n	800cad2 <USBD_LL_DataInStage+0x6a>
 800cab0:	d01b      	beq.n	800caea <USBD_LL_DataInStage+0x82>
 800cab2:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800cab6:	2b03      	cmp	r3, #3
 800cab8:	d024      	beq.n	800cb04 <USBD_LL_DataInStage+0x9c>
 800caba:	2180      	movs	r1, #128	@ 0x80
 800cabc:	4620      	mov	r0, r4
 800cabe:	f002 fad9 	bl	800f074 <USBD_LL_StallEP>
 800cac2:	4620      	mov	r0, r4
 800cac4:	f000 fbce 	bl	800d264 <USBD_CtlReceiveStatus>
 800cac8:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800cacc:	2b00      	cmp	r3, #0
 800cace:	d0d9      	beq.n	800ca84 <USBD_LL_DataInStage+0x1c>
 800cad0:	e7d5      	b.n	800ca7e <USBD_LL_DataInStage+0x16>
 800cad2:	1b92      	subs	r2, r2, r6
 800cad4:	61c2      	str	r2, [r0, #28]
 800cad6:	4619      	mov	r1, r3
 800cad8:	f000 fb9a 	bl	800d210 <USBD_CtlContinueSendData>
 800cadc:	462b      	mov	r3, r5
 800cade:	462a      	mov	r2, r5
 800cae0:	4629      	mov	r1, r5
 800cae2:	4620      	mov	r0, r4
 800cae4:	f002 fb0a 	bl	800f0fc <USBD_LL_PrepareReceive>
 800cae8:	e7c6      	b.n	800ca78 <USBD_LL_DataInStage+0x10>
 800caea:	6983      	ldr	r3, [r0, #24]
 800caec:	429a      	cmp	r2, r3
 800caee:	d8e0      	bhi.n	800cab2 <USBD_LL_DataInStage+0x4a>
 800caf0:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 800caf4:	4293      	cmp	r3, r2
 800caf6:	d2dc      	bcs.n	800cab2 <USBD_LL_DataInStage+0x4a>
 800caf8:	460a      	mov	r2, r1
 800cafa:	f000 fb89 	bl	800d210 <USBD_CtlContinueSendData>
 800cafe:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800cb02:	e7eb      	b.n	800cadc <USBD_LL_DataInStage+0x74>
 800cb04:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800cb08:	68db      	ldr	r3, [r3, #12]
 800cb0a:	2b00      	cmp	r3, #0
 800cb0c:	d0d5      	beq.n	800caba <USBD_LL_DataInStage+0x52>
 800cb0e:	2200      	movs	r2, #0
 800cb10:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
 800cb14:	4620      	mov	r0, r4
 800cb16:	4798      	blx	r3
 800cb18:	e7cf      	b.n	800caba <USBD_LL_DataInStage+0x52>
 800cb1a:	bf00      	nop

0800cb1c <USBD_LL_Reset>:
 800cb1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb1e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cb22:	2100      	movs	r1, #0
 800cb24:	2201      	movs	r2, #1
 800cb26:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
 800cb2a:	4604      	mov	r4, r0
 800cb2c:	6041      	str	r1, [r0, #4]
 800cb2e:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800cb32:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
 800cb36:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
 800cb3a:	b11b      	cbz	r3, 800cb44 <USBD_LL_Reset+0x28>
 800cb3c:	685b      	ldr	r3, [r3, #4]
 800cb3e:	b10b      	cbz	r3, 800cb44 <USBD_LL_Reset+0x28>
 800cb40:	4798      	blx	r3
 800cb42:	b9b0      	cbnz	r0, 800cb72 <USBD_LL_Reset+0x56>
 800cb44:	2700      	movs	r7, #0
 800cb46:	2200      	movs	r2, #0
 800cb48:	2540      	movs	r5, #64	@ 0x40
 800cb4a:	4611      	mov	r1, r2
 800cb4c:	2601      	movs	r6, #1
 800cb4e:	2340      	movs	r3, #64	@ 0x40
 800cb50:	4620      	mov	r0, r4
 800cb52:	f002 fa75 	bl	800f040 <USBD_LL_OpenEP>
 800cb56:	f8a4 6164 	strh.w	r6, [r4, #356]	@ 0x164
 800cb5a:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
 800cb5e:	462b      	mov	r3, r5
 800cb60:	2200      	movs	r2, #0
 800cb62:	2180      	movs	r1, #128	@ 0x80
 800cb64:	4620      	mov	r0, r4
 800cb66:	f002 fa6b 	bl	800f040 <USBD_LL_OpenEP>
 800cb6a:	84a6      	strh	r6, [r4, #36]	@ 0x24
 800cb6c:	6225      	str	r5, [r4, #32]
 800cb6e:	4638      	mov	r0, r7
 800cb70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb72:	2703      	movs	r7, #3
 800cb74:	e7e7      	b.n	800cb46 <USBD_LL_Reset+0x2a>
 800cb76:	bf00      	nop

0800cb78 <USBD_LL_SetSpeed>:
 800cb78:	7401      	strb	r1, [r0, #16]
 800cb7a:	2000      	movs	r0, #0
 800cb7c:	4770      	bx	lr
 800cb7e:	bf00      	nop

0800cb80 <USBD_LL_Suspend>:
 800cb80:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cb84:	2b04      	cmp	r3, #4
 800cb86:	d004      	beq.n	800cb92 <USBD_LL_Suspend+0x12>
 800cb88:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cb8c:	b2db      	uxtb	r3, r3
 800cb8e:	f880 329d 	strb.w	r3, [r0, #669]	@ 0x29d
 800cb92:	2304      	movs	r3, #4
 800cb94:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800cb98:	2000      	movs	r0, #0
 800cb9a:	4770      	bx	lr

0800cb9c <USBD_LL_Resume>:
 800cb9c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cba0:	2b04      	cmp	r3, #4
 800cba2:	d104      	bne.n	800cbae <USBD_LL_Resume+0x12>
 800cba4:	f890 329d 	ldrb.w	r3, [r0, #669]	@ 0x29d
 800cba8:	b2db      	uxtb	r3, r3
 800cbaa:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800cbae:	2000      	movs	r0, #0
 800cbb0:	4770      	bx	lr
 800cbb2:	bf00      	nop

0800cbb4 <USBD_LL_SOF>:
 800cbb4:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800cbb8:	2a03      	cmp	r2, #3
 800cbba:	d001      	beq.n	800cbc0 <USBD_LL_SOF+0xc>
 800cbbc:	2000      	movs	r0, #0
 800cbbe:	4770      	bx	lr
 800cbc0:	b508      	push	{r3, lr}
 800cbc2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800cbc6:	b113      	cbz	r3, 800cbce <USBD_LL_SOF+0x1a>
 800cbc8:	69db      	ldr	r3, [r3, #28]
 800cbca:	b103      	cbz	r3, 800cbce <USBD_LL_SOF+0x1a>
 800cbcc:	4798      	blx	r3
 800cbce:	2000      	movs	r0, #0
 800cbd0:	bd08      	pop	{r3, pc}
 800cbd2:	bf00      	nop

0800cbd4 <USBD_CoreFindIF>:
 800cbd4:	2000      	movs	r0, #0
 800cbd6:	4770      	bx	lr

0800cbd8 <USBD_CoreFindEP>:
 800cbd8:	2000      	movs	r0, #0
 800cbda:	4770      	bx	lr

0800cbdc <USBD_GetEpDesc>:
 800cbdc:	7802      	ldrb	r2, [r0, #0]
 800cbde:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 800cbe2:	4594      	cmp	ip, r2
 800cbe4:	4613      	mov	r3, r2
 800cbe6:	d803      	bhi.n	800cbf0 <USBD_GetEpDesc+0x14>
 800cbe8:	e00c      	b.n	800cc04 <USBD_GetEpDesc+0x28>
 800cbea:	459c      	cmp	ip, r3
 800cbec:	d90a      	bls.n	800cc04 <USBD_GetEpDesc+0x28>
 800cbee:	7802      	ldrb	r2, [r0, #0]
 800cbf0:	4410      	add	r0, r2
 800cbf2:	4413      	add	r3, r2
 800cbf4:	7842      	ldrb	r2, [r0, #1]
 800cbf6:	2a05      	cmp	r2, #5
 800cbf8:	b29b      	uxth	r3, r3
 800cbfa:	d1f6      	bne.n	800cbea <USBD_GetEpDesc+0xe>
 800cbfc:	7882      	ldrb	r2, [r0, #2]
 800cbfe:	428a      	cmp	r2, r1
 800cc00:	d1f3      	bne.n	800cbea <USBD_GetEpDesc+0xe>
 800cc02:	4770      	bx	lr
 800cc04:	2000      	movs	r0, #0
 800cc06:	4770      	bx	lr

0800cc08 <USBD_StdDevReq>:
 800cc08:	b570      	push	{r4, r5, r6, lr}
 800cc0a:	780b      	ldrb	r3, [r1, #0]
 800cc0c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800cc10:	2b20      	cmp	r3, #32
 800cc12:	b082      	sub	sp, #8
 800cc14:	460d      	mov	r5, r1
 800cc16:	4604      	mov	r4, r0
 800cc18:	d028      	beq.n	800cc6c <USBD_StdDevReq+0x64>
 800cc1a:	2b40      	cmp	r3, #64	@ 0x40
 800cc1c:	d026      	beq.n	800cc6c <USBD_StdDevReq+0x64>
 800cc1e:	b15b      	cbz	r3, 800cc38 <USBD_StdDevReq+0x30>
 800cc20:	2180      	movs	r1, #128	@ 0x80
 800cc22:	4620      	mov	r0, r4
 800cc24:	f002 fa26 	bl	800f074 <USBD_LL_StallEP>
 800cc28:	2100      	movs	r1, #0
 800cc2a:	4620      	mov	r0, r4
 800cc2c:	f002 fa22 	bl	800f074 <USBD_LL_StallEP>
 800cc30:	2500      	movs	r5, #0
 800cc32:	4628      	mov	r0, r5
 800cc34:	b002      	add	sp, #8
 800cc36:	bd70      	pop	{r4, r5, r6, pc}
 800cc38:	784b      	ldrb	r3, [r1, #1]
 800cc3a:	2b09      	cmp	r3, #9
 800cc3c:	d8f0      	bhi.n	800cc20 <USBD_StdDevReq+0x18>
 800cc3e:	a201      	add	r2, pc, #4	@ (adr r2, 800cc44 <USBD_StdDevReq+0x3c>)
 800cc40:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cc44:	0800ccbd 	.word	0x0800ccbd
 800cc48:	0800cce5 	.word	0x0800cce5
 800cc4c:	0800cc21 	.word	0x0800cc21
 800cc50:	0800cd03 	.word	0x0800cd03
 800cc54:	0800cc21 	.word	0x0800cc21
 800cc58:	0800cd1b 	.word	0x0800cd1b
 800cc5c:	0800cd5d 	.word	0x0800cd5d
 800cc60:	0800cc21 	.word	0x0800cc21
 800cc64:	0800cdb1 	.word	0x0800cdb1
 800cc68:	0800cc85 	.word	0x0800cc85
 800cc6c:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800cc70:	33ae      	adds	r3, #174	@ 0xae
 800cc72:	4629      	mov	r1, r5
 800cc74:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800cc78:	689b      	ldr	r3, [r3, #8]
 800cc7a:	4620      	mov	r0, r4
 800cc7c:	b002      	add	sp, #8
 800cc7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc82:	4718      	bx	r3
 800cc84:	7889      	ldrb	r1, [r1, #2]
 800cc86:	4db7      	ldr	r5, [pc, #732]	@ (800cf64 <USBD_StdDevReq+0x35c>)
 800cc88:	2901      	cmp	r1, #1
 800cc8a:	7029      	strb	r1, [r5, #0]
 800cc8c:	f200 8157 	bhi.w	800cf3e <USBD_StdDevReq+0x336>
 800cc90:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cc94:	2b02      	cmp	r3, #2
 800cc96:	b2de      	uxtb	r6, r3
 800cc98:	f000 8136 	beq.w	800cf08 <USBD_StdDevReq+0x300>
 800cc9c:	2e03      	cmp	r6, #3
 800cc9e:	f000 8111 	beq.w	800cec4 <USBD_StdDevReq+0x2bc>
 800cca2:	2180      	movs	r1, #128	@ 0x80
 800cca4:	f002 f9e6 	bl	800f074 <USBD_LL_StallEP>
 800cca8:	2100      	movs	r1, #0
 800ccaa:	4620      	mov	r0, r4
 800ccac:	f002 f9e2 	bl	800f074 <USBD_LL_StallEP>
 800ccb0:	7829      	ldrb	r1, [r5, #0]
 800ccb2:	4620      	mov	r0, r4
 800ccb4:	f7ff fe64 	bl	800c980 <USBD_ClrClassConfig>
 800ccb8:	2503      	movs	r5, #3
 800ccba:	e7ba      	b.n	800cc32 <USBD_StdDevReq+0x2a>
 800ccbc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ccc0:	3b01      	subs	r3, #1
 800ccc2:	2b02      	cmp	r3, #2
 800ccc4:	d8ac      	bhi.n	800cc20 <USBD_StdDevReq+0x18>
 800ccc6:	88ca      	ldrh	r2, [r1, #6]
 800ccc8:	2a02      	cmp	r2, #2
 800ccca:	d1a9      	bne.n	800cc20 <USBD_StdDevReq+0x18>
 800cccc:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800ccd0:	4601      	mov	r1, r0
 800ccd2:	2b00      	cmp	r3, #0
 800ccd4:	bf0c      	ite	eq
 800ccd6:	2301      	moveq	r3, #1
 800ccd8:	2303      	movne	r3, #3
 800ccda:	f841 3f0c 	str.w	r3, [r1, #12]!
 800ccde:	f000 fa89 	bl	800d1f4 <USBD_CtlSendData>
 800cce2:	e7a5      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cce4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cce8:	3b01      	subs	r3, #1
 800ccea:	2b02      	cmp	r3, #2
 800ccec:	d898      	bhi.n	800cc20 <USBD_StdDevReq+0x18>
 800ccee:	884b      	ldrh	r3, [r1, #2]
 800ccf0:	2b01      	cmp	r3, #1
 800ccf2:	d19d      	bne.n	800cc30 <USBD_StdDevReq+0x28>
 800ccf4:	2300      	movs	r3, #0
 800ccf6:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800ccfa:	4620      	mov	r0, r4
 800ccfc:	f000 faa6 	bl	800d24c <USBD_CtlSendStatus>
 800cd00:	e796      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cd02:	884b      	ldrh	r3, [r1, #2]
 800cd04:	2b01      	cmp	r3, #1
 800cd06:	d0f6      	beq.n	800ccf6 <USBD_StdDevReq+0xee>
 800cd08:	2b02      	cmp	r3, #2
 800cd0a:	d189      	bne.n	800cc20 <USBD_StdDevReq+0x18>
 800cd0c:	888b      	ldrh	r3, [r1, #4]
 800cd0e:	0a1b      	lsrs	r3, r3, #8
 800cd10:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
 800cd14:	f000 fa9a 	bl	800d24c <USBD_CtlSendStatus>
 800cd18:	e78a      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cd1a:	888b      	ldrh	r3, [r1, #4]
 800cd1c:	2b00      	cmp	r3, #0
 800cd1e:	f47f af7f 	bne.w	800cc20 <USBD_StdDevReq+0x18>
 800cd22:	88cb      	ldrh	r3, [r1, #6]
 800cd24:	2b00      	cmp	r3, #0
 800cd26:	f47f af7b 	bne.w	800cc20 <USBD_StdDevReq+0x18>
 800cd2a:	884b      	ldrh	r3, [r1, #2]
 800cd2c:	2b7f      	cmp	r3, #127	@ 0x7f
 800cd2e:	f63f af77 	bhi.w	800cc20 <USBD_StdDevReq+0x18>
 800cd32:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800cd36:	2a03      	cmp	r2, #3
 800cd38:	f43f af72 	beq.w	800cc20 <USBD_StdDevReq+0x18>
 800cd3c:	b2dd      	uxtb	r5, r3
 800cd3e:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
 800cd42:	4629      	mov	r1, r5
 800cd44:	f002 f9c2 	bl	800f0cc <USBD_LL_SetUSBAddress>
 800cd48:	4620      	mov	r0, r4
 800cd4a:	f000 fa7f 	bl	800d24c <USBD_CtlSendStatus>
 800cd4e:	2d00      	cmp	r5, #0
 800cd50:	f000 8118 	beq.w	800cf84 <USBD_StdDevReq+0x37c>
 800cd54:	2302      	movs	r3, #2
 800cd56:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800cd5a:	e769      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cd5c:	884a      	ldrh	r2, [r1, #2]
 800cd5e:	0a13      	lsrs	r3, r2, #8
 800cd60:	2100      	movs	r1, #0
 800cd62:	3b01      	subs	r3, #1
 800cd64:	f8ad 1006 	strh.w	r1, [sp, #6]
 800cd68:	2b0e      	cmp	r3, #14
 800cd6a:	f63f af59 	bhi.w	800cc20 <USBD_StdDevReq+0x18>
 800cd6e:	a101      	add	r1, pc, #4	@ (adr r1, 800cd74 <USBD_StdDevReq+0x16c>)
 800cd70:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800cd74:	0800ce53 	.word	0x0800ce53
 800cd78:	0800ce39 	.word	0x0800ce39
 800cd7c:	0800ce27 	.word	0x0800ce27
 800cd80:	0800cc21 	.word	0x0800cc21
 800cd84:	0800cc21 	.word	0x0800cc21
 800cd88:	0800ce11 	.word	0x0800ce11
 800cd8c:	0800ce63 	.word	0x0800ce63
 800cd90:	0800cc21 	.word	0x0800cc21
 800cd94:	0800cc21 	.word	0x0800cc21
 800cd98:	0800cc21 	.word	0x0800cc21
 800cd9c:	0800cc21 	.word	0x0800cc21
 800cda0:	0800cc21 	.word	0x0800cc21
 800cda4:	0800cc21 	.word	0x0800cc21
 800cda8:	0800cc21 	.word	0x0800cc21
 800cdac:	0800cdd9 	.word	0x0800cdd9
 800cdb0:	88ca      	ldrh	r2, [r1, #6]
 800cdb2:	2a01      	cmp	r2, #1
 800cdb4:	f47f af34 	bne.w	800cc20 <USBD_StdDevReq+0x18>
 800cdb8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800cdbc:	2b02      	cmp	r3, #2
 800cdbe:	b2d9      	uxtb	r1, r3
 800cdc0:	f200 80b6 	bhi.w	800cf30 <USBD_StdDevReq+0x328>
 800cdc4:	2900      	cmp	r1, #0
 800cdc6:	f43f af2b 	beq.w	800cc20 <USBD_StdDevReq+0x18>
 800cdca:	4601      	mov	r1, r0
 800cdcc:	2300      	movs	r3, #0
 800cdce:	f841 3f08 	str.w	r3, [r1, #8]!
 800cdd2:	f000 fa0f 	bl	800d1f4 <USBD_CtlSendData>
 800cdd6:	e72b      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cdd8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800cddc:	69db      	ldr	r3, [r3, #28]
 800cdde:	2b00      	cmp	r3, #0
 800cde0:	f43f af1e 	beq.w	800cc20 <USBD_StdDevReq+0x18>
 800cde4:	7c20      	ldrb	r0, [r4, #16]
 800cde6:	f10d 0106 	add.w	r1, sp, #6
 800cdea:	4798      	blx	r3
 800cdec:	88eb      	ldrh	r3, [r5, #6]
 800cdee:	2b00      	cmp	r3, #0
 800cdf0:	d083      	beq.n	800ccfa <USBD_StdDevReq+0xf2>
 800cdf2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800cdf6:	2a00      	cmp	r2, #0
 800cdf8:	f43f af12 	beq.w	800cc20 <USBD_StdDevReq+0x18>
 800cdfc:	429a      	cmp	r2, r3
 800cdfe:	bf28      	it	cs
 800ce00:	461a      	movcs	r2, r3
 800ce02:	4601      	mov	r1, r0
 800ce04:	4620      	mov	r0, r4
 800ce06:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ce0a:	f000 f9f3 	bl	800d1f4 <USBD_CtlSendData>
 800ce0e:	e70f      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800ce10:	7c03      	ldrb	r3, [r0, #16]
 800ce12:	2b00      	cmp	r3, #0
 800ce14:	f47f af04 	bne.w	800cc20 <USBD_StdDevReq+0x18>
 800ce18:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ce1c:	f10d 0006 	add.w	r0, sp, #6
 800ce20:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ce22:	4798      	blx	r3
 800ce24:	e7e2      	b.n	800cdec <USBD_StdDevReq+0x1e4>
 800ce26:	b2d2      	uxtb	r2, r2
 800ce28:	2a05      	cmp	r2, #5
 800ce2a:	f63f aef9 	bhi.w	800cc20 <USBD_StdDevReq+0x18>
 800ce2e:	e8df f002 	tbb	[pc, r2]
 800ce32:	3d43      	.short	0x3d43
 800ce34:	252b3137 	.word	0x252b3137
 800ce38:	7c02      	ldrb	r2, [r0, #16]
 800ce3a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ce3e:	2a00      	cmp	r2, #0
 800ce40:	f040 8092 	bne.w	800cf68 <USBD_StdDevReq+0x360>
 800ce44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ce46:	f10d 0006 	add.w	r0, sp, #6
 800ce4a:	4798      	blx	r3
 800ce4c:	2302      	movs	r3, #2
 800ce4e:	7043      	strb	r3, [r0, #1]
 800ce50:	e7cc      	b.n	800cdec <USBD_StdDevReq+0x1e4>
 800ce52:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ce56:	7c00      	ldrb	r0, [r0, #16]
 800ce58:	681b      	ldr	r3, [r3, #0]
 800ce5a:	f10d 0106 	add.w	r1, sp, #6
 800ce5e:	4798      	blx	r3
 800ce60:	e7c4      	b.n	800cdec <USBD_StdDevReq+0x1e4>
 800ce62:	7c03      	ldrb	r3, [r0, #16]
 800ce64:	2b00      	cmp	r3, #0
 800ce66:	f47f aedb 	bne.w	800cc20 <USBD_StdDevReq+0x18>
 800ce6a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ce6e:	f10d 0006 	add.w	r0, sp, #6
 800ce72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ce74:	4798      	blx	r3
 800ce76:	2307      	movs	r3, #7
 800ce78:	7043      	strb	r3, [r0, #1]
 800ce7a:	e7b7      	b.n	800cdec <USBD_StdDevReq+0x1e4>
 800ce7c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ce80:	699b      	ldr	r3, [r3, #24]
 800ce82:	2b00      	cmp	r3, #0
 800ce84:	d1ae      	bne.n	800cde4 <USBD_StdDevReq+0x1dc>
 800ce86:	e6cb      	b.n	800cc20 <USBD_StdDevReq+0x18>
 800ce88:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ce8c:	695b      	ldr	r3, [r3, #20]
 800ce8e:	2b00      	cmp	r3, #0
 800ce90:	d1a8      	bne.n	800cde4 <USBD_StdDevReq+0x1dc>
 800ce92:	e6c5      	b.n	800cc20 <USBD_StdDevReq+0x18>
 800ce94:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ce98:	691b      	ldr	r3, [r3, #16]
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	d1a2      	bne.n	800cde4 <USBD_StdDevReq+0x1dc>
 800ce9e:	e6bf      	b.n	800cc20 <USBD_StdDevReq+0x18>
 800cea0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800cea4:	68db      	ldr	r3, [r3, #12]
 800cea6:	2b00      	cmp	r3, #0
 800cea8:	d19c      	bne.n	800cde4 <USBD_StdDevReq+0x1dc>
 800ceaa:	e6b9      	b.n	800cc20 <USBD_StdDevReq+0x18>
 800ceac:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ceb0:	689b      	ldr	r3, [r3, #8]
 800ceb2:	2b00      	cmp	r3, #0
 800ceb4:	d196      	bne.n	800cde4 <USBD_StdDevReq+0x1dc>
 800ceb6:	e6b3      	b.n	800cc20 <USBD_StdDevReq+0x18>
 800ceb8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800cebc:	685b      	ldr	r3, [r3, #4]
 800cebe:	2b00      	cmp	r3, #0
 800cec0:	d190      	bne.n	800cde4 <USBD_StdDevReq+0x1dc>
 800cec2:	e6ad      	b.n	800cc20 <USBD_StdDevReq+0x18>
 800cec4:	2900      	cmp	r1, #0
 800cec6:	d042      	beq.n	800cf4e <USBD_StdDevReq+0x346>
 800cec8:	6841      	ldr	r1, [r0, #4]
 800ceca:	2901      	cmp	r1, #1
 800cecc:	f43f af15 	beq.w	800ccfa <USBD_StdDevReq+0xf2>
 800ced0:	b2c9      	uxtb	r1, r1
 800ced2:	f7ff fd55 	bl	800c980 <USBD_ClrClassConfig>
 800ced6:	7829      	ldrb	r1, [r5, #0]
 800ced8:	6061      	str	r1, [r4, #4]
 800ceda:	4620      	mov	r0, r4
 800cedc:	f7ff fd48 	bl	800c970 <USBD_SetClassConfig>
 800cee0:	4605      	mov	r5, r0
 800cee2:	2800      	cmp	r0, #0
 800cee4:	f43f af09 	beq.w	800ccfa <USBD_StdDevReq+0xf2>
 800cee8:	2180      	movs	r1, #128	@ 0x80
 800ceea:	4620      	mov	r0, r4
 800ceec:	f002 f8c2 	bl	800f074 <USBD_LL_StallEP>
 800cef0:	2100      	movs	r1, #0
 800cef2:	4620      	mov	r0, r4
 800cef4:	f002 f8be 	bl	800f074 <USBD_LL_StallEP>
 800cef8:	7921      	ldrb	r1, [r4, #4]
 800cefa:	4620      	mov	r0, r4
 800cefc:	f7ff fd40 	bl	800c980 <USBD_ClrClassConfig>
 800cf00:	2302      	movs	r3, #2
 800cf02:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800cf06:	e694      	b.n	800cc32 <USBD_StdDevReq+0x2a>
 800cf08:	2900      	cmp	r1, #0
 800cf0a:	f43f aef6 	beq.w	800ccfa <USBD_StdDevReq+0xf2>
 800cf0e:	2101      	movs	r1, #1
 800cf10:	6041      	str	r1, [r0, #4]
 800cf12:	f7ff fd2d 	bl	800c970 <USBD_SetClassConfig>
 800cf16:	4605      	mov	r5, r0
 800cf18:	b368      	cbz	r0, 800cf76 <USBD_StdDevReq+0x36e>
 800cf1a:	2180      	movs	r1, #128	@ 0x80
 800cf1c:	4620      	mov	r0, r4
 800cf1e:	f002 f8a9 	bl	800f074 <USBD_LL_StallEP>
 800cf22:	2100      	movs	r1, #0
 800cf24:	4620      	mov	r0, r4
 800cf26:	f002 f8a5 	bl	800f074 <USBD_LL_StallEP>
 800cf2a:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800cf2e:	e680      	b.n	800cc32 <USBD_StdDevReq+0x2a>
 800cf30:	2903      	cmp	r1, #3
 800cf32:	f47f ae75 	bne.w	800cc20 <USBD_StdDevReq+0x18>
 800cf36:	1d01      	adds	r1, r0, #4
 800cf38:	f000 f95c 	bl	800d1f4 <USBD_CtlSendData>
 800cf3c:	e678      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cf3e:	2180      	movs	r1, #128	@ 0x80
 800cf40:	f002 f898 	bl	800f074 <USBD_LL_StallEP>
 800cf44:	2100      	movs	r1, #0
 800cf46:	4620      	mov	r0, r4
 800cf48:	f002 f894 	bl	800f074 <USBD_LL_StallEP>
 800cf4c:	e6b4      	b.n	800ccb8 <USBD_StdDevReq+0xb0>
 800cf4e:	2302      	movs	r3, #2
 800cf50:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
 800cf54:	6041      	str	r1, [r0, #4]
 800cf56:	f7ff fd13 	bl	800c980 <USBD_ClrClassConfig>
 800cf5a:	4620      	mov	r0, r4
 800cf5c:	f000 f976 	bl	800d24c <USBD_CtlSendStatus>
 800cf60:	e666      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cf62:	bf00      	nop
 800cf64:	200018a8 	.word	0x200018a8
 800cf68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cf6a:	f10d 0006 	add.w	r0, sp, #6
 800cf6e:	4798      	blx	r3
 800cf70:	2302      	movs	r3, #2
 800cf72:	7043      	strb	r3, [r0, #1]
 800cf74:	e73a      	b.n	800cdec <USBD_StdDevReq+0x1e4>
 800cf76:	4620      	mov	r0, r4
 800cf78:	f000 f968 	bl	800d24c <USBD_CtlSendStatus>
 800cf7c:	2303      	movs	r3, #3
 800cf7e:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800cf82:	e655      	b.n	800cc30 <USBD_StdDevReq+0x28>
 800cf84:	2301      	movs	r3, #1
 800cf86:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800cf8a:	e651      	b.n	800cc30 <USBD_StdDevReq+0x28>

0800cf8c <USBD_StdItfReq>:
 800cf8c:	b570      	push	{r4, r5, r6, lr}
 800cf8e:	780b      	ldrb	r3, [r1, #0]
 800cf90:	065a      	lsls	r2, r3, #25
 800cf92:	460d      	mov	r5, r1
 800cf94:	4604      	mov	r4, r0
 800cf96:	d50d      	bpl.n	800cfb4 <USBD_StdItfReq+0x28>
 800cf98:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800cf9c:	2a40      	cmp	r2, #64	@ 0x40
 800cf9e:	d009      	beq.n	800cfb4 <USBD_StdItfReq+0x28>
 800cfa0:	2180      	movs	r1, #128	@ 0x80
 800cfa2:	f002 f867 	bl	800f074 <USBD_LL_StallEP>
 800cfa6:	2100      	movs	r1, #0
 800cfa8:	4620      	mov	r0, r4
 800cfaa:	f002 f863 	bl	800f074 <USBD_LL_StallEP>
 800cfae:	2600      	movs	r6, #0
 800cfb0:	4630      	mov	r0, r6
 800cfb2:	bd70      	pop	{r4, r5, r6, pc}
 800cfb4:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800cfb8:	3b01      	subs	r3, #1
 800cfba:	2b02      	cmp	r3, #2
 800cfbc:	d802      	bhi.n	800cfc4 <USBD_StdItfReq+0x38>
 800cfbe:	7929      	ldrb	r1, [r5, #4]
 800cfc0:	2901      	cmp	r1, #1
 800cfc2:	d908      	bls.n	800cfd6 <USBD_StdItfReq+0x4a>
 800cfc4:	2180      	movs	r1, #128	@ 0x80
 800cfc6:	4620      	mov	r0, r4
 800cfc8:	f002 f854 	bl	800f074 <USBD_LL_StallEP>
 800cfcc:	2100      	movs	r1, #0
 800cfce:	4620      	mov	r0, r4
 800cfd0:	f002 f850 	bl	800f074 <USBD_LL_StallEP>
 800cfd4:	e7eb      	b.n	800cfae <USBD_StdItfReq+0x22>
 800cfd6:	4620      	mov	r0, r4
 800cfd8:	f7ff fdfc 	bl	800cbd4 <USBD_CoreFindIF>
 800cfdc:	b990      	cbnz	r0, 800d004 <USBD_StdItfReq+0x78>
 800cfde:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800cfe2:	689b      	ldr	r3, [r3, #8]
 800cfe4:	b173      	cbz	r3, 800d004 <USBD_StdItfReq+0x78>
 800cfe6:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
 800cfea:	4629      	mov	r1, r5
 800cfec:	4620      	mov	r0, r4
 800cfee:	4798      	blx	r3
 800cff0:	88eb      	ldrh	r3, [r5, #6]
 800cff2:	4606      	mov	r6, r0
 800cff4:	2b00      	cmp	r3, #0
 800cff6:	d1db      	bne.n	800cfb0 <USBD_StdItfReq+0x24>
 800cff8:	2800      	cmp	r0, #0
 800cffa:	d1d9      	bne.n	800cfb0 <USBD_StdItfReq+0x24>
 800cffc:	4620      	mov	r0, r4
 800cffe:	f000 f925 	bl	800d24c <USBD_CtlSendStatus>
 800d002:	e7d5      	b.n	800cfb0 <USBD_StdItfReq+0x24>
 800d004:	2603      	movs	r6, #3
 800d006:	4630      	mov	r0, r6
 800d008:	bd70      	pop	{r4, r5, r6, pc}
 800d00a:	bf00      	nop

0800d00c <USBD_StdEPReq>:
 800d00c:	b530      	push	{r4, r5, lr}
 800d00e:	460c      	mov	r4, r1
 800d010:	888a      	ldrh	r2, [r1, #4]
 800d012:	7823      	ldrb	r3, [r4, #0]
 800d014:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800d018:	2b20      	cmp	r3, #32
 800d01a:	b083      	sub	sp, #12
 800d01c:	4605      	mov	r5, r0
 800d01e:	b2d1      	uxtb	r1, r2
 800d020:	d04c      	beq.n	800d0bc <USBD_StdEPReq+0xb0>
 800d022:	2b40      	cmp	r3, #64	@ 0x40
 800d024:	d04a      	beq.n	800d0bc <USBD_StdEPReq+0xb0>
 800d026:	b153      	cbz	r3, 800d03e <USBD_StdEPReq+0x32>
 800d028:	2180      	movs	r1, #128	@ 0x80
 800d02a:	4628      	mov	r0, r5
 800d02c:	f002 f822 	bl	800f074 <USBD_LL_StallEP>
 800d030:	2100      	movs	r1, #0
 800d032:	4628      	mov	r0, r5
 800d034:	f002 f81e 	bl	800f074 <USBD_LL_StallEP>
 800d038:	2000      	movs	r0, #0
 800d03a:	b003      	add	sp, #12
 800d03c:	bd30      	pop	{r4, r5, pc}
 800d03e:	7863      	ldrb	r3, [r4, #1]
 800d040:	2b01      	cmp	r3, #1
 800d042:	d02a      	beq.n	800d09a <USBD_StdEPReq+0x8e>
 800d044:	2b03      	cmp	r3, #3
 800d046:	d04b      	beq.n	800d0e0 <USBD_StdEPReq+0xd4>
 800d048:	2b00      	cmp	r3, #0
 800d04a:	d1ed      	bne.n	800d028 <USBD_StdEPReq+0x1c>
 800d04c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d050:	2b02      	cmp	r3, #2
 800d052:	b2d8      	uxtb	r0, r3
 800d054:	d05f      	beq.n	800d116 <USBD_StdEPReq+0x10a>
 800d056:	2803      	cmp	r0, #3
 800d058:	d1e6      	bne.n	800d028 <USBD_StdEPReq+0x1c>
 800d05a:	f001 030f 	and.w	r3, r1, #15
 800d05e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d062:	0612      	lsls	r2, r2, #24
 800d064:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800d068:	d464      	bmi.n	800d134 <USBD_StdEPReq+0x128>
 800d06a:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 800d06e:	2b00      	cmp	r3, #0
 800d070:	d0da      	beq.n	800d028 <USBD_StdEPReq+0x1c>
 800d072:	2414      	movs	r4, #20
 800d074:	fb04 5401 	mla	r4, r4, r1, r5
 800d078:	f504 74aa 	add.w	r4, r4, #340	@ 0x154
 800d07c:	2900      	cmp	r1, #0
 800d07e:	d066      	beq.n	800d14e <USBD_StdEPReq+0x142>
 800d080:	4628      	mov	r0, r5
 800d082:	f002 f80f 	bl	800f0a4 <USBD_LL_IsStallEP>
 800d086:	2800      	cmp	r0, #0
 800d088:	d069      	beq.n	800d15e <USBD_StdEPReq+0x152>
 800d08a:	2301      	movs	r3, #1
 800d08c:	6023      	str	r3, [r4, #0]
 800d08e:	2202      	movs	r2, #2
 800d090:	4621      	mov	r1, r4
 800d092:	4628      	mov	r0, r5
 800d094:	f000 f8ae 	bl	800d1f4 <USBD_CtlSendData>
 800d098:	e7ce      	b.n	800d038 <USBD_StdEPReq+0x2c>
 800d09a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d09e:	2b02      	cmp	r3, #2
 800d0a0:	b2da      	uxtb	r2, r3
 800d0a2:	d02f      	beq.n	800d104 <USBD_StdEPReq+0xf8>
 800d0a4:	2a03      	cmp	r2, #3
 800d0a6:	d1bf      	bne.n	800d028 <USBD_StdEPReq+0x1c>
 800d0a8:	8863      	ldrh	r3, [r4, #2]
 800d0aa:	2b00      	cmp	r3, #0
 800d0ac:	d1c4      	bne.n	800d038 <USBD_StdEPReq+0x2c>
 800d0ae:	064b      	lsls	r3, r1, #25
 800d0b0:	d150      	bne.n	800d154 <USBD_StdEPReq+0x148>
 800d0b2:	4628      	mov	r0, r5
 800d0b4:	9101      	str	r1, [sp, #4]
 800d0b6:	f000 f8c9 	bl	800d24c <USBD_CtlSendStatus>
 800d0ba:	9901      	ldr	r1, [sp, #4]
 800d0bc:	4628      	mov	r0, r5
 800d0be:	f7ff fd8b 	bl	800cbd8 <USBD_CoreFindEP>
 800d0c2:	2800      	cmp	r0, #0
 800d0c4:	d1b8      	bne.n	800d038 <USBD_StdEPReq+0x2c>
 800d0c6:	f8d5 32b8 	ldr.w	r3, [r5, #696]	@ 0x2b8
 800d0ca:	f8c5 02d4 	str.w	r0, [r5, #724]	@ 0x2d4
 800d0ce:	689b      	ldr	r3, [r3, #8]
 800d0d0:	2b00      	cmp	r3, #0
 800d0d2:	d0b1      	beq.n	800d038 <USBD_StdEPReq+0x2c>
 800d0d4:	4621      	mov	r1, r4
 800d0d6:	4628      	mov	r0, r5
 800d0d8:	b003      	add	sp, #12
 800d0da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d0de:	4718      	bx	r3
 800d0e0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800d0e4:	2b02      	cmp	r3, #2
 800d0e6:	b2da      	uxtb	r2, r3
 800d0e8:	d00c      	beq.n	800d104 <USBD_StdEPReq+0xf8>
 800d0ea:	2a03      	cmp	r2, #3
 800d0ec:	d19c      	bne.n	800d028 <USBD_StdEPReq+0x1c>
 800d0ee:	8863      	ldrh	r3, [r4, #2]
 800d0f0:	b923      	cbnz	r3, 800d0fc <USBD_StdEPReq+0xf0>
 800d0f2:	0648      	lsls	r0, r1, #25
 800d0f4:	d002      	beq.n	800d0fc <USBD_StdEPReq+0xf0>
 800d0f6:	88e3      	ldrh	r3, [r4, #6]
 800d0f8:	2b00      	cmp	r3, #0
 800d0fa:	d032      	beq.n	800d162 <USBD_StdEPReq+0x156>
 800d0fc:	4628      	mov	r0, r5
 800d0fe:	f000 f8a5 	bl	800d24c <USBD_CtlSendStatus>
 800d102:	e799      	b.n	800d038 <USBD_StdEPReq+0x2c>
 800d104:	064a      	lsls	r2, r1, #25
 800d106:	d08f      	beq.n	800d028 <USBD_StdEPReq+0x1c>
 800d108:	f001 ffb4 	bl	800f074 <USBD_LL_StallEP>
 800d10c:	2180      	movs	r1, #128	@ 0x80
 800d10e:	4628      	mov	r0, r5
 800d110:	f001 ffb0 	bl	800f074 <USBD_LL_StallEP>
 800d114:	e790      	b.n	800d038 <USBD_StdEPReq+0x2c>
 800d116:	0648      	lsls	r0, r1, #25
 800d118:	d186      	bne.n	800d028 <USBD_StdEPReq+0x1c>
 800d11a:	0611      	lsls	r1, r2, #24
 800d11c:	bf4c      	ite	mi
 800d11e:	f105 0114 	addmi.w	r1, r5, #20
 800d122:	f505 71aa 	addpl.w	r1, r5, #340	@ 0x154
 800d126:	2300      	movs	r3, #0
 800d128:	600b      	str	r3, [r1, #0]
 800d12a:	2202      	movs	r2, #2
 800d12c:	4628      	mov	r0, r5
 800d12e:	f000 f861 	bl	800d1f4 <USBD_CtlSendData>
 800d132:	e781      	b.n	800d038 <USBD_StdEPReq+0x2c>
 800d134:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800d136:	2b00      	cmp	r3, #0
 800d138:	f43f af76 	beq.w	800d028 <USBD_StdEPReq+0x1c>
 800d13c:	f001 047f 	and.w	r4, r1, #127	@ 0x7f
 800d140:	3401      	adds	r4, #1
 800d142:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800d146:	2980      	cmp	r1, #128	@ 0x80
 800d148:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800d14c:	d198      	bne.n	800d080 <USBD_StdEPReq+0x74>
 800d14e:	2300      	movs	r3, #0
 800d150:	6023      	str	r3, [r4, #0]
 800d152:	e79c      	b.n	800d08e <USBD_StdEPReq+0x82>
 800d154:	9101      	str	r1, [sp, #4]
 800d156:	f001 ff99 	bl	800f08c <USBD_LL_ClearStallEP>
 800d15a:	9901      	ldr	r1, [sp, #4]
 800d15c:	e7a9      	b.n	800d0b2 <USBD_StdEPReq+0xa6>
 800d15e:	6020      	str	r0, [r4, #0]
 800d160:	e795      	b.n	800d08e <USBD_StdEPReq+0x82>
 800d162:	4628      	mov	r0, r5
 800d164:	f001 ff86 	bl	800f074 <USBD_LL_StallEP>
 800d168:	e7c8      	b.n	800d0fc <USBD_StdEPReq+0xf0>
 800d16a:	bf00      	nop

0800d16c <USBD_ParseSetupRequest>:
 800d16c:	780b      	ldrb	r3, [r1, #0]
 800d16e:	7003      	strb	r3, [r0, #0]
 800d170:	784b      	ldrb	r3, [r1, #1]
 800d172:	7043      	strb	r3, [r0, #1]
 800d174:	884b      	ldrh	r3, [r1, #2]
 800d176:	8043      	strh	r3, [r0, #2]
 800d178:	888b      	ldrh	r3, [r1, #4]
 800d17a:	8083      	strh	r3, [r0, #4]
 800d17c:	88cb      	ldrh	r3, [r1, #6]
 800d17e:	80c3      	strh	r3, [r0, #6]
 800d180:	4770      	bx	lr
 800d182:	bf00      	nop

0800d184 <USBD_CtlError>:
 800d184:	b510      	push	{r4, lr}
 800d186:	2180      	movs	r1, #128	@ 0x80
 800d188:	4604      	mov	r4, r0
 800d18a:	f001 ff73 	bl	800f074 <USBD_LL_StallEP>
 800d18e:	4620      	mov	r0, r4
 800d190:	2100      	movs	r1, #0
 800d192:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d196:	f001 bf6d 	b.w	800f074 <USBD_LL_StallEP>
 800d19a:	bf00      	nop

0800d19c <USBD_GetString>:
 800d19c:	b330      	cbz	r0, 800d1ec <USBD_GetString+0x50>
 800d19e:	b570      	push	{r4, r5, r6, lr}
 800d1a0:	7803      	ldrb	r3, [r0, #0]
 800d1a2:	460e      	mov	r6, r1
 800d1a4:	4614      	mov	r4, r2
 800d1a6:	4605      	mov	r5, r0
 800d1a8:	b30b      	cbz	r3, 800d1ee <USBD_GetString+0x52>
 800d1aa:	4603      	mov	r3, r0
 800d1ac:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d1b0:	2900      	cmp	r1, #0
 800d1b2:	d1fb      	bne.n	800d1ac <USBD_GetString+0x10>
 800d1b4:	1c68      	adds	r0, r5, #1
 800d1b6:	f7f3 f833 	bl	8000220 <strlen>
 800d1ba:	1c43      	adds	r3, r0, #1
 800d1bc:	b2db      	uxtb	r3, r3
 800d1be:	3301      	adds	r3, #1
 800d1c0:	005b      	lsls	r3, r3, #1
 800d1c2:	b2da      	uxtb	r2, r3
 800d1c4:	8023      	strh	r3, [r4, #0]
 800d1c6:	2303      	movs	r3, #3
 800d1c8:	7032      	strb	r2, [r6, #0]
 800d1ca:	7073      	strb	r3, [r6, #1]
 800d1cc:	782c      	ldrb	r4, [r5, #0]
 800d1ce:	b164      	cbz	r4, 800d1ea <USBD_GetString+0x4e>
 800d1d0:	4628      	mov	r0, r5
 800d1d2:	2302      	movs	r3, #2
 800d1d4:	2100      	movs	r1, #0
 800d1d6:	1c5a      	adds	r2, r3, #1
 800d1d8:	b2d2      	uxtb	r2, r2
 800d1da:	54f4      	strb	r4, [r6, r3]
 800d1dc:	54b1      	strb	r1, [r6, r2]
 800d1de:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800d1e2:	3302      	adds	r3, #2
 800d1e4:	b2db      	uxtb	r3, r3
 800d1e6:	2c00      	cmp	r4, #0
 800d1e8:	d1f5      	bne.n	800d1d6 <USBD_GetString+0x3a>
 800d1ea:	bd70      	pop	{r4, r5, r6, pc}
 800d1ec:	4770      	bx	lr
 800d1ee:	2202      	movs	r2, #2
 800d1f0:	4613      	mov	r3, r2
 800d1f2:	e7e7      	b.n	800d1c4 <USBD_GetString+0x28>

0800d1f4 <USBD_CtlSendData>:
 800d1f4:	b508      	push	{r3, lr}
 800d1f6:	4613      	mov	r3, r2
 800d1f8:	460a      	mov	r2, r1
 800d1fa:	2102      	movs	r1, #2
 800d1fc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800d200:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d204:	2100      	movs	r1, #0
 800d206:	f001 ff6d 	bl	800f0e4 <USBD_LL_Transmit>
 800d20a:	2000      	movs	r0, #0
 800d20c:	bd08      	pop	{r3, pc}
 800d20e:	bf00      	nop

0800d210 <USBD_CtlContinueSendData>:
 800d210:	b508      	push	{r3, lr}
 800d212:	4613      	mov	r3, r2
 800d214:	460a      	mov	r2, r1
 800d216:	2100      	movs	r1, #0
 800d218:	f001 ff64 	bl	800f0e4 <USBD_LL_Transmit>
 800d21c:	2000      	movs	r0, #0
 800d21e:	bd08      	pop	{r3, pc}

0800d220 <USBD_CtlPrepareRx>:
 800d220:	b508      	push	{r3, lr}
 800d222:	4613      	mov	r3, r2
 800d224:	460a      	mov	r2, r1
 800d226:	2103      	movs	r1, #3
 800d228:	e9c0 3356 	strd	r3, r3, [r0, #344]	@ 0x158
 800d22c:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d230:	2100      	movs	r1, #0
 800d232:	f001 ff63 	bl	800f0fc <USBD_LL_PrepareReceive>
 800d236:	2000      	movs	r0, #0
 800d238:	bd08      	pop	{r3, pc}
 800d23a:	bf00      	nop

0800d23c <USBD_CtlContinueRx>:
 800d23c:	b508      	push	{r3, lr}
 800d23e:	4613      	mov	r3, r2
 800d240:	460a      	mov	r2, r1
 800d242:	2100      	movs	r1, #0
 800d244:	f001 ff5a 	bl	800f0fc <USBD_LL_PrepareReceive>
 800d248:	2000      	movs	r0, #0
 800d24a:	bd08      	pop	{r3, pc}

0800d24c <USBD_CtlSendStatus>:
 800d24c:	b508      	push	{r3, lr}
 800d24e:	2104      	movs	r1, #4
 800d250:	2300      	movs	r3, #0
 800d252:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d256:	461a      	mov	r2, r3
 800d258:	4619      	mov	r1, r3
 800d25a:	f001 ff43 	bl	800f0e4 <USBD_LL_Transmit>
 800d25e:	2000      	movs	r0, #0
 800d260:	bd08      	pop	{r3, pc}
 800d262:	bf00      	nop

0800d264 <USBD_CtlReceiveStatus>:
 800d264:	b508      	push	{r3, lr}
 800d266:	2105      	movs	r1, #5
 800d268:	2300      	movs	r3, #0
 800d26a:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
 800d26e:	461a      	mov	r2, r3
 800d270:	4619      	mov	r1, r3
 800d272:	f001 ff43 	bl	800f0fc <USBD_LL_PrepareReceive>
 800d276:	2000      	movs	r0, #0
 800d278:	bd08      	pop	{r3, pc}
 800d27a:	bf00      	nop

0800d27c <osKernelStart>:
 800d27c:	b508      	push	{r3, lr}
 800d27e:	f000 fcc1 	bl	800dc04 <vTaskStartScheduler>
 800d282:	2000      	movs	r0, #0
 800d284:	bd08      	pop	{r3, pc}
 800d286:	bf00      	nop

0800d288 <osThreadCreate>:
 800d288:	b510      	push	{r4, lr}
 800d28a:	4684      	mov	ip, r0
 800d28c:	460b      	mov	r3, r1
 800d28e:	f8bc 2010 	ldrh.w	r2, [ip, #16]
 800d292:	f8dc 1000 	ldr.w	r1, [ip]
 800d296:	f9bc c008 	ldrsh.w	ip, [ip, #8]
 800d29a:	6840      	ldr	r0, [r0, #4]
 800d29c:	b084      	sub	sp, #16
 800d29e:	f1bc 0f84 	cmp.w	ip, #132	@ 0x84
 800d2a2:	bf14      	ite	ne
 800d2a4:	f10c 0403 	addne.w	r4, ip, #3
 800d2a8:	2400      	moveq	r4, #0
 800d2aa:	9400      	str	r4, [sp, #0]
 800d2ac:	ac03      	add	r4, sp, #12
 800d2ae:	9401      	str	r4, [sp, #4]
 800d2b0:	f000 fa56 	bl	800d760 <xTaskCreate>
 800d2b4:	2801      	cmp	r0, #1
 800d2b6:	bf0c      	ite	eq
 800d2b8:	9803      	ldreq	r0, [sp, #12]
 800d2ba:	2000      	movne	r0, #0
 800d2bc:	b004      	add	sp, #16
 800d2be:	bd10      	pop	{r4, pc}

0800d2c0 <osThreadSetPriority>:
 800d2c0:	b508      	push	{r3, lr}
 800d2c2:	2984      	cmp	r1, #132	@ 0x84
 800d2c4:	bf14      	ite	ne
 800d2c6:	3103      	addne	r1, #3
 800d2c8:	2100      	moveq	r1, #0
 800d2ca:	f000 fb87 	bl	800d9dc <vTaskPrioritySet>
 800d2ce:	2000      	movs	r0, #0
 800d2d0:	bd08      	pop	{r3, pc}
 800d2d2:	bf00      	nop

0800d2d4 <osDelay>:
 800d2d4:	b508      	push	{r3, lr}
 800d2d6:	2801      	cmp	r0, #1
 800d2d8:	bf38      	it	cc
 800d2da:	2001      	movcc	r0, #1
 800d2dc:	f000 fb4e 	bl	800d97c <vTaskDelay>
 800d2e0:	2000      	movs	r0, #0
 800d2e2:	bd08      	pop	{r3, pc}

0800d2e4 <osThreadSuspend>:
 800d2e4:	b508      	push	{r3, lr}
 800d2e6:	f000 fdd3 	bl	800de90 <vTaskSuspend>
 800d2ea:	2000      	movs	r0, #0
 800d2ec:	bd08      	pop	{r3, pc}
 800d2ee:	bf00      	nop

0800d2f0 <osThreadResume>:
 800d2f0:	b508      	push	{r3, lr}
 800d2f2:	f3ef 8305 	mrs	r3, IPSR
 800d2f6:	b12b      	cbz	r3, 800d304 <osThreadResume+0x14>
 800d2f8:	f000 fc2e 	bl	800db58 <xTaskResumeFromISR>
 800d2fc:	2801      	cmp	r0, #1
 800d2fe:	d005      	beq.n	800d30c <osThreadResume+0x1c>
 800d300:	2000      	movs	r0, #0
 800d302:	bd08      	pop	{r3, pc}
 800d304:	f000 fbda 	bl	800dabc <vTaskResume>
 800d308:	2000      	movs	r0, #0
 800d30a:	bd08      	pop	{r3, pc}
 800d30c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d310:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d314:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d318:	f3bf 8f4f 	dsb	sy
 800d31c:	f3bf 8f6f 	isb	sy
 800d320:	2000      	movs	r0, #0
 800d322:	bd08      	pop	{r3, pc}

0800d324 <vListInitialise>:
 800d324:	f100 0308 	add.w	r3, r0, #8
 800d328:	f04f 31ff 	mov.w	r1, #4294967295
 800d32c:	2200      	movs	r2, #0
 800d32e:	e9c0 3101 	strd	r3, r1, [r0, #4]
 800d332:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d336:	6002      	str	r2, [r0, #0]
 800d338:	4770      	bx	lr
 800d33a:	bf00      	nop

0800d33c <vListInitialiseItem>:
 800d33c:	2300      	movs	r3, #0
 800d33e:	6103      	str	r3, [r0, #16]
 800d340:	4770      	bx	lr
 800d342:	bf00      	nop

0800d344 <vListInsertEnd>:
 800d344:	6842      	ldr	r2, [r0, #4]
 800d346:	6803      	ldr	r3, [r0, #0]
 800d348:	b410      	push	{r4}
 800d34a:	6894      	ldr	r4, [r2, #8]
 800d34c:	3301      	adds	r3, #1
 800d34e:	e9c1 2401 	strd	r2, r4, [r1, #4]
 800d352:	6061      	str	r1, [r4, #4]
 800d354:	6091      	str	r1, [r2, #8]
 800d356:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d35a:	6108      	str	r0, [r1, #16]
 800d35c:	6003      	str	r3, [r0, #0]
 800d35e:	4770      	bx	lr

0800d360 <vListInsert>:
 800d360:	b430      	push	{r4, r5}
 800d362:	680d      	ldr	r5, [r1, #0]
 800d364:	1c6b      	adds	r3, r5, #1
 800d366:	d010      	beq.n	800d38a <vListInsert+0x2a>
 800d368:	f100 0308 	add.w	r3, r0, #8
 800d36c:	461c      	mov	r4, r3
 800d36e:	685b      	ldr	r3, [r3, #4]
 800d370:	681a      	ldr	r2, [r3, #0]
 800d372:	42aa      	cmp	r2, r5
 800d374:	d9fa      	bls.n	800d36c <vListInsert+0xc>
 800d376:	6802      	ldr	r2, [r0, #0]
 800d378:	604b      	str	r3, [r1, #4]
 800d37a:	3201      	adds	r2, #1
 800d37c:	6099      	str	r1, [r3, #8]
 800d37e:	608c      	str	r4, [r1, #8]
 800d380:	6061      	str	r1, [r4, #4]
 800d382:	6108      	str	r0, [r1, #16]
 800d384:	bc30      	pop	{r4, r5}
 800d386:	6002      	str	r2, [r0, #0]
 800d388:	4770      	bx	lr
 800d38a:	6904      	ldr	r4, [r0, #16]
 800d38c:	6863      	ldr	r3, [r4, #4]
 800d38e:	e7f2      	b.n	800d376 <vListInsert+0x16>

0800d390 <uxListRemove>:
 800d390:	6903      	ldr	r3, [r0, #16]
 800d392:	b410      	push	{r4}
 800d394:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800d398:	685c      	ldr	r4, [r3, #4]
 800d39a:	608a      	str	r2, [r1, #8]
 800d39c:	4284      	cmp	r4, r0
 800d39e:	6051      	str	r1, [r2, #4]
 800d3a0:	bf08      	it	eq
 800d3a2:	605a      	streq	r2, [r3, #4]
 800d3a4:	681a      	ldr	r2, [r3, #0]
 800d3a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d3aa:	2100      	movs	r1, #0
 800d3ac:	3a01      	subs	r2, #1
 800d3ae:	6101      	str	r1, [r0, #16]
 800d3b0:	601a      	str	r2, [r3, #0]
 800d3b2:	6818      	ldr	r0, [r3, #0]
 800d3b4:	4770      	bx	lr
 800d3b6:	bf00      	nop

0800d3b8 <prvIdleTask>:
 800d3b8:	b580      	push	{r7, lr}
 800d3ba:	4d16      	ldr	r5, [pc, #88]	@ (800d414 <prvIdleTask+0x5c>)
 800d3bc:	4f16      	ldr	r7, [pc, #88]	@ (800d418 <prvIdleTask+0x60>)
 800d3be:	4e17      	ldr	r6, [pc, #92]	@ (800d41c <prvIdleTask+0x64>)
 800d3c0:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 800d420 <prvIdleTask+0x68>
 800d3c4:	f04f 2ae0 	mov.w	sl, #3758153728	@ 0xe000e000
 800d3c8:	f04f 5980 	mov.w	r9, #268435456	@ 0x10000000
 800d3cc:	e014      	b.n	800d3f8 <prvIdleTask+0x40>
 800d3ce:	f000 fe49 	bl	800e064 <vPortEnterCritical>
 800d3d2:	68fb      	ldr	r3, [r7, #12]
 800d3d4:	68dc      	ldr	r4, [r3, #12]
 800d3d6:	1d20      	adds	r0, r4, #4
 800d3d8:	f7ff ffda 	bl	800d390 <uxListRemove>
 800d3dc:	6833      	ldr	r3, [r6, #0]
 800d3de:	3b01      	subs	r3, #1
 800d3e0:	6033      	str	r3, [r6, #0]
 800d3e2:	682b      	ldr	r3, [r5, #0]
 800d3e4:	3b01      	subs	r3, #1
 800d3e6:	602b      	str	r3, [r5, #0]
 800d3e8:	f000 fe5e 	bl	800e0a8 <vPortExitCritical>
 800d3ec:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d3ee:	f001 f857 	bl	800e4a0 <vPortFree>
 800d3f2:	4620      	mov	r0, r4
 800d3f4:	f001 f854 	bl	800e4a0 <vPortFree>
 800d3f8:	682b      	ldr	r3, [r5, #0]
 800d3fa:	2b00      	cmp	r3, #0
 800d3fc:	d1e7      	bne.n	800d3ce <prvIdleTask+0x16>
 800d3fe:	f8d8 3000 	ldr.w	r3, [r8]
 800d402:	2b01      	cmp	r3, #1
 800d404:	d9f8      	bls.n	800d3f8 <prvIdleTask+0x40>
 800d406:	f8ca 9d04 	str.w	r9, [sl, #3332]	@ 0xd04
 800d40a:	f3bf 8f4f 	dsb	sy
 800d40e:	f3bf 8f6f 	isb	sy
 800d412:	e7f1      	b.n	800d3f8 <prvIdleTask+0x40>
 800d414:	200018ec 	.word	0x200018ec
 800d418:	200018f0 	.word	0x200018f0
 800d41c:	200018d4 	.word	0x200018d4
 800d420:	20001948 	.word	0x20001948

0800d424 <prvAddCurrentTaskToDelayedList>:
 800d424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d426:	4b21      	ldr	r3, [pc, #132]	@ (800d4ac <prvAddCurrentTaskToDelayedList+0x88>)
 800d428:	4d21      	ldr	r5, [pc, #132]	@ (800d4b0 <prvAddCurrentTaskToDelayedList+0x8c>)
 800d42a:	681e      	ldr	r6, [r3, #0]
 800d42c:	682b      	ldr	r3, [r5, #0]
 800d42e:	4604      	mov	r4, r0
 800d430:	1d18      	adds	r0, r3, #4
 800d432:	460f      	mov	r7, r1
 800d434:	f7ff ffac 	bl	800d390 <uxListRemove>
 800d438:	b940      	cbnz	r0, 800d44c <prvAddCurrentTaskToDelayedList+0x28>
 800d43a:	682b      	ldr	r3, [r5, #0]
 800d43c:	491d      	ldr	r1, [pc, #116]	@ (800d4b4 <prvAddCurrentTaskToDelayedList+0x90>)
 800d43e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d440:	2201      	movs	r2, #1
 800d442:	409a      	lsls	r2, r3
 800d444:	680b      	ldr	r3, [r1, #0]
 800d446:	ea23 0302 	bic.w	r3, r3, r2
 800d44a:	600b      	str	r3, [r1, #0]
 800d44c:	1c63      	adds	r3, r4, #1
 800d44e:	d00f      	beq.n	800d470 <prvAddCurrentTaskToDelayedList+0x4c>
 800d450:	682b      	ldr	r3, [r5, #0]
 800d452:	1934      	adds	r4, r6, r4
 800d454:	605c      	str	r4, [r3, #4]
 800d456:	d210      	bcs.n	800d47a <prvAddCurrentTaskToDelayedList+0x56>
 800d458:	4b17      	ldr	r3, [pc, #92]	@ (800d4b8 <prvAddCurrentTaskToDelayedList+0x94>)
 800d45a:	6818      	ldr	r0, [r3, #0]
 800d45c:	6829      	ldr	r1, [r5, #0]
 800d45e:	3104      	adds	r1, #4
 800d460:	f7ff ff7e 	bl	800d360 <vListInsert>
 800d464:	4b15      	ldr	r3, [pc, #84]	@ (800d4bc <prvAddCurrentTaskToDelayedList+0x98>)
 800d466:	681a      	ldr	r2, [r3, #0]
 800d468:	42a2      	cmp	r2, r4
 800d46a:	d900      	bls.n	800d46e <prvAddCurrentTaskToDelayedList+0x4a>
 800d46c:	601c      	str	r4, [r3, #0]
 800d46e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d470:	b9a7      	cbnz	r7, 800d49c <prvAddCurrentTaskToDelayedList+0x78>
 800d472:	682b      	ldr	r3, [r5, #0]
 800d474:	1e72      	subs	r2, r6, #1
 800d476:	605a      	str	r2, [r3, #4]
 800d478:	b13e      	cbz	r6, 800d48a <prvAddCurrentTaskToDelayedList+0x66>
 800d47a:	4b11      	ldr	r3, [pc, #68]	@ (800d4c0 <prvAddCurrentTaskToDelayedList+0x9c>)
 800d47c:	6818      	ldr	r0, [r3, #0]
 800d47e:	6829      	ldr	r1, [r5, #0]
 800d480:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d484:	3104      	adds	r1, #4
 800d486:	f7ff bf6b 	b.w	800d360 <vListInsert>
 800d48a:	4b0b      	ldr	r3, [pc, #44]	@ (800d4b8 <prvAddCurrentTaskToDelayedList+0x94>)
 800d48c:	6818      	ldr	r0, [r3, #0]
 800d48e:	6829      	ldr	r1, [r5, #0]
 800d490:	3104      	adds	r1, #4
 800d492:	f7ff ff65 	bl	800d360 <vListInsert>
 800d496:	4b09      	ldr	r3, [pc, #36]	@ (800d4bc <prvAddCurrentTaskToDelayedList+0x98>)
 800d498:	681b      	ldr	r3, [r3, #0]
 800d49a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d49c:	6829      	ldr	r1, [r5, #0]
 800d49e:	4809      	ldr	r0, [pc, #36]	@ (800d4c4 <prvAddCurrentTaskToDelayedList+0xa0>)
 800d4a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d4a4:	3104      	adds	r1, #4
 800d4a6:	f7ff bf4d 	b.w	800d344 <vListInsertEnd>
 800d4aa:	bf00      	nop
 800d4ac:	200018d0 	.word	0x200018d0
 800d4b0:	200019d4 	.word	0x200019d4
 800d4b4:	200018cc 	.word	0x200018cc
 800d4b8:	2000191c 	.word	0x2000191c
 800d4bc:	200018b4 	.word	0x200018b4
 800d4c0:	20001918 	.word	0x20001918
 800d4c4:	200018d8 	.word	0x200018d8

0800d4c8 <xTaskIncrementTick.part.0>:
 800d4c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4cc:	4b48      	ldr	r3, [pc, #288]	@ (800d5f0 <xTaskIncrementTick.part.0+0x128>)
 800d4ce:	681d      	ldr	r5, [r3, #0]
 800d4d0:	3501      	adds	r5, #1
 800d4d2:	b083      	sub	sp, #12
 800d4d4:	601d      	str	r5, [r3, #0]
 800d4d6:	2d00      	cmp	r5, #0
 800d4d8:	d041      	beq.n	800d55e <xTaskIncrementTick.part.0+0x96>
 800d4da:	4b46      	ldr	r3, [pc, #280]	@ (800d5f4 <xTaskIncrementTick.part.0+0x12c>)
 800d4dc:	9301      	str	r3, [sp, #4]
 800d4de:	681b      	ldr	r3, [r3, #0]
 800d4e0:	429d      	cmp	r5, r3
 800d4e2:	d349      	bcc.n	800d578 <xTaskIncrementTick.part.0+0xb0>
 800d4e4:	4e44      	ldr	r6, [pc, #272]	@ (800d5f8 <xTaskIncrementTick.part.0+0x130>)
 800d4e6:	f8df 8124 	ldr.w	r8, [pc, #292]	@ 800d60c <xTaskIncrementTick.part.0+0x144>
 800d4ea:	6833      	ldr	r3, [r6, #0]
 800d4ec:	f8df 9120 	ldr.w	r9, [pc, #288]	@ 800d610 <xTaskIncrementTick.part.0+0x148>
 800d4f0:	681c      	ldr	r4, [r3, #0]
 800d4f2:	2c00      	cmp	r4, #0
 800d4f4:	d076      	beq.n	800d5e4 <xTaskIncrementTick.part.0+0x11c>
 800d4f6:	4f41      	ldr	r7, [pc, #260]	@ (800d5fc <xTaskIncrementTick.part.0+0x134>)
 800d4f8:	2400      	movs	r4, #0
 800d4fa:	e022      	b.n	800d542 <xTaskIncrementTick.part.0+0x7a>
 800d4fc:	f7ff ff48 	bl	800d390 <uxListRemove>
 800d500:	f8db 2028 	ldr.w	r2, [fp, #40]	@ 0x28
 800d504:	f10b 0018 	add.w	r0, fp, #24
 800d508:	b10a      	cbz	r2, 800d50e <xTaskIncrementTick.part.0+0x46>
 800d50a:	f7ff ff41 	bl	800d390 <uxListRemove>
 800d50e:	f8db 002c 	ldr.w	r0, [fp, #44]	@ 0x2c
 800d512:	683b      	ldr	r3, [r7, #0]
 800d514:	2201      	movs	r2, #1
 800d516:	4082      	lsls	r2, r0
 800d518:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d51c:	431a      	orrs	r2, r3
 800d51e:	4651      	mov	r1, sl
 800d520:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d524:	603a      	str	r2, [r7, #0]
 800d526:	f7ff ff0d 	bl	800d344 <vListInsertEnd>
 800d52a:	f8d9 2000 	ldr.w	r2, [r9]
 800d52e:	6830      	ldr	r0, [r6, #0]
 800d530:	f8db 102c 	ldr.w	r1, [fp, #44]	@ 0x2c
 800d534:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d536:	6803      	ldr	r3, [r0, #0]
 800d538:	4291      	cmp	r1, r2
 800d53a:	bf28      	it	cs
 800d53c:	2401      	movcs	r4, #1
 800d53e:	2b00      	cmp	r3, #0
 800d540:	d050      	beq.n	800d5e4 <xTaskIncrementTick.part.0+0x11c>
 800d542:	6833      	ldr	r3, [r6, #0]
 800d544:	68db      	ldr	r3, [r3, #12]
 800d546:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 800d54a:	f8db 2004 	ldr.w	r2, [fp, #4]
 800d54e:	f10b 0a04 	add.w	sl, fp, #4
 800d552:	4295      	cmp	r5, r2
 800d554:	4650      	mov	r0, sl
 800d556:	d2d1      	bcs.n	800d4fc <xTaskIncrementTick.part.0+0x34>
 800d558:	9b01      	ldr	r3, [sp, #4]
 800d55a:	601a      	str	r2, [r3, #0]
 800d55c:	e011      	b.n	800d582 <xTaskIncrementTick.part.0+0xba>
 800d55e:	4b26      	ldr	r3, [pc, #152]	@ (800d5f8 <xTaskIncrementTick.part.0+0x130>)
 800d560:	681a      	ldr	r2, [r3, #0]
 800d562:	6812      	ldr	r2, [r2, #0]
 800d564:	b30a      	cbz	r2, 800d5aa <xTaskIncrementTick.part.0+0xe2>
 800d566:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d56a:	f383 8811 	msr	BASEPRI, r3
 800d56e:	f3bf 8f6f 	isb	sy
 800d572:	f3bf 8f4f 	dsb	sy
 800d576:	e7fe      	b.n	800d576 <xTaskIncrementTick.part.0+0xae>
 800d578:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 800d60c <xTaskIncrementTick.part.0+0x144>
 800d57c:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 800d610 <xTaskIncrementTick.part.0+0x148>
 800d580:	2400      	movs	r4, #0
 800d582:	f8d9 3000 	ldr.w	r3, [r9]
 800d586:	491e      	ldr	r1, [pc, #120]	@ (800d600 <xTaskIncrementTick.part.0+0x138>)
 800d588:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d58a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d58e:	009b      	lsls	r3, r3, #2
 800d590:	f858 2003 	ldr.w	r2, [r8, r3]
 800d594:	680b      	ldr	r3, [r1, #0]
 800d596:	2a02      	cmp	r2, #2
 800d598:	bf28      	it	cs
 800d59a:	2401      	movcs	r4, #1
 800d59c:	2b00      	cmp	r3, #0
 800d59e:	bf0c      	ite	eq
 800d5a0:	4620      	moveq	r0, r4
 800d5a2:	2001      	movne	r0, #1
 800d5a4:	b003      	add	sp, #12
 800d5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5aa:	4a16      	ldr	r2, [pc, #88]	@ (800d604 <xTaskIncrementTick.part.0+0x13c>)
 800d5ac:	6818      	ldr	r0, [r3, #0]
 800d5ae:	6811      	ldr	r1, [r2, #0]
 800d5b0:	6019      	str	r1, [r3, #0]
 800d5b2:	4915      	ldr	r1, [pc, #84]	@ (800d608 <xTaskIncrementTick.part.0+0x140>)
 800d5b4:	6010      	str	r0, [r2, #0]
 800d5b6:	680a      	ldr	r2, [r1, #0]
 800d5b8:	3201      	adds	r2, #1
 800d5ba:	600a      	str	r2, [r1, #0]
 800d5bc:	681a      	ldr	r2, [r3, #0]
 800d5be:	6812      	ldr	r2, [r2, #0]
 800d5c0:	b93a      	cbnz	r2, 800d5d2 <xTaskIncrementTick.part.0+0x10a>
 800d5c2:	4b0c      	ldr	r3, [pc, #48]	@ (800d5f4 <xTaskIncrementTick.part.0+0x12c>)
 800d5c4:	9301      	str	r3, [sp, #4]
 800d5c6:	461a      	mov	r2, r3
 800d5c8:	f04f 33ff 	mov.w	r3, #4294967295
 800d5cc:	6013      	str	r3, [r2, #0]
 800d5ce:	4613      	mov	r3, r2
 800d5d0:	e785      	b.n	800d4de <xTaskIncrementTick.part.0+0x16>
 800d5d2:	681b      	ldr	r3, [r3, #0]
 800d5d4:	4a07      	ldr	r2, [pc, #28]	@ (800d5f4 <xTaskIncrementTick.part.0+0x12c>)
 800d5d6:	68db      	ldr	r3, [r3, #12]
 800d5d8:	9201      	str	r2, [sp, #4]
 800d5da:	68db      	ldr	r3, [r3, #12]
 800d5dc:	685b      	ldr	r3, [r3, #4]
 800d5de:	6013      	str	r3, [r2, #0]
 800d5e0:	4613      	mov	r3, r2
 800d5e2:	e77c      	b.n	800d4de <xTaskIncrementTick.part.0+0x16>
 800d5e4:	9a01      	ldr	r2, [sp, #4]
 800d5e6:	f04f 33ff 	mov.w	r3, #4294967295
 800d5ea:	6013      	str	r3, [r2, #0]
 800d5ec:	e7c9      	b.n	800d582 <xTaskIncrementTick.part.0+0xba>
 800d5ee:	bf00      	nop
 800d5f0:	200018d0 	.word	0x200018d0
 800d5f4:	200018b4 	.word	0x200018b4
 800d5f8:	2000191c 	.word	0x2000191c
 800d5fc:	200018cc 	.word	0x200018cc
 800d600:	200018c0 	.word	0x200018c0
 800d604:	20001918 	.word	0x20001918
 800d608:	200018bc 	.word	0x200018bc
 800d60c:	20001948 	.word	0x20001948
 800d610:	200019d4 	.word	0x200019d4

0800d614 <xTaskResumeAll.part.0>:
 800d614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d618:	4c47      	ldr	r4, [pc, #284]	@ (800d738 <xTaskResumeAll.part.0+0x124>)
 800d61a:	b083      	sub	sp, #12
 800d61c:	f000 fd22 	bl	800e064 <vPortEnterCritical>
 800d620:	6823      	ldr	r3, [r4, #0]
 800d622:	3b01      	subs	r3, #1
 800d624:	6023      	str	r3, [r4, #0]
 800d626:	6823      	ldr	r3, [r4, #0]
 800d628:	2b00      	cmp	r3, #0
 800d62a:	d16c      	bne.n	800d706 <xTaskResumeAll.part.0+0xf2>
 800d62c:	4b43      	ldr	r3, [pc, #268]	@ (800d73c <xTaskResumeAll.part.0+0x128>)
 800d62e:	681b      	ldr	r3, [r3, #0]
 800d630:	2b00      	cmp	r3, #0
 800d632:	d068      	beq.n	800d706 <xTaskResumeAll.part.0+0xf2>
 800d634:	f8df b120 	ldr.w	fp, [pc, #288]	@ 800d758 <xTaskResumeAll.part.0+0x144>
 800d638:	f8db 3000 	ldr.w	r3, [fp]
 800d63c:	2b00      	cmp	r3, #0
 800d63e:	d077      	beq.n	800d730 <xTaskResumeAll.part.0+0x11c>
 800d640:	4b3f      	ldr	r3, [pc, #252]	@ (800d740 <xTaskResumeAll.part.0+0x12c>)
 800d642:	4d40      	ldr	r5, [pc, #256]	@ (800d744 <xTaskResumeAll.part.0+0x130>)
 800d644:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 800d75c <xTaskResumeAll.part.0+0x148>
 800d648:	4f3f      	ldr	r7, [pc, #252]	@ (800d748 <xTaskResumeAll.part.0+0x134>)
 800d64a:	9301      	str	r3, [sp, #4]
 800d64c:	2601      	movs	r6, #1
 800d64e:	f8db 300c 	ldr.w	r3, [fp, #12]
 800d652:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800d656:	f10a 0904 	add.w	r9, sl, #4
 800d65a:	f10a 0018 	add.w	r0, sl, #24
 800d65e:	f7ff fe97 	bl	800d390 <uxListRemove>
 800d662:	4648      	mov	r0, r9
 800d664:	f7ff fe94 	bl	800d390 <uxListRemove>
 800d668:	f8da 002c 	ldr.w	r0, [sl, #44]	@ 0x2c
 800d66c:	682a      	ldr	r2, [r5, #0]
 800d66e:	fa06 f300 	lsl.w	r3, r6, r0
 800d672:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d676:	4313      	orrs	r3, r2
 800d678:	4649      	mov	r1, r9
 800d67a:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d67e:	602b      	str	r3, [r5, #0]
 800d680:	f7ff fe60 	bl	800d344 <vListInsertEnd>
 800d684:	683b      	ldr	r3, [r7, #0]
 800d686:	f8da 202c 	ldr.w	r2, [sl, #44]	@ 0x2c
 800d68a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d68c:	429a      	cmp	r2, r3
 800d68e:	d341      	bcc.n	800d714 <xTaskResumeAll.part.0+0x100>
 800d690:	9b01      	ldr	r3, [sp, #4]
 800d692:	601e      	str	r6, [r3, #0]
 800d694:	f8db 3000 	ldr.w	r3, [fp]
 800d698:	2b00      	cmp	r3, #0
 800d69a:	d1d8      	bne.n	800d64e <xTaskResumeAll.part.0+0x3a>
 800d69c:	4b2b      	ldr	r3, [pc, #172]	@ (800d74c <xTaskResumeAll.part.0+0x138>)
 800d69e:	681a      	ldr	r2, [r3, #0]
 800d6a0:	6812      	ldr	r2, [r2, #0]
 800d6a2:	2a00      	cmp	r2, #0
 800d6a4:	d03f      	beq.n	800d726 <xTaskResumeAll.part.0+0x112>
 800d6a6:	681a      	ldr	r2, [r3, #0]
 800d6a8:	4b29      	ldr	r3, [pc, #164]	@ (800d750 <xTaskResumeAll.part.0+0x13c>)
 800d6aa:	68d2      	ldr	r2, [r2, #12]
 800d6ac:	68d2      	ldr	r2, [r2, #12]
 800d6ae:	6852      	ldr	r2, [r2, #4]
 800d6b0:	601a      	str	r2, [r3, #0]
 800d6b2:	4e28      	ldr	r6, [pc, #160]	@ (800d754 <xTaskResumeAll.part.0+0x140>)
 800d6b4:	6835      	ldr	r5, [r6, #0]
 800d6b6:	b195      	cbz	r5, 800d6de <xTaskResumeAll.part.0+0xca>
 800d6b8:	2701      	movs	r7, #1
 800d6ba:	e006      	b.n	800d6ca <xTaskResumeAll.part.0+0xb6>
 800d6bc:	f7ff ff04 	bl	800d4c8 <xTaskIncrementTick.part.0>
 800d6c0:	b108      	cbz	r0, 800d6c6 <xTaskResumeAll.part.0+0xb2>
 800d6c2:	9b01      	ldr	r3, [sp, #4]
 800d6c4:	601f      	str	r7, [r3, #0]
 800d6c6:	3d01      	subs	r5, #1
 800d6c8:	d008      	beq.n	800d6dc <xTaskResumeAll.part.0+0xc8>
 800d6ca:	6823      	ldr	r3, [r4, #0]
 800d6cc:	2b00      	cmp	r3, #0
 800d6ce:	d0f5      	beq.n	800d6bc <xTaskResumeAll.part.0+0xa8>
 800d6d0:	6833      	ldr	r3, [r6, #0]
 800d6d2:	3d01      	subs	r5, #1
 800d6d4:	f103 0301 	add.w	r3, r3, #1
 800d6d8:	6033      	str	r3, [r6, #0]
 800d6da:	d1f6      	bne.n	800d6ca <xTaskResumeAll.part.0+0xb6>
 800d6dc:	6035      	str	r5, [r6, #0]
 800d6de:	9b01      	ldr	r3, [sp, #4]
 800d6e0:	681b      	ldr	r3, [r3, #0]
 800d6e2:	b183      	cbz	r3, 800d706 <xTaskResumeAll.part.0+0xf2>
 800d6e4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d6e8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d6ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d6f0:	f3bf 8f4f 	dsb	sy
 800d6f4:	f3bf 8f6f 	isb	sy
 800d6f8:	f000 fcd6 	bl	800e0a8 <vPortExitCritical>
 800d6fc:	2401      	movs	r4, #1
 800d6fe:	4620      	mov	r0, r4
 800d700:	b003      	add	sp, #12
 800d702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d706:	f000 fccf 	bl	800e0a8 <vPortExitCritical>
 800d70a:	2400      	movs	r4, #0
 800d70c:	4620      	mov	r0, r4
 800d70e:	b003      	add	sp, #12
 800d710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d714:	f8db 3000 	ldr.w	r3, [fp]
 800d718:	2b00      	cmp	r3, #0
 800d71a:	d198      	bne.n	800d64e <xTaskResumeAll.part.0+0x3a>
 800d71c:	4b0b      	ldr	r3, [pc, #44]	@ (800d74c <xTaskResumeAll.part.0+0x138>)
 800d71e:	681a      	ldr	r2, [r3, #0]
 800d720:	6812      	ldr	r2, [r2, #0]
 800d722:	2a00      	cmp	r2, #0
 800d724:	d1bf      	bne.n	800d6a6 <xTaskResumeAll.part.0+0x92>
 800d726:	4b0a      	ldr	r3, [pc, #40]	@ (800d750 <xTaskResumeAll.part.0+0x13c>)
 800d728:	f04f 32ff 	mov.w	r2, #4294967295
 800d72c:	601a      	str	r2, [r3, #0]
 800d72e:	e7c0      	b.n	800d6b2 <xTaskResumeAll.part.0+0x9e>
 800d730:	4b03      	ldr	r3, [pc, #12]	@ (800d740 <xTaskResumeAll.part.0+0x12c>)
 800d732:	9301      	str	r3, [sp, #4]
 800d734:	e7bd      	b.n	800d6b2 <xTaskResumeAll.part.0+0x9e>
 800d736:	bf00      	nop
 800d738:	200018ac 	.word	0x200018ac
 800d73c:	200018d4 	.word	0x200018d4
 800d740:	200018c0 	.word	0x200018c0
 800d744:	200018cc 	.word	0x200018cc
 800d748:	200019d4 	.word	0x200019d4
 800d74c:	2000191c 	.word	0x2000191c
 800d750:	200018b4 	.word	0x200018b4
 800d754:	200018c4 	.word	0x200018c4
 800d758:	20001904 	.word	0x20001904
 800d75c:	20001948 	.word	0x20001948

0800d760 <xTaskCreate>:
 800d760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d764:	0095      	lsls	r5, r2, #2
 800d766:	4680      	mov	r8, r0
 800d768:	4628      	mov	r0, r5
 800d76a:	460e      	mov	r6, r1
 800d76c:	4699      	mov	r9, r3
 800d76e:	f000 fdd9 	bl	800e324 <pvPortMalloc>
 800d772:	2800      	cmp	r0, #0
 800d774:	f000 80ac 	beq.w	800d8d0 <xTaskCreate+0x170>
 800d778:	4607      	mov	r7, r0
 800d77a:	2054      	movs	r0, #84	@ 0x54
 800d77c:	f000 fdd2 	bl	800e324 <pvPortMalloc>
 800d780:	4604      	mov	r4, r0
 800d782:	2800      	cmp	r0, #0
 800d784:	f000 80a1 	beq.w	800d8ca <xTaskCreate+0x16a>
 800d788:	3d04      	subs	r5, #4
 800d78a:	443d      	add	r5, r7
 800d78c:	6307      	str	r7, [r0, #48]	@ 0x30
 800d78e:	f025 0507 	bic.w	r5, r5, #7
 800d792:	2e00      	cmp	r6, #0
 800d794:	f000 80af 	beq.w	800d8f6 <xTaskCreate+0x196>
 800d798:	7833      	ldrb	r3, [r6, #0]
 800d79a:	f880 3034 	strb.w	r3, [r0, #52]	@ 0x34
 800d79e:	2b00      	cmp	r3, #0
 800d7a0:	d036      	beq.n	800d810 <xTaskCreate+0xb0>
 800d7a2:	7873      	ldrb	r3, [r6, #1]
 800d7a4:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800d7a8:	b393      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7aa:	78b3      	ldrb	r3, [r6, #2]
 800d7ac:	f880 3036 	strb.w	r3, [r0, #54]	@ 0x36
 800d7b0:	b373      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7b2:	78f3      	ldrb	r3, [r6, #3]
 800d7b4:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800d7b8:	b353      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7ba:	7933      	ldrb	r3, [r6, #4]
 800d7bc:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
 800d7c0:	b333      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7c2:	7973      	ldrb	r3, [r6, #5]
 800d7c4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 800d7c8:	b313      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7ca:	79b3      	ldrb	r3, [r6, #6]
 800d7cc:	f880 303a 	strb.w	r3, [r0, #58]	@ 0x3a
 800d7d0:	b1f3      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7d2:	79f3      	ldrb	r3, [r6, #7]
 800d7d4:	f880 303b 	strb.w	r3, [r0, #59]	@ 0x3b
 800d7d8:	b1d3      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7da:	7a33      	ldrb	r3, [r6, #8]
 800d7dc:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
 800d7e0:	b1b3      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7e2:	7a73      	ldrb	r3, [r6, #9]
 800d7e4:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800d7e8:	b193      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7ea:	7ab3      	ldrb	r3, [r6, #10]
 800d7ec:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
 800d7f0:	b173      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7f2:	7af3      	ldrb	r3, [r6, #11]
 800d7f4:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
 800d7f8:	b153      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d7fa:	7b33      	ldrb	r3, [r6, #12]
 800d7fc:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
 800d800:	b133      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d802:	7b73      	ldrb	r3, [r6, #13]
 800d804:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
 800d808:	b113      	cbz	r3, 800d810 <xTaskCreate+0xb0>
 800d80a:	7bb3      	ldrb	r3, [r6, #14]
 800d80c:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
 800d810:	2300      	movs	r3, #0
 800d812:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800d816:	9e08      	ldr	r6, [sp, #32]
 800d818:	2e06      	cmp	r6, #6
 800d81a:	bf28      	it	cs
 800d81c:	2606      	movcs	r6, #6
 800d81e:	f04f 0a00 	mov.w	sl, #0
 800d822:	1d27      	adds	r7, r4, #4
 800d824:	62e6      	str	r6, [r4, #44]	@ 0x2c
 800d826:	6466      	str	r6, [r4, #68]	@ 0x44
 800d828:	4638      	mov	r0, r7
 800d82a:	f8c4 a048 	str.w	sl, [r4, #72]	@ 0x48
 800d82e:	f7ff fd85 	bl	800d33c <vListInitialiseItem>
 800d832:	f1c6 0607 	rsb	r6, r6, #7
 800d836:	f104 0018 	add.w	r0, r4, #24
 800d83a:	f7ff fd7f 	bl	800d33c <vListInitialiseItem>
 800d83e:	f8c4 a04c 	str.w	sl, [r4, #76]	@ 0x4c
 800d842:	61a6      	str	r6, [r4, #24]
 800d844:	f884 a050 	strb.w	sl, [r4, #80]	@ 0x50
 800d848:	6124      	str	r4, [r4, #16]
 800d84a:	6264      	str	r4, [r4, #36]	@ 0x24
 800d84c:	464a      	mov	r2, r9
 800d84e:	4641      	mov	r1, r8
 800d850:	4628      	mov	r0, r5
 800d852:	f000 fbe1 	bl	800e018 <pxPortInitialiseStack>
 800d856:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d858:	6020      	str	r0, [r4, #0]
 800d85a:	b103      	cbz	r3, 800d85e <xTaskCreate+0xfe>
 800d85c:	601c      	str	r4, [r3, #0]
 800d85e:	f000 fc01 	bl	800e064 <vPortEnterCritical>
 800d862:	4a39      	ldr	r2, [pc, #228]	@ (800d948 <xTaskCreate+0x1e8>)
 800d864:	4d39      	ldr	r5, [pc, #228]	@ (800d94c <xTaskCreate+0x1ec>)
 800d866:	6813      	ldr	r3, [r2, #0]
 800d868:	3301      	adds	r3, #1
 800d86a:	6013      	str	r3, [r2, #0]
 800d86c:	682b      	ldr	r3, [r5, #0]
 800d86e:	2b00      	cmp	r3, #0
 800d870:	d038      	beq.n	800d8e4 <xTaskCreate+0x184>
 800d872:	4e37      	ldr	r6, [pc, #220]	@ (800d950 <xTaskCreate+0x1f0>)
 800d874:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800d876:	6833      	ldr	r3, [r6, #0]
 800d878:	b373      	cbz	r3, 800d8d8 <xTaskCreate+0x178>
 800d87a:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 800d974 <xTaskCreate+0x214>
 800d87e:	4a35      	ldr	r2, [pc, #212]	@ (800d954 <xTaskCreate+0x1f4>)
 800d880:	4639      	mov	r1, r7
 800d882:	4f35      	ldr	r7, [pc, #212]	@ (800d958 <xTaskCreate+0x1f8>)
 800d884:	683b      	ldr	r3, [r7, #0]
 800d886:	3301      	adds	r3, #1
 800d888:	603b      	str	r3, [r7, #0]
 800d88a:	6817      	ldr	r7, [r2, #0]
 800d88c:	2301      	movs	r3, #1
 800d88e:	4083      	lsls	r3, r0
 800d890:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d894:	433b      	orrs	r3, r7
 800d896:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800d89a:	6013      	str	r3, [r2, #0]
 800d89c:	f7ff fd52 	bl	800d344 <vListInsertEnd>
 800d8a0:	f000 fc02 	bl	800e0a8 <vPortExitCritical>
 800d8a4:	6833      	ldr	r3, [r6, #0]
 800d8a6:	b173      	cbz	r3, 800d8c6 <xTaskCreate+0x166>
 800d8a8:	682a      	ldr	r2, [r5, #0]
 800d8aa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d8ac:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d8ae:	429a      	cmp	r2, r3
 800d8b0:	d209      	bcs.n	800d8c6 <xTaskCreate+0x166>
 800d8b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d8b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d8ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d8be:	f3bf 8f4f 	dsb	sy
 800d8c2:	f3bf 8f6f 	isb	sy
 800d8c6:	2001      	movs	r0, #1
 800d8c8:	e004      	b.n	800d8d4 <xTaskCreate+0x174>
 800d8ca:	4638      	mov	r0, r7
 800d8cc:	f000 fde8 	bl	800e4a0 <vPortFree>
 800d8d0:	f04f 30ff 	mov.w	r0, #4294967295
 800d8d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d8d8:	682b      	ldr	r3, [r5, #0]
 800d8da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d8dc:	4283      	cmp	r3, r0
 800d8de:	bf98      	it	ls
 800d8e0:	602c      	strls	r4, [r5, #0]
 800d8e2:	e7ca      	b.n	800d87a <xTaskCreate+0x11a>
 800d8e4:	602c      	str	r4, [r5, #0]
 800d8e6:	6813      	ldr	r3, [r2, #0]
 800d8e8:	2b01      	cmp	r3, #1
 800d8ea:	d007      	beq.n	800d8fc <xTaskCreate+0x19c>
 800d8ec:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800d8ee:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 800d974 <xTaskCreate+0x214>
 800d8f2:	4e17      	ldr	r6, [pc, #92]	@ (800d950 <xTaskCreate+0x1f0>)
 800d8f4:	e7c3      	b.n	800d87e <xTaskCreate+0x11e>
 800d8f6:	f880 6034 	strb.w	r6, [r0, #52]	@ 0x34
 800d8fa:	e78c      	b.n	800d816 <xTaskCreate+0xb6>
 800d8fc:	f8df 8074 	ldr.w	r8, [pc, #116]	@ 800d974 <xTaskCreate+0x214>
 800d900:	4646      	mov	r6, r8
 800d902:	f108 098c 	add.w	r9, r8, #140	@ 0x8c
 800d906:	4630      	mov	r0, r6
 800d908:	3614      	adds	r6, #20
 800d90a:	f7ff fd0b 	bl	800d324 <vListInitialise>
 800d90e:	45b1      	cmp	r9, r6
 800d910:	d1f9      	bne.n	800d906 <xTaskCreate+0x1a6>
 800d912:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 800d978 <xTaskCreate+0x218>
 800d916:	4e11      	ldr	r6, [pc, #68]	@ (800d95c <xTaskCreate+0x1fc>)
 800d918:	4648      	mov	r0, r9
 800d91a:	f7ff fd03 	bl	800d324 <vListInitialise>
 800d91e:	4630      	mov	r0, r6
 800d920:	f7ff fd00 	bl	800d324 <vListInitialise>
 800d924:	480e      	ldr	r0, [pc, #56]	@ (800d960 <xTaskCreate+0x200>)
 800d926:	f7ff fcfd 	bl	800d324 <vListInitialise>
 800d92a:	480e      	ldr	r0, [pc, #56]	@ (800d964 <xTaskCreate+0x204>)
 800d92c:	f7ff fcfa 	bl	800d324 <vListInitialise>
 800d930:	480d      	ldr	r0, [pc, #52]	@ (800d968 <xTaskCreate+0x208>)
 800d932:	f7ff fcf7 	bl	800d324 <vListInitialise>
 800d936:	4b0d      	ldr	r3, [pc, #52]	@ (800d96c <xTaskCreate+0x20c>)
 800d938:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800d93a:	f8c3 9000 	str.w	r9, [r3]
 800d93e:	4b0c      	ldr	r3, [pc, #48]	@ (800d970 <xTaskCreate+0x210>)
 800d940:	601e      	str	r6, [r3, #0]
 800d942:	4e03      	ldr	r6, [pc, #12]	@ (800d950 <xTaskCreate+0x1f0>)
 800d944:	e79b      	b.n	800d87e <xTaskCreate+0x11e>
 800d946:	bf00      	nop
 800d948:	200018d4 	.word	0x200018d4
 800d94c:	200019d4 	.word	0x200019d4
 800d950:	200018c8 	.word	0x200018c8
 800d954:	200018cc 	.word	0x200018cc
 800d958:	200018b8 	.word	0x200018b8
 800d95c:	20001920 	.word	0x20001920
 800d960:	20001904 	.word	0x20001904
 800d964:	200018f0 	.word	0x200018f0
 800d968:	200018d8 	.word	0x200018d8
 800d96c:	2000191c 	.word	0x2000191c
 800d970:	20001918 	.word	0x20001918
 800d974:	20001948 	.word	0x20001948
 800d978:	20001934 	.word	0x20001934

0800d97c <vTaskDelay>:
 800d97c:	b510      	push	{r4, lr}
 800d97e:	b950      	cbnz	r0, 800d996 <vTaskDelay+0x1a>
 800d980:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d984:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d988:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d98c:	f3bf 8f4f 	dsb	sy
 800d990:	f3bf 8f6f 	isb	sy
 800d994:	bd10      	pop	{r4, pc}
 800d996:	4c10      	ldr	r4, [pc, #64]	@ (800d9d8 <vTaskDelay+0x5c>)
 800d998:	6821      	ldr	r1, [r4, #0]
 800d99a:	b141      	cbz	r1, 800d9ae <vTaskDelay+0x32>
 800d99c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d9a0:	f383 8811 	msr	BASEPRI, r3
 800d9a4:	f3bf 8f6f 	isb	sy
 800d9a8:	f3bf 8f4f 	dsb	sy
 800d9ac:	e7fe      	b.n	800d9ac <vTaskDelay+0x30>
 800d9ae:	6823      	ldr	r3, [r4, #0]
 800d9b0:	3301      	adds	r3, #1
 800d9b2:	6023      	str	r3, [r4, #0]
 800d9b4:	f7ff fd36 	bl	800d424 <prvAddCurrentTaskToDelayedList>
 800d9b8:	6823      	ldr	r3, [r4, #0]
 800d9ba:	b943      	cbnz	r3, 800d9ce <vTaskDelay+0x52>
 800d9bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d9c0:	f383 8811 	msr	BASEPRI, r3
 800d9c4:	f3bf 8f6f 	isb	sy
 800d9c8:	f3bf 8f4f 	dsb	sy
 800d9cc:	e7fe      	b.n	800d9cc <vTaskDelay+0x50>
 800d9ce:	f7ff fe21 	bl	800d614 <xTaskResumeAll.part.0>
 800d9d2:	2800      	cmp	r0, #0
 800d9d4:	d0d4      	beq.n	800d980 <vTaskDelay+0x4>
 800d9d6:	bd10      	pop	{r4, pc}
 800d9d8:	200018ac 	.word	0x200018ac

0800d9dc <vTaskPrioritySet>:
 800d9dc:	2906      	cmp	r1, #6
 800d9de:	d908      	bls.n	800d9f2 <vTaskPrioritySet+0x16>
 800d9e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d9e4:	f383 8811 	msr	BASEPRI, r3
 800d9e8:	f3bf 8f6f 	isb	sy
 800d9ec:	f3bf 8f4f 	dsb	sy
 800d9f0:	e7fe      	b.n	800d9f0 <vTaskPrioritySet+0x14>
 800d9f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9f6:	4604      	mov	r4, r0
 800d9f8:	460d      	mov	r5, r1
 800d9fa:	f000 fb33 	bl	800e064 <vPortEnterCritical>
 800d9fe:	2c00      	cmp	r4, #0
 800da00:	d035      	beq.n	800da6e <vTaskPrioritySet+0x92>
 800da02:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800da04:	429d      	cmp	r5, r3
 800da06:	d02e      	beq.n	800da66 <vTaskPrioritySet+0x8a>
 800da08:	4a29      	ldr	r2, [pc, #164]	@ (800dab0 <vTaskPrioritySet+0xd4>)
 800da0a:	d909      	bls.n	800da20 <vTaskPrioritySet+0x44>
 800da0c:	6811      	ldr	r1, [r2, #0]
 800da0e:	42a1      	cmp	r1, r4
 800da10:	d04b      	beq.n	800daaa <vTaskPrioritySet+0xce>
 800da12:	6812      	ldr	r2, [r2, #0]
 800da14:	6ad7      	ldr	r7, [r2, #44]	@ 0x2c
 800da16:	42af      	cmp	r7, r5
 800da18:	bf8c      	ite	hi
 800da1a:	2700      	movhi	r7, #0
 800da1c:	2701      	movls	r7, #1
 800da1e:	e004      	b.n	800da2a <vTaskPrioritySet+0x4e>
 800da20:	6817      	ldr	r7, [r2, #0]
 800da22:	1b3f      	subs	r7, r7, r4
 800da24:	fab7 f787 	clz	r7, r7
 800da28:	097f      	lsrs	r7, r7, #5
 800da2a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800da2c:	6465      	str	r5, [r4, #68]	@ 0x44
 800da2e:	42b3      	cmp	r3, r6
 800da30:	69a3      	ldr	r3, [r4, #24]
 800da32:	bf08      	it	eq
 800da34:	62e5      	streq	r5, [r4, #44]	@ 0x2c
 800da36:	2b00      	cmp	r3, #0
 800da38:	bfa4      	itt	ge
 800da3a:	f1c5 0507 	rsbge	r5, r5, #7
 800da3e:	61a5      	strge	r5, [r4, #24]
 800da40:	4d1c      	ldr	r5, [pc, #112]	@ (800dab4 <vTaskPrioritySet+0xd8>)
 800da42:	6962      	ldr	r2, [r4, #20]
 800da44:	eb06 0386 	add.w	r3, r6, r6, lsl #2
 800da48:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800da4c:	429a      	cmp	r2, r3
 800da4e:	d011      	beq.n	800da74 <vTaskPrioritySet+0x98>
 800da50:	b14f      	cbz	r7, 800da66 <vTaskPrioritySet+0x8a>
 800da52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800da56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800da5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800da5e:	f3bf 8f4f 	dsb	sy
 800da62:	f3bf 8f6f 	isb	sy
 800da66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800da6a:	f000 bb1d 	b.w	800e0a8 <vPortExitCritical>
 800da6e:	4b10      	ldr	r3, [pc, #64]	@ (800dab0 <vTaskPrioritySet+0xd4>)
 800da70:	681c      	ldr	r4, [r3, #0]
 800da72:	e7c6      	b.n	800da02 <vTaskPrioritySet+0x26>
 800da74:	f104 0804 	add.w	r8, r4, #4
 800da78:	4640      	mov	r0, r8
 800da7a:	f7ff fc89 	bl	800d390 <uxListRemove>
 800da7e:	4b0e      	ldr	r3, [pc, #56]	@ (800dab8 <vTaskPrioritySet+0xdc>)
 800da80:	b928      	cbnz	r0, 800da8e <vTaskPrioritySet+0xb2>
 800da82:	681a      	ldr	r2, [r3, #0]
 800da84:	2001      	movs	r0, #1
 800da86:	40b0      	lsls	r0, r6
 800da88:	ea22 0200 	bic.w	r2, r2, r0
 800da8c:	601a      	str	r2, [r3, #0]
 800da8e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800da90:	681c      	ldr	r4, [r3, #0]
 800da92:	2201      	movs	r2, #1
 800da94:	4082      	lsls	r2, r0
 800da96:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800da9a:	4322      	orrs	r2, r4
 800da9c:	4641      	mov	r1, r8
 800da9e:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 800daa2:	601a      	str	r2, [r3, #0]
 800daa4:	f7ff fc4e 	bl	800d344 <vListInsertEnd>
 800daa8:	e7d2      	b.n	800da50 <vTaskPrioritySet+0x74>
 800daaa:	2700      	movs	r7, #0
 800daac:	e7bd      	b.n	800da2a <vTaskPrioritySet+0x4e>
 800daae:	bf00      	nop
 800dab0:	200019d4 	.word	0x200019d4
 800dab4:	20001948 	.word	0x20001948
 800dab8:	200018cc 	.word	0x200018cc

0800dabc <vTaskResume>:
 800dabc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dabe:	b178      	cbz	r0, 800dae0 <vTaskResume+0x24>
 800dac0:	4d20      	ldr	r5, [pc, #128]	@ (800db44 <vTaskResume+0x88>)
 800dac2:	682b      	ldr	r3, [r5, #0]
 800dac4:	4283      	cmp	r3, r0
 800dac6:	4604      	mov	r4, r0
 800dac8:	d009      	beq.n	800dade <vTaskResume+0x22>
 800daca:	f000 facb 	bl	800e064 <vPortEnterCritical>
 800dace:	4b1e      	ldr	r3, [pc, #120]	@ (800db48 <vTaskResume+0x8c>)
 800dad0:	6962      	ldr	r2, [r4, #20]
 800dad2:	429a      	cmp	r2, r3
 800dad4:	d00d      	beq.n	800daf2 <vTaskResume+0x36>
 800dad6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dada:	f000 bae5 	b.w	800e0a8 <vPortExitCritical>
 800dade:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dae0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dae4:	f383 8811 	msr	BASEPRI, r3
 800dae8:	f3bf 8f6f 	isb	sy
 800daec:	f3bf 8f4f 	dsb	sy
 800daf0:	e7fe      	b.n	800daf0 <vTaskResume+0x34>
 800daf2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800daf4:	4a15      	ldr	r2, [pc, #84]	@ (800db4c <vTaskResume+0x90>)
 800daf6:	4293      	cmp	r3, r2
 800daf8:	d0ed      	beq.n	800dad6 <vTaskResume+0x1a>
 800dafa:	2b00      	cmp	r3, #0
 800dafc:	d1eb      	bne.n	800dad6 <vTaskResume+0x1a>
 800dafe:	1d26      	adds	r6, r4, #4
 800db00:	4630      	mov	r0, r6
 800db02:	f7ff fc45 	bl	800d390 <uxListRemove>
 800db06:	4812      	ldr	r0, [pc, #72]	@ (800db50 <vTaskResume+0x94>)
 800db08:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800db0a:	6807      	ldr	r7, [r0, #0]
 800db0c:	2201      	movs	r2, #1
 800db0e:	4631      	mov	r1, r6
 800db10:	409a      	lsls	r2, r3
 800db12:	4e10      	ldr	r6, [pc, #64]	@ (800db54 <vTaskResume+0x98>)
 800db14:	433a      	orrs	r2, r7
 800db16:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800db1a:	6002      	str	r2, [r0, #0]
 800db1c:	eb06 0083 	add.w	r0, r6, r3, lsl #2
 800db20:	f7ff fc10 	bl	800d344 <vListInsertEnd>
 800db24:	682b      	ldr	r3, [r5, #0]
 800db26:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800db28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db2a:	429a      	cmp	r2, r3
 800db2c:	d3d3      	bcc.n	800dad6 <vTaskResume+0x1a>
 800db2e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800db32:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800db36:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800db3a:	f3bf 8f4f 	dsb	sy
 800db3e:	f3bf 8f6f 	isb	sy
 800db42:	e7c8      	b.n	800dad6 <vTaskResume+0x1a>
 800db44:	200019d4 	.word	0x200019d4
 800db48:	200018d8 	.word	0x200018d8
 800db4c:	20001904 	.word	0x20001904
 800db50:	200018cc 	.word	0x200018cc
 800db54:	20001948 	.word	0x20001948

0800db58 <xTaskResumeFromISR>:
 800db58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800db5a:	b1d0      	cbz	r0, 800db92 <xTaskResumeFromISR+0x3a>
 800db5c:	4604      	mov	r4, r0
 800db5e:	f000 fbb3 	bl	800e2c8 <vPortValidateInterruptPriority>
 800db62:	f3ef 8511 	mrs	r5, BASEPRI
 800db66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db6a:	f383 8811 	msr	BASEPRI, r3
 800db6e:	f3bf 8f6f 	isb	sy
 800db72:	f3bf 8f4f 	dsb	sy
 800db76:	4b1d      	ldr	r3, [pc, #116]	@ (800dbec <xTaskResumeFromISR+0x94>)
 800db78:	6962      	ldr	r2, [r4, #20]
 800db7a:	429a      	cmp	r2, r3
 800db7c:	d104      	bne.n	800db88 <xTaskResumeFromISR+0x30>
 800db7e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800db80:	481b      	ldr	r0, [pc, #108]	@ (800dbf0 <xTaskResumeFromISR+0x98>)
 800db82:	4283      	cmp	r3, r0
 800db84:	d000      	beq.n	800db88 <xTaskResumeFromISR+0x30>
 800db86:	b16b      	cbz	r3, 800dba4 <xTaskResumeFromISR+0x4c>
 800db88:	2600      	movs	r6, #0
 800db8a:	f385 8811 	msr	BASEPRI, r5
 800db8e:	4630      	mov	r0, r6
 800db90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800db96:	f383 8811 	msr	BASEPRI, r3
 800db9a:	f3bf 8f6f 	isb	sy
 800db9e:	f3bf 8f4f 	dsb	sy
 800dba2:	e7fe      	b.n	800dba2 <xTaskResumeFromISR+0x4a>
 800dba4:	4b13      	ldr	r3, [pc, #76]	@ (800dbf4 <xTaskResumeFromISR+0x9c>)
 800dba6:	681b      	ldr	r3, [r3, #0]
 800dba8:	b9db      	cbnz	r3, 800dbe2 <xTaskResumeFromISR+0x8a>
 800dbaa:	4b13      	ldr	r3, [pc, #76]	@ (800dbf8 <xTaskResumeFromISR+0xa0>)
 800dbac:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800dbae:	681b      	ldr	r3, [r3, #0]
 800dbb0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dbb2:	1d27      	adds	r7, r4, #4
 800dbb4:	429e      	cmp	r6, r3
 800dbb6:	4638      	mov	r0, r7
 800dbb8:	bf34      	ite	cc
 800dbba:	2600      	movcc	r6, #0
 800dbbc:	2601      	movcs	r6, #1
 800dbbe:	f7ff fbe7 	bl	800d390 <uxListRemove>
 800dbc2:	480e      	ldr	r0, [pc, #56]	@ (800dbfc <xTaskResumeFromISR+0xa4>)
 800dbc4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dbc6:	4c0e      	ldr	r4, [pc, #56]	@ (800dc00 <xTaskResumeFromISR+0xa8>)
 800dbc8:	4639      	mov	r1, r7
 800dbca:	2201      	movs	r2, #1
 800dbcc:	6807      	ldr	r7, [r0, #0]
 800dbce:	409a      	lsls	r2, r3
 800dbd0:	433a      	orrs	r2, r7
 800dbd2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dbd6:	6002      	str	r2, [r0, #0]
 800dbd8:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 800dbdc:	f7ff fbb2 	bl	800d344 <vListInsertEnd>
 800dbe0:	e7d3      	b.n	800db8a <xTaskResumeFromISR+0x32>
 800dbe2:	f104 0118 	add.w	r1, r4, #24
 800dbe6:	f7ff fbad 	bl	800d344 <vListInsertEnd>
 800dbea:	e7cd      	b.n	800db88 <xTaskResumeFromISR+0x30>
 800dbec:	200018d8 	.word	0x200018d8
 800dbf0:	20001904 	.word	0x20001904
 800dbf4:	200018ac 	.word	0x200018ac
 800dbf8:	200019d4 	.word	0x200019d4
 800dbfc:	200018cc 	.word	0x200018cc
 800dc00:	20001948 	.word	0x20001948

0800dc04 <vTaskStartScheduler>:
 800dc04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dc08:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800dc0c:	f000 fb8a 	bl	800e324 <pvPortMalloc>
 800dc10:	2800      	cmp	r0, #0
 800dc12:	d07e      	beq.n	800dd12 <vTaskStartScheduler+0x10e>
 800dc14:	4605      	mov	r5, r0
 800dc16:	2054      	movs	r0, #84	@ 0x54
 800dc18:	f000 fb84 	bl	800e324 <pvPortMalloc>
 800dc1c:	4604      	mov	r4, r0
 800dc1e:	2800      	cmp	r0, #0
 800dc20:	d074      	beq.n	800dd0c <vTaskStartScheduler+0x108>
 800dc22:	4a59      	ldr	r2, [pc, #356]	@ (800dd88 <vTaskStartScheduler+0x184>)
 800dc24:	2600      	movs	r6, #0
 800dc26:	f100 0804 	add.w	r8, r0, #4
 800dc2a:	e9c0 520c 	strd	r5, r2, [r0, #48]	@ 0x30
 800dc2e:	f505 73fe 	add.w	r3, r5, #508	@ 0x1fc
 800dc32:	e9c0 6611 	strd	r6, r6, [r0, #68]	@ 0x44
 800dc36:	f880 6038 	strb.w	r6, [r0, #56]	@ 0x38
 800dc3a:	f880 6043 	strb.w	r6, [r0, #67]	@ 0x43
 800dc3e:	62c6      	str	r6, [r0, #44]	@ 0x2c
 800dc40:	4640      	mov	r0, r8
 800dc42:	f023 0507 	bic.w	r5, r3, #7
 800dc46:	f7ff fb79 	bl	800d33c <vListInitialiseItem>
 800dc4a:	f104 0018 	add.w	r0, r4, #24
 800dc4e:	f7ff fb75 	bl	800d33c <vListInitialiseItem>
 800dc52:	2307      	movs	r3, #7
 800dc54:	4632      	mov	r2, r6
 800dc56:	64e6      	str	r6, [r4, #76]	@ 0x4c
 800dc58:	494c      	ldr	r1, [pc, #304]	@ (800dd8c <vTaskStartScheduler+0x188>)
 800dc5a:	61a3      	str	r3, [r4, #24]
 800dc5c:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 800dc60:	6124      	str	r4, [r4, #16]
 800dc62:	6264      	str	r4, [r4, #36]	@ 0x24
 800dc64:	4628      	mov	r0, r5
 800dc66:	f000 f9d7 	bl	800e018 <pxPortInitialiseStack>
 800dc6a:	4b49      	ldr	r3, [pc, #292]	@ (800dd90 <vTaskStartScheduler+0x18c>)
 800dc6c:	6020      	str	r0, [r4, #0]
 800dc6e:	601c      	str	r4, [r3, #0]
 800dc70:	f000 f9f8 	bl	800e064 <vPortEnterCritical>
 800dc74:	4a47      	ldr	r2, [pc, #284]	@ (800dd94 <vTaskStartScheduler+0x190>)
 800dc76:	4e48      	ldr	r6, [pc, #288]	@ (800dd98 <vTaskStartScheduler+0x194>)
 800dc78:	6813      	ldr	r3, [r2, #0]
 800dc7a:	3301      	adds	r3, #1
 800dc7c:	6013      	str	r3, [r2, #0]
 800dc7e:	6833      	ldr	r3, [r6, #0]
 800dc80:	2b00      	cmp	r3, #0
 800dc82:	d055      	beq.n	800dd30 <vTaskStartScheduler+0x12c>
 800dc84:	4d45      	ldr	r5, [pc, #276]	@ (800dd9c <vTaskStartScheduler+0x198>)
 800dc86:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dc88:	682b      	ldr	r3, [r5, #0]
 800dc8a:	2b00      	cmp	r3, #0
 800dc8c:	d04a      	beq.n	800dd24 <vTaskStartScheduler+0x120>
 800dc8e:	4f44      	ldr	r7, [pc, #272]	@ (800dda0 <vTaskStartScheduler+0x19c>)
 800dc90:	f8df c134 	ldr.w	ip, [pc, #308]	@ 800ddc8 <vTaskStartScheduler+0x1c4>
 800dc94:	4a43      	ldr	r2, [pc, #268]	@ (800dda4 <vTaskStartScheduler+0x1a0>)
 800dc96:	f8dc 3000 	ldr.w	r3, [ip]
 800dc9a:	3301      	adds	r3, #1
 800dc9c:	f8cc 3000 	str.w	r3, [ip]
 800dca0:	f8d2 c000 	ldr.w	ip, [r2]
 800dca4:	2301      	movs	r3, #1
 800dca6:	4083      	lsls	r3, r0
 800dca8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800dcac:	ea43 030c 	orr.w	r3, r3, ip
 800dcb0:	4641      	mov	r1, r8
 800dcb2:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800dcb6:	6013      	str	r3, [r2, #0]
 800dcb8:	f7ff fb44 	bl	800d344 <vListInsertEnd>
 800dcbc:	f000 f9f4 	bl	800e0a8 <vPortExitCritical>
 800dcc0:	682b      	ldr	r3, [r5, #0]
 800dcc2:	b173      	cbz	r3, 800dce2 <vTaskStartScheduler+0xde>
 800dcc4:	6832      	ldr	r2, [r6, #0]
 800dcc6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dcc8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800dcca:	429a      	cmp	r2, r3
 800dccc:	d209      	bcs.n	800dce2 <vTaskStartScheduler+0xde>
 800dcce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dcd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800dcd6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800dcda:	f3bf 8f4f 	dsb	sy
 800dcde:	f3bf 8f6f 	isb	sy
 800dce2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dce6:	f383 8811 	msr	BASEPRI, r3
 800dcea:	f3bf 8f6f 	isb	sy
 800dcee:	f3bf 8f4f 	dsb	sy
 800dcf2:	4a2d      	ldr	r2, [pc, #180]	@ (800dda8 <vTaskStartScheduler+0x1a4>)
 800dcf4:	4b2d      	ldr	r3, [pc, #180]	@ (800ddac <vTaskStartScheduler+0x1a8>)
 800dcf6:	f04f 30ff 	mov.w	r0, #4294967295
 800dcfa:	6010      	str	r0, [r2, #0]
 800dcfc:	2101      	movs	r1, #1
 800dcfe:	2200      	movs	r2, #0
 800dd00:	6029      	str	r1, [r5, #0]
 800dd02:	601a      	str	r2, [r3, #0]
 800dd04:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd08:	f000 ba3e 	b.w	800e188 <xPortStartScheduler>
 800dd0c:	4628      	mov	r0, r5
 800dd0e:	f000 fbc7 	bl	800e4a0 <vPortFree>
 800dd12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dd16:	f383 8811 	msr	BASEPRI, r3
 800dd1a:	f3bf 8f6f 	isb	sy
 800dd1e:	f3bf 8f4f 	dsb	sy
 800dd22:	e7fe      	b.n	800dd22 <vTaskStartScheduler+0x11e>
 800dd24:	6833      	ldr	r3, [r6, #0]
 800dd26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dd28:	4283      	cmp	r3, r0
 800dd2a:	bf98      	it	ls
 800dd2c:	6034      	strls	r4, [r6, #0]
 800dd2e:	e7ae      	b.n	800dc8e <vTaskStartScheduler+0x8a>
 800dd30:	6034      	str	r4, [r6, #0]
 800dd32:	6813      	ldr	r3, [r2, #0]
 800dd34:	2b01      	cmp	r3, #1
 800dd36:	d003      	beq.n	800dd40 <vTaskStartScheduler+0x13c>
 800dd38:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dd3a:	4f19      	ldr	r7, [pc, #100]	@ (800dda0 <vTaskStartScheduler+0x19c>)
 800dd3c:	4d17      	ldr	r5, [pc, #92]	@ (800dd9c <vTaskStartScheduler+0x198>)
 800dd3e:	e7a7      	b.n	800dc90 <vTaskStartScheduler+0x8c>
 800dd40:	4f17      	ldr	r7, [pc, #92]	@ (800dda0 <vTaskStartScheduler+0x19c>)
 800dd42:	463d      	mov	r5, r7
 800dd44:	f107 098c 	add.w	r9, r7, #140	@ 0x8c
 800dd48:	4628      	mov	r0, r5
 800dd4a:	3514      	adds	r5, #20
 800dd4c:	f7ff faea 	bl	800d324 <vListInitialise>
 800dd50:	454d      	cmp	r5, r9
 800dd52:	d1f9      	bne.n	800dd48 <vTaskStartScheduler+0x144>
 800dd54:	f8df 9074 	ldr.w	r9, [pc, #116]	@ 800ddcc <vTaskStartScheduler+0x1c8>
 800dd58:	4d15      	ldr	r5, [pc, #84]	@ (800ddb0 <vTaskStartScheduler+0x1ac>)
 800dd5a:	4648      	mov	r0, r9
 800dd5c:	f7ff fae2 	bl	800d324 <vListInitialise>
 800dd60:	4628      	mov	r0, r5
 800dd62:	f7ff fadf 	bl	800d324 <vListInitialise>
 800dd66:	4813      	ldr	r0, [pc, #76]	@ (800ddb4 <vTaskStartScheduler+0x1b0>)
 800dd68:	f7ff fadc 	bl	800d324 <vListInitialise>
 800dd6c:	4812      	ldr	r0, [pc, #72]	@ (800ddb8 <vTaskStartScheduler+0x1b4>)
 800dd6e:	f7ff fad9 	bl	800d324 <vListInitialise>
 800dd72:	4812      	ldr	r0, [pc, #72]	@ (800ddbc <vTaskStartScheduler+0x1b8>)
 800dd74:	f7ff fad6 	bl	800d324 <vListInitialise>
 800dd78:	4b11      	ldr	r3, [pc, #68]	@ (800ddc0 <vTaskStartScheduler+0x1bc>)
 800dd7a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dd7c:	f8c3 9000 	str.w	r9, [r3]
 800dd80:	4b10      	ldr	r3, [pc, #64]	@ (800ddc4 <vTaskStartScheduler+0x1c0>)
 800dd82:	601d      	str	r5, [r3, #0]
 800dd84:	4d05      	ldr	r5, [pc, #20]	@ (800dd9c <vTaskStartScheduler+0x198>)
 800dd86:	e783      	b.n	800dc90 <vTaskStartScheduler+0x8c>
 800dd88:	454c4449 	.word	0x454c4449
 800dd8c:	0800d3b9 	.word	0x0800d3b9
 800dd90:	200018b0 	.word	0x200018b0
 800dd94:	200018d4 	.word	0x200018d4
 800dd98:	200019d4 	.word	0x200019d4
 800dd9c:	200018c8 	.word	0x200018c8
 800dda0:	20001948 	.word	0x20001948
 800dda4:	200018cc 	.word	0x200018cc
 800dda8:	200018b4 	.word	0x200018b4
 800ddac:	200018d0 	.word	0x200018d0
 800ddb0:	20001920 	.word	0x20001920
 800ddb4:	20001904 	.word	0x20001904
 800ddb8:	200018f0 	.word	0x200018f0
 800ddbc:	200018d8 	.word	0x200018d8
 800ddc0:	2000191c 	.word	0x2000191c
 800ddc4:	20001918 	.word	0x20001918
 800ddc8:	200018b8 	.word	0x200018b8
 800ddcc:	20001934 	.word	0x20001934

0800ddd0 <vTaskSuspendAll>:
 800ddd0:	4a02      	ldr	r2, [pc, #8]	@ (800dddc <vTaskSuspendAll+0xc>)
 800ddd2:	6813      	ldr	r3, [r2, #0]
 800ddd4:	3301      	adds	r3, #1
 800ddd6:	6013      	str	r3, [r2, #0]
 800ddd8:	4770      	bx	lr
 800ddda:	bf00      	nop
 800dddc:	200018ac 	.word	0x200018ac

0800dde0 <xTaskResumeAll>:
 800dde0:	4b06      	ldr	r3, [pc, #24]	@ (800ddfc <xTaskResumeAll+0x1c>)
 800dde2:	681b      	ldr	r3, [r3, #0]
 800dde4:	b943      	cbnz	r3, 800ddf8 <xTaskResumeAll+0x18>
 800dde6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ddea:	f383 8811 	msr	BASEPRI, r3
 800ddee:	f3bf 8f6f 	isb	sy
 800ddf2:	f3bf 8f4f 	dsb	sy
 800ddf6:	e7fe      	b.n	800ddf6 <xTaskResumeAll+0x16>
 800ddf8:	f7ff bc0c 	b.w	800d614 <xTaskResumeAll.part.0>
 800ddfc:	200018ac 	.word	0x200018ac

0800de00 <xTaskIncrementTick>:
 800de00:	4b05      	ldr	r3, [pc, #20]	@ (800de18 <xTaskIncrementTick+0x18>)
 800de02:	681b      	ldr	r3, [r3, #0]
 800de04:	b90b      	cbnz	r3, 800de0a <xTaskIncrementTick+0xa>
 800de06:	f7ff bb5f 	b.w	800d4c8 <xTaskIncrementTick.part.0>
 800de0a:	4a04      	ldr	r2, [pc, #16]	@ (800de1c <xTaskIncrementTick+0x1c>)
 800de0c:	6813      	ldr	r3, [r2, #0]
 800de0e:	3301      	adds	r3, #1
 800de10:	2000      	movs	r0, #0
 800de12:	6013      	str	r3, [r2, #0]
 800de14:	4770      	bx	lr
 800de16:	bf00      	nop
 800de18:	200018ac 	.word	0x200018ac
 800de1c:	200018c4 	.word	0x200018c4

0800de20 <vTaskSwitchContext>:
 800de20:	4b16      	ldr	r3, [pc, #88]	@ (800de7c <vTaskSwitchContext+0x5c>)
 800de22:	681b      	ldr	r3, [r3, #0]
 800de24:	b11b      	cbz	r3, 800de2e <vTaskSwitchContext+0xe>
 800de26:	4b16      	ldr	r3, [pc, #88]	@ (800de80 <vTaskSwitchContext+0x60>)
 800de28:	2201      	movs	r2, #1
 800de2a:	601a      	str	r2, [r3, #0]
 800de2c:	4770      	bx	lr
 800de2e:	4914      	ldr	r1, [pc, #80]	@ (800de80 <vTaskSwitchContext+0x60>)
 800de30:	4a14      	ldr	r2, [pc, #80]	@ (800de84 <vTaskSwitchContext+0x64>)
 800de32:	600b      	str	r3, [r1, #0]
 800de34:	6813      	ldr	r3, [r2, #0]
 800de36:	fab3 f383 	clz	r3, r3
 800de3a:	b2db      	uxtb	r3, r3
 800de3c:	f1c3 031f 	rsb	r3, r3, #31
 800de40:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800de44:	4910      	ldr	r1, [pc, #64]	@ (800de88 <vTaskSwitchContext+0x68>)
 800de46:	009a      	lsls	r2, r3, #2
 800de48:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800de4c:	5888      	ldr	r0, [r1, r2]
 800de4e:	b940      	cbnz	r0, 800de62 <vTaskSwitchContext+0x42>
 800de50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de54:	f383 8811 	msr	BASEPRI, r3
 800de58:	f3bf 8f6f 	isb	sy
 800de5c:	f3bf 8f4f 	dsb	sy
 800de60:	e7fe      	b.n	800de60 <vTaskSwitchContext+0x40>
 800de62:	6858      	ldr	r0, [r3, #4]
 800de64:	3208      	adds	r2, #8
 800de66:	6840      	ldr	r0, [r0, #4]
 800de68:	6058      	str	r0, [r3, #4]
 800de6a:	440a      	add	r2, r1
 800de6c:	4290      	cmp	r0, r2
 800de6e:	bf04      	itt	eq
 800de70:	6840      	ldreq	r0, [r0, #4]
 800de72:	6058      	streq	r0, [r3, #4]
 800de74:	4b05      	ldr	r3, [pc, #20]	@ (800de8c <vTaskSwitchContext+0x6c>)
 800de76:	68c2      	ldr	r2, [r0, #12]
 800de78:	601a      	str	r2, [r3, #0]
 800de7a:	4770      	bx	lr
 800de7c:	200018ac 	.word	0x200018ac
 800de80:	200018c0 	.word	0x200018c0
 800de84:	200018cc 	.word	0x200018cc
 800de88:	20001948 	.word	0x20001948
 800de8c:	200019d4 	.word	0x200019d4

0800de90 <vTaskSuspend>:
 800de90:	b570      	push	{r4, r5, r6, lr}
 800de92:	4604      	mov	r4, r0
 800de94:	4e38      	ldr	r6, [pc, #224]	@ (800df78 <vTaskSuspend+0xe8>)
 800de96:	f000 f8e5 	bl	800e064 <vPortEnterCritical>
 800de9a:	2c00      	cmp	r4, #0
 800de9c:	d04d      	beq.n	800df3a <vTaskSuspend+0xaa>
 800de9e:	1d25      	adds	r5, r4, #4
 800dea0:	4628      	mov	r0, r5
 800dea2:	f7ff fa75 	bl	800d390 <uxListRemove>
 800dea6:	b930      	cbnz	r0, 800deb6 <vTaskSuspend+0x26>
 800dea8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800deaa:	4934      	ldr	r1, [pc, #208]	@ (800df7c <vTaskSuspend+0xec>)
 800deac:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800deb0:	009b      	lsls	r3, r3, #2
 800deb2:	58cb      	ldr	r3, [r1, r3]
 800deb4:	b34b      	cbz	r3, 800df0a <vTaskSuspend+0x7a>
 800deb6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800deb8:	b11b      	cbz	r3, 800dec2 <vTaskSuspend+0x32>
 800deba:	f104 0018 	add.w	r0, r4, #24
 800debe:	f7ff fa67 	bl	800d390 <uxListRemove>
 800dec2:	4629      	mov	r1, r5
 800dec4:	482e      	ldr	r0, [pc, #184]	@ (800df80 <vTaskSuspend+0xf0>)
 800dec6:	4d2f      	ldr	r5, [pc, #188]	@ (800df84 <vTaskSuspend+0xf4>)
 800dec8:	f7ff fa3c 	bl	800d344 <vListInsertEnd>
 800decc:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800ded0:	2b01      	cmp	r3, #1
 800ded2:	bf04      	itt	eq
 800ded4:	2300      	moveq	r3, #0
 800ded6:	f884 3050 	strbeq.w	r3, [r4, #80]	@ 0x50
 800deda:	f000 f8e5 	bl	800e0a8 <vPortExitCritical>
 800dede:	682b      	ldr	r3, [r5, #0]
 800dee0:	b9e3      	cbnz	r3, 800df1c <vTaskSuspend+0x8c>
 800dee2:	6833      	ldr	r3, [r6, #0]
 800dee4:	42a3      	cmp	r3, r4
 800dee6:	d000      	beq.n	800deea <vTaskSuspend+0x5a>
 800dee8:	bd70      	pop	{r4, r5, r6, pc}
 800deea:	682b      	ldr	r3, [r5, #0]
 800deec:	2b00      	cmp	r3, #0
 800deee:	d02b      	beq.n	800df48 <vTaskSuspend+0xb8>
 800def0:	4b25      	ldr	r3, [pc, #148]	@ (800df88 <vTaskSuspend+0xf8>)
 800def2:	681b      	ldr	r3, [r3, #0]
 800def4:	2b00      	cmp	r3, #0
 800def6:	d02f      	beq.n	800df58 <vTaskSuspend+0xc8>
 800def8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800defc:	f383 8811 	msr	BASEPRI, r3
 800df00:	f3bf 8f6f 	isb	sy
 800df04:	f3bf 8f4f 	dsb	sy
 800df08:	e7fe      	b.n	800df08 <vTaskSuspend+0x78>
 800df0a:	4920      	ldr	r1, [pc, #128]	@ (800df8c <vTaskSuspend+0xfc>)
 800df0c:	2301      	movs	r3, #1
 800df0e:	fa03 f202 	lsl.w	r2, r3, r2
 800df12:	680b      	ldr	r3, [r1, #0]
 800df14:	ea23 0302 	bic.w	r3, r3, r2
 800df18:	600b      	str	r3, [r1, #0]
 800df1a:	e7cc      	b.n	800deb6 <vTaskSuspend+0x26>
 800df1c:	f000 f8a2 	bl	800e064 <vPortEnterCritical>
 800df20:	4b1b      	ldr	r3, [pc, #108]	@ (800df90 <vTaskSuspend+0x100>)
 800df22:	681a      	ldr	r2, [r3, #0]
 800df24:	6812      	ldr	r2, [r2, #0]
 800df26:	b152      	cbz	r2, 800df3e <vTaskSuspend+0xae>
 800df28:	681a      	ldr	r2, [r3, #0]
 800df2a:	4b1a      	ldr	r3, [pc, #104]	@ (800df94 <vTaskSuspend+0x104>)
 800df2c:	68d2      	ldr	r2, [r2, #12]
 800df2e:	68d2      	ldr	r2, [r2, #12]
 800df30:	6852      	ldr	r2, [r2, #4]
 800df32:	601a      	str	r2, [r3, #0]
 800df34:	f000 f8b8 	bl	800e0a8 <vPortExitCritical>
 800df38:	e7d3      	b.n	800dee2 <vTaskSuspend+0x52>
 800df3a:	6834      	ldr	r4, [r6, #0]
 800df3c:	e7af      	b.n	800de9e <vTaskSuspend+0xe>
 800df3e:	4b15      	ldr	r3, [pc, #84]	@ (800df94 <vTaskSuspend+0x104>)
 800df40:	f04f 32ff 	mov.w	r2, #4294967295
 800df44:	601a      	str	r2, [r3, #0]
 800df46:	e7f5      	b.n	800df34 <vTaskSuspend+0xa4>
 800df48:	490d      	ldr	r1, [pc, #52]	@ (800df80 <vTaskSuspend+0xf0>)
 800df4a:	4a13      	ldr	r2, [pc, #76]	@ (800df98 <vTaskSuspend+0x108>)
 800df4c:	6809      	ldr	r1, [r1, #0]
 800df4e:	6812      	ldr	r2, [r2, #0]
 800df50:	4291      	cmp	r1, r2
 800df52:	d10c      	bne.n	800df6e <vTaskSuspend+0xde>
 800df54:	6033      	str	r3, [r6, #0]
 800df56:	bd70      	pop	{r4, r5, r6, pc}
 800df58:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800df5c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800df60:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800df64:	f3bf 8f4f 	dsb	sy
 800df68:	f3bf 8f6f 	isb	sy
 800df6c:	bd70      	pop	{r4, r5, r6, pc}
 800df6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df72:	f7ff bf55 	b.w	800de20 <vTaskSwitchContext>
 800df76:	bf00      	nop
 800df78:	200019d4 	.word	0x200019d4
 800df7c:	20001948 	.word	0x20001948
 800df80:	200018d8 	.word	0x200018d8
 800df84:	200018c8 	.word	0x200018c8
 800df88:	200018ac 	.word	0x200018ac
 800df8c:	200018cc 	.word	0x200018cc
 800df90:	2000191c 	.word	0x2000191c
 800df94:	200018b4 	.word	0x200018b4
 800df98:	200018d4 	.word	0x200018d4

0800df9c <prvPortStartFirstTask>:
 800df9c:	4808      	ldr	r0, [pc, #32]	@ (800dfc0 <prvPortStartFirstTask+0x24>)
 800df9e:	6800      	ldr	r0, [r0, #0]
 800dfa0:	6800      	ldr	r0, [r0, #0]
 800dfa2:	f380 8808 	msr	MSP, r0
 800dfa6:	f04f 0000 	mov.w	r0, #0
 800dfaa:	f380 8814 	msr	CONTROL, r0
 800dfae:	b662      	cpsie	i
 800dfb0:	b661      	cpsie	f
 800dfb2:	f3bf 8f4f 	dsb	sy
 800dfb6:	f3bf 8f6f 	isb	sy
 800dfba:	df00      	svc	0
 800dfbc:	bf00      	nop
 800dfbe:	0000      	.short	0x0000
 800dfc0:	e000ed08 	.word	0xe000ed08

0800dfc4 <vPortEnableVFP>:
 800dfc4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800dfd4 <vPortEnableVFP+0x10>
 800dfc8:	6801      	ldr	r1, [r0, #0]
 800dfca:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800dfce:	6001      	str	r1, [r0, #0]
 800dfd0:	4770      	bx	lr
 800dfd2:	0000      	.short	0x0000
 800dfd4:	e000ed88 	.word	0xe000ed88

0800dfd8 <prvTaskExitError>:
 800dfd8:	4b0e      	ldr	r3, [pc, #56]	@ (800e014 <prvTaskExitError+0x3c>)
 800dfda:	681b      	ldr	r3, [r3, #0]
 800dfdc:	b082      	sub	sp, #8
 800dfde:	2200      	movs	r2, #0
 800dfe0:	3301      	adds	r3, #1
 800dfe2:	9201      	str	r2, [sp, #4]
 800dfe4:	d008      	beq.n	800dff8 <prvTaskExitError+0x20>
 800dfe6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dfea:	f383 8811 	msr	BASEPRI, r3
 800dfee:	f3bf 8f6f 	isb	sy
 800dff2:	f3bf 8f4f 	dsb	sy
 800dff6:	e7fe      	b.n	800dff6 <prvTaskExitError+0x1e>
 800dff8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800dffc:	f383 8811 	msr	BASEPRI, r3
 800e000:	f3bf 8f6f 	isb	sy
 800e004:	f3bf 8f4f 	dsb	sy
 800e008:	9b01      	ldr	r3, [sp, #4]
 800e00a:	2b00      	cmp	r3, #0
 800e00c:	d0fc      	beq.n	800e008 <prvTaskExitError+0x30>
 800e00e:	b002      	add	sp, #8
 800e010:	4770      	bx	lr
 800e012:	bf00      	nop
 800e014:	200000c8 	.word	0x200000c8

0800e018 <pxPortInitialiseStack>:
 800e018:	b410      	push	{r4}
 800e01a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800e01e:	4c07      	ldr	r4, [pc, #28]	@ (800e03c <pxPortInitialiseStack+0x24>)
 800e020:	f840 3c04 	str.w	r3, [r0, #-4]
 800e024:	f021 0101 	bic.w	r1, r1, #1
 800e028:	f06f 0302 	mvn.w	r3, #2
 800e02c:	e940 4103 	strd	r4, r1, [r0, #-12]
 800e030:	e940 3209 	strd	r3, r2, [r0, #-36]	@ 0x24
 800e034:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e038:	3844      	subs	r0, #68	@ 0x44
 800e03a:	4770      	bx	lr
 800e03c:	0800dfd9 	.word	0x0800dfd9

0800e040 <SVC_Handler>:
 800e040:	4b07      	ldr	r3, [pc, #28]	@ (800e060 <pxCurrentTCBConst2>)
 800e042:	6819      	ldr	r1, [r3, #0]
 800e044:	6808      	ldr	r0, [r1, #0]
 800e046:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e04a:	f380 8809 	msr	PSP, r0
 800e04e:	f3bf 8f6f 	isb	sy
 800e052:	f04f 0000 	mov.w	r0, #0
 800e056:	f380 8811 	msr	BASEPRI, r0
 800e05a:	4770      	bx	lr
 800e05c:	f3af 8000 	nop.w

0800e060 <pxCurrentTCBConst2>:
 800e060:	200019d4 	.word	0x200019d4

0800e064 <vPortEnterCritical>:
 800e064:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e068:	f383 8811 	msr	BASEPRI, r3
 800e06c:	f3bf 8f6f 	isb	sy
 800e070:	f3bf 8f4f 	dsb	sy
 800e074:	4a0b      	ldr	r2, [pc, #44]	@ (800e0a4 <vPortEnterCritical+0x40>)
 800e076:	6813      	ldr	r3, [r2, #0]
 800e078:	3301      	adds	r3, #1
 800e07a:	2b01      	cmp	r3, #1
 800e07c:	6013      	str	r3, [r2, #0]
 800e07e:	d000      	beq.n	800e082 <vPortEnterCritical+0x1e>
 800e080:	4770      	bx	lr
 800e082:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e086:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800e08a:	b2db      	uxtb	r3, r3
 800e08c:	2b00      	cmp	r3, #0
 800e08e:	d0f7      	beq.n	800e080 <vPortEnterCritical+0x1c>
 800e090:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e094:	f383 8811 	msr	BASEPRI, r3
 800e098:	f3bf 8f6f 	isb	sy
 800e09c:	f3bf 8f4f 	dsb	sy
 800e0a0:	e7fe      	b.n	800e0a0 <vPortEnterCritical+0x3c>
 800e0a2:	bf00      	nop
 800e0a4:	200000c8 	.word	0x200000c8

0800e0a8 <vPortExitCritical>:
 800e0a8:	4a08      	ldr	r2, [pc, #32]	@ (800e0cc <vPortExitCritical+0x24>)
 800e0aa:	6813      	ldr	r3, [r2, #0]
 800e0ac:	b943      	cbnz	r3, 800e0c0 <vPortExitCritical+0x18>
 800e0ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e0b2:	f383 8811 	msr	BASEPRI, r3
 800e0b6:	f3bf 8f6f 	isb	sy
 800e0ba:	f3bf 8f4f 	dsb	sy
 800e0be:	e7fe      	b.n	800e0be <vPortExitCritical+0x16>
 800e0c0:	3b01      	subs	r3, #1
 800e0c2:	6013      	str	r3, [r2, #0]
 800e0c4:	b90b      	cbnz	r3, 800e0ca <vPortExitCritical+0x22>
 800e0c6:	f383 8811 	msr	BASEPRI, r3
 800e0ca:	4770      	bx	lr
 800e0cc:	200000c8 	.word	0x200000c8

0800e0d0 <PendSV_Handler>:
 800e0d0:	f3ef 8009 	mrs	r0, PSP
 800e0d4:	f3bf 8f6f 	isb	sy
 800e0d8:	4b15      	ldr	r3, [pc, #84]	@ (800e130 <pxCurrentTCBConst>)
 800e0da:	681a      	ldr	r2, [r3, #0]
 800e0dc:	f01e 0f10 	tst.w	lr, #16
 800e0e0:	bf08      	it	eq
 800e0e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e0e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0ea:	6010      	str	r0, [r2, #0]
 800e0ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e0f0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800e0f4:	f380 8811 	msr	BASEPRI, r0
 800e0f8:	f3bf 8f4f 	dsb	sy
 800e0fc:	f3bf 8f6f 	isb	sy
 800e100:	f7ff fe8e 	bl	800de20 <vTaskSwitchContext>
 800e104:	f04f 0000 	mov.w	r0, #0
 800e108:	f380 8811 	msr	BASEPRI, r0
 800e10c:	bc09      	pop	{r0, r3}
 800e10e:	6819      	ldr	r1, [r3, #0]
 800e110:	6808      	ldr	r0, [r1, #0]
 800e112:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e116:	f01e 0f10 	tst.w	lr, #16
 800e11a:	bf08      	it	eq
 800e11c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e120:	f380 8809 	msr	PSP, r0
 800e124:	f3bf 8f6f 	isb	sy
 800e128:	4770      	bx	lr
 800e12a:	bf00      	nop
 800e12c:	f3af 8000 	nop.w

0800e130 <pxCurrentTCBConst>:
 800e130:	200019d4 	.word	0x200019d4

0800e134 <SysTick_Handler>:
 800e134:	b508      	push	{r3, lr}
 800e136:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e13a:	f383 8811 	msr	BASEPRI, r3
 800e13e:	f3bf 8f6f 	isb	sy
 800e142:	f3bf 8f4f 	dsb	sy
 800e146:	f7ff fe5b 	bl	800de00 <xTaskIncrementTick>
 800e14a:	b128      	cbz	r0, 800e158 <SysTick_Handler+0x24>
 800e14c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e150:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e154:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e158:	2300      	movs	r3, #0
 800e15a:	f383 8811 	msr	BASEPRI, r3
 800e15e:	bd08      	pop	{r3, pc}

0800e160 <vPortSetupTimerInterrupt>:
 800e160:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800e164:	2300      	movs	r3, #0
 800e166:	4906      	ldr	r1, [pc, #24]	@ (800e180 <vPortSetupTimerInterrupt+0x20>)
 800e168:	6113      	str	r3, [r2, #16]
 800e16a:	6193      	str	r3, [r2, #24]
 800e16c:	680b      	ldr	r3, [r1, #0]
 800e16e:	4905      	ldr	r1, [pc, #20]	@ (800e184 <vPortSetupTimerInterrupt+0x24>)
 800e170:	fba1 1303 	umull	r1, r3, r1, r3
 800e174:	099b      	lsrs	r3, r3, #6
 800e176:	2007      	movs	r0, #7
 800e178:	3b01      	subs	r3, #1
 800e17a:	6153      	str	r3, [r2, #20]
 800e17c:	6110      	str	r0, [r2, #16]
 800e17e:	4770      	bx	lr
 800e180:	20000034 	.word	0x20000034
 800e184:	10624dd3 	.word	0x10624dd3

0800e188 <xPortStartScheduler>:
 800e188:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e18c:	4a48      	ldr	r2, [pc, #288]	@ (800e2b0 <xPortStartScheduler+0x128>)
 800e18e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800e192:	4291      	cmp	r1, r2
 800e194:	d041      	beq.n	800e21a <xPortStartScheduler+0x92>
 800e196:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800e19a:	4b46      	ldr	r3, [pc, #280]	@ (800e2b4 <xPortStartScheduler+0x12c>)
 800e19c:	429a      	cmp	r2, r3
 800e19e:	d033      	beq.n	800e208 <xPortStartScheduler+0x80>
 800e1a0:	b570      	push	{r4, r5, r6, lr}
 800e1a2:	4b45      	ldr	r3, [pc, #276]	@ (800e2b8 <xPortStartScheduler+0x130>)
 800e1a4:	4c45      	ldr	r4, [pc, #276]	@ (800e2bc <xPortStartScheduler+0x134>)
 800e1a6:	781a      	ldrb	r2, [r3, #0]
 800e1a8:	4845      	ldr	r0, [pc, #276]	@ (800e2c0 <xPortStartScheduler+0x138>)
 800e1aa:	b084      	sub	sp, #16
 800e1ac:	21ff      	movs	r1, #255	@ 0xff
 800e1ae:	b2d2      	uxtb	r2, r2
 800e1b0:	9202      	str	r2, [sp, #8]
 800e1b2:	7019      	strb	r1, [r3, #0]
 800e1b4:	781b      	ldrb	r3, [r3, #0]
 800e1b6:	b2db      	uxtb	r3, r3
 800e1b8:	f88d 3007 	strb.w	r3, [sp, #7]
 800e1bc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e1c0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e1c4:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800e1c8:	2107      	movs	r1, #7
 800e1ca:	0612      	lsls	r2, r2, #24
 800e1cc:	7023      	strb	r3, [r4, #0]
 800e1ce:	6001      	str	r1, [r0, #0]
 800e1d0:	bf48      	it	mi
 800e1d2:	2206      	movmi	r2, #6
 800e1d4:	d50f      	bpl.n	800e1f6 <xPortStartScheduler+0x6e>
 800e1d6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e1da:	005b      	lsls	r3, r3, #1
 800e1dc:	b2db      	uxtb	r3, r3
 800e1de:	f88d 3007 	strb.w	r3, [sp, #7]
 800e1e2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e1e6:	061b      	lsls	r3, r3, #24
 800e1e8:	4611      	mov	r1, r2
 800e1ea:	f102 32ff 	add.w	r2, r2, #4294967295
 800e1ee:	d4f2      	bmi.n	800e1d6 <xPortStartScheduler+0x4e>
 800e1f0:	2903      	cmp	r1, #3
 800e1f2:	d01b      	beq.n	800e22c <xPortStartScheduler+0xa4>
 800e1f4:	6001      	str	r1, [r0, #0]
 800e1f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e1fa:	f383 8811 	msr	BASEPRI, r3
 800e1fe:	f3bf 8f6f 	isb	sy
 800e202:	f3bf 8f4f 	dsb	sy
 800e206:	e7fe      	b.n	800e206 <xPortStartScheduler+0x7e>
 800e208:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e20c:	f383 8811 	msr	BASEPRI, r3
 800e210:	f3bf 8f6f 	isb	sy
 800e214:	f3bf 8f4f 	dsb	sy
 800e218:	e7fe      	b.n	800e218 <xPortStartScheduler+0x90>
 800e21a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e21e:	f383 8811 	msr	BASEPRI, r3
 800e222:	f3bf 8f6f 	isb	sy
 800e226:	f3bf 8f4f 	dsb	sy
 800e22a:	e7fe      	b.n	800e22a <xPortStartScheduler+0xa2>
 800e22c:	9b02      	ldr	r3, [sp, #8]
 800e22e:	4a22      	ldr	r2, [pc, #136]	@ (800e2b8 <xPortStartScheduler+0x130>)
 800e230:	4e24      	ldr	r6, [pc, #144]	@ (800e2c4 <xPortStartScheduler+0x13c>)
 800e232:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
 800e236:	f44f 7140 	mov.w	r1, #768	@ 0x300
 800e23a:	b2db      	uxtb	r3, r3
 800e23c:	6001      	str	r1, [r0, #0]
 800e23e:	7013      	strb	r3, [r2, #0]
 800e240:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e244:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800e248:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 800e24c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e250:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800e254:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 800e258:	2500      	movs	r5, #0
 800e25a:	f7ff ff81 	bl	800e160 <vPortSetupTimerInterrupt>
 800e25e:	6035      	str	r5, [r6, #0]
 800e260:	f7ff feb0 	bl	800dfc4 <vPortEnableVFP>
 800e264:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800e268:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800e26c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
 800e270:	f7ff fe94 	bl	800df9c <prvPortStartFirstTask>
 800e274:	f7ff fdd4 	bl	800de20 <vTaskSwitchContext>
 800e278:	6833      	ldr	r3, [r6, #0]
 800e27a:	9503      	str	r5, [sp, #12]
 800e27c:	3301      	adds	r3, #1
 800e27e:	d008      	beq.n	800e292 <xPortStartScheduler+0x10a>
 800e280:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e284:	f383 8811 	msr	BASEPRI, r3
 800e288:	f3bf 8f6f 	isb	sy
 800e28c:	f3bf 8f4f 	dsb	sy
 800e290:	e7fe      	b.n	800e290 <xPortStartScheduler+0x108>
 800e292:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e296:	f383 8811 	msr	BASEPRI, r3
 800e29a:	f3bf 8f6f 	isb	sy
 800e29e:	f3bf 8f4f 	dsb	sy
 800e2a2:	9b03      	ldr	r3, [sp, #12]
 800e2a4:	2b00      	cmp	r3, #0
 800e2a6:	d0fc      	beq.n	800e2a2 <xPortStartScheduler+0x11a>
 800e2a8:	2000      	movs	r0, #0
 800e2aa:	b004      	add	sp, #16
 800e2ac:	bd70      	pop	{r4, r5, r6, pc}
 800e2ae:	bf00      	nop
 800e2b0:	410fc271 	.word	0x410fc271
 800e2b4:	410fc270 	.word	0x410fc270
 800e2b8:	e000e400 	.word	0xe000e400
 800e2bc:	200019dc 	.word	0x200019dc
 800e2c0:	200019d8 	.word	0x200019d8
 800e2c4:	200000c8 	.word	0x200000c8

0800e2c8 <vPortValidateInterruptPriority>:
 800e2c8:	f3ef 8305 	mrs	r3, IPSR
 800e2cc:	2b0f      	cmp	r3, #15
 800e2ce:	d90e      	bls.n	800e2ee <vPortValidateInterruptPriority+0x26>
 800e2d0:	4911      	ldr	r1, [pc, #68]	@ (800e318 <vPortValidateInterruptPriority+0x50>)
 800e2d2:	4a12      	ldr	r2, [pc, #72]	@ (800e31c <vPortValidateInterruptPriority+0x54>)
 800e2d4:	5c5b      	ldrb	r3, [r3, r1]
 800e2d6:	7812      	ldrb	r2, [r2, #0]
 800e2d8:	429a      	cmp	r2, r3
 800e2da:	d908      	bls.n	800e2ee <vPortValidateInterruptPriority+0x26>
 800e2dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e2e0:	f383 8811 	msr	BASEPRI, r3
 800e2e4:	f3bf 8f6f 	isb	sy
 800e2e8:	f3bf 8f4f 	dsb	sy
 800e2ec:	e7fe      	b.n	800e2ec <vPortValidateInterruptPriority+0x24>
 800e2ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e2f2:	4a0b      	ldr	r2, [pc, #44]	@ (800e320 <vPortValidateInterruptPriority+0x58>)
 800e2f4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800e2f8:	6812      	ldr	r2, [r2, #0]
 800e2fa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800e2fe:	4293      	cmp	r3, r2
 800e300:	d908      	bls.n	800e314 <vPortValidateInterruptPriority+0x4c>
 800e302:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e306:	f383 8811 	msr	BASEPRI, r3
 800e30a:	f3bf 8f6f 	isb	sy
 800e30e:	f3bf 8f4f 	dsb	sy
 800e312:	e7fe      	b.n	800e312 <vPortValidateInterruptPriority+0x4a>
 800e314:	4770      	bx	lr
 800e316:	bf00      	nop
 800e318:	e000e3f0 	.word	0xe000e3f0
 800e31c:	200019dc 	.word	0x200019dc
 800e320:	200019d8 	.word	0x200019d8

0800e324 <pvPortMalloc>:
 800e324:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e328:	4605      	mov	r5, r0
 800e32a:	f7ff fd51 	bl	800ddd0 <vTaskSuspendAll>
 800e32e:	4a54      	ldr	r2, [pc, #336]	@ (800e480 <pvPortMalloc+0x15c>)
 800e330:	6816      	ldr	r6, [r2, #0]
 800e332:	2e00      	cmp	r6, #0
 800e334:	d035      	beq.n	800e3a2 <pvPortMalloc+0x7e>
 800e336:	4b53      	ldr	r3, [pc, #332]	@ (800e484 <pvPortMalloc+0x160>)
 800e338:	681f      	ldr	r7, [r3, #0]
 800e33a:	423d      	tst	r5, r7
 800e33c:	d12b      	bne.n	800e396 <pvPortMalloc+0x72>
 800e33e:	b355      	cbz	r5, 800e396 <pvPortMalloc+0x72>
 800e340:	f105 0408 	add.w	r4, r5, #8
 800e344:	0768      	lsls	r0, r5, #29
 800e346:	bf1c      	itt	ne
 800e348:	f024 0407 	bicne.w	r4, r4, #7
 800e34c:	3408      	addne	r4, #8
 800e34e:	b314      	cbz	r4, 800e396 <pvPortMalloc+0x72>
 800e350:	f8df c144 	ldr.w	ip, [pc, #324]	@ 800e498 <pvPortMalloc+0x174>
 800e354:	f8dc 5000 	ldr.w	r5, [ip]
 800e358:	42a5      	cmp	r5, r4
 800e35a:	d31c      	bcc.n	800e396 <pvPortMalloc+0x72>
 800e35c:	484a      	ldr	r0, [pc, #296]	@ (800e488 <pvPortMalloc+0x164>)
 800e35e:	6803      	ldr	r3, [r0, #0]
 800e360:	e003      	b.n	800e36a <pvPortMalloc+0x46>
 800e362:	681a      	ldr	r2, [r3, #0]
 800e364:	b122      	cbz	r2, 800e370 <pvPortMalloc+0x4c>
 800e366:	4618      	mov	r0, r3
 800e368:	4613      	mov	r3, r2
 800e36a:	6859      	ldr	r1, [r3, #4]
 800e36c:	42a1      	cmp	r1, r4
 800e36e:	d3f8      	bcc.n	800e362 <pvPortMalloc+0x3e>
 800e370:	42b3      	cmp	r3, r6
 800e372:	d010      	beq.n	800e396 <pvPortMalloc+0x72>
 800e374:	681a      	ldr	r2, [r3, #0]
 800e376:	6002      	str	r2, [r0, #0]
 800e378:	1b08      	subs	r0, r1, r4
 800e37a:	2810      	cmp	r0, #16
 800e37c:	d947      	bls.n	800e40e <pvPortMalloc+0xea>
 800e37e:	191a      	adds	r2, r3, r4
 800e380:	0751      	lsls	r1, r2, #29
 800e382:	d02c      	beq.n	800e3de <pvPortMalloc+0xba>
 800e384:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e388:	f383 8811 	msr	BASEPRI, r3
 800e38c:	f3bf 8f6f 	isb	sy
 800e390:	f3bf 8f4f 	dsb	sy
 800e394:	e7fe      	b.n	800e394 <pvPortMalloc+0x70>
 800e396:	f7ff fd23 	bl	800dde0 <xTaskResumeAll>
 800e39a:	2400      	movs	r4, #0
 800e39c:	4620      	mov	r0, r4
 800e39e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e3a2:	4b3a      	ldr	r3, [pc, #232]	@ (800e48c <pvPortMalloc+0x168>)
 800e3a4:	4e3a      	ldr	r6, [pc, #232]	@ (800e490 <pvPortMalloc+0x16c>)
 800e3a6:	4838      	ldr	r0, [pc, #224]	@ (800e488 <pvPortMalloc+0x164>)
 800e3a8:	075c      	lsls	r4, r3, #29
 800e3aa:	bf18      	it	ne
 800e3ac:	3307      	addne	r3, #7
 800e3ae:	f026 0607 	bic.w	r6, r6, #7
 800e3b2:	bf18      	it	ne
 800e3b4:	f023 0307 	bicne.w	r3, r3, #7
 800e3b8:	6016      	str	r6, [r2, #0]
 800e3ba:	4a36      	ldr	r2, [pc, #216]	@ (800e494 <pvPortMalloc+0x170>)
 800e3bc:	6003      	str	r3, [r0, #0]
 800e3be:	4619      	mov	r1, r3
 800e3c0:	1af3      	subs	r3, r6, r3
 800e3c2:	6013      	str	r3, [r2, #0]
 800e3c4:	4a34      	ldr	r2, [pc, #208]	@ (800e498 <pvPortMalloc+0x174>)
 800e3c6:	4c2f      	ldr	r4, [pc, #188]	@ (800e484 <pvPortMalloc+0x160>)
 800e3c8:	6013      	str	r3, [r2, #0]
 800e3ca:	f04f 4700 	mov.w	r7, #2147483648	@ 0x80000000
 800e3ce:	2200      	movs	r2, #0
 800e3d0:	6042      	str	r2, [r0, #4]
 800e3d2:	6027      	str	r7, [r4, #0]
 800e3d4:	e9c6 2200 	strd	r2, r2, [r6]
 800e3d8:	e9c1 6300 	strd	r6, r3, [r1]
 800e3dc:	e7ad      	b.n	800e33a <pvPortMalloc+0x16>
 800e3de:	492a      	ldr	r1, [pc, #168]	@ (800e488 <pvPortMalloc+0x164>)
 800e3e0:	6050      	str	r0, [r2, #4]
 800e3e2:	605c      	str	r4, [r3, #4]
 800e3e4:	4608      	mov	r0, r1
 800e3e6:	6809      	ldr	r1, [r1, #0]
 800e3e8:	428a      	cmp	r2, r1
 800e3ea:	d8fb      	bhi.n	800e3e4 <pvPortMalloc+0xc0>
 800e3ec:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800e3f0:	f8d2 8004 	ldr.w	r8, [r2, #4]
 800e3f4:	eb00 090e 	add.w	r9, r0, lr
 800e3f8:	454a      	cmp	r2, r9
 800e3fa:	d027      	beq.n	800e44c <pvPortMalloc+0x128>
 800e3fc:	eb02 0e08 	add.w	lr, r2, r8
 800e400:	4571      	cmp	r1, lr
 800e402:	d02b      	beq.n	800e45c <pvPortMalloc+0x138>
 800e404:	6011      	str	r1, [r2, #0]
 800e406:	4621      	mov	r1, r4
 800e408:	4282      	cmp	r2, r0
 800e40a:	bf18      	it	ne
 800e40c:	6002      	strne	r2, [r0, #0]
 800e40e:	4a21      	ldr	r2, [pc, #132]	@ (800e494 <pvPortMalloc+0x170>)
 800e410:	6810      	ldr	r0, [r2, #0]
 800e412:	1a6d      	subs	r5, r5, r1
 800e414:	4285      	cmp	r5, r0
 800e416:	4821      	ldr	r0, [pc, #132]	@ (800e49c <pvPortMalloc+0x178>)
 800e418:	bf38      	it	cc
 800e41a:	6015      	strcc	r5, [r2, #0]
 800e41c:	430f      	orrs	r7, r1
 800e41e:	6801      	ldr	r1, [r0, #0]
 800e420:	f8cc 5000 	str.w	r5, [ip]
 800e424:	2400      	movs	r4, #0
 800e426:	e9c3 4700 	strd	r4, r7, [r3]
 800e42a:	3101      	adds	r1, #1
 800e42c:	f103 0408 	add.w	r4, r3, #8
 800e430:	6001      	str	r1, [r0, #0]
 800e432:	f7ff fcd5 	bl	800dde0 <xTaskResumeAll>
 800e436:	0763      	lsls	r3, r4, #29
 800e438:	d0b0      	beq.n	800e39c <pvPortMalloc+0x78>
 800e43a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e43e:	f383 8811 	msr	BASEPRI, r3
 800e442:	f3bf 8f6f 	isb	sy
 800e446:	f3bf 8f4f 	dsb	sy
 800e44a:	e7fe      	b.n	800e44a <pvPortMalloc+0x126>
 800e44c:	eb0e 0208 	add.w	r2, lr, r8
 800e450:	1884      	adds	r4, r0, r2
 800e452:	42a1      	cmp	r1, r4
 800e454:	6042      	str	r2, [r0, #4]
 800e456:	d00a      	beq.n	800e46e <pvPortMalloc+0x14a>
 800e458:	6859      	ldr	r1, [r3, #4]
 800e45a:	e7d8      	b.n	800e40e <pvPortMalloc+0xea>
 800e45c:	42b1      	cmp	r1, r6
 800e45e:	d0d1      	beq.n	800e404 <pvPortMalloc+0xe0>
 800e460:	684c      	ldr	r4, [r1, #4]
 800e462:	6809      	ldr	r1, [r1, #0]
 800e464:	6011      	str	r1, [r2, #0]
 800e466:	4444      	add	r4, r8
 800e468:	6054      	str	r4, [r2, #4]
 800e46a:	6859      	ldr	r1, [r3, #4]
 800e46c:	e7cc      	b.n	800e408 <pvPortMalloc+0xe4>
 800e46e:	42b1      	cmp	r1, r6
 800e470:	d0f2      	beq.n	800e458 <pvPortMalloc+0x134>
 800e472:	684c      	ldr	r4, [r1, #4]
 800e474:	4414      	add	r4, r2
 800e476:	680a      	ldr	r2, [r1, #0]
 800e478:	6044      	str	r4, [r0, #4]
 800e47a:	6002      	str	r2, [r0, #0]
 800e47c:	e7ec      	b.n	800e458 <pvPortMalloc+0x134>
 800e47e:	bf00      	nop
 800e480:	200019f4 	.word	0x200019f4
 800e484:	200019e0 	.word	0x200019e0
 800e488:	200019f8 	.word	0x200019f8
 800e48c:	20001a00 	.word	0x20001a00
 800e490:	20004108 	.word	0x20004108
 800e494:	200019ec 	.word	0x200019ec
 800e498:	200019f0 	.word	0x200019f0
 800e49c:	200019e8 	.word	0x200019e8

0800e4a0 <vPortFree>:
 800e4a0:	b1d0      	cbz	r0, 800e4d8 <vPortFree+0x38>
 800e4a2:	4a2f      	ldr	r2, [pc, #188]	@ (800e560 <vPortFree+0xc0>)
 800e4a4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e4a8:	6812      	ldr	r2, [r2, #0]
 800e4aa:	4213      	tst	r3, r2
 800e4ac:	d00b      	beq.n	800e4c6 <vPortFree+0x26>
 800e4ae:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e4b2:	b191      	cbz	r1, 800e4da <vPortFree+0x3a>
 800e4b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4b8:	f383 8811 	msr	BASEPRI, r3
 800e4bc:	f3bf 8f6f 	isb	sy
 800e4c0:	f3bf 8f4f 	dsb	sy
 800e4c4:	e7fe      	b.n	800e4c4 <vPortFree+0x24>
 800e4c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4ca:	f383 8811 	msr	BASEPRI, r3
 800e4ce:	f3bf 8f6f 	isb	sy
 800e4d2:	f3bf 8f4f 	dsb	sy
 800e4d6:	e7fe      	b.n	800e4d6 <vPortFree+0x36>
 800e4d8:	4770      	bx	lr
 800e4da:	b530      	push	{r4, r5, lr}
 800e4dc:	ea23 0302 	bic.w	r3, r3, r2
 800e4e0:	b083      	sub	sp, #12
 800e4e2:	f840 3c04 	str.w	r3, [r0, #-4]
 800e4e6:	4d1f      	ldr	r5, [pc, #124]	@ (800e564 <vPortFree+0xc4>)
 800e4e8:	9001      	str	r0, [sp, #4]
 800e4ea:	f1a0 0408 	sub.w	r4, r0, #8
 800e4ee:	f7ff fc6f 	bl	800ddd0 <vTaskSuspendAll>
 800e4f2:	9801      	ldr	r0, [sp, #4]
 800e4f4:	682a      	ldr	r2, [r5, #0]
 800e4f6:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800e4fa:	4b1b      	ldr	r3, [pc, #108]	@ (800e568 <vPortFree+0xc8>)
 800e4fc:	440a      	add	r2, r1
 800e4fe:	602a      	str	r2, [r5, #0]
 800e500:	461a      	mov	r2, r3
 800e502:	681b      	ldr	r3, [r3, #0]
 800e504:	429c      	cmp	r4, r3
 800e506:	d8fb      	bhi.n	800e500 <vPortFree+0x60>
 800e508:	6855      	ldr	r5, [r2, #4]
 800e50a:	eb02 0e05 	add.w	lr, r2, r5
 800e50e:	4574      	cmp	r4, lr
 800e510:	d011      	beq.n	800e536 <vPortFree+0x96>
 800e512:	eb04 0c01 	add.w	ip, r4, r1
 800e516:	4563      	cmp	r3, ip
 800e518:	d01d      	beq.n	800e556 <vPortFree+0xb6>
 800e51a:	f840 3c08 	str.w	r3, [r0, #-8]
 800e51e:	42a2      	cmp	r2, r4
 800e520:	bf18      	it	ne
 800e522:	6014      	strne	r4, [r2, #0]
 800e524:	4a11      	ldr	r2, [pc, #68]	@ (800e56c <vPortFree+0xcc>)
 800e526:	6813      	ldr	r3, [r2, #0]
 800e528:	3301      	adds	r3, #1
 800e52a:	6013      	str	r3, [r2, #0]
 800e52c:	b003      	add	sp, #12
 800e52e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e532:	f7ff bc55 	b.w	800dde0 <xTaskResumeAll>
 800e536:	4429      	add	r1, r5
 800e538:	1850      	adds	r0, r2, r1
 800e53a:	4283      	cmp	r3, r0
 800e53c:	6051      	str	r1, [r2, #4]
 800e53e:	d1f1      	bne.n	800e524 <vPortFree+0x84>
 800e540:	480b      	ldr	r0, [pc, #44]	@ (800e570 <vPortFree+0xd0>)
 800e542:	6800      	ldr	r0, [r0, #0]
 800e544:	4283      	cmp	r3, r0
 800e546:	d0ed      	beq.n	800e524 <vPortFree+0x84>
 800e548:	4614      	mov	r4, r2
 800e54a:	e9d3 3000 	ldrd	r3, r0, [r3]
 800e54e:	4401      	add	r1, r0
 800e550:	6023      	str	r3, [r4, #0]
 800e552:	6061      	str	r1, [r4, #4]
 800e554:	e7e3      	b.n	800e51e <vPortFree+0x7e>
 800e556:	4d06      	ldr	r5, [pc, #24]	@ (800e570 <vPortFree+0xd0>)
 800e558:	682d      	ldr	r5, [r5, #0]
 800e55a:	42ab      	cmp	r3, r5
 800e55c:	d1f5      	bne.n	800e54a <vPortFree+0xaa>
 800e55e:	e7dc      	b.n	800e51a <vPortFree+0x7a>
 800e560:	200019e0 	.word	0x200019e0
 800e564:	200019f0 	.word	0x200019f0
 800e568:	200019f8 	.word	0x200019f8
 800e56c:	200019e4 	.word	0x200019e4
 800e570:	200019f4 	.word	0x200019f4

0800e574 <SPIF_WaitForWriting>:
}

/***********************************************************************************************************/

bool SPIF_WaitForWriting(SPIF_HandleTypeDef *Handle, uint32_t Timeout)
{
 800e574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e578:	b084      	sub	sp, #16
 800e57a:	4604      	mov	r4, r0
 800e57c:	460e      	mov	r6, r1
  bool retVal = false;
  uint32_t startTime = HAL_GetTick();
 800e57e:	f7f6 ffc5 	bl	800550c <HAL_GetTick>
  uint8_t tx[2] = {SPIF_CMD_READSTATUS1, SPIF_DUMMY_BYTE};
 800e582:	f24a 5705 	movw	r7, #42245	@ 0xa505
  uint32_t startTime = HAL_GetTick();
 800e586:	4605      	mov	r5, r0
  osDelay(d);
 800e588:	2001      	movs	r0, #1
 800e58a:	f7fe fea3 	bl	800d2d4 <osDelay>
  while (1)
  {
    SPIF_Delay(1);
    if (HAL_GetTick() - startTime >= Timeout)
 800e58e:	f7f6 ffbd 	bl	800550c <HAL_GetTick>
 800e592:	1b40      	subs	r0, r0, r5
 800e594:	42b0      	cmp	r0, r6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e596:	f04f 0200 	mov.w	r2, #0
    if (HAL_GetTick() - startTime >= Timeout)
 800e59a:	d220      	bcs.n	800e5de <SPIF_WaitForWriting+0x6a>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e59c:	8a21      	ldrh	r1, [r4, #16]
 800e59e:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[2] = {SPIF_CMD_READSTATUS1, SPIF_DUMMY_BYTE};
 800e5a0:	f8ad 7008 	strh.w	r7, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5a4:	f7f7 ff88 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e5a8:	2264      	movs	r2, #100	@ 0x64
 800e5aa:	6820      	ldr	r0, [r4, #0]
 800e5ac:	9200      	str	r2, [sp, #0]
 800e5ae:	a902      	add	r1, sp, #8
 800e5b0:	aa03      	add	r2, sp, #12
 800e5b2:	2302      	movs	r3, #2
 800e5b4:	f7fb fb9e 	bl	8009cf4 <HAL_SPI_TransmitReceive>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5b8:	8a21      	ldrh	r1, [r4, #16]
 800e5ba:	2201      	movs	r2, #1
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e5bc:	b130      	cbz	r0, 800e5cc <SPIF_WaitForWriting+0x58>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5be:	6860      	ldr	r0, [r4, #4]
 800e5c0:	f7f7 ff7a 	bl	80064b8 <HAL_GPIO_WritePin>
      dprintf("SPIF_WaitForWriting() TIMEOUT\r\n");
      break;
    }
    if ((SPIF_ReadReg1(Handle) & SPIF_STATUS1_BUSY) == 0)
    {
      retVal = true;
 800e5c4:	2001      	movs	r0, #1
      break;
    }
  }
  return retVal;
}
 800e5c6:	b004      	add	sp, #16
 800e5c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    retVal = rx[1];
 800e5cc:	f89d 800d 	ldrb.w	r8, [sp, #13]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5d0:	6860      	ldr	r0, [r4, #4]
 800e5d2:	f7f7 ff71 	bl	80064b8 <HAL_GPIO_WritePin>
    if ((SPIF_ReadReg1(Handle) & SPIF_STATUS1_BUSY) == 0)
 800e5d6:	f018 0f01 	tst.w	r8, #1
 800e5da:	d1d5      	bne.n	800e588 <SPIF_WaitForWriting+0x14>
 800e5dc:	e7f2      	b.n	800e5c4 <SPIF_WaitForWriting+0x50>
  bool retVal = false;
 800e5de:	2000      	movs	r0, #0
}
 800e5e0:	b004      	add	sp, #16
 800e5e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5e6:	bf00      	nop

0800e5e8 <SPIF_FindChip>:

/***********************************************************************************************************/

bool SPIF_FindChip(SPIF_HandleTypeDef *Handle)
{
 800e5e8:	b510      	push	{r4, lr}
 800e5ea:	b084      	sub	sp, #16
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5ec:	8a01      	ldrh	r1, [r0, #16]
{
 800e5ee:	4604      	mov	r4, r0
  uint8_t tx[4] = {SPIF_CMD_JEDECID, 0xFF, 0xFF, 0xFF};
 800e5f0:	f06f 0360 	mvn.w	r3, #96	@ 0x60
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5f4:	6840      	ldr	r0, [r0, #4]
  uint8_t tx[4] = {SPIF_CMD_JEDECID, 0xFF, 0xFF, 0xFF};
 800e5f6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e5f8:	2200      	movs	r2, #0
 800e5fa:	f7f7 ff5d 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e5fe:	2264      	movs	r2, #100	@ 0x64
 800e600:	9200      	str	r2, [sp, #0]
 800e602:	a902      	add	r1, sp, #8
 800e604:	6820      	ldr	r0, [r4, #0]
 800e606:	2304      	movs	r3, #4
 800e608:	aa03      	add	r2, sp, #12
 800e60a:	f7fb fb73 	bl	8009cf4 <HAL_SPI_TransmitReceive>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e60e:	8a21      	ldrh	r1, [r4, #16]
  if (HAL_SPI_TransmitReceive(Handle->HSpi, Tx, Rx, Size, Timeout) == HAL_OK)
 800e610:	b130      	cbz	r0, 800e620 <SPIF_FindChip+0x38>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e612:	6860      	ldr	r0, [r4, #4]
 800e614:	2201      	movs	r2, #1
 800e616:	f7f7 ff4f 	bl	80064b8 <HAL_GPIO_WritePin>
  uint8_t rx[4];
  bool retVal = false;
 800e61a:	2000      	movs	r0, #0
    retVal = true;

  } while (0);

  return retVal;
}
 800e61c:	b004      	add	sp, #16
 800e61e:	bd10      	pop	{r4, pc}
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e620:	2201      	movs	r2, #1
 800e622:	6860      	ldr	r0, [r4, #4]
 800e624:	f7f7 ff48 	bl	80064b8 <HAL_GPIO_WritePin>
    Handle->Manufactor = rx[1];
 800e628:	f89d 300d 	ldrb.w	r3, [sp, #13]
    Handle->MemType = rx[2];
 800e62c:	f89d 100e 	ldrb.w	r1, [sp, #14]
    Handle->Size = rx[3];
 800e630:	f89d 200f 	ldrb.w	r2, [sp, #15]
    Handle->Manufactor = rx[1];
 800e634:	7223      	strb	r3, [r4, #8]
    switch (Handle->Manufactor)
 800e636:	2ba1      	cmp	r3, #161	@ 0xa1
    Handle->MemType = rx[2];
 800e638:	72e1      	strb	r1, [r4, #11]
    Handle->Size = rx[3];
 800e63a:	7262      	strb	r2, [r4, #9]
    switch (Handle->Manufactor)
 800e63c:	d81c      	bhi.n	800e678 <SPIF_FindChip+0x90>
 800e63e:	2b84      	cmp	r3, #132	@ 0x84
 800e640:	d826      	bhi.n	800e690 <SPIF_FindChip+0xa8>
 800e642:	2b37      	cmp	r3, #55	@ 0x37
 800e644:	d815      	bhi.n	800e672 <SPIF_FindChip+0x8a>
 800e646:	2b1b      	cmp	r3, #27
 800e648:	d82a      	bhi.n	800e6a0 <SPIF_FindChip+0xb8>
 800e64a:	2b01      	cmp	r3, #1
 800e64c:	d003      	beq.n	800e656 <SPIF_FindChip+0x6e>
 800e64e:	2b04      	cmp	r3, #4
 800e650:	d001      	beq.n	800e656 <SPIF_FindChip+0x6e>
      Handle->Manufactor = SPIF_MANUFACTOR_ERROR;
 800e652:	2300      	movs	r3, #0
 800e654:	7223      	strb	r3, [r4, #8]
    switch (Handle->Size)
 800e656:	f1a2 0311 	sub.w	r3, r2, #17
 800e65a:	2b0f      	cmp	r3, #15
 800e65c:	d828      	bhi.n	800e6b0 <SPIF_FindChip+0xc8>
 800e65e:	e8df f003 	tbb	[pc, r3]
 800e662:	6c72      	.short	0x6c72
 800e664:	51585f66 	.word	0x51585f66
 800e668:	273a424a 	.word	0x273a424a
 800e66c:	27272727 	.word	0x27272727
 800e670:	3227      	.short	0x3227
    switch (Handle->Manufactor)
 800e672:	2b62      	cmp	r3, #98	@ 0x62
 800e674:	d1ed      	bne.n	800e652 <SPIF_FindChip+0x6a>
 800e676:	e7ee      	b.n	800e656 <SPIF_FindChip+0x6e>
 800e678:	2bc8      	cmp	r3, #200	@ 0xc8
 800e67a:	d86a      	bhi.n	800e752 <SPIF_FindChip+0x16a>
 800e67c:	2bac      	cmp	r3, #172	@ 0xac
 800e67e:	d9e8      	bls.n	800e652 <SPIF_FindChip+0x6a>
 800e680:	4936      	ldr	r1, [pc, #216]	@ (800e75c <SPIF_FindChip+0x174>)
 800e682:	3353      	adds	r3, #83	@ 0x53
 800e684:	b2db      	uxtb	r3, r3
 800e686:	fa21 f303 	lsr.w	r3, r1, r3
 800e68a:	07d8      	lsls	r0, r3, #31
 800e68c:	d4e3      	bmi.n	800e656 <SPIF_FindChip+0x6e>
 800e68e:	e7e0      	b.n	800e652 <SPIF_FindChip+0x6a>
 800e690:	4933      	ldr	r1, [pc, #204]	@ (800e760 <SPIF_FindChip+0x178>)
 800e692:	337b      	adds	r3, #123	@ 0x7b
 800e694:	b2db      	uxtb	r3, r3
 800e696:	fa21 f303 	lsr.w	r3, r1, r3
 800e69a:	07d9      	lsls	r1, r3, #31
 800e69c:	d5d9      	bpl.n	800e652 <SPIF_FindChip+0x6a>
 800e69e:	e7da      	b.n	800e656 <SPIF_FindChip+0x6e>
 800e6a0:	4930      	ldr	r1, [pc, #192]	@ (800e764 <SPIF_FindChip+0x17c>)
 800e6a2:	3b1c      	subs	r3, #28
 800e6a4:	b2db      	uxtb	r3, r3
 800e6a6:	fa21 f303 	lsr.w	r3, r1, r3
 800e6aa:	07db      	lsls	r3, r3, #31
 800e6ac:	d5d1      	bpl.n	800e652 <SPIF_FindChip+0x6a>
 800e6ae:	e7d2      	b.n	800e656 <SPIF_FindChip+0x6e>
    Handle->SectorCnt = Handle->BlockCnt * 16;
 800e6b0:	69e3      	ldr	r3, [r4, #28]
      Handle->Size = SPIF_SIZE_ERROR;
 800e6b2:	2100      	movs	r1, #0
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e6b4:	041a      	lsls	r2, r3, #16
      Handle->Size = SPIF_SIZE_ERROR;
 800e6b6:	7261      	strb	r1, [r4, #9]
    Handle->SectorCnt = Handle->BlockCnt * 16;
 800e6b8:	011b      	lsls	r3, r3, #4
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e6ba:	0a12      	lsrs	r2, r2, #8
    retVal = true;
 800e6bc:	2001      	movs	r0, #1
    Handle->PageCnt = (Handle->SectorCnt * SPIF_SECTOR_SIZE) / SPIF_PAGE_SIZE;
 800e6be:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
 800e6c2:	b004      	add	sp, #16
 800e6c4:	bd10      	pop	{r4, pc}
      Handle->BlockCnt = 1024;
 800e6c6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e6ca:	61e3      	str	r3, [r4, #28]
      break;
 800e6cc:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 800e6d0:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800e6d4:	e7f2      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 512;
 800e6d6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e6da:	61e3      	str	r3, [r4, #28]
      break;
 800e6dc:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800e6e0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800e6e4:	e7ea      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 256;
 800e6e6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e6ea:	61e3      	str	r3, [r4, #28]
      break;
 800e6ec:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800e6f0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800e6f4:	e7e2      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 128;
 800e6f6:	2380      	movs	r3, #128	@ 0x80
 800e6f8:	61e3      	str	r3, [r4, #28]
      break;
 800e6fa:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800e6fe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e702:	e7db      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 64;
 800e704:	2340      	movs	r3, #64	@ 0x40
 800e706:	61e3      	str	r3, [r4, #28]
      break;
 800e708:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800e70c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e710:	e7d4      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 32;
 800e712:	2320      	movs	r3, #32
 800e714:	61e3      	str	r3, [r4, #28]
      break;
 800e716:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800e71a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e71e:	e7cd      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 16;
 800e720:	2310      	movs	r3, #16
 800e722:	61e3      	str	r3, [r4, #28]
      break;
 800e724:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800e728:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e72c:	e7c6      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 8;
 800e72e:	2308      	movs	r3, #8
 800e730:	61e3      	str	r3, [r4, #28]
      break;
 800e732:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800e736:	2380      	movs	r3, #128	@ 0x80
 800e738:	e7c0      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 4;
 800e73a:	2304      	movs	r3, #4
 800e73c:	61e3      	str	r3, [r4, #28]
      break;
 800e73e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800e742:	2340      	movs	r3, #64	@ 0x40
 800e744:	e7ba      	b.n	800e6bc <SPIF_FindChip+0xd4>
      Handle->BlockCnt = 2;
 800e746:	2302      	movs	r3, #2
 800e748:	61e3      	str	r3, [r4, #28]
      break;
 800e74a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e74e:	2320      	movs	r3, #32
 800e750:	e7b4      	b.n	800e6bc <SPIF_FindChip+0xd4>
    switch (Handle->Manufactor)
 800e752:	2bef      	cmp	r3, #239	@ 0xef
 800e754:	f47f af7d 	bne.w	800e652 <SPIF_FindChip+0x6a>
 800e758:	e77d      	b.n	800e656 <SPIF_FindChip+0x6e>
 800e75a:	bf00      	nop
 800e75c:	08240001 	.word	0x08240001
 800e760:	11000091 	.word	0x11000091
 800e764:	08000011 	.word	0x08000011

0800e768 <SPIF_WriteFn>:

/***********************************************************************************************************/

bool SPIF_WriteFn(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800e768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e76c:	4604      	mov	r4, r0
  {
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_WritePage() START PAGE %ld\r\n", PageNumber);
    if (PageNumber >= Handle->PageCnt)
 800e76e:	6940      	ldr	r0, [r0, #20]
 800e770:	4288      	cmp	r0, r1
{
 800e772:	b084      	sub	sp, #16
    if (PageNumber >= Handle->PageCnt)
 800e774:	d817      	bhi.n	800e7a6 <SPIF_WriteFn+0x3e>
  bool retVal = false;
 800e776:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e778:	8a21      	ldrh	r1, [r4, #16]
 800e77a:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e77c:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e77e:	2200      	movs	r2, #0
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e780:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e784:	f7f7 fe98 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e788:	2364      	movs	r3, #100	@ 0x64
 800e78a:	a901      	add	r1, sp, #4
 800e78c:	6820      	ldr	r0, [r4, #0]
 800e78e:	2201      	movs	r2, #1
 800e790:	f7fb f988 	bl	8009aa4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e794:	6860      	ldr	r0, [r4, #4]
 800e796:	8a21      	ldrh	r1, [r4, #16]
 800e798:	2201      	movs	r2, #1
 800e79a:	f7f7 fe8d 	bl	80064b8 <HAL_GPIO_WritePin>

  } while (0);

  SPIF_WriteDisable(Handle);
  return retVal;
}
 800e79e:	4628      	mov	r0, r5
 800e7a0:	b004      	add	sp, #16
 800e7a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7a6:	461f      	mov	r7, r3
    if (Offset >= SPIF_PAGE_SIZE)
 800e7a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e7aa:	2bff      	cmp	r3, #255	@ 0xff
 800e7ac:	d8e3      	bhi.n	800e776 <SPIF_WriteFn+0xe>
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800e7ae:	2306      	movs	r3, #6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e7b0:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800e7b2:	f88d 3008 	strb.w	r3, [sp, #8]
 800e7b6:	460d      	mov	r5, r1
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e7b8:	4616      	mov	r6, r2
 800e7ba:	8a21      	ldrh	r1, [r4, #16]
 800e7bc:	2200      	movs	r2, #0
 800e7be:	f7f7 fe7b 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e7c2:	6820      	ldr	r0, [r4, #0]
 800e7c4:	2364      	movs	r3, #100	@ 0x64
 800e7c6:	2201      	movs	r2, #1
 800e7c8:	a902      	add	r1, sp, #8
 800e7ca:	f7fb f96b 	bl	8009aa4 <HAL_SPI_Transmit>
 800e7ce:	4680      	mov	r8, r0
 800e7d0:	2800      	cmp	r0, #0
 800e7d2:	d151      	bne.n	800e878 <SPIF_WriteFn+0x110>
    address = SPIF_PageToAddress(PageNumber) + Offset;
 800e7d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e7d6:	8a21      	ldrh	r1, [r4, #16]
 800e7d8:	6860      	ldr	r0, [r4, #4]
 800e7da:	2201      	movs	r2, #1
    address = SPIF_PageToAddress(PageNumber) + Offset;
 800e7dc:	eb03 2505 	add.w	r5, r3, r5, lsl #8
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e7e0:	f7f7 fe6a 	bl	80064b8 <HAL_GPIO_WritePin>
 800e7e4:	8a21      	ldrh	r1, [r4, #16]
 800e7e6:	6860      	ldr	r0, [r4, #4]
 800e7e8:	4642      	mov	r2, r8
 800e7ea:	f7f7 fe65 	bl	80064b8 <HAL_GPIO_WritePin>
    if (Handle->BlockCnt >= 512)
 800e7ee:	69e3      	ldr	r3, [r4, #28]
 800e7f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
      tx[2] = (address & 0x00FF0000) >> 16;
 800e7f4:	f3c5 4207 	ubfx	r2, r5, #16, #8
      tx[3] = (address & 0x0000FF00) >> 8;
 800e7f8:	f3c5 2007 	ubfx	r0, r5, #8, #8
      tx[4] = (address & 0x000000FF);
 800e7fc:	b2e9      	uxtb	r1, r5
    if (Handle->BlockCnt >= 512)
 800e7fe:	d227      	bcs.n	800e850 <SPIF_WriteFn+0xe8>
      tx[1] = (address & 0x00FF0000) >> 16;
 800e800:	f88d 2009 	strb.w	r2, [sp, #9]
      tx[0] = SPIF_CMD_PAGEPROG3ADD;
 800e804:	2202      	movs	r2, #2
      tx[2] = (address & 0x0000FF00) >> 8;
 800e806:	ba6d      	rev16	r5, r5
      tx[0] = SPIF_CMD_PAGEPROG3ADD;
 800e808:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e80c:	6820      	ldr	r0, [r4, #0]
      tx[2] = (address & 0x0000FF00) >> 8;
 800e80e:	f8ad 500a 	strh.w	r5, [sp, #10]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e812:	a902      	add	r1, sp, #8
 800e814:	2364      	movs	r3, #100	@ 0x64
 800e816:	2204      	movs	r2, #4
 800e818:	f7fb f944 	bl	8009aa4 <HAL_SPI_Transmit>
 800e81c:	bb60      	cbnz	r0, 800e878 <SPIF_WriteFn+0x110>
  uint32_t address = 0, maximum = SPIF_PAGE_SIZE - Offset;
 800e81e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e820:	6820      	ldr	r0, [r4, #0]
  uint32_t address = 0, maximum = SPIF_PAGE_SIZE - Offset;
 800e822:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
    if (Size > maximum)
 800e826:	42ba      	cmp	r2, r7
 800e828:	bf28      	it	cs
 800e82a:	463a      	movcs	r2, r7
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e82c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800e830:	b292      	uxth	r2, r2
 800e832:	4631      	mov	r1, r6
 800e834:	f7fb f936 	bl	8009aa4 <HAL_SPI_Transmit>
 800e838:	b9f0      	cbnz	r0, 800e878 <SPIF_WriteFn+0x110>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e83a:	8a21      	ldrh	r1, [r4, #16]
 800e83c:	6860      	ldr	r0, [r4, #4]
 800e83e:	2201      	movs	r2, #1
 800e840:	f7f7 fe3a 	bl	80064b8 <HAL_GPIO_WritePin>
    if (SPIF_WaitForWriting(Handle, 100))
 800e844:	2164      	movs	r1, #100	@ 0x64
 800e846:	4620      	mov	r0, r4
 800e848:	f7ff fe94 	bl	800e574 <SPIF_WaitForWriting>
 800e84c:	4605      	mov	r5, r0
 800e84e:	e793      	b.n	800e778 <SPIF_WriteFn+0x10>
      tx[2] = (address & 0x00FF0000) >> 16;
 800e850:	f88d 200a 	strb.w	r2, [sp, #10]
      tx[0] = SPIF_CMD_PAGEPROG4ADD;
 800e854:	2212      	movs	r2, #18
      tx[3] = (address & 0x0000FF00) >> 8;
 800e856:	f88d 000b 	strb.w	r0, [sp, #11]
      tx[4] = (address & 0x000000FF);
 800e85a:	f88d 100c 	strb.w	r1, [sp, #12]
      tx[1] = (address & 0xFF000000) >> 24;
 800e85e:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_PAGEPROG4ADD;
 800e860:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e864:	6820      	ldr	r0, [r4, #0]
      tx[1] = (address & 0xFF000000) >> 24;
 800e866:	f88d 5009 	strb.w	r5, [sp, #9]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e86a:	2364      	movs	r3, #100	@ 0x64
 800e86c:	a902      	add	r1, sp, #8
 800e86e:	2205      	movs	r2, #5
 800e870:	f7fb f918 	bl	8009aa4 <HAL_SPI_Transmit>
 800e874:	2800      	cmp	r0, #0
 800e876:	d0d2      	beq.n	800e81e <SPIF_WriteFn+0xb6>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e878:	8a21      	ldrh	r1, [r4, #16]
 800e87a:	6860      	ldr	r0, [r4, #4]
 800e87c:	2201      	movs	r2, #1
 800e87e:	f7f7 fe1b 	bl	80064b8 <HAL_GPIO_WritePin>
}
 800e882:	e778      	b.n	800e776 <SPIF_WriteFn+0xe>

0800e884 <SPIF_ReadFn>:

/***********************************************************************************************************/

bool SPIF_ReadFn(SPIF_HandleTypeDef *Handle, uint32_t Address, uint8_t *Data, uint32_t Size)
{
 800e884:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e886:	4604      	mov	r4, r0
 800e888:	460d      	mov	r5, r1
 800e88a:	b083      	sub	sp, #12
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e88c:	8a01      	ldrh	r1, [r0, #16]
 800e88e:	6840      	ldr	r0, [r0, #4]
{
 800e890:	4617      	mov	r7, r2
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e892:	2200      	movs	r2, #0
{
 800e894:	461e      	mov	r6, r3
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e896:	f7f7 fe0f 	bl	80064b8 <HAL_GPIO_WritePin>
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_ReadAddress() START ADDRESS %ld\r\n", Address);
    SPIF_CsPin(Handle, 0);
    if (Handle->BlockCnt >= 512)
 800e89a:	69e1      	ldr	r1, [r4, #28]
 800e89c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
    {
      tx[0] = SPIF_CMD_READDATA4ADD;
      tx[1] = (Address & 0xFF000000) >> 24;
      tx[2] = (Address & 0x00FF0000) >> 16;
 800e8a0:	f3c5 4007 	ubfx	r0, r5, #16, #8
      tx[3] = (Address & 0x0000FF00) >> 8;
 800e8a4:	f3c5 2307 	ubfx	r3, r5, #8, #8
    if (Handle->BlockCnt >= 512)
 800e8a8:	d31b      	bcc.n	800e8e2 <SPIF_ReadFn+0x5e>
      tx[0] = SPIF_CMD_READDATA4ADD;
 800e8aa:	b2ea      	uxtb	r2, r5
      tx[4] = (Address & 0x000000FF);
 800e8ac:	f88d 2004 	strb.w	r2, [sp, #4]
      tx[0] = SPIF_CMD_READDATA4ADD;
 800e8b0:	2213      	movs	r2, #19
      tx[2] = (Address & 0x00FF0000) >> 16;
 800e8b2:	f88d 0002 	strb.w	r0, [sp, #2]
      tx[3] = (Address & 0x0000FF00) >> 8;
 800e8b6:	f88d 3003 	strb.w	r3, [sp, #3]
      tx[1] = (Address & 0xFF000000) >> 24;
 800e8ba:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_READDATA4ADD;
 800e8bc:	f88d 2000 	strb.w	r2, [sp]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e8c0:	6820      	ldr	r0, [r4, #0]
      tx[1] = (Address & 0xFF000000) >> 24;
 800e8c2:	f88d 5001 	strb.w	r5, [sp, #1]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e8c6:	2364      	movs	r3, #100	@ 0x64
 800e8c8:	2205      	movs	r2, #5
 800e8ca:	4669      	mov	r1, sp
 800e8cc:	f7fb f8ea 	bl	8009aa4 <HAL_SPI_Transmit>
 800e8d0:	b1b8      	cbz	r0, 800e902 <SPIF_ReadFn+0x7e>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e8d2:	6860      	ldr	r0, [r4, #4]
 800e8d4:	8a21      	ldrh	r1, [r4, #16]
 800e8d6:	2201      	movs	r2, #1
 800e8d8:	f7f7 fdee 	bl	80064b8 <HAL_GPIO_WritePin>
  bool retVal = false;
 800e8dc:	2000      	movs	r0, #0
    retVal = true;

  } while (0);

  return retVal;
}
 800e8de:	b003      	add	sp, #12
 800e8e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      tx[0] = SPIF_CMD_READDATA3ADD;
 800e8e2:	2203      	movs	r2, #3
      tx[1] = (Address & 0x00FF0000) >> 16;
 800e8e4:	f88d 0001 	strb.w	r0, [sp, #1]
      tx[2] = (Address & 0x0000FF00) >> 8;
 800e8e8:	ba6d      	rev16	r5, r5
      tx[0] = SPIF_CMD_READDATA3ADD;
 800e8ea:	f88d 2000 	strb.w	r2, [sp]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e8ee:	6820      	ldr	r0, [r4, #0]
      tx[2] = (Address & 0x0000FF00) >> 8;
 800e8f0:	f8ad 5002 	strh.w	r5, [sp, #2]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e8f4:	2364      	movs	r3, #100	@ 0x64
 800e8f6:	2204      	movs	r2, #4
 800e8f8:	4669      	mov	r1, sp
 800e8fa:	f7fb f8d3 	bl	8009aa4 <HAL_SPI_Transmit>
 800e8fe:	2800      	cmp	r0, #0
 800e900:	d1e7      	bne.n	800e8d2 <SPIF_ReadFn+0x4e>
  if (HAL_SPI_Receive(Handle->HSpi, Rx, Size, Timeout) == HAL_OK)
 800e902:	6820      	ldr	r0, [r4, #0]
 800e904:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 800e908:	b2b2      	uxth	r2, r6
 800e90a:	4639      	mov	r1, r7
 800e90c:	f7fb fbe2 	bl	800a0d4 <HAL_SPI_Receive>
 800e910:	2800      	cmp	r0, #0
 800e912:	d1de      	bne.n	800e8d2 <SPIF_ReadFn+0x4e>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e914:	6860      	ldr	r0, [r4, #4]
 800e916:	8a21      	ldrh	r1, [r4, #16]
 800e918:	2201      	movs	r2, #1
 800e91a:	f7f7 fdcd 	bl	80064b8 <HAL_GPIO_WritePin>
    retVal = true;
 800e91e:	2001      	movs	r0, #1
}
 800e920:	b003      	add	sp, #12
 800e922:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e924 <SPIF_Init>:
bool SPIF_Init(SPIF_HandleTypeDef *Handle, SPI_HandleTypeDef *HSpi, GPIO_TypeDef *Gpio, uint16_t Pin)
{
  bool retVal = false;
  do
  {
    if ((Handle == NULL) || (HSpi == NULL) || (Gpio == NULL) || (Handle->Inited == 1))
 800e924:	2800      	cmp	r0, #0
 800e926:	d044      	beq.n	800e9b2 <SPIF_Init+0x8e>
 800e928:	2900      	cmp	r1, #0
 800e92a:	d042      	beq.n	800e9b2 <SPIF_Init+0x8e>
{
 800e92c:	b530      	push	{r4, r5, lr}
 800e92e:	4615      	mov	r5, r2
 800e930:	b083      	sub	sp, #12
    if ((Handle == NULL) || (HSpi == NULL) || (Gpio == NULL) || (Handle->Inited == 1))
 800e932:	b11a      	cbz	r2, 800e93c <SPIF_Init+0x18>
 800e934:	7a82      	ldrb	r2, [r0, #10]
 800e936:	2a01      	cmp	r2, #1
 800e938:	4604      	mov	r4, r0
 800e93a:	d102      	bne.n	800e942 <SPIF_Init+0x1e>
  bool retVal = false;
 800e93c:	2000      	movs	r0, #0
    }

  } while (0);

  return retVal;
}
 800e93e:	b003      	add	sp, #12
 800e940:	bd30      	pop	{r4, r5, pc}
    memset(Handle, 0, sizeof(SPIF_HandleTypeDef));
 800e942:	2200      	movs	r2, #0
    Handle->Gpio = Gpio;
 800e944:	e9c0 1500 	strd	r1, r5, [r0]
    memset(Handle, 0, sizeof(SPIF_HandleTypeDef));
 800e948:	6082      	str	r2, [r0, #8]
 800e94a:	60c2      	str	r2, [r0, #12]
 800e94c:	6142      	str	r2, [r0, #20]
 800e94e:	6182      	str	r2, [r0, #24]
 800e950:	61c2      	str	r2, [r0, #28]
    Handle->Pin = Pin;
 800e952:	6103      	str	r3, [r0, #16]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e954:	2201      	movs	r2, #1
 800e956:	4619      	mov	r1, r3
 800e958:	4628      	mov	r0, r5
 800e95a:	f7f7 fdad 	bl	80064b8 <HAL_GPIO_WritePin>
}
 800e95e:	e001      	b.n	800e964 <SPIF_Init+0x40>
  osDelay(d);
 800e960:	f7fe fcb8 	bl	800d2d4 <osDelay>
    while (HAL_GetTick() < 20)
 800e964:	f7f6 fdd2 	bl	800550c <HAL_GetTick>
 800e968:	2813      	cmp	r0, #19
  osDelay(d);
 800e96a:	f04f 0001 	mov.w	r0, #1
    while (HAL_GetTick() < 20)
 800e96e:	d9f7      	bls.n	800e960 <SPIF_Init+0x3c>
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e970:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e972:	8a21      	ldrh	r1, [r4, #16]
 800e974:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e976:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e97a:	2200      	movs	r2, #0
 800e97c:	f7f7 fd9c 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e980:	a901      	add	r1, sp, #4
 800e982:	6820      	ldr	r0, [r4, #0]
 800e984:	2364      	movs	r3, #100	@ 0x64
 800e986:	2201      	movs	r2, #1
 800e988:	f7fb f88c 	bl	8009aa4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e98c:	8a21      	ldrh	r1, [r4, #16]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e98e:	b120      	cbz	r0, 800e99a <SPIF_Init+0x76>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e990:	6860      	ldr	r0, [r4, #4]
 800e992:	2201      	movs	r2, #1
 800e994:	f7f7 fd90 	bl	80064b8 <HAL_GPIO_WritePin>
  return retVal;
 800e998:	e7d0      	b.n	800e93c <SPIF_Init+0x18>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e99a:	6860      	ldr	r0, [r4, #4]
 800e99c:	2201      	movs	r2, #1
 800e99e:	f7f7 fd8b 	bl	80064b8 <HAL_GPIO_WritePin>
    retVal = SPIF_FindChip(Handle);
 800e9a2:	4620      	mov	r0, r4
 800e9a4:	f7ff fe20 	bl	800e5e8 <SPIF_FindChip>
    if (retVal)
 800e9a8:	2800      	cmp	r0, #0
 800e9aa:	d0c7      	beq.n	800e93c <SPIF_Init+0x18>
      Handle->Inited = 1;
 800e9ac:	2301      	movs	r3, #1
 800e9ae:	72a3      	strb	r3, [r4, #10]
 800e9b0:	e7c5      	b.n	800e93e <SPIF_Init+0x1a>
  bool retVal = false;
 800e9b2:	2000      	movs	r0, #0
}
 800e9b4:	4770      	bx	lr
 800e9b6:	bf00      	nop

0800e9b8 <SPIF_EraseSector>:
  * @param  Sector: Selected Sector
  *
  * @retval bool: true or false
  */
bool SPIF_EraseSector(SPIF_HandleTypeDef *Handle, uint32_t Sector)
{
 800e9b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  while (Handle->Lock)
 800e9ba:	7b03      	ldrb	r3, [r0, #12]
{
 800e9bc:	b085      	sub	sp, #20
 800e9be:	4604      	mov	r4, r0
 800e9c0:	460d      	mov	r5, r1
  while (Handle->Lock)
 800e9c2:	b12b      	cbz	r3, 800e9d0 <SPIF_EraseSector+0x18>
  osDelay(d);
 800e9c4:	2001      	movs	r0, #1
 800e9c6:	f7fe fc85 	bl	800d2d4 <osDelay>
  while (Handle->Lock)
 800e9ca:	7b23      	ldrb	r3, [r4, #12]
 800e9cc:	2b00      	cmp	r3, #0
 800e9ce:	d1f9      	bne.n	800e9c4 <SPIF_EraseSector+0xc>
  {
#if SPIF_DEBUG != SPIF_DEBUG_DISABLE
    uint32_t dbgTime = HAL_GetTick();
#endif
    dprintf("SPIF_EraseSector() START SECTOR %ld\r\n", Sector);
    if (Sector >= Handle->SectorCnt)
 800e9d0:	69a3      	ldr	r3, [r4, #24]
  Handle->Lock = 1;
 800e9d2:	2601      	movs	r6, #1
    if (Sector >= Handle->SectorCnt)
 800e9d4:	42ab      	cmp	r3, r5
  Handle->Lock = 1;
 800e9d6:	7326      	strb	r6, [r4, #12]
    if (Sector >= Handle->SectorCnt)
 800e9d8:	d818      	bhi.n	800ea0c <SPIF_EraseSector+0x54>
  bool retVal = false;
 800e9da:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9dc:	8a21      	ldrh	r1, [r4, #16]
 800e9de:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e9e0:	2304      	movs	r3, #4
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9e2:	2200      	movs	r2, #0
  uint8_t tx[1] = {SPIF_CMD_WRITEDISABLE};
 800e9e4:	f88d 3004 	strb.w	r3, [sp, #4]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9e8:	f7f7 fd66 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800e9ec:	2364      	movs	r3, #100	@ 0x64
 800e9ee:	a901      	add	r1, sp, #4
 800e9f0:	6820      	ldr	r0, [r4, #0]
 800e9f2:	2201      	movs	r2, #1
 800e9f4:	f7fb f856 	bl	8009aa4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800e9f8:	6860      	ldr	r0, [r4, #4]
 800e9fa:	8a21      	ldrh	r1, [r4, #16]
 800e9fc:	2201      	movs	r2, #1
 800e9fe:	f7f7 fd5b 	bl	80064b8 <HAL_GPIO_WritePin>
  Handle->Lock = 0;
 800ea02:	2300      	movs	r3, #0
  } while (0);

  SPIF_WriteDisable(Handle);
  SPIF_UnLock(Handle);
  return retVal;
}
 800ea04:	4628      	mov	r0, r5
  Handle->Lock = 0;
 800ea06:	7323      	strb	r3, [r4, #12]
}
 800ea08:	b005      	add	sp, #20
 800ea0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ea0c:	2306      	movs	r3, #6
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea0e:	8a21      	ldrh	r1, [r4, #16]
 800ea10:	6860      	ldr	r0, [r4, #4]
  uint8_t tx[1] = {SPIF_CMD_WRITEENABLE};
 800ea12:	f88d 3008 	strb.w	r3, [sp, #8]
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea16:	2200      	movs	r2, #0
 800ea18:	f7f7 fd4e 	bl	80064b8 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea1c:	6820      	ldr	r0, [r4, #0]
 800ea1e:	2364      	movs	r3, #100	@ 0x64
 800ea20:	4632      	mov	r2, r6
 800ea22:	a902      	add	r1, sp, #8
 800ea24:	f7fb f83e 	bl	8009aa4 <HAL_SPI_Transmit>
 800ea28:	4607      	mov	r7, r0
 800ea2a:	2800      	cmp	r0, #0
 800ea2c:	d142      	bne.n	800eab4 <SPIF_EraseSector+0xfc>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea2e:	8a21      	ldrh	r1, [r4, #16]
 800ea30:	6860      	ldr	r0, [r4, #4]
 800ea32:	4632      	mov	r2, r6
 800ea34:	f7f7 fd40 	bl	80064b8 <HAL_GPIO_WritePin>
 800ea38:	8a21      	ldrh	r1, [r4, #16]
 800ea3a:	6860      	ldr	r0, [r4, #4]
 800ea3c:	463a      	mov	r2, r7
 800ea3e:	f7f7 fd3b 	bl	80064b8 <HAL_GPIO_WritePin>
    if (Handle->BlockCnt >= 512)
 800ea42:	69e2      	ldr	r2, [r4, #28]
  uint32_t address = Sector * SPIF_SECTOR_SIZE;
 800ea44:	032d      	lsls	r5, r5, #12
      tx[3] = (address & 0x0000FF00) >> 8;
 800ea46:	0a2b      	lsrs	r3, r5, #8
    if (Handle->BlockCnt >= 512)
 800ea48:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
      tx[3] = (address & 0x0000FF00) >> 8;
 800ea4c:	b2db      	uxtb	r3, r3
      tx[2] = (address & 0x00FF0000) >> 16;
 800ea4e:	f3c5 4107 	ubfx	r1, r5, #16, #8
    if (Handle->BlockCnt >= 512)
 800ea52:	d31e      	bcc.n	800ea92 <SPIF_EraseSector+0xda>
      tx[0] = SPIF_CMD_SECTORERASE4ADD;
 800ea54:	2221      	movs	r2, #33	@ 0x21
      tx[2] = (address & 0x00FF0000) >> 16;
 800ea56:	f88d 100a 	strb.w	r1, [sp, #10]
      tx[3] = (address & 0x0000FF00) >> 8;
 800ea5a:	f88d 300b 	strb.w	r3, [sp, #11]
      tx[1] = (address & 0xFF000000) >> 24;
 800ea5e:	0e2d      	lsrs	r5, r5, #24
      tx[0] = SPIF_CMD_SECTORERASE4ADD;
 800ea60:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea64:	6820      	ldr	r0, [r4, #0]
      tx[1] = (address & 0xFF000000) >> 24;
 800ea66:	f88d 5009 	strb.w	r5, [sp, #9]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea6a:	2364      	movs	r3, #100	@ 0x64
 800ea6c:	a902      	add	r1, sp, #8
 800ea6e:	2205      	movs	r2, #5
      tx[4] = (address & 0x000000FF);
 800ea70:	f88d 700c 	strb.w	r7, [sp, #12]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800ea74:	f7fb f816 	bl	8009aa4 <HAL_SPI_Transmit>
 800ea78:	b9e0      	cbnz	r0, 800eab4 <SPIF_EraseSector+0xfc>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800ea7a:	8a21      	ldrh	r1, [r4, #16]
 800ea7c:	6860      	ldr	r0, [r4, #4]
 800ea7e:	2201      	movs	r2, #1
 800ea80:	f7f7 fd1a 	bl	80064b8 <HAL_GPIO_WritePin>
    if (SPIF_WaitForWriting(Handle, 1000))
 800ea84:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800ea88:	4620      	mov	r0, r4
 800ea8a:	f7ff fd73 	bl	800e574 <SPIF_WaitForWriting>
 800ea8e:	4605      	mov	r5, r0
 800ea90:	e7a4      	b.n	800e9dc <SPIF_EraseSector+0x24>
      tx[0] = SPIF_CMD_SECTORERASE3ADD;
 800ea92:	2220      	movs	r2, #32
      tx[1] = (address & 0x00FF0000) >> 16;
 800ea94:	f88d 1009 	strb.w	r1, [sp, #9]
      tx[2] = (address & 0x0000FF00) >> 8;
 800ea98:	f88d 300a 	strb.w	r3, [sp, #10]
      tx[0] = SPIF_CMD_SECTORERASE3ADD;
 800ea9c:	f88d 2008 	strb.w	r2, [sp, #8]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eaa0:	6820      	ldr	r0, [r4, #0]
      tx[3] = (address & 0x000000FF);
 800eaa2:	f88d 700b 	strb.w	r7, [sp, #11]
  if (HAL_SPI_Transmit(Handle->HSpi, Tx, Size, Timeout) == HAL_OK)
 800eaa6:	a902      	add	r1, sp, #8
 800eaa8:	2364      	movs	r3, #100	@ 0x64
 800eaaa:	2204      	movs	r2, #4
 800eaac:	f7fa fffa 	bl	8009aa4 <HAL_SPI_Transmit>
 800eab0:	2800      	cmp	r0, #0
 800eab2:	d0e2      	beq.n	800ea7a <SPIF_EraseSector+0xc2>
  HAL_GPIO_WritePin(Handle->Gpio, Handle->Pin, (GPIO_PinState)Select);
 800eab4:	8a21      	ldrh	r1, [r4, #16]
 800eab6:	6860      	ldr	r0, [r4, #4]
 800eab8:	4632      	mov	r2, r6
 800eaba:	f7f7 fcfd 	bl	80064b8 <HAL_GPIO_WritePin>
  return retVal;
 800eabe:	e78c      	b.n	800e9da <SPIF_EraseSector+0x22>

0800eac0 <SPIF_WritePage>:
  * @param  Offset: The start point for writing data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_WritePage(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800eac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eac4:	4698      	mov	r8, r3
  while (Handle->Lock)
 800eac6:	7b03      	ldrb	r3, [r0, #12]
{
 800eac8:	b082      	sub	sp, #8
 800eaca:	4605      	mov	r5, r0
 800eacc:	460e      	mov	r6, r1
 800eace:	4617      	mov	r7, r2
  while (Handle->Lock)
 800ead0:	b12b      	cbz	r3, 800eade <SPIF_WritePage+0x1e>
  osDelay(d);
 800ead2:	2001      	movs	r0, #1
 800ead4:	f7fe fbfe 	bl	800d2d4 <osDelay>
  while (Handle->Lock)
 800ead8:	7b2c      	ldrb	r4, [r5, #12]
 800eada:	2c00      	cmp	r4, #0
 800eadc:	d1f9      	bne.n	800ead2 <SPIF_WritePage+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800eade:	9b08      	ldr	r3, [sp, #32]
 800eae0:	9300      	str	r3, [sp, #0]
  Handle->Lock = 1;
 800eae2:	2401      	movs	r4, #1
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800eae4:	4643      	mov	r3, r8
 800eae6:	463a      	mov	r2, r7
 800eae8:	4631      	mov	r1, r6
 800eaea:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800eaec:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_WriteFn(Handle, PageNumber, Data, Size, Offset);
 800eaee:	f7ff fe3b 	bl	800e768 <SPIF_WriteFn>
  Handle->Lock = 0;
 800eaf2:	2300      	movs	r3, #0
 800eaf4:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800eaf6:	b002      	add	sp, #8
 800eaf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800eafc <SPIF_ReadPage>:
  * @param  Offset: The start point for Reading data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_ReadPage(SPIF_HandleTypeDef *Handle, uint32_t PageNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800eafc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eb00:	461f      	mov	r7, r3
  while (Handle->Lock)
 800eb02:	7b03      	ldrb	r3, [r0, #12]
{
 800eb04:	9e08      	ldr	r6, [sp, #32]
 800eb06:	4605      	mov	r5, r0
 800eb08:	4688      	mov	r8, r1
 800eb0a:	4691      	mov	r9, r2
  while (Handle->Lock)
 800eb0c:	b12b      	cbz	r3, 800eb1a <SPIF_ReadPage+0x1e>
  osDelay(d);
 800eb0e:	2001      	movs	r0, #1
 800eb10:	f7fe fbe0 	bl	800d2d4 <osDelay>
  while (Handle->Lock)
 800eb14:	7b2c      	ldrb	r4, [r5, #12]
 800eb16:	2c00      	cmp	r4, #0
 800eb18:	d1f9      	bne.n	800eb0e <SPIF_ReadPage+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  uint32_t address = SPIF_PageToAddress(PageNumber) + Offset;
  uint32_t maximum = SPIF_PAGE_SIZE - Offset;
 800eb1a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
  if (Size > maximum)
  {
    Size = maximum;
  }
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eb1e:	42bb      	cmp	r3, r7
  Handle->Lock = 1;
 800eb20:	f04f 0401 	mov.w	r4, #1
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eb24:	bf28      	it	cs
 800eb26:	463b      	movcs	r3, r7
 800eb28:	464a      	mov	r2, r9
 800eb2a:	eb06 2108 	add.w	r1, r6, r8, lsl #8
 800eb2e:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800eb30:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eb32:	f7ff fea7 	bl	800e884 <SPIF_ReadFn>
  Handle->Lock = 0;
 800eb36:	2300      	movs	r3, #0
 800eb38:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800eb3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800eb3e:	bf00      	nop

0800eb40 <SPIF_ReadSector>:
  * @param  Offset: The start point for Reading data. (in byte)
  *
  * @retval bool: true or false
  */
bool SPIF_ReadSector(SPIF_HandleTypeDef *Handle, uint32_t SectorNumber, uint8_t *Data, uint32_t Size, uint32_t Offset)
{
 800eb40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eb44:	461f      	mov	r7, r3
  while (Handle->Lock)
 800eb46:	7b03      	ldrb	r3, [r0, #12]
{
 800eb48:	9e08      	ldr	r6, [sp, #32]
 800eb4a:	4605      	mov	r5, r0
 800eb4c:	4688      	mov	r8, r1
 800eb4e:	4691      	mov	r9, r2
  while (Handle->Lock)
 800eb50:	b12b      	cbz	r3, 800eb5e <SPIF_ReadSector+0x1e>
  osDelay(d);
 800eb52:	2001      	movs	r0, #1
 800eb54:	f7fe fbbe 	bl	800d2d4 <osDelay>
  while (Handle->Lock)
 800eb58:	7b2c      	ldrb	r4, [r5, #12]
 800eb5a:	2c00      	cmp	r4, #0
 800eb5c:	d1f9      	bne.n	800eb52 <SPIF_ReadSector+0x12>
  SPIF_Lock(Handle);
  bool retVal = false;
  uint32_t address = SPIF_SectorToAddress(SectorNumber) + Offset;
  uint32_t maximum = SPIF_SECTOR_SIZE - Offset;
 800eb5e:	f5c6 5380 	rsb	r3, r6, #4096	@ 0x1000
  if (Size > maximum)
  {
    Size = maximum;
  }
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eb62:	42bb      	cmp	r3, r7
  Handle->Lock = 1;
 800eb64:	f04f 0401 	mov.w	r4, #1
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eb68:	bf28      	it	cs
 800eb6a:	463b      	movcs	r3, r7
 800eb6c:	464a      	mov	r2, r9
 800eb6e:	eb06 3108 	add.w	r1, r6, r8, lsl #12
 800eb72:	4628      	mov	r0, r5
  Handle->Lock = 1;
 800eb74:	732c      	strb	r4, [r5, #12]
  retVal = SPIF_ReadFn(Handle, address, Data, Size);
 800eb76:	f7ff fe85 	bl	800e884 <SPIF_ReadFn>
  Handle->Lock = 0;
 800eb7a:	2300      	movs	r3, #0
 800eb7c:	732b      	strb	r3, [r5, #12]
  SPIF_UnLock(Handle);
  return retVal;
}
 800eb7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800eb82:	bf00      	nop

0800eb84 <MX_USB_Device_Init>:
 800eb84:	b508      	push	{r3, lr}
 800eb86:	4918      	ldr	r1, [pc, #96]	@ (800ebe8 <MX_USB_Device_Init+0x64>)
 800eb88:	4818      	ldr	r0, [pc, #96]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800eb8a:	2200      	movs	r2, #0
 800eb8c:	f7fd febe 	bl	800c90c <USBD_Init>
 800eb90:	b970      	cbnz	r0, 800ebb0 <MX_USB_Device_Init+0x2c>
 800eb92:	4917      	ldr	r1, [pc, #92]	@ (800ebf0 <MX_USB_Device_Init+0x6c>)
 800eb94:	4815      	ldr	r0, [pc, #84]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800eb96:	f7fd fecd 	bl	800c934 <USBD_RegisterClass>
 800eb9a:	b988      	cbnz	r0, 800ebc0 <MX_USB_Device_Init+0x3c>
 800eb9c:	4915      	ldr	r1, [pc, #84]	@ (800ebf4 <MX_USB_Device_Init+0x70>)
 800eb9e:	4813      	ldr	r0, [pc, #76]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800eba0:	f7fd fe58 	bl	800c854 <USBD_CDC_RegisterInterface>
 800eba4:	b9a0      	cbnz	r0, 800ebd0 <MX_USB_Device_Init+0x4c>
 800eba6:	4811      	ldr	r0, [pc, #68]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800eba8:	f7fd fee0 	bl	800c96c <USBD_Start>
 800ebac:	b9b8      	cbnz	r0, 800ebde <MX_USB_Device_Init+0x5a>
 800ebae:	bd08      	pop	{r3, pc}
 800ebb0:	f7f3 fb58 	bl	8002264 <Error_Handler>
 800ebb4:	490e      	ldr	r1, [pc, #56]	@ (800ebf0 <MX_USB_Device_Init+0x6c>)
 800ebb6:	480d      	ldr	r0, [pc, #52]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800ebb8:	f7fd febc 	bl	800c934 <USBD_RegisterClass>
 800ebbc:	2800      	cmp	r0, #0
 800ebbe:	d0ed      	beq.n	800eb9c <MX_USB_Device_Init+0x18>
 800ebc0:	f7f3 fb50 	bl	8002264 <Error_Handler>
 800ebc4:	490b      	ldr	r1, [pc, #44]	@ (800ebf4 <MX_USB_Device_Init+0x70>)
 800ebc6:	4809      	ldr	r0, [pc, #36]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800ebc8:	f7fd fe44 	bl	800c854 <USBD_CDC_RegisterInterface>
 800ebcc:	2800      	cmp	r0, #0
 800ebce:	d0ea      	beq.n	800eba6 <MX_USB_Device_Init+0x22>
 800ebd0:	f7f3 fb48 	bl	8002264 <Error_Handler>
 800ebd4:	4805      	ldr	r0, [pc, #20]	@ (800ebec <MX_USB_Device_Init+0x68>)
 800ebd6:	f7fd fec9 	bl	800c96c <USBD_Start>
 800ebda:	2800      	cmp	r0, #0
 800ebdc:	d0e7      	beq.n	800ebae <MX_USB_Device_Init+0x2a>
 800ebde:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ebe2:	f7f3 bb3f 	b.w	8002264 <Error_Handler>
 800ebe6:	bf00      	nop
 800ebe8:	20000114 	.word	0x20000114
 800ebec:	20004110 	.word	0x20004110
 800ebf0:	20000084 	.word	0x20000084
 800ebf4:	200000cc 	.word	0x200000cc

0800ebf8 <CDC_DeInit_FS>:
 800ebf8:	2000      	movs	r0, #0
 800ebfa:	4770      	bx	lr

0800ebfc <CDC_Control_FS>:
 800ebfc:	2000      	movs	r0, #0
 800ebfe:	4770      	bx	lr

0800ec00 <CDC_TransmitCplt_FS>:
 800ec00:	2000      	movs	r0, #0
 800ec02:	4770      	bx	lr

0800ec04 <CDC_Receive_FS>:
 800ec04:	b570      	push	{r4, r5, r6, lr}
 800ec06:	4e0e      	ldr	r6, [pc, #56]	@ (800ec40 <CDC_Receive_FS+0x3c>)
 800ec08:	4604      	mov	r4, r0
 800ec0a:	460d      	mov	r5, r1
 800ec0c:	4630      	mov	r0, r6
 800ec0e:	4621      	mov	r1, r4
 800ec10:	f7fd fe3a 	bl	800c888 <USBD_CDC_SetRxBuffer>
 800ec14:	4630      	mov	r0, r6
 800ec16:	f7fd fe5f 	bl	800c8d8 <USBD_CDC_ReceivePacket>
 800ec1a:	4b0a      	ldr	r3, [pc, #40]	@ (800ec44 <CDC_Receive_FS+0x40>)
 800ec1c:	2240      	movs	r2, #64	@ 0x40
 800ec1e:	4618      	mov	r0, r3
 800ec20:	2100      	movs	r1, #0
 800ec22:	f001 fae8 	bl	80101f6 <memset>
 800ec26:	782d      	ldrb	r5, [r5, #0]
 800ec28:	4621      	mov	r1, r4
 800ec2a:	462a      	mov	r2, r5
 800ec2c:	f001 fb63 	bl	80102f6 <memcpy>
 800ec30:	462a      	mov	r2, r5
 800ec32:	2100      	movs	r1, #0
 800ec34:	4620      	mov	r0, r4
 800ec36:	f001 fade 	bl	80101f6 <memset>
 800ec3a:	2000      	movs	r0, #0
 800ec3c:	bd70      	pop	{r4, r5, r6, pc}
 800ec3e:	bf00      	nop
 800ec40:	20004110 	.word	0x20004110
 800ec44:	20000640 	.word	0x20000640

0800ec48 <CDC_Init_FS>:
 800ec48:	b510      	push	{r4, lr}
 800ec4a:	4c06      	ldr	r4, [pc, #24]	@ (800ec64 <CDC_Init_FS+0x1c>)
 800ec4c:	4906      	ldr	r1, [pc, #24]	@ (800ec68 <CDC_Init_FS+0x20>)
 800ec4e:	2200      	movs	r2, #0
 800ec50:	4620      	mov	r0, r4
 800ec52:	f7fd fe0b 	bl	800c86c <USBD_CDC_SetTxBuffer>
 800ec56:	4905      	ldr	r1, [pc, #20]	@ (800ec6c <CDC_Init_FS+0x24>)
 800ec58:	4620      	mov	r0, r4
 800ec5a:	f7fd fe15 	bl	800c888 <USBD_CDC_SetRxBuffer>
 800ec5e:	2000      	movs	r0, #0
 800ec60:	bd10      	pop	{r4, pc}
 800ec62:	bf00      	nop
 800ec64:	20004110 	.word	0x20004110
 800ec68:	200043ec 	.word	0x200043ec
 800ec6c:	20004bec 	.word	0x20004bec

0800ec70 <CDC_Transmit_FS>:
 800ec70:	b510      	push	{r4, lr}
 800ec72:	4c09      	ldr	r4, [pc, #36]	@ (800ec98 <CDC_Transmit_FS+0x28>)
 800ec74:	f8d4 32bc 	ldr.w	r3, [r4, #700]	@ 0x2bc
 800ec78:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 800ec7c:	b10b      	cbz	r3, 800ec82 <CDC_Transmit_FS+0x12>
 800ec7e:	2001      	movs	r0, #1
 800ec80:	bd10      	pop	{r4, pc}
 800ec82:	460a      	mov	r2, r1
 800ec84:	4601      	mov	r1, r0
 800ec86:	4620      	mov	r0, r4
 800ec88:	f7fd fdf0 	bl	800c86c <USBD_CDC_SetTxBuffer>
 800ec8c:	4620      	mov	r0, r4
 800ec8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec92:	f7fd be05 	b.w	800c8a0 <USBD_CDC_TransmitPacket>
 800ec96:	bf00      	nop
 800ec98:	20004110 	.word	0x20004110

0800ec9c <USBD_CDC_DeviceDescriptor>:
 800ec9c:	2312      	movs	r3, #18
 800ec9e:	4801      	ldr	r0, [pc, #4]	@ (800eca4 <USBD_CDC_DeviceDescriptor+0x8>)
 800eca0:	800b      	strh	r3, [r1, #0]
 800eca2:	4770      	bx	lr
 800eca4:	20000100 	.word	0x20000100

0800eca8 <USBD_CDC_LangIDStrDescriptor>:
 800eca8:	2304      	movs	r3, #4
 800ecaa:	4801      	ldr	r0, [pc, #4]	@ (800ecb0 <USBD_CDC_LangIDStrDescriptor+0x8>)
 800ecac:	800b      	strh	r3, [r1, #0]
 800ecae:	4770      	bx	lr
 800ecb0:	200000fc 	.word	0x200000fc

0800ecb4 <USBD_CDC_ManufacturerStrDescriptor>:
 800ecb4:	b510      	push	{r4, lr}
 800ecb6:	4c04      	ldr	r4, [pc, #16]	@ (800ecc8 <USBD_CDC_ManufacturerStrDescriptor+0x14>)
 800ecb8:	4804      	ldr	r0, [pc, #16]	@ (800eccc <USBD_CDC_ManufacturerStrDescriptor+0x18>)
 800ecba:	460a      	mov	r2, r1
 800ecbc:	4621      	mov	r1, r4
 800ecbe:	f7fe fa6d 	bl	800d19c <USBD_GetString>
 800ecc2:	4620      	mov	r0, r4
 800ecc4:	bd10      	pop	{r4, pc}
 800ecc6:	bf00      	nop
 800ecc8:	200053ec 	.word	0x200053ec
 800eccc:	08016020 	.word	0x08016020

0800ecd0 <USBD_CDC_ProductStrDescriptor>:
 800ecd0:	b510      	push	{r4, lr}
 800ecd2:	4c04      	ldr	r4, [pc, #16]	@ (800ece4 <USBD_CDC_ProductStrDescriptor+0x14>)
 800ecd4:	4804      	ldr	r0, [pc, #16]	@ (800ece8 <USBD_CDC_ProductStrDescriptor+0x18>)
 800ecd6:	460a      	mov	r2, r1
 800ecd8:	4621      	mov	r1, r4
 800ecda:	f7fe fa5f 	bl	800d19c <USBD_GetString>
 800ecde:	4620      	mov	r0, r4
 800ece0:	bd10      	pop	{r4, pc}
 800ece2:	bf00      	nop
 800ece4:	200053ec 	.word	0x200053ec
 800ece8:	08016034 	.word	0x08016034

0800ecec <USBD_CDC_ConfigStrDescriptor>:
 800ecec:	b510      	push	{r4, lr}
 800ecee:	4c04      	ldr	r4, [pc, #16]	@ (800ed00 <USBD_CDC_ConfigStrDescriptor+0x14>)
 800ecf0:	4804      	ldr	r0, [pc, #16]	@ (800ed04 <USBD_CDC_ConfigStrDescriptor+0x18>)
 800ecf2:	460a      	mov	r2, r1
 800ecf4:	4621      	mov	r1, r4
 800ecf6:	f7fe fa51 	bl	800d19c <USBD_GetString>
 800ecfa:	4620      	mov	r0, r4
 800ecfc:	bd10      	pop	{r4, pc}
 800ecfe:	bf00      	nop
 800ed00:	200053ec 	.word	0x200053ec
 800ed04:	0801604c 	.word	0x0801604c

0800ed08 <USBD_CDC_InterfaceStrDescriptor>:
 800ed08:	b510      	push	{r4, lr}
 800ed0a:	4c04      	ldr	r4, [pc, #16]	@ (800ed1c <USBD_CDC_InterfaceStrDescriptor+0x14>)
 800ed0c:	4804      	ldr	r0, [pc, #16]	@ (800ed20 <USBD_CDC_InterfaceStrDescriptor+0x18>)
 800ed0e:	460a      	mov	r2, r1
 800ed10:	4621      	mov	r1, r4
 800ed12:	f7fe fa43 	bl	800d19c <USBD_GetString>
 800ed16:	4620      	mov	r0, r4
 800ed18:	bd10      	pop	{r4, pc}
 800ed1a:	bf00      	nop
 800ed1c:	200053ec 	.word	0x200053ec
 800ed20:	08016058 	.word	0x08016058

0800ed24 <USBD_CDC_SerialStrDescriptor>:
 800ed24:	4a51      	ldr	r2, [pc, #324]	@ (800ee6c <USBD_CDC_SerialStrDescriptor+0x148>)
 800ed26:	f8d2 3590 	ldr.w	r3, [r2, #1424]	@ 0x590
 800ed2a:	f8d2 0598 	ldr.w	r0, [r2, #1432]	@ 0x598
 800ed2e:	f04f 0c1a 	mov.w	ip, #26
 800ed32:	181b      	adds	r3, r3, r0
 800ed34:	f8a1 c000 	strh.w	ip, [r1]
 800ed38:	d101      	bne.n	800ed3e <USBD_CDC_SerialStrDescriptor+0x1a>
 800ed3a:	484d      	ldr	r0, [pc, #308]	@ (800ee70 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800ed3c:	4770      	bx	lr
 800ed3e:	f8d2 1594 	ldr.w	r1, [r2, #1428]	@ 0x594
 800ed42:	4a4b      	ldr	r2, [pc, #300]	@ (800ee70 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800ed44:	0f18      	lsrs	r0, r3, #28
 800ed46:	f1b3 4f20 	cmp.w	r3, #2684354560	@ 0xa0000000
 800ed4a:	f04f 0c00 	mov.w	ip, #0
 800ed4e:	bf2c      	ite	cs
 800ed50:	3037      	addcs	r0, #55	@ 0x37
 800ed52:	3030      	addcc	r0, #48	@ 0x30
 800ed54:	f882 c003 	strb.w	ip, [r2, #3]
 800ed58:	f3c3 6c03 	ubfx	ip, r3, #24, #4
 800ed5c:	f1bc 0f09 	cmp.w	ip, #9
 800ed60:	7090      	strb	r0, [r2, #2]
 800ed62:	4660      	mov	r0, ip
 800ed64:	f04f 0c00 	mov.w	ip, #0
 800ed68:	bf8c      	ite	hi
 800ed6a:	3037      	addhi	r0, #55	@ 0x37
 800ed6c:	3030      	addls	r0, #48	@ 0x30
 800ed6e:	f882 c005 	strb.w	ip, [r2, #5]
 800ed72:	f3c3 5c03 	ubfx	ip, r3, #20, #4
 800ed76:	f1bc 0f09 	cmp.w	ip, #9
 800ed7a:	7110      	strb	r0, [r2, #4]
 800ed7c:	4660      	mov	r0, ip
 800ed7e:	f04f 0c00 	mov.w	ip, #0
 800ed82:	bf8c      	ite	hi
 800ed84:	3037      	addhi	r0, #55	@ 0x37
 800ed86:	3030      	addls	r0, #48	@ 0x30
 800ed88:	f882 c007 	strb.w	ip, [r2, #7]
 800ed8c:	f3c3 4c03 	ubfx	ip, r3, #16, #4
 800ed90:	f1bc 0f09 	cmp.w	ip, #9
 800ed94:	7190      	strb	r0, [r2, #6]
 800ed96:	4660      	mov	r0, ip
 800ed98:	f04f 0c00 	mov.w	ip, #0
 800ed9c:	bf8c      	ite	hi
 800ed9e:	3037      	addhi	r0, #55	@ 0x37
 800eda0:	3030      	addls	r0, #48	@ 0x30
 800eda2:	f882 c009 	strb.w	ip, [r2, #9]
 800eda6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 800edaa:	f1bc 0f09 	cmp.w	ip, #9
 800edae:	7210      	strb	r0, [r2, #8]
 800edb0:	4660      	mov	r0, ip
 800edb2:	f04f 0c00 	mov.w	ip, #0
 800edb6:	bf8c      	ite	hi
 800edb8:	3037      	addhi	r0, #55	@ 0x37
 800edba:	3030      	addls	r0, #48	@ 0x30
 800edbc:	f882 c00b 	strb.w	ip, [r2, #11]
 800edc0:	f3c3 2c03 	ubfx	ip, r3, #8, #4
 800edc4:	f1bc 0f09 	cmp.w	ip, #9
 800edc8:	7290      	strb	r0, [r2, #10]
 800edca:	4660      	mov	r0, ip
 800edcc:	f04f 0c00 	mov.w	ip, #0
 800edd0:	bf8c      	ite	hi
 800edd2:	3037      	addhi	r0, #55	@ 0x37
 800edd4:	3030      	addls	r0, #48	@ 0x30
 800edd6:	f882 c00d 	strb.w	ip, [r2, #13]
 800edda:	f3c3 1c03 	ubfx	ip, r3, #4, #4
 800edde:	f1bc 0f09 	cmp.w	ip, #9
 800ede2:	7310      	strb	r0, [r2, #12]
 800ede4:	4660      	mov	r0, ip
 800ede6:	bf8c      	ite	hi
 800ede8:	3037      	addhi	r0, #55	@ 0x37
 800edea:	3030      	addls	r0, #48	@ 0x30
 800edec:	7390      	strb	r0, [r2, #14]
 800edee:	f003 000f 	and.w	r0, r3, #15
 800edf2:	4603      	mov	r3, r0
 800edf4:	2809      	cmp	r0, #9
 800edf6:	bf94      	ite	ls
 800edf8:	3330      	addls	r3, #48	@ 0x30
 800edfa:	3337      	addhi	r3, #55	@ 0x37
 800edfc:	2000      	movs	r0, #0
 800edfe:	f1b1 4f20 	cmp.w	r1, #2684354560	@ 0xa0000000
 800ee02:	7413      	strb	r3, [r2, #16]
 800ee04:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800ee08:	bf2c      	ite	cs
 800ee0a:	3337      	addcs	r3, #55	@ 0x37
 800ee0c:	3330      	addcc	r3, #48	@ 0x30
 800ee0e:	7450      	strb	r0, [r2, #17]
 800ee10:	f3c1 6003 	ubfx	r0, r1, #24, #4
 800ee14:	2809      	cmp	r0, #9
 800ee16:	7493      	strb	r3, [r2, #18]
 800ee18:	4603      	mov	r3, r0
 800ee1a:	bf8c      	ite	hi
 800ee1c:	3337      	addhi	r3, #55	@ 0x37
 800ee1e:	3330      	addls	r3, #48	@ 0x30
 800ee20:	f3c1 5003 	ubfx	r0, r1, #20, #4
 800ee24:	2809      	cmp	r0, #9
 800ee26:	f04f 0c00 	mov.w	ip, #0
 800ee2a:	7513      	strb	r3, [r2, #20]
 800ee2c:	4603      	mov	r3, r0
 800ee2e:	bf8c      	ite	hi
 800ee30:	3337      	addhi	r3, #55	@ 0x37
 800ee32:	3330      	addls	r3, #48	@ 0x30
 800ee34:	f3c1 4003 	ubfx	r0, r1, #16, #4
 800ee38:	f882 c00f 	strb.w	ip, [r2, #15]
 800ee3c:	f04f 0c00 	mov.w	ip, #0
 800ee40:	2809      	cmp	r0, #9
 800ee42:	f882 c013 	strb.w	ip, [r2, #19]
 800ee46:	7593      	strb	r3, [r2, #22]
 800ee48:	f04f 0c00 	mov.w	ip, #0
 800ee4c:	4603      	mov	r3, r0
 800ee4e:	f882 c015 	strb.w	ip, [r2, #21]
 800ee52:	bf98      	it	ls
 800ee54:	3330      	addls	r3, #48	@ 0x30
 800ee56:	f04f 0c00 	mov.w	ip, #0
 800ee5a:	bf88      	it	hi
 800ee5c:	3337      	addhi	r3, #55	@ 0x37
 800ee5e:	2100      	movs	r1, #0
 800ee60:	4803      	ldr	r0, [pc, #12]	@ (800ee70 <USBD_CDC_SerialStrDescriptor+0x14c>)
 800ee62:	f882 c017 	strb.w	ip, [r2, #23]
 800ee66:	7613      	strb	r3, [r2, #24]
 800ee68:	7651      	strb	r1, [r2, #25]
 800ee6a:	4770      	bx	lr
 800ee6c:	1fff7000 	.word	0x1fff7000
 800ee70:	200000e0 	.word	0x200000e0

0800ee74 <HAL_PCD_MspInit>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
#else
void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800ee74:	b530      	push	{r4, r5, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(pcdHandle->Instance==USB)
 800ee76:	4b1b      	ldr	r3, [pc, #108]	@ (800eee4 <HAL_PCD_MspInit+0x70>)
 800ee78:	6802      	ldr	r2, [r0, #0]
{
 800ee7a:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800ee7c:	2400      	movs	r4, #0
  if(pcdHandle->Instance==USB)
 800ee7e:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800ee80:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800ee84:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800ee88:	9406      	str	r4, [sp, #24]
  if(pcdHandle->Instance==USB)
 800ee8a:	d001      	beq.n	800ee90 <HAL_PCD_MspInit+0x1c>
    HAL_NVIC_EnableIRQ(USB_LP_IRQn);
  /* USER CODE BEGIN USB_MspInit 1 */

  /* USER CODE END USB_MspInit 1 */
  }
}
 800ee8c:	b009      	add	sp, #36	@ 0x24
 800ee8e:	bd30      	pop	{r4, r5, pc}
  SET_BIT(RCC->AHB2ENR, Periphs);
 800ee90:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 800ee94:	f44f 52c0 	mov.w	r2, #6144	@ 0x1800
 800ee98:	6ceb      	ldr	r3, [r5, #76]	@ 0x4c
 800ee9a:	f043 0301 	orr.w	r3, r3, #1
 800ee9e:	64eb      	str	r3, [r5, #76]	@ 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800eea0:	6ceb      	ldr	r3, [r5, #76]	@ 0x4c
 800eea2:	f003 0301 	and.w	r3, r3, #1
 800eea6:	9301      	str	r3, [sp, #4]
 800eea8:	2302      	movs	r3, #2
 800eeaa:	e9cd 2302 	strd	r2, r3, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800eeae:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF10_USB;
 800eeb0:	230a      	movs	r3, #10
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800eeb2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
  (void)tmpreg;
 800eeb6:	9a01      	ldr	r2, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF10_USB;
 800eeb8:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800eeba:	f7f7 f95b 	bl	8006174 <HAL_GPIO_Init>
  SET_BIT(RCC->APB1ENR1, Periphs);
 800eebe:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 800eec0:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800eec4:	65ab      	str	r3, [r5, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800eec6:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 800eec8:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
    HAL_NVIC_SetPriority(USB_LP_IRQn, 5, 0);
 800eecc:	2105      	movs	r1, #5
 800eece:	4622      	mov	r2, r4
 800eed0:	9300      	str	r3, [sp, #0]
 800eed2:	2014      	movs	r0, #20
  (void)tmpreg;
 800eed4:	9b00      	ldr	r3, [sp, #0]
 800eed6:	f7f6 ff5b 	bl	8005d90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_IRQn);
 800eeda:	2014      	movs	r0, #20
 800eedc:	f7f6 ff94 	bl	8005e08 <HAL_NVIC_EnableIRQ>
}
 800eee0:	b009      	add	sp, #36	@ 0x24
 800eee2:	bd30      	pop	{r4, r5, pc}
 800eee4:	40006800 	.word	0x40006800

0800eee8 <HAL_PCD_SetupStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_SetupStageCallback_PreTreatment */

  /* USER CODE END  HAL_PCD_SetupStageCallback_PreTreatment */
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800eee8:	f500 7126 	add.w	r1, r0, #664	@ 0x298
 800eeec:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800eef0:	f7fd bd50 	b.w	800c994 <USBD_LL_SetupStage>

0800eef4 <HAL_PCD_DataOutStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_DataOutStageCallback_PreTreatment */

  /* USER CODE END HAL_PCD_DataOutStageCallback_PreTreatment */
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 800eef4:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800eef8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800eefc:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800ef00:	f8d3 2164 	ldr.w	r2, [r3, #356]	@ 0x164
 800ef04:	f7fd bd76 	b.w	800c9f4 <USBD_LL_DataOutStage>

0800ef08 <HAL_PCD_DataInStageCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_DataInStageCallback_PreTreatment */

  /* USER CODE END HAL_PCD_DataInStageCallback_PreTreatment */
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800ef08:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800ef0c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ef10:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800ef14:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800ef16:	f7fd bda7 	b.w	800ca68 <USBD_LL_DataInStage>
 800ef1a:	bf00      	nop

0800ef1c <HAL_PCD_SOFCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN HAL_PCD_SOFCallback_PreTreatment */

  /* USER CODE END HAL_PCD_SOFCallback_PreTreatment */
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800ef1c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800ef20:	f7fd be48 	b.w	800cbb4 <USBD_LL_SOF>

0800ef24 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800ef24:	b510      	push	{r4, lr}
  /* USER CODE BEGIN HAL_PCD_ResetCallback_PreTreatment */

  /* USER CODE END HAL_PCD_ResetCallback_PreTreatment */
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800ef26:	7943      	ldrb	r3, [r0, #5]
 800ef28:	2b02      	cmp	r3, #2
{
 800ef2a:	4604      	mov	r4, r0
  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 800ef2c:	d001      	beq.n	800ef32 <HAL_PCD_ResetCallback+0xe>
  {
    Error_Handler();
 800ef2e:	f7f3 f999 	bl	8002264 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800ef32:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
 800ef36:	2101      	movs	r1, #1
 800ef38:	f7fd fe1e 	bl	800cb78 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800ef3c:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
  /* USER CODE BEGIN HAL_PCD_ResetCallback_PostTreatment */

  /* USER CODE END HAL_PCD_ResetCallback_PostTreatment */
}
 800ef40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800ef44:	f7fd bdea 	b.w	800cb1c <USBD_LL_Reset>

0800ef48 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800ef48:	b510      	push	{r4, lr}
 800ef4a:	4604      	mov	r4, r0
  /* USER CODE BEGIN HAL_PCD_SuspendCallback_PreTreatment */

  /* USER CODE END HAL_PCD_SuspendCallback_PreTreatment */
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800ef4c:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800ef50:	f7fd fe16 	bl	800cb80 <USBD_LL_Suspend>
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 800ef54:	7a63      	ldrb	r3, [r4, #9]
 800ef56:	b123      	cbz	r3, 800ef62 <HAL_PCD_SuspendCallback+0x1a>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800ef58:	4a02      	ldr	r2, [pc, #8]	@ (800ef64 <HAL_PCD_SuspendCallback+0x1c>)
 800ef5a:	6913      	ldr	r3, [r2, #16]
 800ef5c:	f043 0306 	orr.w	r3, r3, #6
 800ef60:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
  /* USER CODE BEGIN HAL_PCD_SuspendCallback_PostTreatment */

  /* USER CODE END HAL_PCD_SuspendCallback_PostTreatment */
}
 800ef62:	bd10      	pop	{r4, pc}
 800ef64:	e000ed00 	.word	0xe000ed00

0800ef68 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800ef68:	b510      	push	{r4, lr}
  /* USER CODE BEGIN HAL_PCD_ResumeCallback_PreTreatment */

  /* USER CODE END HAL_PCD_ResumeCallback_PreTreatment */

  /* USER CODE BEGIN 3 */
  if (hpcd->Init.low_power_enable)
 800ef6a:	7a43      	ldrb	r3, [r0, #9]
{
 800ef6c:	4604      	mov	r4, r0
  if (hpcd->Init.low_power_enable)
 800ef6e:	b92b      	cbnz	r3, 800ef7c <HAL_PCD_ResumeCallback+0x14>
    SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
    SystemClockConfig_Resume();
  }
  /* USER CODE END 3 */

  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800ef70:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
  /* USER CODE BEGIN HAL_PCD_ResumeCallback_PostTreatment */

  /* USER CODE END HAL_PCD_ResumeCallback_PostTreatment */
}
 800ef74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800ef78:	f7fd be10 	b.w	800cb9c <USBD_LL_Resume>
    SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800ef7c:	4a06      	ldr	r2, [pc, #24]	@ (800ef98 <HAL_PCD_ResumeCallback+0x30>)
 800ef7e:	6913      	ldr	r3, [r2, #16]
 800ef80:	f023 0306 	bic.w	r3, r3, #6
 800ef84:	6113      	str	r3, [r2, #16]
  *         enable HSI, PLL and select PLL as system clock source.
  * @retval None
  */
static void SystemClockConfig_Resume(void)
{
  SystemClock_Config();
 800ef86:	f7f2 ffd3 	bl	8001f30 <SystemClock_Config>
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800ef8a:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
}
 800ef8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 800ef92:	f7fd be03 	b.w	800cb9c <USBD_LL_Resume>
 800ef96:	bf00      	nop
 800ef98:	e000ed00 	.word	0xe000ed00

0800ef9c <USBD_LL_Init>:
{
 800ef9c:	b538      	push	{r3, r4, r5, lr}
  hpcd_USB_FS.pData = pdev;
 800ef9e:	4d20      	ldr	r5, [pc, #128]	@ (800f020 <USBD_LL_Init+0x84>)
 800efa0:	f8c5 02d8 	str.w	r0, [r5, #728]	@ 0x2d8
  pdev->pData = &hpcd_USB_FS;
 800efa4:	f8c0 52c8 	str.w	r5, [r0, #712]	@ 0x2c8
{
 800efa8:	4604      	mov	r4, r0
  HAL_PWREx_EnableVddUSB();
 800efaa:	f7f9 f8d7 	bl	800815c <HAL_PWREx_EnableVddUSB>
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800efae:	f44f 7302 	mov.w	r3, #520	@ 0x208
  hpcd_USB_FS.Instance = USB;
 800efb2:	491c      	ldr	r1, [pc, #112]	@ (800f024 <USBD_LL_Init+0x88>)
  hpcd_USB_FS.Init.dev_endpoints = 8;
 800efb4:	80ab      	strh	r3, [r5, #4]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800efb6:	2202      	movs	r2, #2
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800efb8:	2300      	movs	r3, #0
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800efba:	4628      	mov	r0, r5
  hpcd_USB_FS.Instance = USB;
 800efbc:	6029      	str	r1, [r5, #0]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800efbe:	f8c5 2007 	str.w	r2, [r5, #7]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800efc2:	72eb      	strb	r3, [r5, #11]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 800efc4:	f7f8 f8a6 	bl	8007114 <HAL_PCD_Init>
 800efc8:	bb30      	cbnz	r0, 800f018 <USBD_LL_Init+0x7c>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 800efca:	2200      	movs	r2, #0
 800efcc:	4611      	mov	r1, r2
 800efce:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800efd2:	2318      	movs	r3, #24
 800efd4:	f7f9 f87a 	bl	80080cc <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 800efd8:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800efdc:	2358      	movs	r3, #88	@ 0x58
 800efde:	2200      	movs	r2, #0
 800efe0:	2180      	movs	r1, #128	@ 0x80
 800efe2:	f7f9 f873 	bl	80080cc <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);
 800efe6:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800efea:	23c0      	movs	r3, #192	@ 0xc0
 800efec:	2200      	movs	r2, #0
 800efee:	2181      	movs	r1, #129	@ 0x81
 800eff0:	f7f9 f86c 	bl	80080cc <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 800eff4:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800eff8:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800effc:	2200      	movs	r2, #0
 800effe:	2101      	movs	r1, #1
 800f000:	f7f9 f864 	bl	80080cc <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);
 800f004:	f8d4 02c8 	ldr.w	r0, [r4, #712]	@ 0x2c8
 800f008:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800f00c:	2200      	movs	r2, #0
 800f00e:	2182      	movs	r1, #130	@ 0x82
 800f010:	f7f9 f85c 	bl	80080cc <HAL_PCDEx_PMAConfig>
}
 800f014:	2000      	movs	r0, #0
 800f016:	bd38      	pop	{r3, r4, r5, pc}
    Error_Handler( );
 800f018:	f7f3 f924 	bl	8002264 <Error_Handler>
 800f01c:	e7d5      	b.n	800efca <USBD_LL_Init+0x2e>
 800f01e:	bf00      	nop
 800f020:	2000580c 	.word	0x2000580c
 800f024:	40006800 	.word	0x40006800

0800f028 <USBD_LL_Start>:
{
 800f028:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 800f02a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f02e:	f7f8 f95b 	bl	80072e8 <HAL_PCD_Start>
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 800f032:	b118      	cbz	r0, 800f03c <USBD_LL_Start+0x14>
 800f034:	2802      	cmp	r0, #2
 800f036:	bf0c      	ite	eq
 800f038:	2001      	moveq	r0, #1
 800f03a:	2003      	movne	r0, #3
}
 800f03c:	bd08      	pop	{r3, pc}
 800f03e:	bf00      	nop

0800f040 <USBD_LL_OpenEP>:
{
 800f040:	4694      	mov	ip, r2
 800f042:	b508      	push	{r3, lr}
 800f044:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 800f046:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f04a:	4663      	mov	r3, ip
 800f04c:	f7f8 ff14 	bl	8007e78 <HAL_PCD_EP_Open>
  switch (hal_status)
 800f050:	b118      	cbz	r0, 800f05a <USBD_LL_OpenEP+0x1a>
 800f052:	2802      	cmp	r0, #2
 800f054:	bf0c      	ite	eq
 800f056:	2001      	moveq	r0, #1
 800f058:	2003      	movne	r0, #3
}
 800f05a:	bd08      	pop	{r3, pc}

0800f05c <USBD_LL_CloseEP>:
{
 800f05c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 800f05e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f062:	f7f8 ff45 	bl	8007ef0 <HAL_PCD_EP_Close>
  switch (hal_status)
 800f066:	b118      	cbz	r0, 800f070 <USBD_LL_CloseEP+0x14>
 800f068:	2802      	cmp	r0, #2
 800f06a:	bf0c      	ite	eq
 800f06c:	2001      	moveq	r0, #1
 800f06e:	2003      	movne	r0, #3
}
 800f070:	bd08      	pop	{r3, pc}
 800f072:	bf00      	nop

0800f074 <USBD_LL_StallEP>:
{
 800f074:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 800f076:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f07a:	f7f8 ffaf 	bl	8007fdc <HAL_PCD_EP_SetStall>
  switch (hal_status)
 800f07e:	b118      	cbz	r0, 800f088 <USBD_LL_StallEP+0x14>
 800f080:	2802      	cmp	r0, #2
 800f082:	bf0c      	ite	eq
 800f084:	2001      	moveq	r0, #1
 800f086:	2003      	movne	r0, #3
}
 800f088:	bd08      	pop	{r3, pc}
 800f08a:	bf00      	nop

0800f08c <USBD_LL_ClearStallEP>:
{
 800f08c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 800f08e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f092:	f7f8 ffdf 	bl	8008054 <HAL_PCD_EP_ClrStall>
  switch (hal_status)
 800f096:	b118      	cbz	r0, 800f0a0 <USBD_LL_ClearStallEP+0x14>
 800f098:	2802      	cmp	r0, #2
 800f09a:	bf0c      	ite	eq
 800f09c:	2001      	moveq	r0, #1
 800f09e:	2003      	movne	r0, #3
}
 800f0a0:	bd08      	pop	{r3, pc}
 800f0a2:	bf00      	nop

0800f0a4 <USBD_LL_IsStallEP>:
  if((ep_addr & 0x80) == 0x80)
 800f0a4:	060a      	lsls	r2, r1, #24
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800f0a6:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 800f0aa:	d406      	bmi.n	800f0ba <USBD_LL_IsStallEP+0x16>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800f0ac:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800f0b0:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f0b4:	f893 0152 	ldrb.w	r0, [r3, #338]	@ 0x152
}
 800f0b8:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800f0ba:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800f0be:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800f0c2:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f0c6:	7c98      	ldrb	r0, [r3, #18]
 800f0c8:	4770      	bx	lr
 800f0ca:	bf00      	nop

0800f0cc <USBD_LL_SetUSBAddress>:
{
 800f0cc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800f0ce:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f0d2:	f7f8 febd 	bl	8007e50 <HAL_PCD_SetAddress>
  switch (hal_status)
 800f0d6:	b118      	cbz	r0, 800f0e0 <USBD_LL_SetUSBAddress+0x14>
 800f0d8:	2802      	cmp	r0, #2
 800f0da:	bf0c      	ite	eq
 800f0dc:	2001      	moveq	r0, #1
 800f0de:	2003      	movne	r0, #3
}
 800f0e0:	bd08      	pop	{r3, pc}
 800f0e2:	bf00      	nop

0800f0e4 <USBD_LL_Transmit>:
{
 800f0e4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 800f0e6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f0ea:	f7f8 ff59 	bl	8007fa0 <HAL_PCD_EP_Transmit>
  switch (hal_status)
 800f0ee:	b118      	cbz	r0, 800f0f8 <USBD_LL_Transmit+0x14>
 800f0f0:	2802      	cmp	r0, #2
 800f0f2:	bf0c      	ite	eq
 800f0f4:	2001      	moveq	r0, #1
 800f0f6:	2003      	movne	r0, #3
}
 800f0f8:	bd08      	pop	{r3, pc}
 800f0fa:	bf00      	nop

0800f0fc <USBD_LL_PrepareReceive>:
{
 800f0fc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 800f0fe:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f102:	f7f8 ff29 	bl	8007f58 <HAL_PCD_EP_Receive>
  switch (hal_status)
 800f106:	b118      	cbz	r0, 800f110 <USBD_LL_PrepareReceive+0x14>
 800f108:	2802      	cmp	r0, #2
 800f10a:	bf0c      	ite	eq
 800f10c:	2001      	moveq	r0, #1
 800f10e:	2003      	movne	r0, #3
}
 800f110:	bd08      	pop	{r3, pc}
 800f112:	bf00      	nop

0800f114 <USBD_LL_GetRxDataSize>:
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 800f114:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 800f118:	f7f8 bf38 	b.w	8007f8c <HAL_PCD_EP_GetRxCount>

0800f11c <HAL_PCDEx_LPM_Callback>:
{
 800f11c:	b510      	push	{r4, lr}
 800f11e:	4604      	mov	r4, r0
  switch (msg)
 800f120:	b179      	cbz	r1, 800f142 <HAL_PCDEx_LPM_Callback+0x26>
 800f122:	2901      	cmp	r1, #1
 800f124:	d000      	beq.n	800f128 <HAL_PCDEx_LPM_Callback+0xc>
}
 800f126:	bd10      	pop	{r4, pc}
    USBD_LL_Suspend(hpcd->pData);
 800f128:	f8d0 02d8 	ldr.w	r0, [r0, #728]	@ 0x2d8
 800f12c:	f7fd fd28 	bl	800cb80 <USBD_LL_Suspend>
    if (hpcd->Init.low_power_enable)
 800f130:	7a63      	ldrb	r3, [r4, #9]
 800f132:	2b00      	cmp	r3, #0
 800f134:	d0f7      	beq.n	800f126 <HAL_PCDEx_LPM_Callback+0xa>
      SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f136:	4a0d      	ldr	r2, [pc, #52]	@ (800f16c <HAL_PCDEx_LPM_Callback+0x50>)
 800f138:	6913      	ldr	r3, [r2, #16]
 800f13a:	f043 0306 	orr.w	r3, r3, #6
 800f13e:	6113      	str	r3, [r2, #16]
}
 800f140:	bd10      	pop	{r4, pc}
    if (hpcd->Init.low_power_enable)
 800f142:	7a43      	ldrb	r3, [r0, #9]
 800f144:	b92b      	cbnz	r3, 800f152 <HAL_PCDEx_LPM_Callback+0x36>
    USBD_LL_Resume(hpcd->pData);
 800f146:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
}
 800f14a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    USBD_LL_Resume(hpcd->pData);
 800f14e:	f7fd bd25 	b.w	800cb9c <USBD_LL_Resume>
  SystemClock_Config();
 800f152:	f7f2 feed 	bl	8001f30 <SystemClock_Config>
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f156:	4a05      	ldr	r2, [pc, #20]	@ (800f16c <HAL_PCDEx_LPM_Callback+0x50>)
    USBD_LL_Resume(hpcd->pData);
 800f158:	f8d4 02d8 	ldr.w	r0, [r4, #728]	@ 0x2d8
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f15c:	6913      	ldr	r3, [r2, #16]
 800f15e:	f023 0306 	bic.w	r3, r3, #6
}
 800f162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 800f166:	6113      	str	r3, [r2, #16]
    USBD_LL_Resume(hpcd->pData);
 800f168:	f7fd bd18 	b.w	800cb9c <USBD_LL_Resume>
 800f16c:	e000ed00 	.word	0xe000ed00

0800f170 <USBD_static_malloc>:
}
 800f170:	4800      	ldr	r0, [pc, #0]	@ (800f174 <USBD_static_malloc+0x4>)
 800f172:	4770      	bx	lr
 800f174:	200055ec 	.word	0x200055ec

0800f178 <USBD_static_free>:
}
 800f178:	4770      	bx	lr
 800f17a:	bf00      	nop

0800f17c <_strtol_l.isra.0>:
 800f17c:	2b24      	cmp	r3, #36	@ 0x24
 800f17e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f182:	4686      	mov	lr, r0
 800f184:	4690      	mov	r8, r2
 800f186:	d801      	bhi.n	800f18c <_strtol_l.isra.0+0x10>
 800f188:	2b01      	cmp	r3, #1
 800f18a:	d106      	bne.n	800f19a <_strtol_l.isra.0+0x1e>
 800f18c:	f001 f886 	bl	801029c <__errno>
 800f190:	2316      	movs	r3, #22
 800f192:	6003      	str	r3, [r0, #0]
 800f194:	2000      	movs	r0, #0
 800f196:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f19a:	4834      	ldr	r0, [pc, #208]	@ (800f26c <_strtol_l.isra.0+0xf0>)
 800f19c:	460d      	mov	r5, r1
 800f19e:	462a      	mov	r2, r5
 800f1a0:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f1a4:	5d06      	ldrb	r6, [r0, r4]
 800f1a6:	f016 0608 	ands.w	r6, r6, #8
 800f1aa:	d1f8      	bne.n	800f19e <_strtol_l.isra.0+0x22>
 800f1ac:	2c2d      	cmp	r4, #45	@ 0x2d
 800f1ae:	d110      	bne.n	800f1d2 <_strtol_l.isra.0+0x56>
 800f1b0:	782c      	ldrb	r4, [r5, #0]
 800f1b2:	2601      	movs	r6, #1
 800f1b4:	1c95      	adds	r5, r2, #2
 800f1b6:	f033 0210 	bics.w	r2, r3, #16
 800f1ba:	d115      	bne.n	800f1e8 <_strtol_l.isra.0+0x6c>
 800f1bc:	2c30      	cmp	r4, #48	@ 0x30
 800f1be:	d10d      	bne.n	800f1dc <_strtol_l.isra.0+0x60>
 800f1c0:	782a      	ldrb	r2, [r5, #0]
 800f1c2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800f1c6:	2a58      	cmp	r2, #88	@ 0x58
 800f1c8:	d108      	bne.n	800f1dc <_strtol_l.isra.0+0x60>
 800f1ca:	786c      	ldrb	r4, [r5, #1]
 800f1cc:	3502      	adds	r5, #2
 800f1ce:	2310      	movs	r3, #16
 800f1d0:	e00a      	b.n	800f1e8 <_strtol_l.isra.0+0x6c>
 800f1d2:	2c2b      	cmp	r4, #43	@ 0x2b
 800f1d4:	bf04      	itt	eq
 800f1d6:	782c      	ldrbeq	r4, [r5, #0]
 800f1d8:	1c95      	addeq	r5, r2, #2
 800f1da:	e7ec      	b.n	800f1b6 <_strtol_l.isra.0+0x3a>
 800f1dc:	2b00      	cmp	r3, #0
 800f1de:	d1f6      	bne.n	800f1ce <_strtol_l.isra.0+0x52>
 800f1e0:	2c30      	cmp	r4, #48	@ 0x30
 800f1e2:	bf14      	ite	ne
 800f1e4:	230a      	movne	r3, #10
 800f1e6:	2308      	moveq	r3, #8
 800f1e8:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800f1ec:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f1f0:	2200      	movs	r2, #0
 800f1f2:	fbbc f9f3 	udiv	r9, ip, r3
 800f1f6:	4610      	mov	r0, r2
 800f1f8:	fb03 ca19 	mls	sl, r3, r9, ip
 800f1fc:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800f200:	2f09      	cmp	r7, #9
 800f202:	d80f      	bhi.n	800f224 <_strtol_l.isra.0+0xa8>
 800f204:	463c      	mov	r4, r7
 800f206:	42a3      	cmp	r3, r4
 800f208:	dd1b      	ble.n	800f242 <_strtol_l.isra.0+0xc6>
 800f20a:	1c57      	adds	r7, r2, #1
 800f20c:	d007      	beq.n	800f21e <_strtol_l.isra.0+0xa2>
 800f20e:	4581      	cmp	r9, r0
 800f210:	d314      	bcc.n	800f23c <_strtol_l.isra.0+0xc0>
 800f212:	d101      	bne.n	800f218 <_strtol_l.isra.0+0x9c>
 800f214:	45a2      	cmp	sl, r4
 800f216:	db11      	blt.n	800f23c <_strtol_l.isra.0+0xc0>
 800f218:	fb00 4003 	mla	r0, r0, r3, r4
 800f21c:	2201      	movs	r2, #1
 800f21e:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f222:	e7eb      	b.n	800f1fc <_strtol_l.isra.0+0x80>
 800f224:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800f228:	2f19      	cmp	r7, #25
 800f22a:	d801      	bhi.n	800f230 <_strtol_l.isra.0+0xb4>
 800f22c:	3c37      	subs	r4, #55	@ 0x37
 800f22e:	e7ea      	b.n	800f206 <_strtol_l.isra.0+0x8a>
 800f230:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800f234:	2f19      	cmp	r7, #25
 800f236:	d804      	bhi.n	800f242 <_strtol_l.isra.0+0xc6>
 800f238:	3c57      	subs	r4, #87	@ 0x57
 800f23a:	e7e4      	b.n	800f206 <_strtol_l.isra.0+0x8a>
 800f23c:	f04f 32ff 	mov.w	r2, #4294967295
 800f240:	e7ed      	b.n	800f21e <_strtol_l.isra.0+0xa2>
 800f242:	1c53      	adds	r3, r2, #1
 800f244:	d108      	bne.n	800f258 <_strtol_l.isra.0+0xdc>
 800f246:	2322      	movs	r3, #34	@ 0x22
 800f248:	f8ce 3000 	str.w	r3, [lr]
 800f24c:	4660      	mov	r0, ip
 800f24e:	f1b8 0f00 	cmp.w	r8, #0
 800f252:	d0a0      	beq.n	800f196 <_strtol_l.isra.0+0x1a>
 800f254:	1e69      	subs	r1, r5, #1
 800f256:	e006      	b.n	800f266 <_strtol_l.isra.0+0xea>
 800f258:	b106      	cbz	r6, 800f25c <_strtol_l.isra.0+0xe0>
 800f25a:	4240      	negs	r0, r0
 800f25c:	f1b8 0f00 	cmp.w	r8, #0
 800f260:	d099      	beq.n	800f196 <_strtol_l.isra.0+0x1a>
 800f262:	2a00      	cmp	r2, #0
 800f264:	d1f6      	bne.n	800f254 <_strtol_l.isra.0+0xd8>
 800f266:	f8c8 1000 	str.w	r1, [r8]
 800f26a:	e794      	b.n	800f196 <_strtol_l.isra.0+0x1a>
 800f26c:	080194e5 	.word	0x080194e5

0800f270 <_strtol_r>:
 800f270:	f7ff bf84 	b.w	800f17c <_strtol_l.isra.0>

0800f274 <__cvt>:
 800f274:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f278:	ec57 6b10 	vmov	r6, r7, d0
 800f27c:	2f00      	cmp	r7, #0
 800f27e:	460c      	mov	r4, r1
 800f280:	4619      	mov	r1, r3
 800f282:	463b      	mov	r3, r7
 800f284:	bfbb      	ittet	lt
 800f286:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800f28a:	461f      	movlt	r7, r3
 800f28c:	2300      	movge	r3, #0
 800f28e:	232d      	movlt	r3, #45	@ 0x2d
 800f290:	700b      	strb	r3, [r1, #0]
 800f292:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f294:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800f298:	4691      	mov	r9, r2
 800f29a:	f023 0820 	bic.w	r8, r3, #32
 800f29e:	bfbc      	itt	lt
 800f2a0:	4632      	movlt	r2, r6
 800f2a2:	4616      	movlt	r6, r2
 800f2a4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800f2a8:	d005      	beq.n	800f2b6 <__cvt+0x42>
 800f2aa:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800f2ae:	d100      	bne.n	800f2b2 <__cvt+0x3e>
 800f2b0:	3401      	adds	r4, #1
 800f2b2:	2102      	movs	r1, #2
 800f2b4:	e000      	b.n	800f2b8 <__cvt+0x44>
 800f2b6:	2103      	movs	r1, #3
 800f2b8:	ab03      	add	r3, sp, #12
 800f2ba:	9301      	str	r3, [sp, #4]
 800f2bc:	ab02      	add	r3, sp, #8
 800f2be:	9300      	str	r3, [sp, #0]
 800f2c0:	ec47 6b10 	vmov	d0, r6, r7
 800f2c4:	4653      	mov	r3, sl
 800f2c6:	4622      	mov	r2, r4
 800f2c8:	f001 f8b2 	bl	8010430 <_dtoa_r>
 800f2cc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800f2d0:	4605      	mov	r5, r0
 800f2d2:	d119      	bne.n	800f308 <__cvt+0x94>
 800f2d4:	f019 0f01 	tst.w	r9, #1
 800f2d8:	d00e      	beq.n	800f2f8 <__cvt+0x84>
 800f2da:	eb00 0904 	add.w	r9, r0, r4
 800f2de:	2200      	movs	r2, #0
 800f2e0:	2300      	movs	r3, #0
 800f2e2:	4630      	mov	r0, r6
 800f2e4:	4639      	mov	r1, r7
 800f2e6:	f7f1 fbc7 	bl	8000a78 <__aeabi_dcmpeq>
 800f2ea:	b108      	cbz	r0, 800f2f0 <__cvt+0x7c>
 800f2ec:	f8cd 900c 	str.w	r9, [sp, #12]
 800f2f0:	2230      	movs	r2, #48	@ 0x30
 800f2f2:	9b03      	ldr	r3, [sp, #12]
 800f2f4:	454b      	cmp	r3, r9
 800f2f6:	d31e      	bcc.n	800f336 <__cvt+0xc2>
 800f2f8:	9b03      	ldr	r3, [sp, #12]
 800f2fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800f2fc:	1b5b      	subs	r3, r3, r5
 800f2fe:	4628      	mov	r0, r5
 800f300:	6013      	str	r3, [r2, #0]
 800f302:	b004      	add	sp, #16
 800f304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f308:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800f30c:	eb00 0904 	add.w	r9, r0, r4
 800f310:	d1e5      	bne.n	800f2de <__cvt+0x6a>
 800f312:	7803      	ldrb	r3, [r0, #0]
 800f314:	2b30      	cmp	r3, #48	@ 0x30
 800f316:	d10a      	bne.n	800f32e <__cvt+0xba>
 800f318:	2200      	movs	r2, #0
 800f31a:	2300      	movs	r3, #0
 800f31c:	4630      	mov	r0, r6
 800f31e:	4639      	mov	r1, r7
 800f320:	f7f1 fbaa 	bl	8000a78 <__aeabi_dcmpeq>
 800f324:	b918      	cbnz	r0, 800f32e <__cvt+0xba>
 800f326:	f1c4 0401 	rsb	r4, r4, #1
 800f32a:	f8ca 4000 	str.w	r4, [sl]
 800f32e:	f8da 3000 	ldr.w	r3, [sl]
 800f332:	4499      	add	r9, r3
 800f334:	e7d3      	b.n	800f2de <__cvt+0x6a>
 800f336:	1c59      	adds	r1, r3, #1
 800f338:	9103      	str	r1, [sp, #12]
 800f33a:	701a      	strb	r2, [r3, #0]
 800f33c:	e7d9      	b.n	800f2f2 <__cvt+0x7e>

0800f33e <__exponent>:
 800f33e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f340:	2900      	cmp	r1, #0
 800f342:	bfba      	itte	lt
 800f344:	4249      	neglt	r1, r1
 800f346:	232d      	movlt	r3, #45	@ 0x2d
 800f348:	232b      	movge	r3, #43	@ 0x2b
 800f34a:	2909      	cmp	r1, #9
 800f34c:	7002      	strb	r2, [r0, #0]
 800f34e:	7043      	strb	r3, [r0, #1]
 800f350:	dd29      	ble.n	800f3a6 <__exponent+0x68>
 800f352:	f10d 0307 	add.w	r3, sp, #7
 800f356:	461d      	mov	r5, r3
 800f358:	270a      	movs	r7, #10
 800f35a:	461a      	mov	r2, r3
 800f35c:	fbb1 f6f7 	udiv	r6, r1, r7
 800f360:	fb07 1416 	mls	r4, r7, r6, r1
 800f364:	3430      	adds	r4, #48	@ 0x30
 800f366:	f802 4c01 	strb.w	r4, [r2, #-1]
 800f36a:	460c      	mov	r4, r1
 800f36c:	2c63      	cmp	r4, #99	@ 0x63
 800f36e:	f103 33ff 	add.w	r3, r3, #4294967295
 800f372:	4631      	mov	r1, r6
 800f374:	dcf1      	bgt.n	800f35a <__exponent+0x1c>
 800f376:	3130      	adds	r1, #48	@ 0x30
 800f378:	1e94      	subs	r4, r2, #2
 800f37a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800f37e:	1c41      	adds	r1, r0, #1
 800f380:	4623      	mov	r3, r4
 800f382:	42ab      	cmp	r3, r5
 800f384:	d30a      	bcc.n	800f39c <__exponent+0x5e>
 800f386:	f10d 0309 	add.w	r3, sp, #9
 800f38a:	1a9b      	subs	r3, r3, r2
 800f38c:	42ac      	cmp	r4, r5
 800f38e:	bf88      	it	hi
 800f390:	2300      	movhi	r3, #0
 800f392:	3302      	adds	r3, #2
 800f394:	4403      	add	r3, r0
 800f396:	1a18      	subs	r0, r3, r0
 800f398:	b003      	add	sp, #12
 800f39a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f39c:	f813 6b01 	ldrb.w	r6, [r3], #1
 800f3a0:	f801 6f01 	strb.w	r6, [r1, #1]!
 800f3a4:	e7ed      	b.n	800f382 <__exponent+0x44>
 800f3a6:	2330      	movs	r3, #48	@ 0x30
 800f3a8:	3130      	adds	r1, #48	@ 0x30
 800f3aa:	7083      	strb	r3, [r0, #2]
 800f3ac:	70c1      	strb	r1, [r0, #3]
 800f3ae:	1d03      	adds	r3, r0, #4
 800f3b0:	e7f1      	b.n	800f396 <__exponent+0x58>
	...

0800f3b4 <_printf_float>:
 800f3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3b8:	b08d      	sub	sp, #52	@ 0x34
 800f3ba:	460c      	mov	r4, r1
 800f3bc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800f3c0:	4616      	mov	r6, r2
 800f3c2:	461f      	mov	r7, r3
 800f3c4:	4605      	mov	r5, r0
 800f3c6:	f000 ff1f 	bl	8010208 <_localeconv_r>
 800f3ca:	6803      	ldr	r3, [r0, #0]
 800f3cc:	9304      	str	r3, [sp, #16]
 800f3ce:	4618      	mov	r0, r3
 800f3d0:	f7f0 ff26 	bl	8000220 <strlen>
 800f3d4:	2300      	movs	r3, #0
 800f3d6:	930a      	str	r3, [sp, #40]	@ 0x28
 800f3d8:	f8d8 3000 	ldr.w	r3, [r8]
 800f3dc:	9005      	str	r0, [sp, #20]
 800f3de:	3307      	adds	r3, #7
 800f3e0:	f023 0307 	bic.w	r3, r3, #7
 800f3e4:	f103 0208 	add.w	r2, r3, #8
 800f3e8:	f894 a018 	ldrb.w	sl, [r4, #24]
 800f3ec:	f8d4 b000 	ldr.w	fp, [r4]
 800f3f0:	f8c8 2000 	str.w	r2, [r8]
 800f3f4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800f3f8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800f3fc:	9307      	str	r3, [sp, #28]
 800f3fe:	f8cd 8018 	str.w	r8, [sp, #24]
 800f402:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800f406:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f40a:	4b9c      	ldr	r3, [pc, #624]	@ (800f67c <_printf_float+0x2c8>)
 800f40c:	f04f 32ff 	mov.w	r2, #4294967295
 800f410:	f7f1 fb64 	bl	8000adc <__aeabi_dcmpun>
 800f414:	bb70      	cbnz	r0, 800f474 <_printf_float+0xc0>
 800f416:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f41a:	4b98      	ldr	r3, [pc, #608]	@ (800f67c <_printf_float+0x2c8>)
 800f41c:	f04f 32ff 	mov.w	r2, #4294967295
 800f420:	f7f1 fb3e 	bl	8000aa0 <__aeabi_dcmple>
 800f424:	bb30      	cbnz	r0, 800f474 <_printf_float+0xc0>
 800f426:	2200      	movs	r2, #0
 800f428:	2300      	movs	r3, #0
 800f42a:	4640      	mov	r0, r8
 800f42c:	4649      	mov	r1, r9
 800f42e:	f7f1 fb2d 	bl	8000a8c <__aeabi_dcmplt>
 800f432:	b110      	cbz	r0, 800f43a <_printf_float+0x86>
 800f434:	232d      	movs	r3, #45	@ 0x2d
 800f436:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f43a:	4a91      	ldr	r2, [pc, #580]	@ (800f680 <_printf_float+0x2cc>)
 800f43c:	4b91      	ldr	r3, [pc, #580]	@ (800f684 <_printf_float+0x2d0>)
 800f43e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800f442:	bf8c      	ite	hi
 800f444:	4690      	movhi	r8, r2
 800f446:	4698      	movls	r8, r3
 800f448:	2303      	movs	r3, #3
 800f44a:	6123      	str	r3, [r4, #16]
 800f44c:	f02b 0304 	bic.w	r3, fp, #4
 800f450:	6023      	str	r3, [r4, #0]
 800f452:	f04f 0900 	mov.w	r9, #0
 800f456:	9700      	str	r7, [sp, #0]
 800f458:	4633      	mov	r3, r6
 800f45a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800f45c:	4621      	mov	r1, r4
 800f45e:	4628      	mov	r0, r5
 800f460:	f000 f9d2 	bl	800f808 <_printf_common>
 800f464:	3001      	adds	r0, #1
 800f466:	f040 808d 	bne.w	800f584 <_printf_float+0x1d0>
 800f46a:	f04f 30ff 	mov.w	r0, #4294967295
 800f46e:	b00d      	add	sp, #52	@ 0x34
 800f470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f474:	4642      	mov	r2, r8
 800f476:	464b      	mov	r3, r9
 800f478:	4640      	mov	r0, r8
 800f47a:	4649      	mov	r1, r9
 800f47c:	f7f1 fb2e 	bl	8000adc <__aeabi_dcmpun>
 800f480:	b140      	cbz	r0, 800f494 <_printf_float+0xe0>
 800f482:	464b      	mov	r3, r9
 800f484:	2b00      	cmp	r3, #0
 800f486:	bfbc      	itt	lt
 800f488:	232d      	movlt	r3, #45	@ 0x2d
 800f48a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800f48e:	4a7e      	ldr	r2, [pc, #504]	@ (800f688 <_printf_float+0x2d4>)
 800f490:	4b7e      	ldr	r3, [pc, #504]	@ (800f68c <_printf_float+0x2d8>)
 800f492:	e7d4      	b.n	800f43e <_printf_float+0x8a>
 800f494:	6863      	ldr	r3, [r4, #4]
 800f496:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800f49a:	9206      	str	r2, [sp, #24]
 800f49c:	1c5a      	adds	r2, r3, #1
 800f49e:	d13b      	bne.n	800f518 <_printf_float+0x164>
 800f4a0:	2306      	movs	r3, #6
 800f4a2:	6063      	str	r3, [r4, #4]
 800f4a4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800f4a8:	2300      	movs	r3, #0
 800f4aa:	6022      	str	r2, [r4, #0]
 800f4ac:	9303      	str	r3, [sp, #12]
 800f4ae:	ab0a      	add	r3, sp, #40	@ 0x28
 800f4b0:	e9cd a301 	strd	sl, r3, [sp, #4]
 800f4b4:	ab09      	add	r3, sp, #36	@ 0x24
 800f4b6:	9300      	str	r3, [sp, #0]
 800f4b8:	6861      	ldr	r1, [r4, #4]
 800f4ba:	ec49 8b10 	vmov	d0, r8, r9
 800f4be:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800f4c2:	4628      	mov	r0, r5
 800f4c4:	f7ff fed6 	bl	800f274 <__cvt>
 800f4c8:	9b06      	ldr	r3, [sp, #24]
 800f4ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800f4cc:	2b47      	cmp	r3, #71	@ 0x47
 800f4ce:	4680      	mov	r8, r0
 800f4d0:	d129      	bne.n	800f526 <_printf_float+0x172>
 800f4d2:	1cc8      	adds	r0, r1, #3
 800f4d4:	db02      	blt.n	800f4dc <_printf_float+0x128>
 800f4d6:	6863      	ldr	r3, [r4, #4]
 800f4d8:	4299      	cmp	r1, r3
 800f4da:	dd41      	ble.n	800f560 <_printf_float+0x1ac>
 800f4dc:	f1aa 0a02 	sub.w	sl, sl, #2
 800f4e0:	fa5f fa8a 	uxtb.w	sl, sl
 800f4e4:	3901      	subs	r1, #1
 800f4e6:	4652      	mov	r2, sl
 800f4e8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f4ec:	9109      	str	r1, [sp, #36]	@ 0x24
 800f4ee:	f7ff ff26 	bl	800f33e <__exponent>
 800f4f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f4f4:	1813      	adds	r3, r2, r0
 800f4f6:	2a01      	cmp	r2, #1
 800f4f8:	4681      	mov	r9, r0
 800f4fa:	6123      	str	r3, [r4, #16]
 800f4fc:	dc02      	bgt.n	800f504 <_printf_float+0x150>
 800f4fe:	6822      	ldr	r2, [r4, #0]
 800f500:	07d2      	lsls	r2, r2, #31
 800f502:	d501      	bpl.n	800f508 <_printf_float+0x154>
 800f504:	3301      	adds	r3, #1
 800f506:	6123      	str	r3, [r4, #16]
 800f508:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800f50c:	2b00      	cmp	r3, #0
 800f50e:	d0a2      	beq.n	800f456 <_printf_float+0xa2>
 800f510:	232d      	movs	r3, #45	@ 0x2d
 800f512:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f516:	e79e      	b.n	800f456 <_printf_float+0xa2>
 800f518:	9a06      	ldr	r2, [sp, #24]
 800f51a:	2a47      	cmp	r2, #71	@ 0x47
 800f51c:	d1c2      	bne.n	800f4a4 <_printf_float+0xf0>
 800f51e:	2b00      	cmp	r3, #0
 800f520:	d1c0      	bne.n	800f4a4 <_printf_float+0xf0>
 800f522:	2301      	movs	r3, #1
 800f524:	e7bd      	b.n	800f4a2 <_printf_float+0xee>
 800f526:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800f52a:	d9db      	bls.n	800f4e4 <_printf_float+0x130>
 800f52c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800f530:	d118      	bne.n	800f564 <_printf_float+0x1b0>
 800f532:	2900      	cmp	r1, #0
 800f534:	6863      	ldr	r3, [r4, #4]
 800f536:	dd0b      	ble.n	800f550 <_printf_float+0x19c>
 800f538:	6121      	str	r1, [r4, #16]
 800f53a:	b913      	cbnz	r3, 800f542 <_printf_float+0x18e>
 800f53c:	6822      	ldr	r2, [r4, #0]
 800f53e:	07d0      	lsls	r0, r2, #31
 800f540:	d502      	bpl.n	800f548 <_printf_float+0x194>
 800f542:	3301      	adds	r3, #1
 800f544:	440b      	add	r3, r1
 800f546:	6123      	str	r3, [r4, #16]
 800f548:	65a1      	str	r1, [r4, #88]	@ 0x58
 800f54a:	f04f 0900 	mov.w	r9, #0
 800f54e:	e7db      	b.n	800f508 <_printf_float+0x154>
 800f550:	b913      	cbnz	r3, 800f558 <_printf_float+0x1a4>
 800f552:	6822      	ldr	r2, [r4, #0]
 800f554:	07d2      	lsls	r2, r2, #31
 800f556:	d501      	bpl.n	800f55c <_printf_float+0x1a8>
 800f558:	3302      	adds	r3, #2
 800f55a:	e7f4      	b.n	800f546 <_printf_float+0x192>
 800f55c:	2301      	movs	r3, #1
 800f55e:	e7f2      	b.n	800f546 <_printf_float+0x192>
 800f560:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800f564:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f566:	4299      	cmp	r1, r3
 800f568:	db05      	blt.n	800f576 <_printf_float+0x1c2>
 800f56a:	6823      	ldr	r3, [r4, #0]
 800f56c:	6121      	str	r1, [r4, #16]
 800f56e:	07d8      	lsls	r0, r3, #31
 800f570:	d5ea      	bpl.n	800f548 <_printf_float+0x194>
 800f572:	1c4b      	adds	r3, r1, #1
 800f574:	e7e7      	b.n	800f546 <_printf_float+0x192>
 800f576:	2900      	cmp	r1, #0
 800f578:	bfd4      	ite	le
 800f57a:	f1c1 0202 	rsble	r2, r1, #2
 800f57e:	2201      	movgt	r2, #1
 800f580:	4413      	add	r3, r2
 800f582:	e7e0      	b.n	800f546 <_printf_float+0x192>
 800f584:	6823      	ldr	r3, [r4, #0]
 800f586:	055a      	lsls	r2, r3, #21
 800f588:	d407      	bmi.n	800f59a <_printf_float+0x1e6>
 800f58a:	6923      	ldr	r3, [r4, #16]
 800f58c:	4642      	mov	r2, r8
 800f58e:	4631      	mov	r1, r6
 800f590:	4628      	mov	r0, r5
 800f592:	47b8      	blx	r7
 800f594:	3001      	adds	r0, #1
 800f596:	d12b      	bne.n	800f5f0 <_printf_float+0x23c>
 800f598:	e767      	b.n	800f46a <_printf_float+0xb6>
 800f59a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800f59e:	f240 80dd 	bls.w	800f75c <_printf_float+0x3a8>
 800f5a2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800f5a6:	2200      	movs	r2, #0
 800f5a8:	2300      	movs	r3, #0
 800f5aa:	f7f1 fa65 	bl	8000a78 <__aeabi_dcmpeq>
 800f5ae:	2800      	cmp	r0, #0
 800f5b0:	d033      	beq.n	800f61a <_printf_float+0x266>
 800f5b2:	4a37      	ldr	r2, [pc, #220]	@ (800f690 <_printf_float+0x2dc>)
 800f5b4:	2301      	movs	r3, #1
 800f5b6:	4631      	mov	r1, r6
 800f5b8:	4628      	mov	r0, r5
 800f5ba:	47b8      	blx	r7
 800f5bc:	3001      	adds	r0, #1
 800f5be:	f43f af54 	beq.w	800f46a <_printf_float+0xb6>
 800f5c2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800f5c6:	4543      	cmp	r3, r8
 800f5c8:	db02      	blt.n	800f5d0 <_printf_float+0x21c>
 800f5ca:	6823      	ldr	r3, [r4, #0]
 800f5cc:	07d8      	lsls	r0, r3, #31
 800f5ce:	d50f      	bpl.n	800f5f0 <_printf_float+0x23c>
 800f5d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f5d4:	4631      	mov	r1, r6
 800f5d6:	4628      	mov	r0, r5
 800f5d8:	47b8      	blx	r7
 800f5da:	3001      	adds	r0, #1
 800f5dc:	f43f af45 	beq.w	800f46a <_printf_float+0xb6>
 800f5e0:	f04f 0900 	mov.w	r9, #0
 800f5e4:	f108 38ff 	add.w	r8, r8, #4294967295
 800f5e8:	f104 0a1a 	add.w	sl, r4, #26
 800f5ec:	45c8      	cmp	r8, r9
 800f5ee:	dc09      	bgt.n	800f604 <_printf_float+0x250>
 800f5f0:	6823      	ldr	r3, [r4, #0]
 800f5f2:	079b      	lsls	r3, r3, #30
 800f5f4:	f100 8103 	bmi.w	800f7fe <_printf_float+0x44a>
 800f5f8:	68e0      	ldr	r0, [r4, #12]
 800f5fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800f5fc:	4298      	cmp	r0, r3
 800f5fe:	bfb8      	it	lt
 800f600:	4618      	movlt	r0, r3
 800f602:	e734      	b.n	800f46e <_printf_float+0xba>
 800f604:	2301      	movs	r3, #1
 800f606:	4652      	mov	r2, sl
 800f608:	4631      	mov	r1, r6
 800f60a:	4628      	mov	r0, r5
 800f60c:	47b8      	blx	r7
 800f60e:	3001      	adds	r0, #1
 800f610:	f43f af2b 	beq.w	800f46a <_printf_float+0xb6>
 800f614:	f109 0901 	add.w	r9, r9, #1
 800f618:	e7e8      	b.n	800f5ec <_printf_float+0x238>
 800f61a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f61c:	2b00      	cmp	r3, #0
 800f61e:	dc39      	bgt.n	800f694 <_printf_float+0x2e0>
 800f620:	4a1b      	ldr	r2, [pc, #108]	@ (800f690 <_printf_float+0x2dc>)
 800f622:	2301      	movs	r3, #1
 800f624:	4631      	mov	r1, r6
 800f626:	4628      	mov	r0, r5
 800f628:	47b8      	blx	r7
 800f62a:	3001      	adds	r0, #1
 800f62c:	f43f af1d 	beq.w	800f46a <_printf_float+0xb6>
 800f630:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800f634:	ea59 0303 	orrs.w	r3, r9, r3
 800f638:	d102      	bne.n	800f640 <_printf_float+0x28c>
 800f63a:	6823      	ldr	r3, [r4, #0]
 800f63c:	07d9      	lsls	r1, r3, #31
 800f63e:	d5d7      	bpl.n	800f5f0 <_printf_float+0x23c>
 800f640:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f644:	4631      	mov	r1, r6
 800f646:	4628      	mov	r0, r5
 800f648:	47b8      	blx	r7
 800f64a:	3001      	adds	r0, #1
 800f64c:	f43f af0d 	beq.w	800f46a <_printf_float+0xb6>
 800f650:	f04f 0a00 	mov.w	sl, #0
 800f654:	f104 0b1a 	add.w	fp, r4, #26
 800f658:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f65a:	425b      	negs	r3, r3
 800f65c:	4553      	cmp	r3, sl
 800f65e:	dc01      	bgt.n	800f664 <_printf_float+0x2b0>
 800f660:	464b      	mov	r3, r9
 800f662:	e793      	b.n	800f58c <_printf_float+0x1d8>
 800f664:	2301      	movs	r3, #1
 800f666:	465a      	mov	r2, fp
 800f668:	4631      	mov	r1, r6
 800f66a:	4628      	mov	r0, r5
 800f66c:	47b8      	blx	r7
 800f66e:	3001      	adds	r0, #1
 800f670:	f43f aefb 	beq.w	800f46a <_printf_float+0xb6>
 800f674:	f10a 0a01 	add.w	sl, sl, #1
 800f678:	e7ee      	b.n	800f658 <_printf_float+0x2a4>
 800f67a:	bf00      	nop
 800f67c:	7fefffff 	.word	0x7fefffff
 800f680:	080195e9 	.word	0x080195e9
 800f684:	080195e5 	.word	0x080195e5
 800f688:	080195f1 	.word	0x080195f1
 800f68c:	080195ed 	.word	0x080195ed
 800f690:	080195f5 	.word	0x080195f5
 800f694:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800f696:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800f69a:	4553      	cmp	r3, sl
 800f69c:	bfa8      	it	ge
 800f69e:	4653      	movge	r3, sl
 800f6a0:	2b00      	cmp	r3, #0
 800f6a2:	4699      	mov	r9, r3
 800f6a4:	dc36      	bgt.n	800f714 <_printf_float+0x360>
 800f6a6:	f04f 0b00 	mov.w	fp, #0
 800f6aa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f6ae:	f104 021a 	add.w	r2, r4, #26
 800f6b2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800f6b4:	9306      	str	r3, [sp, #24]
 800f6b6:	eba3 0309 	sub.w	r3, r3, r9
 800f6ba:	455b      	cmp	r3, fp
 800f6bc:	dc31      	bgt.n	800f722 <_printf_float+0x36e>
 800f6be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f6c0:	459a      	cmp	sl, r3
 800f6c2:	dc3a      	bgt.n	800f73a <_printf_float+0x386>
 800f6c4:	6823      	ldr	r3, [r4, #0]
 800f6c6:	07da      	lsls	r2, r3, #31
 800f6c8:	d437      	bmi.n	800f73a <_printf_float+0x386>
 800f6ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f6cc:	ebaa 0903 	sub.w	r9, sl, r3
 800f6d0:	9b06      	ldr	r3, [sp, #24]
 800f6d2:	ebaa 0303 	sub.w	r3, sl, r3
 800f6d6:	4599      	cmp	r9, r3
 800f6d8:	bfa8      	it	ge
 800f6da:	4699      	movge	r9, r3
 800f6dc:	f1b9 0f00 	cmp.w	r9, #0
 800f6e0:	dc33      	bgt.n	800f74a <_printf_float+0x396>
 800f6e2:	f04f 0800 	mov.w	r8, #0
 800f6e6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800f6ea:	f104 0b1a 	add.w	fp, r4, #26
 800f6ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f6f0:	ebaa 0303 	sub.w	r3, sl, r3
 800f6f4:	eba3 0309 	sub.w	r3, r3, r9
 800f6f8:	4543      	cmp	r3, r8
 800f6fa:	f77f af79 	ble.w	800f5f0 <_printf_float+0x23c>
 800f6fe:	2301      	movs	r3, #1
 800f700:	465a      	mov	r2, fp
 800f702:	4631      	mov	r1, r6
 800f704:	4628      	mov	r0, r5
 800f706:	47b8      	blx	r7
 800f708:	3001      	adds	r0, #1
 800f70a:	f43f aeae 	beq.w	800f46a <_printf_float+0xb6>
 800f70e:	f108 0801 	add.w	r8, r8, #1
 800f712:	e7ec      	b.n	800f6ee <_printf_float+0x33a>
 800f714:	4642      	mov	r2, r8
 800f716:	4631      	mov	r1, r6
 800f718:	4628      	mov	r0, r5
 800f71a:	47b8      	blx	r7
 800f71c:	3001      	adds	r0, #1
 800f71e:	d1c2      	bne.n	800f6a6 <_printf_float+0x2f2>
 800f720:	e6a3      	b.n	800f46a <_printf_float+0xb6>
 800f722:	2301      	movs	r3, #1
 800f724:	4631      	mov	r1, r6
 800f726:	4628      	mov	r0, r5
 800f728:	9206      	str	r2, [sp, #24]
 800f72a:	47b8      	blx	r7
 800f72c:	3001      	adds	r0, #1
 800f72e:	f43f ae9c 	beq.w	800f46a <_printf_float+0xb6>
 800f732:	9a06      	ldr	r2, [sp, #24]
 800f734:	f10b 0b01 	add.w	fp, fp, #1
 800f738:	e7bb      	b.n	800f6b2 <_printf_float+0x2fe>
 800f73a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f73e:	4631      	mov	r1, r6
 800f740:	4628      	mov	r0, r5
 800f742:	47b8      	blx	r7
 800f744:	3001      	adds	r0, #1
 800f746:	d1c0      	bne.n	800f6ca <_printf_float+0x316>
 800f748:	e68f      	b.n	800f46a <_printf_float+0xb6>
 800f74a:	9a06      	ldr	r2, [sp, #24]
 800f74c:	464b      	mov	r3, r9
 800f74e:	4442      	add	r2, r8
 800f750:	4631      	mov	r1, r6
 800f752:	4628      	mov	r0, r5
 800f754:	47b8      	blx	r7
 800f756:	3001      	adds	r0, #1
 800f758:	d1c3      	bne.n	800f6e2 <_printf_float+0x32e>
 800f75a:	e686      	b.n	800f46a <_printf_float+0xb6>
 800f75c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800f760:	f1ba 0f01 	cmp.w	sl, #1
 800f764:	dc01      	bgt.n	800f76a <_printf_float+0x3b6>
 800f766:	07db      	lsls	r3, r3, #31
 800f768:	d536      	bpl.n	800f7d8 <_printf_float+0x424>
 800f76a:	2301      	movs	r3, #1
 800f76c:	4642      	mov	r2, r8
 800f76e:	4631      	mov	r1, r6
 800f770:	4628      	mov	r0, r5
 800f772:	47b8      	blx	r7
 800f774:	3001      	adds	r0, #1
 800f776:	f43f ae78 	beq.w	800f46a <_printf_float+0xb6>
 800f77a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f77e:	4631      	mov	r1, r6
 800f780:	4628      	mov	r0, r5
 800f782:	47b8      	blx	r7
 800f784:	3001      	adds	r0, #1
 800f786:	f43f ae70 	beq.w	800f46a <_printf_float+0xb6>
 800f78a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800f78e:	2200      	movs	r2, #0
 800f790:	2300      	movs	r3, #0
 800f792:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f796:	f7f1 f96f 	bl	8000a78 <__aeabi_dcmpeq>
 800f79a:	b9c0      	cbnz	r0, 800f7ce <_printf_float+0x41a>
 800f79c:	4653      	mov	r3, sl
 800f79e:	f108 0201 	add.w	r2, r8, #1
 800f7a2:	4631      	mov	r1, r6
 800f7a4:	4628      	mov	r0, r5
 800f7a6:	47b8      	blx	r7
 800f7a8:	3001      	adds	r0, #1
 800f7aa:	d10c      	bne.n	800f7c6 <_printf_float+0x412>
 800f7ac:	e65d      	b.n	800f46a <_printf_float+0xb6>
 800f7ae:	2301      	movs	r3, #1
 800f7b0:	465a      	mov	r2, fp
 800f7b2:	4631      	mov	r1, r6
 800f7b4:	4628      	mov	r0, r5
 800f7b6:	47b8      	blx	r7
 800f7b8:	3001      	adds	r0, #1
 800f7ba:	f43f ae56 	beq.w	800f46a <_printf_float+0xb6>
 800f7be:	f108 0801 	add.w	r8, r8, #1
 800f7c2:	45d0      	cmp	r8, sl
 800f7c4:	dbf3      	blt.n	800f7ae <_printf_float+0x3fa>
 800f7c6:	464b      	mov	r3, r9
 800f7c8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800f7cc:	e6df      	b.n	800f58e <_printf_float+0x1da>
 800f7ce:	f04f 0800 	mov.w	r8, #0
 800f7d2:	f104 0b1a 	add.w	fp, r4, #26
 800f7d6:	e7f4      	b.n	800f7c2 <_printf_float+0x40e>
 800f7d8:	2301      	movs	r3, #1
 800f7da:	4642      	mov	r2, r8
 800f7dc:	e7e1      	b.n	800f7a2 <_printf_float+0x3ee>
 800f7de:	2301      	movs	r3, #1
 800f7e0:	464a      	mov	r2, r9
 800f7e2:	4631      	mov	r1, r6
 800f7e4:	4628      	mov	r0, r5
 800f7e6:	47b8      	blx	r7
 800f7e8:	3001      	adds	r0, #1
 800f7ea:	f43f ae3e 	beq.w	800f46a <_printf_float+0xb6>
 800f7ee:	f108 0801 	add.w	r8, r8, #1
 800f7f2:	68e3      	ldr	r3, [r4, #12]
 800f7f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800f7f6:	1a5b      	subs	r3, r3, r1
 800f7f8:	4543      	cmp	r3, r8
 800f7fa:	dcf0      	bgt.n	800f7de <_printf_float+0x42a>
 800f7fc:	e6fc      	b.n	800f5f8 <_printf_float+0x244>
 800f7fe:	f04f 0800 	mov.w	r8, #0
 800f802:	f104 0919 	add.w	r9, r4, #25
 800f806:	e7f4      	b.n	800f7f2 <_printf_float+0x43e>

0800f808 <_printf_common>:
 800f808:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f80c:	4616      	mov	r6, r2
 800f80e:	4698      	mov	r8, r3
 800f810:	688a      	ldr	r2, [r1, #8]
 800f812:	690b      	ldr	r3, [r1, #16]
 800f814:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800f818:	4293      	cmp	r3, r2
 800f81a:	bfb8      	it	lt
 800f81c:	4613      	movlt	r3, r2
 800f81e:	6033      	str	r3, [r6, #0]
 800f820:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800f824:	4607      	mov	r7, r0
 800f826:	460c      	mov	r4, r1
 800f828:	b10a      	cbz	r2, 800f82e <_printf_common+0x26>
 800f82a:	3301      	adds	r3, #1
 800f82c:	6033      	str	r3, [r6, #0]
 800f82e:	6823      	ldr	r3, [r4, #0]
 800f830:	0699      	lsls	r1, r3, #26
 800f832:	bf42      	ittt	mi
 800f834:	6833      	ldrmi	r3, [r6, #0]
 800f836:	3302      	addmi	r3, #2
 800f838:	6033      	strmi	r3, [r6, #0]
 800f83a:	6825      	ldr	r5, [r4, #0]
 800f83c:	f015 0506 	ands.w	r5, r5, #6
 800f840:	d106      	bne.n	800f850 <_printf_common+0x48>
 800f842:	f104 0a19 	add.w	sl, r4, #25
 800f846:	68e3      	ldr	r3, [r4, #12]
 800f848:	6832      	ldr	r2, [r6, #0]
 800f84a:	1a9b      	subs	r3, r3, r2
 800f84c:	42ab      	cmp	r3, r5
 800f84e:	dc26      	bgt.n	800f89e <_printf_common+0x96>
 800f850:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800f854:	6822      	ldr	r2, [r4, #0]
 800f856:	3b00      	subs	r3, #0
 800f858:	bf18      	it	ne
 800f85a:	2301      	movne	r3, #1
 800f85c:	0692      	lsls	r2, r2, #26
 800f85e:	d42b      	bmi.n	800f8b8 <_printf_common+0xb0>
 800f860:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800f864:	4641      	mov	r1, r8
 800f866:	4638      	mov	r0, r7
 800f868:	47c8      	blx	r9
 800f86a:	3001      	adds	r0, #1
 800f86c:	d01e      	beq.n	800f8ac <_printf_common+0xa4>
 800f86e:	6823      	ldr	r3, [r4, #0]
 800f870:	6922      	ldr	r2, [r4, #16]
 800f872:	f003 0306 	and.w	r3, r3, #6
 800f876:	2b04      	cmp	r3, #4
 800f878:	bf02      	ittt	eq
 800f87a:	68e5      	ldreq	r5, [r4, #12]
 800f87c:	6833      	ldreq	r3, [r6, #0]
 800f87e:	1aed      	subeq	r5, r5, r3
 800f880:	68a3      	ldr	r3, [r4, #8]
 800f882:	bf0c      	ite	eq
 800f884:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800f888:	2500      	movne	r5, #0
 800f88a:	4293      	cmp	r3, r2
 800f88c:	bfc4      	itt	gt
 800f88e:	1a9b      	subgt	r3, r3, r2
 800f890:	18ed      	addgt	r5, r5, r3
 800f892:	2600      	movs	r6, #0
 800f894:	341a      	adds	r4, #26
 800f896:	42b5      	cmp	r5, r6
 800f898:	d11a      	bne.n	800f8d0 <_printf_common+0xc8>
 800f89a:	2000      	movs	r0, #0
 800f89c:	e008      	b.n	800f8b0 <_printf_common+0xa8>
 800f89e:	2301      	movs	r3, #1
 800f8a0:	4652      	mov	r2, sl
 800f8a2:	4641      	mov	r1, r8
 800f8a4:	4638      	mov	r0, r7
 800f8a6:	47c8      	blx	r9
 800f8a8:	3001      	adds	r0, #1
 800f8aa:	d103      	bne.n	800f8b4 <_printf_common+0xac>
 800f8ac:	f04f 30ff 	mov.w	r0, #4294967295
 800f8b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8b4:	3501      	adds	r5, #1
 800f8b6:	e7c6      	b.n	800f846 <_printf_common+0x3e>
 800f8b8:	18e1      	adds	r1, r4, r3
 800f8ba:	1c5a      	adds	r2, r3, #1
 800f8bc:	2030      	movs	r0, #48	@ 0x30
 800f8be:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800f8c2:	4422      	add	r2, r4
 800f8c4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800f8c8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800f8cc:	3302      	adds	r3, #2
 800f8ce:	e7c7      	b.n	800f860 <_printf_common+0x58>
 800f8d0:	2301      	movs	r3, #1
 800f8d2:	4622      	mov	r2, r4
 800f8d4:	4641      	mov	r1, r8
 800f8d6:	4638      	mov	r0, r7
 800f8d8:	47c8      	blx	r9
 800f8da:	3001      	adds	r0, #1
 800f8dc:	d0e6      	beq.n	800f8ac <_printf_common+0xa4>
 800f8de:	3601      	adds	r6, #1
 800f8e0:	e7d9      	b.n	800f896 <_printf_common+0x8e>
	...

0800f8e4 <_printf_i>:
 800f8e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f8e8:	7e0f      	ldrb	r7, [r1, #24]
 800f8ea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800f8ec:	2f78      	cmp	r7, #120	@ 0x78
 800f8ee:	4691      	mov	r9, r2
 800f8f0:	4680      	mov	r8, r0
 800f8f2:	460c      	mov	r4, r1
 800f8f4:	469a      	mov	sl, r3
 800f8f6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800f8fa:	d807      	bhi.n	800f90c <_printf_i+0x28>
 800f8fc:	2f62      	cmp	r7, #98	@ 0x62
 800f8fe:	d80a      	bhi.n	800f916 <_printf_i+0x32>
 800f900:	2f00      	cmp	r7, #0
 800f902:	f000 80d1 	beq.w	800faa8 <_printf_i+0x1c4>
 800f906:	2f58      	cmp	r7, #88	@ 0x58
 800f908:	f000 80b8 	beq.w	800fa7c <_printf_i+0x198>
 800f90c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800f910:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800f914:	e03a      	b.n	800f98c <_printf_i+0xa8>
 800f916:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800f91a:	2b15      	cmp	r3, #21
 800f91c:	d8f6      	bhi.n	800f90c <_printf_i+0x28>
 800f91e:	a101      	add	r1, pc, #4	@ (adr r1, 800f924 <_printf_i+0x40>)
 800f920:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800f924:	0800f97d 	.word	0x0800f97d
 800f928:	0800f991 	.word	0x0800f991
 800f92c:	0800f90d 	.word	0x0800f90d
 800f930:	0800f90d 	.word	0x0800f90d
 800f934:	0800f90d 	.word	0x0800f90d
 800f938:	0800f90d 	.word	0x0800f90d
 800f93c:	0800f991 	.word	0x0800f991
 800f940:	0800f90d 	.word	0x0800f90d
 800f944:	0800f90d 	.word	0x0800f90d
 800f948:	0800f90d 	.word	0x0800f90d
 800f94c:	0800f90d 	.word	0x0800f90d
 800f950:	0800fa8f 	.word	0x0800fa8f
 800f954:	0800f9bb 	.word	0x0800f9bb
 800f958:	0800fa49 	.word	0x0800fa49
 800f95c:	0800f90d 	.word	0x0800f90d
 800f960:	0800f90d 	.word	0x0800f90d
 800f964:	0800fab1 	.word	0x0800fab1
 800f968:	0800f90d 	.word	0x0800f90d
 800f96c:	0800f9bb 	.word	0x0800f9bb
 800f970:	0800f90d 	.word	0x0800f90d
 800f974:	0800f90d 	.word	0x0800f90d
 800f978:	0800fa51 	.word	0x0800fa51
 800f97c:	6833      	ldr	r3, [r6, #0]
 800f97e:	1d1a      	adds	r2, r3, #4
 800f980:	681b      	ldr	r3, [r3, #0]
 800f982:	6032      	str	r2, [r6, #0]
 800f984:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800f988:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800f98c:	2301      	movs	r3, #1
 800f98e:	e09c      	b.n	800faca <_printf_i+0x1e6>
 800f990:	6833      	ldr	r3, [r6, #0]
 800f992:	6820      	ldr	r0, [r4, #0]
 800f994:	1d19      	adds	r1, r3, #4
 800f996:	6031      	str	r1, [r6, #0]
 800f998:	0606      	lsls	r6, r0, #24
 800f99a:	d501      	bpl.n	800f9a0 <_printf_i+0xbc>
 800f99c:	681d      	ldr	r5, [r3, #0]
 800f99e:	e003      	b.n	800f9a8 <_printf_i+0xc4>
 800f9a0:	0645      	lsls	r5, r0, #25
 800f9a2:	d5fb      	bpl.n	800f99c <_printf_i+0xb8>
 800f9a4:	f9b3 5000 	ldrsh.w	r5, [r3]
 800f9a8:	2d00      	cmp	r5, #0
 800f9aa:	da03      	bge.n	800f9b4 <_printf_i+0xd0>
 800f9ac:	232d      	movs	r3, #45	@ 0x2d
 800f9ae:	426d      	negs	r5, r5
 800f9b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f9b4:	4858      	ldr	r0, [pc, #352]	@ (800fb18 <_printf_i+0x234>)
 800f9b6:	230a      	movs	r3, #10
 800f9b8:	e011      	b.n	800f9de <_printf_i+0xfa>
 800f9ba:	6821      	ldr	r1, [r4, #0]
 800f9bc:	6833      	ldr	r3, [r6, #0]
 800f9be:	0608      	lsls	r0, r1, #24
 800f9c0:	f853 5b04 	ldr.w	r5, [r3], #4
 800f9c4:	d402      	bmi.n	800f9cc <_printf_i+0xe8>
 800f9c6:	0649      	lsls	r1, r1, #25
 800f9c8:	bf48      	it	mi
 800f9ca:	b2ad      	uxthmi	r5, r5
 800f9cc:	2f6f      	cmp	r7, #111	@ 0x6f
 800f9ce:	4852      	ldr	r0, [pc, #328]	@ (800fb18 <_printf_i+0x234>)
 800f9d0:	6033      	str	r3, [r6, #0]
 800f9d2:	bf14      	ite	ne
 800f9d4:	230a      	movne	r3, #10
 800f9d6:	2308      	moveq	r3, #8
 800f9d8:	2100      	movs	r1, #0
 800f9da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800f9de:	6866      	ldr	r6, [r4, #4]
 800f9e0:	60a6      	str	r6, [r4, #8]
 800f9e2:	2e00      	cmp	r6, #0
 800f9e4:	db05      	blt.n	800f9f2 <_printf_i+0x10e>
 800f9e6:	6821      	ldr	r1, [r4, #0]
 800f9e8:	432e      	orrs	r6, r5
 800f9ea:	f021 0104 	bic.w	r1, r1, #4
 800f9ee:	6021      	str	r1, [r4, #0]
 800f9f0:	d04b      	beq.n	800fa8a <_printf_i+0x1a6>
 800f9f2:	4616      	mov	r6, r2
 800f9f4:	fbb5 f1f3 	udiv	r1, r5, r3
 800f9f8:	fb03 5711 	mls	r7, r3, r1, r5
 800f9fc:	5dc7      	ldrb	r7, [r0, r7]
 800f9fe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800fa02:	462f      	mov	r7, r5
 800fa04:	42bb      	cmp	r3, r7
 800fa06:	460d      	mov	r5, r1
 800fa08:	d9f4      	bls.n	800f9f4 <_printf_i+0x110>
 800fa0a:	2b08      	cmp	r3, #8
 800fa0c:	d10b      	bne.n	800fa26 <_printf_i+0x142>
 800fa0e:	6823      	ldr	r3, [r4, #0]
 800fa10:	07df      	lsls	r7, r3, #31
 800fa12:	d508      	bpl.n	800fa26 <_printf_i+0x142>
 800fa14:	6923      	ldr	r3, [r4, #16]
 800fa16:	6861      	ldr	r1, [r4, #4]
 800fa18:	4299      	cmp	r1, r3
 800fa1a:	bfde      	ittt	le
 800fa1c:	2330      	movle	r3, #48	@ 0x30
 800fa1e:	f806 3c01 	strble.w	r3, [r6, #-1]
 800fa22:	f106 36ff 	addle.w	r6, r6, #4294967295
 800fa26:	1b92      	subs	r2, r2, r6
 800fa28:	6122      	str	r2, [r4, #16]
 800fa2a:	f8cd a000 	str.w	sl, [sp]
 800fa2e:	464b      	mov	r3, r9
 800fa30:	aa03      	add	r2, sp, #12
 800fa32:	4621      	mov	r1, r4
 800fa34:	4640      	mov	r0, r8
 800fa36:	f7ff fee7 	bl	800f808 <_printf_common>
 800fa3a:	3001      	adds	r0, #1
 800fa3c:	d14a      	bne.n	800fad4 <_printf_i+0x1f0>
 800fa3e:	f04f 30ff 	mov.w	r0, #4294967295
 800fa42:	b004      	add	sp, #16
 800fa44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fa48:	6823      	ldr	r3, [r4, #0]
 800fa4a:	f043 0320 	orr.w	r3, r3, #32
 800fa4e:	6023      	str	r3, [r4, #0]
 800fa50:	4832      	ldr	r0, [pc, #200]	@ (800fb1c <_printf_i+0x238>)
 800fa52:	2778      	movs	r7, #120	@ 0x78
 800fa54:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800fa58:	6823      	ldr	r3, [r4, #0]
 800fa5a:	6831      	ldr	r1, [r6, #0]
 800fa5c:	061f      	lsls	r7, r3, #24
 800fa5e:	f851 5b04 	ldr.w	r5, [r1], #4
 800fa62:	d402      	bmi.n	800fa6a <_printf_i+0x186>
 800fa64:	065f      	lsls	r7, r3, #25
 800fa66:	bf48      	it	mi
 800fa68:	b2ad      	uxthmi	r5, r5
 800fa6a:	6031      	str	r1, [r6, #0]
 800fa6c:	07d9      	lsls	r1, r3, #31
 800fa6e:	bf44      	itt	mi
 800fa70:	f043 0320 	orrmi.w	r3, r3, #32
 800fa74:	6023      	strmi	r3, [r4, #0]
 800fa76:	b11d      	cbz	r5, 800fa80 <_printf_i+0x19c>
 800fa78:	2310      	movs	r3, #16
 800fa7a:	e7ad      	b.n	800f9d8 <_printf_i+0xf4>
 800fa7c:	4826      	ldr	r0, [pc, #152]	@ (800fb18 <_printf_i+0x234>)
 800fa7e:	e7e9      	b.n	800fa54 <_printf_i+0x170>
 800fa80:	6823      	ldr	r3, [r4, #0]
 800fa82:	f023 0320 	bic.w	r3, r3, #32
 800fa86:	6023      	str	r3, [r4, #0]
 800fa88:	e7f6      	b.n	800fa78 <_printf_i+0x194>
 800fa8a:	4616      	mov	r6, r2
 800fa8c:	e7bd      	b.n	800fa0a <_printf_i+0x126>
 800fa8e:	6833      	ldr	r3, [r6, #0]
 800fa90:	6825      	ldr	r5, [r4, #0]
 800fa92:	6961      	ldr	r1, [r4, #20]
 800fa94:	1d18      	adds	r0, r3, #4
 800fa96:	6030      	str	r0, [r6, #0]
 800fa98:	062e      	lsls	r6, r5, #24
 800fa9a:	681b      	ldr	r3, [r3, #0]
 800fa9c:	d501      	bpl.n	800faa2 <_printf_i+0x1be>
 800fa9e:	6019      	str	r1, [r3, #0]
 800faa0:	e002      	b.n	800faa8 <_printf_i+0x1c4>
 800faa2:	0668      	lsls	r0, r5, #25
 800faa4:	d5fb      	bpl.n	800fa9e <_printf_i+0x1ba>
 800faa6:	8019      	strh	r1, [r3, #0]
 800faa8:	2300      	movs	r3, #0
 800faaa:	6123      	str	r3, [r4, #16]
 800faac:	4616      	mov	r6, r2
 800faae:	e7bc      	b.n	800fa2a <_printf_i+0x146>
 800fab0:	6833      	ldr	r3, [r6, #0]
 800fab2:	1d1a      	adds	r2, r3, #4
 800fab4:	6032      	str	r2, [r6, #0]
 800fab6:	681e      	ldr	r6, [r3, #0]
 800fab8:	6862      	ldr	r2, [r4, #4]
 800faba:	2100      	movs	r1, #0
 800fabc:	4630      	mov	r0, r6
 800fabe:	f7f0 fb5f 	bl	8000180 <memchr>
 800fac2:	b108      	cbz	r0, 800fac8 <_printf_i+0x1e4>
 800fac4:	1b80      	subs	r0, r0, r6
 800fac6:	6060      	str	r0, [r4, #4]
 800fac8:	6863      	ldr	r3, [r4, #4]
 800faca:	6123      	str	r3, [r4, #16]
 800facc:	2300      	movs	r3, #0
 800face:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800fad2:	e7aa      	b.n	800fa2a <_printf_i+0x146>
 800fad4:	6923      	ldr	r3, [r4, #16]
 800fad6:	4632      	mov	r2, r6
 800fad8:	4649      	mov	r1, r9
 800fada:	4640      	mov	r0, r8
 800fadc:	47d0      	blx	sl
 800fade:	3001      	adds	r0, #1
 800fae0:	d0ad      	beq.n	800fa3e <_printf_i+0x15a>
 800fae2:	6823      	ldr	r3, [r4, #0]
 800fae4:	079b      	lsls	r3, r3, #30
 800fae6:	d413      	bmi.n	800fb10 <_printf_i+0x22c>
 800fae8:	68e0      	ldr	r0, [r4, #12]
 800faea:	9b03      	ldr	r3, [sp, #12]
 800faec:	4298      	cmp	r0, r3
 800faee:	bfb8      	it	lt
 800faf0:	4618      	movlt	r0, r3
 800faf2:	e7a6      	b.n	800fa42 <_printf_i+0x15e>
 800faf4:	2301      	movs	r3, #1
 800faf6:	4632      	mov	r2, r6
 800faf8:	4649      	mov	r1, r9
 800fafa:	4640      	mov	r0, r8
 800fafc:	47d0      	blx	sl
 800fafe:	3001      	adds	r0, #1
 800fb00:	d09d      	beq.n	800fa3e <_printf_i+0x15a>
 800fb02:	3501      	adds	r5, #1
 800fb04:	68e3      	ldr	r3, [r4, #12]
 800fb06:	9903      	ldr	r1, [sp, #12]
 800fb08:	1a5b      	subs	r3, r3, r1
 800fb0a:	42ab      	cmp	r3, r5
 800fb0c:	dcf2      	bgt.n	800faf4 <_printf_i+0x210>
 800fb0e:	e7eb      	b.n	800fae8 <_printf_i+0x204>
 800fb10:	2500      	movs	r5, #0
 800fb12:	f104 0619 	add.w	r6, r4, #25
 800fb16:	e7f5      	b.n	800fb04 <_printf_i+0x220>
 800fb18:	080195f7 	.word	0x080195f7
 800fb1c:	08019608 	.word	0x08019608

0800fb20 <_scanf_float>:
 800fb20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb24:	b087      	sub	sp, #28
 800fb26:	4691      	mov	r9, r2
 800fb28:	9303      	str	r3, [sp, #12]
 800fb2a:	688b      	ldr	r3, [r1, #8]
 800fb2c:	1e5a      	subs	r2, r3, #1
 800fb2e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 800fb32:	bf81      	itttt	hi
 800fb34:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 800fb38:	eb03 0b05 	addhi.w	fp, r3, r5
 800fb3c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 800fb40:	608b      	strhi	r3, [r1, #8]
 800fb42:	680b      	ldr	r3, [r1, #0]
 800fb44:	460a      	mov	r2, r1
 800fb46:	f04f 0500 	mov.w	r5, #0
 800fb4a:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 800fb4e:	f842 3b1c 	str.w	r3, [r2], #28
 800fb52:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fb56:	4680      	mov	r8, r0
 800fb58:	460c      	mov	r4, r1
 800fb5a:	bf98      	it	ls
 800fb5c:	f04f 0b00 	movls.w	fp, #0
 800fb60:	9201      	str	r2, [sp, #4]
 800fb62:	4616      	mov	r6, r2
 800fb64:	46aa      	mov	sl, r5
 800fb66:	462f      	mov	r7, r5
 800fb68:	9502      	str	r5, [sp, #8]
 800fb6a:	68a2      	ldr	r2, [r4, #8]
 800fb6c:	b15a      	cbz	r2, 800fb86 <_scanf_float+0x66>
 800fb6e:	f8d9 3000 	ldr.w	r3, [r9]
 800fb72:	781b      	ldrb	r3, [r3, #0]
 800fb74:	2b4e      	cmp	r3, #78	@ 0x4e
 800fb76:	d863      	bhi.n	800fc40 <_scanf_float+0x120>
 800fb78:	2b40      	cmp	r3, #64	@ 0x40
 800fb7a:	d83b      	bhi.n	800fbf4 <_scanf_float+0xd4>
 800fb7c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 800fb80:	b2c8      	uxtb	r0, r1
 800fb82:	280e      	cmp	r0, #14
 800fb84:	d939      	bls.n	800fbfa <_scanf_float+0xda>
 800fb86:	b11f      	cbz	r7, 800fb90 <_scanf_float+0x70>
 800fb88:	6823      	ldr	r3, [r4, #0]
 800fb8a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800fb8e:	6023      	str	r3, [r4, #0]
 800fb90:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fb94:	f1ba 0f01 	cmp.w	sl, #1
 800fb98:	f200 8114 	bhi.w	800fdc4 <_scanf_float+0x2a4>
 800fb9c:	9b01      	ldr	r3, [sp, #4]
 800fb9e:	429e      	cmp	r6, r3
 800fba0:	f200 8105 	bhi.w	800fdae <_scanf_float+0x28e>
 800fba4:	2001      	movs	r0, #1
 800fba6:	b007      	add	sp, #28
 800fba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbac:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 800fbb0:	2a0d      	cmp	r2, #13
 800fbb2:	d8e8      	bhi.n	800fb86 <_scanf_float+0x66>
 800fbb4:	a101      	add	r1, pc, #4	@ (adr r1, 800fbbc <_scanf_float+0x9c>)
 800fbb6:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800fbba:	bf00      	nop
 800fbbc:	0800fd05 	.word	0x0800fd05
 800fbc0:	0800fb87 	.word	0x0800fb87
 800fbc4:	0800fb87 	.word	0x0800fb87
 800fbc8:	0800fb87 	.word	0x0800fb87
 800fbcc:	0800fd61 	.word	0x0800fd61
 800fbd0:	0800fd3b 	.word	0x0800fd3b
 800fbd4:	0800fb87 	.word	0x0800fb87
 800fbd8:	0800fb87 	.word	0x0800fb87
 800fbdc:	0800fd13 	.word	0x0800fd13
 800fbe0:	0800fb87 	.word	0x0800fb87
 800fbe4:	0800fb87 	.word	0x0800fb87
 800fbe8:	0800fb87 	.word	0x0800fb87
 800fbec:	0800fb87 	.word	0x0800fb87
 800fbf0:	0800fccf 	.word	0x0800fccf
 800fbf4:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 800fbf8:	e7da      	b.n	800fbb0 <_scanf_float+0x90>
 800fbfa:	290e      	cmp	r1, #14
 800fbfc:	d8c3      	bhi.n	800fb86 <_scanf_float+0x66>
 800fbfe:	a001      	add	r0, pc, #4	@ (adr r0, 800fc04 <_scanf_float+0xe4>)
 800fc00:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800fc04:	0800fcbf 	.word	0x0800fcbf
 800fc08:	0800fb87 	.word	0x0800fb87
 800fc0c:	0800fcbf 	.word	0x0800fcbf
 800fc10:	0800fd4f 	.word	0x0800fd4f
 800fc14:	0800fb87 	.word	0x0800fb87
 800fc18:	0800fc61 	.word	0x0800fc61
 800fc1c:	0800fca5 	.word	0x0800fca5
 800fc20:	0800fca5 	.word	0x0800fca5
 800fc24:	0800fca5 	.word	0x0800fca5
 800fc28:	0800fca5 	.word	0x0800fca5
 800fc2c:	0800fca5 	.word	0x0800fca5
 800fc30:	0800fca5 	.word	0x0800fca5
 800fc34:	0800fca5 	.word	0x0800fca5
 800fc38:	0800fca5 	.word	0x0800fca5
 800fc3c:	0800fca5 	.word	0x0800fca5
 800fc40:	2b6e      	cmp	r3, #110	@ 0x6e
 800fc42:	d809      	bhi.n	800fc58 <_scanf_float+0x138>
 800fc44:	2b60      	cmp	r3, #96	@ 0x60
 800fc46:	d8b1      	bhi.n	800fbac <_scanf_float+0x8c>
 800fc48:	2b54      	cmp	r3, #84	@ 0x54
 800fc4a:	d07b      	beq.n	800fd44 <_scanf_float+0x224>
 800fc4c:	2b59      	cmp	r3, #89	@ 0x59
 800fc4e:	d19a      	bne.n	800fb86 <_scanf_float+0x66>
 800fc50:	2d07      	cmp	r5, #7
 800fc52:	d198      	bne.n	800fb86 <_scanf_float+0x66>
 800fc54:	2508      	movs	r5, #8
 800fc56:	e02f      	b.n	800fcb8 <_scanf_float+0x198>
 800fc58:	2b74      	cmp	r3, #116	@ 0x74
 800fc5a:	d073      	beq.n	800fd44 <_scanf_float+0x224>
 800fc5c:	2b79      	cmp	r3, #121	@ 0x79
 800fc5e:	e7f6      	b.n	800fc4e <_scanf_float+0x12e>
 800fc60:	6821      	ldr	r1, [r4, #0]
 800fc62:	05c8      	lsls	r0, r1, #23
 800fc64:	d51e      	bpl.n	800fca4 <_scanf_float+0x184>
 800fc66:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800fc6a:	6021      	str	r1, [r4, #0]
 800fc6c:	3701      	adds	r7, #1
 800fc6e:	f1bb 0f00 	cmp.w	fp, #0
 800fc72:	d003      	beq.n	800fc7c <_scanf_float+0x15c>
 800fc74:	3201      	adds	r2, #1
 800fc76:	f10b 3bff 	add.w	fp, fp, #4294967295
 800fc7a:	60a2      	str	r2, [r4, #8]
 800fc7c:	68a3      	ldr	r3, [r4, #8]
 800fc7e:	3b01      	subs	r3, #1
 800fc80:	60a3      	str	r3, [r4, #8]
 800fc82:	6923      	ldr	r3, [r4, #16]
 800fc84:	3301      	adds	r3, #1
 800fc86:	6123      	str	r3, [r4, #16]
 800fc88:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800fc8c:	3b01      	subs	r3, #1
 800fc8e:	2b00      	cmp	r3, #0
 800fc90:	f8c9 3004 	str.w	r3, [r9, #4]
 800fc94:	f340 8082 	ble.w	800fd9c <_scanf_float+0x27c>
 800fc98:	f8d9 3000 	ldr.w	r3, [r9]
 800fc9c:	3301      	adds	r3, #1
 800fc9e:	f8c9 3000 	str.w	r3, [r9]
 800fca2:	e762      	b.n	800fb6a <_scanf_float+0x4a>
 800fca4:	eb1a 0105 	adds.w	r1, sl, r5
 800fca8:	f47f af6d 	bne.w	800fb86 <_scanf_float+0x66>
 800fcac:	6822      	ldr	r2, [r4, #0]
 800fcae:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800fcb2:	6022      	str	r2, [r4, #0]
 800fcb4:	460d      	mov	r5, r1
 800fcb6:	468a      	mov	sl, r1
 800fcb8:	f806 3b01 	strb.w	r3, [r6], #1
 800fcbc:	e7de      	b.n	800fc7c <_scanf_float+0x15c>
 800fcbe:	6822      	ldr	r2, [r4, #0]
 800fcc0:	0610      	lsls	r0, r2, #24
 800fcc2:	f57f af60 	bpl.w	800fb86 <_scanf_float+0x66>
 800fcc6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800fcca:	6022      	str	r2, [r4, #0]
 800fccc:	e7f4      	b.n	800fcb8 <_scanf_float+0x198>
 800fcce:	f1ba 0f00 	cmp.w	sl, #0
 800fcd2:	d10c      	bne.n	800fcee <_scanf_float+0x1ce>
 800fcd4:	b977      	cbnz	r7, 800fcf4 <_scanf_float+0x1d4>
 800fcd6:	6822      	ldr	r2, [r4, #0]
 800fcd8:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800fcdc:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800fce0:	d108      	bne.n	800fcf4 <_scanf_float+0x1d4>
 800fce2:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800fce6:	6022      	str	r2, [r4, #0]
 800fce8:	f04f 0a01 	mov.w	sl, #1
 800fcec:	e7e4      	b.n	800fcb8 <_scanf_float+0x198>
 800fcee:	f1ba 0f02 	cmp.w	sl, #2
 800fcf2:	d050      	beq.n	800fd96 <_scanf_float+0x276>
 800fcf4:	2d01      	cmp	r5, #1
 800fcf6:	d002      	beq.n	800fcfe <_scanf_float+0x1de>
 800fcf8:	2d04      	cmp	r5, #4
 800fcfa:	f47f af44 	bne.w	800fb86 <_scanf_float+0x66>
 800fcfe:	3501      	adds	r5, #1
 800fd00:	b2ed      	uxtb	r5, r5
 800fd02:	e7d9      	b.n	800fcb8 <_scanf_float+0x198>
 800fd04:	f1ba 0f01 	cmp.w	sl, #1
 800fd08:	f47f af3d 	bne.w	800fb86 <_scanf_float+0x66>
 800fd0c:	f04f 0a02 	mov.w	sl, #2
 800fd10:	e7d2      	b.n	800fcb8 <_scanf_float+0x198>
 800fd12:	b975      	cbnz	r5, 800fd32 <_scanf_float+0x212>
 800fd14:	2f00      	cmp	r7, #0
 800fd16:	f47f af37 	bne.w	800fb88 <_scanf_float+0x68>
 800fd1a:	6822      	ldr	r2, [r4, #0]
 800fd1c:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800fd20:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800fd24:	f040 8103 	bne.w	800ff2e <_scanf_float+0x40e>
 800fd28:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800fd2c:	6022      	str	r2, [r4, #0]
 800fd2e:	2501      	movs	r5, #1
 800fd30:	e7c2      	b.n	800fcb8 <_scanf_float+0x198>
 800fd32:	2d03      	cmp	r5, #3
 800fd34:	d0e3      	beq.n	800fcfe <_scanf_float+0x1de>
 800fd36:	2d05      	cmp	r5, #5
 800fd38:	e7df      	b.n	800fcfa <_scanf_float+0x1da>
 800fd3a:	2d02      	cmp	r5, #2
 800fd3c:	f47f af23 	bne.w	800fb86 <_scanf_float+0x66>
 800fd40:	2503      	movs	r5, #3
 800fd42:	e7b9      	b.n	800fcb8 <_scanf_float+0x198>
 800fd44:	2d06      	cmp	r5, #6
 800fd46:	f47f af1e 	bne.w	800fb86 <_scanf_float+0x66>
 800fd4a:	2507      	movs	r5, #7
 800fd4c:	e7b4      	b.n	800fcb8 <_scanf_float+0x198>
 800fd4e:	6822      	ldr	r2, [r4, #0]
 800fd50:	0591      	lsls	r1, r2, #22
 800fd52:	f57f af18 	bpl.w	800fb86 <_scanf_float+0x66>
 800fd56:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800fd5a:	6022      	str	r2, [r4, #0]
 800fd5c:	9702      	str	r7, [sp, #8]
 800fd5e:	e7ab      	b.n	800fcb8 <_scanf_float+0x198>
 800fd60:	6822      	ldr	r2, [r4, #0]
 800fd62:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 800fd66:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800fd6a:	d005      	beq.n	800fd78 <_scanf_float+0x258>
 800fd6c:	0550      	lsls	r0, r2, #21
 800fd6e:	f57f af0a 	bpl.w	800fb86 <_scanf_float+0x66>
 800fd72:	2f00      	cmp	r7, #0
 800fd74:	f000 80db 	beq.w	800ff2e <_scanf_float+0x40e>
 800fd78:	0591      	lsls	r1, r2, #22
 800fd7a:	bf58      	it	pl
 800fd7c:	9902      	ldrpl	r1, [sp, #8]
 800fd7e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800fd82:	bf58      	it	pl
 800fd84:	1a79      	subpl	r1, r7, r1
 800fd86:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800fd8a:	bf58      	it	pl
 800fd8c:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800fd90:	6022      	str	r2, [r4, #0]
 800fd92:	2700      	movs	r7, #0
 800fd94:	e790      	b.n	800fcb8 <_scanf_float+0x198>
 800fd96:	f04f 0a03 	mov.w	sl, #3
 800fd9a:	e78d      	b.n	800fcb8 <_scanf_float+0x198>
 800fd9c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 800fda0:	4649      	mov	r1, r9
 800fda2:	4640      	mov	r0, r8
 800fda4:	4798      	blx	r3
 800fda6:	2800      	cmp	r0, #0
 800fda8:	f43f aedf 	beq.w	800fb6a <_scanf_float+0x4a>
 800fdac:	e6eb      	b.n	800fb86 <_scanf_float+0x66>
 800fdae:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800fdb2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800fdb6:	464a      	mov	r2, r9
 800fdb8:	4640      	mov	r0, r8
 800fdba:	4798      	blx	r3
 800fdbc:	6923      	ldr	r3, [r4, #16]
 800fdbe:	3b01      	subs	r3, #1
 800fdc0:	6123      	str	r3, [r4, #16]
 800fdc2:	e6eb      	b.n	800fb9c <_scanf_float+0x7c>
 800fdc4:	1e6b      	subs	r3, r5, #1
 800fdc6:	2b06      	cmp	r3, #6
 800fdc8:	d824      	bhi.n	800fe14 <_scanf_float+0x2f4>
 800fdca:	2d02      	cmp	r5, #2
 800fdcc:	d836      	bhi.n	800fe3c <_scanf_float+0x31c>
 800fdce:	9b01      	ldr	r3, [sp, #4]
 800fdd0:	429e      	cmp	r6, r3
 800fdd2:	f67f aee7 	bls.w	800fba4 <_scanf_float+0x84>
 800fdd6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800fdda:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800fdde:	464a      	mov	r2, r9
 800fde0:	4640      	mov	r0, r8
 800fde2:	4798      	blx	r3
 800fde4:	6923      	ldr	r3, [r4, #16]
 800fde6:	3b01      	subs	r3, #1
 800fde8:	6123      	str	r3, [r4, #16]
 800fdea:	e7f0      	b.n	800fdce <_scanf_float+0x2ae>
 800fdec:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800fdf0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 800fdf4:	464a      	mov	r2, r9
 800fdf6:	4640      	mov	r0, r8
 800fdf8:	4798      	blx	r3
 800fdfa:	6923      	ldr	r3, [r4, #16]
 800fdfc:	3b01      	subs	r3, #1
 800fdfe:	6123      	str	r3, [r4, #16]
 800fe00:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe04:	fa5f fa8a 	uxtb.w	sl, sl
 800fe08:	f1ba 0f02 	cmp.w	sl, #2
 800fe0c:	d1ee      	bne.n	800fdec <_scanf_float+0x2cc>
 800fe0e:	3d03      	subs	r5, #3
 800fe10:	b2ed      	uxtb	r5, r5
 800fe12:	1b76      	subs	r6, r6, r5
 800fe14:	6823      	ldr	r3, [r4, #0]
 800fe16:	05da      	lsls	r2, r3, #23
 800fe18:	d530      	bpl.n	800fe7c <_scanf_float+0x35c>
 800fe1a:	055b      	lsls	r3, r3, #21
 800fe1c:	d511      	bpl.n	800fe42 <_scanf_float+0x322>
 800fe1e:	9b01      	ldr	r3, [sp, #4]
 800fe20:	429e      	cmp	r6, r3
 800fe22:	f67f aebf 	bls.w	800fba4 <_scanf_float+0x84>
 800fe26:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800fe2a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800fe2e:	464a      	mov	r2, r9
 800fe30:	4640      	mov	r0, r8
 800fe32:	4798      	blx	r3
 800fe34:	6923      	ldr	r3, [r4, #16]
 800fe36:	3b01      	subs	r3, #1
 800fe38:	6123      	str	r3, [r4, #16]
 800fe3a:	e7f0      	b.n	800fe1e <_scanf_float+0x2fe>
 800fe3c:	46aa      	mov	sl, r5
 800fe3e:	46b3      	mov	fp, r6
 800fe40:	e7de      	b.n	800fe00 <_scanf_float+0x2e0>
 800fe42:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800fe46:	6923      	ldr	r3, [r4, #16]
 800fe48:	2965      	cmp	r1, #101	@ 0x65
 800fe4a:	f103 33ff 	add.w	r3, r3, #4294967295
 800fe4e:	f106 35ff 	add.w	r5, r6, #4294967295
 800fe52:	6123      	str	r3, [r4, #16]
 800fe54:	d00c      	beq.n	800fe70 <_scanf_float+0x350>
 800fe56:	2945      	cmp	r1, #69	@ 0x45
 800fe58:	d00a      	beq.n	800fe70 <_scanf_float+0x350>
 800fe5a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800fe5e:	464a      	mov	r2, r9
 800fe60:	4640      	mov	r0, r8
 800fe62:	4798      	blx	r3
 800fe64:	6923      	ldr	r3, [r4, #16]
 800fe66:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800fe6a:	3b01      	subs	r3, #1
 800fe6c:	1eb5      	subs	r5, r6, #2
 800fe6e:	6123      	str	r3, [r4, #16]
 800fe70:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800fe74:	464a      	mov	r2, r9
 800fe76:	4640      	mov	r0, r8
 800fe78:	4798      	blx	r3
 800fe7a:	462e      	mov	r6, r5
 800fe7c:	6822      	ldr	r2, [r4, #0]
 800fe7e:	f012 0210 	ands.w	r2, r2, #16
 800fe82:	d001      	beq.n	800fe88 <_scanf_float+0x368>
 800fe84:	2000      	movs	r0, #0
 800fe86:	e68e      	b.n	800fba6 <_scanf_float+0x86>
 800fe88:	7032      	strb	r2, [r6, #0]
 800fe8a:	6823      	ldr	r3, [r4, #0]
 800fe8c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800fe90:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800fe94:	d125      	bne.n	800fee2 <_scanf_float+0x3c2>
 800fe96:	9b02      	ldr	r3, [sp, #8]
 800fe98:	429f      	cmp	r7, r3
 800fe9a:	d00a      	beq.n	800feb2 <_scanf_float+0x392>
 800fe9c:	1bda      	subs	r2, r3, r7
 800fe9e:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 800fea2:	429e      	cmp	r6, r3
 800fea4:	bf28      	it	cs
 800fea6:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 800feaa:	4922      	ldr	r1, [pc, #136]	@ (800ff34 <_scanf_float+0x414>)
 800feac:	4630      	mov	r0, r6
 800feae:	f000 f93d 	bl	801012c <siprintf>
 800feb2:	9901      	ldr	r1, [sp, #4]
 800feb4:	2200      	movs	r2, #0
 800feb6:	4640      	mov	r0, r8
 800feb8:	f002 fc36 	bl	8012728 <_strtod_r>
 800febc:	9b03      	ldr	r3, [sp, #12]
 800febe:	6821      	ldr	r1, [r4, #0]
 800fec0:	681b      	ldr	r3, [r3, #0]
 800fec2:	f011 0f02 	tst.w	r1, #2
 800fec6:	ec57 6b10 	vmov	r6, r7, d0
 800feca:	f103 0204 	add.w	r2, r3, #4
 800fece:	d015      	beq.n	800fefc <_scanf_float+0x3dc>
 800fed0:	9903      	ldr	r1, [sp, #12]
 800fed2:	600a      	str	r2, [r1, #0]
 800fed4:	681b      	ldr	r3, [r3, #0]
 800fed6:	e9c3 6700 	strd	r6, r7, [r3]
 800feda:	68e3      	ldr	r3, [r4, #12]
 800fedc:	3301      	adds	r3, #1
 800fede:	60e3      	str	r3, [r4, #12]
 800fee0:	e7d0      	b.n	800fe84 <_scanf_float+0x364>
 800fee2:	9b04      	ldr	r3, [sp, #16]
 800fee4:	2b00      	cmp	r3, #0
 800fee6:	d0e4      	beq.n	800feb2 <_scanf_float+0x392>
 800fee8:	9905      	ldr	r1, [sp, #20]
 800feea:	230a      	movs	r3, #10
 800feec:	3101      	adds	r1, #1
 800feee:	4640      	mov	r0, r8
 800fef0:	f7ff f9be 	bl	800f270 <_strtol_r>
 800fef4:	9b04      	ldr	r3, [sp, #16]
 800fef6:	9e05      	ldr	r6, [sp, #20]
 800fef8:	1ac2      	subs	r2, r0, r3
 800fefa:	e7d0      	b.n	800fe9e <_scanf_float+0x37e>
 800fefc:	f011 0f04 	tst.w	r1, #4
 800ff00:	9903      	ldr	r1, [sp, #12]
 800ff02:	600a      	str	r2, [r1, #0]
 800ff04:	d1e6      	bne.n	800fed4 <_scanf_float+0x3b4>
 800ff06:	681d      	ldr	r5, [r3, #0]
 800ff08:	4632      	mov	r2, r6
 800ff0a:	463b      	mov	r3, r7
 800ff0c:	4630      	mov	r0, r6
 800ff0e:	4639      	mov	r1, r7
 800ff10:	f7f0 fde4 	bl	8000adc <__aeabi_dcmpun>
 800ff14:	b128      	cbz	r0, 800ff22 <_scanf_float+0x402>
 800ff16:	4808      	ldr	r0, [pc, #32]	@ (800ff38 <_scanf_float+0x418>)
 800ff18:	f000 f9fc 	bl	8010314 <nanf>
 800ff1c:	ed85 0a00 	vstr	s0, [r5]
 800ff20:	e7db      	b.n	800feda <_scanf_float+0x3ba>
 800ff22:	4630      	mov	r0, r6
 800ff24:	4639      	mov	r1, r7
 800ff26:	f7f0 fe37 	bl	8000b98 <__aeabi_d2f>
 800ff2a:	6028      	str	r0, [r5, #0]
 800ff2c:	e7d5      	b.n	800feda <_scanf_float+0x3ba>
 800ff2e:	2700      	movs	r7, #0
 800ff30:	e62e      	b.n	800fb90 <_scanf_float+0x70>
 800ff32:	bf00      	nop
 800ff34:	08019619 	.word	0x08019619
 800ff38:	0801975a 	.word	0x0801975a

0800ff3c <std>:
 800ff3c:	2300      	movs	r3, #0
 800ff3e:	b510      	push	{r4, lr}
 800ff40:	4604      	mov	r4, r0
 800ff42:	e9c0 3300 	strd	r3, r3, [r0]
 800ff46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ff4a:	6083      	str	r3, [r0, #8]
 800ff4c:	8181      	strh	r1, [r0, #12]
 800ff4e:	6643      	str	r3, [r0, #100]	@ 0x64
 800ff50:	81c2      	strh	r2, [r0, #14]
 800ff52:	6183      	str	r3, [r0, #24]
 800ff54:	4619      	mov	r1, r3
 800ff56:	2208      	movs	r2, #8
 800ff58:	305c      	adds	r0, #92	@ 0x5c
 800ff5a:	f000 f94c 	bl	80101f6 <memset>
 800ff5e:	4b0d      	ldr	r3, [pc, #52]	@ (800ff94 <std+0x58>)
 800ff60:	6263      	str	r3, [r4, #36]	@ 0x24
 800ff62:	4b0d      	ldr	r3, [pc, #52]	@ (800ff98 <std+0x5c>)
 800ff64:	62a3      	str	r3, [r4, #40]	@ 0x28
 800ff66:	4b0d      	ldr	r3, [pc, #52]	@ (800ff9c <std+0x60>)
 800ff68:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800ff6a:	4b0d      	ldr	r3, [pc, #52]	@ (800ffa0 <std+0x64>)
 800ff6c:	6323      	str	r3, [r4, #48]	@ 0x30
 800ff6e:	4b0d      	ldr	r3, [pc, #52]	@ (800ffa4 <std+0x68>)
 800ff70:	6224      	str	r4, [r4, #32]
 800ff72:	429c      	cmp	r4, r3
 800ff74:	d006      	beq.n	800ff84 <std+0x48>
 800ff76:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800ff7a:	4294      	cmp	r4, r2
 800ff7c:	d002      	beq.n	800ff84 <std+0x48>
 800ff7e:	33d0      	adds	r3, #208	@ 0xd0
 800ff80:	429c      	cmp	r4, r3
 800ff82:	d105      	bne.n	800ff90 <std+0x54>
 800ff84:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800ff88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff8c:	f000 b9b0 	b.w	80102f0 <__retarget_lock_init_recursive>
 800ff90:	bd10      	pop	{r4, pc}
 800ff92:	bf00      	nop
 800ff94:	08010171 	.word	0x08010171
 800ff98:	08010193 	.word	0x08010193
 800ff9c:	080101cb 	.word	0x080101cb
 800ffa0:	080101ef 	.word	0x080101ef
 800ffa4:	20005ae8 	.word	0x20005ae8

0800ffa8 <stdio_exit_handler>:
 800ffa8:	4a02      	ldr	r2, [pc, #8]	@ (800ffb4 <stdio_exit_handler+0xc>)
 800ffaa:	4903      	ldr	r1, [pc, #12]	@ (800ffb8 <stdio_exit_handler+0x10>)
 800ffac:	4803      	ldr	r0, [pc, #12]	@ (800ffbc <stdio_exit_handler+0x14>)
 800ffae:	f000 b869 	b.w	8010084 <_fwalk_sglue>
 800ffb2:	bf00      	nop
 800ffb4:	20000134 	.word	0x20000134
 800ffb8:	08012aed 	.word	0x08012aed
 800ffbc:	20000144 	.word	0x20000144

0800ffc0 <cleanup_stdio>:
 800ffc0:	6841      	ldr	r1, [r0, #4]
 800ffc2:	4b0c      	ldr	r3, [pc, #48]	@ (800fff4 <cleanup_stdio+0x34>)
 800ffc4:	4299      	cmp	r1, r3
 800ffc6:	b510      	push	{r4, lr}
 800ffc8:	4604      	mov	r4, r0
 800ffca:	d001      	beq.n	800ffd0 <cleanup_stdio+0x10>
 800ffcc:	f002 fd8e 	bl	8012aec <_fflush_r>
 800ffd0:	68a1      	ldr	r1, [r4, #8]
 800ffd2:	4b09      	ldr	r3, [pc, #36]	@ (800fff8 <cleanup_stdio+0x38>)
 800ffd4:	4299      	cmp	r1, r3
 800ffd6:	d002      	beq.n	800ffde <cleanup_stdio+0x1e>
 800ffd8:	4620      	mov	r0, r4
 800ffda:	f002 fd87 	bl	8012aec <_fflush_r>
 800ffde:	68e1      	ldr	r1, [r4, #12]
 800ffe0:	4b06      	ldr	r3, [pc, #24]	@ (800fffc <cleanup_stdio+0x3c>)
 800ffe2:	4299      	cmp	r1, r3
 800ffe4:	d004      	beq.n	800fff0 <cleanup_stdio+0x30>
 800ffe6:	4620      	mov	r0, r4
 800ffe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ffec:	f002 bd7e 	b.w	8012aec <_fflush_r>
 800fff0:	bd10      	pop	{r4, pc}
 800fff2:	bf00      	nop
 800fff4:	20005ae8 	.word	0x20005ae8
 800fff8:	20005b50 	.word	0x20005b50
 800fffc:	20005bb8 	.word	0x20005bb8

08010000 <global_stdio_init.part.0>:
 8010000:	b510      	push	{r4, lr}
 8010002:	4b0b      	ldr	r3, [pc, #44]	@ (8010030 <global_stdio_init.part.0+0x30>)
 8010004:	4c0b      	ldr	r4, [pc, #44]	@ (8010034 <global_stdio_init.part.0+0x34>)
 8010006:	4a0c      	ldr	r2, [pc, #48]	@ (8010038 <global_stdio_init.part.0+0x38>)
 8010008:	601a      	str	r2, [r3, #0]
 801000a:	4620      	mov	r0, r4
 801000c:	2200      	movs	r2, #0
 801000e:	2104      	movs	r1, #4
 8010010:	f7ff ff94 	bl	800ff3c <std>
 8010014:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8010018:	2201      	movs	r2, #1
 801001a:	2109      	movs	r1, #9
 801001c:	f7ff ff8e 	bl	800ff3c <std>
 8010020:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8010024:	2202      	movs	r2, #2
 8010026:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801002a:	2112      	movs	r1, #18
 801002c:	f7ff bf86 	b.w	800ff3c <std>
 8010030:	20005c20 	.word	0x20005c20
 8010034:	20005ae8 	.word	0x20005ae8
 8010038:	0800ffa9 	.word	0x0800ffa9

0801003c <__sfp_lock_acquire>:
 801003c:	4801      	ldr	r0, [pc, #4]	@ (8010044 <__sfp_lock_acquire+0x8>)
 801003e:	f000 b958 	b.w	80102f2 <__retarget_lock_acquire_recursive>
 8010042:	bf00      	nop
 8010044:	20005c29 	.word	0x20005c29

08010048 <__sfp_lock_release>:
 8010048:	4801      	ldr	r0, [pc, #4]	@ (8010050 <__sfp_lock_release+0x8>)
 801004a:	f000 b953 	b.w	80102f4 <__retarget_lock_release_recursive>
 801004e:	bf00      	nop
 8010050:	20005c29 	.word	0x20005c29

08010054 <__sinit>:
 8010054:	b510      	push	{r4, lr}
 8010056:	4604      	mov	r4, r0
 8010058:	f7ff fff0 	bl	801003c <__sfp_lock_acquire>
 801005c:	6a23      	ldr	r3, [r4, #32]
 801005e:	b11b      	cbz	r3, 8010068 <__sinit+0x14>
 8010060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010064:	f7ff bff0 	b.w	8010048 <__sfp_lock_release>
 8010068:	4b04      	ldr	r3, [pc, #16]	@ (801007c <__sinit+0x28>)
 801006a:	6223      	str	r3, [r4, #32]
 801006c:	4b04      	ldr	r3, [pc, #16]	@ (8010080 <__sinit+0x2c>)
 801006e:	681b      	ldr	r3, [r3, #0]
 8010070:	2b00      	cmp	r3, #0
 8010072:	d1f5      	bne.n	8010060 <__sinit+0xc>
 8010074:	f7ff ffc4 	bl	8010000 <global_stdio_init.part.0>
 8010078:	e7f2      	b.n	8010060 <__sinit+0xc>
 801007a:	bf00      	nop
 801007c:	0800ffc1 	.word	0x0800ffc1
 8010080:	20005c20 	.word	0x20005c20

08010084 <_fwalk_sglue>:
 8010084:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010088:	4607      	mov	r7, r0
 801008a:	4688      	mov	r8, r1
 801008c:	4614      	mov	r4, r2
 801008e:	2600      	movs	r6, #0
 8010090:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8010094:	f1b9 0901 	subs.w	r9, r9, #1
 8010098:	d505      	bpl.n	80100a6 <_fwalk_sglue+0x22>
 801009a:	6824      	ldr	r4, [r4, #0]
 801009c:	2c00      	cmp	r4, #0
 801009e:	d1f7      	bne.n	8010090 <_fwalk_sglue+0xc>
 80100a0:	4630      	mov	r0, r6
 80100a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80100a6:	89ab      	ldrh	r3, [r5, #12]
 80100a8:	2b01      	cmp	r3, #1
 80100aa:	d907      	bls.n	80100bc <_fwalk_sglue+0x38>
 80100ac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80100b0:	3301      	adds	r3, #1
 80100b2:	d003      	beq.n	80100bc <_fwalk_sglue+0x38>
 80100b4:	4629      	mov	r1, r5
 80100b6:	4638      	mov	r0, r7
 80100b8:	47c0      	blx	r8
 80100ba:	4306      	orrs	r6, r0
 80100bc:	3568      	adds	r5, #104	@ 0x68
 80100be:	e7e9      	b.n	8010094 <_fwalk_sglue+0x10>

080100c0 <sniprintf>:
 80100c0:	b40c      	push	{r2, r3}
 80100c2:	b530      	push	{r4, r5, lr}
 80100c4:	4b18      	ldr	r3, [pc, #96]	@ (8010128 <sniprintf+0x68>)
 80100c6:	1e0c      	subs	r4, r1, #0
 80100c8:	681d      	ldr	r5, [r3, #0]
 80100ca:	b09d      	sub	sp, #116	@ 0x74
 80100cc:	da08      	bge.n	80100e0 <sniprintf+0x20>
 80100ce:	238b      	movs	r3, #139	@ 0x8b
 80100d0:	602b      	str	r3, [r5, #0]
 80100d2:	f04f 30ff 	mov.w	r0, #4294967295
 80100d6:	b01d      	add	sp, #116	@ 0x74
 80100d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80100dc:	b002      	add	sp, #8
 80100de:	4770      	bx	lr
 80100e0:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80100e4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80100e8:	f04f 0300 	mov.w	r3, #0
 80100ec:	931b      	str	r3, [sp, #108]	@ 0x6c
 80100ee:	bf14      	ite	ne
 80100f0:	f104 33ff 	addne.w	r3, r4, #4294967295
 80100f4:	4623      	moveq	r3, r4
 80100f6:	9304      	str	r3, [sp, #16]
 80100f8:	9307      	str	r3, [sp, #28]
 80100fa:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80100fe:	9002      	str	r0, [sp, #8]
 8010100:	9006      	str	r0, [sp, #24]
 8010102:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010106:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8010108:	ab21      	add	r3, sp, #132	@ 0x84
 801010a:	a902      	add	r1, sp, #8
 801010c:	4628      	mov	r0, r5
 801010e:	9301      	str	r3, [sp, #4]
 8010110:	f002 fb6c 	bl	80127ec <_svfiprintf_r>
 8010114:	1c43      	adds	r3, r0, #1
 8010116:	bfbc      	itt	lt
 8010118:	238b      	movlt	r3, #139	@ 0x8b
 801011a:	602b      	strlt	r3, [r5, #0]
 801011c:	2c00      	cmp	r4, #0
 801011e:	d0da      	beq.n	80100d6 <sniprintf+0x16>
 8010120:	9b02      	ldr	r3, [sp, #8]
 8010122:	2200      	movs	r2, #0
 8010124:	701a      	strb	r2, [r3, #0]
 8010126:	e7d6      	b.n	80100d6 <sniprintf+0x16>
 8010128:	20000140 	.word	0x20000140

0801012c <siprintf>:
 801012c:	b40e      	push	{r1, r2, r3}
 801012e:	b510      	push	{r4, lr}
 8010130:	b09d      	sub	sp, #116	@ 0x74
 8010132:	ab1f      	add	r3, sp, #124	@ 0x7c
 8010134:	9002      	str	r0, [sp, #8]
 8010136:	9006      	str	r0, [sp, #24]
 8010138:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 801013c:	480a      	ldr	r0, [pc, #40]	@ (8010168 <siprintf+0x3c>)
 801013e:	9107      	str	r1, [sp, #28]
 8010140:	9104      	str	r1, [sp, #16]
 8010142:	490a      	ldr	r1, [pc, #40]	@ (801016c <siprintf+0x40>)
 8010144:	f853 2b04 	ldr.w	r2, [r3], #4
 8010148:	9105      	str	r1, [sp, #20]
 801014a:	2400      	movs	r4, #0
 801014c:	a902      	add	r1, sp, #8
 801014e:	6800      	ldr	r0, [r0, #0]
 8010150:	9301      	str	r3, [sp, #4]
 8010152:	941b      	str	r4, [sp, #108]	@ 0x6c
 8010154:	f002 fb4a 	bl	80127ec <_svfiprintf_r>
 8010158:	9b02      	ldr	r3, [sp, #8]
 801015a:	701c      	strb	r4, [r3, #0]
 801015c:	b01d      	add	sp, #116	@ 0x74
 801015e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010162:	b003      	add	sp, #12
 8010164:	4770      	bx	lr
 8010166:	bf00      	nop
 8010168:	20000140 	.word	0x20000140
 801016c:	ffff0208 	.word	0xffff0208

08010170 <__sread>:
 8010170:	b510      	push	{r4, lr}
 8010172:	460c      	mov	r4, r1
 8010174:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010178:	f000 f86c 	bl	8010254 <_read_r>
 801017c:	2800      	cmp	r0, #0
 801017e:	bfab      	itete	ge
 8010180:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8010182:	89a3      	ldrhlt	r3, [r4, #12]
 8010184:	181b      	addge	r3, r3, r0
 8010186:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801018a:	bfac      	ite	ge
 801018c:	6563      	strge	r3, [r4, #84]	@ 0x54
 801018e:	81a3      	strhlt	r3, [r4, #12]
 8010190:	bd10      	pop	{r4, pc}

08010192 <__swrite>:
 8010192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010196:	461f      	mov	r7, r3
 8010198:	898b      	ldrh	r3, [r1, #12]
 801019a:	05db      	lsls	r3, r3, #23
 801019c:	4605      	mov	r5, r0
 801019e:	460c      	mov	r4, r1
 80101a0:	4616      	mov	r6, r2
 80101a2:	d505      	bpl.n	80101b0 <__swrite+0x1e>
 80101a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80101a8:	2302      	movs	r3, #2
 80101aa:	2200      	movs	r2, #0
 80101ac:	f000 f840 	bl	8010230 <_lseek_r>
 80101b0:	89a3      	ldrh	r3, [r4, #12]
 80101b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80101b6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80101ba:	81a3      	strh	r3, [r4, #12]
 80101bc:	4632      	mov	r2, r6
 80101be:	463b      	mov	r3, r7
 80101c0:	4628      	mov	r0, r5
 80101c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80101c6:	f000 b857 	b.w	8010278 <_write_r>

080101ca <__sseek>:
 80101ca:	b510      	push	{r4, lr}
 80101cc:	460c      	mov	r4, r1
 80101ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80101d2:	f000 f82d 	bl	8010230 <_lseek_r>
 80101d6:	1c43      	adds	r3, r0, #1
 80101d8:	89a3      	ldrh	r3, [r4, #12]
 80101da:	bf15      	itete	ne
 80101dc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80101de:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80101e2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80101e6:	81a3      	strheq	r3, [r4, #12]
 80101e8:	bf18      	it	ne
 80101ea:	81a3      	strhne	r3, [r4, #12]
 80101ec:	bd10      	pop	{r4, pc}

080101ee <__sclose>:
 80101ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80101f2:	f000 b80d 	b.w	8010210 <_close_r>

080101f6 <memset>:
 80101f6:	4402      	add	r2, r0
 80101f8:	4603      	mov	r3, r0
 80101fa:	4293      	cmp	r3, r2
 80101fc:	d100      	bne.n	8010200 <memset+0xa>
 80101fe:	4770      	bx	lr
 8010200:	f803 1b01 	strb.w	r1, [r3], #1
 8010204:	e7f9      	b.n	80101fa <memset+0x4>
	...

08010208 <_localeconv_r>:
 8010208:	4800      	ldr	r0, [pc, #0]	@ (801020c <_localeconv_r+0x4>)
 801020a:	4770      	bx	lr
 801020c:	20000280 	.word	0x20000280

08010210 <_close_r>:
 8010210:	b538      	push	{r3, r4, r5, lr}
 8010212:	4d06      	ldr	r5, [pc, #24]	@ (801022c <_close_r+0x1c>)
 8010214:	2300      	movs	r3, #0
 8010216:	4604      	mov	r4, r0
 8010218:	4608      	mov	r0, r1
 801021a:	602b      	str	r3, [r5, #0]
 801021c:	f7f4 fd08 	bl	8004c30 <_close>
 8010220:	1c43      	adds	r3, r0, #1
 8010222:	d102      	bne.n	801022a <_close_r+0x1a>
 8010224:	682b      	ldr	r3, [r5, #0]
 8010226:	b103      	cbz	r3, 801022a <_close_r+0x1a>
 8010228:	6023      	str	r3, [r4, #0]
 801022a:	bd38      	pop	{r3, r4, r5, pc}
 801022c:	20005c24 	.word	0x20005c24

08010230 <_lseek_r>:
 8010230:	b538      	push	{r3, r4, r5, lr}
 8010232:	4d07      	ldr	r5, [pc, #28]	@ (8010250 <_lseek_r+0x20>)
 8010234:	4604      	mov	r4, r0
 8010236:	4608      	mov	r0, r1
 8010238:	4611      	mov	r1, r2
 801023a:	2200      	movs	r2, #0
 801023c:	602a      	str	r2, [r5, #0]
 801023e:	461a      	mov	r2, r3
 8010240:	f7f4 fd02 	bl	8004c48 <_lseek>
 8010244:	1c43      	adds	r3, r0, #1
 8010246:	d102      	bne.n	801024e <_lseek_r+0x1e>
 8010248:	682b      	ldr	r3, [r5, #0]
 801024a:	b103      	cbz	r3, 801024e <_lseek_r+0x1e>
 801024c:	6023      	str	r3, [r4, #0]
 801024e:	bd38      	pop	{r3, r4, r5, pc}
 8010250:	20005c24 	.word	0x20005c24

08010254 <_read_r>:
 8010254:	b538      	push	{r3, r4, r5, lr}
 8010256:	4d07      	ldr	r5, [pc, #28]	@ (8010274 <_read_r+0x20>)
 8010258:	4604      	mov	r4, r0
 801025a:	4608      	mov	r0, r1
 801025c:	4611      	mov	r1, r2
 801025e:	2200      	movs	r2, #0
 8010260:	602a      	str	r2, [r5, #0]
 8010262:	461a      	mov	r2, r3
 8010264:	f7f4 fcc8 	bl	8004bf8 <_read>
 8010268:	1c43      	adds	r3, r0, #1
 801026a:	d102      	bne.n	8010272 <_read_r+0x1e>
 801026c:	682b      	ldr	r3, [r5, #0]
 801026e:	b103      	cbz	r3, 8010272 <_read_r+0x1e>
 8010270:	6023      	str	r3, [r4, #0]
 8010272:	bd38      	pop	{r3, r4, r5, pc}
 8010274:	20005c24 	.word	0x20005c24

08010278 <_write_r>:
 8010278:	b538      	push	{r3, r4, r5, lr}
 801027a:	4d07      	ldr	r5, [pc, #28]	@ (8010298 <_write_r+0x20>)
 801027c:	4604      	mov	r4, r0
 801027e:	4608      	mov	r0, r1
 8010280:	4611      	mov	r1, r2
 8010282:	2200      	movs	r2, #0
 8010284:	602a      	str	r2, [r5, #0]
 8010286:	461a      	mov	r2, r3
 8010288:	f7f4 fcc4 	bl	8004c14 <_write>
 801028c:	1c43      	adds	r3, r0, #1
 801028e:	d102      	bne.n	8010296 <_write_r+0x1e>
 8010290:	682b      	ldr	r3, [r5, #0]
 8010292:	b103      	cbz	r3, 8010296 <_write_r+0x1e>
 8010294:	6023      	str	r3, [r4, #0]
 8010296:	bd38      	pop	{r3, r4, r5, pc}
 8010298:	20005c24 	.word	0x20005c24

0801029c <__errno>:
 801029c:	4b01      	ldr	r3, [pc, #4]	@ (80102a4 <__errno+0x8>)
 801029e:	6818      	ldr	r0, [r3, #0]
 80102a0:	4770      	bx	lr
 80102a2:	bf00      	nop
 80102a4:	20000140 	.word	0x20000140

080102a8 <__libc_init_array>:
 80102a8:	b570      	push	{r4, r5, r6, lr}
 80102aa:	4d0d      	ldr	r5, [pc, #52]	@ (80102e0 <__libc_init_array+0x38>)
 80102ac:	4c0d      	ldr	r4, [pc, #52]	@ (80102e4 <__libc_init_array+0x3c>)
 80102ae:	1b64      	subs	r4, r4, r5
 80102b0:	10a4      	asrs	r4, r4, #2
 80102b2:	2600      	movs	r6, #0
 80102b4:	42a6      	cmp	r6, r4
 80102b6:	d109      	bne.n	80102cc <__libc_init_array+0x24>
 80102b8:	4d0b      	ldr	r5, [pc, #44]	@ (80102e8 <__libc_init_array+0x40>)
 80102ba:	4c0c      	ldr	r4, [pc, #48]	@ (80102ec <__libc_init_array+0x44>)
 80102bc:	f005 fca0 	bl	8015c00 <_init>
 80102c0:	1b64      	subs	r4, r4, r5
 80102c2:	10a4      	asrs	r4, r4, #2
 80102c4:	2600      	movs	r6, #0
 80102c6:	42a6      	cmp	r6, r4
 80102c8:	d105      	bne.n	80102d6 <__libc_init_array+0x2e>
 80102ca:	bd70      	pop	{r4, r5, r6, pc}
 80102cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80102d0:	4798      	blx	r3
 80102d2:	3601      	adds	r6, #1
 80102d4:	e7ee      	b.n	80102b4 <__libc_init_array+0xc>
 80102d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80102da:	4798      	blx	r3
 80102dc:	3601      	adds	r6, #1
 80102de:	e7f2      	b.n	80102c6 <__libc_init_array+0x1e>
 80102e0:	08019b10 	.word	0x08019b10
 80102e4:	08019b10 	.word	0x08019b10
 80102e8:	08019b10 	.word	0x08019b10
 80102ec:	08019b14 	.word	0x08019b14

080102f0 <__retarget_lock_init_recursive>:
 80102f0:	4770      	bx	lr

080102f2 <__retarget_lock_acquire_recursive>:
 80102f2:	4770      	bx	lr

080102f4 <__retarget_lock_release_recursive>:
 80102f4:	4770      	bx	lr

080102f6 <memcpy>:
 80102f6:	440a      	add	r2, r1
 80102f8:	4291      	cmp	r1, r2
 80102fa:	f100 33ff 	add.w	r3, r0, #4294967295
 80102fe:	d100      	bne.n	8010302 <memcpy+0xc>
 8010300:	4770      	bx	lr
 8010302:	b510      	push	{r4, lr}
 8010304:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010308:	f803 4f01 	strb.w	r4, [r3, #1]!
 801030c:	4291      	cmp	r1, r2
 801030e:	d1f9      	bne.n	8010304 <memcpy+0xe>
 8010310:	bd10      	pop	{r4, pc}
	...

08010314 <nanf>:
 8010314:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 801031c <nanf+0x8>
 8010318:	4770      	bx	lr
 801031a:	bf00      	nop
 801031c:	7fc00000 	.word	0x7fc00000

08010320 <quorem>:
 8010320:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010324:	6903      	ldr	r3, [r0, #16]
 8010326:	690c      	ldr	r4, [r1, #16]
 8010328:	42a3      	cmp	r3, r4
 801032a:	4607      	mov	r7, r0
 801032c:	db7e      	blt.n	801042c <quorem+0x10c>
 801032e:	3c01      	subs	r4, #1
 8010330:	f101 0814 	add.w	r8, r1, #20
 8010334:	00a3      	lsls	r3, r4, #2
 8010336:	f100 0514 	add.w	r5, r0, #20
 801033a:	9300      	str	r3, [sp, #0]
 801033c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8010340:	9301      	str	r3, [sp, #4]
 8010342:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8010346:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801034a:	3301      	adds	r3, #1
 801034c:	429a      	cmp	r2, r3
 801034e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8010352:	fbb2 f6f3 	udiv	r6, r2, r3
 8010356:	d32e      	bcc.n	80103b6 <quorem+0x96>
 8010358:	f04f 0a00 	mov.w	sl, #0
 801035c:	46c4      	mov	ip, r8
 801035e:	46ae      	mov	lr, r5
 8010360:	46d3      	mov	fp, sl
 8010362:	f85c 3b04 	ldr.w	r3, [ip], #4
 8010366:	b298      	uxth	r0, r3
 8010368:	fb06 a000 	mla	r0, r6, r0, sl
 801036c:	0c02      	lsrs	r2, r0, #16
 801036e:	0c1b      	lsrs	r3, r3, #16
 8010370:	fb06 2303 	mla	r3, r6, r3, r2
 8010374:	f8de 2000 	ldr.w	r2, [lr]
 8010378:	b280      	uxth	r0, r0
 801037a:	b292      	uxth	r2, r2
 801037c:	1a12      	subs	r2, r2, r0
 801037e:	445a      	add	r2, fp
 8010380:	f8de 0000 	ldr.w	r0, [lr]
 8010384:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8010388:	b29b      	uxth	r3, r3
 801038a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 801038e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8010392:	b292      	uxth	r2, r2
 8010394:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8010398:	45e1      	cmp	r9, ip
 801039a:	f84e 2b04 	str.w	r2, [lr], #4
 801039e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80103a2:	d2de      	bcs.n	8010362 <quorem+0x42>
 80103a4:	9b00      	ldr	r3, [sp, #0]
 80103a6:	58eb      	ldr	r3, [r5, r3]
 80103a8:	b92b      	cbnz	r3, 80103b6 <quorem+0x96>
 80103aa:	9b01      	ldr	r3, [sp, #4]
 80103ac:	3b04      	subs	r3, #4
 80103ae:	429d      	cmp	r5, r3
 80103b0:	461a      	mov	r2, r3
 80103b2:	d32f      	bcc.n	8010414 <quorem+0xf4>
 80103b4:	613c      	str	r4, [r7, #16]
 80103b6:	4638      	mov	r0, r7
 80103b8:	f001 f9c6 	bl	8011748 <__mcmp>
 80103bc:	2800      	cmp	r0, #0
 80103be:	db25      	blt.n	801040c <quorem+0xec>
 80103c0:	4629      	mov	r1, r5
 80103c2:	2000      	movs	r0, #0
 80103c4:	f858 2b04 	ldr.w	r2, [r8], #4
 80103c8:	f8d1 c000 	ldr.w	ip, [r1]
 80103cc:	fa1f fe82 	uxth.w	lr, r2
 80103d0:	fa1f f38c 	uxth.w	r3, ip
 80103d4:	eba3 030e 	sub.w	r3, r3, lr
 80103d8:	4403      	add	r3, r0
 80103da:	0c12      	lsrs	r2, r2, #16
 80103dc:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80103e0:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80103e4:	b29b      	uxth	r3, r3
 80103e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80103ea:	45c1      	cmp	r9, r8
 80103ec:	f841 3b04 	str.w	r3, [r1], #4
 80103f0:	ea4f 4022 	mov.w	r0, r2, asr #16
 80103f4:	d2e6      	bcs.n	80103c4 <quorem+0xa4>
 80103f6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80103fa:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80103fe:	b922      	cbnz	r2, 801040a <quorem+0xea>
 8010400:	3b04      	subs	r3, #4
 8010402:	429d      	cmp	r5, r3
 8010404:	461a      	mov	r2, r3
 8010406:	d30b      	bcc.n	8010420 <quorem+0x100>
 8010408:	613c      	str	r4, [r7, #16]
 801040a:	3601      	adds	r6, #1
 801040c:	4630      	mov	r0, r6
 801040e:	b003      	add	sp, #12
 8010410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010414:	6812      	ldr	r2, [r2, #0]
 8010416:	3b04      	subs	r3, #4
 8010418:	2a00      	cmp	r2, #0
 801041a:	d1cb      	bne.n	80103b4 <quorem+0x94>
 801041c:	3c01      	subs	r4, #1
 801041e:	e7c6      	b.n	80103ae <quorem+0x8e>
 8010420:	6812      	ldr	r2, [r2, #0]
 8010422:	3b04      	subs	r3, #4
 8010424:	2a00      	cmp	r2, #0
 8010426:	d1ef      	bne.n	8010408 <quorem+0xe8>
 8010428:	3c01      	subs	r4, #1
 801042a:	e7ea      	b.n	8010402 <quorem+0xe2>
 801042c:	2000      	movs	r0, #0
 801042e:	e7ee      	b.n	801040e <quorem+0xee>

08010430 <_dtoa_r>:
 8010430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010434:	69c7      	ldr	r7, [r0, #28]
 8010436:	b097      	sub	sp, #92	@ 0x5c
 8010438:	ed8d 0b04 	vstr	d0, [sp, #16]
 801043c:	ec55 4b10 	vmov	r4, r5, d0
 8010440:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8010442:	9107      	str	r1, [sp, #28]
 8010444:	4681      	mov	r9, r0
 8010446:	920c      	str	r2, [sp, #48]	@ 0x30
 8010448:	9311      	str	r3, [sp, #68]	@ 0x44
 801044a:	b97f      	cbnz	r7, 801046c <_dtoa_r+0x3c>
 801044c:	2010      	movs	r0, #16
 801044e:	f000 fe09 	bl	8011064 <malloc>
 8010452:	4602      	mov	r2, r0
 8010454:	f8c9 001c 	str.w	r0, [r9, #28]
 8010458:	b920      	cbnz	r0, 8010464 <_dtoa_r+0x34>
 801045a:	4ba9      	ldr	r3, [pc, #676]	@ (8010700 <_dtoa_r+0x2d0>)
 801045c:	21ef      	movs	r1, #239	@ 0xef
 801045e:	48a9      	ldr	r0, [pc, #676]	@ (8010704 <_dtoa_r+0x2d4>)
 8010460:	f002 fbb2 	bl	8012bc8 <__assert_func>
 8010464:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8010468:	6007      	str	r7, [r0, #0]
 801046a:	60c7      	str	r7, [r0, #12]
 801046c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8010470:	6819      	ldr	r1, [r3, #0]
 8010472:	b159      	cbz	r1, 801048c <_dtoa_r+0x5c>
 8010474:	685a      	ldr	r2, [r3, #4]
 8010476:	604a      	str	r2, [r1, #4]
 8010478:	2301      	movs	r3, #1
 801047a:	4093      	lsls	r3, r2
 801047c:	608b      	str	r3, [r1, #8]
 801047e:	4648      	mov	r0, r9
 8010480:	f000 fee6 	bl	8011250 <_Bfree>
 8010484:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8010488:	2200      	movs	r2, #0
 801048a:	601a      	str	r2, [r3, #0]
 801048c:	1e2b      	subs	r3, r5, #0
 801048e:	bfb9      	ittee	lt
 8010490:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8010494:	9305      	strlt	r3, [sp, #20]
 8010496:	2300      	movge	r3, #0
 8010498:	6033      	strge	r3, [r6, #0]
 801049a:	9f05      	ldr	r7, [sp, #20]
 801049c:	4b9a      	ldr	r3, [pc, #616]	@ (8010708 <_dtoa_r+0x2d8>)
 801049e:	bfbc      	itt	lt
 80104a0:	2201      	movlt	r2, #1
 80104a2:	6032      	strlt	r2, [r6, #0]
 80104a4:	43bb      	bics	r3, r7
 80104a6:	d112      	bne.n	80104ce <_dtoa_r+0x9e>
 80104a8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80104aa:	f242 730f 	movw	r3, #9999	@ 0x270f
 80104ae:	6013      	str	r3, [r2, #0]
 80104b0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80104b4:	4323      	orrs	r3, r4
 80104b6:	f000 855a 	beq.w	8010f6e <_dtoa_r+0xb3e>
 80104ba:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80104bc:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 801071c <_dtoa_r+0x2ec>
 80104c0:	2b00      	cmp	r3, #0
 80104c2:	f000 855c 	beq.w	8010f7e <_dtoa_r+0xb4e>
 80104c6:	f10a 0303 	add.w	r3, sl, #3
 80104ca:	f000 bd56 	b.w	8010f7a <_dtoa_r+0xb4a>
 80104ce:	ed9d 7b04 	vldr	d7, [sp, #16]
 80104d2:	2200      	movs	r2, #0
 80104d4:	ec51 0b17 	vmov	r0, r1, d7
 80104d8:	2300      	movs	r3, #0
 80104da:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 80104de:	f7f0 facb 	bl	8000a78 <__aeabi_dcmpeq>
 80104e2:	4680      	mov	r8, r0
 80104e4:	b158      	cbz	r0, 80104fe <_dtoa_r+0xce>
 80104e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80104e8:	2301      	movs	r3, #1
 80104ea:	6013      	str	r3, [r2, #0]
 80104ec:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80104ee:	b113      	cbz	r3, 80104f6 <_dtoa_r+0xc6>
 80104f0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80104f2:	4b86      	ldr	r3, [pc, #536]	@ (801070c <_dtoa_r+0x2dc>)
 80104f4:	6013      	str	r3, [r2, #0]
 80104f6:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8010720 <_dtoa_r+0x2f0>
 80104fa:	f000 bd40 	b.w	8010f7e <_dtoa_r+0xb4e>
 80104fe:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8010502:	aa14      	add	r2, sp, #80	@ 0x50
 8010504:	a915      	add	r1, sp, #84	@ 0x54
 8010506:	4648      	mov	r0, r9
 8010508:	f001 fa3e 	bl	8011988 <__d2b>
 801050c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8010510:	9002      	str	r0, [sp, #8]
 8010512:	2e00      	cmp	r6, #0
 8010514:	d078      	beq.n	8010608 <_dtoa_r+0x1d8>
 8010516:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010518:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 801051c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010520:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8010524:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8010528:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 801052c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8010530:	4619      	mov	r1, r3
 8010532:	2200      	movs	r2, #0
 8010534:	4b76      	ldr	r3, [pc, #472]	@ (8010710 <_dtoa_r+0x2e0>)
 8010536:	f7ef fe7f 	bl	8000238 <__aeabi_dsub>
 801053a:	a36b      	add	r3, pc, #428	@ (adr r3, 80106e8 <_dtoa_r+0x2b8>)
 801053c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010540:	f7f0 f832 	bl	80005a8 <__aeabi_dmul>
 8010544:	a36a      	add	r3, pc, #424	@ (adr r3, 80106f0 <_dtoa_r+0x2c0>)
 8010546:	e9d3 2300 	ldrd	r2, r3, [r3]
 801054a:	f7ef fe77 	bl	800023c <__adddf3>
 801054e:	4604      	mov	r4, r0
 8010550:	4630      	mov	r0, r6
 8010552:	460d      	mov	r5, r1
 8010554:	f7ef ffbe 	bl	80004d4 <__aeabi_i2d>
 8010558:	a367      	add	r3, pc, #412	@ (adr r3, 80106f8 <_dtoa_r+0x2c8>)
 801055a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801055e:	f7f0 f823 	bl	80005a8 <__aeabi_dmul>
 8010562:	4602      	mov	r2, r0
 8010564:	460b      	mov	r3, r1
 8010566:	4620      	mov	r0, r4
 8010568:	4629      	mov	r1, r5
 801056a:	f7ef fe67 	bl	800023c <__adddf3>
 801056e:	4604      	mov	r4, r0
 8010570:	460d      	mov	r5, r1
 8010572:	f7f0 fac9 	bl	8000b08 <__aeabi_d2iz>
 8010576:	2200      	movs	r2, #0
 8010578:	4607      	mov	r7, r0
 801057a:	2300      	movs	r3, #0
 801057c:	4620      	mov	r0, r4
 801057e:	4629      	mov	r1, r5
 8010580:	f7f0 fa84 	bl	8000a8c <__aeabi_dcmplt>
 8010584:	b140      	cbz	r0, 8010598 <_dtoa_r+0x168>
 8010586:	4638      	mov	r0, r7
 8010588:	f7ef ffa4 	bl	80004d4 <__aeabi_i2d>
 801058c:	4622      	mov	r2, r4
 801058e:	462b      	mov	r3, r5
 8010590:	f7f0 fa72 	bl	8000a78 <__aeabi_dcmpeq>
 8010594:	b900      	cbnz	r0, 8010598 <_dtoa_r+0x168>
 8010596:	3f01      	subs	r7, #1
 8010598:	2f16      	cmp	r7, #22
 801059a:	d852      	bhi.n	8010642 <_dtoa_r+0x212>
 801059c:	4b5d      	ldr	r3, [pc, #372]	@ (8010714 <_dtoa_r+0x2e4>)
 801059e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80105a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105a6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80105aa:	f7f0 fa6f 	bl	8000a8c <__aeabi_dcmplt>
 80105ae:	2800      	cmp	r0, #0
 80105b0:	d049      	beq.n	8010646 <_dtoa_r+0x216>
 80105b2:	3f01      	subs	r7, #1
 80105b4:	2300      	movs	r3, #0
 80105b6:	9310      	str	r3, [sp, #64]	@ 0x40
 80105b8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80105ba:	1b9b      	subs	r3, r3, r6
 80105bc:	1e5a      	subs	r2, r3, #1
 80105be:	bf45      	ittet	mi
 80105c0:	f1c3 0301 	rsbmi	r3, r3, #1
 80105c4:	9300      	strmi	r3, [sp, #0]
 80105c6:	2300      	movpl	r3, #0
 80105c8:	2300      	movmi	r3, #0
 80105ca:	9206      	str	r2, [sp, #24]
 80105cc:	bf54      	ite	pl
 80105ce:	9300      	strpl	r3, [sp, #0]
 80105d0:	9306      	strmi	r3, [sp, #24]
 80105d2:	2f00      	cmp	r7, #0
 80105d4:	db39      	blt.n	801064a <_dtoa_r+0x21a>
 80105d6:	9b06      	ldr	r3, [sp, #24]
 80105d8:	970d      	str	r7, [sp, #52]	@ 0x34
 80105da:	443b      	add	r3, r7
 80105dc:	9306      	str	r3, [sp, #24]
 80105de:	2300      	movs	r3, #0
 80105e0:	9308      	str	r3, [sp, #32]
 80105e2:	9b07      	ldr	r3, [sp, #28]
 80105e4:	2b09      	cmp	r3, #9
 80105e6:	d863      	bhi.n	80106b0 <_dtoa_r+0x280>
 80105e8:	2b05      	cmp	r3, #5
 80105ea:	bfc4      	itt	gt
 80105ec:	3b04      	subgt	r3, #4
 80105ee:	9307      	strgt	r3, [sp, #28]
 80105f0:	9b07      	ldr	r3, [sp, #28]
 80105f2:	f1a3 0302 	sub.w	r3, r3, #2
 80105f6:	bfcc      	ite	gt
 80105f8:	2400      	movgt	r4, #0
 80105fa:	2401      	movle	r4, #1
 80105fc:	2b03      	cmp	r3, #3
 80105fe:	d863      	bhi.n	80106c8 <_dtoa_r+0x298>
 8010600:	e8df f003 	tbb	[pc, r3]
 8010604:	2b375452 	.word	0x2b375452
 8010608:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 801060c:	441e      	add	r6, r3
 801060e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8010612:	2b20      	cmp	r3, #32
 8010614:	bfc1      	itttt	gt
 8010616:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 801061a:	409f      	lslgt	r7, r3
 801061c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8010620:	fa24 f303 	lsrgt.w	r3, r4, r3
 8010624:	bfd6      	itet	le
 8010626:	f1c3 0320 	rsble	r3, r3, #32
 801062a:	ea47 0003 	orrgt.w	r0, r7, r3
 801062e:	fa04 f003 	lslle.w	r0, r4, r3
 8010632:	f7ef ff3f 	bl	80004b4 <__aeabi_ui2d>
 8010636:	2201      	movs	r2, #1
 8010638:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 801063c:	3e01      	subs	r6, #1
 801063e:	9212      	str	r2, [sp, #72]	@ 0x48
 8010640:	e776      	b.n	8010530 <_dtoa_r+0x100>
 8010642:	2301      	movs	r3, #1
 8010644:	e7b7      	b.n	80105b6 <_dtoa_r+0x186>
 8010646:	9010      	str	r0, [sp, #64]	@ 0x40
 8010648:	e7b6      	b.n	80105b8 <_dtoa_r+0x188>
 801064a:	9b00      	ldr	r3, [sp, #0]
 801064c:	1bdb      	subs	r3, r3, r7
 801064e:	9300      	str	r3, [sp, #0]
 8010650:	427b      	negs	r3, r7
 8010652:	9308      	str	r3, [sp, #32]
 8010654:	2300      	movs	r3, #0
 8010656:	930d      	str	r3, [sp, #52]	@ 0x34
 8010658:	e7c3      	b.n	80105e2 <_dtoa_r+0x1b2>
 801065a:	2301      	movs	r3, #1
 801065c:	9309      	str	r3, [sp, #36]	@ 0x24
 801065e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010660:	eb07 0b03 	add.w	fp, r7, r3
 8010664:	f10b 0301 	add.w	r3, fp, #1
 8010668:	2b01      	cmp	r3, #1
 801066a:	9303      	str	r3, [sp, #12]
 801066c:	bfb8      	it	lt
 801066e:	2301      	movlt	r3, #1
 8010670:	e006      	b.n	8010680 <_dtoa_r+0x250>
 8010672:	2301      	movs	r3, #1
 8010674:	9309      	str	r3, [sp, #36]	@ 0x24
 8010676:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010678:	2b00      	cmp	r3, #0
 801067a:	dd28      	ble.n	80106ce <_dtoa_r+0x29e>
 801067c:	469b      	mov	fp, r3
 801067e:	9303      	str	r3, [sp, #12]
 8010680:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8010684:	2100      	movs	r1, #0
 8010686:	2204      	movs	r2, #4
 8010688:	f102 0514 	add.w	r5, r2, #20
 801068c:	429d      	cmp	r5, r3
 801068e:	d926      	bls.n	80106de <_dtoa_r+0x2ae>
 8010690:	6041      	str	r1, [r0, #4]
 8010692:	4648      	mov	r0, r9
 8010694:	f000 fd9c 	bl	80111d0 <_Balloc>
 8010698:	4682      	mov	sl, r0
 801069a:	2800      	cmp	r0, #0
 801069c:	d142      	bne.n	8010724 <_dtoa_r+0x2f4>
 801069e:	4b1e      	ldr	r3, [pc, #120]	@ (8010718 <_dtoa_r+0x2e8>)
 80106a0:	4602      	mov	r2, r0
 80106a2:	f240 11af 	movw	r1, #431	@ 0x1af
 80106a6:	e6da      	b.n	801045e <_dtoa_r+0x2e>
 80106a8:	2300      	movs	r3, #0
 80106aa:	e7e3      	b.n	8010674 <_dtoa_r+0x244>
 80106ac:	2300      	movs	r3, #0
 80106ae:	e7d5      	b.n	801065c <_dtoa_r+0x22c>
 80106b0:	2401      	movs	r4, #1
 80106b2:	2300      	movs	r3, #0
 80106b4:	9307      	str	r3, [sp, #28]
 80106b6:	9409      	str	r4, [sp, #36]	@ 0x24
 80106b8:	f04f 3bff 	mov.w	fp, #4294967295
 80106bc:	2200      	movs	r2, #0
 80106be:	f8cd b00c 	str.w	fp, [sp, #12]
 80106c2:	2312      	movs	r3, #18
 80106c4:	920c      	str	r2, [sp, #48]	@ 0x30
 80106c6:	e7db      	b.n	8010680 <_dtoa_r+0x250>
 80106c8:	2301      	movs	r3, #1
 80106ca:	9309      	str	r3, [sp, #36]	@ 0x24
 80106cc:	e7f4      	b.n	80106b8 <_dtoa_r+0x288>
 80106ce:	f04f 0b01 	mov.w	fp, #1
 80106d2:	f8cd b00c 	str.w	fp, [sp, #12]
 80106d6:	465b      	mov	r3, fp
 80106d8:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 80106dc:	e7d0      	b.n	8010680 <_dtoa_r+0x250>
 80106de:	3101      	adds	r1, #1
 80106e0:	0052      	lsls	r2, r2, #1
 80106e2:	e7d1      	b.n	8010688 <_dtoa_r+0x258>
 80106e4:	f3af 8000 	nop.w
 80106e8:	636f4361 	.word	0x636f4361
 80106ec:	3fd287a7 	.word	0x3fd287a7
 80106f0:	8b60c8b3 	.word	0x8b60c8b3
 80106f4:	3fc68a28 	.word	0x3fc68a28
 80106f8:	509f79fb 	.word	0x509f79fb
 80106fc:	3fd34413 	.word	0x3fd34413
 8010700:	0801962b 	.word	0x0801962b
 8010704:	08019642 	.word	0x08019642
 8010708:	7ff00000 	.word	0x7ff00000
 801070c:	080195f6 	.word	0x080195f6
 8010710:	3ff80000 	.word	0x3ff80000
 8010714:	080197f0 	.word	0x080197f0
 8010718:	0801969a 	.word	0x0801969a
 801071c:	08019627 	.word	0x08019627
 8010720:	080195f5 	.word	0x080195f5
 8010724:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8010728:	6018      	str	r0, [r3, #0]
 801072a:	9b03      	ldr	r3, [sp, #12]
 801072c:	2b0e      	cmp	r3, #14
 801072e:	f200 80a1 	bhi.w	8010874 <_dtoa_r+0x444>
 8010732:	2c00      	cmp	r4, #0
 8010734:	f000 809e 	beq.w	8010874 <_dtoa_r+0x444>
 8010738:	2f00      	cmp	r7, #0
 801073a:	dd33      	ble.n	80107a4 <_dtoa_r+0x374>
 801073c:	4b9c      	ldr	r3, [pc, #624]	@ (80109b0 <_dtoa_r+0x580>)
 801073e:	f007 020f 	and.w	r2, r7, #15
 8010742:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010746:	ed93 7b00 	vldr	d7, [r3]
 801074a:	05f8      	lsls	r0, r7, #23
 801074c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8010750:	ea4f 1427 	mov.w	r4, r7, asr #4
 8010754:	d516      	bpl.n	8010784 <_dtoa_r+0x354>
 8010756:	4b97      	ldr	r3, [pc, #604]	@ (80109b4 <_dtoa_r+0x584>)
 8010758:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801075c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8010760:	f7f0 f84c 	bl	80007fc <__aeabi_ddiv>
 8010764:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010768:	f004 040f 	and.w	r4, r4, #15
 801076c:	2603      	movs	r6, #3
 801076e:	4d91      	ldr	r5, [pc, #580]	@ (80109b4 <_dtoa_r+0x584>)
 8010770:	b954      	cbnz	r4, 8010788 <_dtoa_r+0x358>
 8010772:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010776:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801077a:	f7f0 f83f 	bl	80007fc <__aeabi_ddiv>
 801077e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010782:	e028      	b.n	80107d6 <_dtoa_r+0x3a6>
 8010784:	2602      	movs	r6, #2
 8010786:	e7f2      	b.n	801076e <_dtoa_r+0x33e>
 8010788:	07e1      	lsls	r1, r4, #31
 801078a:	d508      	bpl.n	801079e <_dtoa_r+0x36e>
 801078c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010790:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010794:	f7ef ff08 	bl	80005a8 <__aeabi_dmul>
 8010798:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 801079c:	3601      	adds	r6, #1
 801079e:	1064      	asrs	r4, r4, #1
 80107a0:	3508      	adds	r5, #8
 80107a2:	e7e5      	b.n	8010770 <_dtoa_r+0x340>
 80107a4:	f000 80af 	beq.w	8010906 <_dtoa_r+0x4d6>
 80107a8:	427c      	negs	r4, r7
 80107aa:	4b81      	ldr	r3, [pc, #516]	@ (80109b0 <_dtoa_r+0x580>)
 80107ac:	4d81      	ldr	r5, [pc, #516]	@ (80109b4 <_dtoa_r+0x584>)
 80107ae:	f004 020f 	and.w	r2, r4, #15
 80107b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80107b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107ba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80107be:	f7ef fef3 	bl	80005a8 <__aeabi_dmul>
 80107c2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80107c6:	1124      	asrs	r4, r4, #4
 80107c8:	2300      	movs	r3, #0
 80107ca:	2602      	movs	r6, #2
 80107cc:	2c00      	cmp	r4, #0
 80107ce:	f040 808f 	bne.w	80108f0 <_dtoa_r+0x4c0>
 80107d2:	2b00      	cmp	r3, #0
 80107d4:	d1d3      	bne.n	801077e <_dtoa_r+0x34e>
 80107d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80107d8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80107dc:	2b00      	cmp	r3, #0
 80107de:	f000 8094 	beq.w	801090a <_dtoa_r+0x4da>
 80107e2:	4b75      	ldr	r3, [pc, #468]	@ (80109b8 <_dtoa_r+0x588>)
 80107e4:	2200      	movs	r2, #0
 80107e6:	4620      	mov	r0, r4
 80107e8:	4629      	mov	r1, r5
 80107ea:	f7f0 f94f 	bl	8000a8c <__aeabi_dcmplt>
 80107ee:	2800      	cmp	r0, #0
 80107f0:	f000 808b 	beq.w	801090a <_dtoa_r+0x4da>
 80107f4:	9b03      	ldr	r3, [sp, #12]
 80107f6:	2b00      	cmp	r3, #0
 80107f8:	f000 8087 	beq.w	801090a <_dtoa_r+0x4da>
 80107fc:	f1bb 0f00 	cmp.w	fp, #0
 8010800:	dd34      	ble.n	801086c <_dtoa_r+0x43c>
 8010802:	4620      	mov	r0, r4
 8010804:	4b6d      	ldr	r3, [pc, #436]	@ (80109bc <_dtoa_r+0x58c>)
 8010806:	2200      	movs	r2, #0
 8010808:	4629      	mov	r1, r5
 801080a:	f7ef fecd 	bl	80005a8 <__aeabi_dmul>
 801080e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010812:	f107 38ff 	add.w	r8, r7, #4294967295
 8010816:	3601      	adds	r6, #1
 8010818:	465c      	mov	r4, fp
 801081a:	4630      	mov	r0, r6
 801081c:	f7ef fe5a 	bl	80004d4 <__aeabi_i2d>
 8010820:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010824:	f7ef fec0 	bl	80005a8 <__aeabi_dmul>
 8010828:	4b65      	ldr	r3, [pc, #404]	@ (80109c0 <_dtoa_r+0x590>)
 801082a:	2200      	movs	r2, #0
 801082c:	f7ef fd06 	bl	800023c <__adddf3>
 8010830:	4605      	mov	r5, r0
 8010832:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8010836:	2c00      	cmp	r4, #0
 8010838:	d16a      	bne.n	8010910 <_dtoa_r+0x4e0>
 801083a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801083e:	4b61      	ldr	r3, [pc, #388]	@ (80109c4 <_dtoa_r+0x594>)
 8010840:	2200      	movs	r2, #0
 8010842:	f7ef fcf9 	bl	8000238 <__aeabi_dsub>
 8010846:	4602      	mov	r2, r0
 8010848:	460b      	mov	r3, r1
 801084a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801084e:	462a      	mov	r2, r5
 8010850:	4633      	mov	r3, r6
 8010852:	f7f0 f939 	bl	8000ac8 <__aeabi_dcmpgt>
 8010856:	2800      	cmp	r0, #0
 8010858:	f040 8298 	bne.w	8010d8c <_dtoa_r+0x95c>
 801085c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010860:	462a      	mov	r2, r5
 8010862:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8010866:	f7f0 f911 	bl	8000a8c <__aeabi_dcmplt>
 801086a:	bb38      	cbnz	r0, 80108bc <_dtoa_r+0x48c>
 801086c:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8010870:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8010874:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8010876:	2b00      	cmp	r3, #0
 8010878:	f2c0 8157 	blt.w	8010b2a <_dtoa_r+0x6fa>
 801087c:	2f0e      	cmp	r7, #14
 801087e:	f300 8154 	bgt.w	8010b2a <_dtoa_r+0x6fa>
 8010882:	4b4b      	ldr	r3, [pc, #300]	@ (80109b0 <_dtoa_r+0x580>)
 8010884:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8010888:	ed93 7b00 	vldr	d7, [r3]
 801088c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801088e:	2b00      	cmp	r3, #0
 8010890:	ed8d 7b00 	vstr	d7, [sp]
 8010894:	f280 80e5 	bge.w	8010a62 <_dtoa_r+0x632>
 8010898:	9b03      	ldr	r3, [sp, #12]
 801089a:	2b00      	cmp	r3, #0
 801089c:	f300 80e1 	bgt.w	8010a62 <_dtoa_r+0x632>
 80108a0:	d10c      	bne.n	80108bc <_dtoa_r+0x48c>
 80108a2:	4b48      	ldr	r3, [pc, #288]	@ (80109c4 <_dtoa_r+0x594>)
 80108a4:	2200      	movs	r2, #0
 80108a6:	ec51 0b17 	vmov	r0, r1, d7
 80108aa:	f7ef fe7d 	bl	80005a8 <__aeabi_dmul>
 80108ae:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80108b2:	f7f0 f8ff 	bl	8000ab4 <__aeabi_dcmpge>
 80108b6:	2800      	cmp	r0, #0
 80108b8:	f000 8266 	beq.w	8010d88 <_dtoa_r+0x958>
 80108bc:	2400      	movs	r4, #0
 80108be:	4625      	mov	r5, r4
 80108c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80108c2:	4656      	mov	r6, sl
 80108c4:	ea6f 0803 	mvn.w	r8, r3
 80108c8:	2700      	movs	r7, #0
 80108ca:	4621      	mov	r1, r4
 80108cc:	4648      	mov	r0, r9
 80108ce:	f000 fcbf 	bl	8011250 <_Bfree>
 80108d2:	2d00      	cmp	r5, #0
 80108d4:	f000 80bd 	beq.w	8010a52 <_dtoa_r+0x622>
 80108d8:	b12f      	cbz	r7, 80108e6 <_dtoa_r+0x4b6>
 80108da:	42af      	cmp	r7, r5
 80108dc:	d003      	beq.n	80108e6 <_dtoa_r+0x4b6>
 80108de:	4639      	mov	r1, r7
 80108e0:	4648      	mov	r0, r9
 80108e2:	f000 fcb5 	bl	8011250 <_Bfree>
 80108e6:	4629      	mov	r1, r5
 80108e8:	4648      	mov	r0, r9
 80108ea:	f000 fcb1 	bl	8011250 <_Bfree>
 80108ee:	e0b0      	b.n	8010a52 <_dtoa_r+0x622>
 80108f0:	07e2      	lsls	r2, r4, #31
 80108f2:	d505      	bpl.n	8010900 <_dtoa_r+0x4d0>
 80108f4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80108f8:	f7ef fe56 	bl	80005a8 <__aeabi_dmul>
 80108fc:	3601      	adds	r6, #1
 80108fe:	2301      	movs	r3, #1
 8010900:	1064      	asrs	r4, r4, #1
 8010902:	3508      	adds	r5, #8
 8010904:	e762      	b.n	80107cc <_dtoa_r+0x39c>
 8010906:	2602      	movs	r6, #2
 8010908:	e765      	b.n	80107d6 <_dtoa_r+0x3a6>
 801090a:	9c03      	ldr	r4, [sp, #12]
 801090c:	46b8      	mov	r8, r7
 801090e:	e784      	b.n	801081a <_dtoa_r+0x3ea>
 8010910:	4b27      	ldr	r3, [pc, #156]	@ (80109b0 <_dtoa_r+0x580>)
 8010912:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8010914:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010918:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801091c:	4454      	add	r4, sl
 801091e:	2900      	cmp	r1, #0
 8010920:	d054      	beq.n	80109cc <_dtoa_r+0x59c>
 8010922:	4929      	ldr	r1, [pc, #164]	@ (80109c8 <_dtoa_r+0x598>)
 8010924:	2000      	movs	r0, #0
 8010926:	f7ef ff69 	bl	80007fc <__aeabi_ddiv>
 801092a:	4633      	mov	r3, r6
 801092c:	462a      	mov	r2, r5
 801092e:	f7ef fc83 	bl	8000238 <__aeabi_dsub>
 8010932:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8010936:	4656      	mov	r6, sl
 8010938:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801093c:	f7f0 f8e4 	bl	8000b08 <__aeabi_d2iz>
 8010940:	4605      	mov	r5, r0
 8010942:	f7ef fdc7 	bl	80004d4 <__aeabi_i2d>
 8010946:	4602      	mov	r2, r0
 8010948:	460b      	mov	r3, r1
 801094a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801094e:	f7ef fc73 	bl	8000238 <__aeabi_dsub>
 8010952:	3530      	adds	r5, #48	@ 0x30
 8010954:	4602      	mov	r2, r0
 8010956:	460b      	mov	r3, r1
 8010958:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801095c:	f806 5b01 	strb.w	r5, [r6], #1
 8010960:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010964:	f7f0 f892 	bl	8000a8c <__aeabi_dcmplt>
 8010968:	2800      	cmp	r0, #0
 801096a:	d172      	bne.n	8010a52 <_dtoa_r+0x622>
 801096c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010970:	4911      	ldr	r1, [pc, #68]	@ (80109b8 <_dtoa_r+0x588>)
 8010972:	2000      	movs	r0, #0
 8010974:	f7ef fc60 	bl	8000238 <__aeabi_dsub>
 8010978:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 801097c:	f7f0 f886 	bl	8000a8c <__aeabi_dcmplt>
 8010980:	2800      	cmp	r0, #0
 8010982:	f040 80b4 	bne.w	8010aee <_dtoa_r+0x6be>
 8010986:	42a6      	cmp	r6, r4
 8010988:	f43f af70 	beq.w	801086c <_dtoa_r+0x43c>
 801098c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010990:	4b0a      	ldr	r3, [pc, #40]	@ (80109bc <_dtoa_r+0x58c>)
 8010992:	2200      	movs	r2, #0
 8010994:	f7ef fe08 	bl	80005a8 <__aeabi_dmul>
 8010998:	4b08      	ldr	r3, [pc, #32]	@ (80109bc <_dtoa_r+0x58c>)
 801099a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 801099e:	2200      	movs	r2, #0
 80109a0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80109a4:	f7ef fe00 	bl	80005a8 <__aeabi_dmul>
 80109a8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80109ac:	e7c4      	b.n	8010938 <_dtoa_r+0x508>
 80109ae:	bf00      	nop
 80109b0:	080197f0 	.word	0x080197f0
 80109b4:	080197c8 	.word	0x080197c8
 80109b8:	3ff00000 	.word	0x3ff00000
 80109bc:	40240000 	.word	0x40240000
 80109c0:	401c0000 	.word	0x401c0000
 80109c4:	40140000 	.word	0x40140000
 80109c8:	3fe00000 	.word	0x3fe00000
 80109cc:	4631      	mov	r1, r6
 80109ce:	4628      	mov	r0, r5
 80109d0:	f7ef fdea 	bl	80005a8 <__aeabi_dmul>
 80109d4:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80109d8:	9413      	str	r4, [sp, #76]	@ 0x4c
 80109da:	4656      	mov	r6, sl
 80109dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80109e0:	f7f0 f892 	bl	8000b08 <__aeabi_d2iz>
 80109e4:	4605      	mov	r5, r0
 80109e6:	f7ef fd75 	bl	80004d4 <__aeabi_i2d>
 80109ea:	4602      	mov	r2, r0
 80109ec:	460b      	mov	r3, r1
 80109ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80109f2:	f7ef fc21 	bl	8000238 <__aeabi_dsub>
 80109f6:	3530      	adds	r5, #48	@ 0x30
 80109f8:	f806 5b01 	strb.w	r5, [r6], #1
 80109fc:	4602      	mov	r2, r0
 80109fe:	460b      	mov	r3, r1
 8010a00:	42a6      	cmp	r6, r4
 8010a02:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010a06:	f04f 0200 	mov.w	r2, #0
 8010a0a:	d124      	bne.n	8010a56 <_dtoa_r+0x626>
 8010a0c:	4baf      	ldr	r3, [pc, #700]	@ (8010ccc <_dtoa_r+0x89c>)
 8010a0e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8010a12:	f7ef fc13 	bl	800023c <__adddf3>
 8010a16:	4602      	mov	r2, r0
 8010a18:	460b      	mov	r3, r1
 8010a1a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010a1e:	f7f0 f853 	bl	8000ac8 <__aeabi_dcmpgt>
 8010a22:	2800      	cmp	r0, #0
 8010a24:	d163      	bne.n	8010aee <_dtoa_r+0x6be>
 8010a26:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8010a2a:	49a8      	ldr	r1, [pc, #672]	@ (8010ccc <_dtoa_r+0x89c>)
 8010a2c:	2000      	movs	r0, #0
 8010a2e:	f7ef fc03 	bl	8000238 <__aeabi_dsub>
 8010a32:	4602      	mov	r2, r0
 8010a34:	460b      	mov	r3, r1
 8010a36:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010a3a:	f7f0 f827 	bl	8000a8c <__aeabi_dcmplt>
 8010a3e:	2800      	cmp	r0, #0
 8010a40:	f43f af14 	beq.w	801086c <_dtoa_r+0x43c>
 8010a44:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010a46:	1e73      	subs	r3, r6, #1
 8010a48:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010a4a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8010a4e:	2b30      	cmp	r3, #48	@ 0x30
 8010a50:	d0f8      	beq.n	8010a44 <_dtoa_r+0x614>
 8010a52:	4647      	mov	r7, r8
 8010a54:	e03b      	b.n	8010ace <_dtoa_r+0x69e>
 8010a56:	4b9e      	ldr	r3, [pc, #632]	@ (8010cd0 <_dtoa_r+0x8a0>)
 8010a58:	f7ef fda6 	bl	80005a8 <__aeabi_dmul>
 8010a5c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8010a60:	e7bc      	b.n	80109dc <_dtoa_r+0x5ac>
 8010a62:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8010a66:	4656      	mov	r6, sl
 8010a68:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010a6c:	4620      	mov	r0, r4
 8010a6e:	4629      	mov	r1, r5
 8010a70:	f7ef fec4 	bl	80007fc <__aeabi_ddiv>
 8010a74:	f7f0 f848 	bl	8000b08 <__aeabi_d2iz>
 8010a78:	4680      	mov	r8, r0
 8010a7a:	f7ef fd2b 	bl	80004d4 <__aeabi_i2d>
 8010a7e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010a82:	f7ef fd91 	bl	80005a8 <__aeabi_dmul>
 8010a86:	4602      	mov	r2, r0
 8010a88:	460b      	mov	r3, r1
 8010a8a:	4620      	mov	r0, r4
 8010a8c:	4629      	mov	r1, r5
 8010a8e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8010a92:	f7ef fbd1 	bl	8000238 <__aeabi_dsub>
 8010a96:	f806 4b01 	strb.w	r4, [r6], #1
 8010a9a:	9d03      	ldr	r5, [sp, #12]
 8010a9c:	eba6 040a 	sub.w	r4, r6, sl
 8010aa0:	42a5      	cmp	r5, r4
 8010aa2:	4602      	mov	r2, r0
 8010aa4:	460b      	mov	r3, r1
 8010aa6:	d133      	bne.n	8010b10 <_dtoa_r+0x6e0>
 8010aa8:	f7ef fbc8 	bl	800023c <__adddf3>
 8010aac:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010ab0:	4604      	mov	r4, r0
 8010ab2:	460d      	mov	r5, r1
 8010ab4:	f7f0 f808 	bl	8000ac8 <__aeabi_dcmpgt>
 8010ab8:	b9c0      	cbnz	r0, 8010aec <_dtoa_r+0x6bc>
 8010aba:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010abe:	4620      	mov	r0, r4
 8010ac0:	4629      	mov	r1, r5
 8010ac2:	f7ef ffd9 	bl	8000a78 <__aeabi_dcmpeq>
 8010ac6:	b110      	cbz	r0, 8010ace <_dtoa_r+0x69e>
 8010ac8:	f018 0f01 	tst.w	r8, #1
 8010acc:	d10e      	bne.n	8010aec <_dtoa_r+0x6bc>
 8010ace:	9902      	ldr	r1, [sp, #8]
 8010ad0:	4648      	mov	r0, r9
 8010ad2:	f000 fbbd 	bl	8011250 <_Bfree>
 8010ad6:	2300      	movs	r3, #0
 8010ad8:	7033      	strb	r3, [r6, #0]
 8010ada:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8010adc:	3701      	adds	r7, #1
 8010ade:	601f      	str	r7, [r3, #0]
 8010ae0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8010ae2:	2b00      	cmp	r3, #0
 8010ae4:	f000 824b 	beq.w	8010f7e <_dtoa_r+0xb4e>
 8010ae8:	601e      	str	r6, [r3, #0]
 8010aea:	e248      	b.n	8010f7e <_dtoa_r+0xb4e>
 8010aec:	46b8      	mov	r8, r7
 8010aee:	4633      	mov	r3, r6
 8010af0:	461e      	mov	r6, r3
 8010af2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010af6:	2a39      	cmp	r2, #57	@ 0x39
 8010af8:	d106      	bne.n	8010b08 <_dtoa_r+0x6d8>
 8010afa:	459a      	cmp	sl, r3
 8010afc:	d1f8      	bne.n	8010af0 <_dtoa_r+0x6c0>
 8010afe:	2230      	movs	r2, #48	@ 0x30
 8010b00:	f108 0801 	add.w	r8, r8, #1
 8010b04:	f88a 2000 	strb.w	r2, [sl]
 8010b08:	781a      	ldrb	r2, [r3, #0]
 8010b0a:	3201      	adds	r2, #1
 8010b0c:	701a      	strb	r2, [r3, #0]
 8010b0e:	e7a0      	b.n	8010a52 <_dtoa_r+0x622>
 8010b10:	4b6f      	ldr	r3, [pc, #444]	@ (8010cd0 <_dtoa_r+0x8a0>)
 8010b12:	2200      	movs	r2, #0
 8010b14:	f7ef fd48 	bl	80005a8 <__aeabi_dmul>
 8010b18:	2200      	movs	r2, #0
 8010b1a:	2300      	movs	r3, #0
 8010b1c:	4604      	mov	r4, r0
 8010b1e:	460d      	mov	r5, r1
 8010b20:	f7ef ffaa 	bl	8000a78 <__aeabi_dcmpeq>
 8010b24:	2800      	cmp	r0, #0
 8010b26:	d09f      	beq.n	8010a68 <_dtoa_r+0x638>
 8010b28:	e7d1      	b.n	8010ace <_dtoa_r+0x69e>
 8010b2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010b2c:	2a00      	cmp	r2, #0
 8010b2e:	f000 80ea 	beq.w	8010d06 <_dtoa_r+0x8d6>
 8010b32:	9a07      	ldr	r2, [sp, #28]
 8010b34:	2a01      	cmp	r2, #1
 8010b36:	f300 80cd 	bgt.w	8010cd4 <_dtoa_r+0x8a4>
 8010b3a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010b3c:	2a00      	cmp	r2, #0
 8010b3e:	f000 80c1 	beq.w	8010cc4 <_dtoa_r+0x894>
 8010b42:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8010b46:	9c08      	ldr	r4, [sp, #32]
 8010b48:	9e00      	ldr	r6, [sp, #0]
 8010b4a:	9a00      	ldr	r2, [sp, #0]
 8010b4c:	441a      	add	r2, r3
 8010b4e:	9200      	str	r2, [sp, #0]
 8010b50:	9a06      	ldr	r2, [sp, #24]
 8010b52:	2101      	movs	r1, #1
 8010b54:	441a      	add	r2, r3
 8010b56:	4648      	mov	r0, r9
 8010b58:	9206      	str	r2, [sp, #24]
 8010b5a:	f000 fc77 	bl	801144c <__i2b>
 8010b5e:	4605      	mov	r5, r0
 8010b60:	b166      	cbz	r6, 8010b7c <_dtoa_r+0x74c>
 8010b62:	9b06      	ldr	r3, [sp, #24]
 8010b64:	2b00      	cmp	r3, #0
 8010b66:	dd09      	ble.n	8010b7c <_dtoa_r+0x74c>
 8010b68:	42b3      	cmp	r3, r6
 8010b6a:	9a00      	ldr	r2, [sp, #0]
 8010b6c:	bfa8      	it	ge
 8010b6e:	4633      	movge	r3, r6
 8010b70:	1ad2      	subs	r2, r2, r3
 8010b72:	9200      	str	r2, [sp, #0]
 8010b74:	9a06      	ldr	r2, [sp, #24]
 8010b76:	1af6      	subs	r6, r6, r3
 8010b78:	1ad3      	subs	r3, r2, r3
 8010b7a:	9306      	str	r3, [sp, #24]
 8010b7c:	9b08      	ldr	r3, [sp, #32]
 8010b7e:	b30b      	cbz	r3, 8010bc4 <_dtoa_r+0x794>
 8010b80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b82:	2b00      	cmp	r3, #0
 8010b84:	f000 80c6 	beq.w	8010d14 <_dtoa_r+0x8e4>
 8010b88:	2c00      	cmp	r4, #0
 8010b8a:	f000 80c0 	beq.w	8010d0e <_dtoa_r+0x8de>
 8010b8e:	4629      	mov	r1, r5
 8010b90:	4622      	mov	r2, r4
 8010b92:	4648      	mov	r0, r9
 8010b94:	f000 fd12 	bl	80115bc <__pow5mult>
 8010b98:	9a02      	ldr	r2, [sp, #8]
 8010b9a:	4601      	mov	r1, r0
 8010b9c:	4605      	mov	r5, r0
 8010b9e:	4648      	mov	r0, r9
 8010ba0:	f000 fc6a 	bl	8011478 <__multiply>
 8010ba4:	9902      	ldr	r1, [sp, #8]
 8010ba6:	4680      	mov	r8, r0
 8010ba8:	4648      	mov	r0, r9
 8010baa:	f000 fb51 	bl	8011250 <_Bfree>
 8010bae:	9b08      	ldr	r3, [sp, #32]
 8010bb0:	1b1b      	subs	r3, r3, r4
 8010bb2:	9308      	str	r3, [sp, #32]
 8010bb4:	f000 80b1 	beq.w	8010d1a <_dtoa_r+0x8ea>
 8010bb8:	9a08      	ldr	r2, [sp, #32]
 8010bba:	4641      	mov	r1, r8
 8010bbc:	4648      	mov	r0, r9
 8010bbe:	f000 fcfd 	bl	80115bc <__pow5mult>
 8010bc2:	9002      	str	r0, [sp, #8]
 8010bc4:	2101      	movs	r1, #1
 8010bc6:	4648      	mov	r0, r9
 8010bc8:	f000 fc40 	bl	801144c <__i2b>
 8010bcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010bce:	4604      	mov	r4, r0
 8010bd0:	2b00      	cmp	r3, #0
 8010bd2:	f000 81d8 	beq.w	8010f86 <_dtoa_r+0xb56>
 8010bd6:	461a      	mov	r2, r3
 8010bd8:	4601      	mov	r1, r0
 8010bda:	4648      	mov	r0, r9
 8010bdc:	f000 fcee 	bl	80115bc <__pow5mult>
 8010be0:	9b07      	ldr	r3, [sp, #28]
 8010be2:	2b01      	cmp	r3, #1
 8010be4:	4604      	mov	r4, r0
 8010be6:	f300 809f 	bgt.w	8010d28 <_dtoa_r+0x8f8>
 8010bea:	9b04      	ldr	r3, [sp, #16]
 8010bec:	2b00      	cmp	r3, #0
 8010bee:	f040 8097 	bne.w	8010d20 <_dtoa_r+0x8f0>
 8010bf2:	9b05      	ldr	r3, [sp, #20]
 8010bf4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010bf8:	2b00      	cmp	r3, #0
 8010bfa:	f040 8093 	bne.w	8010d24 <_dtoa_r+0x8f4>
 8010bfe:	9b05      	ldr	r3, [sp, #20]
 8010c00:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8010c04:	0d1b      	lsrs	r3, r3, #20
 8010c06:	051b      	lsls	r3, r3, #20
 8010c08:	b133      	cbz	r3, 8010c18 <_dtoa_r+0x7e8>
 8010c0a:	9b00      	ldr	r3, [sp, #0]
 8010c0c:	3301      	adds	r3, #1
 8010c0e:	9300      	str	r3, [sp, #0]
 8010c10:	9b06      	ldr	r3, [sp, #24]
 8010c12:	3301      	adds	r3, #1
 8010c14:	9306      	str	r3, [sp, #24]
 8010c16:	2301      	movs	r3, #1
 8010c18:	9308      	str	r3, [sp, #32]
 8010c1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010c1c:	2b00      	cmp	r3, #0
 8010c1e:	f000 81b8 	beq.w	8010f92 <_dtoa_r+0xb62>
 8010c22:	6923      	ldr	r3, [r4, #16]
 8010c24:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010c28:	6918      	ldr	r0, [r3, #16]
 8010c2a:	f000 fbc3 	bl	80113b4 <__hi0bits>
 8010c2e:	f1c0 0020 	rsb	r0, r0, #32
 8010c32:	9b06      	ldr	r3, [sp, #24]
 8010c34:	4418      	add	r0, r3
 8010c36:	f010 001f 	ands.w	r0, r0, #31
 8010c3a:	f000 8082 	beq.w	8010d42 <_dtoa_r+0x912>
 8010c3e:	f1c0 0320 	rsb	r3, r0, #32
 8010c42:	2b04      	cmp	r3, #4
 8010c44:	dd73      	ble.n	8010d2e <_dtoa_r+0x8fe>
 8010c46:	9b00      	ldr	r3, [sp, #0]
 8010c48:	f1c0 001c 	rsb	r0, r0, #28
 8010c4c:	4403      	add	r3, r0
 8010c4e:	9300      	str	r3, [sp, #0]
 8010c50:	9b06      	ldr	r3, [sp, #24]
 8010c52:	4403      	add	r3, r0
 8010c54:	4406      	add	r6, r0
 8010c56:	9306      	str	r3, [sp, #24]
 8010c58:	9b00      	ldr	r3, [sp, #0]
 8010c5a:	2b00      	cmp	r3, #0
 8010c5c:	dd05      	ble.n	8010c6a <_dtoa_r+0x83a>
 8010c5e:	9902      	ldr	r1, [sp, #8]
 8010c60:	461a      	mov	r2, r3
 8010c62:	4648      	mov	r0, r9
 8010c64:	f000 fd04 	bl	8011670 <__lshift>
 8010c68:	9002      	str	r0, [sp, #8]
 8010c6a:	9b06      	ldr	r3, [sp, #24]
 8010c6c:	2b00      	cmp	r3, #0
 8010c6e:	dd05      	ble.n	8010c7c <_dtoa_r+0x84c>
 8010c70:	4621      	mov	r1, r4
 8010c72:	461a      	mov	r2, r3
 8010c74:	4648      	mov	r0, r9
 8010c76:	f000 fcfb 	bl	8011670 <__lshift>
 8010c7a:	4604      	mov	r4, r0
 8010c7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010c7e:	2b00      	cmp	r3, #0
 8010c80:	d061      	beq.n	8010d46 <_dtoa_r+0x916>
 8010c82:	9802      	ldr	r0, [sp, #8]
 8010c84:	4621      	mov	r1, r4
 8010c86:	f000 fd5f 	bl	8011748 <__mcmp>
 8010c8a:	2800      	cmp	r0, #0
 8010c8c:	da5b      	bge.n	8010d46 <_dtoa_r+0x916>
 8010c8e:	2300      	movs	r3, #0
 8010c90:	9902      	ldr	r1, [sp, #8]
 8010c92:	220a      	movs	r2, #10
 8010c94:	4648      	mov	r0, r9
 8010c96:	f000 fafd 	bl	8011294 <__multadd>
 8010c9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c9c:	9002      	str	r0, [sp, #8]
 8010c9e:	f107 38ff 	add.w	r8, r7, #4294967295
 8010ca2:	2b00      	cmp	r3, #0
 8010ca4:	f000 8177 	beq.w	8010f96 <_dtoa_r+0xb66>
 8010ca8:	4629      	mov	r1, r5
 8010caa:	2300      	movs	r3, #0
 8010cac:	220a      	movs	r2, #10
 8010cae:	4648      	mov	r0, r9
 8010cb0:	f000 faf0 	bl	8011294 <__multadd>
 8010cb4:	f1bb 0f00 	cmp.w	fp, #0
 8010cb8:	4605      	mov	r5, r0
 8010cba:	dc6f      	bgt.n	8010d9c <_dtoa_r+0x96c>
 8010cbc:	9b07      	ldr	r3, [sp, #28]
 8010cbe:	2b02      	cmp	r3, #2
 8010cc0:	dc49      	bgt.n	8010d56 <_dtoa_r+0x926>
 8010cc2:	e06b      	b.n	8010d9c <_dtoa_r+0x96c>
 8010cc4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8010cc6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8010cca:	e73c      	b.n	8010b46 <_dtoa_r+0x716>
 8010ccc:	3fe00000 	.word	0x3fe00000
 8010cd0:	40240000 	.word	0x40240000
 8010cd4:	9b03      	ldr	r3, [sp, #12]
 8010cd6:	1e5c      	subs	r4, r3, #1
 8010cd8:	9b08      	ldr	r3, [sp, #32]
 8010cda:	42a3      	cmp	r3, r4
 8010cdc:	db09      	blt.n	8010cf2 <_dtoa_r+0x8c2>
 8010cde:	1b1c      	subs	r4, r3, r4
 8010ce0:	9b03      	ldr	r3, [sp, #12]
 8010ce2:	2b00      	cmp	r3, #0
 8010ce4:	f6bf af30 	bge.w	8010b48 <_dtoa_r+0x718>
 8010ce8:	9b00      	ldr	r3, [sp, #0]
 8010cea:	9a03      	ldr	r2, [sp, #12]
 8010cec:	1a9e      	subs	r6, r3, r2
 8010cee:	2300      	movs	r3, #0
 8010cf0:	e72b      	b.n	8010b4a <_dtoa_r+0x71a>
 8010cf2:	9b08      	ldr	r3, [sp, #32]
 8010cf4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8010cf6:	9408      	str	r4, [sp, #32]
 8010cf8:	1ae3      	subs	r3, r4, r3
 8010cfa:	441a      	add	r2, r3
 8010cfc:	9e00      	ldr	r6, [sp, #0]
 8010cfe:	9b03      	ldr	r3, [sp, #12]
 8010d00:	920d      	str	r2, [sp, #52]	@ 0x34
 8010d02:	2400      	movs	r4, #0
 8010d04:	e721      	b.n	8010b4a <_dtoa_r+0x71a>
 8010d06:	9c08      	ldr	r4, [sp, #32]
 8010d08:	9e00      	ldr	r6, [sp, #0]
 8010d0a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8010d0c:	e728      	b.n	8010b60 <_dtoa_r+0x730>
 8010d0e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8010d12:	e751      	b.n	8010bb8 <_dtoa_r+0x788>
 8010d14:	9a08      	ldr	r2, [sp, #32]
 8010d16:	9902      	ldr	r1, [sp, #8]
 8010d18:	e750      	b.n	8010bbc <_dtoa_r+0x78c>
 8010d1a:	f8cd 8008 	str.w	r8, [sp, #8]
 8010d1e:	e751      	b.n	8010bc4 <_dtoa_r+0x794>
 8010d20:	2300      	movs	r3, #0
 8010d22:	e779      	b.n	8010c18 <_dtoa_r+0x7e8>
 8010d24:	9b04      	ldr	r3, [sp, #16]
 8010d26:	e777      	b.n	8010c18 <_dtoa_r+0x7e8>
 8010d28:	2300      	movs	r3, #0
 8010d2a:	9308      	str	r3, [sp, #32]
 8010d2c:	e779      	b.n	8010c22 <_dtoa_r+0x7f2>
 8010d2e:	d093      	beq.n	8010c58 <_dtoa_r+0x828>
 8010d30:	9a00      	ldr	r2, [sp, #0]
 8010d32:	331c      	adds	r3, #28
 8010d34:	441a      	add	r2, r3
 8010d36:	9200      	str	r2, [sp, #0]
 8010d38:	9a06      	ldr	r2, [sp, #24]
 8010d3a:	441a      	add	r2, r3
 8010d3c:	441e      	add	r6, r3
 8010d3e:	9206      	str	r2, [sp, #24]
 8010d40:	e78a      	b.n	8010c58 <_dtoa_r+0x828>
 8010d42:	4603      	mov	r3, r0
 8010d44:	e7f4      	b.n	8010d30 <_dtoa_r+0x900>
 8010d46:	9b03      	ldr	r3, [sp, #12]
 8010d48:	2b00      	cmp	r3, #0
 8010d4a:	46b8      	mov	r8, r7
 8010d4c:	dc20      	bgt.n	8010d90 <_dtoa_r+0x960>
 8010d4e:	469b      	mov	fp, r3
 8010d50:	9b07      	ldr	r3, [sp, #28]
 8010d52:	2b02      	cmp	r3, #2
 8010d54:	dd1e      	ble.n	8010d94 <_dtoa_r+0x964>
 8010d56:	f1bb 0f00 	cmp.w	fp, #0
 8010d5a:	f47f adb1 	bne.w	80108c0 <_dtoa_r+0x490>
 8010d5e:	4621      	mov	r1, r4
 8010d60:	465b      	mov	r3, fp
 8010d62:	2205      	movs	r2, #5
 8010d64:	4648      	mov	r0, r9
 8010d66:	f000 fa95 	bl	8011294 <__multadd>
 8010d6a:	4601      	mov	r1, r0
 8010d6c:	4604      	mov	r4, r0
 8010d6e:	9802      	ldr	r0, [sp, #8]
 8010d70:	f000 fcea 	bl	8011748 <__mcmp>
 8010d74:	2800      	cmp	r0, #0
 8010d76:	f77f ada3 	ble.w	80108c0 <_dtoa_r+0x490>
 8010d7a:	4656      	mov	r6, sl
 8010d7c:	2331      	movs	r3, #49	@ 0x31
 8010d7e:	f806 3b01 	strb.w	r3, [r6], #1
 8010d82:	f108 0801 	add.w	r8, r8, #1
 8010d86:	e59f      	b.n	80108c8 <_dtoa_r+0x498>
 8010d88:	9c03      	ldr	r4, [sp, #12]
 8010d8a:	46b8      	mov	r8, r7
 8010d8c:	4625      	mov	r5, r4
 8010d8e:	e7f4      	b.n	8010d7a <_dtoa_r+0x94a>
 8010d90:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8010d94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010d96:	2b00      	cmp	r3, #0
 8010d98:	f000 8101 	beq.w	8010f9e <_dtoa_r+0xb6e>
 8010d9c:	2e00      	cmp	r6, #0
 8010d9e:	dd05      	ble.n	8010dac <_dtoa_r+0x97c>
 8010da0:	4629      	mov	r1, r5
 8010da2:	4632      	mov	r2, r6
 8010da4:	4648      	mov	r0, r9
 8010da6:	f000 fc63 	bl	8011670 <__lshift>
 8010daa:	4605      	mov	r5, r0
 8010dac:	9b08      	ldr	r3, [sp, #32]
 8010dae:	2b00      	cmp	r3, #0
 8010db0:	d05c      	beq.n	8010e6c <_dtoa_r+0xa3c>
 8010db2:	6869      	ldr	r1, [r5, #4]
 8010db4:	4648      	mov	r0, r9
 8010db6:	f000 fa0b 	bl	80111d0 <_Balloc>
 8010dba:	4606      	mov	r6, r0
 8010dbc:	b928      	cbnz	r0, 8010dca <_dtoa_r+0x99a>
 8010dbe:	4b82      	ldr	r3, [pc, #520]	@ (8010fc8 <_dtoa_r+0xb98>)
 8010dc0:	4602      	mov	r2, r0
 8010dc2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8010dc6:	f7ff bb4a 	b.w	801045e <_dtoa_r+0x2e>
 8010dca:	692a      	ldr	r2, [r5, #16]
 8010dcc:	3202      	adds	r2, #2
 8010dce:	0092      	lsls	r2, r2, #2
 8010dd0:	f105 010c 	add.w	r1, r5, #12
 8010dd4:	300c      	adds	r0, #12
 8010dd6:	f7ff fa8e 	bl	80102f6 <memcpy>
 8010dda:	2201      	movs	r2, #1
 8010ddc:	4631      	mov	r1, r6
 8010dde:	4648      	mov	r0, r9
 8010de0:	f000 fc46 	bl	8011670 <__lshift>
 8010de4:	f10a 0301 	add.w	r3, sl, #1
 8010de8:	9300      	str	r3, [sp, #0]
 8010dea:	eb0a 030b 	add.w	r3, sl, fp
 8010dee:	9308      	str	r3, [sp, #32]
 8010df0:	9b04      	ldr	r3, [sp, #16]
 8010df2:	f003 0301 	and.w	r3, r3, #1
 8010df6:	462f      	mov	r7, r5
 8010df8:	9306      	str	r3, [sp, #24]
 8010dfa:	4605      	mov	r5, r0
 8010dfc:	9b00      	ldr	r3, [sp, #0]
 8010dfe:	9802      	ldr	r0, [sp, #8]
 8010e00:	4621      	mov	r1, r4
 8010e02:	f103 3bff 	add.w	fp, r3, #4294967295
 8010e06:	f7ff fa8b 	bl	8010320 <quorem>
 8010e0a:	4603      	mov	r3, r0
 8010e0c:	3330      	adds	r3, #48	@ 0x30
 8010e0e:	9003      	str	r0, [sp, #12]
 8010e10:	4639      	mov	r1, r7
 8010e12:	9802      	ldr	r0, [sp, #8]
 8010e14:	9309      	str	r3, [sp, #36]	@ 0x24
 8010e16:	f000 fc97 	bl	8011748 <__mcmp>
 8010e1a:	462a      	mov	r2, r5
 8010e1c:	9004      	str	r0, [sp, #16]
 8010e1e:	4621      	mov	r1, r4
 8010e20:	4648      	mov	r0, r9
 8010e22:	f000 fcad 	bl	8011780 <__mdiff>
 8010e26:	68c2      	ldr	r2, [r0, #12]
 8010e28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e2a:	4606      	mov	r6, r0
 8010e2c:	bb02      	cbnz	r2, 8010e70 <_dtoa_r+0xa40>
 8010e2e:	4601      	mov	r1, r0
 8010e30:	9802      	ldr	r0, [sp, #8]
 8010e32:	f000 fc89 	bl	8011748 <__mcmp>
 8010e36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e38:	4602      	mov	r2, r0
 8010e3a:	4631      	mov	r1, r6
 8010e3c:	4648      	mov	r0, r9
 8010e3e:	920c      	str	r2, [sp, #48]	@ 0x30
 8010e40:	9309      	str	r3, [sp, #36]	@ 0x24
 8010e42:	f000 fa05 	bl	8011250 <_Bfree>
 8010e46:	9b07      	ldr	r3, [sp, #28]
 8010e48:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8010e4a:	9e00      	ldr	r6, [sp, #0]
 8010e4c:	ea42 0103 	orr.w	r1, r2, r3
 8010e50:	9b06      	ldr	r3, [sp, #24]
 8010e52:	4319      	orrs	r1, r3
 8010e54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010e56:	d10d      	bne.n	8010e74 <_dtoa_r+0xa44>
 8010e58:	2b39      	cmp	r3, #57	@ 0x39
 8010e5a:	d027      	beq.n	8010eac <_dtoa_r+0xa7c>
 8010e5c:	9a04      	ldr	r2, [sp, #16]
 8010e5e:	2a00      	cmp	r2, #0
 8010e60:	dd01      	ble.n	8010e66 <_dtoa_r+0xa36>
 8010e62:	9b03      	ldr	r3, [sp, #12]
 8010e64:	3331      	adds	r3, #49	@ 0x31
 8010e66:	f88b 3000 	strb.w	r3, [fp]
 8010e6a:	e52e      	b.n	80108ca <_dtoa_r+0x49a>
 8010e6c:	4628      	mov	r0, r5
 8010e6e:	e7b9      	b.n	8010de4 <_dtoa_r+0x9b4>
 8010e70:	2201      	movs	r2, #1
 8010e72:	e7e2      	b.n	8010e3a <_dtoa_r+0xa0a>
 8010e74:	9904      	ldr	r1, [sp, #16]
 8010e76:	2900      	cmp	r1, #0
 8010e78:	db04      	blt.n	8010e84 <_dtoa_r+0xa54>
 8010e7a:	9807      	ldr	r0, [sp, #28]
 8010e7c:	4301      	orrs	r1, r0
 8010e7e:	9806      	ldr	r0, [sp, #24]
 8010e80:	4301      	orrs	r1, r0
 8010e82:	d120      	bne.n	8010ec6 <_dtoa_r+0xa96>
 8010e84:	2a00      	cmp	r2, #0
 8010e86:	ddee      	ble.n	8010e66 <_dtoa_r+0xa36>
 8010e88:	9902      	ldr	r1, [sp, #8]
 8010e8a:	9300      	str	r3, [sp, #0]
 8010e8c:	2201      	movs	r2, #1
 8010e8e:	4648      	mov	r0, r9
 8010e90:	f000 fbee 	bl	8011670 <__lshift>
 8010e94:	4621      	mov	r1, r4
 8010e96:	9002      	str	r0, [sp, #8]
 8010e98:	f000 fc56 	bl	8011748 <__mcmp>
 8010e9c:	2800      	cmp	r0, #0
 8010e9e:	9b00      	ldr	r3, [sp, #0]
 8010ea0:	dc02      	bgt.n	8010ea8 <_dtoa_r+0xa78>
 8010ea2:	d1e0      	bne.n	8010e66 <_dtoa_r+0xa36>
 8010ea4:	07da      	lsls	r2, r3, #31
 8010ea6:	d5de      	bpl.n	8010e66 <_dtoa_r+0xa36>
 8010ea8:	2b39      	cmp	r3, #57	@ 0x39
 8010eaa:	d1da      	bne.n	8010e62 <_dtoa_r+0xa32>
 8010eac:	2339      	movs	r3, #57	@ 0x39
 8010eae:	f88b 3000 	strb.w	r3, [fp]
 8010eb2:	4633      	mov	r3, r6
 8010eb4:	461e      	mov	r6, r3
 8010eb6:	3b01      	subs	r3, #1
 8010eb8:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8010ebc:	2a39      	cmp	r2, #57	@ 0x39
 8010ebe:	d04e      	beq.n	8010f5e <_dtoa_r+0xb2e>
 8010ec0:	3201      	adds	r2, #1
 8010ec2:	701a      	strb	r2, [r3, #0]
 8010ec4:	e501      	b.n	80108ca <_dtoa_r+0x49a>
 8010ec6:	2a00      	cmp	r2, #0
 8010ec8:	dd03      	ble.n	8010ed2 <_dtoa_r+0xaa2>
 8010eca:	2b39      	cmp	r3, #57	@ 0x39
 8010ecc:	d0ee      	beq.n	8010eac <_dtoa_r+0xa7c>
 8010ece:	3301      	adds	r3, #1
 8010ed0:	e7c9      	b.n	8010e66 <_dtoa_r+0xa36>
 8010ed2:	9a00      	ldr	r2, [sp, #0]
 8010ed4:	9908      	ldr	r1, [sp, #32]
 8010ed6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8010eda:	428a      	cmp	r2, r1
 8010edc:	d028      	beq.n	8010f30 <_dtoa_r+0xb00>
 8010ede:	9902      	ldr	r1, [sp, #8]
 8010ee0:	2300      	movs	r3, #0
 8010ee2:	220a      	movs	r2, #10
 8010ee4:	4648      	mov	r0, r9
 8010ee6:	f000 f9d5 	bl	8011294 <__multadd>
 8010eea:	42af      	cmp	r7, r5
 8010eec:	9002      	str	r0, [sp, #8]
 8010eee:	f04f 0300 	mov.w	r3, #0
 8010ef2:	f04f 020a 	mov.w	r2, #10
 8010ef6:	4639      	mov	r1, r7
 8010ef8:	4648      	mov	r0, r9
 8010efa:	d107      	bne.n	8010f0c <_dtoa_r+0xadc>
 8010efc:	f000 f9ca 	bl	8011294 <__multadd>
 8010f00:	4607      	mov	r7, r0
 8010f02:	4605      	mov	r5, r0
 8010f04:	9b00      	ldr	r3, [sp, #0]
 8010f06:	3301      	adds	r3, #1
 8010f08:	9300      	str	r3, [sp, #0]
 8010f0a:	e777      	b.n	8010dfc <_dtoa_r+0x9cc>
 8010f0c:	f000 f9c2 	bl	8011294 <__multadd>
 8010f10:	4629      	mov	r1, r5
 8010f12:	4607      	mov	r7, r0
 8010f14:	2300      	movs	r3, #0
 8010f16:	220a      	movs	r2, #10
 8010f18:	4648      	mov	r0, r9
 8010f1a:	f000 f9bb 	bl	8011294 <__multadd>
 8010f1e:	4605      	mov	r5, r0
 8010f20:	e7f0      	b.n	8010f04 <_dtoa_r+0xad4>
 8010f22:	f1bb 0f00 	cmp.w	fp, #0
 8010f26:	bfcc      	ite	gt
 8010f28:	465e      	movgt	r6, fp
 8010f2a:	2601      	movle	r6, #1
 8010f2c:	4456      	add	r6, sl
 8010f2e:	2700      	movs	r7, #0
 8010f30:	9902      	ldr	r1, [sp, #8]
 8010f32:	9300      	str	r3, [sp, #0]
 8010f34:	2201      	movs	r2, #1
 8010f36:	4648      	mov	r0, r9
 8010f38:	f000 fb9a 	bl	8011670 <__lshift>
 8010f3c:	4621      	mov	r1, r4
 8010f3e:	9002      	str	r0, [sp, #8]
 8010f40:	f000 fc02 	bl	8011748 <__mcmp>
 8010f44:	2800      	cmp	r0, #0
 8010f46:	dcb4      	bgt.n	8010eb2 <_dtoa_r+0xa82>
 8010f48:	d102      	bne.n	8010f50 <_dtoa_r+0xb20>
 8010f4a:	9b00      	ldr	r3, [sp, #0]
 8010f4c:	07db      	lsls	r3, r3, #31
 8010f4e:	d4b0      	bmi.n	8010eb2 <_dtoa_r+0xa82>
 8010f50:	4633      	mov	r3, r6
 8010f52:	461e      	mov	r6, r3
 8010f54:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010f58:	2a30      	cmp	r2, #48	@ 0x30
 8010f5a:	d0fa      	beq.n	8010f52 <_dtoa_r+0xb22>
 8010f5c:	e4b5      	b.n	80108ca <_dtoa_r+0x49a>
 8010f5e:	459a      	cmp	sl, r3
 8010f60:	d1a8      	bne.n	8010eb4 <_dtoa_r+0xa84>
 8010f62:	2331      	movs	r3, #49	@ 0x31
 8010f64:	f108 0801 	add.w	r8, r8, #1
 8010f68:	f88a 3000 	strb.w	r3, [sl]
 8010f6c:	e4ad      	b.n	80108ca <_dtoa_r+0x49a>
 8010f6e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8010f70:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8010fcc <_dtoa_r+0xb9c>
 8010f74:	b11b      	cbz	r3, 8010f7e <_dtoa_r+0xb4e>
 8010f76:	f10a 0308 	add.w	r3, sl, #8
 8010f7a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8010f7c:	6013      	str	r3, [r2, #0]
 8010f7e:	4650      	mov	r0, sl
 8010f80:	b017      	add	sp, #92	@ 0x5c
 8010f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f86:	9b07      	ldr	r3, [sp, #28]
 8010f88:	2b01      	cmp	r3, #1
 8010f8a:	f77f ae2e 	ble.w	8010bea <_dtoa_r+0x7ba>
 8010f8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010f90:	9308      	str	r3, [sp, #32]
 8010f92:	2001      	movs	r0, #1
 8010f94:	e64d      	b.n	8010c32 <_dtoa_r+0x802>
 8010f96:	f1bb 0f00 	cmp.w	fp, #0
 8010f9a:	f77f aed9 	ble.w	8010d50 <_dtoa_r+0x920>
 8010f9e:	4656      	mov	r6, sl
 8010fa0:	9802      	ldr	r0, [sp, #8]
 8010fa2:	4621      	mov	r1, r4
 8010fa4:	f7ff f9bc 	bl	8010320 <quorem>
 8010fa8:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8010fac:	f806 3b01 	strb.w	r3, [r6], #1
 8010fb0:	eba6 020a 	sub.w	r2, r6, sl
 8010fb4:	4593      	cmp	fp, r2
 8010fb6:	ddb4      	ble.n	8010f22 <_dtoa_r+0xaf2>
 8010fb8:	9902      	ldr	r1, [sp, #8]
 8010fba:	2300      	movs	r3, #0
 8010fbc:	220a      	movs	r2, #10
 8010fbe:	4648      	mov	r0, r9
 8010fc0:	f000 f968 	bl	8011294 <__multadd>
 8010fc4:	9002      	str	r0, [sp, #8]
 8010fc6:	e7eb      	b.n	8010fa0 <_dtoa_r+0xb70>
 8010fc8:	0801969a 	.word	0x0801969a
 8010fcc:	0801961e 	.word	0x0801961e

08010fd0 <_free_r>:
 8010fd0:	b538      	push	{r3, r4, r5, lr}
 8010fd2:	4605      	mov	r5, r0
 8010fd4:	2900      	cmp	r1, #0
 8010fd6:	d041      	beq.n	801105c <_free_r+0x8c>
 8010fd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8010fdc:	1f0c      	subs	r4, r1, #4
 8010fde:	2b00      	cmp	r3, #0
 8010fe0:	bfb8      	it	lt
 8010fe2:	18e4      	addlt	r4, r4, r3
 8010fe4:	f000 f8e8 	bl	80111b8 <__malloc_lock>
 8010fe8:	4a1d      	ldr	r2, [pc, #116]	@ (8011060 <_free_r+0x90>)
 8010fea:	6813      	ldr	r3, [r2, #0]
 8010fec:	b933      	cbnz	r3, 8010ffc <_free_r+0x2c>
 8010fee:	6063      	str	r3, [r4, #4]
 8010ff0:	6014      	str	r4, [r2, #0]
 8010ff2:	4628      	mov	r0, r5
 8010ff4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010ff8:	f000 b8e4 	b.w	80111c4 <__malloc_unlock>
 8010ffc:	42a3      	cmp	r3, r4
 8010ffe:	d908      	bls.n	8011012 <_free_r+0x42>
 8011000:	6820      	ldr	r0, [r4, #0]
 8011002:	1821      	adds	r1, r4, r0
 8011004:	428b      	cmp	r3, r1
 8011006:	bf01      	itttt	eq
 8011008:	6819      	ldreq	r1, [r3, #0]
 801100a:	685b      	ldreq	r3, [r3, #4]
 801100c:	1809      	addeq	r1, r1, r0
 801100e:	6021      	streq	r1, [r4, #0]
 8011010:	e7ed      	b.n	8010fee <_free_r+0x1e>
 8011012:	461a      	mov	r2, r3
 8011014:	685b      	ldr	r3, [r3, #4]
 8011016:	b10b      	cbz	r3, 801101c <_free_r+0x4c>
 8011018:	42a3      	cmp	r3, r4
 801101a:	d9fa      	bls.n	8011012 <_free_r+0x42>
 801101c:	6811      	ldr	r1, [r2, #0]
 801101e:	1850      	adds	r0, r2, r1
 8011020:	42a0      	cmp	r0, r4
 8011022:	d10b      	bne.n	801103c <_free_r+0x6c>
 8011024:	6820      	ldr	r0, [r4, #0]
 8011026:	4401      	add	r1, r0
 8011028:	1850      	adds	r0, r2, r1
 801102a:	4283      	cmp	r3, r0
 801102c:	6011      	str	r1, [r2, #0]
 801102e:	d1e0      	bne.n	8010ff2 <_free_r+0x22>
 8011030:	6818      	ldr	r0, [r3, #0]
 8011032:	685b      	ldr	r3, [r3, #4]
 8011034:	6053      	str	r3, [r2, #4]
 8011036:	4408      	add	r0, r1
 8011038:	6010      	str	r0, [r2, #0]
 801103a:	e7da      	b.n	8010ff2 <_free_r+0x22>
 801103c:	d902      	bls.n	8011044 <_free_r+0x74>
 801103e:	230c      	movs	r3, #12
 8011040:	602b      	str	r3, [r5, #0]
 8011042:	e7d6      	b.n	8010ff2 <_free_r+0x22>
 8011044:	6820      	ldr	r0, [r4, #0]
 8011046:	1821      	adds	r1, r4, r0
 8011048:	428b      	cmp	r3, r1
 801104a:	bf04      	itt	eq
 801104c:	6819      	ldreq	r1, [r3, #0]
 801104e:	685b      	ldreq	r3, [r3, #4]
 8011050:	6063      	str	r3, [r4, #4]
 8011052:	bf04      	itt	eq
 8011054:	1809      	addeq	r1, r1, r0
 8011056:	6021      	streq	r1, [r4, #0]
 8011058:	6054      	str	r4, [r2, #4]
 801105a:	e7ca      	b.n	8010ff2 <_free_r+0x22>
 801105c:	bd38      	pop	{r3, r4, r5, pc}
 801105e:	bf00      	nop
 8011060:	20005c30 	.word	0x20005c30

08011064 <malloc>:
 8011064:	4b02      	ldr	r3, [pc, #8]	@ (8011070 <malloc+0xc>)
 8011066:	4601      	mov	r1, r0
 8011068:	6818      	ldr	r0, [r3, #0]
 801106a:	f000 b825 	b.w	80110b8 <_malloc_r>
 801106e:	bf00      	nop
 8011070:	20000140 	.word	0x20000140

08011074 <sbrk_aligned>:
 8011074:	b570      	push	{r4, r5, r6, lr}
 8011076:	4e0f      	ldr	r6, [pc, #60]	@ (80110b4 <sbrk_aligned+0x40>)
 8011078:	460c      	mov	r4, r1
 801107a:	6831      	ldr	r1, [r6, #0]
 801107c:	4605      	mov	r5, r0
 801107e:	b911      	cbnz	r1, 8011086 <sbrk_aligned+0x12>
 8011080:	f001 fd88 	bl	8012b94 <_sbrk_r>
 8011084:	6030      	str	r0, [r6, #0]
 8011086:	4621      	mov	r1, r4
 8011088:	4628      	mov	r0, r5
 801108a:	f001 fd83 	bl	8012b94 <_sbrk_r>
 801108e:	1c43      	adds	r3, r0, #1
 8011090:	d103      	bne.n	801109a <sbrk_aligned+0x26>
 8011092:	f04f 34ff 	mov.w	r4, #4294967295
 8011096:	4620      	mov	r0, r4
 8011098:	bd70      	pop	{r4, r5, r6, pc}
 801109a:	1cc4      	adds	r4, r0, #3
 801109c:	f024 0403 	bic.w	r4, r4, #3
 80110a0:	42a0      	cmp	r0, r4
 80110a2:	d0f8      	beq.n	8011096 <sbrk_aligned+0x22>
 80110a4:	1a21      	subs	r1, r4, r0
 80110a6:	4628      	mov	r0, r5
 80110a8:	f001 fd74 	bl	8012b94 <_sbrk_r>
 80110ac:	3001      	adds	r0, #1
 80110ae:	d1f2      	bne.n	8011096 <sbrk_aligned+0x22>
 80110b0:	e7ef      	b.n	8011092 <sbrk_aligned+0x1e>
 80110b2:	bf00      	nop
 80110b4:	20005c2c 	.word	0x20005c2c

080110b8 <_malloc_r>:
 80110b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80110bc:	1ccd      	adds	r5, r1, #3
 80110be:	f025 0503 	bic.w	r5, r5, #3
 80110c2:	3508      	adds	r5, #8
 80110c4:	2d0c      	cmp	r5, #12
 80110c6:	bf38      	it	cc
 80110c8:	250c      	movcc	r5, #12
 80110ca:	2d00      	cmp	r5, #0
 80110cc:	4606      	mov	r6, r0
 80110ce:	db01      	blt.n	80110d4 <_malloc_r+0x1c>
 80110d0:	42a9      	cmp	r1, r5
 80110d2:	d904      	bls.n	80110de <_malloc_r+0x26>
 80110d4:	230c      	movs	r3, #12
 80110d6:	6033      	str	r3, [r6, #0]
 80110d8:	2000      	movs	r0, #0
 80110da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80110de:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80111b4 <_malloc_r+0xfc>
 80110e2:	f000 f869 	bl	80111b8 <__malloc_lock>
 80110e6:	f8d8 3000 	ldr.w	r3, [r8]
 80110ea:	461c      	mov	r4, r3
 80110ec:	bb44      	cbnz	r4, 8011140 <_malloc_r+0x88>
 80110ee:	4629      	mov	r1, r5
 80110f0:	4630      	mov	r0, r6
 80110f2:	f7ff ffbf 	bl	8011074 <sbrk_aligned>
 80110f6:	1c43      	adds	r3, r0, #1
 80110f8:	4604      	mov	r4, r0
 80110fa:	d158      	bne.n	80111ae <_malloc_r+0xf6>
 80110fc:	f8d8 4000 	ldr.w	r4, [r8]
 8011100:	4627      	mov	r7, r4
 8011102:	2f00      	cmp	r7, #0
 8011104:	d143      	bne.n	801118e <_malloc_r+0xd6>
 8011106:	2c00      	cmp	r4, #0
 8011108:	d04b      	beq.n	80111a2 <_malloc_r+0xea>
 801110a:	6823      	ldr	r3, [r4, #0]
 801110c:	4639      	mov	r1, r7
 801110e:	4630      	mov	r0, r6
 8011110:	eb04 0903 	add.w	r9, r4, r3
 8011114:	f001 fd3e 	bl	8012b94 <_sbrk_r>
 8011118:	4581      	cmp	r9, r0
 801111a:	d142      	bne.n	80111a2 <_malloc_r+0xea>
 801111c:	6821      	ldr	r1, [r4, #0]
 801111e:	1a6d      	subs	r5, r5, r1
 8011120:	4629      	mov	r1, r5
 8011122:	4630      	mov	r0, r6
 8011124:	f7ff ffa6 	bl	8011074 <sbrk_aligned>
 8011128:	3001      	adds	r0, #1
 801112a:	d03a      	beq.n	80111a2 <_malloc_r+0xea>
 801112c:	6823      	ldr	r3, [r4, #0]
 801112e:	442b      	add	r3, r5
 8011130:	6023      	str	r3, [r4, #0]
 8011132:	f8d8 3000 	ldr.w	r3, [r8]
 8011136:	685a      	ldr	r2, [r3, #4]
 8011138:	bb62      	cbnz	r2, 8011194 <_malloc_r+0xdc>
 801113a:	f8c8 7000 	str.w	r7, [r8]
 801113e:	e00f      	b.n	8011160 <_malloc_r+0xa8>
 8011140:	6822      	ldr	r2, [r4, #0]
 8011142:	1b52      	subs	r2, r2, r5
 8011144:	d420      	bmi.n	8011188 <_malloc_r+0xd0>
 8011146:	2a0b      	cmp	r2, #11
 8011148:	d917      	bls.n	801117a <_malloc_r+0xc2>
 801114a:	1961      	adds	r1, r4, r5
 801114c:	42a3      	cmp	r3, r4
 801114e:	6025      	str	r5, [r4, #0]
 8011150:	bf18      	it	ne
 8011152:	6059      	strne	r1, [r3, #4]
 8011154:	6863      	ldr	r3, [r4, #4]
 8011156:	bf08      	it	eq
 8011158:	f8c8 1000 	streq.w	r1, [r8]
 801115c:	5162      	str	r2, [r4, r5]
 801115e:	604b      	str	r3, [r1, #4]
 8011160:	4630      	mov	r0, r6
 8011162:	f000 f82f 	bl	80111c4 <__malloc_unlock>
 8011166:	f104 000b 	add.w	r0, r4, #11
 801116a:	1d23      	adds	r3, r4, #4
 801116c:	f020 0007 	bic.w	r0, r0, #7
 8011170:	1ac2      	subs	r2, r0, r3
 8011172:	bf1c      	itt	ne
 8011174:	1a1b      	subne	r3, r3, r0
 8011176:	50a3      	strne	r3, [r4, r2]
 8011178:	e7af      	b.n	80110da <_malloc_r+0x22>
 801117a:	6862      	ldr	r2, [r4, #4]
 801117c:	42a3      	cmp	r3, r4
 801117e:	bf0c      	ite	eq
 8011180:	f8c8 2000 	streq.w	r2, [r8]
 8011184:	605a      	strne	r2, [r3, #4]
 8011186:	e7eb      	b.n	8011160 <_malloc_r+0xa8>
 8011188:	4623      	mov	r3, r4
 801118a:	6864      	ldr	r4, [r4, #4]
 801118c:	e7ae      	b.n	80110ec <_malloc_r+0x34>
 801118e:	463c      	mov	r4, r7
 8011190:	687f      	ldr	r7, [r7, #4]
 8011192:	e7b6      	b.n	8011102 <_malloc_r+0x4a>
 8011194:	461a      	mov	r2, r3
 8011196:	685b      	ldr	r3, [r3, #4]
 8011198:	42a3      	cmp	r3, r4
 801119a:	d1fb      	bne.n	8011194 <_malloc_r+0xdc>
 801119c:	2300      	movs	r3, #0
 801119e:	6053      	str	r3, [r2, #4]
 80111a0:	e7de      	b.n	8011160 <_malloc_r+0xa8>
 80111a2:	230c      	movs	r3, #12
 80111a4:	6033      	str	r3, [r6, #0]
 80111a6:	4630      	mov	r0, r6
 80111a8:	f000 f80c 	bl	80111c4 <__malloc_unlock>
 80111ac:	e794      	b.n	80110d8 <_malloc_r+0x20>
 80111ae:	6005      	str	r5, [r0, #0]
 80111b0:	e7d6      	b.n	8011160 <_malloc_r+0xa8>
 80111b2:	bf00      	nop
 80111b4:	20005c30 	.word	0x20005c30

080111b8 <__malloc_lock>:
 80111b8:	4801      	ldr	r0, [pc, #4]	@ (80111c0 <__malloc_lock+0x8>)
 80111ba:	f7ff b89a 	b.w	80102f2 <__retarget_lock_acquire_recursive>
 80111be:	bf00      	nop
 80111c0:	20005c28 	.word	0x20005c28

080111c4 <__malloc_unlock>:
 80111c4:	4801      	ldr	r0, [pc, #4]	@ (80111cc <__malloc_unlock+0x8>)
 80111c6:	f7ff b895 	b.w	80102f4 <__retarget_lock_release_recursive>
 80111ca:	bf00      	nop
 80111cc:	20005c28 	.word	0x20005c28

080111d0 <_Balloc>:
 80111d0:	b570      	push	{r4, r5, r6, lr}
 80111d2:	69c6      	ldr	r6, [r0, #28]
 80111d4:	4604      	mov	r4, r0
 80111d6:	460d      	mov	r5, r1
 80111d8:	b976      	cbnz	r6, 80111f8 <_Balloc+0x28>
 80111da:	2010      	movs	r0, #16
 80111dc:	f7ff ff42 	bl	8011064 <malloc>
 80111e0:	4602      	mov	r2, r0
 80111e2:	61e0      	str	r0, [r4, #28]
 80111e4:	b920      	cbnz	r0, 80111f0 <_Balloc+0x20>
 80111e6:	4b18      	ldr	r3, [pc, #96]	@ (8011248 <_Balloc+0x78>)
 80111e8:	4818      	ldr	r0, [pc, #96]	@ (801124c <_Balloc+0x7c>)
 80111ea:	216b      	movs	r1, #107	@ 0x6b
 80111ec:	f001 fcec 	bl	8012bc8 <__assert_func>
 80111f0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80111f4:	6006      	str	r6, [r0, #0]
 80111f6:	60c6      	str	r6, [r0, #12]
 80111f8:	69e6      	ldr	r6, [r4, #28]
 80111fa:	68f3      	ldr	r3, [r6, #12]
 80111fc:	b183      	cbz	r3, 8011220 <_Balloc+0x50>
 80111fe:	69e3      	ldr	r3, [r4, #28]
 8011200:	68db      	ldr	r3, [r3, #12]
 8011202:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8011206:	b9b8      	cbnz	r0, 8011238 <_Balloc+0x68>
 8011208:	2101      	movs	r1, #1
 801120a:	fa01 f605 	lsl.w	r6, r1, r5
 801120e:	1d72      	adds	r2, r6, #5
 8011210:	0092      	lsls	r2, r2, #2
 8011212:	4620      	mov	r0, r4
 8011214:	f001 fcf6 	bl	8012c04 <_calloc_r>
 8011218:	b160      	cbz	r0, 8011234 <_Balloc+0x64>
 801121a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 801121e:	e00e      	b.n	801123e <_Balloc+0x6e>
 8011220:	2221      	movs	r2, #33	@ 0x21
 8011222:	2104      	movs	r1, #4
 8011224:	4620      	mov	r0, r4
 8011226:	f001 fced 	bl	8012c04 <_calloc_r>
 801122a:	69e3      	ldr	r3, [r4, #28]
 801122c:	60f0      	str	r0, [r6, #12]
 801122e:	68db      	ldr	r3, [r3, #12]
 8011230:	2b00      	cmp	r3, #0
 8011232:	d1e4      	bne.n	80111fe <_Balloc+0x2e>
 8011234:	2000      	movs	r0, #0
 8011236:	bd70      	pop	{r4, r5, r6, pc}
 8011238:	6802      	ldr	r2, [r0, #0]
 801123a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 801123e:	2300      	movs	r3, #0
 8011240:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8011244:	e7f7      	b.n	8011236 <_Balloc+0x66>
 8011246:	bf00      	nop
 8011248:	0801962b 	.word	0x0801962b
 801124c:	080196ab 	.word	0x080196ab

08011250 <_Bfree>:
 8011250:	b570      	push	{r4, r5, r6, lr}
 8011252:	69c6      	ldr	r6, [r0, #28]
 8011254:	4605      	mov	r5, r0
 8011256:	460c      	mov	r4, r1
 8011258:	b976      	cbnz	r6, 8011278 <_Bfree+0x28>
 801125a:	2010      	movs	r0, #16
 801125c:	f7ff ff02 	bl	8011064 <malloc>
 8011260:	4602      	mov	r2, r0
 8011262:	61e8      	str	r0, [r5, #28]
 8011264:	b920      	cbnz	r0, 8011270 <_Bfree+0x20>
 8011266:	4b09      	ldr	r3, [pc, #36]	@ (801128c <_Bfree+0x3c>)
 8011268:	4809      	ldr	r0, [pc, #36]	@ (8011290 <_Bfree+0x40>)
 801126a:	218f      	movs	r1, #143	@ 0x8f
 801126c:	f001 fcac 	bl	8012bc8 <__assert_func>
 8011270:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8011274:	6006      	str	r6, [r0, #0]
 8011276:	60c6      	str	r6, [r0, #12]
 8011278:	b13c      	cbz	r4, 801128a <_Bfree+0x3a>
 801127a:	69eb      	ldr	r3, [r5, #28]
 801127c:	6862      	ldr	r2, [r4, #4]
 801127e:	68db      	ldr	r3, [r3, #12]
 8011280:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8011284:	6021      	str	r1, [r4, #0]
 8011286:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801128a:	bd70      	pop	{r4, r5, r6, pc}
 801128c:	0801962b 	.word	0x0801962b
 8011290:	080196ab 	.word	0x080196ab

08011294 <__multadd>:
 8011294:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011298:	690d      	ldr	r5, [r1, #16]
 801129a:	4607      	mov	r7, r0
 801129c:	460c      	mov	r4, r1
 801129e:	461e      	mov	r6, r3
 80112a0:	f101 0c14 	add.w	ip, r1, #20
 80112a4:	2000      	movs	r0, #0
 80112a6:	f8dc 3000 	ldr.w	r3, [ip]
 80112aa:	b299      	uxth	r1, r3
 80112ac:	fb02 6101 	mla	r1, r2, r1, r6
 80112b0:	0c1e      	lsrs	r6, r3, #16
 80112b2:	0c0b      	lsrs	r3, r1, #16
 80112b4:	fb02 3306 	mla	r3, r2, r6, r3
 80112b8:	b289      	uxth	r1, r1
 80112ba:	3001      	adds	r0, #1
 80112bc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80112c0:	4285      	cmp	r5, r0
 80112c2:	f84c 1b04 	str.w	r1, [ip], #4
 80112c6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80112ca:	dcec      	bgt.n	80112a6 <__multadd+0x12>
 80112cc:	b30e      	cbz	r6, 8011312 <__multadd+0x7e>
 80112ce:	68a3      	ldr	r3, [r4, #8]
 80112d0:	42ab      	cmp	r3, r5
 80112d2:	dc19      	bgt.n	8011308 <__multadd+0x74>
 80112d4:	6861      	ldr	r1, [r4, #4]
 80112d6:	4638      	mov	r0, r7
 80112d8:	3101      	adds	r1, #1
 80112da:	f7ff ff79 	bl	80111d0 <_Balloc>
 80112de:	4680      	mov	r8, r0
 80112e0:	b928      	cbnz	r0, 80112ee <__multadd+0x5a>
 80112e2:	4602      	mov	r2, r0
 80112e4:	4b0c      	ldr	r3, [pc, #48]	@ (8011318 <__multadd+0x84>)
 80112e6:	480d      	ldr	r0, [pc, #52]	@ (801131c <__multadd+0x88>)
 80112e8:	21ba      	movs	r1, #186	@ 0xba
 80112ea:	f001 fc6d 	bl	8012bc8 <__assert_func>
 80112ee:	6922      	ldr	r2, [r4, #16]
 80112f0:	3202      	adds	r2, #2
 80112f2:	f104 010c 	add.w	r1, r4, #12
 80112f6:	0092      	lsls	r2, r2, #2
 80112f8:	300c      	adds	r0, #12
 80112fa:	f7fe fffc 	bl	80102f6 <memcpy>
 80112fe:	4621      	mov	r1, r4
 8011300:	4638      	mov	r0, r7
 8011302:	f7ff ffa5 	bl	8011250 <_Bfree>
 8011306:	4644      	mov	r4, r8
 8011308:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801130c:	3501      	adds	r5, #1
 801130e:	615e      	str	r6, [r3, #20]
 8011310:	6125      	str	r5, [r4, #16]
 8011312:	4620      	mov	r0, r4
 8011314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011318:	0801969a 	.word	0x0801969a
 801131c:	080196ab 	.word	0x080196ab

08011320 <__s2b>:
 8011320:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011324:	460c      	mov	r4, r1
 8011326:	4615      	mov	r5, r2
 8011328:	461f      	mov	r7, r3
 801132a:	2209      	movs	r2, #9
 801132c:	3308      	adds	r3, #8
 801132e:	4606      	mov	r6, r0
 8011330:	fb93 f3f2 	sdiv	r3, r3, r2
 8011334:	2100      	movs	r1, #0
 8011336:	2201      	movs	r2, #1
 8011338:	429a      	cmp	r2, r3
 801133a:	db09      	blt.n	8011350 <__s2b+0x30>
 801133c:	4630      	mov	r0, r6
 801133e:	f7ff ff47 	bl	80111d0 <_Balloc>
 8011342:	b940      	cbnz	r0, 8011356 <__s2b+0x36>
 8011344:	4602      	mov	r2, r0
 8011346:	4b19      	ldr	r3, [pc, #100]	@ (80113ac <__s2b+0x8c>)
 8011348:	4819      	ldr	r0, [pc, #100]	@ (80113b0 <__s2b+0x90>)
 801134a:	21d3      	movs	r1, #211	@ 0xd3
 801134c:	f001 fc3c 	bl	8012bc8 <__assert_func>
 8011350:	0052      	lsls	r2, r2, #1
 8011352:	3101      	adds	r1, #1
 8011354:	e7f0      	b.n	8011338 <__s2b+0x18>
 8011356:	9b08      	ldr	r3, [sp, #32]
 8011358:	6143      	str	r3, [r0, #20]
 801135a:	2d09      	cmp	r5, #9
 801135c:	f04f 0301 	mov.w	r3, #1
 8011360:	6103      	str	r3, [r0, #16]
 8011362:	dd16      	ble.n	8011392 <__s2b+0x72>
 8011364:	f104 0909 	add.w	r9, r4, #9
 8011368:	46c8      	mov	r8, r9
 801136a:	442c      	add	r4, r5
 801136c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8011370:	4601      	mov	r1, r0
 8011372:	3b30      	subs	r3, #48	@ 0x30
 8011374:	220a      	movs	r2, #10
 8011376:	4630      	mov	r0, r6
 8011378:	f7ff ff8c 	bl	8011294 <__multadd>
 801137c:	45a0      	cmp	r8, r4
 801137e:	d1f5      	bne.n	801136c <__s2b+0x4c>
 8011380:	f1a5 0408 	sub.w	r4, r5, #8
 8011384:	444c      	add	r4, r9
 8011386:	1b2d      	subs	r5, r5, r4
 8011388:	1963      	adds	r3, r4, r5
 801138a:	42bb      	cmp	r3, r7
 801138c:	db04      	blt.n	8011398 <__s2b+0x78>
 801138e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011392:	340a      	adds	r4, #10
 8011394:	2509      	movs	r5, #9
 8011396:	e7f6      	b.n	8011386 <__s2b+0x66>
 8011398:	f814 3b01 	ldrb.w	r3, [r4], #1
 801139c:	4601      	mov	r1, r0
 801139e:	3b30      	subs	r3, #48	@ 0x30
 80113a0:	220a      	movs	r2, #10
 80113a2:	4630      	mov	r0, r6
 80113a4:	f7ff ff76 	bl	8011294 <__multadd>
 80113a8:	e7ee      	b.n	8011388 <__s2b+0x68>
 80113aa:	bf00      	nop
 80113ac:	0801969a 	.word	0x0801969a
 80113b0:	080196ab 	.word	0x080196ab

080113b4 <__hi0bits>:
 80113b4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80113b8:	4603      	mov	r3, r0
 80113ba:	bf36      	itet	cc
 80113bc:	0403      	lslcc	r3, r0, #16
 80113be:	2000      	movcs	r0, #0
 80113c0:	2010      	movcc	r0, #16
 80113c2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80113c6:	bf3c      	itt	cc
 80113c8:	021b      	lslcc	r3, r3, #8
 80113ca:	3008      	addcc	r0, #8
 80113cc:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80113d0:	bf3c      	itt	cc
 80113d2:	011b      	lslcc	r3, r3, #4
 80113d4:	3004      	addcc	r0, #4
 80113d6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80113da:	bf3c      	itt	cc
 80113dc:	009b      	lslcc	r3, r3, #2
 80113de:	3002      	addcc	r0, #2
 80113e0:	2b00      	cmp	r3, #0
 80113e2:	db05      	blt.n	80113f0 <__hi0bits+0x3c>
 80113e4:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80113e8:	f100 0001 	add.w	r0, r0, #1
 80113ec:	bf08      	it	eq
 80113ee:	2020      	moveq	r0, #32
 80113f0:	4770      	bx	lr

080113f2 <__lo0bits>:
 80113f2:	6803      	ldr	r3, [r0, #0]
 80113f4:	4602      	mov	r2, r0
 80113f6:	f013 0007 	ands.w	r0, r3, #7
 80113fa:	d00b      	beq.n	8011414 <__lo0bits+0x22>
 80113fc:	07d9      	lsls	r1, r3, #31
 80113fe:	d421      	bmi.n	8011444 <__lo0bits+0x52>
 8011400:	0798      	lsls	r0, r3, #30
 8011402:	bf49      	itett	mi
 8011404:	085b      	lsrmi	r3, r3, #1
 8011406:	089b      	lsrpl	r3, r3, #2
 8011408:	2001      	movmi	r0, #1
 801140a:	6013      	strmi	r3, [r2, #0]
 801140c:	bf5c      	itt	pl
 801140e:	6013      	strpl	r3, [r2, #0]
 8011410:	2002      	movpl	r0, #2
 8011412:	4770      	bx	lr
 8011414:	b299      	uxth	r1, r3
 8011416:	b909      	cbnz	r1, 801141c <__lo0bits+0x2a>
 8011418:	0c1b      	lsrs	r3, r3, #16
 801141a:	2010      	movs	r0, #16
 801141c:	b2d9      	uxtb	r1, r3
 801141e:	b909      	cbnz	r1, 8011424 <__lo0bits+0x32>
 8011420:	3008      	adds	r0, #8
 8011422:	0a1b      	lsrs	r3, r3, #8
 8011424:	0719      	lsls	r1, r3, #28
 8011426:	bf04      	itt	eq
 8011428:	091b      	lsreq	r3, r3, #4
 801142a:	3004      	addeq	r0, #4
 801142c:	0799      	lsls	r1, r3, #30
 801142e:	bf04      	itt	eq
 8011430:	089b      	lsreq	r3, r3, #2
 8011432:	3002      	addeq	r0, #2
 8011434:	07d9      	lsls	r1, r3, #31
 8011436:	d403      	bmi.n	8011440 <__lo0bits+0x4e>
 8011438:	085b      	lsrs	r3, r3, #1
 801143a:	f100 0001 	add.w	r0, r0, #1
 801143e:	d003      	beq.n	8011448 <__lo0bits+0x56>
 8011440:	6013      	str	r3, [r2, #0]
 8011442:	4770      	bx	lr
 8011444:	2000      	movs	r0, #0
 8011446:	4770      	bx	lr
 8011448:	2020      	movs	r0, #32
 801144a:	4770      	bx	lr

0801144c <__i2b>:
 801144c:	b510      	push	{r4, lr}
 801144e:	460c      	mov	r4, r1
 8011450:	2101      	movs	r1, #1
 8011452:	f7ff febd 	bl	80111d0 <_Balloc>
 8011456:	4602      	mov	r2, r0
 8011458:	b928      	cbnz	r0, 8011466 <__i2b+0x1a>
 801145a:	4b05      	ldr	r3, [pc, #20]	@ (8011470 <__i2b+0x24>)
 801145c:	4805      	ldr	r0, [pc, #20]	@ (8011474 <__i2b+0x28>)
 801145e:	f240 1145 	movw	r1, #325	@ 0x145
 8011462:	f001 fbb1 	bl	8012bc8 <__assert_func>
 8011466:	2301      	movs	r3, #1
 8011468:	6144      	str	r4, [r0, #20]
 801146a:	6103      	str	r3, [r0, #16]
 801146c:	bd10      	pop	{r4, pc}
 801146e:	bf00      	nop
 8011470:	0801969a 	.word	0x0801969a
 8011474:	080196ab 	.word	0x080196ab

08011478 <__multiply>:
 8011478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801147c:	4617      	mov	r7, r2
 801147e:	690a      	ldr	r2, [r1, #16]
 8011480:	693b      	ldr	r3, [r7, #16]
 8011482:	429a      	cmp	r2, r3
 8011484:	bfa8      	it	ge
 8011486:	463b      	movge	r3, r7
 8011488:	4689      	mov	r9, r1
 801148a:	bfa4      	itt	ge
 801148c:	460f      	movge	r7, r1
 801148e:	4699      	movge	r9, r3
 8011490:	693d      	ldr	r5, [r7, #16]
 8011492:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8011496:	68bb      	ldr	r3, [r7, #8]
 8011498:	6879      	ldr	r1, [r7, #4]
 801149a:	eb05 060a 	add.w	r6, r5, sl
 801149e:	42b3      	cmp	r3, r6
 80114a0:	b085      	sub	sp, #20
 80114a2:	bfb8      	it	lt
 80114a4:	3101      	addlt	r1, #1
 80114a6:	f7ff fe93 	bl	80111d0 <_Balloc>
 80114aa:	b930      	cbnz	r0, 80114ba <__multiply+0x42>
 80114ac:	4602      	mov	r2, r0
 80114ae:	4b41      	ldr	r3, [pc, #260]	@ (80115b4 <__multiply+0x13c>)
 80114b0:	4841      	ldr	r0, [pc, #260]	@ (80115b8 <__multiply+0x140>)
 80114b2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80114b6:	f001 fb87 	bl	8012bc8 <__assert_func>
 80114ba:	f100 0414 	add.w	r4, r0, #20
 80114be:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 80114c2:	4623      	mov	r3, r4
 80114c4:	2200      	movs	r2, #0
 80114c6:	4573      	cmp	r3, lr
 80114c8:	d320      	bcc.n	801150c <__multiply+0x94>
 80114ca:	f107 0814 	add.w	r8, r7, #20
 80114ce:	f109 0114 	add.w	r1, r9, #20
 80114d2:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 80114d6:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 80114da:	9302      	str	r3, [sp, #8]
 80114dc:	1beb      	subs	r3, r5, r7
 80114de:	3b15      	subs	r3, #21
 80114e0:	f023 0303 	bic.w	r3, r3, #3
 80114e4:	3304      	adds	r3, #4
 80114e6:	3715      	adds	r7, #21
 80114e8:	42bd      	cmp	r5, r7
 80114ea:	bf38      	it	cc
 80114ec:	2304      	movcc	r3, #4
 80114ee:	9301      	str	r3, [sp, #4]
 80114f0:	9b02      	ldr	r3, [sp, #8]
 80114f2:	9103      	str	r1, [sp, #12]
 80114f4:	428b      	cmp	r3, r1
 80114f6:	d80c      	bhi.n	8011512 <__multiply+0x9a>
 80114f8:	2e00      	cmp	r6, #0
 80114fa:	dd03      	ble.n	8011504 <__multiply+0x8c>
 80114fc:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8011500:	2b00      	cmp	r3, #0
 8011502:	d055      	beq.n	80115b0 <__multiply+0x138>
 8011504:	6106      	str	r6, [r0, #16]
 8011506:	b005      	add	sp, #20
 8011508:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801150c:	f843 2b04 	str.w	r2, [r3], #4
 8011510:	e7d9      	b.n	80114c6 <__multiply+0x4e>
 8011512:	f8b1 a000 	ldrh.w	sl, [r1]
 8011516:	f1ba 0f00 	cmp.w	sl, #0
 801151a:	d01f      	beq.n	801155c <__multiply+0xe4>
 801151c:	46c4      	mov	ip, r8
 801151e:	46a1      	mov	r9, r4
 8011520:	2700      	movs	r7, #0
 8011522:	f85c 2b04 	ldr.w	r2, [ip], #4
 8011526:	f8d9 3000 	ldr.w	r3, [r9]
 801152a:	fa1f fb82 	uxth.w	fp, r2
 801152e:	b29b      	uxth	r3, r3
 8011530:	fb0a 330b 	mla	r3, sl, fp, r3
 8011534:	443b      	add	r3, r7
 8011536:	f8d9 7000 	ldr.w	r7, [r9]
 801153a:	0c12      	lsrs	r2, r2, #16
 801153c:	0c3f      	lsrs	r7, r7, #16
 801153e:	fb0a 7202 	mla	r2, sl, r2, r7
 8011542:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8011546:	b29b      	uxth	r3, r3
 8011548:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801154c:	4565      	cmp	r5, ip
 801154e:	f849 3b04 	str.w	r3, [r9], #4
 8011552:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8011556:	d8e4      	bhi.n	8011522 <__multiply+0xaa>
 8011558:	9b01      	ldr	r3, [sp, #4]
 801155a:	50e7      	str	r7, [r4, r3]
 801155c:	9b03      	ldr	r3, [sp, #12]
 801155e:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8011562:	3104      	adds	r1, #4
 8011564:	f1b9 0f00 	cmp.w	r9, #0
 8011568:	d020      	beq.n	80115ac <__multiply+0x134>
 801156a:	6823      	ldr	r3, [r4, #0]
 801156c:	4647      	mov	r7, r8
 801156e:	46a4      	mov	ip, r4
 8011570:	f04f 0a00 	mov.w	sl, #0
 8011574:	f8b7 b000 	ldrh.w	fp, [r7]
 8011578:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 801157c:	fb09 220b 	mla	r2, r9, fp, r2
 8011580:	4452      	add	r2, sl
 8011582:	b29b      	uxth	r3, r3
 8011584:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011588:	f84c 3b04 	str.w	r3, [ip], #4
 801158c:	f857 3b04 	ldr.w	r3, [r7], #4
 8011590:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8011594:	f8bc 3000 	ldrh.w	r3, [ip]
 8011598:	fb09 330a 	mla	r3, r9, sl, r3
 801159c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80115a0:	42bd      	cmp	r5, r7
 80115a2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80115a6:	d8e5      	bhi.n	8011574 <__multiply+0xfc>
 80115a8:	9a01      	ldr	r2, [sp, #4]
 80115aa:	50a3      	str	r3, [r4, r2]
 80115ac:	3404      	adds	r4, #4
 80115ae:	e79f      	b.n	80114f0 <__multiply+0x78>
 80115b0:	3e01      	subs	r6, #1
 80115b2:	e7a1      	b.n	80114f8 <__multiply+0x80>
 80115b4:	0801969a 	.word	0x0801969a
 80115b8:	080196ab 	.word	0x080196ab

080115bc <__pow5mult>:
 80115bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80115c0:	4615      	mov	r5, r2
 80115c2:	f012 0203 	ands.w	r2, r2, #3
 80115c6:	4607      	mov	r7, r0
 80115c8:	460e      	mov	r6, r1
 80115ca:	d007      	beq.n	80115dc <__pow5mult+0x20>
 80115cc:	4c25      	ldr	r4, [pc, #148]	@ (8011664 <__pow5mult+0xa8>)
 80115ce:	3a01      	subs	r2, #1
 80115d0:	2300      	movs	r3, #0
 80115d2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80115d6:	f7ff fe5d 	bl	8011294 <__multadd>
 80115da:	4606      	mov	r6, r0
 80115dc:	10ad      	asrs	r5, r5, #2
 80115de:	d03d      	beq.n	801165c <__pow5mult+0xa0>
 80115e0:	69fc      	ldr	r4, [r7, #28]
 80115e2:	b97c      	cbnz	r4, 8011604 <__pow5mult+0x48>
 80115e4:	2010      	movs	r0, #16
 80115e6:	f7ff fd3d 	bl	8011064 <malloc>
 80115ea:	4602      	mov	r2, r0
 80115ec:	61f8      	str	r0, [r7, #28]
 80115ee:	b928      	cbnz	r0, 80115fc <__pow5mult+0x40>
 80115f0:	4b1d      	ldr	r3, [pc, #116]	@ (8011668 <__pow5mult+0xac>)
 80115f2:	481e      	ldr	r0, [pc, #120]	@ (801166c <__pow5mult+0xb0>)
 80115f4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80115f8:	f001 fae6 	bl	8012bc8 <__assert_func>
 80115fc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8011600:	6004      	str	r4, [r0, #0]
 8011602:	60c4      	str	r4, [r0, #12]
 8011604:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8011608:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801160c:	b94c      	cbnz	r4, 8011622 <__pow5mult+0x66>
 801160e:	f240 2171 	movw	r1, #625	@ 0x271
 8011612:	4638      	mov	r0, r7
 8011614:	f7ff ff1a 	bl	801144c <__i2b>
 8011618:	2300      	movs	r3, #0
 801161a:	f8c8 0008 	str.w	r0, [r8, #8]
 801161e:	4604      	mov	r4, r0
 8011620:	6003      	str	r3, [r0, #0]
 8011622:	f04f 0900 	mov.w	r9, #0
 8011626:	07eb      	lsls	r3, r5, #31
 8011628:	d50a      	bpl.n	8011640 <__pow5mult+0x84>
 801162a:	4631      	mov	r1, r6
 801162c:	4622      	mov	r2, r4
 801162e:	4638      	mov	r0, r7
 8011630:	f7ff ff22 	bl	8011478 <__multiply>
 8011634:	4631      	mov	r1, r6
 8011636:	4680      	mov	r8, r0
 8011638:	4638      	mov	r0, r7
 801163a:	f7ff fe09 	bl	8011250 <_Bfree>
 801163e:	4646      	mov	r6, r8
 8011640:	106d      	asrs	r5, r5, #1
 8011642:	d00b      	beq.n	801165c <__pow5mult+0xa0>
 8011644:	6820      	ldr	r0, [r4, #0]
 8011646:	b938      	cbnz	r0, 8011658 <__pow5mult+0x9c>
 8011648:	4622      	mov	r2, r4
 801164a:	4621      	mov	r1, r4
 801164c:	4638      	mov	r0, r7
 801164e:	f7ff ff13 	bl	8011478 <__multiply>
 8011652:	6020      	str	r0, [r4, #0]
 8011654:	f8c0 9000 	str.w	r9, [r0]
 8011658:	4604      	mov	r4, r0
 801165a:	e7e4      	b.n	8011626 <__pow5mult+0x6a>
 801165c:	4630      	mov	r0, r6
 801165e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011662:	bf00      	nop
 8011664:	080197bc 	.word	0x080197bc
 8011668:	0801962b 	.word	0x0801962b
 801166c:	080196ab 	.word	0x080196ab

08011670 <__lshift>:
 8011670:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011674:	460c      	mov	r4, r1
 8011676:	6849      	ldr	r1, [r1, #4]
 8011678:	6923      	ldr	r3, [r4, #16]
 801167a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801167e:	68a3      	ldr	r3, [r4, #8]
 8011680:	4607      	mov	r7, r0
 8011682:	4691      	mov	r9, r2
 8011684:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011688:	f108 0601 	add.w	r6, r8, #1
 801168c:	42b3      	cmp	r3, r6
 801168e:	db0b      	blt.n	80116a8 <__lshift+0x38>
 8011690:	4638      	mov	r0, r7
 8011692:	f7ff fd9d 	bl	80111d0 <_Balloc>
 8011696:	4605      	mov	r5, r0
 8011698:	b948      	cbnz	r0, 80116ae <__lshift+0x3e>
 801169a:	4602      	mov	r2, r0
 801169c:	4b28      	ldr	r3, [pc, #160]	@ (8011740 <__lshift+0xd0>)
 801169e:	4829      	ldr	r0, [pc, #164]	@ (8011744 <__lshift+0xd4>)
 80116a0:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80116a4:	f001 fa90 	bl	8012bc8 <__assert_func>
 80116a8:	3101      	adds	r1, #1
 80116aa:	005b      	lsls	r3, r3, #1
 80116ac:	e7ee      	b.n	801168c <__lshift+0x1c>
 80116ae:	2300      	movs	r3, #0
 80116b0:	f100 0114 	add.w	r1, r0, #20
 80116b4:	f100 0210 	add.w	r2, r0, #16
 80116b8:	4618      	mov	r0, r3
 80116ba:	4553      	cmp	r3, sl
 80116bc:	db33      	blt.n	8011726 <__lshift+0xb6>
 80116be:	6920      	ldr	r0, [r4, #16]
 80116c0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80116c4:	f104 0314 	add.w	r3, r4, #20
 80116c8:	f019 091f 	ands.w	r9, r9, #31
 80116cc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80116d0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80116d4:	d02b      	beq.n	801172e <__lshift+0xbe>
 80116d6:	f1c9 0e20 	rsb	lr, r9, #32
 80116da:	468a      	mov	sl, r1
 80116dc:	2200      	movs	r2, #0
 80116de:	6818      	ldr	r0, [r3, #0]
 80116e0:	fa00 f009 	lsl.w	r0, r0, r9
 80116e4:	4310      	orrs	r0, r2
 80116e6:	f84a 0b04 	str.w	r0, [sl], #4
 80116ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80116ee:	459c      	cmp	ip, r3
 80116f0:	fa22 f20e 	lsr.w	r2, r2, lr
 80116f4:	d8f3      	bhi.n	80116de <__lshift+0x6e>
 80116f6:	ebac 0304 	sub.w	r3, ip, r4
 80116fa:	3b15      	subs	r3, #21
 80116fc:	f023 0303 	bic.w	r3, r3, #3
 8011700:	3304      	adds	r3, #4
 8011702:	f104 0015 	add.w	r0, r4, #21
 8011706:	4560      	cmp	r0, ip
 8011708:	bf88      	it	hi
 801170a:	2304      	movhi	r3, #4
 801170c:	50ca      	str	r2, [r1, r3]
 801170e:	b10a      	cbz	r2, 8011714 <__lshift+0xa4>
 8011710:	f108 0602 	add.w	r6, r8, #2
 8011714:	3e01      	subs	r6, #1
 8011716:	4638      	mov	r0, r7
 8011718:	612e      	str	r6, [r5, #16]
 801171a:	4621      	mov	r1, r4
 801171c:	f7ff fd98 	bl	8011250 <_Bfree>
 8011720:	4628      	mov	r0, r5
 8011722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011726:	f842 0f04 	str.w	r0, [r2, #4]!
 801172a:	3301      	adds	r3, #1
 801172c:	e7c5      	b.n	80116ba <__lshift+0x4a>
 801172e:	3904      	subs	r1, #4
 8011730:	f853 2b04 	ldr.w	r2, [r3], #4
 8011734:	f841 2f04 	str.w	r2, [r1, #4]!
 8011738:	459c      	cmp	ip, r3
 801173a:	d8f9      	bhi.n	8011730 <__lshift+0xc0>
 801173c:	e7ea      	b.n	8011714 <__lshift+0xa4>
 801173e:	bf00      	nop
 8011740:	0801969a 	.word	0x0801969a
 8011744:	080196ab 	.word	0x080196ab

08011748 <__mcmp>:
 8011748:	690a      	ldr	r2, [r1, #16]
 801174a:	4603      	mov	r3, r0
 801174c:	6900      	ldr	r0, [r0, #16]
 801174e:	1a80      	subs	r0, r0, r2
 8011750:	b530      	push	{r4, r5, lr}
 8011752:	d10e      	bne.n	8011772 <__mcmp+0x2a>
 8011754:	3314      	adds	r3, #20
 8011756:	3114      	adds	r1, #20
 8011758:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 801175c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8011760:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8011764:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8011768:	4295      	cmp	r5, r2
 801176a:	d003      	beq.n	8011774 <__mcmp+0x2c>
 801176c:	d205      	bcs.n	801177a <__mcmp+0x32>
 801176e:	f04f 30ff 	mov.w	r0, #4294967295
 8011772:	bd30      	pop	{r4, r5, pc}
 8011774:	42a3      	cmp	r3, r4
 8011776:	d3f3      	bcc.n	8011760 <__mcmp+0x18>
 8011778:	e7fb      	b.n	8011772 <__mcmp+0x2a>
 801177a:	2001      	movs	r0, #1
 801177c:	e7f9      	b.n	8011772 <__mcmp+0x2a>
	...

08011780 <__mdiff>:
 8011780:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011784:	4689      	mov	r9, r1
 8011786:	4606      	mov	r6, r0
 8011788:	4611      	mov	r1, r2
 801178a:	4648      	mov	r0, r9
 801178c:	4614      	mov	r4, r2
 801178e:	f7ff ffdb 	bl	8011748 <__mcmp>
 8011792:	1e05      	subs	r5, r0, #0
 8011794:	d112      	bne.n	80117bc <__mdiff+0x3c>
 8011796:	4629      	mov	r1, r5
 8011798:	4630      	mov	r0, r6
 801179a:	f7ff fd19 	bl	80111d0 <_Balloc>
 801179e:	4602      	mov	r2, r0
 80117a0:	b928      	cbnz	r0, 80117ae <__mdiff+0x2e>
 80117a2:	4b3f      	ldr	r3, [pc, #252]	@ (80118a0 <__mdiff+0x120>)
 80117a4:	f240 2137 	movw	r1, #567	@ 0x237
 80117a8:	483e      	ldr	r0, [pc, #248]	@ (80118a4 <__mdiff+0x124>)
 80117aa:	f001 fa0d 	bl	8012bc8 <__assert_func>
 80117ae:	2301      	movs	r3, #1
 80117b0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80117b4:	4610      	mov	r0, r2
 80117b6:	b003      	add	sp, #12
 80117b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117bc:	bfbc      	itt	lt
 80117be:	464b      	movlt	r3, r9
 80117c0:	46a1      	movlt	r9, r4
 80117c2:	4630      	mov	r0, r6
 80117c4:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80117c8:	bfba      	itte	lt
 80117ca:	461c      	movlt	r4, r3
 80117cc:	2501      	movlt	r5, #1
 80117ce:	2500      	movge	r5, #0
 80117d0:	f7ff fcfe 	bl	80111d0 <_Balloc>
 80117d4:	4602      	mov	r2, r0
 80117d6:	b918      	cbnz	r0, 80117e0 <__mdiff+0x60>
 80117d8:	4b31      	ldr	r3, [pc, #196]	@ (80118a0 <__mdiff+0x120>)
 80117da:	f240 2145 	movw	r1, #581	@ 0x245
 80117de:	e7e3      	b.n	80117a8 <__mdiff+0x28>
 80117e0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80117e4:	6926      	ldr	r6, [r4, #16]
 80117e6:	60c5      	str	r5, [r0, #12]
 80117e8:	f109 0310 	add.w	r3, r9, #16
 80117ec:	f109 0514 	add.w	r5, r9, #20
 80117f0:	f104 0e14 	add.w	lr, r4, #20
 80117f4:	f100 0b14 	add.w	fp, r0, #20
 80117f8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80117fc:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8011800:	9301      	str	r3, [sp, #4]
 8011802:	46d9      	mov	r9, fp
 8011804:	f04f 0c00 	mov.w	ip, #0
 8011808:	9b01      	ldr	r3, [sp, #4]
 801180a:	f85e 0b04 	ldr.w	r0, [lr], #4
 801180e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8011812:	9301      	str	r3, [sp, #4]
 8011814:	fa1f f38a 	uxth.w	r3, sl
 8011818:	4619      	mov	r1, r3
 801181a:	b283      	uxth	r3, r0
 801181c:	1acb      	subs	r3, r1, r3
 801181e:	0c00      	lsrs	r0, r0, #16
 8011820:	4463      	add	r3, ip
 8011822:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8011826:	eb00 4023 	add.w	r0, r0, r3, asr #16
 801182a:	b29b      	uxth	r3, r3
 801182c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8011830:	4576      	cmp	r6, lr
 8011832:	f849 3b04 	str.w	r3, [r9], #4
 8011836:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801183a:	d8e5      	bhi.n	8011808 <__mdiff+0x88>
 801183c:	1b33      	subs	r3, r6, r4
 801183e:	3b15      	subs	r3, #21
 8011840:	f023 0303 	bic.w	r3, r3, #3
 8011844:	3415      	adds	r4, #21
 8011846:	3304      	adds	r3, #4
 8011848:	42a6      	cmp	r6, r4
 801184a:	bf38      	it	cc
 801184c:	2304      	movcc	r3, #4
 801184e:	441d      	add	r5, r3
 8011850:	445b      	add	r3, fp
 8011852:	461e      	mov	r6, r3
 8011854:	462c      	mov	r4, r5
 8011856:	4544      	cmp	r4, r8
 8011858:	d30e      	bcc.n	8011878 <__mdiff+0xf8>
 801185a:	f108 0103 	add.w	r1, r8, #3
 801185e:	1b49      	subs	r1, r1, r5
 8011860:	f021 0103 	bic.w	r1, r1, #3
 8011864:	3d03      	subs	r5, #3
 8011866:	45a8      	cmp	r8, r5
 8011868:	bf38      	it	cc
 801186a:	2100      	movcc	r1, #0
 801186c:	440b      	add	r3, r1
 801186e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011872:	b191      	cbz	r1, 801189a <__mdiff+0x11a>
 8011874:	6117      	str	r7, [r2, #16]
 8011876:	e79d      	b.n	80117b4 <__mdiff+0x34>
 8011878:	f854 1b04 	ldr.w	r1, [r4], #4
 801187c:	46e6      	mov	lr, ip
 801187e:	0c08      	lsrs	r0, r1, #16
 8011880:	fa1c fc81 	uxtah	ip, ip, r1
 8011884:	4471      	add	r1, lr
 8011886:	eb00 402c 	add.w	r0, r0, ip, asr #16
 801188a:	b289      	uxth	r1, r1
 801188c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8011890:	f846 1b04 	str.w	r1, [r6], #4
 8011894:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011898:	e7dd      	b.n	8011856 <__mdiff+0xd6>
 801189a:	3f01      	subs	r7, #1
 801189c:	e7e7      	b.n	801186e <__mdiff+0xee>
 801189e:	bf00      	nop
 80118a0:	0801969a 	.word	0x0801969a
 80118a4:	080196ab 	.word	0x080196ab

080118a8 <__ulp>:
 80118a8:	b082      	sub	sp, #8
 80118aa:	ed8d 0b00 	vstr	d0, [sp]
 80118ae:	9a01      	ldr	r2, [sp, #4]
 80118b0:	4b0f      	ldr	r3, [pc, #60]	@ (80118f0 <__ulp+0x48>)
 80118b2:	4013      	ands	r3, r2
 80118b4:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 80118b8:	2b00      	cmp	r3, #0
 80118ba:	dc08      	bgt.n	80118ce <__ulp+0x26>
 80118bc:	425b      	negs	r3, r3
 80118be:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 80118c2:	ea4f 5223 	mov.w	r2, r3, asr #20
 80118c6:	da04      	bge.n	80118d2 <__ulp+0x2a>
 80118c8:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 80118cc:	4113      	asrs	r3, r2
 80118ce:	2200      	movs	r2, #0
 80118d0:	e008      	b.n	80118e4 <__ulp+0x3c>
 80118d2:	f1a2 0314 	sub.w	r3, r2, #20
 80118d6:	2b1e      	cmp	r3, #30
 80118d8:	bfda      	itte	le
 80118da:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 80118de:	40da      	lsrle	r2, r3
 80118e0:	2201      	movgt	r2, #1
 80118e2:	2300      	movs	r3, #0
 80118e4:	4619      	mov	r1, r3
 80118e6:	4610      	mov	r0, r2
 80118e8:	ec41 0b10 	vmov	d0, r0, r1
 80118ec:	b002      	add	sp, #8
 80118ee:	4770      	bx	lr
 80118f0:	7ff00000 	.word	0x7ff00000

080118f4 <__b2d>:
 80118f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118f8:	6906      	ldr	r6, [r0, #16]
 80118fa:	f100 0814 	add.w	r8, r0, #20
 80118fe:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8011902:	1f37      	subs	r7, r6, #4
 8011904:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8011908:	4610      	mov	r0, r2
 801190a:	f7ff fd53 	bl	80113b4 <__hi0bits>
 801190e:	f1c0 0320 	rsb	r3, r0, #32
 8011912:	280a      	cmp	r0, #10
 8011914:	600b      	str	r3, [r1, #0]
 8011916:	491b      	ldr	r1, [pc, #108]	@ (8011984 <__b2d+0x90>)
 8011918:	dc15      	bgt.n	8011946 <__b2d+0x52>
 801191a:	f1c0 0c0b 	rsb	ip, r0, #11
 801191e:	fa22 f30c 	lsr.w	r3, r2, ip
 8011922:	45b8      	cmp	r8, r7
 8011924:	ea43 0501 	orr.w	r5, r3, r1
 8011928:	bf34      	ite	cc
 801192a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 801192e:	2300      	movcs	r3, #0
 8011930:	3015      	adds	r0, #21
 8011932:	fa02 f000 	lsl.w	r0, r2, r0
 8011936:	fa23 f30c 	lsr.w	r3, r3, ip
 801193a:	4303      	orrs	r3, r0
 801193c:	461c      	mov	r4, r3
 801193e:	ec45 4b10 	vmov	d0, r4, r5
 8011942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011946:	45b8      	cmp	r8, r7
 8011948:	bf3a      	itte	cc
 801194a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 801194e:	f1a6 0708 	subcc.w	r7, r6, #8
 8011952:	2300      	movcs	r3, #0
 8011954:	380b      	subs	r0, #11
 8011956:	d012      	beq.n	801197e <__b2d+0x8a>
 8011958:	f1c0 0120 	rsb	r1, r0, #32
 801195c:	fa23 f401 	lsr.w	r4, r3, r1
 8011960:	4082      	lsls	r2, r0
 8011962:	4322      	orrs	r2, r4
 8011964:	4547      	cmp	r7, r8
 8011966:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 801196a:	bf8c      	ite	hi
 801196c:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8011970:	2200      	movls	r2, #0
 8011972:	4083      	lsls	r3, r0
 8011974:	40ca      	lsrs	r2, r1
 8011976:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 801197a:	4313      	orrs	r3, r2
 801197c:	e7de      	b.n	801193c <__b2d+0x48>
 801197e:	ea42 0501 	orr.w	r5, r2, r1
 8011982:	e7db      	b.n	801193c <__b2d+0x48>
 8011984:	3ff00000 	.word	0x3ff00000

08011988 <__d2b>:
 8011988:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801198c:	460f      	mov	r7, r1
 801198e:	2101      	movs	r1, #1
 8011990:	ec59 8b10 	vmov	r8, r9, d0
 8011994:	4616      	mov	r6, r2
 8011996:	f7ff fc1b 	bl	80111d0 <_Balloc>
 801199a:	4604      	mov	r4, r0
 801199c:	b930      	cbnz	r0, 80119ac <__d2b+0x24>
 801199e:	4602      	mov	r2, r0
 80119a0:	4b23      	ldr	r3, [pc, #140]	@ (8011a30 <__d2b+0xa8>)
 80119a2:	4824      	ldr	r0, [pc, #144]	@ (8011a34 <__d2b+0xac>)
 80119a4:	f240 310f 	movw	r1, #783	@ 0x30f
 80119a8:	f001 f90e 	bl	8012bc8 <__assert_func>
 80119ac:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80119b0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80119b4:	b10d      	cbz	r5, 80119ba <__d2b+0x32>
 80119b6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80119ba:	9301      	str	r3, [sp, #4]
 80119bc:	f1b8 0300 	subs.w	r3, r8, #0
 80119c0:	d023      	beq.n	8011a0a <__d2b+0x82>
 80119c2:	4668      	mov	r0, sp
 80119c4:	9300      	str	r3, [sp, #0]
 80119c6:	f7ff fd14 	bl	80113f2 <__lo0bits>
 80119ca:	e9dd 1200 	ldrd	r1, r2, [sp]
 80119ce:	b1d0      	cbz	r0, 8011a06 <__d2b+0x7e>
 80119d0:	f1c0 0320 	rsb	r3, r0, #32
 80119d4:	fa02 f303 	lsl.w	r3, r2, r3
 80119d8:	430b      	orrs	r3, r1
 80119da:	40c2      	lsrs	r2, r0
 80119dc:	6163      	str	r3, [r4, #20]
 80119de:	9201      	str	r2, [sp, #4]
 80119e0:	9b01      	ldr	r3, [sp, #4]
 80119e2:	61a3      	str	r3, [r4, #24]
 80119e4:	2b00      	cmp	r3, #0
 80119e6:	bf0c      	ite	eq
 80119e8:	2201      	moveq	r2, #1
 80119ea:	2202      	movne	r2, #2
 80119ec:	6122      	str	r2, [r4, #16]
 80119ee:	b1a5      	cbz	r5, 8011a1a <__d2b+0x92>
 80119f0:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80119f4:	4405      	add	r5, r0
 80119f6:	603d      	str	r5, [r7, #0]
 80119f8:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80119fc:	6030      	str	r0, [r6, #0]
 80119fe:	4620      	mov	r0, r4
 8011a00:	b003      	add	sp, #12
 8011a02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a06:	6161      	str	r1, [r4, #20]
 8011a08:	e7ea      	b.n	80119e0 <__d2b+0x58>
 8011a0a:	a801      	add	r0, sp, #4
 8011a0c:	f7ff fcf1 	bl	80113f2 <__lo0bits>
 8011a10:	9b01      	ldr	r3, [sp, #4]
 8011a12:	6163      	str	r3, [r4, #20]
 8011a14:	3020      	adds	r0, #32
 8011a16:	2201      	movs	r2, #1
 8011a18:	e7e8      	b.n	80119ec <__d2b+0x64>
 8011a1a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011a1e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8011a22:	6038      	str	r0, [r7, #0]
 8011a24:	6918      	ldr	r0, [r3, #16]
 8011a26:	f7ff fcc5 	bl	80113b4 <__hi0bits>
 8011a2a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011a2e:	e7e5      	b.n	80119fc <__d2b+0x74>
 8011a30:	0801969a 	.word	0x0801969a
 8011a34:	080196ab 	.word	0x080196ab

08011a38 <__ratio>:
 8011a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a3c:	b085      	sub	sp, #20
 8011a3e:	e9cd 1000 	strd	r1, r0, [sp]
 8011a42:	a902      	add	r1, sp, #8
 8011a44:	f7ff ff56 	bl	80118f4 <__b2d>
 8011a48:	9800      	ldr	r0, [sp, #0]
 8011a4a:	a903      	add	r1, sp, #12
 8011a4c:	ec55 4b10 	vmov	r4, r5, d0
 8011a50:	f7ff ff50 	bl	80118f4 <__b2d>
 8011a54:	9b01      	ldr	r3, [sp, #4]
 8011a56:	6919      	ldr	r1, [r3, #16]
 8011a58:	9b00      	ldr	r3, [sp, #0]
 8011a5a:	691b      	ldr	r3, [r3, #16]
 8011a5c:	1ac9      	subs	r1, r1, r3
 8011a5e:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8011a62:	1a9b      	subs	r3, r3, r2
 8011a64:	ec5b ab10 	vmov	sl, fp, d0
 8011a68:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8011a6c:	2b00      	cmp	r3, #0
 8011a6e:	bfce      	itee	gt
 8011a70:	462a      	movgt	r2, r5
 8011a72:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8011a76:	465a      	movle	r2, fp
 8011a78:	462f      	mov	r7, r5
 8011a7a:	46d9      	mov	r9, fp
 8011a7c:	bfcc      	ite	gt
 8011a7e:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8011a82:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8011a86:	464b      	mov	r3, r9
 8011a88:	4652      	mov	r2, sl
 8011a8a:	4620      	mov	r0, r4
 8011a8c:	4639      	mov	r1, r7
 8011a8e:	f7ee feb5 	bl	80007fc <__aeabi_ddiv>
 8011a92:	ec41 0b10 	vmov	d0, r0, r1
 8011a96:	b005      	add	sp, #20
 8011a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011a9c <__copybits>:
 8011a9c:	3901      	subs	r1, #1
 8011a9e:	b570      	push	{r4, r5, r6, lr}
 8011aa0:	1149      	asrs	r1, r1, #5
 8011aa2:	6914      	ldr	r4, [r2, #16]
 8011aa4:	3101      	adds	r1, #1
 8011aa6:	f102 0314 	add.w	r3, r2, #20
 8011aaa:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011aae:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8011ab2:	1f05      	subs	r5, r0, #4
 8011ab4:	42a3      	cmp	r3, r4
 8011ab6:	d30c      	bcc.n	8011ad2 <__copybits+0x36>
 8011ab8:	1aa3      	subs	r3, r4, r2
 8011aba:	3b11      	subs	r3, #17
 8011abc:	f023 0303 	bic.w	r3, r3, #3
 8011ac0:	3211      	adds	r2, #17
 8011ac2:	42a2      	cmp	r2, r4
 8011ac4:	bf88      	it	hi
 8011ac6:	2300      	movhi	r3, #0
 8011ac8:	4418      	add	r0, r3
 8011aca:	2300      	movs	r3, #0
 8011acc:	4288      	cmp	r0, r1
 8011ace:	d305      	bcc.n	8011adc <__copybits+0x40>
 8011ad0:	bd70      	pop	{r4, r5, r6, pc}
 8011ad2:	f853 6b04 	ldr.w	r6, [r3], #4
 8011ad6:	f845 6f04 	str.w	r6, [r5, #4]!
 8011ada:	e7eb      	b.n	8011ab4 <__copybits+0x18>
 8011adc:	f840 3b04 	str.w	r3, [r0], #4
 8011ae0:	e7f4      	b.n	8011acc <__copybits+0x30>

08011ae2 <__any_on>:
 8011ae2:	f100 0214 	add.w	r2, r0, #20
 8011ae6:	6900      	ldr	r0, [r0, #16]
 8011ae8:	114b      	asrs	r3, r1, #5
 8011aea:	4298      	cmp	r0, r3
 8011aec:	b510      	push	{r4, lr}
 8011aee:	db11      	blt.n	8011b14 <__any_on+0x32>
 8011af0:	dd0a      	ble.n	8011b08 <__any_on+0x26>
 8011af2:	f011 011f 	ands.w	r1, r1, #31
 8011af6:	d007      	beq.n	8011b08 <__any_on+0x26>
 8011af8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8011afc:	fa24 f001 	lsr.w	r0, r4, r1
 8011b00:	fa00 f101 	lsl.w	r1, r0, r1
 8011b04:	428c      	cmp	r4, r1
 8011b06:	d10b      	bne.n	8011b20 <__any_on+0x3e>
 8011b08:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011b0c:	4293      	cmp	r3, r2
 8011b0e:	d803      	bhi.n	8011b18 <__any_on+0x36>
 8011b10:	2000      	movs	r0, #0
 8011b12:	bd10      	pop	{r4, pc}
 8011b14:	4603      	mov	r3, r0
 8011b16:	e7f7      	b.n	8011b08 <__any_on+0x26>
 8011b18:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8011b1c:	2900      	cmp	r1, #0
 8011b1e:	d0f5      	beq.n	8011b0c <__any_on+0x2a>
 8011b20:	2001      	movs	r0, #1
 8011b22:	e7f6      	b.n	8011b12 <__any_on+0x30>

08011b24 <sulp>:
 8011b24:	b570      	push	{r4, r5, r6, lr}
 8011b26:	4604      	mov	r4, r0
 8011b28:	460d      	mov	r5, r1
 8011b2a:	ec45 4b10 	vmov	d0, r4, r5
 8011b2e:	4616      	mov	r6, r2
 8011b30:	f7ff feba 	bl	80118a8 <__ulp>
 8011b34:	ec51 0b10 	vmov	r0, r1, d0
 8011b38:	b17e      	cbz	r6, 8011b5a <sulp+0x36>
 8011b3a:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8011b3e:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8011b42:	2b00      	cmp	r3, #0
 8011b44:	dd09      	ble.n	8011b5a <sulp+0x36>
 8011b46:	051b      	lsls	r3, r3, #20
 8011b48:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8011b4c:	2400      	movs	r4, #0
 8011b4e:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8011b52:	4622      	mov	r2, r4
 8011b54:	462b      	mov	r3, r5
 8011b56:	f7ee fd27 	bl	80005a8 <__aeabi_dmul>
 8011b5a:	ec41 0b10 	vmov	d0, r0, r1
 8011b5e:	bd70      	pop	{r4, r5, r6, pc}

08011b60 <_strtod_l>:
 8011b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b64:	b09f      	sub	sp, #124	@ 0x7c
 8011b66:	460c      	mov	r4, r1
 8011b68:	9217      	str	r2, [sp, #92]	@ 0x5c
 8011b6a:	2200      	movs	r2, #0
 8011b6c:	921a      	str	r2, [sp, #104]	@ 0x68
 8011b6e:	9005      	str	r0, [sp, #20]
 8011b70:	f04f 0a00 	mov.w	sl, #0
 8011b74:	f04f 0b00 	mov.w	fp, #0
 8011b78:	460a      	mov	r2, r1
 8011b7a:	9219      	str	r2, [sp, #100]	@ 0x64
 8011b7c:	7811      	ldrb	r1, [r2, #0]
 8011b7e:	292b      	cmp	r1, #43	@ 0x2b
 8011b80:	d04a      	beq.n	8011c18 <_strtod_l+0xb8>
 8011b82:	d838      	bhi.n	8011bf6 <_strtod_l+0x96>
 8011b84:	290d      	cmp	r1, #13
 8011b86:	d832      	bhi.n	8011bee <_strtod_l+0x8e>
 8011b88:	2908      	cmp	r1, #8
 8011b8a:	d832      	bhi.n	8011bf2 <_strtod_l+0x92>
 8011b8c:	2900      	cmp	r1, #0
 8011b8e:	d03b      	beq.n	8011c08 <_strtod_l+0xa8>
 8011b90:	2200      	movs	r2, #0
 8011b92:	920e      	str	r2, [sp, #56]	@ 0x38
 8011b94:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8011b96:	782a      	ldrb	r2, [r5, #0]
 8011b98:	2a30      	cmp	r2, #48	@ 0x30
 8011b9a:	f040 80b2 	bne.w	8011d02 <_strtod_l+0x1a2>
 8011b9e:	786a      	ldrb	r2, [r5, #1]
 8011ba0:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8011ba4:	2a58      	cmp	r2, #88	@ 0x58
 8011ba6:	d16e      	bne.n	8011c86 <_strtod_l+0x126>
 8011ba8:	9302      	str	r3, [sp, #8]
 8011baa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011bac:	9301      	str	r3, [sp, #4]
 8011bae:	ab1a      	add	r3, sp, #104	@ 0x68
 8011bb0:	9300      	str	r3, [sp, #0]
 8011bb2:	4a8f      	ldr	r2, [pc, #572]	@ (8011df0 <_strtod_l+0x290>)
 8011bb4:	9805      	ldr	r0, [sp, #20]
 8011bb6:	ab1b      	add	r3, sp, #108	@ 0x6c
 8011bb8:	a919      	add	r1, sp, #100	@ 0x64
 8011bba:	f001 f89f 	bl	8012cfc <__gethex>
 8011bbe:	f010 060f 	ands.w	r6, r0, #15
 8011bc2:	4604      	mov	r4, r0
 8011bc4:	d005      	beq.n	8011bd2 <_strtod_l+0x72>
 8011bc6:	2e06      	cmp	r6, #6
 8011bc8:	d128      	bne.n	8011c1c <_strtod_l+0xbc>
 8011bca:	3501      	adds	r5, #1
 8011bcc:	2300      	movs	r3, #0
 8011bce:	9519      	str	r5, [sp, #100]	@ 0x64
 8011bd0:	930e      	str	r3, [sp, #56]	@ 0x38
 8011bd2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8011bd4:	2b00      	cmp	r3, #0
 8011bd6:	f040 858e 	bne.w	80126f6 <_strtod_l+0xb96>
 8011bda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011bdc:	b1cb      	cbz	r3, 8011c12 <_strtod_l+0xb2>
 8011bde:	4652      	mov	r2, sl
 8011be0:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8011be4:	ec43 2b10 	vmov	d0, r2, r3
 8011be8:	b01f      	add	sp, #124	@ 0x7c
 8011bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bee:	2920      	cmp	r1, #32
 8011bf0:	d1ce      	bne.n	8011b90 <_strtod_l+0x30>
 8011bf2:	3201      	adds	r2, #1
 8011bf4:	e7c1      	b.n	8011b7a <_strtod_l+0x1a>
 8011bf6:	292d      	cmp	r1, #45	@ 0x2d
 8011bf8:	d1ca      	bne.n	8011b90 <_strtod_l+0x30>
 8011bfa:	2101      	movs	r1, #1
 8011bfc:	910e      	str	r1, [sp, #56]	@ 0x38
 8011bfe:	1c51      	adds	r1, r2, #1
 8011c00:	9119      	str	r1, [sp, #100]	@ 0x64
 8011c02:	7852      	ldrb	r2, [r2, #1]
 8011c04:	2a00      	cmp	r2, #0
 8011c06:	d1c5      	bne.n	8011b94 <_strtod_l+0x34>
 8011c08:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8011c0a:	9419      	str	r4, [sp, #100]	@ 0x64
 8011c0c:	2b00      	cmp	r3, #0
 8011c0e:	f040 8570 	bne.w	80126f2 <_strtod_l+0xb92>
 8011c12:	4652      	mov	r2, sl
 8011c14:	465b      	mov	r3, fp
 8011c16:	e7e5      	b.n	8011be4 <_strtod_l+0x84>
 8011c18:	2100      	movs	r1, #0
 8011c1a:	e7ef      	b.n	8011bfc <_strtod_l+0x9c>
 8011c1c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8011c1e:	b13a      	cbz	r2, 8011c30 <_strtod_l+0xd0>
 8011c20:	2135      	movs	r1, #53	@ 0x35
 8011c22:	a81c      	add	r0, sp, #112	@ 0x70
 8011c24:	f7ff ff3a 	bl	8011a9c <__copybits>
 8011c28:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8011c2a:	9805      	ldr	r0, [sp, #20]
 8011c2c:	f7ff fb10 	bl	8011250 <_Bfree>
 8011c30:	3e01      	subs	r6, #1
 8011c32:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011c34:	2e04      	cmp	r6, #4
 8011c36:	d806      	bhi.n	8011c46 <_strtod_l+0xe6>
 8011c38:	e8df f006 	tbb	[pc, r6]
 8011c3c:	201d0314 	.word	0x201d0314
 8011c40:	14          	.byte	0x14
 8011c41:	00          	.byte	0x00
 8011c42:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8011c46:	05e1      	lsls	r1, r4, #23
 8011c48:	bf48      	it	mi
 8011c4a:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8011c4e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8011c52:	0d1b      	lsrs	r3, r3, #20
 8011c54:	051b      	lsls	r3, r3, #20
 8011c56:	2b00      	cmp	r3, #0
 8011c58:	d1bb      	bne.n	8011bd2 <_strtod_l+0x72>
 8011c5a:	f7fe fb1f 	bl	801029c <__errno>
 8011c5e:	2322      	movs	r3, #34	@ 0x22
 8011c60:	6003      	str	r3, [r0, #0]
 8011c62:	e7b6      	b.n	8011bd2 <_strtod_l+0x72>
 8011c64:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8011c68:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8011c6c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8011c70:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8011c74:	e7e7      	b.n	8011c46 <_strtod_l+0xe6>
 8011c76:	f8df b180 	ldr.w	fp, [pc, #384]	@ 8011df8 <_strtod_l+0x298>
 8011c7a:	e7e4      	b.n	8011c46 <_strtod_l+0xe6>
 8011c7c:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8011c80:	f04f 3aff 	mov.w	sl, #4294967295
 8011c84:	e7df      	b.n	8011c46 <_strtod_l+0xe6>
 8011c86:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011c88:	1c5a      	adds	r2, r3, #1
 8011c8a:	9219      	str	r2, [sp, #100]	@ 0x64
 8011c8c:	785b      	ldrb	r3, [r3, #1]
 8011c8e:	2b30      	cmp	r3, #48	@ 0x30
 8011c90:	d0f9      	beq.n	8011c86 <_strtod_l+0x126>
 8011c92:	2b00      	cmp	r3, #0
 8011c94:	d09d      	beq.n	8011bd2 <_strtod_l+0x72>
 8011c96:	2301      	movs	r3, #1
 8011c98:	2700      	movs	r7, #0
 8011c9a:	9308      	str	r3, [sp, #32]
 8011c9c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011c9e:	930c      	str	r3, [sp, #48]	@ 0x30
 8011ca0:	970b      	str	r7, [sp, #44]	@ 0x2c
 8011ca2:	46b9      	mov	r9, r7
 8011ca4:	220a      	movs	r2, #10
 8011ca6:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8011ca8:	7805      	ldrb	r5, [r0, #0]
 8011caa:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8011cae:	b2d9      	uxtb	r1, r3
 8011cb0:	2909      	cmp	r1, #9
 8011cb2:	d928      	bls.n	8011d06 <_strtod_l+0x1a6>
 8011cb4:	494f      	ldr	r1, [pc, #316]	@ (8011df4 <_strtod_l+0x294>)
 8011cb6:	2201      	movs	r2, #1
 8011cb8:	f000 ff5a 	bl	8012b70 <strncmp>
 8011cbc:	2800      	cmp	r0, #0
 8011cbe:	d032      	beq.n	8011d26 <_strtod_l+0x1c6>
 8011cc0:	2000      	movs	r0, #0
 8011cc2:	462a      	mov	r2, r5
 8011cc4:	900a      	str	r0, [sp, #40]	@ 0x28
 8011cc6:	464d      	mov	r5, r9
 8011cc8:	4603      	mov	r3, r0
 8011cca:	2a65      	cmp	r2, #101	@ 0x65
 8011ccc:	d001      	beq.n	8011cd2 <_strtod_l+0x172>
 8011cce:	2a45      	cmp	r2, #69	@ 0x45
 8011cd0:	d114      	bne.n	8011cfc <_strtod_l+0x19c>
 8011cd2:	b91d      	cbnz	r5, 8011cdc <_strtod_l+0x17c>
 8011cd4:	9a08      	ldr	r2, [sp, #32]
 8011cd6:	4302      	orrs	r2, r0
 8011cd8:	d096      	beq.n	8011c08 <_strtod_l+0xa8>
 8011cda:	2500      	movs	r5, #0
 8011cdc:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8011cde:	1c62      	adds	r2, r4, #1
 8011ce0:	9219      	str	r2, [sp, #100]	@ 0x64
 8011ce2:	7862      	ldrb	r2, [r4, #1]
 8011ce4:	2a2b      	cmp	r2, #43	@ 0x2b
 8011ce6:	d07a      	beq.n	8011dde <_strtod_l+0x27e>
 8011ce8:	2a2d      	cmp	r2, #45	@ 0x2d
 8011cea:	d07e      	beq.n	8011dea <_strtod_l+0x28a>
 8011cec:	f04f 0c00 	mov.w	ip, #0
 8011cf0:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8011cf4:	2909      	cmp	r1, #9
 8011cf6:	f240 8085 	bls.w	8011e04 <_strtod_l+0x2a4>
 8011cfa:	9419      	str	r4, [sp, #100]	@ 0x64
 8011cfc:	f04f 0800 	mov.w	r8, #0
 8011d00:	e0a5      	b.n	8011e4e <_strtod_l+0x2ee>
 8011d02:	2300      	movs	r3, #0
 8011d04:	e7c8      	b.n	8011c98 <_strtod_l+0x138>
 8011d06:	f1b9 0f08 	cmp.w	r9, #8
 8011d0a:	bfd8      	it	le
 8011d0c:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8011d0e:	f100 0001 	add.w	r0, r0, #1
 8011d12:	bfda      	itte	le
 8011d14:	fb02 3301 	mlale	r3, r2, r1, r3
 8011d18:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8011d1a:	fb02 3707 	mlagt	r7, r2, r7, r3
 8011d1e:	f109 0901 	add.w	r9, r9, #1
 8011d22:	9019      	str	r0, [sp, #100]	@ 0x64
 8011d24:	e7bf      	b.n	8011ca6 <_strtod_l+0x146>
 8011d26:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011d28:	1c5a      	adds	r2, r3, #1
 8011d2a:	9219      	str	r2, [sp, #100]	@ 0x64
 8011d2c:	785a      	ldrb	r2, [r3, #1]
 8011d2e:	f1b9 0f00 	cmp.w	r9, #0
 8011d32:	d03b      	beq.n	8011dac <_strtod_l+0x24c>
 8011d34:	900a      	str	r0, [sp, #40]	@ 0x28
 8011d36:	464d      	mov	r5, r9
 8011d38:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8011d3c:	2b09      	cmp	r3, #9
 8011d3e:	d912      	bls.n	8011d66 <_strtod_l+0x206>
 8011d40:	2301      	movs	r3, #1
 8011d42:	e7c2      	b.n	8011cca <_strtod_l+0x16a>
 8011d44:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011d46:	1c5a      	adds	r2, r3, #1
 8011d48:	9219      	str	r2, [sp, #100]	@ 0x64
 8011d4a:	785a      	ldrb	r2, [r3, #1]
 8011d4c:	3001      	adds	r0, #1
 8011d4e:	2a30      	cmp	r2, #48	@ 0x30
 8011d50:	d0f8      	beq.n	8011d44 <_strtod_l+0x1e4>
 8011d52:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8011d56:	2b08      	cmp	r3, #8
 8011d58:	f200 84d2 	bhi.w	8012700 <_strtod_l+0xba0>
 8011d5c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011d5e:	900a      	str	r0, [sp, #40]	@ 0x28
 8011d60:	2000      	movs	r0, #0
 8011d62:	930c      	str	r3, [sp, #48]	@ 0x30
 8011d64:	4605      	mov	r5, r0
 8011d66:	3a30      	subs	r2, #48	@ 0x30
 8011d68:	f100 0301 	add.w	r3, r0, #1
 8011d6c:	d018      	beq.n	8011da0 <_strtod_l+0x240>
 8011d6e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8011d70:	4419      	add	r1, r3
 8011d72:	910a      	str	r1, [sp, #40]	@ 0x28
 8011d74:	462e      	mov	r6, r5
 8011d76:	f04f 0e0a 	mov.w	lr, #10
 8011d7a:	1c71      	adds	r1, r6, #1
 8011d7c:	eba1 0c05 	sub.w	ip, r1, r5
 8011d80:	4563      	cmp	r3, ip
 8011d82:	dc15      	bgt.n	8011db0 <_strtod_l+0x250>
 8011d84:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8011d88:	182b      	adds	r3, r5, r0
 8011d8a:	2b08      	cmp	r3, #8
 8011d8c:	f105 0501 	add.w	r5, r5, #1
 8011d90:	4405      	add	r5, r0
 8011d92:	dc1a      	bgt.n	8011dca <_strtod_l+0x26a>
 8011d94:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011d96:	230a      	movs	r3, #10
 8011d98:	fb03 2301 	mla	r3, r3, r1, r2
 8011d9c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8011d9e:	2300      	movs	r3, #0
 8011da0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8011da2:	1c51      	adds	r1, r2, #1
 8011da4:	9119      	str	r1, [sp, #100]	@ 0x64
 8011da6:	7852      	ldrb	r2, [r2, #1]
 8011da8:	4618      	mov	r0, r3
 8011daa:	e7c5      	b.n	8011d38 <_strtod_l+0x1d8>
 8011dac:	4648      	mov	r0, r9
 8011dae:	e7ce      	b.n	8011d4e <_strtod_l+0x1ee>
 8011db0:	2e08      	cmp	r6, #8
 8011db2:	dc05      	bgt.n	8011dc0 <_strtod_l+0x260>
 8011db4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8011db6:	fb0e f606 	mul.w	r6, lr, r6
 8011dba:	960b      	str	r6, [sp, #44]	@ 0x2c
 8011dbc:	460e      	mov	r6, r1
 8011dbe:	e7dc      	b.n	8011d7a <_strtod_l+0x21a>
 8011dc0:	2910      	cmp	r1, #16
 8011dc2:	bfd8      	it	le
 8011dc4:	fb0e f707 	mulle.w	r7, lr, r7
 8011dc8:	e7f8      	b.n	8011dbc <_strtod_l+0x25c>
 8011dca:	2b0f      	cmp	r3, #15
 8011dcc:	bfdc      	itt	le
 8011dce:	230a      	movle	r3, #10
 8011dd0:	fb03 2707 	mlale	r7, r3, r7, r2
 8011dd4:	e7e3      	b.n	8011d9e <_strtod_l+0x23e>
 8011dd6:	2300      	movs	r3, #0
 8011dd8:	930a      	str	r3, [sp, #40]	@ 0x28
 8011dda:	2301      	movs	r3, #1
 8011ddc:	e77a      	b.n	8011cd4 <_strtod_l+0x174>
 8011dde:	f04f 0c00 	mov.w	ip, #0
 8011de2:	1ca2      	adds	r2, r4, #2
 8011de4:	9219      	str	r2, [sp, #100]	@ 0x64
 8011de6:	78a2      	ldrb	r2, [r4, #2]
 8011de8:	e782      	b.n	8011cf0 <_strtod_l+0x190>
 8011dea:	f04f 0c01 	mov.w	ip, #1
 8011dee:	e7f8      	b.n	8011de2 <_strtod_l+0x282>
 8011df0:	080198cc 	.word	0x080198cc
 8011df4:	08019704 	.word	0x08019704
 8011df8:	7ff00000 	.word	0x7ff00000
 8011dfc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8011dfe:	1c51      	adds	r1, r2, #1
 8011e00:	9119      	str	r1, [sp, #100]	@ 0x64
 8011e02:	7852      	ldrb	r2, [r2, #1]
 8011e04:	2a30      	cmp	r2, #48	@ 0x30
 8011e06:	d0f9      	beq.n	8011dfc <_strtod_l+0x29c>
 8011e08:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8011e0c:	2908      	cmp	r1, #8
 8011e0e:	f63f af75 	bhi.w	8011cfc <_strtod_l+0x19c>
 8011e12:	3a30      	subs	r2, #48	@ 0x30
 8011e14:	9209      	str	r2, [sp, #36]	@ 0x24
 8011e16:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8011e18:	920f      	str	r2, [sp, #60]	@ 0x3c
 8011e1a:	f04f 080a 	mov.w	r8, #10
 8011e1e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8011e20:	1c56      	adds	r6, r2, #1
 8011e22:	9619      	str	r6, [sp, #100]	@ 0x64
 8011e24:	7852      	ldrb	r2, [r2, #1]
 8011e26:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8011e2a:	f1be 0f09 	cmp.w	lr, #9
 8011e2e:	d939      	bls.n	8011ea4 <_strtod_l+0x344>
 8011e30:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8011e32:	1a76      	subs	r6, r6, r1
 8011e34:	2e08      	cmp	r6, #8
 8011e36:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8011e3a:	dc03      	bgt.n	8011e44 <_strtod_l+0x2e4>
 8011e3c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011e3e:	4588      	cmp	r8, r1
 8011e40:	bfa8      	it	ge
 8011e42:	4688      	movge	r8, r1
 8011e44:	f1bc 0f00 	cmp.w	ip, #0
 8011e48:	d001      	beq.n	8011e4e <_strtod_l+0x2ee>
 8011e4a:	f1c8 0800 	rsb	r8, r8, #0
 8011e4e:	2d00      	cmp	r5, #0
 8011e50:	d14e      	bne.n	8011ef0 <_strtod_l+0x390>
 8011e52:	9908      	ldr	r1, [sp, #32]
 8011e54:	4308      	orrs	r0, r1
 8011e56:	f47f aebc 	bne.w	8011bd2 <_strtod_l+0x72>
 8011e5a:	2b00      	cmp	r3, #0
 8011e5c:	f47f aed4 	bne.w	8011c08 <_strtod_l+0xa8>
 8011e60:	2a69      	cmp	r2, #105	@ 0x69
 8011e62:	d028      	beq.n	8011eb6 <_strtod_l+0x356>
 8011e64:	dc25      	bgt.n	8011eb2 <_strtod_l+0x352>
 8011e66:	2a49      	cmp	r2, #73	@ 0x49
 8011e68:	d025      	beq.n	8011eb6 <_strtod_l+0x356>
 8011e6a:	2a4e      	cmp	r2, #78	@ 0x4e
 8011e6c:	f47f aecc 	bne.w	8011c08 <_strtod_l+0xa8>
 8011e70:	499a      	ldr	r1, [pc, #616]	@ (80120dc <_strtod_l+0x57c>)
 8011e72:	a819      	add	r0, sp, #100	@ 0x64
 8011e74:	f001 f964 	bl	8013140 <__match>
 8011e78:	2800      	cmp	r0, #0
 8011e7a:	f43f aec5 	beq.w	8011c08 <_strtod_l+0xa8>
 8011e7e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011e80:	781b      	ldrb	r3, [r3, #0]
 8011e82:	2b28      	cmp	r3, #40	@ 0x28
 8011e84:	d12e      	bne.n	8011ee4 <_strtod_l+0x384>
 8011e86:	4996      	ldr	r1, [pc, #600]	@ (80120e0 <_strtod_l+0x580>)
 8011e88:	aa1c      	add	r2, sp, #112	@ 0x70
 8011e8a:	a819      	add	r0, sp, #100	@ 0x64
 8011e8c:	f001 f96c 	bl	8013168 <__hexnan>
 8011e90:	2805      	cmp	r0, #5
 8011e92:	d127      	bne.n	8011ee4 <_strtod_l+0x384>
 8011e94:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8011e96:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8011e9a:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8011e9e:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8011ea2:	e696      	b.n	8011bd2 <_strtod_l+0x72>
 8011ea4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011ea6:	fb08 2101 	mla	r1, r8, r1, r2
 8011eaa:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8011eae:	9209      	str	r2, [sp, #36]	@ 0x24
 8011eb0:	e7b5      	b.n	8011e1e <_strtod_l+0x2be>
 8011eb2:	2a6e      	cmp	r2, #110	@ 0x6e
 8011eb4:	e7da      	b.n	8011e6c <_strtod_l+0x30c>
 8011eb6:	498b      	ldr	r1, [pc, #556]	@ (80120e4 <_strtod_l+0x584>)
 8011eb8:	a819      	add	r0, sp, #100	@ 0x64
 8011eba:	f001 f941 	bl	8013140 <__match>
 8011ebe:	2800      	cmp	r0, #0
 8011ec0:	f43f aea2 	beq.w	8011c08 <_strtod_l+0xa8>
 8011ec4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011ec6:	4988      	ldr	r1, [pc, #544]	@ (80120e8 <_strtod_l+0x588>)
 8011ec8:	3b01      	subs	r3, #1
 8011eca:	a819      	add	r0, sp, #100	@ 0x64
 8011ecc:	9319      	str	r3, [sp, #100]	@ 0x64
 8011ece:	f001 f937 	bl	8013140 <__match>
 8011ed2:	b910      	cbnz	r0, 8011eda <_strtod_l+0x37a>
 8011ed4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8011ed6:	3301      	adds	r3, #1
 8011ed8:	9319      	str	r3, [sp, #100]	@ 0x64
 8011eda:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 80120f8 <_strtod_l+0x598>
 8011ede:	f04f 0a00 	mov.w	sl, #0
 8011ee2:	e676      	b.n	8011bd2 <_strtod_l+0x72>
 8011ee4:	4881      	ldr	r0, [pc, #516]	@ (80120ec <_strtod_l+0x58c>)
 8011ee6:	f000 fe67 	bl	8012bb8 <nan>
 8011eea:	ec5b ab10 	vmov	sl, fp, d0
 8011eee:	e670      	b.n	8011bd2 <_strtod_l+0x72>
 8011ef0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011ef2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8011ef4:	eba8 0303 	sub.w	r3, r8, r3
 8011ef8:	f1b9 0f00 	cmp.w	r9, #0
 8011efc:	bf08      	it	eq
 8011efe:	46a9      	moveq	r9, r5
 8011f00:	2d10      	cmp	r5, #16
 8011f02:	9309      	str	r3, [sp, #36]	@ 0x24
 8011f04:	462c      	mov	r4, r5
 8011f06:	bfa8      	it	ge
 8011f08:	2410      	movge	r4, #16
 8011f0a:	f7ee fad3 	bl	80004b4 <__aeabi_ui2d>
 8011f0e:	2d09      	cmp	r5, #9
 8011f10:	4682      	mov	sl, r0
 8011f12:	468b      	mov	fp, r1
 8011f14:	dc13      	bgt.n	8011f3e <_strtod_l+0x3de>
 8011f16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f18:	2b00      	cmp	r3, #0
 8011f1a:	f43f ae5a 	beq.w	8011bd2 <_strtod_l+0x72>
 8011f1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f20:	dd78      	ble.n	8012014 <_strtod_l+0x4b4>
 8011f22:	2b16      	cmp	r3, #22
 8011f24:	dc5f      	bgt.n	8011fe6 <_strtod_l+0x486>
 8011f26:	4972      	ldr	r1, [pc, #456]	@ (80120f0 <_strtod_l+0x590>)
 8011f28:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8011f2c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011f30:	4652      	mov	r2, sl
 8011f32:	465b      	mov	r3, fp
 8011f34:	f7ee fb38 	bl	80005a8 <__aeabi_dmul>
 8011f38:	4682      	mov	sl, r0
 8011f3a:	468b      	mov	fp, r1
 8011f3c:	e649      	b.n	8011bd2 <_strtod_l+0x72>
 8011f3e:	4b6c      	ldr	r3, [pc, #432]	@ (80120f0 <_strtod_l+0x590>)
 8011f40:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011f44:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8011f48:	f7ee fb2e 	bl	80005a8 <__aeabi_dmul>
 8011f4c:	4682      	mov	sl, r0
 8011f4e:	4638      	mov	r0, r7
 8011f50:	468b      	mov	fp, r1
 8011f52:	f7ee faaf 	bl	80004b4 <__aeabi_ui2d>
 8011f56:	4602      	mov	r2, r0
 8011f58:	460b      	mov	r3, r1
 8011f5a:	4650      	mov	r0, sl
 8011f5c:	4659      	mov	r1, fp
 8011f5e:	f7ee f96d 	bl	800023c <__adddf3>
 8011f62:	2d0f      	cmp	r5, #15
 8011f64:	4682      	mov	sl, r0
 8011f66:	468b      	mov	fp, r1
 8011f68:	ddd5      	ble.n	8011f16 <_strtod_l+0x3b6>
 8011f6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f6c:	1b2c      	subs	r4, r5, r4
 8011f6e:	441c      	add	r4, r3
 8011f70:	2c00      	cmp	r4, #0
 8011f72:	f340 8093 	ble.w	801209c <_strtod_l+0x53c>
 8011f76:	f014 030f 	ands.w	r3, r4, #15
 8011f7a:	d00a      	beq.n	8011f92 <_strtod_l+0x432>
 8011f7c:	495c      	ldr	r1, [pc, #368]	@ (80120f0 <_strtod_l+0x590>)
 8011f7e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8011f82:	4652      	mov	r2, sl
 8011f84:	465b      	mov	r3, fp
 8011f86:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011f8a:	f7ee fb0d 	bl	80005a8 <__aeabi_dmul>
 8011f8e:	4682      	mov	sl, r0
 8011f90:	468b      	mov	fp, r1
 8011f92:	f034 040f 	bics.w	r4, r4, #15
 8011f96:	d073      	beq.n	8012080 <_strtod_l+0x520>
 8011f98:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8011f9c:	dd49      	ble.n	8012032 <_strtod_l+0x4d2>
 8011f9e:	2400      	movs	r4, #0
 8011fa0:	46a0      	mov	r8, r4
 8011fa2:	940b      	str	r4, [sp, #44]	@ 0x2c
 8011fa4:	46a1      	mov	r9, r4
 8011fa6:	9a05      	ldr	r2, [sp, #20]
 8011fa8:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 80120f8 <_strtod_l+0x598>
 8011fac:	2322      	movs	r3, #34	@ 0x22
 8011fae:	6013      	str	r3, [r2, #0]
 8011fb0:	f04f 0a00 	mov.w	sl, #0
 8011fb4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011fb6:	2b00      	cmp	r3, #0
 8011fb8:	f43f ae0b 	beq.w	8011bd2 <_strtod_l+0x72>
 8011fbc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8011fbe:	9805      	ldr	r0, [sp, #20]
 8011fc0:	f7ff f946 	bl	8011250 <_Bfree>
 8011fc4:	9805      	ldr	r0, [sp, #20]
 8011fc6:	4649      	mov	r1, r9
 8011fc8:	f7ff f942 	bl	8011250 <_Bfree>
 8011fcc:	9805      	ldr	r0, [sp, #20]
 8011fce:	4641      	mov	r1, r8
 8011fd0:	f7ff f93e 	bl	8011250 <_Bfree>
 8011fd4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011fd6:	9805      	ldr	r0, [sp, #20]
 8011fd8:	f7ff f93a 	bl	8011250 <_Bfree>
 8011fdc:	9805      	ldr	r0, [sp, #20]
 8011fde:	4621      	mov	r1, r4
 8011fe0:	f7ff f936 	bl	8011250 <_Bfree>
 8011fe4:	e5f5      	b.n	8011bd2 <_strtod_l+0x72>
 8011fe6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011fe8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8011fec:	4293      	cmp	r3, r2
 8011fee:	dbbc      	blt.n	8011f6a <_strtod_l+0x40a>
 8011ff0:	4c3f      	ldr	r4, [pc, #252]	@ (80120f0 <_strtod_l+0x590>)
 8011ff2:	f1c5 050f 	rsb	r5, r5, #15
 8011ff6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8011ffa:	4652      	mov	r2, sl
 8011ffc:	465b      	mov	r3, fp
 8011ffe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012002:	f7ee fad1 	bl	80005a8 <__aeabi_dmul>
 8012006:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012008:	1b5d      	subs	r5, r3, r5
 801200a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 801200e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012012:	e78f      	b.n	8011f34 <_strtod_l+0x3d4>
 8012014:	3316      	adds	r3, #22
 8012016:	dba8      	blt.n	8011f6a <_strtod_l+0x40a>
 8012018:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801201a:	eba3 0808 	sub.w	r8, r3, r8
 801201e:	4b34      	ldr	r3, [pc, #208]	@ (80120f0 <_strtod_l+0x590>)
 8012020:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8012024:	e9d8 2300 	ldrd	r2, r3, [r8]
 8012028:	4650      	mov	r0, sl
 801202a:	4659      	mov	r1, fp
 801202c:	f7ee fbe6 	bl	80007fc <__aeabi_ddiv>
 8012030:	e782      	b.n	8011f38 <_strtod_l+0x3d8>
 8012032:	2300      	movs	r3, #0
 8012034:	4f2f      	ldr	r7, [pc, #188]	@ (80120f4 <_strtod_l+0x594>)
 8012036:	1124      	asrs	r4, r4, #4
 8012038:	4650      	mov	r0, sl
 801203a:	4659      	mov	r1, fp
 801203c:	461e      	mov	r6, r3
 801203e:	2c01      	cmp	r4, #1
 8012040:	dc21      	bgt.n	8012086 <_strtod_l+0x526>
 8012042:	b10b      	cbz	r3, 8012048 <_strtod_l+0x4e8>
 8012044:	4682      	mov	sl, r0
 8012046:	468b      	mov	fp, r1
 8012048:	492a      	ldr	r1, [pc, #168]	@ (80120f4 <_strtod_l+0x594>)
 801204a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 801204e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8012052:	4652      	mov	r2, sl
 8012054:	465b      	mov	r3, fp
 8012056:	e9d1 0100 	ldrd	r0, r1, [r1]
 801205a:	f7ee faa5 	bl	80005a8 <__aeabi_dmul>
 801205e:	4b26      	ldr	r3, [pc, #152]	@ (80120f8 <_strtod_l+0x598>)
 8012060:	460a      	mov	r2, r1
 8012062:	400b      	ands	r3, r1
 8012064:	4925      	ldr	r1, [pc, #148]	@ (80120fc <_strtod_l+0x59c>)
 8012066:	428b      	cmp	r3, r1
 8012068:	4682      	mov	sl, r0
 801206a:	d898      	bhi.n	8011f9e <_strtod_l+0x43e>
 801206c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8012070:	428b      	cmp	r3, r1
 8012072:	bf86      	itte	hi
 8012074:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8012100 <_strtod_l+0x5a0>
 8012078:	f04f 3aff 	movhi.w	sl, #4294967295
 801207c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8012080:	2300      	movs	r3, #0
 8012082:	9308      	str	r3, [sp, #32]
 8012084:	e076      	b.n	8012174 <_strtod_l+0x614>
 8012086:	07e2      	lsls	r2, r4, #31
 8012088:	d504      	bpl.n	8012094 <_strtod_l+0x534>
 801208a:	e9d7 2300 	ldrd	r2, r3, [r7]
 801208e:	f7ee fa8b 	bl	80005a8 <__aeabi_dmul>
 8012092:	2301      	movs	r3, #1
 8012094:	3601      	adds	r6, #1
 8012096:	1064      	asrs	r4, r4, #1
 8012098:	3708      	adds	r7, #8
 801209a:	e7d0      	b.n	801203e <_strtod_l+0x4de>
 801209c:	d0f0      	beq.n	8012080 <_strtod_l+0x520>
 801209e:	4264      	negs	r4, r4
 80120a0:	f014 020f 	ands.w	r2, r4, #15
 80120a4:	d00a      	beq.n	80120bc <_strtod_l+0x55c>
 80120a6:	4b12      	ldr	r3, [pc, #72]	@ (80120f0 <_strtod_l+0x590>)
 80120a8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80120ac:	4650      	mov	r0, sl
 80120ae:	4659      	mov	r1, fp
 80120b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80120b4:	f7ee fba2 	bl	80007fc <__aeabi_ddiv>
 80120b8:	4682      	mov	sl, r0
 80120ba:	468b      	mov	fp, r1
 80120bc:	1124      	asrs	r4, r4, #4
 80120be:	d0df      	beq.n	8012080 <_strtod_l+0x520>
 80120c0:	2c1f      	cmp	r4, #31
 80120c2:	dd1f      	ble.n	8012104 <_strtod_l+0x5a4>
 80120c4:	2400      	movs	r4, #0
 80120c6:	46a0      	mov	r8, r4
 80120c8:	940b      	str	r4, [sp, #44]	@ 0x2c
 80120ca:	46a1      	mov	r9, r4
 80120cc:	9a05      	ldr	r2, [sp, #20]
 80120ce:	2322      	movs	r3, #34	@ 0x22
 80120d0:	f04f 0a00 	mov.w	sl, #0
 80120d4:	f04f 0b00 	mov.w	fp, #0
 80120d8:	6013      	str	r3, [r2, #0]
 80120da:	e76b      	b.n	8011fb4 <_strtod_l+0x454>
 80120dc:	080195f2 	.word	0x080195f2
 80120e0:	080198b8 	.word	0x080198b8
 80120e4:	080195ea 	.word	0x080195ea
 80120e8:	08019621 	.word	0x08019621
 80120ec:	0801975a 	.word	0x0801975a
 80120f0:	080197f0 	.word	0x080197f0
 80120f4:	080197c8 	.word	0x080197c8
 80120f8:	7ff00000 	.word	0x7ff00000
 80120fc:	7ca00000 	.word	0x7ca00000
 8012100:	7fefffff 	.word	0x7fefffff
 8012104:	f014 0310 	ands.w	r3, r4, #16
 8012108:	bf18      	it	ne
 801210a:	236a      	movne	r3, #106	@ 0x6a
 801210c:	4ea9      	ldr	r6, [pc, #676]	@ (80123b4 <_strtod_l+0x854>)
 801210e:	9308      	str	r3, [sp, #32]
 8012110:	4650      	mov	r0, sl
 8012112:	4659      	mov	r1, fp
 8012114:	2300      	movs	r3, #0
 8012116:	07e7      	lsls	r7, r4, #31
 8012118:	d504      	bpl.n	8012124 <_strtod_l+0x5c4>
 801211a:	e9d6 2300 	ldrd	r2, r3, [r6]
 801211e:	f7ee fa43 	bl	80005a8 <__aeabi_dmul>
 8012122:	2301      	movs	r3, #1
 8012124:	1064      	asrs	r4, r4, #1
 8012126:	f106 0608 	add.w	r6, r6, #8
 801212a:	d1f4      	bne.n	8012116 <_strtod_l+0x5b6>
 801212c:	b10b      	cbz	r3, 8012132 <_strtod_l+0x5d2>
 801212e:	4682      	mov	sl, r0
 8012130:	468b      	mov	fp, r1
 8012132:	9b08      	ldr	r3, [sp, #32]
 8012134:	b1b3      	cbz	r3, 8012164 <_strtod_l+0x604>
 8012136:	f3cb 520a 	ubfx	r2, fp, #20, #11
 801213a:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 801213e:	2b00      	cmp	r3, #0
 8012140:	4659      	mov	r1, fp
 8012142:	dd0f      	ble.n	8012164 <_strtod_l+0x604>
 8012144:	2b1f      	cmp	r3, #31
 8012146:	dd56      	ble.n	80121f6 <_strtod_l+0x696>
 8012148:	2b34      	cmp	r3, #52	@ 0x34
 801214a:	bfde      	ittt	le
 801214c:	f04f 33ff 	movle.w	r3, #4294967295
 8012150:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8012154:	4093      	lslle	r3, r2
 8012156:	f04f 0a00 	mov.w	sl, #0
 801215a:	bfcc      	ite	gt
 801215c:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8012160:	ea03 0b01 	andle.w	fp, r3, r1
 8012164:	2200      	movs	r2, #0
 8012166:	2300      	movs	r3, #0
 8012168:	4650      	mov	r0, sl
 801216a:	4659      	mov	r1, fp
 801216c:	f7ee fc84 	bl	8000a78 <__aeabi_dcmpeq>
 8012170:	2800      	cmp	r0, #0
 8012172:	d1a7      	bne.n	80120c4 <_strtod_l+0x564>
 8012174:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012176:	9300      	str	r3, [sp, #0]
 8012178:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801217a:	9805      	ldr	r0, [sp, #20]
 801217c:	462b      	mov	r3, r5
 801217e:	464a      	mov	r2, r9
 8012180:	f7ff f8ce 	bl	8011320 <__s2b>
 8012184:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012186:	2800      	cmp	r0, #0
 8012188:	f43f af09 	beq.w	8011f9e <_strtod_l+0x43e>
 801218c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801218e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012190:	2a00      	cmp	r2, #0
 8012192:	eba3 0308 	sub.w	r3, r3, r8
 8012196:	bfa8      	it	ge
 8012198:	2300      	movge	r3, #0
 801219a:	9312      	str	r3, [sp, #72]	@ 0x48
 801219c:	2400      	movs	r4, #0
 801219e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80121a2:	9316      	str	r3, [sp, #88]	@ 0x58
 80121a4:	46a0      	mov	r8, r4
 80121a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80121a8:	9805      	ldr	r0, [sp, #20]
 80121aa:	6859      	ldr	r1, [r3, #4]
 80121ac:	f7ff f810 	bl	80111d0 <_Balloc>
 80121b0:	4681      	mov	r9, r0
 80121b2:	2800      	cmp	r0, #0
 80121b4:	f43f aef7 	beq.w	8011fa6 <_strtod_l+0x446>
 80121b8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80121ba:	691a      	ldr	r2, [r3, #16]
 80121bc:	3202      	adds	r2, #2
 80121be:	f103 010c 	add.w	r1, r3, #12
 80121c2:	0092      	lsls	r2, r2, #2
 80121c4:	300c      	adds	r0, #12
 80121c6:	f7fe f896 	bl	80102f6 <memcpy>
 80121ca:	ec4b ab10 	vmov	d0, sl, fp
 80121ce:	9805      	ldr	r0, [sp, #20]
 80121d0:	aa1c      	add	r2, sp, #112	@ 0x70
 80121d2:	a91b      	add	r1, sp, #108	@ 0x6c
 80121d4:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 80121d8:	f7ff fbd6 	bl	8011988 <__d2b>
 80121dc:	901a      	str	r0, [sp, #104]	@ 0x68
 80121de:	2800      	cmp	r0, #0
 80121e0:	f43f aee1 	beq.w	8011fa6 <_strtod_l+0x446>
 80121e4:	9805      	ldr	r0, [sp, #20]
 80121e6:	2101      	movs	r1, #1
 80121e8:	f7ff f930 	bl	801144c <__i2b>
 80121ec:	4680      	mov	r8, r0
 80121ee:	b948      	cbnz	r0, 8012204 <_strtod_l+0x6a4>
 80121f0:	f04f 0800 	mov.w	r8, #0
 80121f4:	e6d7      	b.n	8011fa6 <_strtod_l+0x446>
 80121f6:	f04f 32ff 	mov.w	r2, #4294967295
 80121fa:	fa02 f303 	lsl.w	r3, r2, r3
 80121fe:	ea03 0a0a 	and.w	sl, r3, sl
 8012202:	e7af      	b.n	8012164 <_strtod_l+0x604>
 8012204:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8012206:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8012208:	2d00      	cmp	r5, #0
 801220a:	bfab      	itete	ge
 801220c:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 801220e:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8012210:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8012212:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8012214:	bfac      	ite	ge
 8012216:	18ef      	addge	r7, r5, r3
 8012218:	1b5e      	sublt	r6, r3, r5
 801221a:	9b08      	ldr	r3, [sp, #32]
 801221c:	1aed      	subs	r5, r5, r3
 801221e:	4415      	add	r5, r2
 8012220:	4b65      	ldr	r3, [pc, #404]	@ (80123b8 <_strtod_l+0x858>)
 8012222:	3d01      	subs	r5, #1
 8012224:	429d      	cmp	r5, r3
 8012226:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 801222a:	da50      	bge.n	80122ce <_strtod_l+0x76e>
 801222c:	1b5b      	subs	r3, r3, r5
 801222e:	2b1f      	cmp	r3, #31
 8012230:	eba2 0203 	sub.w	r2, r2, r3
 8012234:	f04f 0101 	mov.w	r1, #1
 8012238:	dc3d      	bgt.n	80122b6 <_strtod_l+0x756>
 801223a:	fa01 f303 	lsl.w	r3, r1, r3
 801223e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012240:	2300      	movs	r3, #0
 8012242:	9310      	str	r3, [sp, #64]	@ 0x40
 8012244:	18bd      	adds	r5, r7, r2
 8012246:	9b08      	ldr	r3, [sp, #32]
 8012248:	42af      	cmp	r7, r5
 801224a:	4416      	add	r6, r2
 801224c:	441e      	add	r6, r3
 801224e:	463b      	mov	r3, r7
 8012250:	bfa8      	it	ge
 8012252:	462b      	movge	r3, r5
 8012254:	42b3      	cmp	r3, r6
 8012256:	bfa8      	it	ge
 8012258:	4633      	movge	r3, r6
 801225a:	2b00      	cmp	r3, #0
 801225c:	bfc2      	ittt	gt
 801225e:	1aed      	subgt	r5, r5, r3
 8012260:	1af6      	subgt	r6, r6, r3
 8012262:	1aff      	subgt	r7, r7, r3
 8012264:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8012266:	2b00      	cmp	r3, #0
 8012268:	dd16      	ble.n	8012298 <_strtod_l+0x738>
 801226a:	4641      	mov	r1, r8
 801226c:	9805      	ldr	r0, [sp, #20]
 801226e:	461a      	mov	r2, r3
 8012270:	f7ff f9a4 	bl	80115bc <__pow5mult>
 8012274:	4680      	mov	r8, r0
 8012276:	2800      	cmp	r0, #0
 8012278:	d0ba      	beq.n	80121f0 <_strtod_l+0x690>
 801227a:	4601      	mov	r1, r0
 801227c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 801227e:	9805      	ldr	r0, [sp, #20]
 8012280:	f7ff f8fa 	bl	8011478 <__multiply>
 8012284:	900a      	str	r0, [sp, #40]	@ 0x28
 8012286:	2800      	cmp	r0, #0
 8012288:	f43f ae8d 	beq.w	8011fa6 <_strtod_l+0x446>
 801228c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801228e:	9805      	ldr	r0, [sp, #20]
 8012290:	f7fe ffde 	bl	8011250 <_Bfree>
 8012294:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012296:	931a      	str	r3, [sp, #104]	@ 0x68
 8012298:	2d00      	cmp	r5, #0
 801229a:	dc1d      	bgt.n	80122d8 <_strtod_l+0x778>
 801229c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801229e:	2b00      	cmp	r3, #0
 80122a0:	dd23      	ble.n	80122ea <_strtod_l+0x78a>
 80122a2:	4649      	mov	r1, r9
 80122a4:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80122a6:	9805      	ldr	r0, [sp, #20]
 80122a8:	f7ff f988 	bl	80115bc <__pow5mult>
 80122ac:	4681      	mov	r9, r0
 80122ae:	b9e0      	cbnz	r0, 80122ea <_strtod_l+0x78a>
 80122b0:	f04f 0900 	mov.w	r9, #0
 80122b4:	e677      	b.n	8011fa6 <_strtod_l+0x446>
 80122b6:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 80122ba:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 80122be:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 80122c2:	35e2      	adds	r5, #226	@ 0xe2
 80122c4:	fa01 f305 	lsl.w	r3, r1, r5
 80122c8:	9310      	str	r3, [sp, #64]	@ 0x40
 80122ca:	9113      	str	r1, [sp, #76]	@ 0x4c
 80122cc:	e7ba      	b.n	8012244 <_strtod_l+0x6e4>
 80122ce:	2300      	movs	r3, #0
 80122d0:	9310      	str	r3, [sp, #64]	@ 0x40
 80122d2:	2301      	movs	r3, #1
 80122d4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80122d6:	e7b5      	b.n	8012244 <_strtod_l+0x6e4>
 80122d8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80122da:	9805      	ldr	r0, [sp, #20]
 80122dc:	462a      	mov	r2, r5
 80122de:	f7ff f9c7 	bl	8011670 <__lshift>
 80122e2:	901a      	str	r0, [sp, #104]	@ 0x68
 80122e4:	2800      	cmp	r0, #0
 80122e6:	d1d9      	bne.n	801229c <_strtod_l+0x73c>
 80122e8:	e65d      	b.n	8011fa6 <_strtod_l+0x446>
 80122ea:	2e00      	cmp	r6, #0
 80122ec:	dd07      	ble.n	80122fe <_strtod_l+0x79e>
 80122ee:	4649      	mov	r1, r9
 80122f0:	9805      	ldr	r0, [sp, #20]
 80122f2:	4632      	mov	r2, r6
 80122f4:	f7ff f9bc 	bl	8011670 <__lshift>
 80122f8:	4681      	mov	r9, r0
 80122fa:	2800      	cmp	r0, #0
 80122fc:	d0d8      	beq.n	80122b0 <_strtod_l+0x750>
 80122fe:	2f00      	cmp	r7, #0
 8012300:	dd08      	ble.n	8012314 <_strtod_l+0x7b4>
 8012302:	4641      	mov	r1, r8
 8012304:	9805      	ldr	r0, [sp, #20]
 8012306:	463a      	mov	r2, r7
 8012308:	f7ff f9b2 	bl	8011670 <__lshift>
 801230c:	4680      	mov	r8, r0
 801230e:	2800      	cmp	r0, #0
 8012310:	f43f ae49 	beq.w	8011fa6 <_strtod_l+0x446>
 8012314:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8012316:	9805      	ldr	r0, [sp, #20]
 8012318:	464a      	mov	r2, r9
 801231a:	f7ff fa31 	bl	8011780 <__mdiff>
 801231e:	4604      	mov	r4, r0
 8012320:	2800      	cmp	r0, #0
 8012322:	f43f ae40 	beq.w	8011fa6 <_strtod_l+0x446>
 8012326:	68c3      	ldr	r3, [r0, #12]
 8012328:	930f      	str	r3, [sp, #60]	@ 0x3c
 801232a:	2300      	movs	r3, #0
 801232c:	60c3      	str	r3, [r0, #12]
 801232e:	4641      	mov	r1, r8
 8012330:	f7ff fa0a 	bl	8011748 <__mcmp>
 8012334:	2800      	cmp	r0, #0
 8012336:	da45      	bge.n	80123c4 <_strtod_l+0x864>
 8012338:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801233a:	ea53 030a 	orrs.w	r3, r3, sl
 801233e:	d16b      	bne.n	8012418 <_strtod_l+0x8b8>
 8012340:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8012344:	2b00      	cmp	r3, #0
 8012346:	d167      	bne.n	8012418 <_strtod_l+0x8b8>
 8012348:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 801234c:	0d1b      	lsrs	r3, r3, #20
 801234e:	051b      	lsls	r3, r3, #20
 8012350:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8012354:	d960      	bls.n	8012418 <_strtod_l+0x8b8>
 8012356:	6963      	ldr	r3, [r4, #20]
 8012358:	b913      	cbnz	r3, 8012360 <_strtod_l+0x800>
 801235a:	6923      	ldr	r3, [r4, #16]
 801235c:	2b01      	cmp	r3, #1
 801235e:	dd5b      	ble.n	8012418 <_strtod_l+0x8b8>
 8012360:	4621      	mov	r1, r4
 8012362:	2201      	movs	r2, #1
 8012364:	9805      	ldr	r0, [sp, #20]
 8012366:	f7ff f983 	bl	8011670 <__lshift>
 801236a:	4641      	mov	r1, r8
 801236c:	4604      	mov	r4, r0
 801236e:	f7ff f9eb 	bl	8011748 <__mcmp>
 8012372:	2800      	cmp	r0, #0
 8012374:	dd50      	ble.n	8012418 <_strtod_l+0x8b8>
 8012376:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 801237a:	9a08      	ldr	r2, [sp, #32]
 801237c:	0d1b      	lsrs	r3, r3, #20
 801237e:	051b      	lsls	r3, r3, #20
 8012380:	2a00      	cmp	r2, #0
 8012382:	d06a      	beq.n	801245a <_strtod_l+0x8fa>
 8012384:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8012388:	d867      	bhi.n	801245a <_strtod_l+0x8fa>
 801238a:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 801238e:	f67f ae9d 	bls.w	80120cc <_strtod_l+0x56c>
 8012392:	4b0a      	ldr	r3, [pc, #40]	@ (80123bc <_strtod_l+0x85c>)
 8012394:	4650      	mov	r0, sl
 8012396:	4659      	mov	r1, fp
 8012398:	2200      	movs	r2, #0
 801239a:	f7ee f905 	bl	80005a8 <__aeabi_dmul>
 801239e:	4b08      	ldr	r3, [pc, #32]	@ (80123c0 <_strtod_l+0x860>)
 80123a0:	400b      	ands	r3, r1
 80123a2:	4682      	mov	sl, r0
 80123a4:	468b      	mov	fp, r1
 80123a6:	2b00      	cmp	r3, #0
 80123a8:	f47f ae08 	bne.w	8011fbc <_strtod_l+0x45c>
 80123ac:	9a05      	ldr	r2, [sp, #20]
 80123ae:	2322      	movs	r3, #34	@ 0x22
 80123b0:	6013      	str	r3, [r2, #0]
 80123b2:	e603      	b.n	8011fbc <_strtod_l+0x45c>
 80123b4:	080198e0 	.word	0x080198e0
 80123b8:	fffffc02 	.word	0xfffffc02
 80123bc:	39500000 	.word	0x39500000
 80123c0:	7ff00000 	.word	0x7ff00000
 80123c4:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80123c8:	d165      	bne.n	8012496 <_strtod_l+0x936>
 80123ca:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80123cc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80123d0:	b35a      	cbz	r2, 801242a <_strtod_l+0x8ca>
 80123d2:	4a9f      	ldr	r2, [pc, #636]	@ (8012650 <_strtod_l+0xaf0>)
 80123d4:	4293      	cmp	r3, r2
 80123d6:	d12b      	bne.n	8012430 <_strtod_l+0x8d0>
 80123d8:	9b08      	ldr	r3, [sp, #32]
 80123da:	4651      	mov	r1, sl
 80123dc:	b303      	cbz	r3, 8012420 <_strtod_l+0x8c0>
 80123de:	4b9d      	ldr	r3, [pc, #628]	@ (8012654 <_strtod_l+0xaf4>)
 80123e0:	465a      	mov	r2, fp
 80123e2:	4013      	ands	r3, r2
 80123e4:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80123e8:	f04f 32ff 	mov.w	r2, #4294967295
 80123ec:	d81b      	bhi.n	8012426 <_strtod_l+0x8c6>
 80123ee:	0d1b      	lsrs	r3, r3, #20
 80123f0:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80123f4:	fa02 f303 	lsl.w	r3, r2, r3
 80123f8:	4299      	cmp	r1, r3
 80123fa:	d119      	bne.n	8012430 <_strtod_l+0x8d0>
 80123fc:	4b96      	ldr	r3, [pc, #600]	@ (8012658 <_strtod_l+0xaf8>)
 80123fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012400:	429a      	cmp	r2, r3
 8012402:	d102      	bne.n	801240a <_strtod_l+0x8aa>
 8012404:	3101      	adds	r1, #1
 8012406:	f43f adce 	beq.w	8011fa6 <_strtod_l+0x446>
 801240a:	4b92      	ldr	r3, [pc, #584]	@ (8012654 <_strtod_l+0xaf4>)
 801240c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801240e:	401a      	ands	r2, r3
 8012410:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8012414:	f04f 0a00 	mov.w	sl, #0
 8012418:	9b08      	ldr	r3, [sp, #32]
 801241a:	2b00      	cmp	r3, #0
 801241c:	d1b9      	bne.n	8012392 <_strtod_l+0x832>
 801241e:	e5cd      	b.n	8011fbc <_strtod_l+0x45c>
 8012420:	f04f 33ff 	mov.w	r3, #4294967295
 8012424:	e7e8      	b.n	80123f8 <_strtod_l+0x898>
 8012426:	4613      	mov	r3, r2
 8012428:	e7e6      	b.n	80123f8 <_strtod_l+0x898>
 801242a:	ea53 030a 	orrs.w	r3, r3, sl
 801242e:	d0a2      	beq.n	8012376 <_strtod_l+0x816>
 8012430:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012432:	b1db      	cbz	r3, 801246c <_strtod_l+0x90c>
 8012434:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012436:	4213      	tst	r3, r2
 8012438:	d0ee      	beq.n	8012418 <_strtod_l+0x8b8>
 801243a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801243c:	9a08      	ldr	r2, [sp, #32]
 801243e:	4650      	mov	r0, sl
 8012440:	4659      	mov	r1, fp
 8012442:	b1bb      	cbz	r3, 8012474 <_strtod_l+0x914>
 8012444:	f7ff fb6e 	bl	8011b24 <sulp>
 8012448:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801244c:	ec53 2b10 	vmov	r2, r3, d0
 8012450:	f7ed fef4 	bl	800023c <__adddf3>
 8012454:	4682      	mov	sl, r0
 8012456:	468b      	mov	fp, r1
 8012458:	e7de      	b.n	8012418 <_strtod_l+0x8b8>
 801245a:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 801245e:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8012462:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8012466:	f04f 3aff 	mov.w	sl, #4294967295
 801246a:	e7d5      	b.n	8012418 <_strtod_l+0x8b8>
 801246c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801246e:	ea13 0f0a 	tst.w	r3, sl
 8012472:	e7e1      	b.n	8012438 <_strtod_l+0x8d8>
 8012474:	f7ff fb56 	bl	8011b24 <sulp>
 8012478:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801247c:	ec53 2b10 	vmov	r2, r3, d0
 8012480:	f7ed feda 	bl	8000238 <__aeabi_dsub>
 8012484:	2200      	movs	r2, #0
 8012486:	2300      	movs	r3, #0
 8012488:	4682      	mov	sl, r0
 801248a:	468b      	mov	fp, r1
 801248c:	f7ee faf4 	bl	8000a78 <__aeabi_dcmpeq>
 8012490:	2800      	cmp	r0, #0
 8012492:	d0c1      	beq.n	8012418 <_strtod_l+0x8b8>
 8012494:	e61a      	b.n	80120cc <_strtod_l+0x56c>
 8012496:	4641      	mov	r1, r8
 8012498:	4620      	mov	r0, r4
 801249a:	f7ff facd 	bl	8011a38 <__ratio>
 801249e:	ec57 6b10 	vmov	r6, r7, d0
 80124a2:	2200      	movs	r2, #0
 80124a4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80124a8:	4630      	mov	r0, r6
 80124aa:	4639      	mov	r1, r7
 80124ac:	f7ee faf8 	bl	8000aa0 <__aeabi_dcmple>
 80124b0:	2800      	cmp	r0, #0
 80124b2:	d06f      	beq.n	8012594 <_strtod_l+0xa34>
 80124b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80124b6:	2b00      	cmp	r3, #0
 80124b8:	d17a      	bne.n	80125b0 <_strtod_l+0xa50>
 80124ba:	f1ba 0f00 	cmp.w	sl, #0
 80124be:	d158      	bne.n	8012572 <_strtod_l+0xa12>
 80124c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80124c2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80124c6:	2b00      	cmp	r3, #0
 80124c8:	d15a      	bne.n	8012580 <_strtod_l+0xa20>
 80124ca:	4b64      	ldr	r3, [pc, #400]	@ (801265c <_strtod_l+0xafc>)
 80124cc:	2200      	movs	r2, #0
 80124ce:	4630      	mov	r0, r6
 80124d0:	4639      	mov	r1, r7
 80124d2:	f7ee fadb 	bl	8000a8c <__aeabi_dcmplt>
 80124d6:	2800      	cmp	r0, #0
 80124d8:	d159      	bne.n	801258e <_strtod_l+0xa2e>
 80124da:	4630      	mov	r0, r6
 80124dc:	4639      	mov	r1, r7
 80124de:	4b60      	ldr	r3, [pc, #384]	@ (8012660 <_strtod_l+0xb00>)
 80124e0:	2200      	movs	r2, #0
 80124e2:	f7ee f861 	bl	80005a8 <__aeabi_dmul>
 80124e6:	4606      	mov	r6, r0
 80124e8:	460f      	mov	r7, r1
 80124ea:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80124ee:	9606      	str	r6, [sp, #24]
 80124f0:	9307      	str	r3, [sp, #28]
 80124f2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80124f6:	4d57      	ldr	r5, [pc, #348]	@ (8012654 <_strtod_l+0xaf4>)
 80124f8:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80124fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80124fe:	401d      	ands	r5, r3
 8012500:	4b58      	ldr	r3, [pc, #352]	@ (8012664 <_strtod_l+0xb04>)
 8012502:	429d      	cmp	r5, r3
 8012504:	f040 80b2 	bne.w	801266c <_strtod_l+0xb0c>
 8012508:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801250a:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 801250e:	ec4b ab10 	vmov	d0, sl, fp
 8012512:	f7ff f9c9 	bl	80118a8 <__ulp>
 8012516:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801251a:	ec51 0b10 	vmov	r0, r1, d0
 801251e:	f7ee f843 	bl	80005a8 <__aeabi_dmul>
 8012522:	4652      	mov	r2, sl
 8012524:	465b      	mov	r3, fp
 8012526:	f7ed fe89 	bl	800023c <__adddf3>
 801252a:	460b      	mov	r3, r1
 801252c:	4949      	ldr	r1, [pc, #292]	@ (8012654 <_strtod_l+0xaf4>)
 801252e:	4a4e      	ldr	r2, [pc, #312]	@ (8012668 <_strtod_l+0xb08>)
 8012530:	4019      	ands	r1, r3
 8012532:	4291      	cmp	r1, r2
 8012534:	4682      	mov	sl, r0
 8012536:	d942      	bls.n	80125be <_strtod_l+0xa5e>
 8012538:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801253a:	4b47      	ldr	r3, [pc, #284]	@ (8012658 <_strtod_l+0xaf8>)
 801253c:	429a      	cmp	r2, r3
 801253e:	d103      	bne.n	8012548 <_strtod_l+0x9e8>
 8012540:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012542:	3301      	adds	r3, #1
 8012544:	f43f ad2f 	beq.w	8011fa6 <_strtod_l+0x446>
 8012548:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 8012658 <_strtod_l+0xaf8>
 801254c:	f04f 3aff 	mov.w	sl, #4294967295
 8012550:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8012552:	9805      	ldr	r0, [sp, #20]
 8012554:	f7fe fe7c 	bl	8011250 <_Bfree>
 8012558:	9805      	ldr	r0, [sp, #20]
 801255a:	4649      	mov	r1, r9
 801255c:	f7fe fe78 	bl	8011250 <_Bfree>
 8012560:	9805      	ldr	r0, [sp, #20]
 8012562:	4641      	mov	r1, r8
 8012564:	f7fe fe74 	bl	8011250 <_Bfree>
 8012568:	9805      	ldr	r0, [sp, #20]
 801256a:	4621      	mov	r1, r4
 801256c:	f7fe fe70 	bl	8011250 <_Bfree>
 8012570:	e619      	b.n	80121a6 <_strtod_l+0x646>
 8012572:	f1ba 0f01 	cmp.w	sl, #1
 8012576:	d103      	bne.n	8012580 <_strtod_l+0xa20>
 8012578:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801257a:	2b00      	cmp	r3, #0
 801257c:	f43f ada6 	beq.w	80120cc <_strtod_l+0x56c>
 8012580:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 8012630 <_strtod_l+0xad0>
 8012584:	4f35      	ldr	r7, [pc, #212]	@ (801265c <_strtod_l+0xafc>)
 8012586:	ed8d 7b06 	vstr	d7, [sp, #24]
 801258a:	2600      	movs	r6, #0
 801258c:	e7b1      	b.n	80124f2 <_strtod_l+0x992>
 801258e:	4f34      	ldr	r7, [pc, #208]	@ (8012660 <_strtod_l+0xb00>)
 8012590:	2600      	movs	r6, #0
 8012592:	e7aa      	b.n	80124ea <_strtod_l+0x98a>
 8012594:	4b32      	ldr	r3, [pc, #200]	@ (8012660 <_strtod_l+0xb00>)
 8012596:	4630      	mov	r0, r6
 8012598:	4639      	mov	r1, r7
 801259a:	2200      	movs	r2, #0
 801259c:	f7ee f804 	bl	80005a8 <__aeabi_dmul>
 80125a0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80125a2:	4606      	mov	r6, r0
 80125a4:	460f      	mov	r7, r1
 80125a6:	2b00      	cmp	r3, #0
 80125a8:	d09f      	beq.n	80124ea <_strtod_l+0x98a>
 80125aa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80125ae:	e7a0      	b.n	80124f2 <_strtod_l+0x992>
 80125b0:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8012638 <_strtod_l+0xad8>
 80125b4:	ed8d 7b06 	vstr	d7, [sp, #24]
 80125b8:	ec57 6b17 	vmov	r6, r7, d7
 80125bc:	e799      	b.n	80124f2 <_strtod_l+0x992>
 80125be:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80125c2:	9b08      	ldr	r3, [sp, #32]
 80125c4:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80125c8:	2b00      	cmp	r3, #0
 80125ca:	d1c1      	bne.n	8012550 <_strtod_l+0x9f0>
 80125cc:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80125d0:	0d1b      	lsrs	r3, r3, #20
 80125d2:	051b      	lsls	r3, r3, #20
 80125d4:	429d      	cmp	r5, r3
 80125d6:	d1bb      	bne.n	8012550 <_strtod_l+0x9f0>
 80125d8:	4630      	mov	r0, r6
 80125da:	4639      	mov	r1, r7
 80125dc:	f7ee fb44 	bl	8000c68 <__aeabi_d2lz>
 80125e0:	f7ed ffb4 	bl	800054c <__aeabi_l2d>
 80125e4:	4602      	mov	r2, r0
 80125e6:	460b      	mov	r3, r1
 80125e8:	4630      	mov	r0, r6
 80125ea:	4639      	mov	r1, r7
 80125ec:	f7ed fe24 	bl	8000238 <__aeabi_dsub>
 80125f0:	460b      	mov	r3, r1
 80125f2:	4602      	mov	r2, r0
 80125f4:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80125f8:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80125fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80125fe:	ea46 060a 	orr.w	r6, r6, sl
 8012602:	431e      	orrs	r6, r3
 8012604:	d06f      	beq.n	80126e6 <_strtod_l+0xb86>
 8012606:	a30e      	add	r3, pc, #56	@ (adr r3, 8012640 <_strtod_l+0xae0>)
 8012608:	e9d3 2300 	ldrd	r2, r3, [r3]
 801260c:	f7ee fa3e 	bl	8000a8c <__aeabi_dcmplt>
 8012610:	2800      	cmp	r0, #0
 8012612:	f47f acd3 	bne.w	8011fbc <_strtod_l+0x45c>
 8012616:	a30c      	add	r3, pc, #48	@ (adr r3, 8012648 <_strtod_l+0xae8>)
 8012618:	e9d3 2300 	ldrd	r2, r3, [r3]
 801261c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8012620:	f7ee fa52 	bl	8000ac8 <__aeabi_dcmpgt>
 8012624:	2800      	cmp	r0, #0
 8012626:	d093      	beq.n	8012550 <_strtod_l+0x9f0>
 8012628:	e4c8      	b.n	8011fbc <_strtod_l+0x45c>
 801262a:	bf00      	nop
 801262c:	f3af 8000 	nop.w
 8012630:	00000000 	.word	0x00000000
 8012634:	bff00000 	.word	0xbff00000
 8012638:	00000000 	.word	0x00000000
 801263c:	3ff00000 	.word	0x3ff00000
 8012640:	94a03595 	.word	0x94a03595
 8012644:	3fdfffff 	.word	0x3fdfffff
 8012648:	35afe535 	.word	0x35afe535
 801264c:	3fe00000 	.word	0x3fe00000
 8012650:	000fffff 	.word	0x000fffff
 8012654:	7ff00000 	.word	0x7ff00000
 8012658:	7fefffff 	.word	0x7fefffff
 801265c:	3ff00000 	.word	0x3ff00000
 8012660:	3fe00000 	.word	0x3fe00000
 8012664:	7fe00000 	.word	0x7fe00000
 8012668:	7c9fffff 	.word	0x7c9fffff
 801266c:	9b08      	ldr	r3, [sp, #32]
 801266e:	b323      	cbz	r3, 80126ba <_strtod_l+0xb5a>
 8012670:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8012674:	d821      	bhi.n	80126ba <_strtod_l+0xb5a>
 8012676:	a328      	add	r3, pc, #160	@ (adr r3, 8012718 <_strtod_l+0xbb8>)
 8012678:	e9d3 2300 	ldrd	r2, r3, [r3]
 801267c:	4630      	mov	r0, r6
 801267e:	4639      	mov	r1, r7
 8012680:	f7ee fa0e 	bl	8000aa0 <__aeabi_dcmple>
 8012684:	b1a0      	cbz	r0, 80126b0 <_strtod_l+0xb50>
 8012686:	4639      	mov	r1, r7
 8012688:	4630      	mov	r0, r6
 801268a:	f7ee fa65 	bl	8000b58 <__aeabi_d2uiz>
 801268e:	2801      	cmp	r0, #1
 8012690:	bf38      	it	cc
 8012692:	2001      	movcc	r0, #1
 8012694:	f7ed ff0e 	bl	80004b4 <__aeabi_ui2d>
 8012698:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801269a:	4606      	mov	r6, r0
 801269c:	460f      	mov	r7, r1
 801269e:	b9fb      	cbnz	r3, 80126e0 <_strtod_l+0xb80>
 80126a0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80126a4:	9014      	str	r0, [sp, #80]	@ 0x50
 80126a6:	9315      	str	r3, [sp, #84]	@ 0x54
 80126a8:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 80126ac:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80126b0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80126b2:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 80126b6:	1b5b      	subs	r3, r3, r5
 80126b8:	9311      	str	r3, [sp, #68]	@ 0x44
 80126ba:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80126be:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 80126c2:	f7ff f8f1 	bl	80118a8 <__ulp>
 80126c6:	4650      	mov	r0, sl
 80126c8:	ec53 2b10 	vmov	r2, r3, d0
 80126cc:	4659      	mov	r1, fp
 80126ce:	f7ed ff6b 	bl	80005a8 <__aeabi_dmul>
 80126d2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80126d6:	f7ed fdb1 	bl	800023c <__adddf3>
 80126da:	4682      	mov	sl, r0
 80126dc:	468b      	mov	fp, r1
 80126de:	e770      	b.n	80125c2 <_strtod_l+0xa62>
 80126e0:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 80126e4:	e7e0      	b.n	80126a8 <_strtod_l+0xb48>
 80126e6:	a30e      	add	r3, pc, #56	@ (adr r3, 8012720 <_strtod_l+0xbc0>)
 80126e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80126ec:	f7ee f9ce 	bl	8000a8c <__aeabi_dcmplt>
 80126f0:	e798      	b.n	8012624 <_strtod_l+0xac4>
 80126f2:	2300      	movs	r3, #0
 80126f4:	930e      	str	r3, [sp, #56]	@ 0x38
 80126f6:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80126f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80126fa:	6013      	str	r3, [r2, #0]
 80126fc:	f7ff ba6d 	b.w	8011bda <_strtod_l+0x7a>
 8012700:	2a65      	cmp	r2, #101	@ 0x65
 8012702:	f43f ab68 	beq.w	8011dd6 <_strtod_l+0x276>
 8012706:	2a45      	cmp	r2, #69	@ 0x45
 8012708:	f43f ab65 	beq.w	8011dd6 <_strtod_l+0x276>
 801270c:	2301      	movs	r3, #1
 801270e:	f7ff bba0 	b.w	8011e52 <_strtod_l+0x2f2>
 8012712:	bf00      	nop
 8012714:	f3af 8000 	nop.w
 8012718:	ffc00000 	.word	0xffc00000
 801271c:	41dfffff 	.word	0x41dfffff
 8012720:	94a03595 	.word	0x94a03595
 8012724:	3fcfffff 	.word	0x3fcfffff

08012728 <_strtod_r>:
 8012728:	4b01      	ldr	r3, [pc, #4]	@ (8012730 <_strtod_r+0x8>)
 801272a:	f7ff ba19 	b.w	8011b60 <_strtod_l>
 801272e:	bf00      	nop
 8012730:	20000190 	.word	0x20000190

08012734 <__ssputs_r>:
 8012734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012738:	688e      	ldr	r6, [r1, #8]
 801273a:	461f      	mov	r7, r3
 801273c:	42be      	cmp	r6, r7
 801273e:	680b      	ldr	r3, [r1, #0]
 8012740:	4682      	mov	sl, r0
 8012742:	460c      	mov	r4, r1
 8012744:	4690      	mov	r8, r2
 8012746:	d82d      	bhi.n	80127a4 <__ssputs_r+0x70>
 8012748:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801274c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8012750:	d026      	beq.n	80127a0 <__ssputs_r+0x6c>
 8012752:	6965      	ldr	r5, [r4, #20]
 8012754:	6909      	ldr	r1, [r1, #16]
 8012756:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801275a:	eba3 0901 	sub.w	r9, r3, r1
 801275e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8012762:	1c7b      	adds	r3, r7, #1
 8012764:	444b      	add	r3, r9
 8012766:	106d      	asrs	r5, r5, #1
 8012768:	429d      	cmp	r5, r3
 801276a:	bf38      	it	cc
 801276c:	461d      	movcc	r5, r3
 801276e:	0553      	lsls	r3, r2, #21
 8012770:	d527      	bpl.n	80127c2 <__ssputs_r+0x8e>
 8012772:	4629      	mov	r1, r5
 8012774:	f7fe fca0 	bl	80110b8 <_malloc_r>
 8012778:	4606      	mov	r6, r0
 801277a:	b360      	cbz	r0, 80127d6 <__ssputs_r+0xa2>
 801277c:	6921      	ldr	r1, [r4, #16]
 801277e:	464a      	mov	r2, r9
 8012780:	f7fd fdb9 	bl	80102f6 <memcpy>
 8012784:	89a3      	ldrh	r3, [r4, #12]
 8012786:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 801278a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801278e:	81a3      	strh	r3, [r4, #12]
 8012790:	6126      	str	r6, [r4, #16]
 8012792:	6165      	str	r5, [r4, #20]
 8012794:	444e      	add	r6, r9
 8012796:	eba5 0509 	sub.w	r5, r5, r9
 801279a:	6026      	str	r6, [r4, #0]
 801279c:	60a5      	str	r5, [r4, #8]
 801279e:	463e      	mov	r6, r7
 80127a0:	42be      	cmp	r6, r7
 80127a2:	d900      	bls.n	80127a6 <__ssputs_r+0x72>
 80127a4:	463e      	mov	r6, r7
 80127a6:	6820      	ldr	r0, [r4, #0]
 80127a8:	4632      	mov	r2, r6
 80127aa:	4641      	mov	r1, r8
 80127ac:	f000 f9c6 	bl	8012b3c <memmove>
 80127b0:	68a3      	ldr	r3, [r4, #8]
 80127b2:	1b9b      	subs	r3, r3, r6
 80127b4:	60a3      	str	r3, [r4, #8]
 80127b6:	6823      	ldr	r3, [r4, #0]
 80127b8:	4433      	add	r3, r6
 80127ba:	6023      	str	r3, [r4, #0]
 80127bc:	2000      	movs	r0, #0
 80127be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80127c2:	462a      	mov	r2, r5
 80127c4:	f000 fd7d 	bl	80132c2 <_realloc_r>
 80127c8:	4606      	mov	r6, r0
 80127ca:	2800      	cmp	r0, #0
 80127cc:	d1e0      	bne.n	8012790 <__ssputs_r+0x5c>
 80127ce:	6921      	ldr	r1, [r4, #16]
 80127d0:	4650      	mov	r0, sl
 80127d2:	f7fe fbfd 	bl	8010fd0 <_free_r>
 80127d6:	230c      	movs	r3, #12
 80127d8:	f8ca 3000 	str.w	r3, [sl]
 80127dc:	89a3      	ldrh	r3, [r4, #12]
 80127de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80127e2:	81a3      	strh	r3, [r4, #12]
 80127e4:	f04f 30ff 	mov.w	r0, #4294967295
 80127e8:	e7e9      	b.n	80127be <__ssputs_r+0x8a>
	...

080127ec <_svfiprintf_r>:
 80127ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127f0:	4698      	mov	r8, r3
 80127f2:	898b      	ldrh	r3, [r1, #12]
 80127f4:	061b      	lsls	r3, r3, #24
 80127f6:	b09d      	sub	sp, #116	@ 0x74
 80127f8:	4607      	mov	r7, r0
 80127fa:	460d      	mov	r5, r1
 80127fc:	4614      	mov	r4, r2
 80127fe:	d510      	bpl.n	8012822 <_svfiprintf_r+0x36>
 8012800:	690b      	ldr	r3, [r1, #16]
 8012802:	b973      	cbnz	r3, 8012822 <_svfiprintf_r+0x36>
 8012804:	2140      	movs	r1, #64	@ 0x40
 8012806:	f7fe fc57 	bl	80110b8 <_malloc_r>
 801280a:	6028      	str	r0, [r5, #0]
 801280c:	6128      	str	r0, [r5, #16]
 801280e:	b930      	cbnz	r0, 801281e <_svfiprintf_r+0x32>
 8012810:	230c      	movs	r3, #12
 8012812:	603b      	str	r3, [r7, #0]
 8012814:	f04f 30ff 	mov.w	r0, #4294967295
 8012818:	b01d      	add	sp, #116	@ 0x74
 801281a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801281e:	2340      	movs	r3, #64	@ 0x40
 8012820:	616b      	str	r3, [r5, #20]
 8012822:	2300      	movs	r3, #0
 8012824:	9309      	str	r3, [sp, #36]	@ 0x24
 8012826:	2320      	movs	r3, #32
 8012828:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801282c:	f8cd 800c 	str.w	r8, [sp, #12]
 8012830:	2330      	movs	r3, #48	@ 0x30
 8012832:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80129d0 <_svfiprintf_r+0x1e4>
 8012836:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801283a:	f04f 0901 	mov.w	r9, #1
 801283e:	4623      	mov	r3, r4
 8012840:	469a      	mov	sl, r3
 8012842:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012846:	b10a      	cbz	r2, 801284c <_svfiprintf_r+0x60>
 8012848:	2a25      	cmp	r2, #37	@ 0x25
 801284a:	d1f9      	bne.n	8012840 <_svfiprintf_r+0x54>
 801284c:	ebba 0b04 	subs.w	fp, sl, r4
 8012850:	d00b      	beq.n	801286a <_svfiprintf_r+0x7e>
 8012852:	465b      	mov	r3, fp
 8012854:	4622      	mov	r2, r4
 8012856:	4629      	mov	r1, r5
 8012858:	4638      	mov	r0, r7
 801285a:	f7ff ff6b 	bl	8012734 <__ssputs_r>
 801285e:	3001      	adds	r0, #1
 8012860:	f000 80a7 	beq.w	80129b2 <_svfiprintf_r+0x1c6>
 8012864:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012866:	445a      	add	r2, fp
 8012868:	9209      	str	r2, [sp, #36]	@ 0x24
 801286a:	f89a 3000 	ldrb.w	r3, [sl]
 801286e:	2b00      	cmp	r3, #0
 8012870:	f000 809f 	beq.w	80129b2 <_svfiprintf_r+0x1c6>
 8012874:	2300      	movs	r3, #0
 8012876:	f04f 32ff 	mov.w	r2, #4294967295
 801287a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801287e:	f10a 0a01 	add.w	sl, sl, #1
 8012882:	9304      	str	r3, [sp, #16]
 8012884:	9307      	str	r3, [sp, #28]
 8012886:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801288a:	931a      	str	r3, [sp, #104]	@ 0x68
 801288c:	4654      	mov	r4, sl
 801288e:	2205      	movs	r2, #5
 8012890:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012894:	484e      	ldr	r0, [pc, #312]	@ (80129d0 <_svfiprintf_r+0x1e4>)
 8012896:	f7ed fc73 	bl	8000180 <memchr>
 801289a:	9a04      	ldr	r2, [sp, #16]
 801289c:	b9d8      	cbnz	r0, 80128d6 <_svfiprintf_r+0xea>
 801289e:	06d0      	lsls	r0, r2, #27
 80128a0:	bf44      	itt	mi
 80128a2:	2320      	movmi	r3, #32
 80128a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80128a8:	0711      	lsls	r1, r2, #28
 80128aa:	bf44      	itt	mi
 80128ac:	232b      	movmi	r3, #43	@ 0x2b
 80128ae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80128b2:	f89a 3000 	ldrb.w	r3, [sl]
 80128b6:	2b2a      	cmp	r3, #42	@ 0x2a
 80128b8:	d015      	beq.n	80128e6 <_svfiprintf_r+0xfa>
 80128ba:	9a07      	ldr	r2, [sp, #28]
 80128bc:	4654      	mov	r4, sl
 80128be:	2000      	movs	r0, #0
 80128c0:	f04f 0c0a 	mov.w	ip, #10
 80128c4:	4621      	mov	r1, r4
 80128c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80128ca:	3b30      	subs	r3, #48	@ 0x30
 80128cc:	2b09      	cmp	r3, #9
 80128ce:	d94b      	bls.n	8012968 <_svfiprintf_r+0x17c>
 80128d0:	b1b0      	cbz	r0, 8012900 <_svfiprintf_r+0x114>
 80128d2:	9207      	str	r2, [sp, #28]
 80128d4:	e014      	b.n	8012900 <_svfiprintf_r+0x114>
 80128d6:	eba0 0308 	sub.w	r3, r0, r8
 80128da:	fa09 f303 	lsl.w	r3, r9, r3
 80128de:	4313      	orrs	r3, r2
 80128e0:	9304      	str	r3, [sp, #16]
 80128e2:	46a2      	mov	sl, r4
 80128e4:	e7d2      	b.n	801288c <_svfiprintf_r+0xa0>
 80128e6:	9b03      	ldr	r3, [sp, #12]
 80128e8:	1d19      	adds	r1, r3, #4
 80128ea:	681b      	ldr	r3, [r3, #0]
 80128ec:	9103      	str	r1, [sp, #12]
 80128ee:	2b00      	cmp	r3, #0
 80128f0:	bfbb      	ittet	lt
 80128f2:	425b      	neglt	r3, r3
 80128f4:	f042 0202 	orrlt.w	r2, r2, #2
 80128f8:	9307      	strge	r3, [sp, #28]
 80128fa:	9307      	strlt	r3, [sp, #28]
 80128fc:	bfb8      	it	lt
 80128fe:	9204      	strlt	r2, [sp, #16]
 8012900:	7823      	ldrb	r3, [r4, #0]
 8012902:	2b2e      	cmp	r3, #46	@ 0x2e
 8012904:	d10a      	bne.n	801291c <_svfiprintf_r+0x130>
 8012906:	7863      	ldrb	r3, [r4, #1]
 8012908:	2b2a      	cmp	r3, #42	@ 0x2a
 801290a:	d132      	bne.n	8012972 <_svfiprintf_r+0x186>
 801290c:	9b03      	ldr	r3, [sp, #12]
 801290e:	1d1a      	adds	r2, r3, #4
 8012910:	681b      	ldr	r3, [r3, #0]
 8012912:	9203      	str	r2, [sp, #12]
 8012914:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8012918:	3402      	adds	r4, #2
 801291a:	9305      	str	r3, [sp, #20]
 801291c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80129e0 <_svfiprintf_r+0x1f4>
 8012920:	7821      	ldrb	r1, [r4, #0]
 8012922:	2203      	movs	r2, #3
 8012924:	4650      	mov	r0, sl
 8012926:	f7ed fc2b 	bl	8000180 <memchr>
 801292a:	b138      	cbz	r0, 801293c <_svfiprintf_r+0x150>
 801292c:	9b04      	ldr	r3, [sp, #16]
 801292e:	eba0 000a 	sub.w	r0, r0, sl
 8012932:	2240      	movs	r2, #64	@ 0x40
 8012934:	4082      	lsls	r2, r0
 8012936:	4313      	orrs	r3, r2
 8012938:	3401      	adds	r4, #1
 801293a:	9304      	str	r3, [sp, #16]
 801293c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012940:	4824      	ldr	r0, [pc, #144]	@ (80129d4 <_svfiprintf_r+0x1e8>)
 8012942:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8012946:	2206      	movs	r2, #6
 8012948:	f7ed fc1a 	bl	8000180 <memchr>
 801294c:	2800      	cmp	r0, #0
 801294e:	d036      	beq.n	80129be <_svfiprintf_r+0x1d2>
 8012950:	4b21      	ldr	r3, [pc, #132]	@ (80129d8 <_svfiprintf_r+0x1ec>)
 8012952:	bb1b      	cbnz	r3, 801299c <_svfiprintf_r+0x1b0>
 8012954:	9b03      	ldr	r3, [sp, #12]
 8012956:	3307      	adds	r3, #7
 8012958:	f023 0307 	bic.w	r3, r3, #7
 801295c:	3308      	adds	r3, #8
 801295e:	9303      	str	r3, [sp, #12]
 8012960:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012962:	4433      	add	r3, r6
 8012964:	9309      	str	r3, [sp, #36]	@ 0x24
 8012966:	e76a      	b.n	801283e <_svfiprintf_r+0x52>
 8012968:	fb0c 3202 	mla	r2, ip, r2, r3
 801296c:	460c      	mov	r4, r1
 801296e:	2001      	movs	r0, #1
 8012970:	e7a8      	b.n	80128c4 <_svfiprintf_r+0xd8>
 8012972:	2300      	movs	r3, #0
 8012974:	3401      	adds	r4, #1
 8012976:	9305      	str	r3, [sp, #20]
 8012978:	4619      	mov	r1, r3
 801297a:	f04f 0c0a 	mov.w	ip, #10
 801297e:	4620      	mov	r0, r4
 8012980:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012984:	3a30      	subs	r2, #48	@ 0x30
 8012986:	2a09      	cmp	r2, #9
 8012988:	d903      	bls.n	8012992 <_svfiprintf_r+0x1a6>
 801298a:	2b00      	cmp	r3, #0
 801298c:	d0c6      	beq.n	801291c <_svfiprintf_r+0x130>
 801298e:	9105      	str	r1, [sp, #20]
 8012990:	e7c4      	b.n	801291c <_svfiprintf_r+0x130>
 8012992:	fb0c 2101 	mla	r1, ip, r1, r2
 8012996:	4604      	mov	r4, r0
 8012998:	2301      	movs	r3, #1
 801299a:	e7f0      	b.n	801297e <_svfiprintf_r+0x192>
 801299c:	ab03      	add	r3, sp, #12
 801299e:	9300      	str	r3, [sp, #0]
 80129a0:	462a      	mov	r2, r5
 80129a2:	4b0e      	ldr	r3, [pc, #56]	@ (80129dc <_svfiprintf_r+0x1f0>)
 80129a4:	a904      	add	r1, sp, #16
 80129a6:	4638      	mov	r0, r7
 80129a8:	f7fc fd04 	bl	800f3b4 <_printf_float>
 80129ac:	1c42      	adds	r2, r0, #1
 80129ae:	4606      	mov	r6, r0
 80129b0:	d1d6      	bne.n	8012960 <_svfiprintf_r+0x174>
 80129b2:	89ab      	ldrh	r3, [r5, #12]
 80129b4:	065b      	lsls	r3, r3, #25
 80129b6:	f53f af2d 	bmi.w	8012814 <_svfiprintf_r+0x28>
 80129ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80129bc:	e72c      	b.n	8012818 <_svfiprintf_r+0x2c>
 80129be:	ab03      	add	r3, sp, #12
 80129c0:	9300      	str	r3, [sp, #0]
 80129c2:	462a      	mov	r2, r5
 80129c4:	4b05      	ldr	r3, [pc, #20]	@ (80129dc <_svfiprintf_r+0x1f0>)
 80129c6:	a904      	add	r1, sp, #16
 80129c8:	4638      	mov	r0, r7
 80129ca:	f7fc ff8b 	bl	800f8e4 <_printf_i>
 80129ce:	e7ed      	b.n	80129ac <_svfiprintf_r+0x1c0>
 80129d0:	08019706 	.word	0x08019706
 80129d4:	08019710 	.word	0x08019710
 80129d8:	0800f3b5 	.word	0x0800f3b5
 80129dc:	08012735 	.word	0x08012735
 80129e0:	0801970c 	.word	0x0801970c

080129e4 <__sflush_r>:
 80129e4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80129e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129ec:	0716      	lsls	r6, r2, #28
 80129ee:	4605      	mov	r5, r0
 80129f0:	460c      	mov	r4, r1
 80129f2:	d454      	bmi.n	8012a9e <__sflush_r+0xba>
 80129f4:	684b      	ldr	r3, [r1, #4]
 80129f6:	2b00      	cmp	r3, #0
 80129f8:	dc02      	bgt.n	8012a00 <__sflush_r+0x1c>
 80129fa:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80129fc:	2b00      	cmp	r3, #0
 80129fe:	dd48      	ble.n	8012a92 <__sflush_r+0xae>
 8012a00:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8012a02:	2e00      	cmp	r6, #0
 8012a04:	d045      	beq.n	8012a92 <__sflush_r+0xae>
 8012a06:	2300      	movs	r3, #0
 8012a08:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8012a0c:	682f      	ldr	r7, [r5, #0]
 8012a0e:	6a21      	ldr	r1, [r4, #32]
 8012a10:	602b      	str	r3, [r5, #0]
 8012a12:	d030      	beq.n	8012a76 <__sflush_r+0x92>
 8012a14:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8012a16:	89a3      	ldrh	r3, [r4, #12]
 8012a18:	0759      	lsls	r1, r3, #29
 8012a1a:	d505      	bpl.n	8012a28 <__sflush_r+0x44>
 8012a1c:	6863      	ldr	r3, [r4, #4]
 8012a1e:	1ad2      	subs	r2, r2, r3
 8012a20:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8012a22:	b10b      	cbz	r3, 8012a28 <__sflush_r+0x44>
 8012a24:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8012a26:	1ad2      	subs	r2, r2, r3
 8012a28:	2300      	movs	r3, #0
 8012a2a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8012a2c:	6a21      	ldr	r1, [r4, #32]
 8012a2e:	4628      	mov	r0, r5
 8012a30:	47b0      	blx	r6
 8012a32:	1c43      	adds	r3, r0, #1
 8012a34:	89a3      	ldrh	r3, [r4, #12]
 8012a36:	d106      	bne.n	8012a46 <__sflush_r+0x62>
 8012a38:	6829      	ldr	r1, [r5, #0]
 8012a3a:	291d      	cmp	r1, #29
 8012a3c:	d82b      	bhi.n	8012a96 <__sflush_r+0xb2>
 8012a3e:	4a2a      	ldr	r2, [pc, #168]	@ (8012ae8 <__sflush_r+0x104>)
 8012a40:	40ca      	lsrs	r2, r1
 8012a42:	07d6      	lsls	r6, r2, #31
 8012a44:	d527      	bpl.n	8012a96 <__sflush_r+0xb2>
 8012a46:	2200      	movs	r2, #0
 8012a48:	6062      	str	r2, [r4, #4]
 8012a4a:	04d9      	lsls	r1, r3, #19
 8012a4c:	6922      	ldr	r2, [r4, #16]
 8012a4e:	6022      	str	r2, [r4, #0]
 8012a50:	d504      	bpl.n	8012a5c <__sflush_r+0x78>
 8012a52:	1c42      	adds	r2, r0, #1
 8012a54:	d101      	bne.n	8012a5a <__sflush_r+0x76>
 8012a56:	682b      	ldr	r3, [r5, #0]
 8012a58:	b903      	cbnz	r3, 8012a5c <__sflush_r+0x78>
 8012a5a:	6560      	str	r0, [r4, #84]	@ 0x54
 8012a5c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8012a5e:	602f      	str	r7, [r5, #0]
 8012a60:	b1b9      	cbz	r1, 8012a92 <__sflush_r+0xae>
 8012a62:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8012a66:	4299      	cmp	r1, r3
 8012a68:	d002      	beq.n	8012a70 <__sflush_r+0x8c>
 8012a6a:	4628      	mov	r0, r5
 8012a6c:	f7fe fab0 	bl	8010fd0 <_free_r>
 8012a70:	2300      	movs	r3, #0
 8012a72:	6363      	str	r3, [r4, #52]	@ 0x34
 8012a74:	e00d      	b.n	8012a92 <__sflush_r+0xae>
 8012a76:	2301      	movs	r3, #1
 8012a78:	4628      	mov	r0, r5
 8012a7a:	47b0      	blx	r6
 8012a7c:	4602      	mov	r2, r0
 8012a7e:	1c50      	adds	r0, r2, #1
 8012a80:	d1c9      	bne.n	8012a16 <__sflush_r+0x32>
 8012a82:	682b      	ldr	r3, [r5, #0]
 8012a84:	2b00      	cmp	r3, #0
 8012a86:	d0c6      	beq.n	8012a16 <__sflush_r+0x32>
 8012a88:	2b1d      	cmp	r3, #29
 8012a8a:	d001      	beq.n	8012a90 <__sflush_r+0xac>
 8012a8c:	2b16      	cmp	r3, #22
 8012a8e:	d11e      	bne.n	8012ace <__sflush_r+0xea>
 8012a90:	602f      	str	r7, [r5, #0]
 8012a92:	2000      	movs	r0, #0
 8012a94:	e022      	b.n	8012adc <__sflush_r+0xf8>
 8012a96:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012a9a:	b21b      	sxth	r3, r3
 8012a9c:	e01b      	b.n	8012ad6 <__sflush_r+0xf2>
 8012a9e:	690f      	ldr	r7, [r1, #16]
 8012aa0:	2f00      	cmp	r7, #0
 8012aa2:	d0f6      	beq.n	8012a92 <__sflush_r+0xae>
 8012aa4:	0793      	lsls	r3, r2, #30
 8012aa6:	680e      	ldr	r6, [r1, #0]
 8012aa8:	bf08      	it	eq
 8012aaa:	694b      	ldreq	r3, [r1, #20]
 8012aac:	600f      	str	r7, [r1, #0]
 8012aae:	bf18      	it	ne
 8012ab0:	2300      	movne	r3, #0
 8012ab2:	eba6 0807 	sub.w	r8, r6, r7
 8012ab6:	608b      	str	r3, [r1, #8]
 8012ab8:	f1b8 0f00 	cmp.w	r8, #0
 8012abc:	dde9      	ble.n	8012a92 <__sflush_r+0xae>
 8012abe:	6a21      	ldr	r1, [r4, #32]
 8012ac0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8012ac2:	4643      	mov	r3, r8
 8012ac4:	463a      	mov	r2, r7
 8012ac6:	4628      	mov	r0, r5
 8012ac8:	47b0      	blx	r6
 8012aca:	2800      	cmp	r0, #0
 8012acc:	dc08      	bgt.n	8012ae0 <__sflush_r+0xfc>
 8012ace:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012ad2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012ad6:	81a3      	strh	r3, [r4, #12]
 8012ad8:	f04f 30ff 	mov.w	r0, #4294967295
 8012adc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ae0:	4407      	add	r7, r0
 8012ae2:	eba8 0800 	sub.w	r8, r8, r0
 8012ae6:	e7e7      	b.n	8012ab8 <__sflush_r+0xd4>
 8012ae8:	20400001 	.word	0x20400001

08012aec <_fflush_r>:
 8012aec:	b538      	push	{r3, r4, r5, lr}
 8012aee:	690b      	ldr	r3, [r1, #16]
 8012af0:	4605      	mov	r5, r0
 8012af2:	460c      	mov	r4, r1
 8012af4:	b913      	cbnz	r3, 8012afc <_fflush_r+0x10>
 8012af6:	2500      	movs	r5, #0
 8012af8:	4628      	mov	r0, r5
 8012afa:	bd38      	pop	{r3, r4, r5, pc}
 8012afc:	b118      	cbz	r0, 8012b06 <_fflush_r+0x1a>
 8012afe:	6a03      	ldr	r3, [r0, #32]
 8012b00:	b90b      	cbnz	r3, 8012b06 <_fflush_r+0x1a>
 8012b02:	f7fd faa7 	bl	8010054 <__sinit>
 8012b06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012b0a:	2b00      	cmp	r3, #0
 8012b0c:	d0f3      	beq.n	8012af6 <_fflush_r+0xa>
 8012b0e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8012b10:	07d0      	lsls	r0, r2, #31
 8012b12:	d404      	bmi.n	8012b1e <_fflush_r+0x32>
 8012b14:	0599      	lsls	r1, r3, #22
 8012b16:	d402      	bmi.n	8012b1e <_fflush_r+0x32>
 8012b18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8012b1a:	f7fd fbea 	bl	80102f2 <__retarget_lock_acquire_recursive>
 8012b1e:	4628      	mov	r0, r5
 8012b20:	4621      	mov	r1, r4
 8012b22:	f7ff ff5f 	bl	80129e4 <__sflush_r>
 8012b26:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8012b28:	07da      	lsls	r2, r3, #31
 8012b2a:	4605      	mov	r5, r0
 8012b2c:	d4e4      	bmi.n	8012af8 <_fflush_r+0xc>
 8012b2e:	89a3      	ldrh	r3, [r4, #12]
 8012b30:	059b      	lsls	r3, r3, #22
 8012b32:	d4e1      	bmi.n	8012af8 <_fflush_r+0xc>
 8012b34:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8012b36:	f7fd fbdd 	bl	80102f4 <__retarget_lock_release_recursive>
 8012b3a:	e7dd      	b.n	8012af8 <_fflush_r+0xc>

08012b3c <memmove>:
 8012b3c:	4288      	cmp	r0, r1
 8012b3e:	b510      	push	{r4, lr}
 8012b40:	eb01 0402 	add.w	r4, r1, r2
 8012b44:	d902      	bls.n	8012b4c <memmove+0x10>
 8012b46:	4284      	cmp	r4, r0
 8012b48:	4623      	mov	r3, r4
 8012b4a:	d807      	bhi.n	8012b5c <memmove+0x20>
 8012b4c:	1e43      	subs	r3, r0, #1
 8012b4e:	42a1      	cmp	r1, r4
 8012b50:	d008      	beq.n	8012b64 <memmove+0x28>
 8012b52:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012b56:	f803 2f01 	strb.w	r2, [r3, #1]!
 8012b5a:	e7f8      	b.n	8012b4e <memmove+0x12>
 8012b5c:	4402      	add	r2, r0
 8012b5e:	4601      	mov	r1, r0
 8012b60:	428a      	cmp	r2, r1
 8012b62:	d100      	bne.n	8012b66 <memmove+0x2a>
 8012b64:	bd10      	pop	{r4, pc}
 8012b66:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012b6a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012b6e:	e7f7      	b.n	8012b60 <memmove+0x24>

08012b70 <strncmp>:
 8012b70:	b510      	push	{r4, lr}
 8012b72:	b16a      	cbz	r2, 8012b90 <strncmp+0x20>
 8012b74:	3901      	subs	r1, #1
 8012b76:	1884      	adds	r4, r0, r2
 8012b78:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012b7c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8012b80:	429a      	cmp	r2, r3
 8012b82:	d103      	bne.n	8012b8c <strncmp+0x1c>
 8012b84:	42a0      	cmp	r0, r4
 8012b86:	d001      	beq.n	8012b8c <strncmp+0x1c>
 8012b88:	2a00      	cmp	r2, #0
 8012b8a:	d1f5      	bne.n	8012b78 <strncmp+0x8>
 8012b8c:	1ad0      	subs	r0, r2, r3
 8012b8e:	bd10      	pop	{r4, pc}
 8012b90:	4610      	mov	r0, r2
 8012b92:	e7fc      	b.n	8012b8e <strncmp+0x1e>

08012b94 <_sbrk_r>:
 8012b94:	b538      	push	{r3, r4, r5, lr}
 8012b96:	4d06      	ldr	r5, [pc, #24]	@ (8012bb0 <_sbrk_r+0x1c>)
 8012b98:	2300      	movs	r3, #0
 8012b9a:	4604      	mov	r4, r0
 8012b9c:	4608      	mov	r0, r1
 8012b9e:	602b      	str	r3, [r5, #0]
 8012ba0:	f7f2 f854 	bl	8004c4c <_sbrk>
 8012ba4:	1c43      	adds	r3, r0, #1
 8012ba6:	d102      	bne.n	8012bae <_sbrk_r+0x1a>
 8012ba8:	682b      	ldr	r3, [r5, #0]
 8012baa:	b103      	cbz	r3, 8012bae <_sbrk_r+0x1a>
 8012bac:	6023      	str	r3, [r4, #0]
 8012bae:	bd38      	pop	{r3, r4, r5, pc}
 8012bb0:	20005c24 	.word	0x20005c24
 8012bb4:	00000000 	.word	0x00000000

08012bb8 <nan>:
 8012bb8:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8012bc0 <nan+0x8>
 8012bbc:	4770      	bx	lr
 8012bbe:	bf00      	nop
 8012bc0:	00000000 	.word	0x00000000
 8012bc4:	7ff80000 	.word	0x7ff80000

08012bc8 <__assert_func>:
 8012bc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012bca:	4614      	mov	r4, r2
 8012bcc:	461a      	mov	r2, r3
 8012bce:	4b09      	ldr	r3, [pc, #36]	@ (8012bf4 <__assert_func+0x2c>)
 8012bd0:	681b      	ldr	r3, [r3, #0]
 8012bd2:	4605      	mov	r5, r0
 8012bd4:	68d8      	ldr	r0, [r3, #12]
 8012bd6:	b14c      	cbz	r4, 8012bec <__assert_func+0x24>
 8012bd8:	4b07      	ldr	r3, [pc, #28]	@ (8012bf8 <__assert_func+0x30>)
 8012bda:	9100      	str	r1, [sp, #0]
 8012bdc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012be0:	4906      	ldr	r1, [pc, #24]	@ (8012bfc <__assert_func+0x34>)
 8012be2:	462b      	mov	r3, r5
 8012be4:	f000 fba8 	bl	8013338 <fiprintf>
 8012be8:	f000 fbb8 	bl	801335c <abort>
 8012bec:	4b04      	ldr	r3, [pc, #16]	@ (8012c00 <__assert_func+0x38>)
 8012bee:	461c      	mov	r4, r3
 8012bf0:	e7f3      	b.n	8012bda <__assert_func+0x12>
 8012bf2:	bf00      	nop
 8012bf4:	20000140 	.word	0x20000140
 8012bf8:	0801971f 	.word	0x0801971f
 8012bfc:	0801972c 	.word	0x0801972c
 8012c00:	0801975a 	.word	0x0801975a

08012c04 <_calloc_r>:
 8012c04:	b570      	push	{r4, r5, r6, lr}
 8012c06:	fba1 5402 	umull	r5, r4, r1, r2
 8012c0a:	b934      	cbnz	r4, 8012c1a <_calloc_r+0x16>
 8012c0c:	4629      	mov	r1, r5
 8012c0e:	f7fe fa53 	bl	80110b8 <_malloc_r>
 8012c12:	4606      	mov	r6, r0
 8012c14:	b928      	cbnz	r0, 8012c22 <_calloc_r+0x1e>
 8012c16:	4630      	mov	r0, r6
 8012c18:	bd70      	pop	{r4, r5, r6, pc}
 8012c1a:	220c      	movs	r2, #12
 8012c1c:	6002      	str	r2, [r0, #0]
 8012c1e:	2600      	movs	r6, #0
 8012c20:	e7f9      	b.n	8012c16 <_calloc_r+0x12>
 8012c22:	462a      	mov	r2, r5
 8012c24:	4621      	mov	r1, r4
 8012c26:	f7fd fae6 	bl	80101f6 <memset>
 8012c2a:	e7f4      	b.n	8012c16 <_calloc_r+0x12>

08012c2c <rshift>:
 8012c2c:	6903      	ldr	r3, [r0, #16]
 8012c2e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8012c32:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012c36:	ea4f 1261 	mov.w	r2, r1, asr #5
 8012c3a:	f100 0414 	add.w	r4, r0, #20
 8012c3e:	dd45      	ble.n	8012ccc <rshift+0xa0>
 8012c40:	f011 011f 	ands.w	r1, r1, #31
 8012c44:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8012c48:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8012c4c:	d10c      	bne.n	8012c68 <rshift+0x3c>
 8012c4e:	f100 0710 	add.w	r7, r0, #16
 8012c52:	4629      	mov	r1, r5
 8012c54:	42b1      	cmp	r1, r6
 8012c56:	d334      	bcc.n	8012cc2 <rshift+0x96>
 8012c58:	1a9b      	subs	r3, r3, r2
 8012c5a:	009b      	lsls	r3, r3, #2
 8012c5c:	1eea      	subs	r2, r5, #3
 8012c5e:	4296      	cmp	r6, r2
 8012c60:	bf38      	it	cc
 8012c62:	2300      	movcc	r3, #0
 8012c64:	4423      	add	r3, r4
 8012c66:	e015      	b.n	8012c94 <rshift+0x68>
 8012c68:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8012c6c:	f1c1 0820 	rsb	r8, r1, #32
 8012c70:	40cf      	lsrs	r7, r1
 8012c72:	f105 0e04 	add.w	lr, r5, #4
 8012c76:	46a1      	mov	r9, r4
 8012c78:	4576      	cmp	r6, lr
 8012c7a:	46f4      	mov	ip, lr
 8012c7c:	d815      	bhi.n	8012caa <rshift+0x7e>
 8012c7e:	1a9a      	subs	r2, r3, r2
 8012c80:	0092      	lsls	r2, r2, #2
 8012c82:	3a04      	subs	r2, #4
 8012c84:	3501      	adds	r5, #1
 8012c86:	42ae      	cmp	r6, r5
 8012c88:	bf38      	it	cc
 8012c8a:	2200      	movcc	r2, #0
 8012c8c:	18a3      	adds	r3, r4, r2
 8012c8e:	50a7      	str	r7, [r4, r2]
 8012c90:	b107      	cbz	r7, 8012c94 <rshift+0x68>
 8012c92:	3304      	adds	r3, #4
 8012c94:	1b1a      	subs	r2, r3, r4
 8012c96:	42a3      	cmp	r3, r4
 8012c98:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8012c9c:	bf08      	it	eq
 8012c9e:	2300      	moveq	r3, #0
 8012ca0:	6102      	str	r2, [r0, #16]
 8012ca2:	bf08      	it	eq
 8012ca4:	6143      	streq	r3, [r0, #20]
 8012ca6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012caa:	f8dc c000 	ldr.w	ip, [ip]
 8012cae:	fa0c fc08 	lsl.w	ip, ip, r8
 8012cb2:	ea4c 0707 	orr.w	r7, ip, r7
 8012cb6:	f849 7b04 	str.w	r7, [r9], #4
 8012cba:	f85e 7b04 	ldr.w	r7, [lr], #4
 8012cbe:	40cf      	lsrs	r7, r1
 8012cc0:	e7da      	b.n	8012c78 <rshift+0x4c>
 8012cc2:	f851 cb04 	ldr.w	ip, [r1], #4
 8012cc6:	f847 cf04 	str.w	ip, [r7, #4]!
 8012cca:	e7c3      	b.n	8012c54 <rshift+0x28>
 8012ccc:	4623      	mov	r3, r4
 8012cce:	e7e1      	b.n	8012c94 <rshift+0x68>

08012cd0 <__hexdig_fun>:
 8012cd0:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8012cd4:	2b09      	cmp	r3, #9
 8012cd6:	d802      	bhi.n	8012cde <__hexdig_fun+0xe>
 8012cd8:	3820      	subs	r0, #32
 8012cda:	b2c0      	uxtb	r0, r0
 8012cdc:	4770      	bx	lr
 8012cde:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8012ce2:	2b05      	cmp	r3, #5
 8012ce4:	d801      	bhi.n	8012cea <__hexdig_fun+0x1a>
 8012ce6:	3847      	subs	r0, #71	@ 0x47
 8012ce8:	e7f7      	b.n	8012cda <__hexdig_fun+0xa>
 8012cea:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8012cee:	2b05      	cmp	r3, #5
 8012cf0:	d801      	bhi.n	8012cf6 <__hexdig_fun+0x26>
 8012cf2:	3827      	subs	r0, #39	@ 0x27
 8012cf4:	e7f1      	b.n	8012cda <__hexdig_fun+0xa>
 8012cf6:	2000      	movs	r0, #0
 8012cf8:	4770      	bx	lr
	...

08012cfc <__gethex>:
 8012cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d00:	b085      	sub	sp, #20
 8012d02:	468a      	mov	sl, r1
 8012d04:	9302      	str	r3, [sp, #8]
 8012d06:	680b      	ldr	r3, [r1, #0]
 8012d08:	9001      	str	r0, [sp, #4]
 8012d0a:	4690      	mov	r8, r2
 8012d0c:	1c9c      	adds	r4, r3, #2
 8012d0e:	46a1      	mov	r9, r4
 8012d10:	f814 0b01 	ldrb.w	r0, [r4], #1
 8012d14:	2830      	cmp	r0, #48	@ 0x30
 8012d16:	d0fa      	beq.n	8012d0e <__gethex+0x12>
 8012d18:	eba9 0303 	sub.w	r3, r9, r3
 8012d1c:	f1a3 0b02 	sub.w	fp, r3, #2
 8012d20:	f7ff ffd6 	bl	8012cd0 <__hexdig_fun>
 8012d24:	4605      	mov	r5, r0
 8012d26:	2800      	cmp	r0, #0
 8012d28:	d168      	bne.n	8012dfc <__gethex+0x100>
 8012d2a:	49a0      	ldr	r1, [pc, #640]	@ (8012fac <__gethex+0x2b0>)
 8012d2c:	2201      	movs	r2, #1
 8012d2e:	4648      	mov	r0, r9
 8012d30:	f7ff ff1e 	bl	8012b70 <strncmp>
 8012d34:	4607      	mov	r7, r0
 8012d36:	2800      	cmp	r0, #0
 8012d38:	d167      	bne.n	8012e0a <__gethex+0x10e>
 8012d3a:	f899 0001 	ldrb.w	r0, [r9, #1]
 8012d3e:	4626      	mov	r6, r4
 8012d40:	f7ff ffc6 	bl	8012cd0 <__hexdig_fun>
 8012d44:	2800      	cmp	r0, #0
 8012d46:	d062      	beq.n	8012e0e <__gethex+0x112>
 8012d48:	4623      	mov	r3, r4
 8012d4a:	7818      	ldrb	r0, [r3, #0]
 8012d4c:	2830      	cmp	r0, #48	@ 0x30
 8012d4e:	4699      	mov	r9, r3
 8012d50:	f103 0301 	add.w	r3, r3, #1
 8012d54:	d0f9      	beq.n	8012d4a <__gethex+0x4e>
 8012d56:	f7ff ffbb 	bl	8012cd0 <__hexdig_fun>
 8012d5a:	fab0 f580 	clz	r5, r0
 8012d5e:	096d      	lsrs	r5, r5, #5
 8012d60:	f04f 0b01 	mov.w	fp, #1
 8012d64:	464a      	mov	r2, r9
 8012d66:	4616      	mov	r6, r2
 8012d68:	3201      	adds	r2, #1
 8012d6a:	7830      	ldrb	r0, [r6, #0]
 8012d6c:	f7ff ffb0 	bl	8012cd0 <__hexdig_fun>
 8012d70:	2800      	cmp	r0, #0
 8012d72:	d1f8      	bne.n	8012d66 <__gethex+0x6a>
 8012d74:	498d      	ldr	r1, [pc, #564]	@ (8012fac <__gethex+0x2b0>)
 8012d76:	2201      	movs	r2, #1
 8012d78:	4630      	mov	r0, r6
 8012d7a:	f7ff fef9 	bl	8012b70 <strncmp>
 8012d7e:	2800      	cmp	r0, #0
 8012d80:	d13f      	bne.n	8012e02 <__gethex+0x106>
 8012d82:	b944      	cbnz	r4, 8012d96 <__gethex+0x9a>
 8012d84:	1c74      	adds	r4, r6, #1
 8012d86:	4622      	mov	r2, r4
 8012d88:	4616      	mov	r6, r2
 8012d8a:	3201      	adds	r2, #1
 8012d8c:	7830      	ldrb	r0, [r6, #0]
 8012d8e:	f7ff ff9f 	bl	8012cd0 <__hexdig_fun>
 8012d92:	2800      	cmp	r0, #0
 8012d94:	d1f8      	bne.n	8012d88 <__gethex+0x8c>
 8012d96:	1ba4      	subs	r4, r4, r6
 8012d98:	00a7      	lsls	r7, r4, #2
 8012d9a:	7833      	ldrb	r3, [r6, #0]
 8012d9c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8012da0:	2b50      	cmp	r3, #80	@ 0x50
 8012da2:	d13e      	bne.n	8012e22 <__gethex+0x126>
 8012da4:	7873      	ldrb	r3, [r6, #1]
 8012da6:	2b2b      	cmp	r3, #43	@ 0x2b
 8012da8:	d033      	beq.n	8012e12 <__gethex+0x116>
 8012daa:	2b2d      	cmp	r3, #45	@ 0x2d
 8012dac:	d034      	beq.n	8012e18 <__gethex+0x11c>
 8012dae:	1c71      	adds	r1, r6, #1
 8012db0:	2400      	movs	r4, #0
 8012db2:	7808      	ldrb	r0, [r1, #0]
 8012db4:	f7ff ff8c 	bl	8012cd0 <__hexdig_fun>
 8012db8:	1e43      	subs	r3, r0, #1
 8012dba:	b2db      	uxtb	r3, r3
 8012dbc:	2b18      	cmp	r3, #24
 8012dbe:	d830      	bhi.n	8012e22 <__gethex+0x126>
 8012dc0:	f1a0 0210 	sub.w	r2, r0, #16
 8012dc4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8012dc8:	f7ff ff82 	bl	8012cd0 <__hexdig_fun>
 8012dcc:	f100 3cff 	add.w	ip, r0, #4294967295
 8012dd0:	fa5f fc8c 	uxtb.w	ip, ip
 8012dd4:	f1bc 0f18 	cmp.w	ip, #24
 8012dd8:	f04f 030a 	mov.w	r3, #10
 8012ddc:	d91e      	bls.n	8012e1c <__gethex+0x120>
 8012dde:	b104      	cbz	r4, 8012de2 <__gethex+0xe6>
 8012de0:	4252      	negs	r2, r2
 8012de2:	4417      	add	r7, r2
 8012de4:	f8ca 1000 	str.w	r1, [sl]
 8012de8:	b1ed      	cbz	r5, 8012e26 <__gethex+0x12a>
 8012dea:	f1bb 0f00 	cmp.w	fp, #0
 8012dee:	bf0c      	ite	eq
 8012df0:	2506      	moveq	r5, #6
 8012df2:	2500      	movne	r5, #0
 8012df4:	4628      	mov	r0, r5
 8012df6:	b005      	add	sp, #20
 8012df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dfc:	2500      	movs	r5, #0
 8012dfe:	462c      	mov	r4, r5
 8012e00:	e7b0      	b.n	8012d64 <__gethex+0x68>
 8012e02:	2c00      	cmp	r4, #0
 8012e04:	d1c7      	bne.n	8012d96 <__gethex+0x9a>
 8012e06:	4627      	mov	r7, r4
 8012e08:	e7c7      	b.n	8012d9a <__gethex+0x9e>
 8012e0a:	464e      	mov	r6, r9
 8012e0c:	462f      	mov	r7, r5
 8012e0e:	2501      	movs	r5, #1
 8012e10:	e7c3      	b.n	8012d9a <__gethex+0x9e>
 8012e12:	2400      	movs	r4, #0
 8012e14:	1cb1      	adds	r1, r6, #2
 8012e16:	e7cc      	b.n	8012db2 <__gethex+0xb6>
 8012e18:	2401      	movs	r4, #1
 8012e1a:	e7fb      	b.n	8012e14 <__gethex+0x118>
 8012e1c:	fb03 0002 	mla	r0, r3, r2, r0
 8012e20:	e7ce      	b.n	8012dc0 <__gethex+0xc4>
 8012e22:	4631      	mov	r1, r6
 8012e24:	e7de      	b.n	8012de4 <__gethex+0xe8>
 8012e26:	eba6 0309 	sub.w	r3, r6, r9
 8012e2a:	3b01      	subs	r3, #1
 8012e2c:	4629      	mov	r1, r5
 8012e2e:	2b07      	cmp	r3, #7
 8012e30:	dc0a      	bgt.n	8012e48 <__gethex+0x14c>
 8012e32:	9801      	ldr	r0, [sp, #4]
 8012e34:	f7fe f9cc 	bl	80111d0 <_Balloc>
 8012e38:	4604      	mov	r4, r0
 8012e3a:	b940      	cbnz	r0, 8012e4e <__gethex+0x152>
 8012e3c:	4b5c      	ldr	r3, [pc, #368]	@ (8012fb0 <__gethex+0x2b4>)
 8012e3e:	4602      	mov	r2, r0
 8012e40:	21e4      	movs	r1, #228	@ 0xe4
 8012e42:	485c      	ldr	r0, [pc, #368]	@ (8012fb4 <__gethex+0x2b8>)
 8012e44:	f7ff fec0 	bl	8012bc8 <__assert_func>
 8012e48:	3101      	adds	r1, #1
 8012e4a:	105b      	asrs	r3, r3, #1
 8012e4c:	e7ef      	b.n	8012e2e <__gethex+0x132>
 8012e4e:	f100 0a14 	add.w	sl, r0, #20
 8012e52:	2300      	movs	r3, #0
 8012e54:	4655      	mov	r5, sl
 8012e56:	469b      	mov	fp, r3
 8012e58:	45b1      	cmp	r9, r6
 8012e5a:	d337      	bcc.n	8012ecc <__gethex+0x1d0>
 8012e5c:	f845 bb04 	str.w	fp, [r5], #4
 8012e60:	eba5 050a 	sub.w	r5, r5, sl
 8012e64:	10ad      	asrs	r5, r5, #2
 8012e66:	6125      	str	r5, [r4, #16]
 8012e68:	4658      	mov	r0, fp
 8012e6a:	f7fe faa3 	bl	80113b4 <__hi0bits>
 8012e6e:	016d      	lsls	r5, r5, #5
 8012e70:	f8d8 6000 	ldr.w	r6, [r8]
 8012e74:	1a2d      	subs	r5, r5, r0
 8012e76:	42b5      	cmp	r5, r6
 8012e78:	dd54      	ble.n	8012f24 <__gethex+0x228>
 8012e7a:	1bad      	subs	r5, r5, r6
 8012e7c:	4629      	mov	r1, r5
 8012e7e:	4620      	mov	r0, r4
 8012e80:	f7fe fe2f 	bl	8011ae2 <__any_on>
 8012e84:	4681      	mov	r9, r0
 8012e86:	b178      	cbz	r0, 8012ea8 <__gethex+0x1ac>
 8012e88:	1e6b      	subs	r3, r5, #1
 8012e8a:	1159      	asrs	r1, r3, #5
 8012e8c:	f003 021f 	and.w	r2, r3, #31
 8012e90:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8012e94:	f04f 0901 	mov.w	r9, #1
 8012e98:	fa09 f202 	lsl.w	r2, r9, r2
 8012e9c:	420a      	tst	r2, r1
 8012e9e:	d003      	beq.n	8012ea8 <__gethex+0x1ac>
 8012ea0:	454b      	cmp	r3, r9
 8012ea2:	dc36      	bgt.n	8012f12 <__gethex+0x216>
 8012ea4:	f04f 0902 	mov.w	r9, #2
 8012ea8:	4629      	mov	r1, r5
 8012eaa:	4620      	mov	r0, r4
 8012eac:	f7ff febe 	bl	8012c2c <rshift>
 8012eb0:	442f      	add	r7, r5
 8012eb2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8012eb6:	42bb      	cmp	r3, r7
 8012eb8:	da42      	bge.n	8012f40 <__gethex+0x244>
 8012eba:	9801      	ldr	r0, [sp, #4]
 8012ebc:	4621      	mov	r1, r4
 8012ebe:	f7fe f9c7 	bl	8011250 <_Bfree>
 8012ec2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8012ec4:	2300      	movs	r3, #0
 8012ec6:	6013      	str	r3, [r2, #0]
 8012ec8:	25a3      	movs	r5, #163	@ 0xa3
 8012eca:	e793      	b.n	8012df4 <__gethex+0xf8>
 8012ecc:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8012ed0:	2a2e      	cmp	r2, #46	@ 0x2e
 8012ed2:	d012      	beq.n	8012efa <__gethex+0x1fe>
 8012ed4:	2b20      	cmp	r3, #32
 8012ed6:	d104      	bne.n	8012ee2 <__gethex+0x1e6>
 8012ed8:	f845 bb04 	str.w	fp, [r5], #4
 8012edc:	f04f 0b00 	mov.w	fp, #0
 8012ee0:	465b      	mov	r3, fp
 8012ee2:	7830      	ldrb	r0, [r6, #0]
 8012ee4:	9303      	str	r3, [sp, #12]
 8012ee6:	f7ff fef3 	bl	8012cd0 <__hexdig_fun>
 8012eea:	9b03      	ldr	r3, [sp, #12]
 8012eec:	f000 000f 	and.w	r0, r0, #15
 8012ef0:	4098      	lsls	r0, r3
 8012ef2:	ea4b 0b00 	orr.w	fp, fp, r0
 8012ef6:	3304      	adds	r3, #4
 8012ef8:	e7ae      	b.n	8012e58 <__gethex+0x15c>
 8012efa:	45b1      	cmp	r9, r6
 8012efc:	d8ea      	bhi.n	8012ed4 <__gethex+0x1d8>
 8012efe:	492b      	ldr	r1, [pc, #172]	@ (8012fac <__gethex+0x2b0>)
 8012f00:	9303      	str	r3, [sp, #12]
 8012f02:	2201      	movs	r2, #1
 8012f04:	4630      	mov	r0, r6
 8012f06:	f7ff fe33 	bl	8012b70 <strncmp>
 8012f0a:	9b03      	ldr	r3, [sp, #12]
 8012f0c:	2800      	cmp	r0, #0
 8012f0e:	d1e1      	bne.n	8012ed4 <__gethex+0x1d8>
 8012f10:	e7a2      	b.n	8012e58 <__gethex+0x15c>
 8012f12:	1ea9      	subs	r1, r5, #2
 8012f14:	4620      	mov	r0, r4
 8012f16:	f7fe fde4 	bl	8011ae2 <__any_on>
 8012f1a:	2800      	cmp	r0, #0
 8012f1c:	d0c2      	beq.n	8012ea4 <__gethex+0x1a8>
 8012f1e:	f04f 0903 	mov.w	r9, #3
 8012f22:	e7c1      	b.n	8012ea8 <__gethex+0x1ac>
 8012f24:	da09      	bge.n	8012f3a <__gethex+0x23e>
 8012f26:	1b75      	subs	r5, r6, r5
 8012f28:	4621      	mov	r1, r4
 8012f2a:	9801      	ldr	r0, [sp, #4]
 8012f2c:	462a      	mov	r2, r5
 8012f2e:	f7fe fb9f 	bl	8011670 <__lshift>
 8012f32:	1b7f      	subs	r7, r7, r5
 8012f34:	4604      	mov	r4, r0
 8012f36:	f100 0a14 	add.w	sl, r0, #20
 8012f3a:	f04f 0900 	mov.w	r9, #0
 8012f3e:	e7b8      	b.n	8012eb2 <__gethex+0x1b6>
 8012f40:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012f44:	42bd      	cmp	r5, r7
 8012f46:	dd6f      	ble.n	8013028 <__gethex+0x32c>
 8012f48:	1bed      	subs	r5, r5, r7
 8012f4a:	42ae      	cmp	r6, r5
 8012f4c:	dc34      	bgt.n	8012fb8 <__gethex+0x2bc>
 8012f4e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8012f52:	2b02      	cmp	r3, #2
 8012f54:	d022      	beq.n	8012f9c <__gethex+0x2a0>
 8012f56:	2b03      	cmp	r3, #3
 8012f58:	d024      	beq.n	8012fa4 <__gethex+0x2a8>
 8012f5a:	2b01      	cmp	r3, #1
 8012f5c:	d115      	bne.n	8012f8a <__gethex+0x28e>
 8012f5e:	42ae      	cmp	r6, r5
 8012f60:	d113      	bne.n	8012f8a <__gethex+0x28e>
 8012f62:	2e01      	cmp	r6, #1
 8012f64:	d10b      	bne.n	8012f7e <__gethex+0x282>
 8012f66:	9a02      	ldr	r2, [sp, #8]
 8012f68:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8012f6c:	6013      	str	r3, [r2, #0]
 8012f6e:	2301      	movs	r3, #1
 8012f70:	6123      	str	r3, [r4, #16]
 8012f72:	f8ca 3000 	str.w	r3, [sl]
 8012f76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012f78:	2562      	movs	r5, #98	@ 0x62
 8012f7a:	601c      	str	r4, [r3, #0]
 8012f7c:	e73a      	b.n	8012df4 <__gethex+0xf8>
 8012f7e:	1e71      	subs	r1, r6, #1
 8012f80:	4620      	mov	r0, r4
 8012f82:	f7fe fdae 	bl	8011ae2 <__any_on>
 8012f86:	2800      	cmp	r0, #0
 8012f88:	d1ed      	bne.n	8012f66 <__gethex+0x26a>
 8012f8a:	9801      	ldr	r0, [sp, #4]
 8012f8c:	4621      	mov	r1, r4
 8012f8e:	f7fe f95f 	bl	8011250 <_Bfree>
 8012f92:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8012f94:	2300      	movs	r3, #0
 8012f96:	6013      	str	r3, [r2, #0]
 8012f98:	2550      	movs	r5, #80	@ 0x50
 8012f9a:	e72b      	b.n	8012df4 <__gethex+0xf8>
 8012f9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012f9e:	2b00      	cmp	r3, #0
 8012fa0:	d1f3      	bne.n	8012f8a <__gethex+0x28e>
 8012fa2:	e7e0      	b.n	8012f66 <__gethex+0x26a>
 8012fa4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012fa6:	2b00      	cmp	r3, #0
 8012fa8:	d1dd      	bne.n	8012f66 <__gethex+0x26a>
 8012faa:	e7ee      	b.n	8012f8a <__gethex+0x28e>
 8012fac:	08019704 	.word	0x08019704
 8012fb0:	0801969a 	.word	0x0801969a
 8012fb4:	0801975b 	.word	0x0801975b
 8012fb8:	1e6f      	subs	r7, r5, #1
 8012fba:	f1b9 0f00 	cmp.w	r9, #0
 8012fbe:	d130      	bne.n	8013022 <__gethex+0x326>
 8012fc0:	b127      	cbz	r7, 8012fcc <__gethex+0x2d0>
 8012fc2:	4639      	mov	r1, r7
 8012fc4:	4620      	mov	r0, r4
 8012fc6:	f7fe fd8c 	bl	8011ae2 <__any_on>
 8012fca:	4681      	mov	r9, r0
 8012fcc:	117a      	asrs	r2, r7, #5
 8012fce:	2301      	movs	r3, #1
 8012fd0:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8012fd4:	f007 071f 	and.w	r7, r7, #31
 8012fd8:	40bb      	lsls	r3, r7
 8012fda:	4213      	tst	r3, r2
 8012fdc:	4629      	mov	r1, r5
 8012fde:	4620      	mov	r0, r4
 8012fe0:	bf18      	it	ne
 8012fe2:	f049 0902 	orrne.w	r9, r9, #2
 8012fe6:	f7ff fe21 	bl	8012c2c <rshift>
 8012fea:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8012fee:	1b76      	subs	r6, r6, r5
 8012ff0:	2502      	movs	r5, #2
 8012ff2:	f1b9 0f00 	cmp.w	r9, #0
 8012ff6:	d047      	beq.n	8013088 <__gethex+0x38c>
 8012ff8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8012ffc:	2b02      	cmp	r3, #2
 8012ffe:	d015      	beq.n	801302c <__gethex+0x330>
 8013000:	2b03      	cmp	r3, #3
 8013002:	d017      	beq.n	8013034 <__gethex+0x338>
 8013004:	2b01      	cmp	r3, #1
 8013006:	d109      	bne.n	801301c <__gethex+0x320>
 8013008:	f019 0f02 	tst.w	r9, #2
 801300c:	d006      	beq.n	801301c <__gethex+0x320>
 801300e:	f8da 3000 	ldr.w	r3, [sl]
 8013012:	ea49 0903 	orr.w	r9, r9, r3
 8013016:	f019 0f01 	tst.w	r9, #1
 801301a:	d10e      	bne.n	801303a <__gethex+0x33e>
 801301c:	f045 0510 	orr.w	r5, r5, #16
 8013020:	e032      	b.n	8013088 <__gethex+0x38c>
 8013022:	f04f 0901 	mov.w	r9, #1
 8013026:	e7d1      	b.n	8012fcc <__gethex+0x2d0>
 8013028:	2501      	movs	r5, #1
 801302a:	e7e2      	b.n	8012ff2 <__gethex+0x2f6>
 801302c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801302e:	f1c3 0301 	rsb	r3, r3, #1
 8013032:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013034:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013036:	2b00      	cmp	r3, #0
 8013038:	d0f0      	beq.n	801301c <__gethex+0x320>
 801303a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 801303e:	f104 0314 	add.w	r3, r4, #20
 8013042:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8013046:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 801304a:	f04f 0c00 	mov.w	ip, #0
 801304e:	4618      	mov	r0, r3
 8013050:	f853 2b04 	ldr.w	r2, [r3], #4
 8013054:	f1b2 3fff 	cmp.w	r2, #4294967295
 8013058:	d01b      	beq.n	8013092 <__gethex+0x396>
 801305a:	3201      	adds	r2, #1
 801305c:	6002      	str	r2, [r0, #0]
 801305e:	2d02      	cmp	r5, #2
 8013060:	f104 0314 	add.w	r3, r4, #20
 8013064:	d13c      	bne.n	80130e0 <__gethex+0x3e4>
 8013066:	f8d8 2000 	ldr.w	r2, [r8]
 801306a:	3a01      	subs	r2, #1
 801306c:	42b2      	cmp	r2, r6
 801306e:	d109      	bne.n	8013084 <__gethex+0x388>
 8013070:	1171      	asrs	r1, r6, #5
 8013072:	2201      	movs	r2, #1
 8013074:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8013078:	f006 061f 	and.w	r6, r6, #31
 801307c:	fa02 f606 	lsl.w	r6, r2, r6
 8013080:	421e      	tst	r6, r3
 8013082:	d13a      	bne.n	80130fa <__gethex+0x3fe>
 8013084:	f045 0520 	orr.w	r5, r5, #32
 8013088:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801308a:	601c      	str	r4, [r3, #0]
 801308c:	9b02      	ldr	r3, [sp, #8]
 801308e:	601f      	str	r7, [r3, #0]
 8013090:	e6b0      	b.n	8012df4 <__gethex+0xf8>
 8013092:	4299      	cmp	r1, r3
 8013094:	f843 cc04 	str.w	ip, [r3, #-4]
 8013098:	d8d9      	bhi.n	801304e <__gethex+0x352>
 801309a:	68a3      	ldr	r3, [r4, #8]
 801309c:	459b      	cmp	fp, r3
 801309e:	db17      	blt.n	80130d0 <__gethex+0x3d4>
 80130a0:	6861      	ldr	r1, [r4, #4]
 80130a2:	9801      	ldr	r0, [sp, #4]
 80130a4:	3101      	adds	r1, #1
 80130a6:	f7fe f893 	bl	80111d0 <_Balloc>
 80130aa:	4681      	mov	r9, r0
 80130ac:	b918      	cbnz	r0, 80130b6 <__gethex+0x3ba>
 80130ae:	4b1a      	ldr	r3, [pc, #104]	@ (8013118 <__gethex+0x41c>)
 80130b0:	4602      	mov	r2, r0
 80130b2:	2184      	movs	r1, #132	@ 0x84
 80130b4:	e6c5      	b.n	8012e42 <__gethex+0x146>
 80130b6:	6922      	ldr	r2, [r4, #16]
 80130b8:	3202      	adds	r2, #2
 80130ba:	f104 010c 	add.w	r1, r4, #12
 80130be:	0092      	lsls	r2, r2, #2
 80130c0:	300c      	adds	r0, #12
 80130c2:	f7fd f918 	bl	80102f6 <memcpy>
 80130c6:	4621      	mov	r1, r4
 80130c8:	9801      	ldr	r0, [sp, #4]
 80130ca:	f7fe f8c1 	bl	8011250 <_Bfree>
 80130ce:	464c      	mov	r4, r9
 80130d0:	6923      	ldr	r3, [r4, #16]
 80130d2:	1c5a      	adds	r2, r3, #1
 80130d4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80130d8:	6122      	str	r2, [r4, #16]
 80130da:	2201      	movs	r2, #1
 80130dc:	615a      	str	r2, [r3, #20]
 80130de:	e7be      	b.n	801305e <__gethex+0x362>
 80130e0:	6922      	ldr	r2, [r4, #16]
 80130e2:	455a      	cmp	r2, fp
 80130e4:	dd0b      	ble.n	80130fe <__gethex+0x402>
 80130e6:	2101      	movs	r1, #1
 80130e8:	4620      	mov	r0, r4
 80130ea:	f7ff fd9f 	bl	8012c2c <rshift>
 80130ee:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80130f2:	3701      	adds	r7, #1
 80130f4:	42bb      	cmp	r3, r7
 80130f6:	f6ff aee0 	blt.w	8012eba <__gethex+0x1be>
 80130fa:	2501      	movs	r5, #1
 80130fc:	e7c2      	b.n	8013084 <__gethex+0x388>
 80130fe:	f016 061f 	ands.w	r6, r6, #31
 8013102:	d0fa      	beq.n	80130fa <__gethex+0x3fe>
 8013104:	4453      	add	r3, sl
 8013106:	f1c6 0620 	rsb	r6, r6, #32
 801310a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 801310e:	f7fe f951 	bl	80113b4 <__hi0bits>
 8013112:	42b0      	cmp	r0, r6
 8013114:	dbe7      	blt.n	80130e6 <__gethex+0x3ea>
 8013116:	e7f0      	b.n	80130fa <__gethex+0x3fe>
 8013118:	0801969a 	.word	0x0801969a

0801311c <L_shift>:
 801311c:	f1c2 0208 	rsb	r2, r2, #8
 8013120:	0092      	lsls	r2, r2, #2
 8013122:	b570      	push	{r4, r5, r6, lr}
 8013124:	f1c2 0620 	rsb	r6, r2, #32
 8013128:	6843      	ldr	r3, [r0, #4]
 801312a:	6804      	ldr	r4, [r0, #0]
 801312c:	fa03 f506 	lsl.w	r5, r3, r6
 8013130:	432c      	orrs	r4, r5
 8013132:	40d3      	lsrs	r3, r2
 8013134:	6004      	str	r4, [r0, #0]
 8013136:	f840 3f04 	str.w	r3, [r0, #4]!
 801313a:	4288      	cmp	r0, r1
 801313c:	d3f4      	bcc.n	8013128 <L_shift+0xc>
 801313e:	bd70      	pop	{r4, r5, r6, pc}

08013140 <__match>:
 8013140:	b530      	push	{r4, r5, lr}
 8013142:	6803      	ldr	r3, [r0, #0]
 8013144:	3301      	adds	r3, #1
 8013146:	f811 4b01 	ldrb.w	r4, [r1], #1
 801314a:	b914      	cbnz	r4, 8013152 <__match+0x12>
 801314c:	6003      	str	r3, [r0, #0]
 801314e:	2001      	movs	r0, #1
 8013150:	bd30      	pop	{r4, r5, pc}
 8013152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013156:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 801315a:	2d19      	cmp	r5, #25
 801315c:	bf98      	it	ls
 801315e:	3220      	addls	r2, #32
 8013160:	42a2      	cmp	r2, r4
 8013162:	d0f0      	beq.n	8013146 <__match+0x6>
 8013164:	2000      	movs	r0, #0
 8013166:	e7f3      	b.n	8013150 <__match+0x10>

08013168 <__hexnan>:
 8013168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801316c:	680b      	ldr	r3, [r1, #0]
 801316e:	6801      	ldr	r1, [r0, #0]
 8013170:	115e      	asrs	r6, r3, #5
 8013172:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013176:	f013 031f 	ands.w	r3, r3, #31
 801317a:	b087      	sub	sp, #28
 801317c:	bf18      	it	ne
 801317e:	3604      	addne	r6, #4
 8013180:	2500      	movs	r5, #0
 8013182:	1f37      	subs	r7, r6, #4
 8013184:	4682      	mov	sl, r0
 8013186:	4690      	mov	r8, r2
 8013188:	9301      	str	r3, [sp, #4]
 801318a:	f846 5c04 	str.w	r5, [r6, #-4]
 801318e:	46b9      	mov	r9, r7
 8013190:	463c      	mov	r4, r7
 8013192:	9502      	str	r5, [sp, #8]
 8013194:	46ab      	mov	fp, r5
 8013196:	784a      	ldrb	r2, [r1, #1]
 8013198:	1c4b      	adds	r3, r1, #1
 801319a:	9303      	str	r3, [sp, #12]
 801319c:	b342      	cbz	r2, 80131f0 <__hexnan+0x88>
 801319e:	4610      	mov	r0, r2
 80131a0:	9105      	str	r1, [sp, #20]
 80131a2:	9204      	str	r2, [sp, #16]
 80131a4:	f7ff fd94 	bl	8012cd0 <__hexdig_fun>
 80131a8:	2800      	cmp	r0, #0
 80131aa:	d151      	bne.n	8013250 <__hexnan+0xe8>
 80131ac:	9a04      	ldr	r2, [sp, #16]
 80131ae:	9905      	ldr	r1, [sp, #20]
 80131b0:	2a20      	cmp	r2, #32
 80131b2:	d818      	bhi.n	80131e6 <__hexnan+0x7e>
 80131b4:	9b02      	ldr	r3, [sp, #8]
 80131b6:	459b      	cmp	fp, r3
 80131b8:	dd13      	ble.n	80131e2 <__hexnan+0x7a>
 80131ba:	454c      	cmp	r4, r9
 80131bc:	d206      	bcs.n	80131cc <__hexnan+0x64>
 80131be:	2d07      	cmp	r5, #7
 80131c0:	dc04      	bgt.n	80131cc <__hexnan+0x64>
 80131c2:	462a      	mov	r2, r5
 80131c4:	4649      	mov	r1, r9
 80131c6:	4620      	mov	r0, r4
 80131c8:	f7ff ffa8 	bl	801311c <L_shift>
 80131cc:	4544      	cmp	r4, r8
 80131ce:	d952      	bls.n	8013276 <__hexnan+0x10e>
 80131d0:	2300      	movs	r3, #0
 80131d2:	f1a4 0904 	sub.w	r9, r4, #4
 80131d6:	f844 3c04 	str.w	r3, [r4, #-4]
 80131da:	f8cd b008 	str.w	fp, [sp, #8]
 80131de:	464c      	mov	r4, r9
 80131e0:	461d      	mov	r5, r3
 80131e2:	9903      	ldr	r1, [sp, #12]
 80131e4:	e7d7      	b.n	8013196 <__hexnan+0x2e>
 80131e6:	2a29      	cmp	r2, #41	@ 0x29
 80131e8:	d157      	bne.n	801329a <__hexnan+0x132>
 80131ea:	3102      	adds	r1, #2
 80131ec:	f8ca 1000 	str.w	r1, [sl]
 80131f0:	f1bb 0f00 	cmp.w	fp, #0
 80131f4:	d051      	beq.n	801329a <__hexnan+0x132>
 80131f6:	454c      	cmp	r4, r9
 80131f8:	d206      	bcs.n	8013208 <__hexnan+0xa0>
 80131fa:	2d07      	cmp	r5, #7
 80131fc:	dc04      	bgt.n	8013208 <__hexnan+0xa0>
 80131fe:	462a      	mov	r2, r5
 8013200:	4649      	mov	r1, r9
 8013202:	4620      	mov	r0, r4
 8013204:	f7ff ff8a 	bl	801311c <L_shift>
 8013208:	4544      	cmp	r4, r8
 801320a:	d936      	bls.n	801327a <__hexnan+0x112>
 801320c:	f1a8 0204 	sub.w	r2, r8, #4
 8013210:	4623      	mov	r3, r4
 8013212:	f853 1b04 	ldr.w	r1, [r3], #4
 8013216:	f842 1f04 	str.w	r1, [r2, #4]!
 801321a:	429f      	cmp	r7, r3
 801321c:	d2f9      	bcs.n	8013212 <__hexnan+0xaa>
 801321e:	1b3b      	subs	r3, r7, r4
 8013220:	f023 0303 	bic.w	r3, r3, #3
 8013224:	3304      	adds	r3, #4
 8013226:	3401      	adds	r4, #1
 8013228:	3e03      	subs	r6, #3
 801322a:	42b4      	cmp	r4, r6
 801322c:	bf88      	it	hi
 801322e:	2304      	movhi	r3, #4
 8013230:	4443      	add	r3, r8
 8013232:	2200      	movs	r2, #0
 8013234:	f843 2b04 	str.w	r2, [r3], #4
 8013238:	429f      	cmp	r7, r3
 801323a:	d2fb      	bcs.n	8013234 <__hexnan+0xcc>
 801323c:	683b      	ldr	r3, [r7, #0]
 801323e:	b91b      	cbnz	r3, 8013248 <__hexnan+0xe0>
 8013240:	4547      	cmp	r7, r8
 8013242:	d128      	bne.n	8013296 <__hexnan+0x12e>
 8013244:	2301      	movs	r3, #1
 8013246:	603b      	str	r3, [r7, #0]
 8013248:	2005      	movs	r0, #5
 801324a:	b007      	add	sp, #28
 801324c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013250:	3501      	adds	r5, #1
 8013252:	2d08      	cmp	r5, #8
 8013254:	f10b 0b01 	add.w	fp, fp, #1
 8013258:	dd06      	ble.n	8013268 <__hexnan+0x100>
 801325a:	4544      	cmp	r4, r8
 801325c:	d9c1      	bls.n	80131e2 <__hexnan+0x7a>
 801325e:	2300      	movs	r3, #0
 8013260:	f844 3c04 	str.w	r3, [r4, #-4]
 8013264:	2501      	movs	r5, #1
 8013266:	3c04      	subs	r4, #4
 8013268:	6822      	ldr	r2, [r4, #0]
 801326a:	f000 000f 	and.w	r0, r0, #15
 801326e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8013272:	6020      	str	r0, [r4, #0]
 8013274:	e7b5      	b.n	80131e2 <__hexnan+0x7a>
 8013276:	2508      	movs	r5, #8
 8013278:	e7b3      	b.n	80131e2 <__hexnan+0x7a>
 801327a:	9b01      	ldr	r3, [sp, #4]
 801327c:	2b00      	cmp	r3, #0
 801327e:	d0dd      	beq.n	801323c <__hexnan+0xd4>
 8013280:	f1c3 0320 	rsb	r3, r3, #32
 8013284:	f04f 32ff 	mov.w	r2, #4294967295
 8013288:	40da      	lsrs	r2, r3
 801328a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 801328e:	4013      	ands	r3, r2
 8013290:	f846 3c04 	str.w	r3, [r6, #-4]
 8013294:	e7d2      	b.n	801323c <__hexnan+0xd4>
 8013296:	3f04      	subs	r7, #4
 8013298:	e7d0      	b.n	801323c <__hexnan+0xd4>
 801329a:	2004      	movs	r0, #4
 801329c:	e7d5      	b.n	801324a <__hexnan+0xe2>

0801329e <__ascii_mbtowc>:
 801329e:	b082      	sub	sp, #8
 80132a0:	b901      	cbnz	r1, 80132a4 <__ascii_mbtowc+0x6>
 80132a2:	a901      	add	r1, sp, #4
 80132a4:	b142      	cbz	r2, 80132b8 <__ascii_mbtowc+0x1a>
 80132a6:	b14b      	cbz	r3, 80132bc <__ascii_mbtowc+0x1e>
 80132a8:	7813      	ldrb	r3, [r2, #0]
 80132aa:	600b      	str	r3, [r1, #0]
 80132ac:	7812      	ldrb	r2, [r2, #0]
 80132ae:	1e10      	subs	r0, r2, #0
 80132b0:	bf18      	it	ne
 80132b2:	2001      	movne	r0, #1
 80132b4:	b002      	add	sp, #8
 80132b6:	4770      	bx	lr
 80132b8:	4610      	mov	r0, r2
 80132ba:	e7fb      	b.n	80132b4 <__ascii_mbtowc+0x16>
 80132bc:	f06f 0001 	mvn.w	r0, #1
 80132c0:	e7f8      	b.n	80132b4 <__ascii_mbtowc+0x16>

080132c2 <_realloc_r>:
 80132c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132c6:	4607      	mov	r7, r0
 80132c8:	4614      	mov	r4, r2
 80132ca:	460d      	mov	r5, r1
 80132cc:	b921      	cbnz	r1, 80132d8 <_realloc_r+0x16>
 80132ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80132d2:	4611      	mov	r1, r2
 80132d4:	f7fd bef0 	b.w	80110b8 <_malloc_r>
 80132d8:	b92a      	cbnz	r2, 80132e6 <_realloc_r+0x24>
 80132da:	f7fd fe79 	bl	8010fd0 <_free_r>
 80132de:	4625      	mov	r5, r4
 80132e0:	4628      	mov	r0, r5
 80132e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132e6:	f000 f840 	bl	801336a <_malloc_usable_size_r>
 80132ea:	4284      	cmp	r4, r0
 80132ec:	4606      	mov	r6, r0
 80132ee:	d802      	bhi.n	80132f6 <_realloc_r+0x34>
 80132f0:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80132f4:	d8f4      	bhi.n	80132e0 <_realloc_r+0x1e>
 80132f6:	4621      	mov	r1, r4
 80132f8:	4638      	mov	r0, r7
 80132fa:	f7fd fedd 	bl	80110b8 <_malloc_r>
 80132fe:	4680      	mov	r8, r0
 8013300:	b908      	cbnz	r0, 8013306 <_realloc_r+0x44>
 8013302:	4645      	mov	r5, r8
 8013304:	e7ec      	b.n	80132e0 <_realloc_r+0x1e>
 8013306:	42b4      	cmp	r4, r6
 8013308:	4622      	mov	r2, r4
 801330a:	4629      	mov	r1, r5
 801330c:	bf28      	it	cs
 801330e:	4632      	movcs	r2, r6
 8013310:	f7fc fff1 	bl	80102f6 <memcpy>
 8013314:	4629      	mov	r1, r5
 8013316:	4638      	mov	r0, r7
 8013318:	f7fd fe5a 	bl	8010fd0 <_free_r>
 801331c:	e7f1      	b.n	8013302 <_realloc_r+0x40>

0801331e <__ascii_wctomb>:
 801331e:	4603      	mov	r3, r0
 8013320:	4608      	mov	r0, r1
 8013322:	b141      	cbz	r1, 8013336 <__ascii_wctomb+0x18>
 8013324:	2aff      	cmp	r2, #255	@ 0xff
 8013326:	d904      	bls.n	8013332 <__ascii_wctomb+0x14>
 8013328:	228a      	movs	r2, #138	@ 0x8a
 801332a:	601a      	str	r2, [r3, #0]
 801332c:	f04f 30ff 	mov.w	r0, #4294967295
 8013330:	4770      	bx	lr
 8013332:	700a      	strb	r2, [r1, #0]
 8013334:	2001      	movs	r0, #1
 8013336:	4770      	bx	lr

08013338 <fiprintf>:
 8013338:	b40e      	push	{r1, r2, r3}
 801333a:	b503      	push	{r0, r1, lr}
 801333c:	4601      	mov	r1, r0
 801333e:	ab03      	add	r3, sp, #12
 8013340:	4805      	ldr	r0, [pc, #20]	@ (8013358 <fiprintf+0x20>)
 8013342:	f853 2b04 	ldr.w	r2, [r3], #4
 8013346:	6800      	ldr	r0, [r0, #0]
 8013348:	9301      	str	r3, [sp, #4]
 801334a:	f000 f83f 	bl	80133cc <_vfiprintf_r>
 801334e:	b002      	add	sp, #8
 8013350:	f85d eb04 	ldr.w	lr, [sp], #4
 8013354:	b003      	add	sp, #12
 8013356:	4770      	bx	lr
 8013358:	20000140 	.word	0x20000140

0801335c <abort>:
 801335c:	b508      	push	{r3, lr}
 801335e:	2006      	movs	r0, #6
 8013360:	f000 fa08 	bl	8013774 <raise>
 8013364:	2001      	movs	r0, #1
 8013366:	f7f1 fc41 	bl	8004bec <_exit>

0801336a <_malloc_usable_size_r>:
 801336a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801336e:	1f18      	subs	r0, r3, #4
 8013370:	2b00      	cmp	r3, #0
 8013372:	bfbc      	itt	lt
 8013374:	580b      	ldrlt	r3, [r1, r0]
 8013376:	18c0      	addlt	r0, r0, r3
 8013378:	4770      	bx	lr

0801337a <__sfputc_r>:
 801337a:	6893      	ldr	r3, [r2, #8]
 801337c:	3b01      	subs	r3, #1
 801337e:	2b00      	cmp	r3, #0
 8013380:	b410      	push	{r4}
 8013382:	6093      	str	r3, [r2, #8]
 8013384:	da08      	bge.n	8013398 <__sfputc_r+0x1e>
 8013386:	6994      	ldr	r4, [r2, #24]
 8013388:	42a3      	cmp	r3, r4
 801338a:	db01      	blt.n	8013390 <__sfputc_r+0x16>
 801338c:	290a      	cmp	r1, #10
 801338e:	d103      	bne.n	8013398 <__sfputc_r+0x1e>
 8013390:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013394:	f000 b932 	b.w	80135fc <__swbuf_r>
 8013398:	6813      	ldr	r3, [r2, #0]
 801339a:	1c58      	adds	r0, r3, #1
 801339c:	6010      	str	r0, [r2, #0]
 801339e:	7019      	strb	r1, [r3, #0]
 80133a0:	4608      	mov	r0, r1
 80133a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80133a6:	4770      	bx	lr

080133a8 <__sfputs_r>:
 80133a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80133aa:	4606      	mov	r6, r0
 80133ac:	460f      	mov	r7, r1
 80133ae:	4614      	mov	r4, r2
 80133b0:	18d5      	adds	r5, r2, r3
 80133b2:	42ac      	cmp	r4, r5
 80133b4:	d101      	bne.n	80133ba <__sfputs_r+0x12>
 80133b6:	2000      	movs	r0, #0
 80133b8:	e007      	b.n	80133ca <__sfputs_r+0x22>
 80133ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 80133be:	463a      	mov	r2, r7
 80133c0:	4630      	mov	r0, r6
 80133c2:	f7ff ffda 	bl	801337a <__sfputc_r>
 80133c6:	1c43      	adds	r3, r0, #1
 80133c8:	d1f3      	bne.n	80133b2 <__sfputs_r+0xa>
 80133ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080133cc <_vfiprintf_r>:
 80133cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133d0:	460d      	mov	r5, r1
 80133d2:	b09d      	sub	sp, #116	@ 0x74
 80133d4:	4614      	mov	r4, r2
 80133d6:	4698      	mov	r8, r3
 80133d8:	4606      	mov	r6, r0
 80133da:	b118      	cbz	r0, 80133e4 <_vfiprintf_r+0x18>
 80133dc:	6a03      	ldr	r3, [r0, #32]
 80133de:	b90b      	cbnz	r3, 80133e4 <_vfiprintf_r+0x18>
 80133e0:	f7fc fe38 	bl	8010054 <__sinit>
 80133e4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80133e6:	07d9      	lsls	r1, r3, #31
 80133e8:	d405      	bmi.n	80133f6 <_vfiprintf_r+0x2a>
 80133ea:	89ab      	ldrh	r3, [r5, #12]
 80133ec:	059a      	lsls	r2, r3, #22
 80133ee:	d402      	bmi.n	80133f6 <_vfiprintf_r+0x2a>
 80133f0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80133f2:	f7fc ff7e 	bl	80102f2 <__retarget_lock_acquire_recursive>
 80133f6:	89ab      	ldrh	r3, [r5, #12]
 80133f8:	071b      	lsls	r3, r3, #28
 80133fa:	d501      	bpl.n	8013400 <_vfiprintf_r+0x34>
 80133fc:	692b      	ldr	r3, [r5, #16]
 80133fe:	b99b      	cbnz	r3, 8013428 <_vfiprintf_r+0x5c>
 8013400:	4629      	mov	r1, r5
 8013402:	4630      	mov	r0, r6
 8013404:	f000 f938 	bl	8013678 <__swsetup_r>
 8013408:	b170      	cbz	r0, 8013428 <_vfiprintf_r+0x5c>
 801340a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801340c:	07dc      	lsls	r4, r3, #31
 801340e:	d504      	bpl.n	801341a <_vfiprintf_r+0x4e>
 8013410:	f04f 30ff 	mov.w	r0, #4294967295
 8013414:	b01d      	add	sp, #116	@ 0x74
 8013416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801341a:	89ab      	ldrh	r3, [r5, #12]
 801341c:	0598      	lsls	r0, r3, #22
 801341e:	d4f7      	bmi.n	8013410 <_vfiprintf_r+0x44>
 8013420:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013422:	f7fc ff67 	bl	80102f4 <__retarget_lock_release_recursive>
 8013426:	e7f3      	b.n	8013410 <_vfiprintf_r+0x44>
 8013428:	2300      	movs	r3, #0
 801342a:	9309      	str	r3, [sp, #36]	@ 0x24
 801342c:	2320      	movs	r3, #32
 801342e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8013432:	f8cd 800c 	str.w	r8, [sp, #12]
 8013436:	2330      	movs	r3, #48	@ 0x30
 8013438:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80135e8 <_vfiprintf_r+0x21c>
 801343c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8013440:	f04f 0901 	mov.w	r9, #1
 8013444:	4623      	mov	r3, r4
 8013446:	469a      	mov	sl, r3
 8013448:	f813 2b01 	ldrb.w	r2, [r3], #1
 801344c:	b10a      	cbz	r2, 8013452 <_vfiprintf_r+0x86>
 801344e:	2a25      	cmp	r2, #37	@ 0x25
 8013450:	d1f9      	bne.n	8013446 <_vfiprintf_r+0x7a>
 8013452:	ebba 0b04 	subs.w	fp, sl, r4
 8013456:	d00b      	beq.n	8013470 <_vfiprintf_r+0xa4>
 8013458:	465b      	mov	r3, fp
 801345a:	4622      	mov	r2, r4
 801345c:	4629      	mov	r1, r5
 801345e:	4630      	mov	r0, r6
 8013460:	f7ff ffa2 	bl	80133a8 <__sfputs_r>
 8013464:	3001      	adds	r0, #1
 8013466:	f000 80a7 	beq.w	80135b8 <_vfiprintf_r+0x1ec>
 801346a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801346c:	445a      	add	r2, fp
 801346e:	9209      	str	r2, [sp, #36]	@ 0x24
 8013470:	f89a 3000 	ldrb.w	r3, [sl]
 8013474:	2b00      	cmp	r3, #0
 8013476:	f000 809f 	beq.w	80135b8 <_vfiprintf_r+0x1ec>
 801347a:	2300      	movs	r3, #0
 801347c:	f04f 32ff 	mov.w	r2, #4294967295
 8013480:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8013484:	f10a 0a01 	add.w	sl, sl, #1
 8013488:	9304      	str	r3, [sp, #16]
 801348a:	9307      	str	r3, [sp, #28]
 801348c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8013490:	931a      	str	r3, [sp, #104]	@ 0x68
 8013492:	4654      	mov	r4, sl
 8013494:	2205      	movs	r2, #5
 8013496:	f814 1b01 	ldrb.w	r1, [r4], #1
 801349a:	4853      	ldr	r0, [pc, #332]	@ (80135e8 <_vfiprintf_r+0x21c>)
 801349c:	f7ec fe70 	bl	8000180 <memchr>
 80134a0:	9a04      	ldr	r2, [sp, #16]
 80134a2:	b9d8      	cbnz	r0, 80134dc <_vfiprintf_r+0x110>
 80134a4:	06d1      	lsls	r1, r2, #27
 80134a6:	bf44      	itt	mi
 80134a8:	2320      	movmi	r3, #32
 80134aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80134ae:	0713      	lsls	r3, r2, #28
 80134b0:	bf44      	itt	mi
 80134b2:	232b      	movmi	r3, #43	@ 0x2b
 80134b4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80134b8:	f89a 3000 	ldrb.w	r3, [sl]
 80134bc:	2b2a      	cmp	r3, #42	@ 0x2a
 80134be:	d015      	beq.n	80134ec <_vfiprintf_r+0x120>
 80134c0:	9a07      	ldr	r2, [sp, #28]
 80134c2:	4654      	mov	r4, sl
 80134c4:	2000      	movs	r0, #0
 80134c6:	f04f 0c0a 	mov.w	ip, #10
 80134ca:	4621      	mov	r1, r4
 80134cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80134d0:	3b30      	subs	r3, #48	@ 0x30
 80134d2:	2b09      	cmp	r3, #9
 80134d4:	d94b      	bls.n	801356e <_vfiprintf_r+0x1a2>
 80134d6:	b1b0      	cbz	r0, 8013506 <_vfiprintf_r+0x13a>
 80134d8:	9207      	str	r2, [sp, #28]
 80134da:	e014      	b.n	8013506 <_vfiprintf_r+0x13a>
 80134dc:	eba0 0308 	sub.w	r3, r0, r8
 80134e0:	fa09 f303 	lsl.w	r3, r9, r3
 80134e4:	4313      	orrs	r3, r2
 80134e6:	9304      	str	r3, [sp, #16]
 80134e8:	46a2      	mov	sl, r4
 80134ea:	e7d2      	b.n	8013492 <_vfiprintf_r+0xc6>
 80134ec:	9b03      	ldr	r3, [sp, #12]
 80134ee:	1d19      	adds	r1, r3, #4
 80134f0:	681b      	ldr	r3, [r3, #0]
 80134f2:	9103      	str	r1, [sp, #12]
 80134f4:	2b00      	cmp	r3, #0
 80134f6:	bfbb      	ittet	lt
 80134f8:	425b      	neglt	r3, r3
 80134fa:	f042 0202 	orrlt.w	r2, r2, #2
 80134fe:	9307      	strge	r3, [sp, #28]
 8013500:	9307      	strlt	r3, [sp, #28]
 8013502:	bfb8      	it	lt
 8013504:	9204      	strlt	r2, [sp, #16]
 8013506:	7823      	ldrb	r3, [r4, #0]
 8013508:	2b2e      	cmp	r3, #46	@ 0x2e
 801350a:	d10a      	bne.n	8013522 <_vfiprintf_r+0x156>
 801350c:	7863      	ldrb	r3, [r4, #1]
 801350e:	2b2a      	cmp	r3, #42	@ 0x2a
 8013510:	d132      	bne.n	8013578 <_vfiprintf_r+0x1ac>
 8013512:	9b03      	ldr	r3, [sp, #12]
 8013514:	1d1a      	adds	r2, r3, #4
 8013516:	681b      	ldr	r3, [r3, #0]
 8013518:	9203      	str	r2, [sp, #12]
 801351a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801351e:	3402      	adds	r4, #2
 8013520:	9305      	str	r3, [sp, #20]
 8013522:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80135f8 <_vfiprintf_r+0x22c>
 8013526:	7821      	ldrb	r1, [r4, #0]
 8013528:	2203      	movs	r2, #3
 801352a:	4650      	mov	r0, sl
 801352c:	f7ec fe28 	bl	8000180 <memchr>
 8013530:	b138      	cbz	r0, 8013542 <_vfiprintf_r+0x176>
 8013532:	9b04      	ldr	r3, [sp, #16]
 8013534:	eba0 000a 	sub.w	r0, r0, sl
 8013538:	2240      	movs	r2, #64	@ 0x40
 801353a:	4082      	lsls	r2, r0
 801353c:	4313      	orrs	r3, r2
 801353e:	3401      	adds	r4, #1
 8013540:	9304      	str	r3, [sp, #16]
 8013542:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013546:	4829      	ldr	r0, [pc, #164]	@ (80135ec <_vfiprintf_r+0x220>)
 8013548:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801354c:	2206      	movs	r2, #6
 801354e:	f7ec fe17 	bl	8000180 <memchr>
 8013552:	2800      	cmp	r0, #0
 8013554:	d03f      	beq.n	80135d6 <_vfiprintf_r+0x20a>
 8013556:	4b26      	ldr	r3, [pc, #152]	@ (80135f0 <_vfiprintf_r+0x224>)
 8013558:	bb1b      	cbnz	r3, 80135a2 <_vfiprintf_r+0x1d6>
 801355a:	9b03      	ldr	r3, [sp, #12]
 801355c:	3307      	adds	r3, #7
 801355e:	f023 0307 	bic.w	r3, r3, #7
 8013562:	3308      	adds	r3, #8
 8013564:	9303      	str	r3, [sp, #12]
 8013566:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013568:	443b      	add	r3, r7
 801356a:	9309      	str	r3, [sp, #36]	@ 0x24
 801356c:	e76a      	b.n	8013444 <_vfiprintf_r+0x78>
 801356e:	fb0c 3202 	mla	r2, ip, r2, r3
 8013572:	460c      	mov	r4, r1
 8013574:	2001      	movs	r0, #1
 8013576:	e7a8      	b.n	80134ca <_vfiprintf_r+0xfe>
 8013578:	2300      	movs	r3, #0
 801357a:	3401      	adds	r4, #1
 801357c:	9305      	str	r3, [sp, #20]
 801357e:	4619      	mov	r1, r3
 8013580:	f04f 0c0a 	mov.w	ip, #10
 8013584:	4620      	mov	r0, r4
 8013586:	f810 2b01 	ldrb.w	r2, [r0], #1
 801358a:	3a30      	subs	r2, #48	@ 0x30
 801358c:	2a09      	cmp	r2, #9
 801358e:	d903      	bls.n	8013598 <_vfiprintf_r+0x1cc>
 8013590:	2b00      	cmp	r3, #0
 8013592:	d0c6      	beq.n	8013522 <_vfiprintf_r+0x156>
 8013594:	9105      	str	r1, [sp, #20]
 8013596:	e7c4      	b.n	8013522 <_vfiprintf_r+0x156>
 8013598:	fb0c 2101 	mla	r1, ip, r1, r2
 801359c:	4604      	mov	r4, r0
 801359e:	2301      	movs	r3, #1
 80135a0:	e7f0      	b.n	8013584 <_vfiprintf_r+0x1b8>
 80135a2:	ab03      	add	r3, sp, #12
 80135a4:	9300      	str	r3, [sp, #0]
 80135a6:	462a      	mov	r2, r5
 80135a8:	4b12      	ldr	r3, [pc, #72]	@ (80135f4 <_vfiprintf_r+0x228>)
 80135aa:	a904      	add	r1, sp, #16
 80135ac:	4630      	mov	r0, r6
 80135ae:	f7fb ff01 	bl	800f3b4 <_printf_float>
 80135b2:	4607      	mov	r7, r0
 80135b4:	1c78      	adds	r0, r7, #1
 80135b6:	d1d6      	bne.n	8013566 <_vfiprintf_r+0x19a>
 80135b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80135ba:	07d9      	lsls	r1, r3, #31
 80135bc:	d405      	bmi.n	80135ca <_vfiprintf_r+0x1fe>
 80135be:	89ab      	ldrh	r3, [r5, #12]
 80135c0:	059a      	lsls	r2, r3, #22
 80135c2:	d402      	bmi.n	80135ca <_vfiprintf_r+0x1fe>
 80135c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80135c6:	f7fc fe95 	bl	80102f4 <__retarget_lock_release_recursive>
 80135ca:	89ab      	ldrh	r3, [r5, #12]
 80135cc:	065b      	lsls	r3, r3, #25
 80135ce:	f53f af1f 	bmi.w	8013410 <_vfiprintf_r+0x44>
 80135d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80135d4:	e71e      	b.n	8013414 <_vfiprintf_r+0x48>
 80135d6:	ab03      	add	r3, sp, #12
 80135d8:	9300      	str	r3, [sp, #0]
 80135da:	462a      	mov	r2, r5
 80135dc:	4b05      	ldr	r3, [pc, #20]	@ (80135f4 <_vfiprintf_r+0x228>)
 80135de:	a904      	add	r1, sp, #16
 80135e0:	4630      	mov	r0, r6
 80135e2:	f7fc f97f 	bl	800f8e4 <_printf_i>
 80135e6:	e7e4      	b.n	80135b2 <_vfiprintf_r+0x1e6>
 80135e8:	08019706 	.word	0x08019706
 80135ec:	08019710 	.word	0x08019710
 80135f0:	0800f3b5 	.word	0x0800f3b5
 80135f4:	080133a9 	.word	0x080133a9
 80135f8:	0801970c 	.word	0x0801970c

080135fc <__swbuf_r>:
 80135fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80135fe:	460e      	mov	r6, r1
 8013600:	4614      	mov	r4, r2
 8013602:	4605      	mov	r5, r0
 8013604:	b118      	cbz	r0, 801360e <__swbuf_r+0x12>
 8013606:	6a03      	ldr	r3, [r0, #32]
 8013608:	b90b      	cbnz	r3, 801360e <__swbuf_r+0x12>
 801360a:	f7fc fd23 	bl	8010054 <__sinit>
 801360e:	69a3      	ldr	r3, [r4, #24]
 8013610:	60a3      	str	r3, [r4, #8]
 8013612:	89a3      	ldrh	r3, [r4, #12]
 8013614:	071a      	lsls	r2, r3, #28
 8013616:	d501      	bpl.n	801361c <__swbuf_r+0x20>
 8013618:	6923      	ldr	r3, [r4, #16]
 801361a:	b943      	cbnz	r3, 801362e <__swbuf_r+0x32>
 801361c:	4621      	mov	r1, r4
 801361e:	4628      	mov	r0, r5
 8013620:	f000 f82a 	bl	8013678 <__swsetup_r>
 8013624:	b118      	cbz	r0, 801362e <__swbuf_r+0x32>
 8013626:	f04f 37ff 	mov.w	r7, #4294967295
 801362a:	4638      	mov	r0, r7
 801362c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801362e:	6823      	ldr	r3, [r4, #0]
 8013630:	6922      	ldr	r2, [r4, #16]
 8013632:	1a98      	subs	r0, r3, r2
 8013634:	6963      	ldr	r3, [r4, #20]
 8013636:	b2f6      	uxtb	r6, r6
 8013638:	4283      	cmp	r3, r0
 801363a:	4637      	mov	r7, r6
 801363c:	dc05      	bgt.n	801364a <__swbuf_r+0x4e>
 801363e:	4621      	mov	r1, r4
 8013640:	4628      	mov	r0, r5
 8013642:	f7ff fa53 	bl	8012aec <_fflush_r>
 8013646:	2800      	cmp	r0, #0
 8013648:	d1ed      	bne.n	8013626 <__swbuf_r+0x2a>
 801364a:	68a3      	ldr	r3, [r4, #8]
 801364c:	3b01      	subs	r3, #1
 801364e:	60a3      	str	r3, [r4, #8]
 8013650:	6823      	ldr	r3, [r4, #0]
 8013652:	1c5a      	adds	r2, r3, #1
 8013654:	6022      	str	r2, [r4, #0]
 8013656:	701e      	strb	r6, [r3, #0]
 8013658:	6962      	ldr	r2, [r4, #20]
 801365a:	1c43      	adds	r3, r0, #1
 801365c:	429a      	cmp	r2, r3
 801365e:	d004      	beq.n	801366a <__swbuf_r+0x6e>
 8013660:	89a3      	ldrh	r3, [r4, #12]
 8013662:	07db      	lsls	r3, r3, #31
 8013664:	d5e1      	bpl.n	801362a <__swbuf_r+0x2e>
 8013666:	2e0a      	cmp	r6, #10
 8013668:	d1df      	bne.n	801362a <__swbuf_r+0x2e>
 801366a:	4621      	mov	r1, r4
 801366c:	4628      	mov	r0, r5
 801366e:	f7ff fa3d 	bl	8012aec <_fflush_r>
 8013672:	2800      	cmp	r0, #0
 8013674:	d0d9      	beq.n	801362a <__swbuf_r+0x2e>
 8013676:	e7d6      	b.n	8013626 <__swbuf_r+0x2a>

08013678 <__swsetup_r>:
 8013678:	b538      	push	{r3, r4, r5, lr}
 801367a:	4b29      	ldr	r3, [pc, #164]	@ (8013720 <__swsetup_r+0xa8>)
 801367c:	4605      	mov	r5, r0
 801367e:	6818      	ldr	r0, [r3, #0]
 8013680:	460c      	mov	r4, r1
 8013682:	b118      	cbz	r0, 801368c <__swsetup_r+0x14>
 8013684:	6a03      	ldr	r3, [r0, #32]
 8013686:	b90b      	cbnz	r3, 801368c <__swsetup_r+0x14>
 8013688:	f7fc fce4 	bl	8010054 <__sinit>
 801368c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013690:	0719      	lsls	r1, r3, #28
 8013692:	d422      	bmi.n	80136da <__swsetup_r+0x62>
 8013694:	06da      	lsls	r2, r3, #27
 8013696:	d407      	bmi.n	80136a8 <__swsetup_r+0x30>
 8013698:	2209      	movs	r2, #9
 801369a:	602a      	str	r2, [r5, #0]
 801369c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80136a0:	81a3      	strh	r3, [r4, #12]
 80136a2:	f04f 30ff 	mov.w	r0, #4294967295
 80136a6:	e033      	b.n	8013710 <__swsetup_r+0x98>
 80136a8:	0758      	lsls	r0, r3, #29
 80136aa:	d512      	bpl.n	80136d2 <__swsetup_r+0x5a>
 80136ac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80136ae:	b141      	cbz	r1, 80136c2 <__swsetup_r+0x4a>
 80136b0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80136b4:	4299      	cmp	r1, r3
 80136b6:	d002      	beq.n	80136be <__swsetup_r+0x46>
 80136b8:	4628      	mov	r0, r5
 80136ba:	f7fd fc89 	bl	8010fd0 <_free_r>
 80136be:	2300      	movs	r3, #0
 80136c0:	6363      	str	r3, [r4, #52]	@ 0x34
 80136c2:	89a3      	ldrh	r3, [r4, #12]
 80136c4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80136c8:	81a3      	strh	r3, [r4, #12]
 80136ca:	2300      	movs	r3, #0
 80136cc:	6063      	str	r3, [r4, #4]
 80136ce:	6923      	ldr	r3, [r4, #16]
 80136d0:	6023      	str	r3, [r4, #0]
 80136d2:	89a3      	ldrh	r3, [r4, #12]
 80136d4:	f043 0308 	orr.w	r3, r3, #8
 80136d8:	81a3      	strh	r3, [r4, #12]
 80136da:	6923      	ldr	r3, [r4, #16]
 80136dc:	b94b      	cbnz	r3, 80136f2 <__swsetup_r+0x7a>
 80136de:	89a3      	ldrh	r3, [r4, #12]
 80136e0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80136e4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80136e8:	d003      	beq.n	80136f2 <__swsetup_r+0x7a>
 80136ea:	4621      	mov	r1, r4
 80136ec:	4628      	mov	r0, r5
 80136ee:	f000 f883 	bl	80137f8 <__smakebuf_r>
 80136f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80136f6:	f013 0201 	ands.w	r2, r3, #1
 80136fa:	d00a      	beq.n	8013712 <__swsetup_r+0x9a>
 80136fc:	2200      	movs	r2, #0
 80136fe:	60a2      	str	r2, [r4, #8]
 8013700:	6962      	ldr	r2, [r4, #20]
 8013702:	4252      	negs	r2, r2
 8013704:	61a2      	str	r2, [r4, #24]
 8013706:	6922      	ldr	r2, [r4, #16]
 8013708:	b942      	cbnz	r2, 801371c <__swsetup_r+0xa4>
 801370a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801370e:	d1c5      	bne.n	801369c <__swsetup_r+0x24>
 8013710:	bd38      	pop	{r3, r4, r5, pc}
 8013712:	0799      	lsls	r1, r3, #30
 8013714:	bf58      	it	pl
 8013716:	6962      	ldrpl	r2, [r4, #20]
 8013718:	60a2      	str	r2, [r4, #8]
 801371a:	e7f4      	b.n	8013706 <__swsetup_r+0x8e>
 801371c:	2000      	movs	r0, #0
 801371e:	e7f7      	b.n	8013710 <__swsetup_r+0x98>
 8013720:	20000140 	.word	0x20000140

08013724 <_raise_r>:
 8013724:	291f      	cmp	r1, #31
 8013726:	b538      	push	{r3, r4, r5, lr}
 8013728:	4605      	mov	r5, r0
 801372a:	460c      	mov	r4, r1
 801372c:	d904      	bls.n	8013738 <_raise_r+0x14>
 801372e:	2316      	movs	r3, #22
 8013730:	6003      	str	r3, [r0, #0]
 8013732:	f04f 30ff 	mov.w	r0, #4294967295
 8013736:	bd38      	pop	{r3, r4, r5, pc}
 8013738:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801373a:	b112      	cbz	r2, 8013742 <_raise_r+0x1e>
 801373c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8013740:	b94b      	cbnz	r3, 8013756 <_raise_r+0x32>
 8013742:	4628      	mov	r0, r5
 8013744:	f000 f830 	bl	80137a8 <_getpid_r>
 8013748:	4622      	mov	r2, r4
 801374a:	4601      	mov	r1, r0
 801374c:	4628      	mov	r0, r5
 801374e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013752:	f000 b817 	b.w	8013784 <_kill_r>
 8013756:	2b01      	cmp	r3, #1
 8013758:	d00a      	beq.n	8013770 <_raise_r+0x4c>
 801375a:	1c59      	adds	r1, r3, #1
 801375c:	d103      	bne.n	8013766 <_raise_r+0x42>
 801375e:	2316      	movs	r3, #22
 8013760:	6003      	str	r3, [r0, #0]
 8013762:	2001      	movs	r0, #1
 8013764:	e7e7      	b.n	8013736 <_raise_r+0x12>
 8013766:	2100      	movs	r1, #0
 8013768:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801376c:	4620      	mov	r0, r4
 801376e:	4798      	blx	r3
 8013770:	2000      	movs	r0, #0
 8013772:	e7e0      	b.n	8013736 <_raise_r+0x12>

08013774 <raise>:
 8013774:	4b02      	ldr	r3, [pc, #8]	@ (8013780 <raise+0xc>)
 8013776:	4601      	mov	r1, r0
 8013778:	6818      	ldr	r0, [r3, #0]
 801377a:	f7ff bfd3 	b.w	8013724 <_raise_r>
 801377e:	bf00      	nop
 8013780:	20000140 	.word	0x20000140

08013784 <_kill_r>:
 8013784:	b538      	push	{r3, r4, r5, lr}
 8013786:	4d07      	ldr	r5, [pc, #28]	@ (80137a4 <_kill_r+0x20>)
 8013788:	2300      	movs	r3, #0
 801378a:	4604      	mov	r4, r0
 801378c:	4608      	mov	r0, r1
 801378e:	4611      	mov	r1, r2
 8013790:	602b      	str	r3, [r5, #0]
 8013792:	f7f1 fa23 	bl	8004bdc <_kill>
 8013796:	1c43      	adds	r3, r0, #1
 8013798:	d102      	bne.n	80137a0 <_kill_r+0x1c>
 801379a:	682b      	ldr	r3, [r5, #0]
 801379c:	b103      	cbz	r3, 80137a0 <_kill_r+0x1c>
 801379e:	6023      	str	r3, [r4, #0]
 80137a0:	bd38      	pop	{r3, r4, r5, pc}
 80137a2:	bf00      	nop
 80137a4:	20005c24 	.word	0x20005c24

080137a8 <_getpid_r>:
 80137a8:	f7f1 ba16 	b.w	8004bd8 <_getpid>

080137ac <__swhatbuf_r>:
 80137ac:	b570      	push	{r4, r5, r6, lr}
 80137ae:	460c      	mov	r4, r1
 80137b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80137b4:	2900      	cmp	r1, #0
 80137b6:	b096      	sub	sp, #88	@ 0x58
 80137b8:	4615      	mov	r5, r2
 80137ba:	461e      	mov	r6, r3
 80137bc:	da0d      	bge.n	80137da <__swhatbuf_r+0x2e>
 80137be:	89a3      	ldrh	r3, [r4, #12]
 80137c0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80137c4:	f04f 0100 	mov.w	r1, #0
 80137c8:	bf14      	ite	ne
 80137ca:	2340      	movne	r3, #64	@ 0x40
 80137cc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80137d0:	2000      	movs	r0, #0
 80137d2:	6031      	str	r1, [r6, #0]
 80137d4:	602b      	str	r3, [r5, #0]
 80137d6:	b016      	add	sp, #88	@ 0x58
 80137d8:	bd70      	pop	{r4, r5, r6, pc}
 80137da:	466a      	mov	r2, sp
 80137dc:	f000 f848 	bl	8013870 <_fstat_r>
 80137e0:	2800      	cmp	r0, #0
 80137e2:	dbec      	blt.n	80137be <__swhatbuf_r+0x12>
 80137e4:	9901      	ldr	r1, [sp, #4]
 80137e6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80137ea:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80137ee:	4259      	negs	r1, r3
 80137f0:	4159      	adcs	r1, r3
 80137f2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80137f6:	e7eb      	b.n	80137d0 <__swhatbuf_r+0x24>

080137f8 <__smakebuf_r>:
 80137f8:	898b      	ldrh	r3, [r1, #12]
 80137fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80137fc:	079d      	lsls	r5, r3, #30
 80137fe:	4606      	mov	r6, r0
 8013800:	460c      	mov	r4, r1
 8013802:	d507      	bpl.n	8013814 <__smakebuf_r+0x1c>
 8013804:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8013808:	6023      	str	r3, [r4, #0]
 801380a:	6123      	str	r3, [r4, #16]
 801380c:	2301      	movs	r3, #1
 801380e:	6163      	str	r3, [r4, #20]
 8013810:	b003      	add	sp, #12
 8013812:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013814:	ab01      	add	r3, sp, #4
 8013816:	466a      	mov	r2, sp
 8013818:	f7ff ffc8 	bl	80137ac <__swhatbuf_r>
 801381c:	9f00      	ldr	r7, [sp, #0]
 801381e:	4605      	mov	r5, r0
 8013820:	4639      	mov	r1, r7
 8013822:	4630      	mov	r0, r6
 8013824:	f7fd fc48 	bl	80110b8 <_malloc_r>
 8013828:	b948      	cbnz	r0, 801383e <__smakebuf_r+0x46>
 801382a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801382e:	059a      	lsls	r2, r3, #22
 8013830:	d4ee      	bmi.n	8013810 <__smakebuf_r+0x18>
 8013832:	f023 0303 	bic.w	r3, r3, #3
 8013836:	f043 0302 	orr.w	r3, r3, #2
 801383a:	81a3      	strh	r3, [r4, #12]
 801383c:	e7e2      	b.n	8013804 <__smakebuf_r+0xc>
 801383e:	89a3      	ldrh	r3, [r4, #12]
 8013840:	6020      	str	r0, [r4, #0]
 8013842:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8013846:	81a3      	strh	r3, [r4, #12]
 8013848:	9b01      	ldr	r3, [sp, #4]
 801384a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801384e:	b15b      	cbz	r3, 8013868 <__smakebuf_r+0x70>
 8013850:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8013854:	4630      	mov	r0, r6
 8013856:	f000 f81d 	bl	8013894 <_isatty_r>
 801385a:	b128      	cbz	r0, 8013868 <__smakebuf_r+0x70>
 801385c:	89a3      	ldrh	r3, [r4, #12]
 801385e:	f023 0303 	bic.w	r3, r3, #3
 8013862:	f043 0301 	orr.w	r3, r3, #1
 8013866:	81a3      	strh	r3, [r4, #12]
 8013868:	89a3      	ldrh	r3, [r4, #12]
 801386a:	431d      	orrs	r5, r3
 801386c:	81a5      	strh	r5, [r4, #12]
 801386e:	e7cf      	b.n	8013810 <__smakebuf_r+0x18>

08013870 <_fstat_r>:
 8013870:	b538      	push	{r3, r4, r5, lr}
 8013872:	4d07      	ldr	r5, [pc, #28]	@ (8013890 <_fstat_r+0x20>)
 8013874:	2300      	movs	r3, #0
 8013876:	4604      	mov	r4, r0
 8013878:	4608      	mov	r0, r1
 801387a:	4611      	mov	r1, r2
 801387c:	602b      	str	r3, [r5, #0]
 801387e:	f7f1 f9db 	bl	8004c38 <_fstat>
 8013882:	1c43      	adds	r3, r0, #1
 8013884:	d102      	bne.n	801388c <_fstat_r+0x1c>
 8013886:	682b      	ldr	r3, [r5, #0]
 8013888:	b103      	cbz	r3, 801388c <_fstat_r+0x1c>
 801388a:	6023      	str	r3, [r4, #0]
 801388c:	bd38      	pop	{r3, r4, r5, pc}
 801388e:	bf00      	nop
 8013890:	20005c24 	.word	0x20005c24

08013894 <_isatty_r>:
 8013894:	b538      	push	{r3, r4, r5, lr}
 8013896:	4d06      	ldr	r5, [pc, #24]	@ (80138b0 <_isatty_r+0x1c>)
 8013898:	2300      	movs	r3, #0
 801389a:	4604      	mov	r4, r0
 801389c:	4608      	mov	r0, r1
 801389e:	602b      	str	r3, [r5, #0]
 80138a0:	f7f1 f9d0 	bl	8004c44 <_isatty>
 80138a4:	1c43      	adds	r3, r0, #1
 80138a6:	d102      	bne.n	80138ae <_isatty_r+0x1a>
 80138a8:	682b      	ldr	r3, [r5, #0]
 80138aa:	b103      	cbz	r3, 80138ae <_isatty_r+0x1a>
 80138ac:	6023      	str	r3, [r4, #0]
 80138ae:	bd38      	pop	{r3, r4, r5, pc}
 80138b0:	20005c24 	.word	0x20005c24
 80138b4:	00000000 	.word	0x00000000

080138b8 <log>:
 80138b8:	b538      	push	{r3, r4, r5, lr}
 80138ba:	ed2d 8b02 	vpush	{d8}
 80138be:	ec55 4b10 	vmov	r4, r5, d0
 80138c2:	f000 fb49 	bl	8013f58 <__ieee754_log>
 80138c6:	4622      	mov	r2, r4
 80138c8:	462b      	mov	r3, r5
 80138ca:	4620      	mov	r0, r4
 80138cc:	4629      	mov	r1, r5
 80138ce:	eeb0 8a40 	vmov.f32	s16, s0
 80138d2:	eef0 8a60 	vmov.f32	s17, s1
 80138d6:	f7ed f901 	bl	8000adc <__aeabi_dcmpun>
 80138da:	b998      	cbnz	r0, 8013904 <log+0x4c>
 80138dc:	2200      	movs	r2, #0
 80138de:	2300      	movs	r3, #0
 80138e0:	4620      	mov	r0, r4
 80138e2:	4629      	mov	r1, r5
 80138e4:	f7ed f8f0 	bl	8000ac8 <__aeabi_dcmpgt>
 80138e8:	b960      	cbnz	r0, 8013904 <log+0x4c>
 80138ea:	2200      	movs	r2, #0
 80138ec:	2300      	movs	r3, #0
 80138ee:	4620      	mov	r0, r4
 80138f0:	4629      	mov	r1, r5
 80138f2:	f7ed f8c1 	bl	8000a78 <__aeabi_dcmpeq>
 80138f6:	b160      	cbz	r0, 8013912 <log+0x5a>
 80138f8:	f7fc fcd0 	bl	801029c <__errno>
 80138fc:	ed9f 8b0a 	vldr	d8, [pc, #40]	@ 8013928 <log+0x70>
 8013900:	2322      	movs	r3, #34	@ 0x22
 8013902:	6003      	str	r3, [r0, #0]
 8013904:	eeb0 0a48 	vmov.f32	s0, s16
 8013908:	eef0 0a68 	vmov.f32	s1, s17
 801390c:	ecbd 8b02 	vpop	{d8}
 8013910:	bd38      	pop	{r3, r4, r5, pc}
 8013912:	f7fc fcc3 	bl	801029c <__errno>
 8013916:	ecbd 8b02 	vpop	{d8}
 801391a:	2321      	movs	r3, #33	@ 0x21
 801391c:	6003      	str	r3, [r0, #0]
 801391e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013922:	4803      	ldr	r0, [pc, #12]	@ (8013930 <log+0x78>)
 8013924:	f7ff b948 	b.w	8012bb8 <nan>
 8013928:	00000000 	.word	0x00000000
 801392c:	fff00000 	.word	0xfff00000
 8013930:	0801975a 	.word	0x0801975a
 8013934:	00000000 	.word	0x00000000

08013938 <cos>:
 8013938:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801393a:	ec53 2b10 	vmov	r2, r3, d0
 801393e:	4826      	ldr	r0, [pc, #152]	@ (80139d8 <cos+0xa0>)
 8013940:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8013944:	4281      	cmp	r1, r0
 8013946:	d806      	bhi.n	8013956 <cos+0x1e>
 8013948:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 80139d0 <cos+0x98>
 801394c:	b005      	add	sp, #20
 801394e:	f85d eb04 	ldr.w	lr, [sp], #4
 8013952:	f000 b97d 	b.w	8013c50 <__kernel_cos>
 8013956:	4821      	ldr	r0, [pc, #132]	@ (80139dc <cos+0xa4>)
 8013958:	4281      	cmp	r1, r0
 801395a:	d908      	bls.n	801396e <cos+0x36>
 801395c:	4610      	mov	r0, r2
 801395e:	4619      	mov	r1, r3
 8013960:	f7ec fc6a 	bl	8000238 <__aeabi_dsub>
 8013964:	ec41 0b10 	vmov	d0, r0, r1
 8013968:	b005      	add	sp, #20
 801396a:	f85d fb04 	ldr.w	pc, [sp], #4
 801396e:	4668      	mov	r0, sp
 8013970:	f000 fcaa 	bl	80142c8 <__ieee754_rem_pio2>
 8013974:	f000 0003 	and.w	r0, r0, #3
 8013978:	2801      	cmp	r0, #1
 801397a:	d00b      	beq.n	8013994 <cos+0x5c>
 801397c:	2802      	cmp	r0, #2
 801397e:	d015      	beq.n	80139ac <cos+0x74>
 8013980:	b9d8      	cbnz	r0, 80139ba <cos+0x82>
 8013982:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013986:	ed9d 0b00 	vldr	d0, [sp]
 801398a:	f000 f961 	bl	8013c50 <__kernel_cos>
 801398e:	ec51 0b10 	vmov	r0, r1, d0
 8013992:	e7e7      	b.n	8013964 <cos+0x2c>
 8013994:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013998:	ed9d 0b00 	vldr	d0, [sp]
 801399c:	f000 fa20 	bl	8013de0 <__kernel_sin>
 80139a0:	ec53 2b10 	vmov	r2, r3, d0
 80139a4:	4610      	mov	r0, r2
 80139a6:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 80139aa:	e7db      	b.n	8013964 <cos+0x2c>
 80139ac:	ed9d 1b02 	vldr	d1, [sp, #8]
 80139b0:	ed9d 0b00 	vldr	d0, [sp]
 80139b4:	f000 f94c 	bl	8013c50 <__kernel_cos>
 80139b8:	e7f2      	b.n	80139a0 <cos+0x68>
 80139ba:	ed9d 1b02 	vldr	d1, [sp, #8]
 80139be:	ed9d 0b00 	vldr	d0, [sp]
 80139c2:	2001      	movs	r0, #1
 80139c4:	f000 fa0c 	bl	8013de0 <__kernel_sin>
 80139c8:	e7e1      	b.n	801398e <cos+0x56>
 80139ca:	bf00      	nop
 80139cc:	f3af 8000 	nop.w
	...
 80139d8:	3fe921fb 	.word	0x3fe921fb
 80139dc:	7fefffff 	.word	0x7fefffff

080139e0 <sin>:
 80139e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80139e2:	ec53 2b10 	vmov	r2, r3, d0
 80139e6:	4826      	ldr	r0, [pc, #152]	@ (8013a80 <sin+0xa0>)
 80139e8:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80139ec:	4281      	cmp	r1, r0
 80139ee:	d807      	bhi.n	8013a00 <sin+0x20>
 80139f0:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 8013a78 <sin+0x98>
 80139f4:	2000      	movs	r0, #0
 80139f6:	b005      	add	sp, #20
 80139f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80139fc:	f000 b9f0 	b.w	8013de0 <__kernel_sin>
 8013a00:	4820      	ldr	r0, [pc, #128]	@ (8013a84 <sin+0xa4>)
 8013a02:	4281      	cmp	r1, r0
 8013a04:	d908      	bls.n	8013a18 <sin+0x38>
 8013a06:	4610      	mov	r0, r2
 8013a08:	4619      	mov	r1, r3
 8013a0a:	f7ec fc15 	bl	8000238 <__aeabi_dsub>
 8013a0e:	ec41 0b10 	vmov	d0, r0, r1
 8013a12:	b005      	add	sp, #20
 8013a14:	f85d fb04 	ldr.w	pc, [sp], #4
 8013a18:	4668      	mov	r0, sp
 8013a1a:	f000 fc55 	bl	80142c8 <__ieee754_rem_pio2>
 8013a1e:	f000 0003 	and.w	r0, r0, #3
 8013a22:	2801      	cmp	r0, #1
 8013a24:	d00c      	beq.n	8013a40 <sin+0x60>
 8013a26:	2802      	cmp	r0, #2
 8013a28:	d011      	beq.n	8013a4e <sin+0x6e>
 8013a2a:	b9e8      	cbnz	r0, 8013a68 <sin+0x88>
 8013a2c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013a30:	ed9d 0b00 	vldr	d0, [sp]
 8013a34:	2001      	movs	r0, #1
 8013a36:	f000 f9d3 	bl	8013de0 <__kernel_sin>
 8013a3a:	ec51 0b10 	vmov	r0, r1, d0
 8013a3e:	e7e6      	b.n	8013a0e <sin+0x2e>
 8013a40:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013a44:	ed9d 0b00 	vldr	d0, [sp]
 8013a48:	f000 f902 	bl	8013c50 <__kernel_cos>
 8013a4c:	e7f5      	b.n	8013a3a <sin+0x5a>
 8013a4e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013a52:	ed9d 0b00 	vldr	d0, [sp]
 8013a56:	2001      	movs	r0, #1
 8013a58:	f000 f9c2 	bl	8013de0 <__kernel_sin>
 8013a5c:	ec53 2b10 	vmov	r2, r3, d0
 8013a60:	4610      	mov	r0, r2
 8013a62:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8013a66:	e7d2      	b.n	8013a0e <sin+0x2e>
 8013a68:	ed9d 1b02 	vldr	d1, [sp, #8]
 8013a6c:	ed9d 0b00 	vldr	d0, [sp]
 8013a70:	f000 f8ee 	bl	8013c50 <__kernel_cos>
 8013a74:	e7f2      	b.n	8013a5c <sin+0x7c>
 8013a76:	bf00      	nop
	...
 8013a80:	3fe921fb 	.word	0x3fe921fb
 8013a84:	7fefffff 	.word	0x7fefffff

08013a88 <powf>:
 8013a88:	b508      	push	{r3, lr}
 8013a8a:	ed2d 8b04 	vpush	{d8-d9}
 8013a8e:	eeb0 8a60 	vmov.f32	s16, s1
 8013a92:	eeb0 9a40 	vmov.f32	s18, s0
 8013a96:	f000 fe4f 	bl	8014738 <__ieee754_powf>
 8013a9a:	eeb4 8a48 	vcmp.f32	s16, s16
 8013a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013aa2:	eef0 8a40 	vmov.f32	s17, s0
 8013aa6:	d63e      	bvs.n	8013b26 <powf+0x9e>
 8013aa8:	eeb5 9a40 	vcmp.f32	s18, #0.0
 8013aac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ab0:	d112      	bne.n	8013ad8 <powf+0x50>
 8013ab2:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8013ab6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013aba:	d039      	beq.n	8013b30 <powf+0xa8>
 8013abc:	eeb0 0a48 	vmov.f32	s0, s16
 8013ac0:	f000 f839 	bl	8013b36 <finitef>
 8013ac4:	b378      	cbz	r0, 8013b26 <powf+0x9e>
 8013ac6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013aca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ace:	d52a      	bpl.n	8013b26 <powf+0x9e>
 8013ad0:	f7fc fbe4 	bl	801029c <__errno>
 8013ad4:	2322      	movs	r3, #34	@ 0x22
 8013ad6:	e014      	b.n	8013b02 <powf+0x7a>
 8013ad8:	f000 f82d 	bl	8013b36 <finitef>
 8013adc:	b998      	cbnz	r0, 8013b06 <powf+0x7e>
 8013ade:	eeb0 0a49 	vmov.f32	s0, s18
 8013ae2:	f000 f828 	bl	8013b36 <finitef>
 8013ae6:	b170      	cbz	r0, 8013b06 <powf+0x7e>
 8013ae8:	eeb0 0a48 	vmov.f32	s0, s16
 8013aec:	f000 f823 	bl	8013b36 <finitef>
 8013af0:	b148      	cbz	r0, 8013b06 <powf+0x7e>
 8013af2:	eef4 8a68 	vcmp.f32	s17, s17
 8013af6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013afa:	d7e9      	bvc.n	8013ad0 <powf+0x48>
 8013afc:	f7fc fbce 	bl	801029c <__errno>
 8013b00:	2321      	movs	r3, #33	@ 0x21
 8013b02:	6003      	str	r3, [r0, #0]
 8013b04:	e00f      	b.n	8013b26 <powf+0x9e>
 8013b06:	eef5 8a40 	vcmp.f32	s17, #0.0
 8013b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b0e:	d10a      	bne.n	8013b26 <powf+0x9e>
 8013b10:	eeb0 0a49 	vmov.f32	s0, s18
 8013b14:	f000 f80f 	bl	8013b36 <finitef>
 8013b18:	b128      	cbz	r0, 8013b26 <powf+0x9e>
 8013b1a:	eeb0 0a48 	vmov.f32	s0, s16
 8013b1e:	f000 f80a 	bl	8013b36 <finitef>
 8013b22:	2800      	cmp	r0, #0
 8013b24:	d1d4      	bne.n	8013ad0 <powf+0x48>
 8013b26:	eeb0 0a68 	vmov.f32	s0, s17
 8013b2a:	ecbd 8b04 	vpop	{d8-d9}
 8013b2e:	bd08      	pop	{r3, pc}
 8013b30:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 8013b34:	e7f7      	b.n	8013b26 <powf+0x9e>

08013b36 <finitef>:
 8013b36:	ee10 3a10 	vmov	r3, s0
 8013b3a:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 8013b3e:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 8013b42:	bfac      	ite	ge
 8013b44:	2000      	movge	r0, #0
 8013b46:	2001      	movlt	r0, #1
 8013b48:	4770      	bx	lr

08013b4a <cosl>:
 8013b4a:	f7ff bef5 	b.w	8013938 <cos>

08013b4e <sinl>:
 8013b4e:	f7ff bf47 	b.w	80139e0 <sin>

08013b52 <acosl>:
 8013b52:	f000 bdb5 	b.w	80146c0 <acos>
	...

08013b58 <floor>:
 8013b58:	ec51 0b10 	vmov	r0, r1, d0
 8013b5c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8013b60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b64:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8013b68:	2e13      	cmp	r6, #19
 8013b6a:	460c      	mov	r4, r1
 8013b6c:	4605      	mov	r5, r0
 8013b6e:	4680      	mov	r8, r0
 8013b70:	dc34      	bgt.n	8013bdc <floor+0x84>
 8013b72:	2e00      	cmp	r6, #0
 8013b74:	da17      	bge.n	8013ba6 <floor+0x4e>
 8013b76:	a332      	add	r3, pc, #200	@ (adr r3, 8013c40 <floor+0xe8>)
 8013b78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b7c:	f7ec fb5e 	bl	800023c <__adddf3>
 8013b80:	2200      	movs	r2, #0
 8013b82:	2300      	movs	r3, #0
 8013b84:	f7ec ffa0 	bl	8000ac8 <__aeabi_dcmpgt>
 8013b88:	b150      	cbz	r0, 8013ba0 <floor+0x48>
 8013b8a:	2c00      	cmp	r4, #0
 8013b8c:	da55      	bge.n	8013c3a <floor+0xe2>
 8013b8e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8013b92:	432c      	orrs	r4, r5
 8013b94:	2500      	movs	r5, #0
 8013b96:	42ac      	cmp	r4, r5
 8013b98:	4c2b      	ldr	r4, [pc, #172]	@ (8013c48 <floor+0xf0>)
 8013b9a:	bf08      	it	eq
 8013b9c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8013ba0:	4621      	mov	r1, r4
 8013ba2:	4628      	mov	r0, r5
 8013ba4:	e023      	b.n	8013bee <floor+0x96>
 8013ba6:	4f29      	ldr	r7, [pc, #164]	@ (8013c4c <floor+0xf4>)
 8013ba8:	4137      	asrs	r7, r6
 8013baa:	ea01 0307 	and.w	r3, r1, r7
 8013bae:	4303      	orrs	r3, r0
 8013bb0:	d01d      	beq.n	8013bee <floor+0x96>
 8013bb2:	a323      	add	r3, pc, #140	@ (adr r3, 8013c40 <floor+0xe8>)
 8013bb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013bb8:	f7ec fb40 	bl	800023c <__adddf3>
 8013bbc:	2200      	movs	r2, #0
 8013bbe:	2300      	movs	r3, #0
 8013bc0:	f7ec ff82 	bl	8000ac8 <__aeabi_dcmpgt>
 8013bc4:	2800      	cmp	r0, #0
 8013bc6:	d0eb      	beq.n	8013ba0 <floor+0x48>
 8013bc8:	2c00      	cmp	r4, #0
 8013bca:	bfbe      	ittt	lt
 8013bcc:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8013bd0:	4133      	asrlt	r3, r6
 8013bd2:	18e4      	addlt	r4, r4, r3
 8013bd4:	ea24 0407 	bic.w	r4, r4, r7
 8013bd8:	2500      	movs	r5, #0
 8013bda:	e7e1      	b.n	8013ba0 <floor+0x48>
 8013bdc:	2e33      	cmp	r6, #51	@ 0x33
 8013bde:	dd0a      	ble.n	8013bf6 <floor+0x9e>
 8013be0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013be4:	d103      	bne.n	8013bee <floor+0x96>
 8013be6:	4602      	mov	r2, r0
 8013be8:	460b      	mov	r3, r1
 8013bea:	f7ec fb27 	bl	800023c <__adddf3>
 8013bee:	ec41 0b10 	vmov	d0, r0, r1
 8013bf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013bf6:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8013bfa:	f04f 37ff 	mov.w	r7, #4294967295
 8013bfe:	40df      	lsrs	r7, r3
 8013c00:	4207      	tst	r7, r0
 8013c02:	d0f4      	beq.n	8013bee <floor+0x96>
 8013c04:	a30e      	add	r3, pc, #56	@ (adr r3, 8013c40 <floor+0xe8>)
 8013c06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013c0a:	f7ec fb17 	bl	800023c <__adddf3>
 8013c0e:	2200      	movs	r2, #0
 8013c10:	2300      	movs	r3, #0
 8013c12:	f7ec ff59 	bl	8000ac8 <__aeabi_dcmpgt>
 8013c16:	2800      	cmp	r0, #0
 8013c18:	d0c2      	beq.n	8013ba0 <floor+0x48>
 8013c1a:	2c00      	cmp	r4, #0
 8013c1c:	da0a      	bge.n	8013c34 <floor+0xdc>
 8013c1e:	2e14      	cmp	r6, #20
 8013c20:	d101      	bne.n	8013c26 <floor+0xce>
 8013c22:	3401      	adds	r4, #1
 8013c24:	e006      	b.n	8013c34 <floor+0xdc>
 8013c26:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8013c2a:	2301      	movs	r3, #1
 8013c2c:	40b3      	lsls	r3, r6
 8013c2e:	441d      	add	r5, r3
 8013c30:	4545      	cmp	r5, r8
 8013c32:	d3f6      	bcc.n	8013c22 <floor+0xca>
 8013c34:	ea25 0507 	bic.w	r5, r5, r7
 8013c38:	e7b2      	b.n	8013ba0 <floor+0x48>
 8013c3a:	2500      	movs	r5, #0
 8013c3c:	462c      	mov	r4, r5
 8013c3e:	e7af      	b.n	8013ba0 <floor+0x48>
 8013c40:	8800759c 	.word	0x8800759c
 8013c44:	7e37e43c 	.word	0x7e37e43c
 8013c48:	bff00000 	.word	0xbff00000
 8013c4c:	000fffff 	.word	0x000fffff

08013c50 <__kernel_cos>:
 8013c50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c54:	ec57 6b10 	vmov	r6, r7, d0
 8013c58:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8013c5c:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 8013c60:	ed8d 1b00 	vstr	d1, [sp]
 8013c64:	d206      	bcs.n	8013c74 <__kernel_cos+0x24>
 8013c66:	4630      	mov	r0, r6
 8013c68:	4639      	mov	r1, r7
 8013c6a:	f7ec ff4d 	bl	8000b08 <__aeabi_d2iz>
 8013c6e:	2800      	cmp	r0, #0
 8013c70:	f000 8088 	beq.w	8013d84 <__kernel_cos+0x134>
 8013c74:	4632      	mov	r2, r6
 8013c76:	463b      	mov	r3, r7
 8013c78:	4630      	mov	r0, r6
 8013c7a:	4639      	mov	r1, r7
 8013c7c:	f7ec fc94 	bl	80005a8 <__aeabi_dmul>
 8013c80:	4b51      	ldr	r3, [pc, #324]	@ (8013dc8 <__kernel_cos+0x178>)
 8013c82:	2200      	movs	r2, #0
 8013c84:	4604      	mov	r4, r0
 8013c86:	460d      	mov	r5, r1
 8013c88:	f7ec fc8e 	bl	80005a8 <__aeabi_dmul>
 8013c8c:	a340      	add	r3, pc, #256	@ (adr r3, 8013d90 <__kernel_cos+0x140>)
 8013c8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013c92:	4682      	mov	sl, r0
 8013c94:	468b      	mov	fp, r1
 8013c96:	4620      	mov	r0, r4
 8013c98:	4629      	mov	r1, r5
 8013c9a:	f7ec fc85 	bl	80005a8 <__aeabi_dmul>
 8013c9e:	a33e      	add	r3, pc, #248	@ (adr r3, 8013d98 <__kernel_cos+0x148>)
 8013ca0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013ca4:	f7ec faca 	bl	800023c <__adddf3>
 8013ca8:	4622      	mov	r2, r4
 8013caa:	462b      	mov	r3, r5
 8013cac:	f7ec fc7c 	bl	80005a8 <__aeabi_dmul>
 8013cb0:	a33b      	add	r3, pc, #236	@ (adr r3, 8013da0 <__kernel_cos+0x150>)
 8013cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013cb6:	f7ec fabf 	bl	8000238 <__aeabi_dsub>
 8013cba:	4622      	mov	r2, r4
 8013cbc:	462b      	mov	r3, r5
 8013cbe:	f7ec fc73 	bl	80005a8 <__aeabi_dmul>
 8013cc2:	a339      	add	r3, pc, #228	@ (adr r3, 8013da8 <__kernel_cos+0x158>)
 8013cc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013cc8:	f7ec fab8 	bl	800023c <__adddf3>
 8013ccc:	4622      	mov	r2, r4
 8013cce:	462b      	mov	r3, r5
 8013cd0:	f7ec fc6a 	bl	80005a8 <__aeabi_dmul>
 8013cd4:	a336      	add	r3, pc, #216	@ (adr r3, 8013db0 <__kernel_cos+0x160>)
 8013cd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013cda:	f7ec faad 	bl	8000238 <__aeabi_dsub>
 8013cde:	4622      	mov	r2, r4
 8013ce0:	462b      	mov	r3, r5
 8013ce2:	f7ec fc61 	bl	80005a8 <__aeabi_dmul>
 8013ce6:	a334      	add	r3, pc, #208	@ (adr r3, 8013db8 <__kernel_cos+0x168>)
 8013ce8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013cec:	f7ec faa6 	bl	800023c <__adddf3>
 8013cf0:	4622      	mov	r2, r4
 8013cf2:	462b      	mov	r3, r5
 8013cf4:	f7ec fc58 	bl	80005a8 <__aeabi_dmul>
 8013cf8:	4622      	mov	r2, r4
 8013cfa:	462b      	mov	r3, r5
 8013cfc:	f7ec fc54 	bl	80005a8 <__aeabi_dmul>
 8013d00:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013d04:	4604      	mov	r4, r0
 8013d06:	460d      	mov	r5, r1
 8013d08:	4630      	mov	r0, r6
 8013d0a:	4639      	mov	r1, r7
 8013d0c:	f7ec fc4c 	bl	80005a8 <__aeabi_dmul>
 8013d10:	460b      	mov	r3, r1
 8013d12:	4602      	mov	r2, r0
 8013d14:	4629      	mov	r1, r5
 8013d16:	4620      	mov	r0, r4
 8013d18:	f7ec fa8e 	bl	8000238 <__aeabi_dsub>
 8013d1c:	4b2b      	ldr	r3, [pc, #172]	@ (8013dcc <__kernel_cos+0x17c>)
 8013d1e:	4598      	cmp	r8, r3
 8013d20:	4606      	mov	r6, r0
 8013d22:	460f      	mov	r7, r1
 8013d24:	d810      	bhi.n	8013d48 <__kernel_cos+0xf8>
 8013d26:	4602      	mov	r2, r0
 8013d28:	460b      	mov	r3, r1
 8013d2a:	4650      	mov	r0, sl
 8013d2c:	4659      	mov	r1, fp
 8013d2e:	f7ec fa83 	bl	8000238 <__aeabi_dsub>
 8013d32:	460b      	mov	r3, r1
 8013d34:	4926      	ldr	r1, [pc, #152]	@ (8013dd0 <__kernel_cos+0x180>)
 8013d36:	4602      	mov	r2, r0
 8013d38:	2000      	movs	r0, #0
 8013d3a:	f7ec fa7d 	bl	8000238 <__aeabi_dsub>
 8013d3e:	ec41 0b10 	vmov	d0, r0, r1
 8013d42:	b003      	add	sp, #12
 8013d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d48:	4b22      	ldr	r3, [pc, #136]	@ (8013dd4 <__kernel_cos+0x184>)
 8013d4a:	4921      	ldr	r1, [pc, #132]	@ (8013dd0 <__kernel_cos+0x180>)
 8013d4c:	4598      	cmp	r8, r3
 8013d4e:	bf8c      	ite	hi
 8013d50:	4d21      	ldrhi	r5, [pc, #132]	@ (8013dd8 <__kernel_cos+0x188>)
 8013d52:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 8013d56:	2400      	movs	r4, #0
 8013d58:	4622      	mov	r2, r4
 8013d5a:	462b      	mov	r3, r5
 8013d5c:	2000      	movs	r0, #0
 8013d5e:	f7ec fa6b 	bl	8000238 <__aeabi_dsub>
 8013d62:	4622      	mov	r2, r4
 8013d64:	4680      	mov	r8, r0
 8013d66:	4689      	mov	r9, r1
 8013d68:	462b      	mov	r3, r5
 8013d6a:	4650      	mov	r0, sl
 8013d6c:	4659      	mov	r1, fp
 8013d6e:	f7ec fa63 	bl	8000238 <__aeabi_dsub>
 8013d72:	4632      	mov	r2, r6
 8013d74:	463b      	mov	r3, r7
 8013d76:	f7ec fa5f 	bl	8000238 <__aeabi_dsub>
 8013d7a:	4602      	mov	r2, r0
 8013d7c:	460b      	mov	r3, r1
 8013d7e:	4640      	mov	r0, r8
 8013d80:	4649      	mov	r1, r9
 8013d82:	e7da      	b.n	8013d3a <__kernel_cos+0xea>
 8013d84:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 8013dc0 <__kernel_cos+0x170>
 8013d88:	e7db      	b.n	8013d42 <__kernel_cos+0xf2>
 8013d8a:	bf00      	nop
 8013d8c:	f3af 8000 	nop.w
 8013d90:	be8838d4 	.word	0xbe8838d4
 8013d94:	bda8fae9 	.word	0xbda8fae9
 8013d98:	bdb4b1c4 	.word	0xbdb4b1c4
 8013d9c:	3e21ee9e 	.word	0x3e21ee9e
 8013da0:	809c52ad 	.word	0x809c52ad
 8013da4:	3e927e4f 	.word	0x3e927e4f
 8013da8:	19cb1590 	.word	0x19cb1590
 8013dac:	3efa01a0 	.word	0x3efa01a0
 8013db0:	16c15177 	.word	0x16c15177
 8013db4:	3f56c16c 	.word	0x3f56c16c
 8013db8:	5555554c 	.word	0x5555554c
 8013dbc:	3fa55555 	.word	0x3fa55555
 8013dc0:	00000000 	.word	0x00000000
 8013dc4:	3ff00000 	.word	0x3ff00000
 8013dc8:	3fe00000 	.word	0x3fe00000
 8013dcc:	3fd33332 	.word	0x3fd33332
 8013dd0:	3ff00000 	.word	0x3ff00000
 8013dd4:	3fe90000 	.word	0x3fe90000
 8013dd8:	3fd20000 	.word	0x3fd20000
 8013ddc:	00000000 	.word	0x00000000

08013de0 <__kernel_sin>:
 8013de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013de4:	ec55 4b10 	vmov	r4, r5, d0
 8013de8:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8013dec:	b085      	sub	sp, #20
 8013dee:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 8013df2:	ed8d 1b02 	vstr	d1, [sp, #8]
 8013df6:	4680      	mov	r8, r0
 8013df8:	d205      	bcs.n	8013e06 <__kernel_sin+0x26>
 8013dfa:	4620      	mov	r0, r4
 8013dfc:	4629      	mov	r1, r5
 8013dfe:	f7ec fe83 	bl	8000b08 <__aeabi_d2iz>
 8013e02:	2800      	cmp	r0, #0
 8013e04:	d052      	beq.n	8013eac <__kernel_sin+0xcc>
 8013e06:	4622      	mov	r2, r4
 8013e08:	462b      	mov	r3, r5
 8013e0a:	4620      	mov	r0, r4
 8013e0c:	4629      	mov	r1, r5
 8013e0e:	f7ec fbcb 	bl	80005a8 <__aeabi_dmul>
 8013e12:	4682      	mov	sl, r0
 8013e14:	468b      	mov	fp, r1
 8013e16:	4602      	mov	r2, r0
 8013e18:	460b      	mov	r3, r1
 8013e1a:	4620      	mov	r0, r4
 8013e1c:	4629      	mov	r1, r5
 8013e1e:	f7ec fbc3 	bl	80005a8 <__aeabi_dmul>
 8013e22:	a342      	add	r3, pc, #264	@ (adr r3, 8013f2c <__kernel_sin+0x14c>)
 8013e24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e28:	e9cd 0100 	strd	r0, r1, [sp]
 8013e2c:	4650      	mov	r0, sl
 8013e2e:	4659      	mov	r1, fp
 8013e30:	f7ec fbba 	bl	80005a8 <__aeabi_dmul>
 8013e34:	a33f      	add	r3, pc, #252	@ (adr r3, 8013f34 <__kernel_sin+0x154>)
 8013e36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e3a:	f7ec f9fd 	bl	8000238 <__aeabi_dsub>
 8013e3e:	4652      	mov	r2, sl
 8013e40:	465b      	mov	r3, fp
 8013e42:	f7ec fbb1 	bl	80005a8 <__aeabi_dmul>
 8013e46:	a33d      	add	r3, pc, #244	@ (adr r3, 8013f3c <__kernel_sin+0x15c>)
 8013e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e4c:	f7ec f9f6 	bl	800023c <__adddf3>
 8013e50:	4652      	mov	r2, sl
 8013e52:	465b      	mov	r3, fp
 8013e54:	f7ec fba8 	bl	80005a8 <__aeabi_dmul>
 8013e58:	a33a      	add	r3, pc, #232	@ (adr r3, 8013f44 <__kernel_sin+0x164>)
 8013e5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e5e:	f7ec f9eb 	bl	8000238 <__aeabi_dsub>
 8013e62:	4652      	mov	r2, sl
 8013e64:	465b      	mov	r3, fp
 8013e66:	f7ec fb9f 	bl	80005a8 <__aeabi_dmul>
 8013e6a:	a338      	add	r3, pc, #224	@ (adr r3, 8013f4c <__kernel_sin+0x16c>)
 8013e6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e70:	f7ec f9e4 	bl	800023c <__adddf3>
 8013e74:	4606      	mov	r6, r0
 8013e76:	460f      	mov	r7, r1
 8013e78:	f1b8 0f00 	cmp.w	r8, #0
 8013e7c:	d11b      	bne.n	8013eb6 <__kernel_sin+0xd6>
 8013e7e:	4602      	mov	r2, r0
 8013e80:	460b      	mov	r3, r1
 8013e82:	4650      	mov	r0, sl
 8013e84:	4659      	mov	r1, fp
 8013e86:	f7ec fb8f 	bl	80005a8 <__aeabi_dmul>
 8013e8a:	a325      	add	r3, pc, #148	@ (adr r3, 8013f20 <__kernel_sin+0x140>)
 8013e8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013e90:	f7ec f9d2 	bl	8000238 <__aeabi_dsub>
 8013e94:	e9dd 2300 	ldrd	r2, r3, [sp]
 8013e98:	f7ec fb86 	bl	80005a8 <__aeabi_dmul>
 8013e9c:	4602      	mov	r2, r0
 8013e9e:	460b      	mov	r3, r1
 8013ea0:	4620      	mov	r0, r4
 8013ea2:	4629      	mov	r1, r5
 8013ea4:	f7ec f9ca 	bl	800023c <__adddf3>
 8013ea8:	4604      	mov	r4, r0
 8013eaa:	460d      	mov	r5, r1
 8013eac:	ec45 4b10 	vmov	d0, r4, r5
 8013eb0:	b005      	add	sp, #20
 8013eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013eb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013eba:	4b1b      	ldr	r3, [pc, #108]	@ (8013f28 <__kernel_sin+0x148>)
 8013ebc:	2200      	movs	r2, #0
 8013ebe:	f7ec fb73 	bl	80005a8 <__aeabi_dmul>
 8013ec2:	4632      	mov	r2, r6
 8013ec4:	4680      	mov	r8, r0
 8013ec6:	4689      	mov	r9, r1
 8013ec8:	463b      	mov	r3, r7
 8013eca:	e9dd 0100 	ldrd	r0, r1, [sp]
 8013ece:	f7ec fb6b 	bl	80005a8 <__aeabi_dmul>
 8013ed2:	4602      	mov	r2, r0
 8013ed4:	460b      	mov	r3, r1
 8013ed6:	4640      	mov	r0, r8
 8013ed8:	4649      	mov	r1, r9
 8013eda:	f7ec f9ad 	bl	8000238 <__aeabi_dsub>
 8013ede:	4652      	mov	r2, sl
 8013ee0:	465b      	mov	r3, fp
 8013ee2:	f7ec fb61 	bl	80005a8 <__aeabi_dmul>
 8013ee6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8013eea:	f7ec f9a5 	bl	8000238 <__aeabi_dsub>
 8013eee:	a30c      	add	r3, pc, #48	@ (adr r3, 8013f20 <__kernel_sin+0x140>)
 8013ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013ef4:	4606      	mov	r6, r0
 8013ef6:	460f      	mov	r7, r1
 8013ef8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8013efc:	f7ec fb54 	bl	80005a8 <__aeabi_dmul>
 8013f00:	4602      	mov	r2, r0
 8013f02:	460b      	mov	r3, r1
 8013f04:	4630      	mov	r0, r6
 8013f06:	4639      	mov	r1, r7
 8013f08:	f7ec f998 	bl	800023c <__adddf3>
 8013f0c:	4602      	mov	r2, r0
 8013f0e:	460b      	mov	r3, r1
 8013f10:	4620      	mov	r0, r4
 8013f12:	4629      	mov	r1, r5
 8013f14:	f7ec f990 	bl	8000238 <__aeabi_dsub>
 8013f18:	e7c6      	b.n	8013ea8 <__kernel_sin+0xc8>
 8013f1a:	bf00      	nop
 8013f1c:	f3af 8000 	nop.w
 8013f20:	55555549 	.word	0x55555549
 8013f24:	3fc55555 	.word	0x3fc55555
 8013f28:	3fe00000 	.word	0x3fe00000
 8013f2c:	5acfd57c 	.word	0x5acfd57c
 8013f30:	3de5d93a 	.word	0x3de5d93a
 8013f34:	8a2b9ceb 	.word	0x8a2b9ceb
 8013f38:	3e5ae5e6 	.word	0x3e5ae5e6
 8013f3c:	57b1fe7d 	.word	0x57b1fe7d
 8013f40:	3ec71de3 	.word	0x3ec71de3
 8013f44:	19c161d5 	.word	0x19c161d5
 8013f48:	3f2a01a0 	.word	0x3f2a01a0
 8013f4c:	1110f8a6 	.word	0x1110f8a6
 8013f50:	3f811111 	.word	0x3f811111
 8013f54:	00000000 	.word	0x00000000

08013f58 <__ieee754_log>:
 8013f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f5c:	ec51 0b10 	vmov	r0, r1, d0
 8013f60:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8013f64:	b087      	sub	sp, #28
 8013f66:	460d      	mov	r5, r1
 8013f68:	da26      	bge.n	8013fb8 <__ieee754_log+0x60>
 8013f6a:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8013f6e:	4303      	orrs	r3, r0
 8013f70:	4602      	mov	r2, r0
 8013f72:	d10a      	bne.n	8013f8a <__ieee754_log+0x32>
 8013f74:	49ce      	ldr	r1, [pc, #824]	@ (80142b0 <__ieee754_log+0x358>)
 8013f76:	2200      	movs	r2, #0
 8013f78:	2300      	movs	r3, #0
 8013f7a:	2000      	movs	r0, #0
 8013f7c:	f7ec fc3e 	bl	80007fc <__aeabi_ddiv>
 8013f80:	ec41 0b10 	vmov	d0, r0, r1
 8013f84:	b007      	add	sp, #28
 8013f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f8a:	2900      	cmp	r1, #0
 8013f8c:	da05      	bge.n	8013f9a <__ieee754_log+0x42>
 8013f8e:	460b      	mov	r3, r1
 8013f90:	f7ec f952 	bl	8000238 <__aeabi_dsub>
 8013f94:	2200      	movs	r2, #0
 8013f96:	2300      	movs	r3, #0
 8013f98:	e7f0      	b.n	8013f7c <__ieee754_log+0x24>
 8013f9a:	4bc6      	ldr	r3, [pc, #792]	@ (80142b4 <__ieee754_log+0x35c>)
 8013f9c:	2200      	movs	r2, #0
 8013f9e:	f7ec fb03 	bl	80005a8 <__aeabi_dmul>
 8013fa2:	f06f 0335 	mvn.w	r3, #53	@ 0x35
 8013fa6:	460d      	mov	r5, r1
 8013fa8:	4ac3      	ldr	r2, [pc, #780]	@ (80142b8 <__ieee754_log+0x360>)
 8013faa:	4295      	cmp	r5, r2
 8013fac:	dd06      	ble.n	8013fbc <__ieee754_log+0x64>
 8013fae:	4602      	mov	r2, r0
 8013fb0:	460b      	mov	r3, r1
 8013fb2:	f7ec f943 	bl	800023c <__adddf3>
 8013fb6:	e7e3      	b.n	8013f80 <__ieee754_log+0x28>
 8013fb8:	2300      	movs	r3, #0
 8013fba:	e7f5      	b.n	8013fa8 <__ieee754_log+0x50>
 8013fbc:	152c      	asrs	r4, r5, #20
 8013fbe:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 8013fc2:	f3c5 0513 	ubfx	r5, r5, #0, #20
 8013fc6:	441c      	add	r4, r3
 8013fc8:	f505 2315 	add.w	r3, r5, #610304	@ 0x95000
 8013fcc:	f603 7364 	addw	r3, r3, #3940	@ 0xf64
 8013fd0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8013fd4:	f083 527f 	eor.w	r2, r3, #1069547520	@ 0x3fc00000
 8013fd8:	f482 1240 	eor.w	r2, r2, #3145728	@ 0x300000
 8013fdc:	ea42 0105 	orr.w	r1, r2, r5
 8013fe0:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 8013fe4:	2200      	movs	r2, #0
 8013fe6:	4bb5      	ldr	r3, [pc, #724]	@ (80142bc <__ieee754_log+0x364>)
 8013fe8:	f7ec f926 	bl	8000238 <__aeabi_dsub>
 8013fec:	1cab      	adds	r3, r5, #2
 8013fee:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8013ff2:	2b02      	cmp	r3, #2
 8013ff4:	4682      	mov	sl, r0
 8013ff6:	468b      	mov	fp, r1
 8013ff8:	f04f 0200 	mov.w	r2, #0
 8013ffc:	dc53      	bgt.n	80140a6 <__ieee754_log+0x14e>
 8013ffe:	2300      	movs	r3, #0
 8014000:	f7ec fd3a 	bl	8000a78 <__aeabi_dcmpeq>
 8014004:	b1d0      	cbz	r0, 801403c <__ieee754_log+0xe4>
 8014006:	2c00      	cmp	r4, #0
 8014008:	f000 8120 	beq.w	801424c <__ieee754_log+0x2f4>
 801400c:	4620      	mov	r0, r4
 801400e:	f7ec fa61 	bl	80004d4 <__aeabi_i2d>
 8014012:	a391      	add	r3, pc, #580	@ (adr r3, 8014258 <__ieee754_log+0x300>)
 8014014:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014018:	4606      	mov	r6, r0
 801401a:	460f      	mov	r7, r1
 801401c:	f7ec fac4 	bl	80005a8 <__aeabi_dmul>
 8014020:	a38f      	add	r3, pc, #572	@ (adr r3, 8014260 <__ieee754_log+0x308>)
 8014022:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014026:	4604      	mov	r4, r0
 8014028:	460d      	mov	r5, r1
 801402a:	4630      	mov	r0, r6
 801402c:	4639      	mov	r1, r7
 801402e:	f7ec fabb 	bl	80005a8 <__aeabi_dmul>
 8014032:	4602      	mov	r2, r0
 8014034:	460b      	mov	r3, r1
 8014036:	4620      	mov	r0, r4
 8014038:	4629      	mov	r1, r5
 801403a:	e7ba      	b.n	8013fb2 <__ieee754_log+0x5a>
 801403c:	a38a      	add	r3, pc, #552	@ (adr r3, 8014268 <__ieee754_log+0x310>)
 801403e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014042:	4650      	mov	r0, sl
 8014044:	4659      	mov	r1, fp
 8014046:	f7ec faaf 	bl	80005a8 <__aeabi_dmul>
 801404a:	4602      	mov	r2, r0
 801404c:	460b      	mov	r3, r1
 801404e:	2000      	movs	r0, #0
 8014050:	499b      	ldr	r1, [pc, #620]	@ (80142c0 <__ieee754_log+0x368>)
 8014052:	f7ec f8f1 	bl	8000238 <__aeabi_dsub>
 8014056:	4652      	mov	r2, sl
 8014058:	4606      	mov	r6, r0
 801405a:	460f      	mov	r7, r1
 801405c:	465b      	mov	r3, fp
 801405e:	4650      	mov	r0, sl
 8014060:	4659      	mov	r1, fp
 8014062:	f7ec faa1 	bl	80005a8 <__aeabi_dmul>
 8014066:	4602      	mov	r2, r0
 8014068:	460b      	mov	r3, r1
 801406a:	4630      	mov	r0, r6
 801406c:	4639      	mov	r1, r7
 801406e:	f7ec fa9b 	bl	80005a8 <__aeabi_dmul>
 8014072:	4606      	mov	r6, r0
 8014074:	460f      	mov	r7, r1
 8014076:	b914      	cbnz	r4, 801407e <__ieee754_log+0x126>
 8014078:	4632      	mov	r2, r6
 801407a:	463b      	mov	r3, r7
 801407c:	e0a0      	b.n	80141c0 <__ieee754_log+0x268>
 801407e:	4620      	mov	r0, r4
 8014080:	f7ec fa28 	bl	80004d4 <__aeabi_i2d>
 8014084:	a374      	add	r3, pc, #464	@ (adr r3, 8014258 <__ieee754_log+0x300>)
 8014086:	e9d3 2300 	ldrd	r2, r3, [r3]
 801408a:	4680      	mov	r8, r0
 801408c:	4689      	mov	r9, r1
 801408e:	f7ec fa8b 	bl	80005a8 <__aeabi_dmul>
 8014092:	a373      	add	r3, pc, #460	@ (adr r3, 8014260 <__ieee754_log+0x308>)
 8014094:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014098:	4604      	mov	r4, r0
 801409a:	460d      	mov	r5, r1
 801409c:	4640      	mov	r0, r8
 801409e:	4649      	mov	r1, r9
 80140a0:	f7ec fa82 	bl	80005a8 <__aeabi_dmul>
 80140a4:	e0a5      	b.n	80141f2 <__ieee754_log+0x29a>
 80140a6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80140aa:	f7ec f8c7 	bl	800023c <__adddf3>
 80140ae:	4602      	mov	r2, r0
 80140b0:	460b      	mov	r3, r1
 80140b2:	4650      	mov	r0, sl
 80140b4:	4659      	mov	r1, fp
 80140b6:	f7ec fba1 	bl	80007fc <__aeabi_ddiv>
 80140ba:	e9cd 0100 	strd	r0, r1, [sp]
 80140be:	4620      	mov	r0, r4
 80140c0:	f7ec fa08 	bl	80004d4 <__aeabi_i2d>
 80140c4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80140c8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80140cc:	4610      	mov	r0, r2
 80140ce:	4619      	mov	r1, r3
 80140d0:	f7ec fa6a 	bl	80005a8 <__aeabi_dmul>
 80140d4:	4602      	mov	r2, r0
 80140d6:	460b      	mov	r3, r1
 80140d8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80140dc:	f7ec fa64 	bl	80005a8 <__aeabi_dmul>
 80140e0:	a363      	add	r3, pc, #396	@ (adr r3, 8014270 <__ieee754_log+0x318>)
 80140e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140e6:	4680      	mov	r8, r0
 80140e8:	4689      	mov	r9, r1
 80140ea:	f7ec fa5d 	bl	80005a8 <__aeabi_dmul>
 80140ee:	a362      	add	r3, pc, #392	@ (adr r3, 8014278 <__ieee754_log+0x320>)
 80140f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80140f4:	f7ec f8a2 	bl	800023c <__adddf3>
 80140f8:	4642      	mov	r2, r8
 80140fa:	464b      	mov	r3, r9
 80140fc:	f7ec fa54 	bl	80005a8 <__aeabi_dmul>
 8014100:	a35f      	add	r3, pc, #380	@ (adr r3, 8014280 <__ieee754_log+0x328>)
 8014102:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014106:	f7ec f899 	bl	800023c <__adddf3>
 801410a:	4642      	mov	r2, r8
 801410c:	464b      	mov	r3, r9
 801410e:	f7ec fa4b 	bl	80005a8 <__aeabi_dmul>
 8014112:	a35d      	add	r3, pc, #372	@ (adr r3, 8014288 <__ieee754_log+0x330>)
 8014114:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014118:	f7ec f890 	bl	800023c <__adddf3>
 801411c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8014120:	f7ec fa42 	bl	80005a8 <__aeabi_dmul>
 8014124:	a35a      	add	r3, pc, #360	@ (adr r3, 8014290 <__ieee754_log+0x338>)
 8014126:	e9d3 2300 	ldrd	r2, r3, [r3]
 801412a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801412e:	4640      	mov	r0, r8
 8014130:	4649      	mov	r1, r9
 8014132:	f7ec fa39 	bl	80005a8 <__aeabi_dmul>
 8014136:	a358      	add	r3, pc, #352	@ (adr r3, 8014298 <__ieee754_log+0x340>)
 8014138:	e9d3 2300 	ldrd	r2, r3, [r3]
 801413c:	f7ec f87e 	bl	800023c <__adddf3>
 8014140:	4642      	mov	r2, r8
 8014142:	464b      	mov	r3, r9
 8014144:	f7ec fa30 	bl	80005a8 <__aeabi_dmul>
 8014148:	a355      	add	r3, pc, #340	@ (adr r3, 80142a0 <__ieee754_log+0x348>)
 801414a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801414e:	f7ec f875 	bl	800023c <__adddf3>
 8014152:	4642      	mov	r2, r8
 8014154:	464b      	mov	r3, r9
 8014156:	f7ec fa27 	bl	80005a8 <__aeabi_dmul>
 801415a:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 801415e:	4602      	mov	r2, r0
 8014160:	460b      	mov	r3, r1
 8014162:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 8014166:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801416a:	f7ec f867 	bl	800023c <__adddf3>
 801416e:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 8014172:	3551      	adds	r5, #81	@ 0x51
 8014174:	4335      	orrs	r5, r6
 8014176:	2d00      	cmp	r5, #0
 8014178:	4680      	mov	r8, r0
 801417a:	4689      	mov	r9, r1
 801417c:	dd48      	ble.n	8014210 <__ieee754_log+0x2b8>
 801417e:	4b50      	ldr	r3, [pc, #320]	@ (80142c0 <__ieee754_log+0x368>)
 8014180:	2200      	movs	r2, #0
 8014182:	4650      	mov	r0, sl
 8014184:	4659      	mov	r1, fp
 8014186:	f7ec fa0f 	bl	80005a8 <__aeabi_dmul>
 801418a:	4652      	mov	r2, sl
 801418c:	465b      	mov	r3, fp
 801418e:	f7ec fa0b 	bl	80005a8 <__aeabi_dmul>
 8014192:	4602      	mov	r2, r0
 8014194:	460b      	mov	r3, r1
 8014196:	4606      	mov	r6, r0
 8014198:	460f      	mov	r7, r1
 801419a:	4640      	mov	r0, r8
 801419c:	4649      	mov	r1, r9
 801419e:	f7ec f84d 	bl	800023c <__adddf3>
 80141a2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80141a6:	f7ec f9ff 	bl	80005a8 <__aeabi_dmul>
 80141aa:	4680      	mov	r8, r0
 80141ac:	4689      	mov	r9, r1
 80141ae:	b964      	cbnz	r4, 80141ca <__ieee754_log+0x272>
 80141b0:	4602      	mov	r2, r0
 80141b2:	460b      	mov	r3, r1
 80141b4:	4630      	mov	r0, r6
 80141b6:	4639      	mov	r1, r7
 80141b8:	f7ec f83e 	bl	8000238 <__aeabi_dsub>
 80141bc:	4602      	mov	r2, r0
 80141be:	460b      	mov	r3, r1
 80141c0:	4650      	mov	r0, sl
 80141c2:	4659      	mov	r1, fp
 80141c4:	f7ec f838 	bl	8000238 <__aeabi_dsub>
 80141c8:	e6da      	b.n	8013f80 <__ieee754_log+0x28>
 80141ca:	a323      	add	r3, pc, #140	@ (adr r3, 8014258 <__ieee754_log+0x300>)
 80141cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80141d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80141d4:	f7ec f9e8 	bl	80005a8 <__aeabi_dmul>
 80141d8:	a321      	add	r3, pc, #132	@ (adr r3, 8014260 <__ieee754_log+0x308>)
 80141da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80141de:	4604      	mov	r4, r0
 80141e0:	460d      	mov	r5, r1
 80141e2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80141e6:	f7ec f9df 	bl	80005a8 <__aeabi_dmul>
 80141ea:	4642      	mov	r2, r8
 80141ec:	464b      	mov	r3, r9
 80141ee:	f7ec f825 	bl	800023c <__adddf3>
 80141f2:	4602      	mov	r2, r0
 80141f4:	460b      	mov	r3, r1
 80141f6:	4630      	mov	r0, r6
 80141f8:	4639      	mov	r1, r7
 80141fa:	f7ec f81d 	bl	8000238 <__aeabi_dsub>
 80141fe:	4652      	mov	r2, sl
 8014200:	465b      	mov	r3, fp
 8014202:	f7ec f819 	bl	8000238 <__aeabi_dsub>
 8014206:	4602      	mov	r2, r0
 8014208:	460b      	mov	r3, r1
 801420a:	4620      	mov	r0, r4
 801420c:	4629      	mov	r1, r5
 801420e:	e7d9      	b.n	80141c4 <__ieee754_log+0x26c>
 8014210:	4602      	mov	r2, r0
 8014212:	460b      	mov	r3, r1
 8014214:	4650      	mov	r0, sl
 8014216:	4659      	mov	r1, fp
 8014218:	f7ec f80e 	bl	8000238 <__aeabi_dsub>
 801421c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8014220:	f7ec f9c2 	bl	80005a8 <__aeabi_dmul>
 8014224:	4606      	mov	r6, r0
 8014226:	460f      	mov	r7, r1
 8014228:	2c00      	cmp	r4, #0
 801422a:	f43f af25 	beq.w	8014078 <__ieee754_log+0x120>
 801422e:	a30a      	add	r3, pc, #40	@ (adr r3, 8014258 <__ieee754_log+0x300>)
 8014230:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014234:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014238:	f7ec f9b6 	bl	80005a8 <__aeabi_dmul>
 801423c:	a308      	add	r3, pc, #32	@ (adr r3, 8014260 <__ieee754_log+0x308>)
 801423e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014242:	4604      	mov	r4, r0
 8014244:	460d      	mov	r5, r1
 8014246:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801424a:	e729      	b.n	80140a0 <__ieee754_log+0x148>
 801424c:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 80142a8 <__ieee754_log+0x350>
 8014250:	e698      	b.n	8013f84 <__ieee754_log+0x2c>
 8014252:	bf00      	nop
 8014254:	f3af 8000 	nop.w
 8014258:	fee00000 	.word	0xfee00000
 801425c:	3fe62e42 	.word	0x3fe62e42
 8014260:	35793c76 	.word	0x35793c76
 8014264:	3dea39ef 	.word	0x3dea39ef
 8014268:	55555555 	.word	0x55555555
 801426c:	3fd55555 	.word	0x3fd55555
 8014270:	df3e5244 	.word	0xdf3e5244
 8014274:	3fc2f112 	.word	0x3fc2f112
 8014278:	96cb03de 	.word	0x96cb03de
 801427c:	3fc74664 	.word	0x3fc74664
 8014280:	94229359 	.word	0x94229359
 8014284:	3fd24924 	.word	0x3fd24924
 8014288:	55555593 	.word	0x55555593
 801428c:	3fe55555 	.word	0x3fe55555
 8014290:	d078c69f 	.word	0xd078c69f
 8014294:	3fc39a09 	.word	0x3fc39a09
 8014298:	1d8e78af 	.word	0x1d8e78af
 801429c:	3fcc71c5 	.word	0x3fcc71c5
 80142a0:	9997fa04 	.word	0x9997fa04
 80142a4:	3fd99999 	.word	0x3fd99999
	...
 80142b0:	c3500000 	.word	0xc3500000
 80142b4:	43500000 	.word	0x43500000
 80142b8:	7fefffff 	.word	0x7fefffff
 80142bc:	3ff00000 	.word	0x3ff00000
 80142c0:	3fe00000 	.word	0x3fe00000
 80142c4:	00000000 	.word	0x00000000

080142c8 <__ieee754_rem_pio2>:
 80142c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142cc:	ec57 6b10 	vmov	r6, r7, d0
 80142d0:	4bc5      	ldr	r3, [pc, #788]	@ (80145e8 <__ieee754_rem_pio2+0x320>)
 80142d2:	b08d      	sub	sp, #52	@ 0x34
 80142d4:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 80142d8:	4598      	cmp	r8, r3
 80142da:	4604      	mov	r4, r0
 80142dc:	9704      	str	r7, [sp, #16]
 80142de:	d807      	bhi.n	80142f0 <__ieee754_rem_pio2+0x28>
 80142e0:	2200      	movs	r2, #0
 80142e2:	2300      	movs	r3, #0
 80142e4:	ed80 0b00 	vstr	d0, [r0]
 80142e8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80142ec:	2500      	movs	r5, #0
 80142ee:	e028      	b.n	8014342 <__ieee754_rem_pio2+0x7a>
 80142f0:	4bbe      	ldr	r3, [pc, #760]	@ (80145ec <__ieee754_rem_pio2+0x324>)
 80142f2:	4598      	cmp	r8, r3
 80142f4:	d878      	bhi.n	80143e8 <__ieee754_rem_pio2+0x120>
 80142f6:	9b04      	ldr	r3, [sp, #16]
 80142f8:	4dbd      	ldr	r5, [pc, #756]	@ (80145f0 <__ieee754_rem_pio2+0x328>)
 80142fa:	2b00      	cmp	r3, #0
 80142fc:	4630      	mov	r0, r6
 80142fe:	a3ac      	add	r3, pc, #688	@ (adr r3, 80145b0 <__ieee754_rem_pio2+0x2e8>)
 8014300:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014304:	4639      	mov	r1, r7
 8014306:	dd38      	ble.n	801437a <__ieee754_rem_pio2+0xb2>
 8014308:	f7eb ff96 	bl	8000238 <__aeabi_dsub>
 801430c:	45a8      	cmp	r8, r5
 801430e:	4606      	mov	r6, r0
 8014310:	460f      	mov	r7, r1
 8014312:	d01a      	beq.n	801434a <__ieee754_rem_pio2+0x82>
 8014314:	a3a8      	add	r3, pc, #672	@ (adr r3, 80145b8 <__ieee754_rem_pio2+0x2f0>)
 8014316:	e9d3 2300 	ldrd	r2, r3, [r3]
 801431a:	f7eb ff8d 	bl	8000238 <__aeabi_dsub>
 801431e:	4602      	mov	r2, r0
 8014320:	460b      	mov	r3, r1
 8014322:	4680      	mov	r8, r0
 8014324:	4689      	mov	r9, r1
 8014326:	4630      	mov	r0, r6
 8014328:	4639      	mov	r1, r7
 801432a:	f7eb ff85 	bl	8000238 <__aeabi_dsub>
 801432e:	a3a2      	add	r3, pc, #648	@ (adr r3, 80145b8 <__ieee754_rem_pio2+0x2f0>)
 8014330:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014334:	f7eb ff80 	bl	8000238 <__aeabi_dsub>
 8014338:	e9c4 8900 	strd	r8, r9, [r4]
 801433c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014340:	2501      	movs	r5, #1
 8014342:	4628      	mov	r0, r5
 8014344:	b00d      	add	sp, #52	@ 0x34
 8014346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801434a:	a39d      	add	r3, pc, #628	@ (adr r3, 80145c0 <__ieee754_rem_pio2+0x2f8>)
 801434c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014350:	f7eb ff72 	bl	8000238 <__aeabi_dsub>
 8014354:	a39c      	add	r3, pc, #624	@ (adr r3, 80145c8 <__ieee754_rem_pio2+0x300>)
 8014356:	e9d3 2300 	ldrd	r2, r3, [r3]
 801435a:	4606      	mov	r6, r0
 801435c:	460f      	mov	r7, r1
 801435e:	f7eb ff6b 	bl	8000238 <__aeabi_dsub>
 8014362:	4602      	mov	r2, r0
 8014364:	460b      	mov	r3, r1
 8014366:	4680      	mov	r8, r0
 8014368:	4689      	mov	r9, r1
 801436a:	4630      	mov	r0, r6
 801436c:	4639      	mov	r1, r7
 801436e:	f7eb ff63 	bl	8000238 <__aeabi_dsub>
 8014372:	a395      	add	r3, pc, #596	@ (adr r3, 80145c8 <__ieee754_rem_pio2+0x300>)
 8014374:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014378:	e7dc      	b.n	8014334 <__ieee754_rem_pio2+0x6c>
 801437a:	f7eb ff5f 	bl	800023c <__adddf3>
 801437e:	45a8      	cmp	r8, r5
 8014380:	4606      	mov	r6, r0
 8014382:	460f      	mov	r7, r1
 8014384:	d018      	beq.n	80143b8 <__ieee754_rem_pio2+0xf0>
 8014386:	a38c      	add	r3, pc, #560	@ (adr r3, 80145b8 <__ieee754_rem_pio2+0x2f0>)
 8014388:	e9d3 2300 	ldrd	r2, r3, [r3]
 801438c:	f7eb ff56 	bl	800023c <__adddf3>
 8014390:	4602      	mov	r2, r0
 8014392:	460b      	mov	r3, r1
 8014394:	4680      	mov	r8, r0
 8014396:	4689      	mov	r9, r1
 8014398:	4630      	mov	r0, r6
 801439a:	4639      	mov	r1, r7
 801439c:	f7eb ff4c 	bl	8000238 <__aeabi_dsub>
 80143a0:	a385      	add	r3, pc, #532	@ (adr r3, 80145b8 <__ieee754_rem_pio2+0x2f0>)
 80143a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143a6:	f7eb ff49 	bl	800023c <__adddf3>
 80143aa:	f04f 35ff 	mov.w	r5, #4294967295
 80143ae:	e9c4 8900 	strd	r8, r9, [r4]
 80143b2:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80143b6:	e7c4      	b.n	8014342 <__ieee754_rem_pio2+0x7a>
 80143b8:	a381      	add	r3, pc, #516	@ (adr r3, 80145c0 <__ieee754_rem_pio2+0x2f8>)
 80143ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143be:	f7eb ff3d 	bl	800023c <__adddf3>
 80143c2:	a381      	add	r3, pc, #516	@ (adr r3, 80145c8 <__ieee754_rem_pio2+0x300>)
 80143c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143c8:	4606      	mov	r6, r0
 80143ca:	460f      	mov	r7, r1
 80143cc:	f7eb ff36 	bl	800023c <__adddf3>
 80143d0:	4602      	mov	r2, r0
 80143d2:	460b      	mov	r3, r1
 80143d4:	4680      	mov	r8, r0
 80143d6:	4689      	mov	r9, r1
 80143d8:	4630      	mov	r0, r6
 80143da:	4639      	mov	r1, r7
 80143dc:	f7eb ff2c 	bl	8000238 <__aeabi_dsub>
 80143e0:	a379      	add	r3, pc, #484	@ (adr r3, 80145c8 <__ieee754_rem_pio2+0x300>)
 80143e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143e6:	e7de      	b.n	80143a6 <__ieee754_rem_pio2+0xde>
 80143e8:	4b82      	ldr	r3, [pc, #520]	@ (80145f4 <__ieee754_rem_pio2+0x32c>)
 80143ea:	4598      	cmp	r8, r3
 80143ec:	f200 80d1 	bhi.w	8014592 <__ieee754_rem_pio2+0x2ca>
 80143f0:	f000 f99a 	bl	8014728 <fabs>
 80143f4:	ec57 6b10 	vmov	r6, r7, d0
 80143f8:	a375      	add	r3, pc, #468	@ (adr r3, 80145d0 <__ieee754_rem_pio2+0x308>)
 80143fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80143fe:	4630      	mov	r0, r6
 8014400:	4639      	mov	r1, r7
 8014402:	f7ec f8d1 	bl	80005a8 <__aeabi_dmul>
 8014406:	4b7c      	ldr	r3, [pc, #496]	@ (80145f8 <__ieee754_rem_pio2+0x330>)
 8014408:	2200      	movs	r2, #0
 801440a:	f7eb ff17 	bl	800023c <__adddf3>
 801440e:	f7ec fb7b 	bl	8000b08 <__aeabi_d2iz>
 8014412:	4605      	mov	r5, r0
 8014414:	f7ec f85e 	bl	80004d4 <__aeabi_i2d>
 8014418:	4602      	mov	r2, r0
 801441a:	460b      	mov	r3, r1
 801441c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014420:	a363      	add	r3, pc, #396	@ (adr r3, 80145b0 <__ieee754_rem_pio2+0x2e8>)
 8014422:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014426:	f7ec f8bf 	bl	80005a8 <__aeabi_dmul>
 801442a:	4602      	mov	r2, r0
 801442c:	460b      	mov	r3, r1
 801442e:	4630      	mov	r0, r6
 8014430:	4639      	mov	r1, r7
 8014432:	f7eb ff01 	bl	8000238 <__aeabi_dsub>
 8014436:	a360      	add	r3, pc, #384	@ (adr r3, 80145b8 <__ieee754_rem_pio2+0x2f0>)
 8014438:	e9d3 2300 	ldrd	r2, r3, [r3]
 801443c:	4682      	mov	sl, r0
 801443e:	468b      	mov	fp, r1
 8014440:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014444:	f7ec f8b0 	bl	80005a8 <__aeabi_dmul>
 8014448:	2d1f      	cmp	r5, #31
 801444a:	4606      	mov	r6, r0
 801444c:	460f      	mov	r7, r1
 801444e:	dc0c      	bgt.n	801446a <__ieee754_rem_pio2+0x1a2>
 8014450:	4b6a      	ldr	r3, [pc, #424]	@ (80145fc <__ieee754_rem_pio2+0x334>)
 8014452:	1e6a      	subs	r2, r5, #1
 8014454:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014458:	4543      	cmp	r3, r8
 801445a:	d006      	beq.n	801446a <__ieee754_rem_pio2+0x1a2>
 801445c:	4632      	mov	r2, r6
 801445e:	463b      	mov	r3, r7
 8014460:	4650      	mov	r0, sl
 8014462:	4659      	mov	r1, fp
 8014464:	f7eb fee8 	bl	8000238 <__aeabi_dsub>
 8014468:	e00e      	b.n	8014488 <__ieee754_rem_pio2+0x1c0>
 801446a:	463b      	mov	r3, r7
 801446c:	4632      	mov	r2, r6
 801446e:	4650      	mov	r0, sl
 8014470:	4659      	mov	r1, fp
 8014472:	f7eb fee1 	bl	8000238 <__aeabi_dsub>
 8014476:	ea4f 5328 	mov.w	r3, r8, asr #20
 801447a:	9305      	str	r3, [sp, #20]
 801447c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8014480:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 8014484:	2b10      	cmp	r3, #16
 8014486:	dc02      	bgt.n	801448e <__ieee754_rem_pio2+0x1c6>
 8014488:	e9c4 0100 	strd	r0, r1, [r4]
 801448c:	e039      	b.n	8014502 <__ieee754_rem_pio2+0x23a>
 801448e:	a34c      	add	r3, pc, #304	@ (adr r3, 80145c0 <__ieee754_rem_pio2+0x2f8>)
 8014490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014494:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014498:	f7ec f886 	bl	80005a8 <__aeabi_dmul>
 801449c:	4606      	mov	r6, r0
 801449e:	460f      	mov	r7, r1
 80144a0:	4602      	mov	r2, r0
 80144a2:	460b      	mov	r3, r1
 80144a4:	4650      	mov	r0, sl
 80144a6:	4659      	mov	r1, fp
 80144a8:	f7eb fec6 	bl	8000238 <__aeabi_dsub>
 80144ac:	4602      	mov	r2, r0
 80144ae:	460b      	mov	r3, r1
 80144b0:	4680      	mov	r8, r0
 80144b2:	4689      	mov	r9, r1
 80144b4:	4650      	mov	r0, sl
 80144b6:	4659      	mov	r1, fp
 80144b8:	f7eb febe 	bl	8000238 <__aeabi_dsub>
 80144bc:	4632      	mov	r2, r6
 80144be:	463b      	mov	r3, r7
 80144c0:	f7eb feba 	bl	8000238 <__aeabi_dsub>
 80144c4:	a340      	add	r3, pc, #256	@ (adr r3, 80145c8 <__ieee754_rem_pio2+0x300>)
 80144c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80144ca:	4606      	mov	r6, r0
 80144cc:	460f      	mov	r7, r1
 80144ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80144d2:	f7ec f869 	bl	80005a8 <__aeabi_dmul>
 80144d6:	4632      	mov	r2, r6
 80144d8:	463b      	mov	r3, r7
 80144da:	f7eb fead 	bl	8000238 <__aeabi_dsub>
 80144de:	4602      	mov	r2, r0
 80144e0:	460b      	mov	r3, r1
 80144e2:	4606      	mov	r6, r0
 80144e4:	460f      	mov	r7, r1
 80144e6:	4640      	mov	r0, r8
 80144e8:	4649      	mov	r1, r9
 80144ea:	f7eb fea5 	bl	8000238 <__aeabi_dsub>
 80144ee:	9a05      	ldr	r2, [sp, #20]
 80144f0:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80144f4:	1ad3      	subs	r3, r2, r3
 80144f6:	2b31      	cmp	r3, #49	@ 0x31
 80144f8:	dc20      	bgt.n	801453c <__ieee754_rem_pio2+0x274>
 80144fa:	e9c4 0100 	strd	r0, r1, [r4]
 80144fe:	46c2      	mov	sl, r8
 8014500:	46cb      	mov	fp, r9
 8014502:	e9d4 8900 	ldrd	r8, r9, [r4]
 8014506:	4650      	mov	r0, sl
 8014508:	4642      	mov	r2, r8
 801450a:	464b      	mov	r3, r9
 801450c:	4659      	mov	r1, fp
 801450e:	f7eb fe93 	bl	8000238 <__aeabi_dsub>
 8014512:	463b      	mov	r3, r7
 8014514:	4632      	mov	r2, r6
 8014516:	f7eb fe8f 	bl	8000238 <__aeabi_dsub>
 801451a:	9b04      	ldr	r3, [sp, #16]
 801451c:	2b00      	cmp	r3, #0
 801451e:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8014522:	f6bf af0e 	bge.w	8014342 <__ieee754_rem_pio2+0x7a>
 8014526:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 801452a:	6063      	str	r3, [r4, #4]
 801452c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8014530:	f8c4 8000 	str.w	r8, [r4]
 8014534:	60a0      	str	r0, [r4, #8]
 8014536:	60e3      	str	r3, [r4, #12]
 8014538:	426d      	negs	r5, r5
 801453a:	e702      	b.n	8014342 <__ieee754_rem_pio2+0x7a>
 801453c:	a326      	add	r3, pc, #152	@ (adr r3, 80145d8 <__ieee754_rem_pio2+0x310>)
 801453e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014542:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014546:	f7ec f82f 	bl	80005a8 <__aeabi_dmul>
 801454a:	4606      	mov	r6, r0
 801454c:	460f      	mov	r7, r1
 801454e:	4602      	mov	r2, r0
 8014550:	460b      	mov	r3, r1
 8014552:	4640      	mov	r0, r8
 8014554:	4649      	mov	r1, r9
 8014556:	f7eb fe6f 	bl	8000238 <__aeabi_dsub>
 801455a:	4602      	mov	r2, r0
 801455c:	460b      	mov	r3, r1
 801455e:	4682      	mov	sl, r0
 8014560:	468b      	mov	fp, r1
 8014562:	4640      	mov	r0, r8
 8014564:	4649      	mov	r1, r9
 8014566:	f7eb fe67 	bl	8000238 <__aeabi_dsub>
 801456a:	4632      	mov	r2, r6
 801456c:	463b      	mov	r3, r7
 801456e:	f7eb fe63 	bl	8000238 <__aeabi_dsub>
 8014572:	a31b      	add	r3, pc, #108	@ (adr r3, 80145e0 <__ieee754_rem_pio2+0x318>)
 8014574:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014578:	4606      	mov	r6, r0
 801457a:	460f      	mov	r7, r1
 801457c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014580:	f7ec f812 	bl	80005a8 <__aeabi_dmul>
 8014584:	4632      	mov	r2, r6
 8014586:	463b      	mov	r3, r7
 8014588:	f7eb fe56 	bl	8000238 <__aeabi_dsub>
 801458c:	4606      	mov	r6, r0
 801458e:	460f      	mov	r7, r1
 8014590:	e764      	b.n	801445c <__ieee754_rem_pio2+0x194>
 8014592:	4b1b      	ldr	r3, [pc, #108]	@ (8014600 <__ieee754_rem_pio2+0x338>)
 8014594:	4598      	cmp	r8, r3
 8014596:	d935      	bls.n	8014604 <__ieee754_rem_pio2+0x33c>
 8014598:	4632      	mov	r2, r6
 801459a:	463b      	mov	r3, r7
 801459c:	4630      	mov	r0, r6
 801459e:	4639      	mov	r1, r7
 80145a0:	f7eb fe4a 	bl	8000238 <__aeabi_dsub>
 80145a4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80145a8:	e9c4 0100 	strd	r0, r1, [r4]
 80145ac:	e69e      	b.n	80142ec <__ieee754_rem_pio2+0x24>
 80145ae:	bf00      	nop
 80145b0:	54400000 	.word	0x54400000
 80145b4:	3ff921fb 	.word	0x3ff921fb
 80145b8:	1a626331 	.word	0x1a626331
 80145bc:	3dd0b461 	.word	0x3dd0b461
 80145c0:	1a600000 	.word	0x1a600000
 80145c4:	3dd0b461 	.word	0x3dd0b461
 80145c8:	2e037073 	.word	0x2e037073
 80145cc:	3ba3198a 	.word	0x3ba3198a
 80145d0:	6dc9c883 	.word	0x6dc9c883
 80145d4:	3fe45f30 	.word	0x3fe45f30
 80145d8:	2e000000 	.word	0x2e000000
 80145dc:	3ba3198a 	.word	0x3ba3198a
 80145e0:	252049c1 	.word	0x252049c1
 80145e4:	397b839a 	.word	0x397b839a
 80145e8:	3fe921fb 	.word	0x3fe921fb
 80145ec:	4002d97b 	.word	0x4002d97b
 80145f0:	3ff921fb 	.word	0x3ff921fb
 80145f4:	413921fb 	.word	0x413921fb
 80145f8:	3fe00000 	.word	0x3fe00000
 80145fc:	08019908 	.word	0x08019908
 8014600:	7fefffff 	.word	0x7fefffff
 8014604:	ea4f 5528 	mov.w	r5, r8, asr #20
 8014608:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 801460c:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8014610:	4630      	mov	r0, r6
 8014612:	460f      	mov	r7, r1
 8014614:	f7ec fa78 	bl	8000b08 <__aeabi_d2iz>
 8014618:	f7eb ff5c 	bl	80004d4 <__aeabi_i2d>
 801461c:	4602      	mov	r2, r0
 801461e:	460b      	mov	r3, r1
 8014620:	4630      	mov	r0, r6
 8014622:	4639      	mov	r1, r7
 8014624:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8014628:	f7eb fe06 	bl	8000238 <__aeabi_dsub>
 801462c:	4b22      	ldr	r3, [pc, #136]	@ (80146b8 <__ieee754_rem_pio2+0x3f0>)
 801462e:	2200      	movs	r2, #0
 8014630:	f7eb ffba 	bl	80005a8 <__aeabi_dmul>
 8014634:	460f      	mov	r7, r1
 8014636:	4606      	mov	r6, r0
 8014638:	f7ec fa66 	bl	8000b08 <__aeabi_d2iz>
 801463c:	f7eb ff4a 	bl	80004d4 <__aeabi_i2d>
 8014640:	4602      	mov	r2, r0
 8014642:	460b      	mov	r3, r1
 8014644:	4630      	mov	r0, r6
 8014646:	4639      	mov	r1, r7
 8014648:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801464c:	f7eb fdf4 	bl	8000238 <__aeabi_dsub>
 8014650:	4b19      	ldr	r3, [pc, #100]	@ (80146b8 <__ieee754_rem_pio2+0x3f0>)
 8014652:	2200      	movs	r2, #0
 8014654:	f7eb ffa8 	bl	80005a8 <__aeabi_dmul>
 8014658:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 801465c:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8014660:	f04f 0803 	mov.w	r8, #3
 8014664:	2600      	movs	r6, #0
 8014666:	2700      	movs	r7, #0
 8014668:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 801466c:	4632      	mov	r2, r6
 801466e:	463b      	mov	r3, r7
 8014670:	46c2      	mov	sl, r8
 8014672:	f108 38ff 	add.w	r8, r8, #4294967295
 8014676:	f7ec f9ff 	bl	8000a78 <__aeabi_dcmpeq>
 801467a:	2800      	cmp	r0, #0
 801467c:	d1f4      	bne.n	8014668 <__ieee754_rem_pio2+0x3a0>
 801467e:	4b0f      	ldr	r3, [pc, #60]	@ (80146bc <__ieee754_rem_pio2+0x3f4>)
 8014680:	9301      	str	r3, [sp, #4]
 8014682:	2302      	movs	r3, #2
 8014684:	9300      	str	r3, [sp, #0]
 8014686:	462a      	mov	r2, r5
 8014688:	4653      	mov	r3, sl
 801468a:	4621      	mov	r1, r4
 801468c:	a806      	add	r0, sp, #24
 801468e:	f000 fbbb 	bl	8014e08 <__kernel_rem_pio2>
 8014692:	9b04      	ldr	r3, [sp, #16]
 8014694:	2b00      	cmp	r3, #0
 8014696:	4605      	mov	r5, r0
 8014698:	f6bf ae53 	bge.w	8014342 <__ieee754_rem_pio2+0x7a>
 801469c:	e9d4 2100 	ldrd	r2, r1, [r4]
 80146a0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80146a4:	e9c4 2300 	strd	r2, r3, [r4]
 80146a8:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 80146ac:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80146b0:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80146b4:	e740      	b.n	8014538 <__ieee754_rem_pio2+0x270>
 80146b6:	bf00      	nop
 80146b8:	41700000 	.word	0x41700000
 80146bc:	08019988 	.word	0x08019988

080146c0 <acos>:
 80146c0:	b538      	push	{r3, r4, r5, lr}
 80146c2:	ed2d 8b02 	vpush	{d8}
 80146c6:	ec55 4b10 	vmov	r4, r5, d0
 80146ca:	f000 feed 	bl	80154a8 <__ieee754_acos>
 80146ce:	4622      	mov	r2, r4
 80146d0:	462b      	mov	r3, r5
 80146d2:	4620      	mov	r0, r4
 80146d4:	4629      	mov	r1, r5
 80146d6:	eeb0 8a40 	vmov.f32	s16, s0
 80146da:	eef0 8a60 	vmov.f32	s17, s1
 80146de:	f7ec f9fd 	bl	8000adc <__aeabi_dcmpun>
 80146e2:	b9a8      	cbnz	r0, 8014710 <acos+0x50>
 80146e4:	ec45 4b10 	vmov	d0, r4, r5
 80146e8:	f000 f81e 	bl	8014728 <fabs>
 80146ec:	4b0c      	ldr	r3, [pc, #48]	@ (8014720 <acos+0x60>)
 80146ee:	ec51 0b10 	vmov	r0, r1, d0
 80146f2:	2200      	movs	r2, #0
 80146f4:	f7ec f9e8 	bl	8000ac8 <__aeabi_dcmpgt>
 80146f8:	b150      	cbz	r0, 8014710 <acos+0x50>
 80146fa:	f7fb fdcf 	bl	801029c <__errno>
 80146fe:	ecbd 8b02 	vpop	{d8}
 8014702:	2321      	movs	r3, #33	@ 0x21
 8014704:	6003      	str	r3, [r0, #0]
 8014706:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801470a:	4806      	ldr	r0, [pc, #24]	@ (8014724 <acos+0x64>)
 801470c:	f7fe ba54 	b.w	8012bb8 <nan>
 8014710:	eeb0 0a48 	vmov.f32	s0, s16
 8014714:	eef0 0a68 	vmov.f32	s1, s17
 8014718:	ecbd 8b02 	vpop	{d8}
 801471c:	bd38      	pop	{r3, r4, r5, pc}
 801471e:	bf00      	nop
 8014720:	3ff00000 	.word	0x3ff00000
 8014724:	0801975a 	.word	0x0801975a

08014728 <fabs>:
 8014728:	ec51 0b10 	vmov	r0, r1, d0
 801472c:	4602      	mov	r2, r0
 801472e:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8014732:	ec43 2b10 	vmov	d0, r2, r3
 8014736:	4770      	bx	lr

08014738 <__ieee754_powf>:
 8014738:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801473c:	ee10 4a90 	vmov	r4, s1
 8014740:	f034 4900 	bics.w	r9, r4, #2147483648	@ 0x80000000
 8014744:	ed2d 8b02 	vpush	{d8}
 8014748:	ee10 6a10 	vmov	r6, s0
 801474c:	eeb0 8a40 	vmov.f32	s16, s0
 8014750:	eef0 8a60 	vmov.f32	s17, s1
 8014754:	d10c      	bne.n	8014770 <__ieee754_powf+0x38>
 8014756:	f486 0680 	eor.w	r6, r6, #4194304	@ 0x400000
 801475a:	0076      	lsls	r6, r6, #1
 801475c:	f516 0f00 	cmn.w	r6, #8388608	@ 0x800000
 8014760:	f240 8274 	bls.w	8014c4c <__ieee754_powf+0x514>
 8014764:	ee38 0a28 	vadd.f32	s0, s16, s17
 8014768:	ecbd 8b02 	vpop	{d8}
 801476c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014770:	f026 4800 	bic.w	r8, r6, #2147483648	@ 0x80000000
 8014774:	f1b8 4fff 	cmp.w	r8, #2139095040	@ 0x7f800000
 8014778:	d802      	bhi.n	8014780 <__ieee754_powf+0x48>
 801477a:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 801477e:	d908      	bls.n	8014792 <__ieee754_powf+0x5a>
 8014780:	f1b6 5f7e 	cmp.w	r6, #1065353216	@ 0x3f800000
 8014784:	d1ee      	bne.n	8014764 <__ieee754_powf+0x2c>
 8014786:	f484 0480 	eor.w	r4, r4, #4194304	@ 0x400000
 801478a:	0064      	lsls	r4, r4, #1
 801478c:	f514 0f00 	cmn.w	r4, #8388608	@ 0x800000
 8014790:	e7e6      	b.n	8014760 <__ieee754_powf+0x28>
 8014792:	2e00      	cmp	r6, #0
 8014794:	da1f      	bge.n	80147d6 <__ieee754_powf+0x9e>
 8014796:	f1b9 4f97 	cmp.w	r9, #1266679808	@ 0x4b800000
 801479a:	f080 8260 	bcs.w	8014c5e <__ieee754_powf+0x526>
 801479e:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 80147a2:	d32f      	bcc.n	8014804 <__ieee754_powf+0xcc>
 80147a4:	ea4f 53e9 	mov.w	r3, r9, asr #23
 80147a8:	f1c3 0396 	rsb	r3, r3, #150	@ 0x96
 80147ac:	fa49 f503 	asr.w	r5, r9, r3
 80147b0:	fa05 f303 	lsl.w	r3, r5, r3
 80147b4:	454b      	cmp	r3, r9
 80147b6:	d123      	bne.n	8014800 <__ieee754_powf+0xc8>
 80147b8:	f005 0501 	and.w	r5, r5, #1
 80147bc:	f1c5 0502 	rsb	r5, r5, #2
 80147c0:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 80147c4:	d11f      	bne.n	8014806 <__ieee754_powf+0xce>
 80147c6:	2c00      	cmp	r4, #0
 80147c8:	f280 8246 	bge.w	8014c58 <__ieee754_powf+0x520>
 80147cc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80147d0:	ee87 0a88 	vdiv.f32	s0, s15, s16
 80147d4:	e7c8      	b.n	8014768 <__ieee754_powf+0x30>
 80147d6:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 80147da:	d111      	bne.n	8014800 <__ieee754_powf+0xc8>
 80147dc:	f1b8 5f7e 	cmp.w	r8, #1065353216	@ 0x3f800000
 80147e0:	f000 8234 	beq.w	8014c4c <__ieee754_powf+0x514>
 80147e4:	d906      	bls.n	80147f4 <__ieee754_powf+0xbc>
 80147e6:	ed9f 0ac5 	vldr	s0, [pc, #788]	@ 8014afc <__ieee754_powf+0x3c4>
 80147ea:	2c00      	cmp	r4, #0
 80147ec:	bfa8      	it	ge
 80147ee:	eeb0 0a68 	vmovge.f32	s0, s17
 80147f2:	e7b9      	b.n	8014768 <__ieee754_powf+0x30>
 80147f4:	2c00      	cmp	r4, #0
 80147f6:	f280 822c 	bge.w	8014c52 <__ieee754_powf+0x51a>
 80147fa:	eeb1 0a68 	vneg.f32	s0, s17
 80147fe:	e7b3      	b.n	8014768 <__ieee754_powf+0x30>
 8014800:	2500      	movs	r5, #0
 8014802:	e7dd      	b.n	80147c0 <__ieee754_powf+0x88>
 8014804:	2500      	movs	r5, #0
 8014806:	f1b4 4f80 	cmp.w	r4, #1073741824	@ 0x40000000
 801480a:	d102      	bne.n	8014812 <__ieee754_powf+0xda>
 801480c:	ee28 0a08 	vmul.f32	s0, s16, s16
 8014810:	e7aa      	b.n	8014768 <__ieee754_powf+0x30>
 8014812:	f1b4 5f7c 	cmp.w	r4, #1056964608	@ 0x3f000000
 8014816:	f040 8227 	bne.w	8014c68 <__ieee754_powf+0x530>
 801481a:	2e00      	cmp	r6, #0
 801481c:	f2c0 8224 	blt.w	8014c68 <__ieee754_powf+0x530>
 8014820:	eeb0 0a48 	vmov.f32	s0, s16
 8014824:	ecbd 8b02 	vpop	{d8}
 8014828:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801482c:	f000 bae6 	b.w	8014dfc <__ieee754_sqrtf>
 8014830:	2d01      	cmp	r5, #1
 8014832:	d199      	bne.n	8014768 <__ieee754_powf+0x30>
 8014834:	eeb1 0a40 	vneg.f32	s0, s0
 8014838:	e796      	b.n	8014768 <__ieee754_powf+0x30>
 801483a:	0ff0      	lsrs	r0, r6, #31
 801483c:	3801      	subs	r0, #1
 801483e:	ea55 0300 	orrs.w	r3, r5, r0
 8014842:	d104      	bne.n	801484e <__ieee754_powf+0x116>
 8014844:	ee38 8a48 	vsub.f32	s16, s16, s16
 8014848:	ee88 0a08 	vdiv.f32	s0, s16, s16
 801484c:	e78c      	b.n	8014768 <__ieee754_powf+0x30>
 801484e:	f1b9 4f9a 	cmp.w	r9, #1291845632	@ 0x4d000000
 8014852:	d96d      	bls.n	8014930 <__ieee754_powf+0x1f8>
 8014854:	4baa      	ldr	r3, [pc, #680]	@ (8014b00 <__ieee754_powf+0x3c8>)
 8014856:	4598      	cmp	r8, r3
 8014858:	d808      	bhi.n	801486c <__ieee754_powf+0x134>
 801485a:	2c00      	cmp	r4, #0
 801485c:	da0b      	bge.n	8014876 <__ieee754_powf+0x13e>
 801485e:	2000      	movs	r0, #0
 8014860:	ecbd 8b02 	vpop	{d8}
 8014864:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014868:	f000 bac2 	b.w	8014df0 <__math_oflowf>
 801486c:	4ba5      	ldr	r3, [pc, #660]	@ (8014b04 <__ieee754_powf+0x3cc>)
 801486e:	4598      	cmp	r8, r3
 8014870:	d908      	bls.n	8014884 <__ieee754_powf+0x14c>
 8014872:	2c00      	cmp	r4, #0
 8014874:	dcf3      	bgt.n	801485e <__ieee754_powf+0x126>
 8014876:	2000      	movs	r0, #0
 8014878:	ecbd 8b02 	vpop	{d8}
 801487c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014880:	f000 bab0 	b.w	8014de4 <__math_uflowf>
 8014884:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014888:	ee30 0a67 	vsub.f32	s0, s0, s15
 801488c:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8014b08 <__ieee754_powf+0x3d0>
 8014890:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8014894:	eee0 6a67 	vfms.f32	s13, s0, s15
 8014898:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801489c:	eee6 7ac0 	vfms.f32	s15, s13, s0
 80148a0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80148a4:	eddf 6a99 	vldr	s13, [pc, #612]	@ 8014b0c <__ieee754_powf+0x3d4>
 80148a8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80148ac:	eddf 7a98 	vldr	s15, [pc, #608]	@ 8014b10 <__ieee754_powf+0x3d8>
 80148b0:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 80148b4:	ed9f 7a97 	vldr	s14, [pc, #604]	@ 8014b14 <__ieee754_powf+0x3dc>
 80148b8:	eee0 7a07 	vfma.f32	s15, s0, s14
 80148bc:	eeb0 7a67 	vmov.f32	s14, s15
 80148c0:	eea0 7a26 	vfma.f32	s14, s0, s13
 80148c4:	ee17 3a10 	vmov	r3, s14
 80148c8:	f36f 030b 	bfc	r3, #0, #12
 80148cc:	ee07 3a10 	vmov	s14, r3
 80148d0:	eeb0 6a47 	vmov.f32	s12, s14
 80148d4:	eea0 6a66 	vfms.f32	s12, s0, s13
 80148d8:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80148dc:	3d01      	subs	r5, #1
 80148de:	4305      	orrs	r5, r0
 80148e0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80148e4:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 80148e8:	f36f 040b 	bfc	r4, #0, #12
 80148ec:	bf18      	it	ne
 80148ee:	eeb0 8a66 	vmovne.f32	s16, s13
 80148f2:	ee06 4a90 	vmov	s13, r4
 80148f6:	ee67 0aa8 	vmul.f32	s1, s15, s17
 80148fa:	ee38 6ae6 	vsub.f32	s12, s17, s13
 80148fe:	ee67 7a26 	vmul.f32	s15, s14, s13
 8014902:	eee6 0a07 	vfma.f32	s1, s12, s14
 8014906:	ee30 7aa7 	vadd.f32	s14, s1, s15
 801490a:	ee17 1a10 	vmov	r1, s14
 801490e:	2900      	cmp	r1, #0
 8014910:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8014914:	f340 80dd 	ble.w	8014ad2 <__ieee754_powf+0x39a>
 8014918:	f1b3 4f86 	cmp.w	r3, #1124073472	@ 0x43000000
 801491c:	f240 80ca 	bls.w	8014ab4 <__ieee754_powf+0x37c>
 8014920:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8014924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014928:	bf4c      	ite	mi
 801492a:	2001      	movmi	r0, #1
 801492c:	2000      	movpl	r0, #0
 801492e:	e797      	b.n	8014860 <__ieee754_powf+0x128>
 8014930:	f016 4fff 	tst.w	r6, #2139095040	@ 0x7f800000
 8014934:	bf01      	itttt	eq
 8014936:	eddf 7a78 	vldreq	s15, [pc, #480]	@ 8014b18 <__ieee754_powf+0x3e0>
 801493a:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 801493e:	f06f 0317 	mvneq.w	r3, #23
 8014942:	ee17 7a90 	vmoveq	r7, s15
 8014946:	ea4f 52e7 	mov.w	r2, r7, asr #23
 801494a:	bf18      	it	ne
 801494c:	2300      	movne	r3, #0
 801494e:	3a7f      	subs	r2, #127	@ 0x7f
 8014950:	441a      	add	r2, r3
 8014952:	4b72      	ldr	r3, [pc, #456]	@ (8014b1c <__ieee754_powf+0x3e4>)
 8014954:	f3c7 0716 	ubfx	r7, r7, #0, #23
 8014958:	429f      	cmp	r7, r3
 801495a:	f047 517e 	orr.w	r1, r7, #1065353216	@ 0x3f800000
 801495e:	dd06      	ble.n	801496e <__ieee754_powf+0x236>
 8014960:	4b6f      	ldr	r3, [pc, #444]	@ (8014b20 <__ieee754_powf+0x3e8>)
 8014962:	429f      	cmp	r7, r3
 8014964:	f340 80a4 	ble.w	8014ab0 <__ieee754_powf+0x378>
 8014968:	3201      	adds	r2, #1
 801496a:	f5a1 0100 	sub.w	r1, r1, #8388608	@ 0x800000
 801496e:	2600      	movs	r6, #0
 8014970:	4b6c      	ldr	r3, [pc, #432]	@ (8014b24 <__ieee754_powf+0x3ec>)
 8014972:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8014976:	ee07 1a10 	vmov	s14, r1
 801497a:	edd3 5a00 	vldr	s11, [r3]
 801497e:	4b6a      	ldr	r3, [pc, #424]	@ (8014b28 <__ieee754_powf+0x3f0>)
 8014980:	ee75 7a87 	vadd.f32	s15, s11, s14
 8014984:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014988:	eec6 4aa7 	vdiv.f32	s9, s13, s15
 801498c:	1049      	asrs	r1, r1, #1
 801498e:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
 8014992:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
 8014996:	eb01 5146 	add.w	r1, r1, r6, lsl #21
 801499a:	ee37 6a65 	vsub.f32	s12, s14, s11
 801499e:	ee07 1a90 	vmov	s15, r1
 80149a2:	ee26 5a24 	vmul.f32	s10, s12, s9
 80149a6:	ee77 5ae5 	vsub.f32	s11, s15, s11
 80149aa:	ee15 7a10 	vmov	r7, s10
 80149ae:	401f      	ands	r7, r3
 80149b0:	ee06 7a90 	vmov	s13, r7
 80149b4:	eea6 6ae7 	vfms.f32	s12, s13, s15
 80149b8:	ee37 7a65 	vsub.f32	s14, s14, s11
 80149bc:	ee65 7a05 	vmul.f32	s15, s10, s10
 80149c0:	eea6 6ac7 	vfms.f32	s12, s13, s14
 80149c4:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8014b2c <__ieee754_powf+0x3f4>
 80149c8:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8014b30 <__ieee754_powf+0x3f8>
 80149cc:	eee7 5a87 	vfma.f32	s11, s15, s14
 80149d0:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8014b34 <__ieee754_powf+0x3fc>
 80149d4:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80149d8:	eddf 5a4b 	vldr	s11, [pc, #300]	@ 8014b08 <__ieee754_powf+0x3d0>
 80149dc:	eee7 5a27 	vfma.f32	s11, s14, s15
 80149e0:	ed9f 7a55 	vldr	s14, [pc, #340]	@ 8014b38 <__ieee754_powf+0x400>
 80149e4:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80149e8:	eddf 5a54 	vldr	s11, [pc, #336]	@ 8014b3c <__ieee754_powf+0x404>
 80149ec:	ee26 6a24 	vmul.f32	s12, s12, s9
 80149f0:	eee7 5a27 	vfma.f32	s11, s14, s15
 80149f4:	ee35 7a26 	vadd.f32	s14, s10, s13
 80149f8:	ee67 4aa7 	vmul.f32	s9, s15, s15
 80149fc:	ee27 7a06 	vmul.f32	s14, s14, s12
 8014a00:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
 8014a04:	eea4 7aa5 	vfma.f32	s14, s9, s11
 8014a08:	eef0 5a67 	vmov.f32	s11, s15
 8014a0c:	eee6 5aa6 	vfma.f32	s11, s13, s13
 8014a10:	ee75 5a87 	vadd.f32	s11, s11, s14
 8014a14:	ee15 1a90 	vmov	r1, s11
 8014a18:	4019      	ands	r1, r3
 8014a1a:	ee05 1a90 	vmov	s11, r1
 8014a1e:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8014a22:	eee6 7ae6 	vfms.f32	s15, s13, s13
 8014a26:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014a2a:	ee67 7a85 	vmul.f32	s15, s15, s10
 8014a2e:	eee6 7a25 	vfma.f32	s15, s12, s11
 8014a32:	eeb0 6a67 	vmov.f32	s12, s15
 8014a36:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014a3a:	ee16 1a10 	vmov	r1, s12
 8014a3e:	4019      	ands	r1, r3
 8014a40:	ee06 1a10 	vmov	s12, r1
 8014a44:	eeb0 7a46 	vmov.f32	s14, s12
 8014a48:	eea6 7ae5 	vfms.f32	s14, s13, s11
 8014a4c:	493c      	ldr	r1, [pc, #240]	@ (8014b40 <__ieee754_powf+0x408>)
 8014a4e:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 8014a52:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014a56:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8014b44 <__ieee754_powf+0x40c>
 8014a5a:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8014b48 <__ieee754_powf+0x410>
 8014a5e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8014a62:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 8014b4c <__ieee754_powf+0x414>
 8014a66:	eee6 7a07 	vfma.f32	s15, s12, s14
 8014a6a:	ed91 7a00 	vldr	s14, [r1]
 8014a6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014a72:	ee07 2a10 	vmov	s14, r2
 8014a76:	4a36      	ldr	r2, [pc, #216]	@ (8014b50 <__ieee754_powf+0x418>)
 8014a78:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8014a7c:	eeb0 7a67 	vmov.f32	s14, s15
 8014a80:	eea6 7a25 	vfma.f32	s14, s12, s11
 8014a84:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 8014a88:	ed92 5a00 	vldr	s10, [r2]
 8014a8c:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014a90:	ee37 7a26 	vadd.f32	s14, s14, s13
 8014a94:	ee17 2a10 	vmov	r2, s14
 8014a98:	401a      	ands	r2, r3
 8014a9a:	ee07 2a10 	vmov	s14, r2
 8014a9e:	ee77 6a66 	vsub.f32	s13, s14, s13
 8014aa2:	ee76 6ac5 	vsub.f32	s13, s13, s10
 8014aa6:	eee6 6a65 	vfms.f32	s13, s12, s11
 8014aaa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014aae:	e715      	b.n	80148dc <__ieee754_powf+0x1a4>
 8014ab0:	2601      	movs	r6, #1
 8014ab2:	e75d      	b.n	8014970 <__ieee754_powf+0x238>
 8014ab4:	d152      	bne.n	8014b5c <__ieee754_powf+0x424>
 8014ab6:	eddf 6a27 	vldr	s13, [pc, #156]	@ 8014b54 <__ieee754_powf+0x41c>
 8014aba:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014abe:	ee70 6aa6 	vadd.f32	s13, s1, s13
 8014ac2:	eef4 6ac7 	vcmpe.f32	s13, s14
 8014ac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014aca:	f73f af29 	bgt.w	8014920 <__ieee754_powf+0x1e8>
 8014ace:	2386      	movs	r3, #134	@ 0x86
 8014ad0:	e048      	b.n	8014b64 <__ieee754_powf+0x42c>
 8014ad2:	4a21      	ldr	r2, [pc, #132]	@ (8014b58 <__ieee754_powf+0x420>)
 8014ad4:	4293      	cmp	r3, r2
 8014ad6:	d907      	bls.n	8014ae8 <__ieee754_powf+0x3b0>
 8014ad8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8014adc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ae0:	bf4c      	ite	mi
 8014ae2:	2001      	movmi	r0, #1
 8014ae4:	2000      	movpl	r0, #0
 8014ae6:	e6c7      	b.n	8014878 <__ieee754_powf+0x140>
 8014ae8:	d138      	bne.n	8014b5c <__ieee754_powf+0x424>
 8014aea:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014aee:	eeb4 7ae0 	vcmpe.f32	s14, s1
 8014af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014af6:	dbea      	blt.n	8014ace <__ieee754_powf+0x396>
 8014af8:	e7ee      	b.n	8014ad8 <__ieee754_powf+0x3a0>
 8014afa:	bf00      	nop
 8014afc:	00000000 	.word	0x00000000
 8014b00:	3f7ffff3 	.word	0x3f7ffff3
 8014b04:	3f800007 	.word	0x3f800007
 8014b08:	3eaaaaab 	.word	0x3eaaaaab
 8014b0c:	3fb8aa00 	.word	0x3fb8aa00
 8014b10:	3fb8aa3b 	.word	0x3fb8aa3b
 8014b14:	36eca570 	.word	0x36eca570
 8014b18:	4b800000 	.word	0x4b800000
 8014b1c:	001cc471 	.word	0x001cc471
 8014b20:	005db3d6 	.word	0x005db3d6
 8014b24:	08019aa0 	.word	0x08019aa0
 8014b28:	fffff000 	.word	0xfffff000
 8014b2c:	3e6c3255 	.word	0x3e6c3255
 8014b30:	3e53f142 	.word	0x3e53f142
 8014b34:	3e8ba305 	.word	0x3e8ba305
 8014b38:	3edb6db7 	.word	0x3edb6db7
 8014b3c:	3f19999a 	.word	0x3f19999a
 8014b40:	08019a90 	.word	0x08019a90
 8014b44:	3f76384f 	.word	0x3f76384f
 8014b48:	3f763800 	.word	0x3f763800
 8014b4c:	369dc3a0 	.word	0x369dc3a0
 8014b50:	08019a98 	.word	0x08019a98
 8014b54:	3338aa3c 	.word	0x3338aa3c
 8014b58:	43160000 	.word	0x43160000
 8014b5c:	f1b3 5f7c 	cmp.w	r3, #1056964608	@ 0x3f000000
 8014b60:	d96f      	bls.n	8014c42 <__ieee754_powf+0x50a>
 8014b62:	15db      	asrs	r3, r3, #23
 8014b64:	3b7e      	subs	r3, #126	@ 0x7e
 8014b66:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8014b6a:	4118      	asrs	r0, r3
 8014b6c:	4408      	add	r0, r1
 8014b6e:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8014b72:	4a4e      	ldr	r2, [pc, #312]	@ (8014cac <__ieee754_powf+0x574>)
 8014b74:	3b7f      	subs	r3, #127	@ 0x7f
 8014b76:	411a      	asrs	r2, r3
 8014b78:	4002      	ands	r2, r0
 8014b7a:	ee07 2a10 	vmov	s14, r2
 8014b7e:	f3c0 0016 	ubfx	r0, r0, #0, #23
 8014b82:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8014b86:	f1c3 0317 	rsb	r3, r3, #23
 8014b8a:	4118      	asrs	r0, r3
 8014b8c:	2900      	cmp	r1, #0
 8014b8e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014b92:	bfb8      	it	lt
 8014b94:	4240      	neglt	r0, r0
 8014b96:	ee77 6aa0 	vadd.f32	s13, s15, s1
 8014b9a:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8014cb0 <__ieee754_powf+0x578>
 8014b9e:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8014cb4 <__ieee754_powf+0x57c>
 8014ba2:	ee16 3a90 	vmov	r3, s13
 8014ba6:	f36f 030b 	bfc	r3, #0, #12
 8014baa:	ee06 3a90 	vmov	s13, r3
 8014bae:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8014bb2:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014bb6:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8014bba:	eddf 7a3f 	vldr	s15, [pc, #252]	@ 8014cb8 <__ieee754_powf+0x580>
 8014bbe:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8014bc2:	eee0 7a87 	vfma.f32	s15, s1, s14
 8014bc6:	eeb0 7a67 	vmov.f32	s14, s15
 8014bca:	eea6 7a86 	vfma.f32	s14, s13, s12
 8014bce:	eef0 5a47 	vmov.f32	s11, s14
 8014bd2:	eee6 5ac6 	vfms.f32	s11, s13, s12
 8014bd6:	ee67 6a07 	vmul.f32	s13, s14, s14
 8014bda:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8014bde:	ed9f 6a37 	vldr	s12, [pc, #220]	@ 8014cbc <__ieee754_powf+0x584>
 8014be2:	eddf 5a37 	vldr	s11, [pc, #220]	@ 8014cc0 <__ieee754_powf+0x588>
 8014be6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014bea:	eddf 5a36 	vldr	s11, [pc, #216]	@ 8014cc4 <__ieee754_powf+0x58c>
 8014bee:	eee6 5a26 	vfma.f32	s11, s12, s13
 8014bf2:	ed9f 6a35 	vldr	s12, [pc, #212]	@ 8014cc8 <__ieee754_powf+0x590>
 8014bf6:	eea5 6aa6 	vfma.f32	s12, s11, s13
 8014bfa:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8014ccc <__ieee754_powf+0x594>
 8014bfe:	eee6 5a26 	vfma.f32	s11, s12, s13
 8014c02:	eeb0 6a47 	vmov.f32	s12, s14
 8014c06:	eea5 6ae6 	vfms.f32	s12, s11, s13
 8014c0a:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8014c0e:	ee67 5a06 	vmul.f32	s11, s14, s12
 8014c12:	ee36 6a66 	vsub.f32	s12, s12, s13
 8014c16:	eee7 7a27 	vfma.f32	s15, s14, s15
 8014c1a:	eec5 6a86 	vdiv.f32	s13, s11, s12
 8014c1e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8014c22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014c26:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014c2a:	ee10 3a10 	vmov	r3, s0
 8014c2e:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 8014c32:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8014c36:	da06      	bge.n	8014c46 <__ieee754_powf+0x50e>
 8014c38:	f000 f854 	bl	8014ce4 <scalbnf>
 8014c3c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8014c40:	e592      	b.n	8014768 <__ieee754_powf+0x30>
 8014c42:	2000      	movs	r0, #0
 8014c44:	e7a7      	b.n	8014b96 <__ieee754_powf+0x45e>
 8014c46:	ee00 3a10 	vmov	s0, r3
 8014c4a:	e7f7      	b.n	8014c3c <__ieee754_powf+0x504>
 8014c4c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014c50:	e58a      	b.n	8014768 <__ieee754_powf+0x30>
 8014c52:	ed9f 0a1f 	vldr	s0, [pc, #124]	@ 8014cd0 <__ieee754_powf+0x598>
 8014c56:	e587      	b.n	8014768 <__ieee754_powf+0x30>
 8014c58:	eeb0 0a48 	vmov.f32	s0, s16
 8014c5c:	e584      	b.n	8014768 <__ieee754_powf+0x30>
 8014c5e:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 8014c62:	f43f adbb 	beq.w	80147dc <__ieee754_powf+0xa4>
 8014c66:	2502      	movs	r5, #2
 8014c68:	eeb0 0a48 	vmov.f32	s0, s16
 8014c6c:	f000 f832 	bl	8014cd4 <fabsf>
 8014c70:	f026 4340 	bic.w	r3, r6, #3221225472	@ 0xc0000000
 8014c74:	f1b3 5f7e 	cmp.w	r3, #1065353216	@ 0x3f800000
 8014c78:	4647      	mov	r7, r8
 8014c7a:	d003      	beq.n	8014c84 <__ieee754_powf+0x54c>
 8014c7c:	f1b8 0f00 	cmp.w	r8, #0
 8014c80:	f47f addb 	bne.w	801483a <__ieee754_powf+0x102>
 8014c84:	2c00      	cmp	r4, #0
 8014c86:	bfbc      	itt	lt
 8014c88:	eef7 7a00 	vmovlt.f32	s15, #112	@ 0x3f800000  1.0
 8014c8c:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 8014c90:	2e00      	cmp	r6, #0
 8014c92:	f6bf ad69 	bge.w	8014768 <__ieee754_powf+0x30>
 8014c96:	f1a8 587e 	sub.w	r8, r8, #1065353216	@ 0x3f800000
 8014c9a:	ea58 0805 	orrs.w	r8, r8, r5
 8014c9e:	f47f adc7 	bne.w	8014830 <__ieee754_powf+0xf8>
 8014ca2:	ee70 7a40 	vsub.f32	s15, s0, s0
 8014ca6:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8014caa:	e55d      	b.n	8014768 <__ieee754_powf+0x30>
 8014cac:	ff800000 	.word	0xff800000
 8014cb0:	3f317218 	.word	0x3f317218
 8014cb4:	3f317200 	.word	0x3f317200
 8014cb8:	35bfbe8c 	.word	0x35bfbe8c
 8014cbc:	b5ddea0e 	.word	0xb5ddea0e
 8014cc0:	3331bb4c 	.word	0x3331bb4c
 8014cc4:	388ab355 	.word	0x388ab355
 8014cc8:	bb360b61 	.word	0xbb360b61
 8014ccc:	3e2aaaab 	.word	0x3e2aaaab
 8014cd0:	00000000 	.word	0x00000000

08014cd4 <fabsf>:
 8014cd4:	ee10 3a10 	vmov	r3, s0
 8014cd8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8014cdc:	ee00 3a10 	vmov	s0, r3
 8014ce0:	4770      	bx	lr
	...

08014ce4 <scalbnf>:
 8014ce4:	ee10 3a10 	vmov	r3, s0
 8014ce8:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8014cec:	d02b      	beq.n	8014d46 <scalbnf+0x62>
 8014cee:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8014cf2:	d302      	bcc.n	8014cfa <scalbnf+0x16>
 8014cf4:	ee30 0a00 	vadd.f32	s0, s0, s0
 8014cf8:	4770      	bx	lr
 8014cfa:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8014cfe:	d123      	bne.n	8014d48 <scalbnf+0x64>
 8014d00:	4b24      	ldr	r3, [pc, #144]	@ (8014d94 <scalbnf+0xb0>)
 8014d02:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8014d98 <scalbnf+0xb4>
 8014d06:	4298      	cmp	r0, r3
 8014d08:	ee20 0a27 	vmul.f32	s0, s0, s15
 8014d0c:	db17      	blt.n	8014d3e <scalbnf+0x5a>
 8014d0e:	ee10 3a10 	vmov	r3, s0
 8014d12:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8014d16:	3a19      	subs	r2, #25
 8014d18:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8014d1c:	4288      	cmp	r0, r1
 8014d1e:	dd15      	ble.n	8014d4c <scalbnf+0x68>
 8014d20:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8014d9c <scalbnf+0xb8>
 8014d24:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8014da0 <scalbnf+0xbc>
 8014d28:	ee10 3a10 	vmov	r3, s0
 8014d2c:	eeb0 7a67 	vmov.f32	s14, s15
 8014d30:	2b00      	cmp	r3, #0
 8014d32:	bfb8      	it	lt
 8014d34:	eef0 7a66 	vmovlt.f32	s15, s13
 8014d38:	ee27 0a87 	vmul.f32	s0, s15, s14
 8014d3c:	4770      	bx	lr
 8014d3e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8014da4 <scalbnf+0xc0>
 8014d42:	ee27 0a80 	vmul.f32	s0, s15, s0
 8014d46:	4770      	bx	lr
 8014d48:	0dd2      	lsrs	r2, r2, #23
 8014d4a:	e7e5      	b.n	8014d18 <scalbnf+0x34>
 8014d4c:	4410      	add	r0, r2
 8014d4e:	28fe      	cmp	r0, #254	@ 0xfe
 8014d50:	dce6      	bgt.n	8014d20 <scalbnf+0x3c>
 8014d52:	2800      	cmp	r0, #0
 8014d54:	dd06      	ble.n	8014d64 <scalbnf+0x80>
 8014d56:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8014d5a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8014d5e:	ee00 3a10 	vmov	s0, r3
 8014d62:	4770      	bx	lr
 8014d64:	f110 0f16 	cmn.w	r0, #22
 8014d68:	da09      	bge.n	8014d7e <scalbnf+0x9a>
 8014d6a:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8014da4 <scalbnf+0xc0>
 8014d6e:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8014da8 <scalbnf+0xc4>
 8014d72:	ee10 3a10 	vmov	r3, s0
 8014d76:	eeb0 7a67 	vmov.f32	s14, s15
 8014d7a:	2b00      	cmp	r3, #0
 8014d7c:	e7d9      	b.n	8014d32 <scalbnf+0x4e>
 8014d7e:	3019      	adds	r0, #25
 8014d80:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8014d84:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8014d88:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8014dac <scalbnf+0xc8>
 8014d8c:	ee07 3a90 	vmov	s15, r3
 8014d90:	e7d7      	b.n	8014d42 <scalbnf+0x5e>
 8014d92:	bf00      	nop
 8014d94:	ffff3cb0 	.word	0xffff3cb0
 8014d98:	4c000000 	.word	0x4c000000
 8014d9c:	7149f2ca 	.word	0x7149f2ca
 8014da0:	f149f2ca 	.word	0xf149f2ca
 8014da4:	0da24260 	.word	0x0da24260
 8014da8:	8da24260 	.word	0x8da24260
 8014dac:	33000000 	.word	0x33000000

08014db0 <with_errnof>:
 8014db0:	b510      	push	{r4, lr}
 8014db2:	ed2d 8b02 	vpush	{d8}
 8014db6:	eeb0 8a40 	vmov.f32	s16, s0
 8014dba:	4604      	mov	r4, r0
 8014dbc:	f7fb fa6e 	bl	801029c <__errno>
 8014dc0:	eeb0 0a48 	vmov.f32	s0, s16
 8014dc4:	ecbd 8b02 	vpop	{d8}
 8014dc8:	6004      	str	r4, [r0, #0]
 8014dca:	bd10      	pop	{r4, pc}

08014dcc <xflowf>:
 8014dcc:	b130      	cbz	r0, 8014ddc <xflowf+0x10>
 8014dce:	eef1 7a40 	vneg.f32	s15, s0
 8014dd2:	ee27 0a80 	vmul.f32	s0, s15, s0
 8014dd6:	2022      	movs	r0, #34	@ 0x22
 8014dd8:	f7ff bfea 	b.w	8014db0 <with_errnof>
 8014ddc:	eef0 7a40 	vmov.f32	s15, s0
 8014de0:	e7f7      	b.n	8014dd2 <xflowf+0x6>
	...

08014de4 <__math_uflowf>:
 8014de4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8014dec <__math_uflowf+0x8>
 8014de8:	f7ff bff0 	b.w	8014dcc <xflowf>
 8014dec:	10000000 	.word	0x10000000

08014df0 <__math_oflowf>:
 8014df0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8014df8 <__math_oflowf+0x8>
 8014df4:	f7ff bfea 	b.w	8014dcc <xflowf>
 8014df8:	70000000 	.word	0x70000000

08014dfc <__ieee754_sqrtf>:
 8014dfc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8014e00:	4770      	bx	lr
 8014e02:	0000      	movs	r0, r0
 8014e04:	0000      	movs	r0, r0
	...

08014e08 <__kernel_rem_pio2>:
 8014e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e0c:	ed2d 8b02 	vpush	{d8}
 8014e10:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 8014e14:	f112 0f14 	cmn.w	r2, #20
 8014e18:	9306      	str	r3, [sp, #24]
 8014e1a:	9104      	str	r1, [sp, #16]
 8014e1c:	4bc2      	ldr	r3, [pc, #776]	@ (8015128 <__kernel_rem_pio2+0x320>)
 8014e1e:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 8014e20:	9008      	str	r0, [sp, #32]
 8014e22:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8014e26:	9300      	str	r3, [sp, #0]
 8014e28:	9b06      	ldr	r3, [sp, #24]
 8014e2a:	f103 33ff 	add.w	r3, r3, #4294967295
 8014e2e:	bfa8      	it	ge
 8014e30:	1ed4      	subge	r4, r2, #3
 8014e32:	9305      	str	r3, [sp, #20]
 8014e34:	bfb2      	itee	lt
 8014e36:	2400      	movlt	r4, #0
 8014e38:	2318      	movge	r3, #24
 8014e3a:	fb94 f4f3 	sdivge	r4, r4, r3
 8014e3e:	f06f 0317 	mvn.w	r3, #23
 8014e42:	fb04 3303 	mla	r3, r4, r3, r3
 8014e46:	eb03 0b02 	add.w	fp, r3, r2
 8014e4a:	9b00      	ldr	r3, [sp, #0]
 8014e4c:	9a05      	ldr	r2, [sp, #20]
 8014e4e:	ed9f 8bb2 	vldr	d8, [pc, #712]	@ 8015118 <__kernel_rem_pio2+0x310>
 8014e52:	eb03 0802 	add.w	r8, r3, r2
 8014e56:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8014e58:	1aa7      	subs	r7, r4, r2
 8014e5a:	ae20      	add	r6, sp, #128	@ 0x80
 8014e5c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8014e60:	2500      	movs	r5, #0
 8014e62:	4545      	cmp	r5, r8
 8014e64:	dd12      	ble.n	8014e8c <__kernel_rem_pio2+0x84>
 8014e66:	9b06      	ldr	r3, [sp, #24]
 8014e68:	aa20      	add	r2, sp, #128	@ 0x80
 8014e6a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8014e6e:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8014e72:	2700      	movs	r7, #0
 8014e74:	9b00      	ldr	r3, [sp, #0]
 8014e76:	429f      	cmp	r7, r3
 8014e78:	dc2e      	bgt.n	8014ed8 <__kernel_rem_pio2+0xd0>
 8014e7a:	ed9f 7ba7 	vldr	d7, [pc, #668]	@ 8015118 <__kernel_rem_pio2+0x310>
 8014e7e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8014e82:	ed8d 7b02 	vstr	d7, [sp, #8]
 8014e86:	46a8      	mov	r8, r5
 8014e88:	2600      	movs	r6, #0
 8014e8a:	e01b      	b.n	8014ec4 <__kernel_rem_pio2+0xbc>
 8014e8c:	42ef      	cmn	r7, r5
 8014e8e:	d407      	bmi.n	8014ea0 <__kernel_rem_pio2+0x98>
 8014e90:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8014e94:	f7eb fb1e 	bl	80004d4 <__aeabi_i2d>
 8014e98:	e8e6 0102 	strd	r0, r1, [r6], #8
 8014e9c:	3501      	adds	r5, #1
 8014e9e:	e7e0      	b.n	8014e62 <__kernel_rem_pio2+0x5a>
 8014ea0:	ec51 0b18 	vmov	r0, r1, d8
 8014ea4:	e7f8      	b.n	8014e98 <__kernel_rem_pio2+0x90>
 8014ea6:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
 8014eaa:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8014eae:	f7eb fb7b 	bl	80005a8 <__aeabi_dmul>
 8014eb2:	4602      	mov	r2, r0
 8014eb4:	460b      	mov	r3, r1
 8014eb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014eba:	f7eb f9bf 	bl	800023c <__adddf3>
 8014ebe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8014ec2:	3601      	adds	r6, #1
 8014ec4:	9b05      	ldr	r3, [sp, #20]
 8014ec6:	429e      	cmp	r6, r3
 8014ec8:	dded      	ble.n	8014ea6 <__kernel_rem_pio2+0x9e>
 8014eca:	ed9d 7b02 	vldr	d7, [sp, #8]
 8014ece:	3701      	adds	r7, #1
 8014ed0:	ecaa 7b02 	vstmia	sl!, {d7}
 8014ed4:	3508      	adds	r5, #8
 8014ed6:	e7cd      	b.n	8014e74 <__kernel_rem_pio2+0x6c>
 8014ed8:	9b00      	ldr	r3, [sp, #0]
 8014eda:	f8dd 8000 	ldr.w	r8, [sp]
 8014ede:	aa0c      	add	r2, sp, #48	@ 0x30
 8014ee0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014ee4:	930a      	str	r3, [sp, #40]	@ 0x28
 8014ee6:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8014ee8:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8014eec:	9309      	str	r3, [sp, #36]	@ 0x24
 8014eee:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8014ef2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014ef4:	ab98      	add	r3, sp, #608	@ 0x260
 8014ef6:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8014efa:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 8014efe:	ed8d 7b02 	vstr	d7, [sp, #8]
 8014f02:	ac0c      	add	r4, sp, #48	@ 0x30
 8014f04:	ab70      	add	r3, sp, #448	@ 0x1c0
 8014f06:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 8014f0a:	46a1      	mov	r9, r4
 8014f0c:	46c2      	mov	sl, r8
 8014f0e:	f1ba 0f00 	cmp.w	sl, #0
 8014f12:	dc77      	bgt.n	8015004 <__kernel_rem_pio2+0x1fc>
 8014f14:	4658      	mov	r0, fp
 8014f16:	ed9d 0b02 	vldr	d0, [sp, #8]
 8014f1a:	f000 fd21 	bl	8015960 <scalbn>
 8014f1e:	ec57 6b10 	vmov	r6, r7, d0
 8014f22:	2200      	movs	r2, #0
 8014f24:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 8014f28:	4630      	mov	r0, r6
 8014f2a:	4639      	mov	r1, r7
 8014f2c:	f7eb fb3c 	bl	80005a8 <__aeabi_dmul>
 8014f30:	ec41 0b10 	vmov	d0, r0, r1
 8014f34:	f7fe fe10 	bl	8013b58 <floor>
 8014f38:	4b7c      	ldr	r3, [pc, #496]	@ (801512c <__kernel_rem_pio2+0x324>)
 8014f3a:	ec51 0b10 	vmov	r0, r1, d0
 8014f3e:	2200      	movs	r2, #0
 8014f40:	f7eb fb32 	bl	80005a8 <__aeabi_dmul>
 8014f44:	4602      	mov	r2, r0
 8014f46:	460b      	mov	r3, r1
 8014f48:	4630      	mov	r0, r6
 8014f4a:	4639      	mov	r1, r7
 8014f4c:	f7eb f974 	bl	8000238 <__aeabi_dsub>
 8014f50:	460f      	mov	r7, r1
 8014f52:	4606      	mov	r6, r0
 8014f54:	f7eb fdd8 	bl	8000b08 <__aeabi_d2iz>
 8014f58:	9002      	str	r0, [sp, #8]
 8014f5a:	f7eb fabb 	bl	80004d4 <__aeabi_i2d>
 8014f5e:	4602      	mov	r2, r0
 8014f60:	460b      	mov	r3, r1
 8014f62:	4630      	mov	r0, r6
 8014f64:	4639      	mov	r1, r7
 8014f66:	f7eb f967 	bl	8000238 <__aeabi_dsub>
 8014f6a:	f1bb 0f00 	cmp.w	fp, #0
 8014f6e:	4606      	mov	r6, r0
 8014f70:	460f      	mov	r7, r1
 8014f72:	dd6c      	ble.n	801504e <__kernel_rem_pio2+0x246>
 8014f74:	f108 31ff 	add.w	r1, r8, #4294967295
 8014f78:	ab0c      	add	r3, sp, #48	@ 0x30
 8014f7a:	9d02      	ldr	r5, [sp, #8]
 8014f7c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8014f80:	f1cb 0018 	rsb	r0, fp, #24
 8014f84:	fa43 f200 	asr.w	r2, r3, r0
 8014f88:	4415      	add	r5, r2
 8014f8a:	4082      	lsls	r2, r0
 8014f8c:	1a9b      	subs	r3, r3, r2
 8014f8e:	aa0c      	add	r2, sp, #48	@ 0x30
 8014f90:	9502      	str	r5, [sp, #8]
 8014f92:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8014f96:	f1cb 0217 	rsb	r2, fp, #23
 8014f9a:	fa43 f902 	asr.w	r9, r3, r2
 8014f9e:	f1b9 0f00 	cmp.w	r9, #0
 8014fa2:	dd64      	ble.n	801506e <__kernel_rem_pio2+0x266>
 8014fa4:	9b02      	ldr	r3, [sp, #8]
 8014fa6:	2200      	movs	r2, #0
 8014fa8:	3301      	adds	r3, #1
 8014faa:	9302      	str	r3, [sp, #8]
 8014fac:	4615      	mov	r5, r2
 8014fae:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 8014fb2:	4590      	cmp	r8, r2
 8014fb4:	f300 80a1 	bgt.w	80150fa <__kernel_rem_pio2+0x2f2>
 8014fb8:	f1bb 0f00 	cmp.w	fp, #0
 8014fbc:	dd07      	ble.n	8014fce <__kernel_rem_pio2+0x1c6>
 8014fbe:	f1bb 0f01 	cmp.w	fp, #1
 8014fc2:	f000 80c1 	beq.w	8015148 <__kernel_rem_pio2+0x340>
 8014fc6:	f1bb 0f02 	cmp.w	fp, #2
 8014fca:	f000 80c8 	beq.w	801515e <__kernel_rem_pio2+0x356>
 8014fce:	f1b9 0f02 	cmp.w	r9, #2
 8014fd2:	d14c      	bne.n	801506e <__kernel_rem_pio2+0x266>
 8014fd4:	4632      	mov	r2, r6
 8014fd6:	463b      	mov	r3, r7
 8014fd8:	4955      	ldr	r1, [pc, #340]	@ (8015130 <__kernel_rem_pio2+0x328>)
 8014fda:	2000      	movs	r0, #0
 8014fdc:	f7eb f92c 	bl	8000238 <__aeabi_dsub>
 8014fe0:	4606      	mov	r6, r0
 8014fe2:	460f      	mov	r7, r1
 8014fe4:	2d00      	cmp	r5, #0
 8014fe6:	d042      	beq.n	801506e <__kernel_rem_pio2+0x266>
 8014fe8:	4658      	mov	r0, fp
 8014fea:	ed9f 0b4d 	vldr	d0, [pc, #308]	@ 8015120 <__kernel_rem_pio2+0x318>
 8014fee:	f000 fcb7 	bl	8015960 <scalbn>
 8014ff2:	4630      	mov	r0, r6
 8014ff4:	4639      	mov	r1, r7
 8014ff6:	ec53 2b10 	vmov	r2, r3, d0
 8014ffa:	f7eb f91d 	bl	8000238 <__aeabi_dsub>
 8014ffe:	4606      	mov	r6, r0
 8015000:	460f      	mov	r7, r1
 8015002:	e034      	b.n	801506e <__kernel_rem_pio2+0x266>
 8015004:	4b4b      	ldr	r3, [pc, #300]	@ (8015134 <__kernel_rem_pio2+0x32c>)
 8015006:	2200      	movs	r2, #0
 8015008:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801500c:	f7eb facc 	bl	80005a8 <__aeabi_dmul>
 8015010:	f7eb fd7a 	bl	8000b08 <__aeabi_d2iz>
 8015014:	f7eb fa5e 	bl	80004d4 <__aeabi_i2d>
 8015018:	4b47      	ldr	r3, [pc, #284]	@ (8015138 <__kernel_rem_pio2+0x330>)
 801501a:	2200      	movs	r2, #0
 801501c:	4606      	mov	r6, r0
 801501e:	460f      	mov	r7, r1
 8015020:	f7eb fac2 	bl	80005a8 <__aeabi_dmul>
 8015024:	4602      	mov	r2, r0
 8015026:	460b      	mov	r3, r1
 8015028:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801502c:	f7eb f904 	bl	8000238 <__aeabi_dsub>
 8015030:	f7eb fd6a 	bl	8000b08 <__aeabi_d2iz>
 8015034:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8015038:	f849 0b04 	str.w	r0, [r9], #4
 801503c:	4639      	mov	r1, r7
 801503e:	4630      	mov	r0, r6
 8015040:	f7eb f8fc 	bl	800023c <__adddf3>
 8015044:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015048:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801504c:	e75f      	b.n	8014f0e <__kernel_rem_pio2+0x106>
 801504e:	d107      	bne.n	8015060 <__kernel_rem_pio2+0x258>
 8015050:	f108 33ff 	add.w	r3, r8, #4294967295
 8015054:	aa0c      	add	r2, sp, #48	@ 0x30
 8015056:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801505a:	ea4f 59e3 	mov.w	r9, r3, asr #23
 801505e:	e79e      	b.n	8014f9e <__kernel_rem_pio2+0x196>
 8015060:	4b36      	ldr	r3, [pc, #216]	@ (801513c <__kernel_rem_pio2+0x334>)
 8015062:	2200      	movs	r2, #0
 8015064:	f7eb fd26 	bl	8000ab4 <__aeabi_dcmpge>
 8015068:	2800      	cmp	r0, #0
 801506a:	d143      	bne.n	80150f4 <__kernel_rem_pio2+0x2ec>
 801506c:	4681      	mov	r9, r0
 801506e:	2200      	movs	r2, #0
 8015070:	2300      	movs	r3, #0
 8015072:	4630      	mov	r0, r6
 8015074:	4639      	mov	r1, r7
 8015076:	f7eb fcff 	bl	8000a78 <__aeabi_dcmpeq>
 801507a:	2800      	cmp	r0, #0
 801507c:	f000 80c1 	beq.w	8015202 <__kernel_rem_pio2+0x3fa>
 8015080:	f108 33ff 	add.w	r3, r8, #4294967295
 8015084:	2200      	movs	r2, #0
 8015086:	9900      	ldr	r1, [sp, #0]
 8015088:	428b      	cmp	r3, r1
 801508a:	da70      	bge.n	801516e <__kernel_rem_pio2+0x366>
 801508c:	2a00      	cmp	r2, #0
 801508e:	f000 808b 	beq.w	80151a8 <__kernel_rem_pio2+0x3a0>
 8015092:	f108 38ff 	add.w	r8, r8, #4294967295
 8015096:	ab0c      	add	r3, sp, #48	@ 0x30
 8015098:	f1ab 0b18 	sub.w	fp, fp, #24
 801509c:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 80150a0:	2b00      	cmp	r3, #0
 80150a2:	d0f6      	beq.n	8015092 <__kernel_rem_pio2+0x28a>
 80150a4:	4658      	mov	r0, fp
 80150a6:	ed9f 0b1e 	vldr	d0, [pc, #120]	@ 8015120 <__kernel_rem_pio2+0x318>
 80150aa:	f000 fc59 	bl	8015960 <scalbn>
 80150ae:	f108 0301 	add.w	r3, r8, #1
 80150b2:	00da      	lsls	r2, r3, #3
 80150b4:	9205      	str	r2, [sp, #20]
 80150b6:	ec55 4b10 	vmov	r4, r5, d0
 80150ba:	aa70      	add	r2, sp, #448	@ 0x1c0
 80150bc:	f8df b074 	ldr.w	fp, [pc, #116]	@ 8015134 <__kernel_rem_pio2+0x32c>
 80150c0:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 80150c4:	4646      	mov	r6, r8
 80150c6:	f04f 0a00 	mov.w	sl, #0
 80150ca:	2e00      	cmp	r6, #0
 80150cc:	f280 80d1 	bge.w	8015272 <__kernel_rem_pio2+0x46a>
 80150d0:	4644      	mov	r4, r8
 80150d2:	2c00      	cmp	r4, #0
 80150d4:	f2c0 80ff 	blt.w	80152d6 <__kernel_rem_pio2+0x4ce>
 80150d8:	4b19      	ldr	r3, [pc, #100]	@ (8015140 <__kernel_rem_pio2+0x338>)
 80150da:	461f      	mov	r7, r3
 80150dc:	ab70      	add	r3, sp, #448	@ 0x1c0
 80150de:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80150e2:	9306      	str	r3, [sp, #24]
 80150e4:	f04f 0a00 	mov.w	sl, #0
 80150e8:	f04f 0b00 	mov.w	fp, #0
 80150ec:	2600      	movs	r6, #0
 80150ee:	eba8 0504 	sub.w	r5, r8, r4
 80150f2:	e0e4      	b.n	80152be <__kernel_rem_pio2+0x4b6>
 80150f4:	f04f 0902 	mov.w	r9, #2
 80150f8:	e754      	b.n	8014fa4 <__kernel_rem_pio2+0x19c>
 80150fa:	f854 3b04 	ldr.w	r3, [r4], #4
 80150fe:	bb0d      	cbnz	r5, 8015144 <__kernel_rem_pio2+0x33c>
 8015100:	b123      	cbz	r3, 801510c <__kernel_rem_pio2+0x304>
 8015102:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8015106:	f844 3c04 	str.w	r3, [r4, #-4]
 801510a:	2301      	movs	r3, #1
 801510c:	3201      	adds	r2, #1
 801510e:	461d      	mov	r5, r3
 8015110:	e74f      	b.n	8014fb2 <__kernel_rem_pio2+0x1aa>
 8015112:	bf00      	nop
 8015114:	f3af 8000 	nop.w
	...
 8015124:	3ff00000 	.word	0x3ff00000
 8015128:	08019ae8 	.word	0x08019ae8
 801512c:	40200000 	.word	0x40200000
 8015130:	3ff00000 	.word	0x3ff00000
 8015134:	3e700000 	.word	0x3e700000
 8015138:	41700000 	.word	0x41700000
 801513c:	3fe00000 	.word	0x3fe00000
 8015140:	08019aa8 	.word	0x08019aa8
 8015144:	1acb      	subs	r3, r1, r3
 8015146:	e7de      	b.n	8015106 <__kernel_rem_pio2+0x2fe>
 8015148:	f108 32ff 	add.w	r2, r8, #4294967295
 801514c:	ab0c      	add	r3, sp, #48	@ 0x30
 801514e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015152:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8015156:	a90c      	add	r1, sp, #48	@ 0x30
 8015158:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 801515c:	e737      	b.n	8014fce <__kernel_rem_pio2+0x1c6>
 801515e:	f108 32ff 	add.w	r2, r8, #4294967295
 8015162:	ab0c      	add	r3, sp, #48	@ 0x30
 8015164:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015168:	f3c3 0315 	ubfx	r3, r3, #0, #22
 801516c:	e7f3      	b.n	8015156 <__kernel_rem_pio2+0x34e>
 801516e:	a90c      	add	r1, sp, #48	@ 0x30
 8015170:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8015174:	3b01      	subs	r3, #1
 8015176:	430a      	orrs	r2, r1
 8015178:	e785      	b.n	8015086 <__kernel_rem_pio2+0x27e>
 801517a:	3401      	adds	r4, #1
 801517c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8015180:	2a00      	cmp	r2, #0
 8015182:	d0fa      	beq.n	801517a <__kernel_rem_pio2+0x372>
 8015184:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015186:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 801518a:	eb0d 0503 	add.w	r5, sp, r3
 801518e:	9b06      	ldr	r3, [sp, #24]
 8015190:	aa20      	add	r2, sp, #128	@ 0x80
 8015192:	4443      	add	r3, r8
 8015194:	f108 0701 	add.w	r7, r8, #1
 8015198:	3d98      	subs	r5, #152	@ 0x98
 801519a:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 801519e:	4444      	add	r4, r8
 80151a0:	42bc      	cmp	r4, r7
 80151a2:	da04      	bge.n	80151ae <__kernel_rem_pio2+0x3a6>
 80151a4:	46a0      	mov	r8, r4
 80151a6:	e6a2      	b.n	8014eee <__kernel_rem_pio2+0xe6>
 80151a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80151aa:	2401      	movs	r4, #1
 80151ac:	e7e6      	b.n	801517c <__kernel_rem_pio2+0x374>
 80151ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80151b0:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80151b4:	f7eb f98e 	bl	80004d4 <__aeabi_i2d>
 80151b8:	ed9f 7baf 	vldr	d7, [pc, #700]	@ 8015478 <__kernel_rem_pio2+0x670>
 80151bc:	e8e6 0102 	strd	r0, r1, [r6], #8
 80151c0:	ed8d 7b02 	vstr	d7, [sp, #8]
 80151c4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80151c8:	46b2      	mov	sl, r6
 80151ca:	f04f 0800 	mov.w	r8, #0
 80151ce:	9b05      	ldr	r3, [sp, #20]
 80151d0:	4598      	cmp	r8, r3
 80151d2:	dd05      	ble.n	80151e0 <__kernel_rem_pio2+0x3d8>
 80151d4:	ed9d 7b02 	vldr	d7, [sp, #8]
 80151d8:	3701      	adds	r7, #1
 80151da:	eca5 7b02 	vstmia	r5!, {d7}
 80151de:	e7df      	b.n	80151a0 <__kernel_rem_pio2+0x398>
 80151e0:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 80151e4:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 80151e8:	f7eb f9de 	bl	80005a8 <__aeabi_dmul>
 80151ec:	4602      	mov	r2, r0
 80151ee:	460b      	mov	r3, r1
 80151f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80151f4:	f7eb f822 	bl	800023c <__adddf3>
 80151f8:	f108 0801 	add.w	r8, r8, #1
 80151fc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8015200:	e7e5      	b.n	80151ce <__kernel_rem_pio2+0x3c6>
 8015202:	f1cb 0000 	rsb	r0, fp, #0
 8015206:	ec47 6b10 	vmov	d0, r6, r7
 801520a:	f000 fba9 	bl	8015960 <scalbn>
 801520e:	ec55 4b10 	vmov	r4, r5, d0
 8015212:	4b9b      	ldr	r3, [pc, #620]	@ (8015480 <__kernel_rem_pio2+0x678>)
 8015214:	2200      	movs	r2, #0
 8015216:	4620      	mov	r0, r4
 8015218:	4629      	mov	r1, r5
 801521a:	f7eb fc4b 	bl	8000ab4 <__aeabi_dcmpge>
 801521e:	b300      	cbz	r0, 8015262 <__kernel_rem_pio2+0x45a>
 8015220:	4b98      	ldr	r3, [pc, #608]	@ (8015484 <__kernel_rem_pio2+0x67c>)
 8015222:	2200      	movs	r2, #0
 8015224:	4620      	mov	r0, r4
 8015226:	4629      	mov	r1, r5
 8015228:	f7eb f9be 	bl	80005a8 <__aeabi_dmul>
 801522c:	f7eb fc6c 	bl	8000b08 <__aeabi_d2iz>
 8015230:	4606      	mov	r6, r0
 8015232:	f7eb f94f 	bl	80004d4 <__aeabi_i2d>
 8015236:	4b92      	ldr	r3, [pc, #584]	@ (8015480 <__kernel_rem_pio2+0x678>)
 8015238:	2200      	movs	r2, #0
 801523a:	f7eb f9b5 	bl	80005a8 <__aeabi_dmul>
 801523e:	460b      	mov	r3, r1
 8015240:	4602      	mov	r2, r0
 8015242:	4629      	mov	r1, r5
 8015244:	4620      	mov	r0, r4
 8015246:	f7ea fff7 	bl	8000238 <__aeabi_dsub>
 801524a:	f7eb fc5d 	bl	8000b08 <__aeabi_d2iz>
 801524e:	ab0c      	add	r3, sp, #48	@ 0x30
 8015250:	f10b 0b18 	add.w	fp, fp, #24
 8015254:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8015258:	f108 0801 	add.w	r8, r8, #1
 801525c:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 8015260:	e720      	b.n	80150a4 <__kernel_rem_pio2+0x29c>
 8015262:	4620      	mov	r0, r4
 8015264:	4629      	mov	r1, r5
 8015266:	f7eb fc4f 	bl	8000b08 <__aeabi_d2iz>
 801526a:	ab0c      	add	r3, sp, #48	@ 0x30
 801526c:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8015270:	e718      	b.n	80150a4 <__kernel_rem_pio2+0x29c>
 8015272:	ab0c      	add	r3, sp, #48	@ 0x30
 8015274:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8015278:	f7eb f92c 	bl	80004d4 <__aeabi_i2d>
 801527c:	4622      	mov	r2, r4
 801527e:	462b      	mov	r3, r5
 8015280:	f7eb f992 	bl	80005a8 <__aeabi_dmul>
 8015284:	4652      	mov	r2, sl
 8015286:	e967 0102 	strd	r0, r1, [r7, #-8]!
 801528a:	465b      	mov	r3, fp
 801528c:	4620      	mov	r0, r4
 801528e:	4629      	mov	r1, r5
 8015290:	f7eb f98a 	bl	80005a8 <__aeabi_dmul>
 8015294:	3e01      	subs	r6, #1
 8015296:	4604      	mov	r4, r0
 8015298:	460d      	mov	r5, r1
 801529a:	e716      	b.n	80150ca <__kernel_rem_pio2+0x2c2>
 801529c:	9906      	ldr	r1, [sp, #24]
 801529e:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 80152a2:	9106      	str	r1, [sp, #24]
 80152a4:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 80152a8:	f7eb f97e 	bl	80005a8 <__aeabi_dmul>
 80152ac:	4602      	mov	r2, r0
 80152ae:	460b      	mov	r3, r1
 80152b0:	4650      	mov	r0, sl
 80152b2:	4659      	mov	r1, fp
 80152b4:	f7ea ffc2 	bl	800023c <__adddf3>
 80152b8:	3601      	adds	r6, #1
 80152ba:	4682      	mov	sl, r0
 80152bc:	468b      	mov	fp, r1
 80152be:	9b00      	ldr	r3, [sp, #0]
 80152c0:	429e      	cmp	r6, r3
 80152c2:	dc01      	bgt.n	80152c8 <__kernel_rem_pio2+0x4c0>
 80152c4:	42ae      	cmp	r6, r5
 80152c6:	dde9      	ble.n	801529c <__kernel_rem_pio2+0x494>
 80152c8:	ab48      	add	r3, sp, #288	@ 0x120
 80152ca:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80152ce:	e9c5 ab00 	strd	sl, fp, [r5]
 80152d2:	3c01      	subs	r4, #1
 80152d4:	e6fd      	b.n	80150d2 <__kernel_rem_pio2+0x2ca>
 80152d6:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 80152d8:	2b02      	cmp	r3, #2
 80152da:	dc0b      	bgt.n	80152f4 <__kernel_rem_pio2+0x4ec>
 80152dc:	2b00      	cmp	r3, #0
 80152de:	dc35      	bgt.n	801534c <__kernel_rem_pio2+0x544>
 80152e0:	d059      	beq.n	8015396 <__kernel_rem_pio2+0x58e>
 80152e2:	9b02      	ldr	r3, [sp, #8]
 80152e4:	f003 0007 	and.w	r0, r3, #7
 80152e8:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 80152ec:	ecbd 8b02 	vpop	{d8}
 80152f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152f4:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 80152f6:	2b03      	cmp	r3, #3
 80152f8:	d1f3      	bne.n	80152e2 <__kernel_rem_pio2+0x4da>
 80152fa:	9b05      	ldr	r3, [sp, #20]
 80152fc:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8015300:	eb0d 0403 	add.w	r4, sp, r3
 8015304:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8015308:	4625      	mov	r5, r4
 801530a:	46c2      	mov	sl, r8
 801530c:	f1ba 0f00 	cmp.w	sl, #0
 8015310:	dc69      	bgt.n	80153e6 <__kernel_rem_pio2+0x5de>
 8015312:	4645      	mov	r5, r8
 8015314:	2d01      	cmp	r5, #1
 8015316:	f300 8087 	bgt.w	8015428 <__kernel_rem_pio2+0x620>
 801531a:	9c05      	ldr	r4, [sp, #20]
 801531c:	ab48      	add	r3, sp, #288	@ 0x120
 801531e:	441c      	add	r4, r3
 8015320:	2000      	movs	r0, #0
 8015322:	2100      	movs	r1, #0
 8015324:	f1b8 0f01 	cmp.w	r8, #1
 8015328:	f300 809c 	bgt.w	8015464 <__kernel_rem_pio2+0x65c>
 801532c:	e9dd 5648 	ldrd	r5, r6, [sp, #288]	@ 0x120
 8015330:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	@ 0x128
 8015334:	f1b9 0f00 	cmp.w	r9, #0
 8015338:	f040 80a6 	bne.w	8015488 <__kernel_rem_pio2+0x680>
 801533c:	9b04      	ldr	r3, [sp, #16]
 801533e:	e9c3 5600 	strd	r5, r6, [r3]
 8015342:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8015346:	e9c3 0104 	strd	r0, r1, [r3, #16]
 801534a:	e7ca      	b.n	80152e2 <__kernel_rem_pio2+0x4da>
 801534c:	9d05      	ldr	r5, [sp, #20]
 801534e:	ab48      	add	r3, sp, #288	@ 0x120
 8015350:	441d      	add	r5, r3
 8015352:	4644      	mov	r4, r8
 8015354:	2000      	movs	r0, #0
 8015356:	2100      	movs	r1, #0
 8015358:	2c00      	cmp	r4, #0
 801535a:	da35      	bge.n	80153c8 <__kernel_rem_pio2+0x5c0>
 801535c:	f1b9 0f00 	cmp.w	r9, #0
 8015360:	d038      	beq.n	80153d4 <__kernel_rem_pio2+0x5cc>
 8015362:	4602      	mov	r2, r0
 8015364:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8015368:	9c04      	ldr	r4, [sp, #16]
 801536a:	e9c4 2300 	strd	r2, r3, [r4]
 801536e:	4602      	mov	r2, r0
 8015370:	460b      	mov	r3, r1
 8015372:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 8015376:	f7ea ff5f 	bl	8000238 <__aeabi_dsub>
 801537a:	ad4a      	add	r5, sp, #296	@ 0x128
 801537c:	2401      	movs	r4, #1
 801537e:	45a0      	cmp	r8, r4
 8015380:	da2b      	bge.n	80153da <__kernel_rem_pio2+0x5d2>
 8015382:	f1b9 0f00 	cmp.w	r9, #0
 8015386:	d002      	beq.n	801538e <__kernel_rem_pio2+0x586>
 8015388:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 801538c:	4619      	mov	r1, r3
 801538e:	9b04      	ldr	r3, [sp, #16]
 8015390:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8015394:	e7a5      	b.n	80152e2 <__kernel_rem_pio2+0x4da>
 8015396:	9c05      	ldr	r4, [sp, #20]
 8015398:	ab48      	add	r3, sp, #288	@ 0x120
 801539a:	441c      	add	r4, r3
 801539c:	2000      	movs	r0, #0
 801539e:	2100      	movs	r1, #0
 80153a0:	f1b8 0f00 	cmp.w	r8, #0
 80153a4:	da09      	bge.n	80153ba <__kernel_rem_pio2+0x5b2>
 80153a6:	f1b9 0f00 	cmp.w	r9, #0
 80153aa:	d002      	beq.n	80153b2 <__kernel_rem_pio2+0x5aa>
 80153ac:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80153b0:	4619      	mov	r1, r3
 80153b2:	9b04      	ldr	r3, [sp, #16]
 80153b4:	e9c3 0100 	strd	r0, r1, [r3]
 80153b8:	e793      	b.n	80152e2 <__kernel_rem_pio2+0x4da>
 80153ba:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80153be:	f7ea ff3d 	bl	800023c <__adddf3>
 80153c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80153c6:	e7eb      	b.n	80153a0 <__kernel_rem_pio2+0x598>
 80153c8:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 80153cc:	f7ea ff36 	bl	800023c <__adddf3>
 80153d0:	3c01      	subs	r4, #1
 80153d2:	e7c1      	b.n	8015358 <__kernel_rem_pio2+0x550>
 80153d4:	4602      	mov	r2, r0
 80153d6:	460b      	mov	r3, r1
 80153d8:	e7c6      	b.n	8015368 <__kernel_rem_pio2+0x560>
 80153da:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 80153de:	f7ea ff2d 	bl	800023c <__adddf3>
 80153e2:	3401      	adds	r4, #1
 80153e4:	e7cb      	b.n	801537e <__kernel_rem_pio2+0x576>
 80153e6:	ed35 7b02 	vldmdb	r5!, {d7}
 80153ea:	ed8d 7b00 	vstr	d7, [sp]
 80153ee:	ed95 7b02 	vldr	d7, [r5, #8]
 80153f2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80153f6:	ec53 2b17 	vmov	r2, r3, d7
 80153fa:	ed8d 7b06 	vstr	d7, [sp, #24]
 80153fe:	f7ea ff1d 	bl	800023c <__adddf3>
 8015402:	4602      	mov	r2, r0
 8015404:	460b      	mov	r3, r1
 8015406:	4606      	mov	r6, r0
 8015408:	460f      	mov	r7, r1
 801540a:	e9dd 0100 	ldrd	r0, r1, [sp]
 801540e:	f7ea ff13 	bl	8000238 <__aeabi_dsub>
 8015412:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015416:	f7ea ff11 	bl	800023c <__adddf3>
 801541a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801541e:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8015422:	e9c5 6700 	strd	r6, r7, [r5]
 8015426:	e771      	b.n	801530c <__kernel_rem_pio2+0x504>
 8015428:	ed34 7b02 	vldmdb	r4!, {d7}
 801542c:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 8015430:	ec51 0b17 	vmov	r0, r1, d7
 8015434:	4652      	mov	r2, sl
 8015436:	465b      	mov	r3, fp
 8015438:	ed8d 7b00 	vstr	d7, [sp]
 801543c:	f7ea fefe 	bl	800023c <__adddf3>
 8015440:	4602      	mov	r2, r0
 8015442:	460b      	mov	r3, r1
 8015444:	4606      	mov	r6, r0
 8015446:	460f      	mov	r7, r1
 8015448:	e9dd 0100 	ldrd	r0, r1, [sp]
 801544c:	f7ea fef4 	bl	8000238 <__aeabi_dsub>
 8015450:	4652      	mov	r2, sl
 8015452:	465b      	mov	r3, fp
 8015454:	f7ea fef2 	bl	800023c <__adddf3>
 8015458:	3d01      	subs	r5, #1
 801545a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 801545e:	e9c4 6700 	strd	r6, r7, [r4]
 8015462:	e757      	b.n	8015314 <__kernel_rem_pio2+0x50c>
 8015464:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8015468:	f7ea fee8 	bl	800023c <__adddf3>
 801546c:	f108 38ff 	add.w	r8, r8, #4294967295
 8015470:	e758      	b.n	8015324 <__kernel_rem_pio2+0x51c>
 8015472:	bf00      	nop
 8015474:	f3af 8000 	nop.w
	...
 8015480:	41700000 	.word	0x41700000
 8015484:	3e700000 	.word	0x3e700000
 8015488:	9b04      	ldr	r3, [sp, #16]
 801548a:	9a04      	ldr	r2, [sp, #16]
 801548c:	601d      	str	r5, [r3, #0]
 801548e:	f106 4400 	add.w	r4, r6, #2147483648	@ 0x80000000
 8015492:	605c      	str	r4, [r3, #4]
 8015494:	609f      	str	r7, [r3, #8]
 8015496:	f108 4300 	add.w	r3, r8, #2147483648	@ 0x80000000
 801549a:	60d3      	str	r3, [r2, #12]
 801549c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80154a0:	6110      	str	r0, [r2, #16]
 80154a2:	6153      	str	r3, [r2, #20]
 80154a4:	e71d      	b.n	80152e2 <__kernel_rem_pio2+0x4da>
 80154a6:	bf00      	nop

080154a8 <__ieee754_acos>:
 80154a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154ac:	ec55 4b10 	vmov	r4, r5, d0
 80154b0:	49b7      	ldr	r1, [pc, #732]	@ (8015790 <__ieee754_acos+0x2e8>)
 80154b2:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 80154b6:	428b      	cmp	r3, r1
 80154b8:	d919      	bls.n	80154ee <__ieee754_acos+0x46>
 80154ba:	f103 4340 	add.w	r3, r3, #3221225472	@ 0xc0000000
 80154be:	f503 1380 	add.w	r3, r3, #1048576	@ 0x100000
 80154c2:	4323      	orrs	r3, r4
 80154c4:	d106      	bne.n	80154d4 <__ieee754_acos+0x2c>
 80154c6:	2d00      	cmp	r5, #0
 80154c8:	f340 8210 	ble.w	80158ec <__ieee754_acos+0x444>
 80154cc:	ed9f 0b94 	vldr	d0, [pc, #592]	@ 8015720 <__ieee754_acos+0x278>
 80154d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154d4:	4622      	mov	r2, r4
 80154d6:	462b      	mov	r3, r5
 80154d8:	4620      	mov	r0, r4
 80154da:	4629      	mov	r1, r5
 80154dc:	f7ea feac 	bl	8000238 <__aeabi_dsub>
 80154e0:	4602      	mov	r2, r0
 80154e2:	460b      	mov	r3, r1
 80154e4:	f7eb f98a 	bl	80007fc <__aeabi_ddiv>
 80154e8:	ec41 0b10 	vmov	d0, r0, r1
 80154ec:	e7f0      	b.n	80154d0 <__ieee754_acos+0x28>
 80154ee:	49a9      	ldr	r1, [pc, #676]	@ (8015794 <__ieee754_acos+0x2ec>)
 80154f0:	428b      	cmp	r3, r1
 80154f2:	f200 8085 	bhi.w	8015600 <__ieee754_acos+0x158>
 80154f6:	4aa8      	ldr	r2, [pc, #672]	@ (8015798 <__ieee754_acos+0x2f0>)
 80154f8:	4293      	cmp	r3, r2
 80154fa:	f240 81fa 	bls.w	80158f2 <__ieee754_acos+0x44a>
 80154fe:	4622      	mov	r2, r4
 8015500:	462b      	mov	r3, r5
 8015502:	4620      	mov	r0, r4
 8015504:	4629      	mov	r1, r5
 8015506:	f7eb f84f 	bl	80005a8 <__aeabi_dmul>
 801550a:	a387      	add	r3, pc, #540	@ (adr r3, 8015728 <__ieee754_acos+0x280>)
 801550c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015510:	4606      	mov	r6, r0
 8015512:	460f      	mov	r7, r1
 8015514:	f7eb f848 	bl	80005a8 <__aeabi_dmul>
 8015518:	a385      	add	r3, pc, #532	@ (adr r3, 8015730 <__ieee754_acos+0x288>)
 801551a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801551e:	f7ea fe8d 	bl	800023c <__adddf3>
 8015522:	4632      	mov	r2, r6
 8015524:	463b      	mov	r3, r7
 8015526:	f7eb f83f 	bl	80005a8 <__aeabi_dmul>
 801552a:	a383      	add	r3, pc, #524	@ (adr r3, 8015738 <__ieee754_acos+0x290>)
 801552c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015530:	f7ea fe82 	bl	8000238 <__aeabi_dsub>
 8015534:	4632      	mov	r2, r6
 8015536:	463b      	mov	r3, r7
 8015538:	f7eb f836 	bl	80005a8 <__aeabi_dmul>
 801553c:	a380      	add	r3, pc, #512	@ (adr r3, 8015740 <__ieee754_acos+0x298>)
 801553e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015542:	f7ea fe7b 	bl	800023c <__adddf3>
 8015546:	4632      	mov	r2, r6
 8015548:	463b      	mov	r3, r7
 801554a:	f7eb f82d 	bl	80005a8 <__aeabi_dmul>
 801554e:	a37e      	add	r3, pc, #504	@ (adr r3, 8015748 <__ieee754_acos+0x2a0>)
 8015550:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015554:	f7ea fe70 	bl	8000238 <__aeabi_dsub>
 8015558:	4632      	mov	r2, r6
 801555a:	463b      	mov	r3, r7
 801555c:	f7eb f824 	bl	80005a8 <__aeabi_dmul>
 8015560:	a37b      	add	r3, pc, #492	@ (adr r3, 8015750 <__ieee754_acos+0x2a8>)
 8015562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015566:	f7ea fe69 	bl	800023c <__adddf3>
 801556a:	4632      	mov	r2, r6
 801556c:	463b      	mov	r3, r7
 801556e:	f7eb f81b 	bl	80005a8 <__aeabi_dmul>
 8015572:	a379      	add	r3, pc, #484	@ (adr r3, 8015758 <__ieee754_acos+0x2b0>)
 8015574:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015578:	4680      	mov	r8, r0
 801557a:	4689      	mov	r9, r1
 801557c:	4630      	mov	r0, r6
 801557e:	4639      	mov	r1, r7
 8015580:	f7eb f812 	bl	80005a8 <__aeabi_dmul>
 8015584:	a376      	add	r3, pc, #472	@ (adr r3, 8015760 <__ieee754_acos+0x2b8>)
 8015586:	e9d3 2300 	ldrd	r2, r3, [r3]
 801558a:	f7ea fe55 	bl	8000238 <__aeabi_dsub>
 801558e:	4632      	mov	r2, r6
 8015590:	463b      	mov	r3, r7
 8015592:	f7eb f809 	bl	80005a8 <__aeabi_dmul>
 8015596:	a374      	add	r3, pc, #464	@ (adr r3, 8015768 <__ieee754_acos+0x2c0>)
 8015598:	e9d3 2300 	ldrd	r2, r3, [r3]
 801559c:	f7ea fe4e 	bl	800023c <__adddf3>
 80155a0:	4632      	mov	r2, r6
 80155a2:	463b      	mov	r3, r7
 80155a4:	f7eb f800 	bl	80005a8 <__aeabi_dmul>
 80155a8:	a371      	add	r3, pc, #452	@ (adr r3, 8015770 <__ieee754_acos+0x2c8>)
 80155aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80155ae:	f7ea fe43 	bl	8000238 <__aeabi_dsub>
 80155b2:	4632      	mov	r2, r6
 80155b4:	463b      	mov	r3, r7
 80155b6:	f7ea fff7 	bl	80005a8 <__aeabi_dmul>
 80155ba:	4b78      	ldr	r3, [pc, #480]	@ (801579c <__ieee754_acos+0x2f4>)
 80155bc:	2200      	movs	r2, #0
 80155be:	f7ea fe3d 	bl	800023c <__adddf3>
 80155c2:	4602      	mov	r2, r0
 80155c4:	460b      	mov	r3, r1
 80155c6:	4640      	mov	r0, r8
 80155c8:	4649      	mov	r1, r9
 80155ca:	f7eb f917 	bl	80007fc <__aeabi_ddiv>
 80155ce:	4622      	mov	r2, r4
 80155d0:	462b      	mov	r3, r5
 80155d2:	f7ea ffe9 	bl	80005a8 <__aeabi_dmul>
 80155d6:	4602      	mov	r2, r0
 80155d8:	460b      	mov	r3, r1
 80155da:	a167      	add	r1, pc, #412	@ (adr r1, 8015778 <__ieee754_acos+0x2d0>)
 80155dc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80155e0:	f7ea fe2a 	bl	8000238 <__aeabi_dsub>
 80155e4:	4602      	mov	r2, r0
 80155e6:	460b      	mov	r3, r1
 80155e8:	4620      	mov	r0, r4
 80155ea:	4629      	mov	r1, r5
 80155ec:	f7ea fe24 	bl	8000238 <__aeabi_dsub>
 80155f0:	4602      	mov	r2, r0
 80155f2:	460b      	mov	r3, r1
 80155f4:	a162      	add	r1, pc, #392	@ (adr r1, 8015780 <__ieee754_acos+0x2d8>)
 80155f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80155fa:	f7ea fe1d 	bl	8000238 <__aeabi_dsub>
 80155fe:	e773      	b.n	80154e8 <__ieee754_acos+0x40>
 8015600:	2d00      	cmp	r5, #0
 8015602:	f280 80cf 	bge.w	80157a4 <__ieee754_acos+0x2fc>
 8015606:	4b65      	ldr	r3, [pc, #404]	@ (801579c <__ieee754_acos+0x2f4>)
 8015608:	2200      	movs	r2, #0
 801560a:	4620      	mov	r0, r4
 801560c:	4629      	mov	r1, r5
 801560e:	f7ea fe15 	bl	800023c <__adddf3>
 8015612:	4b63      	ldr	r3, [pc, #396]	@ (80157a0 <__ieee754_acos+0x2f8>)
 8015614:	2200      	movs	r2, #0
 8015616:	f7ea ffc7 	bl	80005a8 <__aeabi_dmul>
 801561a:	a343      	add	r3, pc, #268	@ (adr r3, 8015728 <__ieee754_acos+0x280>)
 801561c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015620:	4604      	mov	r4, r0
 8015622:	460d      	mov	r5, r1
 8015624:	f7ea ffc0 	bl	80005a8 <__aeabi_dmul>
 8015628:	a341      	add	r3, pc, #260	@ (adr r3, 8015730 <__ieee754_acos+0x288>)
 801562a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801562e:	f7ea fe05 	bl	800023c <__adddf3>
 8015632:	4622      	mov	r2, r4
 8015634:	462b      	mov	r3, r5
 8015636:	f7ea ffb7 	bl	80005a8 <__aeabi_dmul>
 801563a:	a33f      	add	r3, pc, #252	@ (adr r3, 8015738 <__ieee754_acos+0x290>)
 801563c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015640:	f7ea fdfa 	bl	8000238 <__aeabi_dsub>
 8015644:	4622      	mov	r2, r4
 8015646:	462b      	mov	r3, r5
 8015648:	f7ea ffae 	bl	80005a8 <__aeabi_dmul>
 801564c:	a33c      	add	r3, pc, #240	@ (adr r3, 8015740 <__ieee754_acos+0x298>)
 801564e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015652:	f7ea fdf3 	bl	800023c <__adddf3>
 8015656:	4622      	mov	r2, r4
 8015658:	462b      	mov	r3, r5
 801565a:	f7ea ffa5 	bl	80005a8 <__aeabi_dmul>
 801565e:	a33a      	add	r3, pc, #232	@ (adr r3, 8015748 <__ieee754_acos+0x2a0>)
 8015660:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015664:	f7ea fde8 	bl	8000238 <__aeabi_dsub>
 8015668:	4622      	mov	r2, r4
 801566a:	462b      	mov	r3, r5
 801566c:	f7ea ff9c 	bl	80005a8 <__aeabi_dmul>
 8015670:	a337      	add	r3, pc, #220	@ (adr r3, 8015750 <__ieee754_acos+0x2a8>)
 8015672:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015676:	f7ea fde1 	bl	800023c <__adddf3>
 801567a:	4622      	mov	r2, r4
 801567c:	462b      	mov	r3, r5
 801567e:	f7ea ff93 	bl	80005a8 <__aeabi_dmul>
 8015682:	a335      	add	r3, pc, #212	@ (adr r3, 8015758 <__ieee754_acos+0x2b0>)
 8015684:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015688:	4606      	mov	r6, r0
 801568a:	460f      	mov	r7, r1
 801568c:	4620      	mov	r0, r4
 801568e:	4629      	mov	r1, r5
 8015690:	f7ea ff8a 	bl	80005a8 <__aeabi_dmul>
 8015694:	a332      	add	r3, pc, #200	@ (adr r3, 8015760 <__ieee754_acos+0x2b8>)
 8015696:	e9d3 2300 	ldrd	r2, r3, [r3]
 801569a:	f7ea fdcd 	bl	8000238 <__aeabi_dsub>
 801569e:	4622      	mov	r2, r4
 80156a0:	462b      	mov	r3, r5
 80156a2:	f7ea ff81 	bl	80005a8 <__aeabi_dmul>
 80156a6:	a330      	add	r3, pc, #192	@ (adr r3, 8015768 <__ieee754_acos+0x2c0>)
 80156a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80156ac:	f7ea fdc6 	bl	800023c <__adddf3>
 80156b0:	4622      	mov	r2, r4
 80156b2:	462b      	mov	r3, r5
 80156b4:	f7ea ff78 	bl	80005a8 <__aeabi_dmul>
 80156b8:	a32d      	add	r3, pc, #180	@ (adr r3, 8015770 <__ieee754_acos+0x2c8>)
 80156ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80156be:	f7ea fdbb 	bl	8000238 <__aeabi_dsub>
 80156c2:	4622      	mov	r2, r4
 80156c4:	462b      	mov	r3, r5
 80156c6:	f7ea ff6f 	bl	80005a8 <__aeabi_dmul>
 80156ca:	4b34      	ldr	r3, [pc, #208]	@ (801579c <__ieee754_acos+0x2f4>)
 80156cc:	2200      	movs	r2, #0
 80156ce:	f7ea fdb5 	bl	800023c <__adddf3>
 80156d2:	ec45 4b10 	vmov	d0, r4, r5
 80156d6:	4680      	mov	r8, r0
 80156d8:	4689      	mov	r9, r1
 80156da:	f000 f9bb 	bl	8015a54 <__ieee754_sqrt>
 80156de:	ec55 4b10 	vmov	r4, r5, d0
 80156e2:	4642      	mov	r2, r8
 80156e4:	464b      	mov	r3, r9
 80156e6:	4630      	mov	r0, r6
 80156e8:	4639      	mov	r1, r7
 80156ea:	f7eb f887 	bl	80007fc <__aeabi_ddiv>
 80156ee:	4622      	mov	r2, r4
 80156f0:	462b      	mov	r3, r5
 80156f2:	f7ea ff59 	bl	80005a8 <__aeabi_dmul>
 80156f6:	a320      	add	r3, pc, #128	@ (adr r3, 8015778 <__ieee754_acos+0x2d0>)
 80156f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80156fc:	f7ea fd9c 	bl	8000238 <__aeabi_dsub>
 8015700:	4622      	mov	r2, r4
 8015702:	462b      	mov	r3, r5
 8015704:	f7ea fd9a 	bl	800023c <__adddf3>
 8015708:	4602      	mov	r2, r0
 801570a:	460b      	mov	r3, r1
 801570c:	f7ea fd96 	bl	800023c <__adddf3>
 8015710:	4602      	mov	r2, r0
 8015712:	460b      	mov	r3, r1
 8015714:	a11c      	add	r1, pc, #112	@ (adr r1, 8015788 <__ieee754_acos+0x2e0>)
 8015716:	e9d1 0100 	ldrd	r0, r1, [r1]
 801571a:	e76e      	b.n	80155fa <__ieee754_acos+0x152>
 801571c:	f3af 8000 	nop.w
	...
 8015728:	0dfdf709 	.word	0x0dfdf709
 801572c:	3f023de1 	.word	0x3f023de1
 8015730:	7501b288 	.word	0x7501b288
 8015734:	3f49efe0 	.word	0x3f49efe0
 8015738:	b5688f3b 	.word	0xb5688f3b
 801573c:	3fa48228 	.word	0x3fa48228
 8015740:	0e884455 	.word	0x0e884455
 8015744:	3fc9c155 	.word	0x3fc9c155
 8015748:	03eb6f7d 	.word	0x03eb6f7d
 801574c:	3fd4d612 	.word	0x3fd4d612
 8015750:	55555555 	.word	0x55555555
 8015754:	3fc55555 	.word	0x3fc55555
 8015758:	b12e9282 	.word	0xb12e9282
 801575c:	3fb3b8c5 	.word	0x3fb3b8c5
 8015760:	1b8d0159 	.word	0x1b8d0159
 8015764:	3fe6066c 	.word	0x3fe6066c
 8015768:	9c598ac8 	.word	0x9c598ac8
 801576c:	40002ae5 	.word	0x40002ae5
 8015770:	1c8a2d4b 	.word	0x1c8a2d4b
 8015774:	40033a27 	.word	0x40033a27
 8015778:	33145c07 	.word	0x33145c07
 801577c:	3c91a626 	.word	0x3c91a626
 8015780:	54442d18 	.word	0x54442d18
 8015784:	3ff921fb 	.word	0x3ff921fb
 8015788:	54442d18 	.word	0x54442d18
 801578c:	400921fb 	.word	0x400921fb
 8015790:	3fefffff 	.word	0x3fefffff
 8015794:	3fdfffff 	.word	0x3fdfffff
 8015798:	3c600000 	.word	0x3c600000
 801579c:	3ff00000 	.word	0x3ff00000
 80157a0:	3fe00000 	.word	0x3fe00000
 80157a4:	4622      	mov	r2, r4
 80157a6:	462b      	mov	r3, r5
 80157a8:	496b      	ldr	r1, [pc, #428]	@ (8015958 <__ieee754_acos+0x4b0>)
 80157aa:	2000      	movs	r0, #0
 80157ac:	f7ea fd44 	bl	8000238 <__aeabi_dsub>
 80157b0:	4b6a      	ldr	r3, [pc, #424]	@ (801595c <__ieee754_acos+0x4b4>)
 80157b2:	2200      	movs	r2, #0
 80157b4:	f7ea fef8 	bl	80005a8 <__aeabi_dmul>
 80157b8:	4604      	mov	r4, r0
 80157ba:	460d      	mov	r5, r1
 80157bc:	ec45 4b10 	vmov	d0, r4, r5
 80157c0:	f000 f948 	bl	8015a54 <__ieee754_sqrt>
 80157c4:	a34c      	add	r3, pc, #304	@ (adr r3, 80158f8 <__ieee754_acos+0x450>)
 80157c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157ca:	4620      	mov	r0, r4
 80157cc:	4629      	mov	r1, r5
 80157ce:	ec59 8b10 	vmov	r8, r9, d0
 80157d2:	f7ea fee9 	bl	80005a8 <__aeabi_dmul>
 80157d6:	a34a      	add	r3, pc, #296	@ (adr r3, 8015900 <__ieee754_acos+0x458>)
 80157d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157dc:	f7ea fd2e 	bl	800023c <__adddf3>
 80157e0:	4622      	mov	r2, r4
 80157e2:	462b      	mov	r3, r5
 80157e4:	f7ea fee0 	bl	80005a8 <__aeabi_dmul>
 80157e8:	a347      	add	r3, pc, #284	@ (adr r3, 8015908 <__ieee754_acos+0x460>)
 80157ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80157ee:	f7ea fd23 	bl	8000238 <__aeabi_dsub>
 80157f2:	4622      	mov	r2, r4
 80157f4:	462b      	mov	r3, r5
 80157f6:	f7ea fed7 	bl	80005a8 <__aeabi_dmul>
 80157fa:	a345      	add	r3, pc, #276	@ (adr r3, 8015910 <__ieee754_acos+0x468>)
 80157fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015800:	f7ea fd1c 	bl	800023c <__adddf3>
 8015804:	4622      	mov	r2, r4
 8015806:	462b      	mov	r3, r5
 8015808:	f7ea fece 	bl	80005a8 <__aeabi_dmul>
 801580c:	a342      	add	r3, pc, #264	@ (adr r3, 8015918 <__ieee754_acos+0x470>)
 801580e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015812:	f7ea fd11 	bl	8000238 <__aeabi_dsub>
 8015816:	4622      	mov	r2, r4
 8015818:	462b      	mov	r3, r5
 801581a:	f7ea fec5 	bl	80005a8 <__aeabi_dmul>
 801581e:	a340      	add	r3, pc, #256	@ (adr r3, 8015920 <__ieee754_acos+0x478>)
 8015820:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015824:	f7ea fd0a 	bl	800023c <__adddf3>
 8015828:	4622      	mov	r2, r4
 801582a:	462b      	mov	r3, r5
 801582c:	f7ea febc 	bl	80005a8 <__aeabi_dmul>
 8015830:	a33d      	add	r3, pc, #244	@ (adr r3, 8015928 <__ieee754_acos+0x480>)
 8015832:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015836:	4682      	mov	sl, r0
 8015838:	468b      	mov	fp, r1
 801583a:	4620      	mov	r0, r4
 801583c:	4629      	mov	r1, r5
 801583e:	f7ea feb3 	bl	80005a8 <__aeabi_dmul>
 8015842:	a33b      	add	r3, pc, #236	@ (adr r3, 8015930 <__ieee754_acos+0x488>)
 8015844:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015848:	f7ea fcf6 	bl	8000238 <__aeabi_dsub>
 801584c:	4622      	mov	r2, r4
 801584e:	462b      	mov	r3, r5
 8015850:	f7ea feaa 	bl	80005a8 <__aeabi_dmul>
 8015854:	a338      	add	r3, pc, #224	@ (adr r3, 8015938 <__ieee754_acos+0x490>)
 8015856:	e9d3 2300 	ldrd	r2, r3, [r3]
 801585a:	f7ea fcef 	bl	800023c <__adddf3>
 801585e:	4622      	mov	r2, r4
 8015860:	462b      	mov	r3, r5
 8015862:	f7ea fea1 	bl	80005a8 <__aeabi_dmul>
 8015866:	a336      	add	r3, pc, #216	@ (adr r3, 8015940 <__ieee754_acos+0x498>)
 8015868:	e9d3 2300 	ldrd	r2, r3, [r3]
 801586c:	f7ea fce4 	bl	8000238 <__aeabi_dsub>
 8015870:	4622      	mov	r2, r4
 8015872:	462b      	mov	r3, r5
 8015874:	f7ea fe98 	bl	80005a8 <__aeabi_dmul>
 8015878:	4b37      	ldr	r3, [pc, #220]	@ (8015958 <__ieee754_acos+0x4b0>)
 801587a:	2200      	movs	r2, #0
 801587c:	f7ea fcde 	bl	800023c <__adddf3>
 8015880:	4602      	mov	r2, r0
 8015882:	460b      	mov	r3, r1
 8015884:	4650      	mov	r0, sl
 8015886:	4659      	mov	r1, fp
 8015888:	f7ea ffb8 	bl	80007fc <__aeabi_ddiv>
 801588c:	4642      	mov	r2, r8
 801588e:	464b      	mov	r3, r9
 8015890:	f7ea fe8a 	bl	80005a8 <__aeabi_dmul>
 8015894:	2600      	movs	r6, #0
 8015896:	4682      	mov	sl, r0
 8015898:	468b      	mov	fp, r1
 801589a:	4632      	mov	r2, r6
 801589c:	464b      	mov	r3, r9
 801589e:	4630      	mov	r0, r6
 80158a0:	4649      	mov	r1, r9
 80158a2:	f7ea fe81 	bl	80005a8 <__aeabi_dmul>
 80158a6:	4602      	mov	r2, r0
 80158a8:	460b      	mov	r3, r1
 80158aa:	4620      	mov	r0, r4
 80158ac:	4629      	mov	r1, r5
 80158ae:	f7ea fcc3 	bl	8000238 <__aeabi_dsub>
 80158b2:	4632      	mov	r2, r6
 80158b4:	4604      	mov	r4, r0
 80158b6:	460d      	mov	r5, r1
 80158b8:	464b      	mov	r3, r9
 80158ba:	4640      	mov	r0, r8
 80158bc:	4649      	mov	r1, r9
 80158be:	f7ea fcbd 	bl	800023c <__adddf3>
 80158c2:	4602      	mov	r2, r0
 80158c4:	460b      	mov	r3, r1
 80158c6:	4620      	mov	r0, r4
 80158c8:	4629      	mov	r1, r5
 80158ca:	f7ea ff97 	bl	80007fc <__aeabi_ddiv>
 80158ce:	4602      	mov	r2, r0
 80158d0:	460b      	mov	r3, r1
 80158d2:	4650      	mov	r0, sl
 80158d4:	4659      	mov	r1, fp
 80158d6:	f7ea fcb1 	bl	800023c <__adddf3>
 80158da:	4632      	mov	r2, r6
 80158dc:	464b      	mov	r3, r9
 80158de:	f7ea fcad 	bl	800023c <__adddf3>
 80158e2:	4602      	mov	r2, r0
 80158e4:	460b      	mov	r3, r1
 80158e6:	f7ea fca9 	bl	800023c <__adddf3>
 80158ea:	e5fd      	b.n	80154e8 <__ieee754_acos+0x40>
 80158ec:	ed9f 0b16 	vldr	d0, [pc, #88]	@ 8015948 <__ieee754_acos+0x4a0>
 80158f0:	e5ee      	b.n	80154d0 <__ieee754_acos+0x28>
 80158f2:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8015950 <__ieee754_acos+0x4a8>
 80158f6:	e5eb      	b.n	80154d0 <__ieee754_acos+0x28>
 80158f8:	0dfdf709 	.word	0x0dfdf709
 80158fc:	3f023de1 	.word	0x3f023de1
 8015900:	7501b288 	.word	0x7501b288
 8015904:	3f49efe0 	.word	0x3f49efe0
 8015908:	b5688f3b 	.word	0xb5688f3b
 801590c:	3fa48228 	.word	0x3fa48228
 8015910:	0e884455 	.word	0x0e884455
 8015914:	3fc9c155 	.word	0x3fc9c155
 8015918:	03eb6f7d 	.word	0x03eb6f7d
 801591c:	3fd4d612 	.word	0x3fd4d612
 8015920:	55555555 	.word	0x55555555
 8015924:	3fc55555 	.word	0x3fc55555
 8015928:	b12e9282 	.word	0xb12e9282
 801592c:	3fb3b8c5 	.word	0x3fb3b8c5
 8015930:	1b8d0159 	.word	0x1b8d0159
 8015934:	3fe6066c 	.word	0x3fe6066c
 8015938:	9c598ac8 	.word	0x9c598ac8
 801593c:	40002ae5 	.word	0x40002ae5
 8015940:	1c8a2d4b 	.word	0x1c8a2d4b
 8015944:	40033a27 	.word	0x40033a27
 8015948:	54442d18 	.word	0x54442d18
 801594c:	400921fb 	.word	0x400921fb
 8015950:	54442d18 	.word	0x54442d18
 8015954:	3ff921fb 	.word	0x3ff921fb
 8015958:	3ff00000 	.word	0x3ff00000
 801595c:	3fe00000 	.word	0x3fe00000

08015960 <scalbn>:
 8015960:	b570      	push	{r4, r5, r6, lr}
 8015962:	ec55 4b10 	vmov	r4, r5, d0
 8015966:	f3c5 510a 	ubfx	r1, r5, #20, #11
 801596a:	4606      	mov	r6, r0
 801596c:	462b      	mov	r3, r5
 801596e:	b991      	cbnz	r1, 8015996 <scalbn+0x36>
 8015970:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8015974:	4323      	orrs	r3, r4
 8015976:	d03b      	beq.n	80159f0 <scalbn+0x90>
 8015978:	4b33      	ldr	r3, [pc, #204]	@ (8015a48 <scalbn+0xe8>)
 801597a:	4620      	mov	r0, r4
 801597c:	4629      	mov	r1, r5
 801597e:	2200      	movs	r2, #0
 8015980:	f7ea fe12 	bl	80005a8 <__aeabi_dmul>
 8015984:	4b31      	ldr	r3, [pc, #196]	@ (8015a4c <scalbn+0xec>)
 8015986:	429e      	cmp	r6, r3
 8015988:	4604      	mov	r4, r0
 801598a:	460d      	mov	r5, r1
 801598c:	da0f      	bge.n	80159ae <scalbn+0x4e>
 801598e:	a326      	add	r3, pc, #152	@ (adr r3, 8015a28 <scalbn+0xc8>)
 8015990:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015994:	e01e      	b.n	80159d4 <scalbn+0x74>
 8015996:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 801599a:	4291      	cmp	r1, r2
 801599c:	d10b      	bne.n	80159b6 <scalbn+0x56>
 801599e:	4622      	mov	r2, r4
 80159a0:	4620      	mov	r0, r4
 80159a2:	4629      	mov	r1, r5
 80159a4:	f7ea fc4a 	bl	800023c <__adddf3>
 80159a8:	4604      	mov	r4, r0
 80159aa:	460d      	mov	r5, r1
 80159ac:	e020      	b.n	80159f0 <scalbn+0x90>
 80159ae:	460b      	mov	r3, r1
 80159b0:	f3c1 510a 	ubfx	r1, r1, #20, #11
 80159b4:	3936      	subs	r1, #54	@ 0x36
 80159b6:	f24c 3250 	movw	r2, #50000	@ 0xc350
 80159ba:	4296      	cmp	r6, r2
 80159bc:	dd0d      	ble.n	80159da <scalbn+0x7a>
 80159be:	2d00      	cmp	r5, #0
 80159c0:	a11b      	add	r1, pc, #108	@ (adr r1, 8015a30 <scalbn+0xd0>)
 80159c2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80159c6:	da02      	bge.n	80159ce <scalbn+0x6e>
 80159c8:	a11b      	add	r1, pc, #108	@ (adr r1, 8015a38 <scalbn+0xd8>)
 80159ca:	e9d1 0100 	ldrd	r0, r1, [r1]
 80159ce:	a318      	add	r3, pc, #96	@ (adr r3, 8015a30 <scalbn+0xd0>)
 80159d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80159d4:	f7ea fde8 	bl	80005a8 <__aeabi_dmul>
 80159d8:	e7e6      	b.n	80159a8 <scalbn+0x48>
 80159da:	1872      	adds	r2, r6, r1
 80159dc:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 80159e0:	428a      	cmp	r2, r1
 80159e2:	dcec      	bgt.n	80159be <scalbn+0x5e>
 80159e4:	2a00      	cmp	r2, #0
 80159e6:	dd06      	ble.n	80159f6 <scalbn+0x96>
 80159e8:	f36f 531e 	bfc	r3, #20, #11
 80159ec:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80159f0:	ec45 4b10 	vmov	d0, r4, r5
 80159f4:	bd70      	pop	{r4, r5, r6, pc}
 80159f6:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 80159fa:	da08      	bge.n	8015a0e <scalbn+0xae>
 80159fc:	2d00      	cmp	r5, #0
 80159fe:	a10a      	add	r1, pc, #40	@ (adr r1, 8015a28 <scalbn+0xc8>)
 8015a00:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015a04:	dac3      	bge.n	801598e <scalbn+0x2e>
 8015a06:	a10e      	add	r1, pc, #56	@ (adr r1, 8015a40 <scalbn+0xe0>)
 8015a08:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015a0c:	e7bf      	b.n	801598e <scalbn+0x2e>
 8015a0e:	3236      	adds	r2, #54	@ 0x36
 8015a10:	f36f 531e 	bfc	r3, #20, #11
 8015a14:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015a18:	4620      	mov	r0, r4
 8015a1a:	4b0d      	ldr	r3, [pc, #52]	@ (8015a50 <scalbn+0xf0>)
 8015a1c:	4629      	mov	r1, r5
 8015a1e:	2200      	movs	r2, #0
 8015a20:	e7d8      	b.n	80159d4 <scalbn+0x74>
 8015a22:	bf00      	nop
 8015a24:	f3af 8000 	nop.w
 8015a28:	c2f8f359 	.word	0xc2f8f359
 8015a2c:	01a56e1f 	.word	0x01a56e1f
 8015a30:	8800759c 	.word	0x8800759c
 8015a34:	7e37e43c 	.word	0x7e37e43c
 8015a38:	8800759c 	.word	0x8800759c
 8015a3c:	fe37e43c 	.word	0xfe37e43c
 8015a40:	c2f8f359 	.word	0xc2f8f359
 8015a44:	81a56e1f 	.word	0x81a56e1f
 8015a48:	43500000 	.word	0x43500000
 8015a4c:	ffff3cb0 	.word	0xffff3cb0
 8015a50:	3c900000 	.word	0x3c900000

08015a54 <__ieee754_sqrt>:
 8015a54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a58:	4a66      	ldr	r2, [pc, #408]	@ (8015bf4 <__ieee754_sqrt+0x1a0>)
 8015a5a:	ec55 4b10 	vmov	r4, r5, d0
 8015a5e:	43aa      	bics	r2, r5
 8015a60:	462b      	mov	r3, r5
 8015a62:	4621      	mov	r1, r4
 8015a64:	d110      	bne.n	8015a88 <__ieee754_sqrt+0x34>
 8015a66:	4622      	mov	r2, r4
 8015a68:	4620      	mov	r0, r4
 8015a6a:	4629      	mov	r1, r5
 8015a6c:	f7ea fd9c 	bl	80005a8 <__aeabi_dmul>
 8015a70:	4602      	mov	r2, r0
 8015a72:	460b      	mov	r3, r1
 8015a74:	4620      	mov	r0, r4
 8015a76:	4629      	mov	r1, r5
 8015a78:	f7ea fbe0 	bl	800023c <__adddf3>
 8015a7c:	4604      	mov	r4, r0
 8015a7e:	460d      	mov	r5, r1
 8015a80:	ec45 4b10 	vmov	d0, r4, r5
 8015a84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a88:	2d00      	cmp	r5, #0
 8015a8a:	dc0e      	bgt.n	8015aaa <__ieee754_sqrt+0x56>
 8015a8c:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8015a90:	4322      	orrs	r2, r4
 8015a92:	d0f5      	beq.n	8015a80 <__ieee754_sqrt+0x2c>
 8015a94:	b19d      	cbz	r5, 8015abe <__ieee754_sqrt+0x6a>
 8015a96:	4622      	mov	r2, r4
 8015a98:	4620      	mov	r0, r4
 8015a9a:	4629      	mov	r1, r5
 8015a9c:	f7ea fbcc 	bl	8000238 <__aeabi_dsub>
 8015aa0:	4602      	mov	r2, r0
 8015aa2:	460b      	mov	r3, r1
 8015aa4:	f7ea feaa 	bl	80007fc <__aeabi_ddiv>
 8015aa8:	e7e8      	b.n	8015a7c <__ieee754_sqrt+0x28>
 8015aaa:	152a      	asrs	r2, r5, #20
 8015aac:	d115      	bne.n	8015ada <__ieee754_sqrt+0x86>
 8015aae:	2000      	movs	r0, #0
 8015ab0:	e009      	b.n	8015ac6 <__ieee754_sqrt+0x72>
 8015ab2:	0acb      	lsrs	r3, r1, #11
 8015ab4:	3a15      	subs	r2, #21
 8015ab6:	0549      	lsls	r1, r1, #21
 8015ab8:	2b00      	cmp	r3, #0
 8015aba:	d0fa      	beq.n	8015ab2 <__ieee754_sqrt+0x5e>
 8015abc:	e7f7      	b.n	8015aae <__ieee754_sqrt+0x5a>
 8015abe:	462a      	mov	r2, r5
 8015ac0:	e7fa      	b.n	8015ab8 <__ieee754_sqrt+0x64>
 8015ac2:	005b      	lsls	r3, r3, #1
 8015ac4:	3001      	adds	r0, #1
 8015ac6:	02dc      	lsls	r4, r3, #11
 8015ac8:	d5fb      	bpl.n	8015ac2 <__ieee754_sqrt+0x6e>
 8015aca:	1e44      	subs	r4, r0, #1
 8015acc:	1b12      	subs	r2, r2, r4
 8015ace:	f1c0 0420 	rsb	r4, r0, #32
 8015ad2:	fa21 f404 	lsr.w	r4, r1, r4
 8015ad6:	4323      	orrs	r3, r4
 8015ad8:	4081      	lsls	r1, r0
 8015ada:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8015ade:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8015ae2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8015ae6:	07d2      	lsls	r2, r2, #31
 8015ae8:	bf5c      	itt	pl
 8015aea:	005b      	lslpl	r3, r3, #1
 8015aec:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8015af0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8015af4:	bf58      	it	pl
 8015af6:	0049      	lslpl	r1, r1, #1
 8015af8:	2600      	movs	r6, #0
 8015afa:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8015afe:	107f      	asrs	r7, r7, #1
 8015b00:	0049      	lsls	r1, r1, #1
 8015b02:	2016      	movs	r0, #22
 8015b04:	4632      	mov	r2, r6
 8015b06:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8015b0a:	1915      	adds	r5, r2, r4
 8015b0c:	429d      	cmp	r5, r3
 8015b0e:	bfde      	ittt	le
 8015b10:	192a      	addle	r2, r5, r4
 8015b12:	1b5b      	suble	r3, r3, r5
 8015b14:	1936      	addle	r6, r6, r4
 8015b16:	0fcd      	lsrs	r5, r1, #31
 8015b18:	3801      	subs	r0, #1
 8015b1a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015b1e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8015b22:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8015b26:	d1f0      	bne.n	8015b0a <__ieee754_sqrt+0xb6>
 8015b28:	4605      	mov	r5, r0
 8015b2a:	2420      	movs	r4, #32
 8015b2c:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8015b30:	4293      	cmp	r3, r2
 8015b32:	eb0c 0e00 	add.w	lr, ip, r0
 8015b36:	dc02      	bgt.n	8015b3e <__ieee754_sqrt+0xea>
 8015b38:	d113      	bne.n	8015b62 <__ieee754_sqrt+0x10e>
 8015b3a:	458e      	cmp	lr, r1
 8015b3c:	d811      	bhi.n	8015b62 <__ieee754_sqrt+0x10e>
 8015b3e:	f1be 0f00 	cmp.w	lr, #0
 8015b42:	eb0e 000c 	add.w	r0, lr, ip
 8015b46:	da3f      	bge.n	8015bc8 <__ieee754_sqrt+0x174>
 8015b48:	2800      	cmp	r0, #0
 8015b4a:	db3d      	blt.n	8015bc8 <__ieee754_sqrt+0x174>
 8015b4c:	f102 0801 	add.w	r8, r2, #1
 8015b50:	1a9b      	subs	r3, r3, r2
 8015b52:	458e      	cmp	lr, r1
 8015b54:	bf88      	it	hi
 8015b56:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8015b5a:	eba1 010e 	sub.w	r1, r1, lr
 8015b5e:	4465      	add	r5, ip
 8015b60:	4642      	mov	r2, r8
 8015b62:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8015b66:	3c01      	subs	r4, #1
 8015b68:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8015b6c:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8015b70:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8015b74:	d1dc      	bne.n	8015b30 <__ieee754_sqrt+0xdc>
 8015b76:	4319      	orrs	r1, r3
 8015b78:	d01b      	beq.n	8015bb2 <__ieee754_sqrt+0x15e>
 8015b7a:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8015bf8 <__ieee754_sqrt+0x1a4>
 8015b7e:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 8015bfc <__ieee754_sqrt+0x1a8>
 8015b82:	e9da 0100 	ldrd	r0, r1, [sl]
 8015b86:	e9db 2300 	ldrd	r2, r3, [fp]
 8015b8a:	f7ea fb55 	bl	8000238 <__aeabi_dsub>
 8015b8e:	e9da 8900 	ldrd	r8, r9, [sl]
 8015b92:	4602      	mov	r2, r0
 8015b94:	460b      	mov	r3, r1
 8015b96:	4640      	mov	r0, r8
 8015b98:	4649      	mov	r1, r9
 8015b9a:	f7ea ff81 	bl	8000aa0 <__aeabi_dcmple>
 8015b9e:	b140      	cbz	r0, 8015bb2 <__ieee754_sqrt+0x15e>
 8015ba0:	f1b5 3fff 	cmp.w	r5, #4294967295
 8015ba4:	e9da 0100 	ldrd	r0, r1, [sl]
 8015ba8:	e9db 2300 	ldrd	r2, r3, [fp]
 8015bac:	d10e      	bne.n	8015bcc <__ieee754_sqrt+0x178>
 8015bae:	3601      	adds	r6, #1
 8015bb0:	4625      	mov	r5, r4
 8015bb2:	1073      	asrs	r3, r6, #1
 8015bb4:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 8015bb8:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 8015bbc:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 8015bc0:	086b      	lsrs	r3, r5, #1
 8015bc2:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 8015bc6:	e759      	b.n	8015a7c <__ieee754_sqrt+0x28>
 8015bc8:	4690      	mov	r8, r2
 8015bca:	e7c1      	b.n	8015b50 <__ieee754_sqrt+0xfc>
 8015bcc:	f7ea fb36 	bl	800023c <__adddf3>
 8015bd0:	e9da 8900 	ldrd	r8, r9, [sl]
 8015bd4:	4602      	mov	r2, r0
 8015bd6:	460b      	mov	r3, r1
 8015bd8:	4640      	mov	r0, r8
 8015bda:	4649      	mov	r1, r9
 8015bdc:	f7ea ff56 	bl	8000a8c <__aeabi_dcmplt>
 8015be0:	b120      	cbz	r0, 8015bec <__ieee754_sqrt+0x198>
 8015be2:	1cab      	adds	r3, r5, #2
 8015be4:	bf08      	it	eq
 8015be6:	3601      	addeq	r6, #1
 8015be8:	3502      	adds	r5, #2
 8015bea:	e7e2      	b.n	8015bb2 <__ieee754_sqrt+0x15e>
 8015bec:	1c6b      	adds	r3, r5, #1
 8015bee:	f023 0501 	bic.w	r5, r3, #1
 8015bf2:	e7de      	b.n	8015bb2 <__ieee754_sqrt+0x15e>
 8015bf4:	7ff00000 	.word	0x7ff00000
 8015bf8:	08019b00 	.word	0x08019b00
 8015bfc:	08019af8 	.word	0x08019af8

08015c00 <_init>:
 8015c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c02:	bf00      	nop
 8015c04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015c06:	bc08      	pop	{r3}
 8015c08:	469e      	mov	lr, r3
 8015c0a:	4770      	bx	lr

08015c0c <_fini>:
 8015c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c0e:	bf00      	nop
 8015c10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8015c12:	bc08      	pop	{r3}
 8015c14:	469e      	mov	lr, r3
 8015c16:	4770      	bx	lr
